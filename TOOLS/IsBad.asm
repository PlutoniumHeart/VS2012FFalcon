; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\TOOLS\IsBad\IsBad.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?F4IsBadReadPtr@@YA_NPBXI@Z			; F4IsBadReadPtr
PUBLIC	?F4IsBadCodePtr@@YA_NPAX@Z			; F4IsBadCodePtr
PUBLIC	?F4IsBadWritePtr@@YA_NPAXI@Z			; F4IsBadWritePtr
PUBLIC	_F4IsBadReadPtrC
PUBLIC	_F4IsBadCodePtrC
PUBLIC	_F4IsBadWritePtrC
PUBLIC	??_C@_03HCLPHHMJ@bla?$AA@			; `string'
EXTRN	__imp__IsBadReadPtr@8:PROC
EXTRN	__imp__IsBadWritePtr@8:PROC
EXTRN	__imp__IsBadCodePtr@4:PROC
EXTRN	_printf:PROC
;	COMDAT ??_C@_03HCLPHHMJ@bla?$AA@
CONST	SEGMENT
??_C@_03HCLPHHMJ@bla?$AA@ DB 'bla', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_lp$ = 8						; size = 4
_ucb$ = 12						; size = 4
_F4IsBadWritePtrC PROC

; 41   : extern "C" int F4IsBadWritePtrC(void* lp, unsigned int ucb){

	push	ebp
	mov	ebp, esp

; 42   : 	return F4IsBadWritePtr(lp, ucb);

	mov	eax, DWORD PTR _ucb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	call	?F4IsBadWritePtr@@YA_NPAXI@Z		; F4IsBadWritePtr
	add	esp, 8
	movzx	eax, al

; 43   : }

	pop	ebp
	ret	0
_F4IsBadWritePtrC ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_lpfn$ = 8						; size = 4
_F4IsBadCodePtrC PROC

; 37   : extern "C" int F4IsBadCodePtrC(void* lpfn){

	push	ebp
	mov	ebp, esp

; 38   : 	return F4IsBadCodePtr(lpfn);

	mov	eax, DWORD PTR _lpfn$[ebp]
	push	eax
	call	?F4IsBadCodePtr@@YA_NPAX@Z		; F4IsBadCodePtr
	add	esp, 4
	movzx	eax, al

; 39   : }

	pop	ebp
	ret	0
_F4IsBadCodePtrC ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_lp$ = 8						; size = 4
_ucb$ = 12						; size = 4
_F4IsBadReadPtrC PROC

; 33   : extern "C" int F4IsBadReadPtrC(const void* lp, unsigned int ucb){

	push	ebp
	mov	ebp, esp

; 34   : 	return F4IsBadReadPtr(lp, ucb);

	mov	eax, DWORD PTR _ucb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	eax, al

; 35   : }

	pop	ebp
	ret	0
_F4IsBadReadPtrC ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_ret$ = -8						; size = 4
tv70 = -1						; size = 1
_lp$ = 8						; size = 4
_ucb$ = 12						; size = 4
?F4IsBadWritePtr@@YA_NPAXI@Z PROC			; F4IsBadWritePtr

; 25   : bool F4IsBadWritePtr(void* lp, unsigned int ucb){

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 26   : 	BOOL ret = IsBadWritePtr(lp, ucb);

	mov	eax, DWORD PTR _ucb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	mov	DWORD PTR _ret$[ebp], eax

; 27   : 	if (ret){

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN1@F4IsBadWri

; 28   : 		printf("bla");

	push	OFFSET ??_C@_03HCLPHHMJ@bla?$AA@
	call	_printf
	add	esp, 4
$LN1@F4IsBadWri:

; 29   : 	}
; 30   : 	return ret ? true : false;

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN4@F4IsBadWri
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@F4IsBadWri
$LN4@F4IsBadWri:
	mov	BYTE PTR tv70[ebp], 0
$LN5@F4IsBadWri:
	mov	al, BYTE PTR tv70[ebp]

; 31   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F4IsBadWritePtr@@YA_NPAXI@Z ENDP			; F4IsBadWritePtr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_ret$ = -8						; size = 4
tv69 = -1						; size = 1
_lpfn$ = 8						; size = 4
?F4IsBadCodePtr@@YA_NPAX@Z PROC				; F4IsBadCodePtr

; 17   : bool F4IsBadCodePtr(void* lpfn){

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 18   : 	BOOL ret = IsBadCodePtr((FARPROC) lpfn);

	mov	eax, DWORD PTR _lpfn$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadCodePtr@4
	mov	DWORD PTR _ret$[ebp], eax

; 19   : 	if (ret){

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN1@F4IsBadCod

; 20   : 		printf("bla");

	push	OFFSET ??_C@_03HCLPHHMJ@bla?$AA@
	call	_printf
	add	esp, 4
$LN1@F4IsBadCod:

; 21   : 	}
; 22   : 	return ret ? true : false;

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN4@F4IsBadCod
	mov	BYTE PTR tv69[ebp], 1
	jmp	SHORT $LN5@F4IsBadCod
$LN4@F4IsBadCod:
	mov	BYTE PTR tv69[ebp], 0
$LN5@F4IsBadCod:
	mov	al, BYTE PTR tv69[ebp]

; 23   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F4IsBadCodePtr@@YA_NPAX@Z ENDP				; F4IsBadCodePtr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\tools\isbad\isbad.cpp
_TEXT	SEGMENT
_ret$ = -8						; size = 4
tv70 = -1						; size = 1
_lp$ = 8						; size = 4
_ucb$ = 12						; size = 4
?F4IsBadReadPtr@@YA_NPBXI@Z PROC			; F4IsBadReadPtr

; 9    : bool F4IsBadReadPtr(const void* lp, unsigned int ucb){

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 10   : 	BOOL ret = IsBadReadPtr(lp, ucb);

	mov	eax, DWORD PTR _ucb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lp$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadReadPtr@8
	mov	DWORD PTR _ret$[ebp], eax

; 11   : 	if (ret){

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN1@F4IsBadRea

; 12   : 		printf("bla");

	push	OFFSET ??_C@_03HCLPHHMJ@bla?$AA@
	call	_printf
	add	esp, 4
$LN1@F4IsBadRea:

; 13   : 	}
; 14   : 	return ret ? true : false;

	cmp	DWORD PTR _ret$[ebp], 0
	je	SHORT $LN4@F4IsBadRea
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN5@F4IsBadRea
$LN4@F4IsBadRea:
	mov	BYTE PTR tv70[ebp], 0
$LN5@F4IsBadRea:
	mov	al, BYTE PTR tv70[ebp]

; 15   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F4IsBadReadPtr@@YA_NPBXI@Z ENDP			; F4IsBadReadPtr
_TEXT	ENDS
END
