; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\crashhandler\IsNT.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_g_bHasVersion DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_g_bIsNT DD	01H
_DATA	ENDS
PUBLIC	_IsNT@0
EXTRN	_memset:PROC
EXTRN	__imp__GetVersionExA@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\crashhandler\isnt.cpp
_TEXT	SEGMENT
_bRet$ = -164						; size = 4
tv66 = -160						; size = 4
tv75 = -156						; size = 4
_stOSVI$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
_IsNT@0	PROC

; 20   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 21   :     if ( TRUE == g_bHasVersion )

	cmp	DWORD PTR _g_bHasVersion, 1
	jne	SHORT $LN4@IsNT

; 22   :     {
; 23   :         return ( TRUE == g_bIsNT ) ;

	cmp	DWORD PTR _g_bIsNT, 1
	jne	SHORT $LN7@IsNT
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN8@IsNT
$LN7@IsNT:
	mov	DWORD PTR tv66[ebp], 0
$LN8@IsNT:
	mov	eax, DWORD PTR tv66[ebp]
	jmp	$LN5@IsNT
$LN4@IsNT:

; 24   :     }
; 25   : 
; 26   :     OSVERSIONINFO stOSVI ;
; 27   : 
; 28   :     memset ( &stOSVI , NULL , sizeof ( OSVERSIONINFO ) ) ;

	push	148					; 00000094H
	push	0
	lea	eax, DWORD PTR _stOSVI$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 29   :     stOSVI.dwOSVersionInfoSize = sizeof ( OSVERSIONINFO ) ;

	mov	DWORD PTR _stOSVI$[ebp], 148		; 00000094H

; 30   : 
; 31   :     BOOL bRet = GetVersionEx ( &stOSVI ) ;

	lea	ecx, DWORD PTR _stOSVI$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetVersionExA@4
	mov	DWORD PTR _bRet$[ebp], eax

; 32   :     ASSERT ( TRUE == bRet ) ;
; 33   :     if ( FALSE == bRet )

	cmp	DWORD PTR _bRet$[ebp], 0
	jne	SHORT $LN3@IsNT

; 34   :     {
; 35   :         TRACE0 ( "GetVersionEx failed!\n" ) ;
; 36   :         return ( FALSE ) ;

	xor	eax, eax
	jmp	SHORT $LN5@IsNT
$LN3@IsNT:

; 37   :     }
; 38   : 
; 39   :     // Check the version and call the appropriate thing.
; 40   :     if ( VER_PLATFORM_WIN32_NT == stOSVI.dwPlatformId )

	cmp	DWORD PTR _stOSVI$[ebp+16], 2
	jne	SHORT $LN2@IsNT

; 41   :     {
; 42   :         g_bIsNT = TRUE ;

	mov	DWORD PTR _g_bIsNT, 1

; 43   :     }
; 44   :     else

	jmp	SHORT $LN1@IsNT
$LN2@IsNT:

; 45   :     {
; 46   :         g_bIsNT = FALSE ;

	mov	DWORD PTR _g_bIsNT, 0
$LN1@IsNT:

; 47   :     }
; 48   :     g_bHasVersion = TRUE ;

	mov	DWORD PTR _g_bHasVersion, 1

; 49   :     return ( TRUE == g_bIsNT ) ;

	cmp	DWORD PTR _g_bIsNT, 1
	jne	SHORT $LN9@IsNT
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN10@IsNT
$LN9@IsNT:
	mov	DWORD PTR tv75[ebp], 0
$LN10@IsNT:
	mov	eax, DWORD PTR tv75[ebp]
$LN5@IsNT:

; 50   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_IsNT@0	ENDP
_TEXT	ENDS
END
