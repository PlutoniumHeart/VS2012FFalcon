; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\DIGI\facbrain.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?CleanupBoom@BaseBrain@@UAEXXZ			; BaseBrain::CleanupBoom
PUBLIC	?IsTanker@DigitalBrain@@UAEHXZ			; DigitalBrain::IsTanker
PUBLIC	?InitBoom@DigitalBrain@@UAEXXZ			; DigitalBrain::InitBoom
PUBLIC	?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z ; FACBrain::RequestTarget
PUBLIC	?RequestMark@FACBrain@@QAEXXZ			; FACBrain::RequestMark
PUBLIC	?RequestLocation@FACBrain@@QAEXXZ		; FACBrain::RequestLocation
PUBLIC	?RequestTACAN@FACBrain@@QAEXXZ			; FACBrain::RequestTACAN
PUBLIC	?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z ; FACBrain::RequestBDA
PUBLIC	?AssignTarget@FACBrain@@QAEPAVSimBaseClass@@XZ	; FACBrain::AssignTarget
PUBLIC	?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z	; FACBrain::AddToQ
PUBLIC	?RemoveFromQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z ; FACBrain::RemoveFromQ
PUBLIC	?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z	; FACBrain::FrameExec
PUBLIC	??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z ; FACBrain::FACBrain
PUBLIC	??1FACBrain@@UAE@XZ				; FACBrain::~FACBrain
PUBLIC	?PostInsert@FACBrain@@UAEXXZ			; FACBrain::PostInsert
PUBLIC	??_GFACBrain@@UAEPAXI@Z				; FACBrain::`scalar deleting destructor'
PUBLIC	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
PUBLIC	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	??_7FACBrain@@6B@				; FACBrain::`vftable'
PUBLIC	??_R4FACBrain@@6B@				; FACBrain::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFACBrain@@@8				; FACBrain `RTTI Type Descriptor'
PUBLIC	??_R3FACBrain@@8				; FACBrain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FACBrain@@8				; FACBrain::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FACBrain@@8			; FACBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@DigitalBrain@@8			; DigitalBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVDigitalBrain@@@8			; DigitalBrain `RTTI Type Descriptor'
PUBLIC	??_R3DigitalBrain@@8				; DigitalBrain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DigitalBrain@@8				; DigitalBrain::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BaseBrain@@8			; BaseBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBaseBrain@@@8				; BaseBrain `RTTI Type Descriptor'
PUBLIC	??_R3BaseBrain@@8				; BaseBrain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BaseBrain@@8				; BaseBrain::`RTTI Base Class Array'
PUBLIC	__real@00000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Register@VuCollection@@QAEXXZ:PROC		; VuCollection::Register
EXTRN	?Unregister@VuCollection@@QAEXXZ:PROC		; VuCollection::Unregister
EXTRN	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z:PROC	; VuCollection::Remove
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??0TailInsertList@@QAE@PAVVuFilter@@@Z:PROC	; TailInsertList::TailInsertList
EXTRN	?ForcedInsert@TailInsertList@@QAEHPAVVuEntity@@@Z:PROC ; TailInsertList::ForcedInsert
EXTRN	?SetTarget@DigitalBrain@@MAEXPAVSimObjectType@@@Z:PROC ; DigitalBrain::SetTarget
EXTRN	??0DigitalBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z:PROC ; DigitalBrain::DigitalBrain
EXTRN	??1DigitalBrain@@UAE@XZ:PROC			; DigitalBrain::~DigitalBrain
EXTRN	?Sleep@DigitalBrain@@UAEXXZ:PROC		; DigitalBrain::Sleep
EXTRN	?ReceiveOrders@DigitalBrain@@UAEXPAVFalconEvent@@@Z:PROC ; DigitalBrain::ReceiveOrders
EXTRN	?JoinFlight@DigitalBrain@@UAEXXZ:PROC		; DigitalBrain::JoinFlight
EXTRN	?SetLead@DigitalBrain@@UAEXH@Z:PROC		; DigitalBrain::SetLead
EXTRN	?FrameExec@DigitalBrain@@UAEXPAVSimObjectType@@0@Z:PROC ; DigitalBrain::FrameExec
EXTRN	??_EFACBrain@@UAEPAXI@Z:PROC			; FACBrain::`vector deleting destructor'
EXTRN	?GetComponentEntity@CampBaseClass@@QAEPAVSimBaseClass@@H@Z:PROC ; CampBaseClass::GetComponentEntity
EXTRN	?NumberOfComponents@CampBaseClass@@QAEHXZ:PROC	; CampBaseClass::NumberOfComponents
EXTRN	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconFACMessage::FalconFACMessage
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?FalconNothingFilter@@3VFalconNothingFilterType@@A:DWORD ; FalconNothingFilter
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2BaseBrain@@8
rdata$r	SEGMENT
??_R2BaseBrain@@8 DD FLAT:??_R1A@?0A@EA@BaseBrain@@8	; BaseBrain::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3BaseBrain@@8
rdata$r	SEGMENT
??_R3BaseBrain@@8 DD 00H				; BaseBrain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2BaseBrain@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBaseBrain@@@8
_DATA	SEGMENT
??_R0?AVBaseBrain@@@8 DD FLAT:??_7type_info@@6B@	; BaseBrain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBaseBrain@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@BaseBrain@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BaseBrain@@8 DD FLAT:??_R0?AVBaseBrain@@@8 ; BaseBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BaseBrain@@8
rdata$r	ENDS
;	COMDAT ??_R2DigitalBrain@@8
rdata$r	SEGMENT
??_R2DigitalBrain@@8 DD FLAT:??_R1A@?0A@EA@DigitalBrain@@8 ; DigitalBrain::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BaseBrain@@8
rdata$r	ENDS
;	COMDAT ??_R3DigitalBrain@@8
rdata$r	SEGMENT
??_R3DigitalBrain@@8 DD 00H				; DigitalBrain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DigitalBrain@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDigitalBrain@@@8
_DATA	SEGMENT
??_R0?AVDigitalBrain@@@8 DD FLAT:??_7type_info@@6B@	; DigitalBrain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDigitalBrain@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@DigitalBrain@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DigitalBrain@@8 DD FLAT:??_R0?AVDigitalBrain@@@8 ; DigitalBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DigitalBrain@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FACBrain@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FACBrain@@8 DD FLAT:??_R0?AVFACBrain@@@8	; FACBrain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FACBrain@@8
rdata$r	ENDS
;	COMDAT ??_R2FACBrain@@8
rdata$r	SEGMENT
??_R2FACBrain@@8 DD FLAT:??_R1A@?0A@EA@FACBrain@@8	; FACBrain::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DigitalBrain@@8
	DD	FLAT:??_R1A@?0A@EA@BaseBrain@@8
rdata$r	ENDS
;	COMDAT ??_R3FACBrain@@8
rdata$r	SEGMENT
??_R3FACBrain@@8 DD 00H					; FACBrain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FACBrain@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFACBrain@@@8
_DATA	SEGMENT
??_R0?AVFACBrain@@@8 DD FLAT:??_7type_info@@6B@		; FACBrain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFACBrain@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FACBrain@@6B@
rdata$r	SEGMENT
??_R4FACBrain@@6B@ DD 00H				; FACBrain::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFACBrain@@@8
	DD	FLAT:??_R3FACBrain@@8
rdata$r	ENDS
;	COMDAT ??_7FACBrain@@6B@
CONST	SEGMENT
??_7FACBrain@@6B@ DD FLAT:??_R4FACBrain@@6B@		; FACBrain::`vftable'
	DD	FLAT:??_EFACBrain@@UAEPAXI@Z
	DD	FLAT:?ReceiveOrders@DigitalBrain@@UAEXPAVFalconEvent@@@Z
	DD	FLAT:?JoinFlight@DigitalBrain@@UAEXXZ
	DD	FLAT:?SetLead@DigitalBrain@@UAEXH@Z
	DD	FLAT:?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z
	DD	FLAT:?PostInsert@FACBrain@@UAEXXZ
	DD	FLAT:?Sleep@DigitalBrain@@UAEXXZ
	DD	FLAT:?IsTanker@DigitalBrain@@UAEHXZ
	DD	FLAT:?InitBoom@DigitalBrain@@UAEXXZ
	DD	FLAT:?CleanupBoom@BaseBrain@@UAEXXZ
	DD	FLAT:?SetTarget@DigitalBrain@@MAEXPAVSimObjectType@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1FACBrain@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1FACBrain@@UAE@XZ$0
__unwindtable$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0
__unwindtable$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0
__unwindtable$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z$1
__unwindtable$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z$1
__unwindtable$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z$1
__ehfuncinfo$??1FACBrain@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1FACBrain@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ PROC ; SimBaseClass::GetCampaignObject, COMDAT
; _this$ = ecx

; 212  : 	CampBaseClass *GetCampaignObject (void) { return campaignObject.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ENDP ; SimBaseClass::GetCampaignObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ PROC ; VuBin<CampBaseClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ENDP ; VuBin<CampBaseClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFACBrain@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFACBrain@@UAEPAXI@Z PROC				; FACBrain::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FACBrain@@UAE@XZ			; FACBrain::~FACBrain
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFACBrain@@UAEPAXI@Z ENDP				; FACBrain::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?PostInsert@FACBrain@@UAEXXZ PROC			; FACBrain::PostInsert
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PostInsert@FACBrain@@UAEXXZ ENDP			; FACBrain::PostInsert
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
tv91 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1FACBrain@@UAE@XZ PROC				; FACBrain::~FACBrain
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1FACBrain@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FACBrain@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 23   :    fighterQ->Unregister();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+972]
	call	?Unregister@VuCollection@@QAEXXZ	; VuCollection::Unregister

; 24   :    delete fighterQ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+972]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@FACBrain
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN1@FACBrain
$LN3@FACBrain:
	mov	DWORD PTR tv91[ebp], 0
$LN1@FACBrain:

; 25   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DigitalBrain@@UAE@XZ			; DigitalBrain::~DigitalBrain
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1FACBrain@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitalBrain@@UAE@XZ			; DigitalBrain::~DigitalBrain
__ehhandler$??1FACBrain@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1FACBrain@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1FACBrain@@UAE@XZ ENDP				; FACBrain::~FACBrain
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
tv153 = -28						; size = 4
tv129 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_myPlatform$ = 8					; size = 4
_myAf$ = 12						; size = 4
??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z PROC ; FACBrain::FACBrain
; _this$ = ecx

; 11   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _myAf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _myPlatform$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DigitalBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z ; DigitalBrain::DigitalBrain
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7FACBrain@@6B@

; 12   :    lastTarget = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+976], 0

; 13   :    controlledFighter = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+984], 0

; 14   :    fighterQ = new TailInsertList;

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@FACBrain
	push	OFFSET ?FalconNothingFilter@@3VFalconNothingFilterType@@A ; FalconNothingFilter
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0TailInsertList@@QAE@PAVVuFilter@@@Z	; TailInsertList::TailInsertList
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN4@FACBrain
$LN3@FACBrain:
	mov	DWORD PTR tv129[ebp], 0
$LN4@FACBrain:
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+972], ecx

; 15   :    fighterQ->Register();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+972]
	call	?Register@VuCollection@@QAEXXZ		; VuCollection::Register

; 16   :    flags = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+992], 0

; 17   : 
; 18   :    campaignTarget = ((UnitClass*)(self->GetCampaignObject()))->GetUnitMissionTarget();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	DWORD PTR tv153[ebp], eax
	mov	edx, DWORD PTR tv153[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv153[ebp]
	mov	edx, DWORD PTR [eax+680]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+988], eax

; 19   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DigitalBrain@@UAE@XZ			; DigitalBrain::~DigitalBrain
__unwindfunclet$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FACBrain@@QAE@PAVAircraftClass@@PAVAirframeClass@@@Z ENDP ; FACBrain::FACBrain
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_fighterWalker$2 = -76					; size = 12
$T3 = -64						; size = 8
$T4 = -56						; size = 8
$T5 = -48						; size = 8
$T6 = -40						; size = 4
_newTarget$ = -36					; size = 4
tv160 = -32						; size = 4
$T7 = -28						; size = 4
tv148 = -24						; size = 4
_this$ = -20						; size = 4
_facMsg$8 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_tList$ = 8						; size = 4
_tPtr$ = 12						; size = 4
?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z PROC	; FACBrain::FrameExec
; _this$ = ecx

; 144  : void FACBrain::FrameExec(SimObjectType* tList, SimObjectType* tPtr){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 	SimBaseClass* newTarget;
; 146  : 	if (!controlledFighter){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+984], 0
	jne	$LN4@FrameExec

; 147  : 		VuListIterator fighterWalker (fighterQ);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+972]
	push	edx
	lea	ecx, DWORD PTR _fighterWalker$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 148  : 		controlledFighter = (SimVehicleClass*)fighterWalker.GetFirst();

	lea	ecx, DWORD PTR _fighterWalker$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+984], eax

; 149  : 		if (controlledFighter){

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+984], 0
	je	$LN3@FrameExec

; 150  : 			flags |= FlightInbound;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+992]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+992], ecx

; 151  : 			newTarget = AssignTarget();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssignTarget@FACBrain@@QAEPAVSimBaseClass@@XZ ; FACBrain::AssignTarget
	mov	DWORD PTR _newTarget$[ebp], eax

; 152  : 
; 153  : 			FalconFACMessage* facMsg = new FalconFACMessage (controlledFighter->Id(), FalconLocalGame);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN9@FrameExec
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@FrameExec
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN8@FrameExec
$LN7@FrameExec:
	mov	DWORD PTR tv148[ebp], 0
$LN8@FrameExec:
	push	1
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+984]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconFACMessage::FalconFACMessage
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN10@FrameExec
$LN9@FrameExec:
	mov	DWORD PTR tv160[ebp], 0
$LN10@FrameExec:
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _facMsg$8[ebp], ecx

; 154  : 			facMsg->dataBlock.caller = self->Id();

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$8[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 155  : 			if (newTarget){

	cmp	DWORD PTR _newTarget$[ebp], 0
	je	SHORT $LN2@FrameExec

; 156  : 				// Say situation report
; 157  : 				facMsg->dataBlock.type = FalconFACMessage::FacSit;

	mov	ecx, DWORD PTR _facMsg$8[ebp]
	mov	DWORD PTR [ecx+56], 12			; 0000000cH

; 158  : 				facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = facMsg->dataBlock.data3 = 0;

	mov	edx, DWORD PTR _facMsg$8[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+76], xmm0
	mov	eax, DWORD PTR _facMsg$8[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+72], xmm0
	mov	ecx, DWORD PTR _facMsg$8[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+68], xmm0

; 159  : 				facMsg->dataBlock.target = newTarget->Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _newTarget$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$8[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], edx

; 160  : 			}
; 161  : 			else {

	jmp	SHORT $LN1@FrameExec
$LN2@FrameExec:

; 162  : 				// Say Hold message
; 163  : 				facMsg->dataBlock.type = FalconFACMessage::HoldAtCP;

	mov	ecx, DWORD PTR _facMsg$8[ebp]
	mov	DWORD PTR [ecx+56], 11			; 0000000bH

; 164  : 				facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = 0;

	mov	edx, DWORD PTR _facMsg$8[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+72], xmm0
	mov	eax, DWORD PTR _facMsg$8[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+68], xmm0
$LN1@FrameExec:

; 165  : 			}
; 166  : 			FalconSendMessage (facMsg,FALSE);

	push	0
	mov	ecx, DWORD PTR _facMsg$8[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN3@FrameExec:

; 167  : 		}
; 168  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fighterWalker$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN4@FrameExec:

; 169  : 	DigitalBrain::FrameExec(tList, tPtr);

	mov	edx, DWORD PTR _tPtr$[ebp]
	push	edx
	mov	eax, DWORD PTR _tList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FrameExec@DigitalBrain@@UAEXPAVSimObjectType@@0@Z ; DigitalBrain::FrameExec

; 170  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z$0:
	lea	ecx, DWORD PTR _fighterWalker$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FrameExec@FACBrain@@UAEXPAVSimObjectType@@0@Z ENDP	; FACBrain::FrameExec
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_theFighter$ = 8					; size = 4
?RemoveFromQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z PROC	; FACBrain::RemoveFromQ
; _this$ = ecx

; 140  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 141  :    fighterQ->Remove(theFighter);

	mov	eax, DWORD PTR _theFighter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+972]
	call	?Remove@VuCollection@@QAEHPAVVuEntity@@@Z ; VuCollection::Remove

; 142  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveFromQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z ENDP	; FACBrain::RemoveFromQ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
$T2 = -52						; size = 8
$T3 = -44						; size = 8
$T4 = -36						; size = 4
tv140 = -32						; size = 4
$T5 = -28						; size = 4
tv129 = -24						; size = 4
_this$ = -20						; size = 4
_facMsg$6 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_theFighter$ = 8					; size = 4
?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z PROC	; FACBrain::AddToQ
; _this$ = ecx

; 126  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 127  :    fighterQ->ForcedInsert(theFighter);

	mov	eax, DWORD PTR _theFighter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+972]
	call	?ForcedInsert@TailInsertList@@QAEHPAVVuEntity@@@Z ; TailInsertList::ForcedInsert

; 128  :    if (flags & FlightInbound)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+992]
	and	eax, 1
	je	$LN1@AddToQ

; 129  :    {
; 130  :       // Say hold message
; 131  :       FalconFACMessage* facMsg = new FalconFACMessage (theFighter->Id(), FalconLocalGame);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN6@AddToQ
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@AddToQ
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN5@AddToQ
$LN4@AddToQ:
	mov	DWORD PTR tv129[ebp], 0
$LN5@AddToQ:
	push	1
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _theFighter$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconFACMessage::FalconFACMessage
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN7@AddToQ
$LN6@AddToQ:
	mov	DWORD PTR tv140[ebp], 0
$LN7@AddToQ:
	mov	eax, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _facMsg$6[ebp], ecx

; 132  :       facMsg->dataBlock.caller = self->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$6[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 133  :       facMsg->dataBlock.type = FalconFACMessage::HoldAtCP;

	mov	ecx, DWORD PTR _facMsg$6[ebp]
	mov	DWORD PTR [ecx+56], 11			; 0000000bH

; 134  :       facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = 0;

	mov	edx, DWORD PTR _facMsg$6[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+72], xmm0
	mov	eax, DWORD PTR _facMsg$6[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+68], xmm0

; 135  :       FalconSendMessage (facMsg,FALSE);

	push	0
	mov	ecx, DWORD PTR _facMsg$6[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN1@AddToQ:

; 136  :    }
; 137  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddToQ@FACBrain@@QAEXPAVSimVehicleClass@@@Z ENDP	; FACBrain::AddToQ
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_this$ = -4						; size = 4
?AssignTarget@FACBrain@@QAEPAVSimBaseClass@@XZ PROC	; FACBrain::AssignTarget
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 33   : SimBaseClass* retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0

; 34   : 
; 35   :    if (campaignTarget)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+988], 0
	je	$LN4@AssignTarg

; 36   :    {
; 37   :       retval = campaignTarget->GetComponentEntity(lastTarget);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+976]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+988]
	call	?GetComponentEntity@CampBaseClass@@QAEPAVSimBaseClass@@H@Z ; CampBaseClass::GetComponentEntity
	mov	DWORD PTR _retval$[ebp], eax

; 38   :       if (retval)

	cmp	DWORD PTR _retval$[ebp], 0
	je	SHORT $LN3@AssignTarg

; 39   :       {
; 40   :          lastTarget ++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+976]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+976], edx

; 41   :          lastTarget %= campaignTarget->NumberOfComponents();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+988]
	call	?NumberOfComponents@CampBaseClass@@QAEHXZ ; CampBaseClass::NumberOfComponents
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+976]
	cdq
	idiv	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+976], edx

; 42   :       }
; 43   :       else

	jmp	$LN4@AssignTarg
$LN3@AssignTarg:

; 44   :       {
; 45   :          lastTarget = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+976], 0

; 46   :          retval = campaignTarget->GetComponentEntity(lastTarget);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+976]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+988]
	call	?GetComponentEntity@CampBaseClass@@QAEPAVSimBaseClass@@H@Z ; CampBaseClass::GetComponentEntity
	mov	DWORD PTR _retval$[ebp], eax

; 47   :          lastTarget ++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+976]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+976], eax

; 48   :          lastTarget %= campaignTarget->NumberOfComponents();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+988]
	call	?NumberOfComponents@CampBaseClass@@QAEHXZ ; CampBaseClass::NumberOfComponents
	mov	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+976]
	cdq
	idiv	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+976], edx

; 49   :          if (retval == NULL)

	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN4@AssignTarg

; 50   :          {
; 51   :             lastTarget = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+976], 0

; 52   :             campaignTarget = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+988], 0
$LN4@AssignTarg:

; 53   :          }
; 54   :       }
; 55   :    }
; 56   : 
; 57   :    return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 58   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AssignTarget@FACBrain@@QAEPAVSimBaseClass@@XZ ENDP	; FACBrain::AssignTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 8
$T3 = -84						; size = 8
$T4 = -76						; size = 8
$T5 = -68						; size = 8
$T6 = -60						; size = 4
$T7 = -56						; size = 4
tv203 = -52						; size = 4
$T8 = -48						; size = 4
tv192 = -44						; size = 4
tv138 = -40						; size = 4
$T9 = -36						; size = 4
tv95 = -32						; size = 4
_numHit$ = -28						; size = 4
_facMsg$10 = -24					; size = 4
_facMsg$11 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_theFighter$ = 8					; size = 4
?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z PROC	; FACBrain::RequestBDA
; _this$ = ecx

; 73   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 74   : int numHit = numInTarget - campaignTarget->NumberOfComponents();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+988]
	call	?NumberOfComponents@CampBaseClass@@QAEHXZ ; CampBaseClass::NumberOfComponents
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+980]
	sub	edx, eax
	mov	DWORD PTR _numHit$[ebp], edx

; 75   : 
; 76   :    if (campaignTarget)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+988], 0
	je	$LN1@RequestBDA

; 77   :    {
; 78   :       if (numHit > 0)

	cmp	DWORD PTR _numHit$[ebp], 0
	jle	$LN2@RequestBDA

; 79   :       {
; 80   :          // Say hold message
; 81   :          FalconFACMessage* facMsg = new FalconFACMessage (theFighter->Id(), FalconLocalGame);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN8@RequestBDA
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@RequestBDA
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN7@RequestBDA
$LN6@RequestBDA:
	mov	DWORD PTR tv95[ebp], 0
$LN7@RequestBDA:
	push	1
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _theFighter$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconFACMessage::FalconFACMessage
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN9@RequestBDA
$LN8@RequestBDA:
	mov	DWORD PTR tv138[ebp], 0
$LN9@RequestBDA:
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _facMsg$11[ebp], ecx

; 82   :          facMsg->dataBlock.caller = self->Id();

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$11[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 83   :          facMsg->dataBlock.type = FalconFACMessage::BDA;

	mov	ecx, DWORD PTR _facMsg$11[ebp]
	mov	DWORD PTR [ecx+56], 17			; 00000011H

; 84   :          facMsg->dataBlock.data1 = (float)numHit;

	cvtsi2ss xmm0, DWORD PTR _numHit$[ebp]
	mov	edx, DWORD PTR _facMsg$11[ebp]
	movss	DWORD PTR [edx+68], xmm0

; 85   :          facMsg->dataBlock.data2 = 0;

	mov	eax, DWORD PTR _facMsg$11[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+72], xmm0

; 86   :          FalconSendMessage (facMsg,FALSE);

	push	0
	mov	ecx, DWORD PTR _facMsg$11[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 87   :          numInTarget -= numHit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+980]
	sub	eax, DWORD PTR _numHit$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+980], eax

; 88   :       }
; 89   :       else

	jmp	$LN1@RequestBDA
$LN2@RequestBDA:

; 90   :       {
; 91   :          // Say hold message
; 92   :          FalconFACMessage* facMsg = new FalconFACMessage (theFighter->Id(), FalconLocalGame);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN12@RequestBDA
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@RequestBDA
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv192[ebp], eax
	jmp	SHORT $LN11@RequestBDA
$LN10@RequestBDA:
	mov	DWORD PTR tv192[ebp], 0
$LN11@RequestBDA:
	push	1
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _theFighter$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconFACMessage::FalconFACMessage
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN13@RequestBDA
$LN12@RequestBDA:
	mov	DWORD PTR tv203[ebp], 0
$LN13@RequestBDA:
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _facMsg$10[ebp], edx

; 93   :          facMsg->dataBlock.caller = self->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _facMsg$10[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], eax

; 94   :          facMsg->dataBlock.type = FalconFACMessage::NoBDA;

	mov	edx, DWORD PTR _facMsg$10[ebp]
	mov	DWORD PTR [edx+56], 18			; 00000012H

; 95   :          facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = 0;

	mov	eax, DWORD PTR _facMsg$10[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+72], xmm0
	mov	ecx, DWORD PTR _facMsg$10[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+68], xmm0

; 96   :          FalconSendMessage (facMsg,FALSE);

	push	0
	mov	edx, DWORD PTR _facMsg$10[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN1@RequestBDA:

; 97   :       }
; 98   :    }
; 99   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z$1:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestBDA@FACBrain@@QAEXPAVSimVehicleClass@@@Z ENDP	; FACBrain::RequestBDA
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestTACAN@FACBrain@@QAEXXZ PROC			; FACBrain::RequestTACAN
; _this$ = ecx

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 70   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RequestTACAN@FACBrain@@QAEXXZ ENDP			; FACBrain::RequestTACAN
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestLocation@FACBrain@@QAEXXZ PROC			; FACBrain::RequestLocation
; _this$ = ecx

; 65   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 66   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RequestLocation@FACBrain@@QAEXXZ ENDP			; FACBrain::RequestLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestMark@FACBrain@@QAEXXZ PROC			; FACBrain::RequestMark
; _this$ = ecx

; 61   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RequestMark@FACBrain@@QAEXXZ ENDP			; FACBrain::RequestMark
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\digi\facbrain.cpp
_TEXT	SEGMENT
$T2 = -64						; size = 8
$T3 = -56						; size = 8
$T4 = -48						; size = 8
$T5 = -40						; size = 4
_newTarget$ = -36					; size = 4
tv133 = -32						; size = 4
$T6 = -28						; size = 4
tv89 = -24						; size = 4
_this$ = -20						; size = 4
_facMsg$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z PROC ; FACBrain::RequestTarget
; _this$ = ecx

; 102  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 103  : SimBaseClass* newTarget;
; 104  : 
; 105  :    newTarget = AssignTarget();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssignTarget@FACBrain@@QAEPAVSimBaseClass@@XZ ; FACBrain::AssignTarget
	mov	DWORD PTR _newTarget$[ebp], eax

; 106  : 
; 107  :    FalconFACMessage* facMsg = new FalconFACMessage (controlledFighter->Id(), FalconLocalGame);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN7@RequestTar
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@RequestTar
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@RequestTar
$LN5@RequestTar:
	mov	DWORD PTR tv89[ebp], 0
$LN6@RequestTar:
	push	1
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+984]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0FalconFACMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconFACMessage::FalconFACMessage
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN8@RequestTar
$LN7@RequestTar:
	mov	DWORD PTR tv133[ebp], 0
$LN8@RequestTar:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _facMsg$[ebp], ecx

; 108  :    facMsg->dataBlock.caller = self->Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 109  :    if (newTarget)

	cmp	DWORD PTR _newTarget$[ebp], 0
	je	SHORT $LN2@RequestTar

; 110  :    {
; 111  :       // Say situation report
; 112  :       facMsg->dataBlock.type = FalconFACMessage::FacSit;

	mov	ecx, DWORD PTR _facMsg$[ebp]
	mov	DWORD PTR [ecx+56], 12			; 0000000cH

; 113  :       facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = facMsg->dataBlock.data3 = 0;

	mov	edx, DWORD PTR _facMsg$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+76], xmm0
	mov	eax, DWORD PTR _facMsg$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+72], xmm0
	mov	ecx, DWORD PTR _facMsg$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+68], xmm0

; 114  :       facMsg->dataBlock.target = newTarget->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _newTarget$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _facMsg$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], edx

; 115  :    }
; 116  :    else

	jmp	SHORT $LN1@RequestTar
$LN2@RequestTar:

; 117  :    {
; 118  :       // Say Hold message
; 119  :       facMsg->dataBlock.type = FalconFACMessage::HoldAtCP;

	mov	ecx, DWORD PTR _facMsg$[ebp]
	mov	DWORD PTR [ecx+56], 11			; 0000000bH

; 120  :       facMsg->dataBlock.data1 = facMsg->dataBlock.data2 = 0;

	mov	edx, DWORD PTR _facMsg$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+72], xmm0
	mov	eax, DWORD PTR _facMsg$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+68], xmm0
$LN1@RequestTar:

; 121  :    }
; 122  :    FalconSendMessage (facMsg,FALSE);

	push	0
	mov	ecx, DWORD PTR _facMsg$[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 123  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestTarget@FACBrain@@QAEXPAVSimVehicleClass@@@Z ENDP ; FACBrain::RequestTarget
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?InitBoom@DigitalBrain@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitBoom@DigitalBrain@@UAEXXZ PROC			; DigitalBrain::InitBoom, COMDAT
; _this$ = ecx

; 810  : 	virtual void	InitBoom(void)	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?InitBoom@DigitalBrain@@UAEXXZ ENDP			; DigitalBrain::InitBoom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?IsTanker@DigitalBrain@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTanker@DigitalBrain@@UAEHXZ PROC			; DigitalBrain::IsTanker, COMDAT
; _this$ = ecx

; 809  : 	virtual int		IsTanker(void)	{return FALSE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTanker@DigitalBrain@@UAEHXZ ENDP			; DigitalBrain::IsTanker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbrain.h
;	COMDAT ?CleanupBoom@BaseBrain@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CleanupBoom@BaseBrain@@UAEXXZ PROC			; BaseBrain::CleanupBoom, COMDAT
; _this$ = ecx

; 45   : 	  virtual void CleanupBoom(void) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupBoom@BaseBrain@@UAEXXZ ENDP			; BaseBrain::CleanupBoom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
END
