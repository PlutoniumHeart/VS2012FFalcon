; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\BOMB\Readin.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?BombDataset@@3PAVBombDataSetClass@@A		; BombDataset
PUBLIC	?numBombDatasets@@3HA				; numBombDatasets
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	??_C@_0BB@KJFLOCBC@cbuStrengthModel?$AA@	; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_0BA@EAHBILDA@cbuLethalHeight?$AA@		; `string'
PUBLIC	??_C@_03MHAIKEMP@300?$AA@			; `string'
PUBLIC	??_C@_0BF@GPMCMEM@cbuIneffectiveHeight?$AA@	; `string'
PUBLIC	??_C@_04BMLKGOAG@6000?$AA@			; `string'
PUBLIC	??_C@_0CE@FLEICFIO@cbuDamageDiameterBurstAltMultipl@ ; `string'
PUBLIC	??_C@_05IGECPIEF@?42083?$AA@			; `string'
PUBLIC	??_C@_0BF@MCOFLMLN@cbuMaxDamageDiameter?$AA@	; `string'
PUBLIC	??_C@_0BD@MDJJJDEK@cbuBlastMultiplier?$AA@	; `string'
PUBLIC	??_C@_03HLLJOCDO@1?40?$AA@			; `string'
PUBLIC	??_C@_0N@EJKFHCGN@sndFlightSFX?$AA@		; `string'
PUBLIC	??_C@_0N@MIFEDODO@lauSalvoSize?$AA@		; `string'
PUBLIC	??_C@_02PGHGPEOM@?91?$AA@			; `string'
PUBLIC	??_C@_0M@DONCKPIN@lauWeaponId?$AA@		; `string'
PUBLIC	??_C@_09JEOJJKDD@lauRounds?$AA@			; `string'
PUBLIC	??_C@_0L@LOMHCMN@lauAzimuth?$AA@		; `string'
PUBLIC	??_C@_0N@LMBGBJNJ@lauElevation?$AA@		; `string'
PUBLIC	??_C@_0BA@JCNLEBJO@lauRippleTimeMS?$AA@		; `string'
PUBLIC	??_C@_02PKFBJPLJ@10?$AA@			; `string'
PUBLIC	??_C@_0BA@MEOFPNCG@psFeatureImpact?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0N@JGPCDNBH@psBombImpact?$AA@		; `string'
PUBLIC	??_C@_08HCADMPAB@JDAMLift?$AA@			; `string'
PUBLIC	??_C@_01BMBHCPLG@5?$AA@				; `string'
PUBLIC	??_C@_0N@CHNBNLPI@JSOWmaxRange?$AA@		; `string'
PUBLIC	??_C@_02PMJKFNFC@40?$AA@			; `string'
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?BombDataset@@3PAVBombDataSetClass@@A DD 01H DUP (?)	; BombDataset
?numBombDatasets@@3HA DD 01H DUP (?)			; numBombDatasets
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ??_C@_02PMJKFNFC@40?$AA@
CONST	SEGMENT
??_C@_02PMJKFNFC@40?$AA@ DB '40', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHNBNLPI@JSOWmaxRange?$AA@
CONST	SEGMENT
??_C@_0N@CHNBNLPI@JSOWmaxRange?$AA@ DB 'JSOWmaxRange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01BMBHCPLG@5?$AA@
CONST	SEGMENT
??_C@_01BMBHCPLG@5?$AA@ DB '5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HCADMPAB@JDAMLift?$AA@
CONST	SEGMENT
??_C@_08HCADMPAB@JDAMLift?$AA@ DB 'JDAMLift', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JGPCDNBH@psBombImpact?$AA@
CONST	SEGMENT
??_C@_0N@JGPCDNBH@psBombImpact?$AA@ DB 'psBombImpact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEOFPNCG@psFeatureImpact?$AA@
CONST	SEGMENT
??_C@_0BA@MEOFPNCG@psFeatureImpact?$AA@ DB 'psFeatureImpact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02PKFBJPLJ@10?$AA@
CONST	SEGMENT
??_C@_02PKFBJPLJ@10?$AA@ DB '10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCNLEBJO@lauRippleTimeMS?$AA@
CONST	SEGMENT
??_C@_0BA@JCNLEBJO@lauRippleTimeMS?$AA@ DB 'lauRippleTimeMS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMBGBJNJ@lauElevation?$AA@
CONST	SEGMENT
??_C@_0N@LMBGBJNJ@lauElevation?$AA@ DB 'lauElevation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LOMHCMN@lauAzimuth?$AA@
CONST	SEGMENT
??_C@_0L@LOMHCMN@lauAzimuth?$AA@ DB 'lauAzimuth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JEOJJKDD@lauRounds?$AA@
CONST	SEGMENT
??_C@_09JEOJJKDD@lauRounds?$AA@ DB 'lauRounds', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DONCKPIN@lauWeaponId?$AA@
CONST	SEGMENT
??_C@_0M@DONCKPIN@lauWeaponId?$AA@ DB 'lauWeaponId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02PGHGPEOM@?91?$AA@
CONST	SEGMENT
??_C@_02PGHGPEOM@?91?$AA@ DB '-1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MIFEDODO@lauSalvoSize?$AA@
CONST	SEGMENT
??_C@_0N@MIFEDODO@lauSalvoSize?$AA@ DB 'lauSalvoSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJKFHCGN@sndFlightSFX?$AA@
CONST	SEGMENT
??_C@_0N@EJKFHCGN@sndFlightSFX?$AA@ DB 'sndFlightSFX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLLJOCDO@1?40?$AA@
CONST	SEGMENT
??_C@_03HLLJOCDO@1?40?$AA@ DB '1.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MDJJJDEK@cbuBlastMultiplier?$AA@
CONST	SEGMENT
??_C@_0BD@MDJJJDEK@cbuBlastMultiplier?$AA@ DB 'cbuBlastMultiplier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MCOFLMLN@cbuMaxDamageDiameter?$AA@
CONST	SEGMENT
??_C@_0BF@MCOFLMLN@cbuMaxDamageDiameter?$AA@ DB 'cbuMaxDamageDiameter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IGECPIEF@?42083?$AA@
CONST	SEGMENT
??_C@_05IGECPIEF@?42083?$AA@ DB '.2083', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FLEICFIO@cbuDamageDiameterBurstAltMultipl@
CONST	SEGMENT
??_C@_0CE@FLEICFIO@cbuDamageDiameterBurstAltMultipl@ DB 'cbuDamageDiamete'
	DB	'rBurstAltMultiplier', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BMLKGOAG@6000?$AA@
CONST	SEGMENT
??_C@_04BMLKGOAG@6000?$AA@ DB '6000', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GPMCMEM@cbuIneffectiveHeight?$AA@
CONST	SEGMENT
??_C@_0BF@GPMCMEM@cbuIneffectiveHeight?$AA@ DB 'cbuIneffectiveHeight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MHAIKEMP@300?$AA@
CONST	SEGMENT
??_C@_03MHAIKEMP@300?$AA@ DB '300', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EAHBILDA@cbuLethalHeight?$AA@
CONST	SEGMENT
??_C@_0BA@EAHBILDA@cbuLethalHeight?$AA@ DB 'cbuLethalHeight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KJFLOCBC@cbuStrengthModel?$AA@
CONST	SEGMENT
??_C@_0BB@KJFLOCBC@cbuStrengthModel?$AA@ DB 'cbuStrengthModel', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
	ORG $+4
_AuxBombDataDesc DD FLAT:??_C@_0BB@KJFLOCBC@cbuStrengthModel?$AA@
	DD	00H
	DD	00H
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_0BA@EAHBILDA@cbuLethalHeight?$AA@
	DD	01H
	DD	04H
	DD	FLAT:??_C@_03MHAIKEMP@300?$AA@
	DD	FLAT:??_C@_0BF@GPMCMEM@cbuIneffectiveHeight?$AA@
	DD	01H
	DD	08H
	DD	FLAT:??_C@_04BMLKGOAG@6000?$AA@
	DD	FLAT:??_C@_0CE@FLEICFIO@cbuDamageDiameterBurstAltMultipl@
	DD	01H
	DD	0cH
	DD	FLAT:??_C@_05IGECPIEF@?42083?$AA@
	DD	FLAT:??_C@_0BF@MCOFLMLN@cbuMaxDamageDiameter?$AA@
	DD	01H
	DD	010H
	DD	FLAT:??_C@_03MHAIKEMP@300?$AA@
	DD	FLAT:??_C@_0BD@MDJJJDEK@cbuBlastMultiplier?$AA@
	DD	01H
	DD	014H
	DD	FLAT:??_C@_03HLLJOCDO@1?40?$AA@
	DD	FLAT:??_C@_0N@EJKFHCGN@sndFlightSFX?$AA@
	DD	01H
	DD	040H
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_0N@MIFEDODO@lauSalvoSize?$AA@
	DD	00H
	DD	020H
	DD	FLAT:??_C@_02PGHGPEOM@?91?$AA@
	DD	FLAT:??_C@_0M@DONCKPIN@lauWeaponId?$AA@
	DD	00H
	DD	028H
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_09JEOJJKDD@lauRounds?$AA@
	DD	00H
	DD	024H
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_0L@LOMHCMN@lauAzimuth?$AA@
	DD	01H
	DD	01cH
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_0N@LMBGBJNJ@lauElevation?$AA@
	DD	01H
	DD	018H
	DD	FLAT:??_C@_01GBGANLPD@0?$AA@
	DD	FLAT:??_C@_0BA@JCNLEBJO@lauRippleTimeMS?$AA@
	DD	00H
	DD	02cH
	DD	FLAT:??_C@_02PKFBJPLJ@10?$AA@
	DD	FLAT:??_C@_0BA@MEOFPNCG@psFeatureImpact?$AA@
	DD	02H
	DD	038H
	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
	DD	FLAT:??_C@_0N@JGPCDNBH@psBombImpact?$AA@
	DD	02H
	DD	03cH
	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
	DD	FLAT:??_C@_08HCADMPAB@JDAMLift?$AA@
	DD	01H
	DD	030H
	DD	FLAT:??_C@_01BMBHCPLG@5?$AA@
	DD	FLAT:??_C@_0N@CHNBNLPI@JSOWmaxRange?$AA@
	DD	01H
	DD	034H
	DD	FLAT:??_C@_02PMJKFNFC@40?$AA@
	DD	00H
	ORG $+12
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	?ReadInput@BombClass@@QAEXH@Z			; BombClass::ReadInput
PUBLIC	??0BombAuxData@@QAE@XZ				; BombAuxData::BombAuxData
PUBLIC	??1BombAuxData@@QAE@XZ				; BombAuxData::~BombAuxData
PUBLIC	??_GBombAuxData@@QAEPAXI@Z			; BombAuxData::`scalar deleting destructor'
PUBLIC	?ReadAllBombData@@YAXXZ				; ReadAllBombData
PUBLIC	?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z ; BombAuxAeroRead
PUBLIC	?BombInputRead@@YAPAVBombInputData@@PAVSimlibFileClass@@@Z ; BombInputRead
PUBLIC	?FreeAllBombData@@YAXXZ				; FreeAllBombData
PUBLIC	?DefaultBombAuxData@@3VBombAuxData@@A		; DefaultBombAuxData
PUBLIC	??_C@_0O@JNBOOODM@bombtypes?4lst?$AA@		; `string'
PUBLIC	??_C@_0N@GOBDABJH@sim?2bombdata?$AA@		; `string'
PUBLIC	??_C@_06EOBIOCBK@?$CFs?2?$CFs?$AA?$AA@		; `string'
PUBLIC	??_C@_09KGGGMDAE@?$CFs?2?$CFs?4dat?$AA@		; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_sprintf:PROC
EXTRN	_atoi:PROC
EXTRN	_free:PROC
EXTRN	_memset:PROC
EXTRN	_strncpy:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?Open@SimlibFileClass@@SAPAV1@PADH@Z:PROC	; SimlibFileClass::Open
EXTRN	?ReadLine@SimlibFileClass@@QAEHPADH@Z:PROC	; SimlibFileClass::ReadLine
EXTRN	?GetNext@SimlibFileClass@@QAEPADXZ:PROC		; SimlibFileClass::GetNext
EXTRN	?Close@SimlibFileClass@@QAEHXZ:PROC		; SimlibFileClass::Close
EXTRN	?ParseSimlibFile@@YA_NPAXPBUInputDataDesc@@PAVSimlibFileClass@@@Z:PROC ; ParseSimlibFile
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?DefaultBombAuxData@@3VBombAuxData@@A DB 044H DUP (?)	; DefaultBombAuxData
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_C@_09KGGGMDAE@?$CFs?2?$CFs?4dat?$AA@
CONST	SEGMENT
??_C@_09KGGGMDAE@?$CFs?2?$CFs?4dat?$AA@ DB '%s\%s.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOBIOCBK@?$CFs?2?$CFs?$AA?$AA@
CONST	SEGMENT
??_C@_06EOBIOCBK@?$CFs?2?$CFs?$AA?$AA@ DB '%s\%s', 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GOBDABJH@sim?2bombdata?$AA@
CONST	SEGMENT
??_C@_0N@GOBDABJH@sim?2bombdata?$AA@ DB 'sim\bombdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JNBOOODM@bombtypes?4lst?$AA@
CONST	SEGMENT
??_C@_0O@JNBOOODM@bombtypes?4lst?$AA@ DB 'bombtypes.lst', 00H ; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z$0
__ehfuncinfo$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_DefaultBombAuxData$initializer$ DD FLAT:??__EDefaultBombAuxData@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
tv74 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_i$4 = -4						; size = 4
?FreeAllBombData@@YAXXZ PROC				; FreeAllBombData

; 133  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 134  : 	if(BombDataset)

	cmp	DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A, 0 ; BombDataset
	je	SHORT $LN4@FreeAllBom

; 135  : 	{
; 136  : 		int i;
; 137  : 		for (i=0; i<numBombDatasets; i++)

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN3@FreeAllBom
$LN2@FreeAllBom:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN3@FreeAllBom:
	mov	ecx, DWORD PTR _i$4[ebp]
	cmp	ecx, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	jge	SHORT $LN1@FreeAllBom

; 138  : 		{
; 139  : 			delete BombDataset[i].auxData; // JPO

	mov	edx, DWORD PTR _i$4[ebp]
	imul	edx, 92					; 0000005cH
	mov	eax, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	ecx, DWORD PTR [eax+edx+88]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN7@FreeAllBom
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GBombAuxData@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN8@FreeAllBom
$LN7@FreeAllBom:
	mov	DWORD PTR tv74[ebp], 0
$LN8@FreeAllBom:

; 140  : 		}

	jmp	SHORT $LN2@FreeAllBom
$LN1@FreeAllBom:

; 141  : 
; 142  : 		delete [] BombDataset;

	mov	eax, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN4@FreeAllBom:

; 143  : 	}
; 144  : 	BombDataset=0;

	mov	DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A, 0 ; BombDataset

; 145  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FreeAllBombData@@YAXXZ ENDP				; FreeAllBombData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_inputData$ = -4					; size = 4
_inputFile$ = 8						; size = 4
?BombInputRead@@YAPAVBombInputData@@PAVSimlibFileClass@@@Z PROC ; BombInputRead

; 148  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 149  : 	BombInputData* inputData;
; 150  : 	
; 151  : #ifdef USE_SH_POOLS
; 152  : 	inputData = (BombInputData *)MemAllocPtr(gReadInMemPool, sizeof(BombInputData),0);
; 153  : #else
; 154  : 	inputData = new BombInputData;

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _inputData$[ebp], eax

; 155  : #endif
; 156  : 	
; 157  : 	inputData->Version = atoi(inputFile->GetNext());

	mov	ecx, DWORD PTR _inputFile$[ebp]
	call	?GetNext@SimlibFileClass@@QAEPADXZ	; SimlibFileClass::GetNext
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _inputData$[ebp]
	mov	DWORD PTR [ecx], eax

; 158  : 	if(inputData->Version > BOMB_ID_VER)

	mov	edx, DWORD PTR _inputData$[ebp]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN1@BombInputR

; 159  : 	{
; 160  : 		// we are screwed
; 161  : #ifdef USE_SH_POOLS
; 162  : 		// what to do???
; 163  : 		//inputData = (BombInputData *)MemAllocPtr(gReadInMemPool, sizeof(BombInputData),0);
; 164  : #else
; 165  : 		delete inputData;

	mov	eax, DWORD PTR _inputData$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@BombInputR:

; 166  : #endif
; 167  : 	}
; 168  : 	// no data to get for version 0;
; 169  : 	return (inputData);

	mov	eax, DWORD PTR _inputData$[ebp]

; 170  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BombInputRead@@YAPAVBombInputData@@PAVSimlibFileClass@@@Z ENDP ; BombInputRead
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FDefaultBombAuxData@@YAXXZ
text$yd	SEGMENT
??__FDefaultBombAuxData@@YAXXZ PROC			; `dynamic atexit destructor for 'DefaultBombAuxData'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?DefaultBombAuxData@@3VBombAuxData@@A ; DefaultBombAuxData
	call	??1BombAuxData@@QAE@XZ			; BombAuxData::~BombAuxData
	pop	ebp
	ret	0
??__FDefaultBombAuxData@@YAXXZ ENDP			; `dynamic atexit destructor for 'DefaultBombAuxData''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
;	COMDAT ??__EDefaultBombAuxData@@YAXXZ
text$yc	SEGMENT
??__EDefaultBombAuxData@@YAXXZ PROC			; `dynamic initializer for 'DefaultBombAuxData'', COMDAT

; 20   : BombAuxData DefaultBombAuxData;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?DefaultBombAuxData@@3VBombAuxData@@A ; DefaultBombAuxData
	call	??0BombAuxData@@QAE@XZ			; BombAuxData::BombAuxData
	push	OFFSET ??__FDefaultBombAuxData@@YAXXZ	; `dynamic atexit destructor for 'DefaultBombAuxData''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EDefaultBombAuxData@@YAXXZ ENDP			; `dynamic initializer for 'DefaultBombAuxData''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
_auxBombData$ = -24					; size = 4
tv71 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_inputFile$ = 8						; size = 4
?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z PROC ; BombAuxAeroRead

; 174  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 175  : 	BombAuxData *auxBombData;
; 176  : 
; 177  : 	auxBombData = new BombAuxData;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@BombAuxAer
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0BombAuxData@@QAE@XZ			; BombAuxData::BombAuxData
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@BombAuxAer
$LN4@BombAuxAer:
	mov	DWORD PTR tv71[ebp], 0
$LN5@BombAuxAer:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _auxBombData$[ebp], ecx

; 178  : 
; 179  : 	if (ParseSimlibFile(auxBombData, AuxBombDataDesc, inputFile) == false) {

	mov	edx, DWORD PTR _inputFile$[ebp]
	push	edx
	push	OFFSET _AuxBombDataDesc
	mov	eax, DWORD PTR _auxBombData$[ebp]
	push	eax
	call	?ParseSimlibFile@@YA_NPAXPBUInputDataDesc@@PAVSimlibFileClass@@@Z ; ParseSimlibFile
	add	esp, 12					; 0000000cH

; 180  : //	    F4Assert(!"Bad parsing of aux aero data");
; 181  : 	}
; 182  : 
; 183  : 	return (auxBombData);

	mov	eax, DWORD PTR _auxBombData$[ebp]

; 184  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z ENDP ; BombAuxAeroRead
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
_TEXT	SEGMENT
$T1 = -628						; size = 4
$T2 = -624						; size = 4
$T3 = -620						; size = 4
_inputFile$ = -616					; size = 4
_mslList$ = -612					; size = 4
_i$ = -608						; size = 4
_fileName$ = -604					; size = 260
_fName$ = -344						; size = 260
_buffer$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
?ReadAllBombData@@YAXXZ PROC				; ReadAllBombData

; 74   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 628				; 00000274H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 75   : int i;
; 76   : SimlibFileClass* mslList;
; 77   : SimlibFileClass* inputFile;
; 78   : char buffer[80];
; 79   : char fileName[_MAX_PATH];
; 80   : char fName[_MAX_PATH];
; 81   : 
; 82   : 	memset(&DefaultBombAuxData,0,sizeof(DefaultBombAuxData));

	push	68					; 00000044H
	push	0
	push	OFFSET ?DefaultBombAuxData@@3VBombAuxData@@A ; DefaultBombAuxData
	call	_memset
	add	esp, 12					; 0000000cH

; 83   : 	DefaultBombAuxData.lauRippleTime = 10;

	mov	DWORD PTR ?DefaultBombAuxData@@3VBombAuxData@@A+44, 10 ; 0000000aH

; 84   : 	/*
; 85   : 	DefaultBombAuxData.cbuStrengthModel=0;
; 86   : 	DefaultBombAuxData.cbuLethalHeight=0;
; 87   : 	DefaultBombAuxData.cbuIneffectiveHeight=0;
; 88   : 	DefaultBombAuxData.sndFlightSFX=0;
; 89   : 	*/
; 90   : 
; 91   :    /*-----------------*/
; 92   :    /* open input file */
; 93   :    /*-----------------*/
; 94   :    sprintf (fileName, "%s\\%s\0", Bomb_DIR, Bomb_DATASET);

	push	OFFSET ??_C@_0O@JNBOOODM@bombtypes?4lst?$AA@
	push	OFFSET ??_C@_0N@GOBDABJH@sim?2bombdata?$AA@
	push	OFFSET ??_C@_06EOBIOCBK@?$CFs?2?$CFs?$AA?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 95   :    mslList = SimlibFileClass::Open (fileName, SIMLIB_READ);

	push	4
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	?Open@SimlibFileClass@@SAPAV1@PADH@Z	; SimlibFileClass::Open
	add	esp, 8
	mov	DWORD PTR _mslList$[ebp], eax

; 96   :    
; 97   : //   F4Assert(mslList);
; 98   : 	if(!mslList) // MLR 2003-11-11 Prevent CTD if files are missing.

	cmp	DWORD PTR _mslList$[ebp], 0
	jne	SHORT $LN5@ReadAllBom

; 99   : 		return;

	jmp	$LN6@ReadAllBom
$LN5@ReadAllBom:

; 100  : 
; 101  : 	numBombDatasets = atoi (mslList->GetNext());

	mov	ecx, DWORD PTR _mslList$[ebp]
	call	?GetNext@SimlibFileClass@@QAEPADXZ	; SimlibFileClass::GetNext
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR ?numBombDatasets@@3HA, eax	; numBombDatasets

; 102  : 	#ifdef USE_SH_POOLS
; 103  : 	BombDataset = (BombDataSetClass *)MemAllocPtr(gReadInMemPool, sizeof(BombDataSetClass)*numBombDatasets,0);
; 104  : 	#else
; 105  : 	BombDataset = new BombDataSetClass[numBombDatasets];

	xor	ecx, ecx
	mov	eax, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	mov	edx, 92					; 0000005cH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A, eax ; BombDataset

; 106  : 	#endif
; 107  : 	memset(BombDataset, 0, sizeof(BombDataset));

	push	4
	push	0
	mov	ecx, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 108  : 
; 109  : 	for (i=0; i<numBombDatasets; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ReadAllBom
$LN3@ReadAllBom:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@ReadAllBom:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	jge	$LN2@ReadAllBom

; 110  : 	{
; 111  : 		mslList->ReadLine(buffer, 80);

	push	80					; 00000050H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _mslList$[ebp]
	call	?ReadLine@SimlibFileClass@@QAEHPADH@Z	; SimlibFileClass::ReadLine

; 112  : 		/*-------------------------------------------*/
; 113  : 		/* Open the basic input file for the Bomb */
; 114  : 		/*-------------------------------------------*/
; 115  : 		sprintf (fName, "%s\\%s.dat", Bomb_DIR, buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	OFFSET ??_C@_0N@GOBDABJH@sim?2bombdata?$AA@
	push	OFFSET ??_C@_09KGGGMDAE@?$CFs?2?$CFs?4dat?$AA@
	lea	eax, DWORD PTR _fName$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 116  : 		inputFile = SimlibFileClass::Open(fName, SIMLIB_READ);

	push	4
	lea	ecx, DWORD PTR _fName$[ebp]
	push	ecx
	call	?Open@SimlibFileClass@@SAPAV1@PADH@Z	; SimlibFileClass::Open
	add	esp, 8
	mov	DWORD PTR _inputFile$[ebp], eax

; 117  : 		//F4Assert(inputFile);
; 118  : 		if(inputFile)

	cmp	DWORD PTR _inputFile$[ebp], 0
	je	$LN1@ReadAllBom

; 119  : 		{
; 120  : 			strncpy(BombDataset[i].name, buffer, sizeof(BombDataset[i].name));

	push	80					; 00000050H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 121  : 			BombDataset[i].name[sizeof(BombDataset[i].name) - 1] = '\0';

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 92					; 0000005cH
	add	ecx, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	edx, 1
	imul	edx, 79					; 0000004fH
	mov	BYTE PTR [ecx+edx], 0

; 122  : 			BombDataset[i].inputData	= BombInputRead(inputFile);

	mov	eax, DWORD PTR _inputFile$[ebp]
	push	eax
	call	?BombInputRead@@YAPAVBombInputData@@PAVSimlibFileClass@@@Z ; BombInputRead
	add	esp, 4
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 92					; 0000005cH
	mov	edx, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	DWORD PTR [edx+ecx+84], eax

; 123  : 			BombDataset[i].auxData		= BombAuxAeroRead(inputFile); // JPO

	mov	eax, DWORD PTR _inputFile$[ebp]
	push	eax
	call	?BombAuxAeroRead@@YAPAVBombAuxData@@PAVSimlibFileClass@@@Z ; BombAuxAeroRead
	add	esp, 4
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 92					; 0000005cH
	mov	edx, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	DWORD PTR [edx+ecx+88], eax

; 124  : 			inputFile->Close();

	mov	ecx, DWORD PTR _inputFile$[ebp]
	call	?Close@SimlibFileClass@@QAEHXZ		; SimlibFileClass::Close

; 125  : 			delete inputFile;

	mov	eax, DWORD PTR _inputFile$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@ReadAllBom:

; 126  : 		}
; 127  : 	}

	jmp	$LN3@ReadAllBom
$LN2@ReadAllBom:

; 128  : 	mslList->Close ();

	mov	ecx, DWORD PTR _mslList$[ebp]
	call	?Close@SimlibFileClass@@QAEHXZ		; SimlibFileClass::Close

; 129  :    delete mslList;

	mov	edx, DWORD PTR _mslList$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@ReadAllBom:

; 130  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadAllBombData@@YAXXZ ENDP				; ReadAllBombData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBombAuxData@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GBombAuxData@@QAEPAXI@Z PROC				; BombAuxData::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BombAuxData@@QAE@XZ			; BombAuxData::~BombAuxData
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBombAuxData@@QAEPAXI@Z ENDP				; BombAuxData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\bombdata.h
;	COMDAT ??1BombAuxData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1BombAuxData@@QAE@XZ PROC				; BombAuxData::~BombAuxData, COMDAT
; _this$ = ecx

; 29   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 30   : 		if(psFeatureImpact) free(psFeatureImpact);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN2@BombAuxDat
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_free
	add	esp, 4
$LN2@BombAuxDat:

; 31   : 		if(psBombImpact) free(psBombImpact);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN3@BombAuxDat
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_free
	add	esp, 4
$LN3@BombAuxDat:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1BombAuxData@@QAE@XZ ENDP				; BombAuxData::~BombAuxData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\bombdata.h
;	COMDAT ??0BombAuxData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0BombAuxData@@QAE@XZ PROC				; BombAuxData::BombAuxData, COMDAT
; _this$ = ecx

; 22   : 	BombAuxData()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 23   : 	{
; 24   : 		psFeatureImpact=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 25   : 		psBombImpact=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0

; 26   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0BombAuxData@@QAE@XZ ENDP				; BombAuxData::BombAuxData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\bomb\readin.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -4						; size = 4
_idx$ = 8						; size = 4
?ReadInput@BombClass@@QAEXH@Z PROC			; BombClass::ReadInput
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	if(BombDataset && idx<numBombDatasets)

	cmp	DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A, 0 ; BombDataset
	je	SHORT $LN2@ReadInput
	mov	eax, DWORD PTR _idx$[ebp]
	cmp	eax, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	jge	SHORT $LN2@ReadInput

; 55   : 	{
; 56   : 		auxData =
; 57   : 			BombDataset[min (idx, numBombDatasets-1)].auxData;

	mov	ecx, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	sub	ecx, 1
	cmp	DWORD PTR _idx$[ebp], ecx
	jge	SHORT $LN5@ReadInput
	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@ReadInput
$LN5@ReadInput:
	mov	eax, DWORD PTR ?numBombDatasets@@3HA	; numBombDatasets
	sub	eax, 1
	mov	DWORD PTR tv70[ebp], eax
$LN6@ReadInput:
	mov	ecx, DWORD PTR tv70[ebp]
	imul	ecx, 92					; 0000005cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?BombDataset@@3PAVBombDataSetClass@@A ; BombDataset
	mov	ecx, DWORD PTR [eax+ecx+88]
	mov	DWORD PTR [edx+832], ecx

; 58   : 	}
; 59   : 	else

	jmp	SHORT $LN3@ReadInput
$LN2@ReadInput:

; 60   : 	{
; 61   : 		auxData = &DefaultBombAuxData;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+832], OFFSET ?DefaultBombAuxData@@3VBombAuxData@@A ; DefaultBombAuxData
$LN3@ReadInput:

; 62   : 	}
; 63   : 	/*
; 64   :    weight = inputData->wm0 + inputData->wp0;
; 65   :    wprop  = inputData->wp0;
; 66   :    mass   = weight/GRAVITY;
; 67   :    m0     = inputData->wm0/GRAVITY;
; 68   :    mp0    = inputData->wp0/GRAVITY;
; 69   :    mprop  = wprop/GRAVITY;
; 70   :    */
; 71   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ReadInput@BombClass@@QAEXH@Z ENDP			; BombClass::ReadInput
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
END
