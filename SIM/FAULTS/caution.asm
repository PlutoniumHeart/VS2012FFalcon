; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\FAULTS\caution.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SetCaution@CautionClass@@AAEXH@Z		; CautionClass::SetCaution
PUBLIC	?ClearCaution@CautionClass@@AAEXH@Z		; CautionClass::ClearCaution
PUBLIC	?GetCaution@CautionClass@@AAEHH@Z		; CautionClass::GetCaution
PUBLIC	?IsFlagSet@CautionClass@@QAEHXZ			; CautionClass::IsFlagSet
PUBLIC	?ClearFlag@CautionClass@@QAEXXZ			; CautionClass::ClearFlag
PUBLIC	?SetCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z ; CautionClass::SetCaution
PUBLIC	?SetCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z ; CautionClass::SetCaution
PUBLIC	?ClearCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z ; CautionClass::ClearCaution
PUBLIC	?ClearCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z ; CautionClass::ClearCaution
PUBLIC	?GetCaution@CautionClass@@QAEHW4type_CSubSystem@@@Z ; CautionClass::GetCaution
PUBLIC	?GetCaution@CautionClass@@QAEHW4type_TWSubSystem@@@Z ; CautionClass::GetCaution
PUBLIC	??0CautionClass@@QAE@XZ				; CautionClass::CautionClass
PUBLIC	??_C@_0N@BFJBHDAI@remove?5call?6?$AA@		; `string'
EXTRN	_MonoPrint:PROC
;	COMDAT ??_C@_0N@BFJBHDAI@remove?5call?6?$AA@
CONST	SEGMENT
??_C@_0N@BFJBHDAI@remove?5call?6?$AA@ DB 'remove call', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = -4						; size = 4
??0CautionClass@@QAE@XZ PROC				; CautionClass::CautionClass
; _this$ = ecx

; 8    : CautionClass::CautionClass() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 9    : 
; 10   : 	int	i;
; 11   : 
; 12   : 	for (i = 0; i < NumVectors; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@CautionCla
$LN2@CautionCla:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@CautionCla:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN4@CautionCla

; 13   : 		mpBitVector[i]	= 0x0;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], 0

; 14   : 	}

	jmp	SHORT $LN2@CautionCla
$LN4@CautionCla:

; 15   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CautionClass@@QAE@XZ ENDP				; CautionClass::CautionClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?GetCaution@CautionClass@@QAEHW4type_TWSubSystem@@@Z PROC ; CautionClass::GetCaution
; _this$ = ecx

; 90   : BOOL CautionClass::GetCaution(type_TWSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	return GetCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCaution@CautionClass@@AAEHH@Z	; CautionClass::GetCaution

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCaution@CautionClass@@QAEHW4type_TWSubSystem@@@Z ENDP ; CautionClass::GetCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?GetCaution@CautionClass@@QAEHW4type_CSubSystem@@@Z PROC ; CautionClass::GetCaution
; _this$ = ecx

; 82   : BOOL CautionClass::GetCaution(type_CSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 	return GetCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCaution@CautionClass@@AAEHH@Z	; CautionClass::GetCaution

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCaution@CautionClass@@QAEHW4type_CSubSystem@@@Z ENDP ; CautionClass::GetCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?ClearCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z PROC ; CautionClass::ClearCaution
; _this$ = ecx

; 73   : void CautionClass::ClearCaution(type_TWSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 74   : 
; 75   : 	ClearCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCaution@CautionClass@@AAEXH@Z	; CautionClass::ClearCaution

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z ENDP ; CautionClass::ClearCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?ClearCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z PROC ; CautionClass::ClearCaution
; _this$ = ecx

; 64   : void CautionClass::ClearCaution(type_CSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 
; 66   : 	ClearCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCaution@CautionClass@@AAEXH@Z	; CautionClass::ClearCaution

; 67   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z ENDP ; CautionClass::ClearCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?SetCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z PROC ; CautionClass::SetCaution
; _this$ = ecx

; 55   : void CautionClass::SetCaution(type_TWSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 	
; 57   : 	SetCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCaution@CautionClass@@AAEXH@Z	; CautionClass::SetCaution

; 58   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetCaution@CautionClass@@QAEXW4type_TWSubSystem@@@Z ENDP ; CautionClass::SetCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_subsystem$ = 8						; size = 4
?SetCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z PROC ; CautionClass::SetCaution
; _this$ = ecx

; 46   : void CautionClass::SetCaution(type_CSubSystem subsystem) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 
; 48   : 	SetCaution((int) subsystem);

	mov	eax, DWORD PTR _subsystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetCaution@CautionClass@@AAEXH@Z	; CautionClass::SetCaution

; 49   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetCaution@CautionClass@@QAEXW4type_CSubSystem@@@Z ENDP ; CautionClass::SetCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearFlag@CautionClass@@QAEXXZ PROC			; CautionClass::ClearFlag
; _this$ = ecx

; 38   : void CautionClass::ClearFlag() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 39   : MonoPrint("remove call\n");

	push	OFFSET ??_C@_0N@BFJBHDAI@remove?5call?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 40   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearFlag@CautionClass@@QAEXXZ ENDP			; CautionClass::ClearFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv71 = -12						; size = 4
_flag$ = -8						; size = 4
_i$ = -4						; size = 4
?IsFlagSet@CautionClass@@QAEHXZ PROC			; CautionClass::IsFlagSet
; _this$ = ecx

; 21   : BOOL CautionClass::IsFlagSet() {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 22   : 
; 23   : 	int i;
; 24   : 	unsigned int flag = 0;

	mov	DWORD PTR _flag$[ebp], 0

; 25   : 
; 26   : 
; 27   : 	for(i = 0; i < NumVectors; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@IsFlagSet
$LN2@IsFlagSet:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@IsFlagSet:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN1@IsFlagSet

; 28   : 		flag 	|= mpBitVector[i];

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _flag$[ebp]
	or	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _flag$[ebp], eax

; 29   : 	}

	jmp	SHORT $LN2@IsFlagSet
$LN1@IsFlagSet:

; 30   : 
; 31   : 	return (flag != 0);

	cmp	DWORD PTR _flag$[ebp], 0
	je	SHORT $LN6@IsFlagSet
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN7@IsFlagSet
$LN6@IsFlagSet:
	mov	DWORD PTR tv71[ebp], 0
$LN7@IsFlagSet:
	mov	eax, DWORD PTR tv71[ebp]

; 32   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsFlagSet@CautionClass@@QAEHXZ ENDP			; CautionClass::IsFlagSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_bitNum$ = -12						; size = 4
tv73 = -8						; size = 4
_vectorNum$ = -4					; size = 4
_subsystem$ = 8						; size = 4
?GetCaution@CautionClass@@AAEHH@Z PROC			; CautionClass::GetCaution
; _this$ = ecx

; 130  : BOOL CautionClass::GetCaution(int subsystem) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 131  : 
; 132  : 	int		vectorNum	= 0;

	mov	DWORD PTR _vectorNum$[ebp], 0

; 133  : 	int		bitNum;
; 134  : 
; 135  : 	vectorNum	= subsystem / BITS_PER_VECTOR;

	mov	eax, DWORD PTR _subsystem$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _vectorNum$[ebp], eax

; 136  : 	bitNum		= subsystem - vectorNum * BITS_PER_VECTOR;

	mov	eax, DWORD PTR _vectorNum$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _subsystem$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _bitNum$[ebp], ecx

; 137  : 
; 138  : 	return ((mpBitVector[vectorNum] & (0x01 << bitNum)) != 0);

	mov	edx, 1
	mov	ecx, DWORD PTR _bitNum$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _vectorNum$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	and	edx, DWORD PTR [ecx+eax*4]
	je	SHORT $LN3@GetCaution
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@GetCaution
$LN3@GetCaution:
	mov	DWORD PTR tv73[ebp], 0
$LN4@GetCaution:
	mov	eax, DWORD PTR tv73[ebp]

; 139  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCaution@CautionClass@@AAEHH@Z ENDP			; CautionClass::GetCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_bitNum$ = -12						; size = 4
_this$ = -8						; size = 4
_vectorNum$ = -4					; size = 4
_subsystem$ = 8						; size = 4
?ClearCaution@CautionClass@@AAEXH@Z PROC		; CautionClass::ClearCaution
; _this$ = ecx

; 114  : void CautionClass::ClearCaution(int subsystem) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 115  : 	
; 116  : 	int		vectorNum	= 0;

	mov	DWORD PTR _vectorNum$[ebp], 0

; 117  : 	int		bitNum;
; 118  : 
; 119  : 	vectorNum	= subsystem / BITS_PER_VECTOR;

	mov	eax, DWORD PTR _subsystem$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _vectorNum$[ebp], eax

; 120  : 	bitNum		= subsystem - vectorNum * BITS_PER_VECTOR;

	mov	eax, DWORD PTR _vectorNum$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _subsystem$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _bitNum$[ebp], ecx

; 121  : 
; 122  : 	mpBitVector[vectorNum] &= ~(0x01 << bitNum);

	mov	edx, 1
	mov	ecx, DWORD PTR _bitNum$[ebp]
	shl	edx, cl
	not	edx
	mov	eax, DWORD PTR _vectorNum$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	and	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _vectorNum$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 123  : 
; 124  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearCaution@CautionClass@@AAEXH@Z ENDP		; CautionClass::ClearCaution
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\faults\caution.cpp
_TEXT	SEGMENT
_bitNum$ = -12						; size = 4
_this$ = -8						; size = 4
_vectorNum$ = -4					; size = 4
_subsystem$ = 8						; size = 4
?SetCaution@CautionClass@@AAEXH@Z PROC			; CautionClass::SetCaution
; _this$ = ecx

; 98   : void CautionClass::SetCaution(int subsystem) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 
; 100  : 	int		vectorNum	= 0;

	mov	DWORD PTR _vectorNum$[ebp], 0

; 101  : 	int		bitNum;
; 102  : 
; 103  : 	vectorNum	= subsystem / BITS_PER_VECTOR;

	mov	eax, DWORD PTR _subsystem$[ebp]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _vectorNum$[ebp], eax

; 104  : 	bitNum		= subsystem - vectorNum * BITS_PER_VECTOR;

	mov	eax, DWORD PTR _vectorNum$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _subsystem$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _bitNum$[ebp], ecx

; 105  : 
; 106  : 	mpBitVector[vectorNum] |= 0x01 << bitNum;

	mov	edx, 1
	mov	ecx, DWORD PTR _bitNum$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _vectorNum$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	or	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _vectorNum$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 107  : 
; 108  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetCaution@CautionClass@@AAEXH@Z ENDP			; CautionClass::SetCaution
_TEXT	ENDS
END
