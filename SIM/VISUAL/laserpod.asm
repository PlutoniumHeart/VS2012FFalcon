; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\VISUAL\laserpod.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
_NEAR_CLIP DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
_DATA	SEGMENT
_matrix33_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	ORG $+4
_matrix44_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	_atanf
PUBLIC	_cosf
PUBLIC	_sinf
PUBLIC	?atan@@YAMM@Z					; atan
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?ZPos@VuEntity@@QBEMXZ				; VuEntity::ZPos
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?IsSim@FalconEntity@@QAEHXZ			; FalconEntity::IsSim
PUBLIC	?checked_atan2@@YANNN@Z				; checked_atan2
PUBLIC	?IsSOI@DrawableClass@@QAEHXZ			; DrawableClass::IsSOI
PUBLIC	?Type@SensorClass@@QAE?AW4SensorType@1@XZ	; SensorClass::Type
PUBLIC	?SetType@SensorClass@@UAEXW4SensorType@1@@Z	; SensorClass::SetType
PUBLIC	?SetPower@SensorClass@@UAEXH@Z			; SensorClass::SetPower
PUBLIC	?IsOn@SensorClass@@UAEHXZ			; SensorClass::IsOn
PUBLIC	?ExecModes@SensorClass@@UAEXHH@Z		; SensorClass::ExecModes
PUBLIC	?UpdateState@SensorClass@@UAEXHH@Z		; SensorClass::UpdateState
PUBLIC	?SetSeekerPos@SensorClass@@UAEXMM@Z		; SensorClass::SetSeekerPos
PUBLIC	?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ	; SensorClass::TargetUnderCursor
PUBLIC	?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ ; SensorClass::GetDisplay
PUBLIC	?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ	; SimObjectType::BaseData
PUBLIC	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
PUBLIC	?VisualType@VisualClass@@QAEHXZ			; VisualClass::VisualType
PUBLIC	??0LaserPodClass@@QAE@HPAVSimMoverClass@@@Z	; LaserPodClass::LaserPodClass
PUBLIC	??1LaserPodClass@@UAE@XZ			; LaserPodClass::~LaserPodClass
PUBLIC	?Exec@LaserPodClass@@UAEPAVSimObjectType@@PAV2@@Z ; LaserPodClass::Exec
PUBLIC	?Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z ; LaserPodClass::Display
PUBLIC	?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z ; LaserPodClass::DisplayInit
PUBLIC	?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z ; LaserPodClass::SetDesiredTarget
PUBLIC	?LockTarget@LaserPodClass@@QAEHXZ		; LaserPodClass::LockTarget
PUBLIC	?IsLocked@LaserPodClass@@QAEHXZ			; LaserPodClass::IsLocked
PUBLIC	?ToggleFOV@LaserPodClass@@QAEXXZ		; LaserPodClass::ToggleFOV
PUBLIC	?SetDesiredSeekerPos@LaserPodClass@@QAEHPAM0@Z	; LaserPodClass::SetDesiredSeekerPos
PUBLIC	?DrawBox@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawBox
PUBLIC	?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawFOV
PUBLIC	?DrawTerrain@LaserPodClass@@IAEXXZ		; LaserPodClass::DrawTerrain
PUBLIC	??_GLaserPodClass@@UAEPAXI@Z			; LaserPodClass::`scalar deleting destructor'
PUBLIC	??0Edge@@QAE@XZ					; Edge::Edge
PUBLIC	??1Edge@@QAE@XZ					; Edge::~Edge
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?CurrentForegroundColor@ContextMPR@@QAEHXZ	; ContextMPR::CurrentForegroundColor
PUBLIC	??0VirtualDisplay@@QAE@XZ			; VirtualDisplay::VirtualDisplay
PUBLIC	??1VirtualDisplay@@UAE@XZ			; VirtualDisplay::~VirtualDisplay
PUBLIC	?Circle@VirtualDisplay@@UAEXMMM@Z		; VirtualDisplay::Circle
PUBLIC	?Arc@VirtualDisplay@@UAEXMMMMM@Z		; VirtualDisplay::Arc
PUBLIC	?TextWidth@VirtualDisplay@@UAEMPAD@Z		; VirtualDisplay::TextWidth
PUBLIC	?TextHeight@VirtualDisplay@@UAEMXZ		; VirtualDisplay::TextHeight
PUBLIC	?SetLineStyle@VirtualDisplay@@UAEXH@Z		; VirtualDisplay::SetLineStyle
PUBLIC	?Color@VirtualDisplay@@UAEKXZ			; VirtualDisplay::Color
PUBLIC	??_GVirtualDisplay@@UAEPAXI@Z			; VirtualDisplay::`scalar deleting destructor'
PUBLIC	??0Render2D@@QAE@XZ				; Render2D::Render2D
PUBLIC	??1Render2D@@UAE@XZ				; Render2D::~Render2D
PUBLIC	?ClearDraw@Render2D@@UAEXXZ			; Render2D::ClearDraw
PUBLIC	?ClearZBuffer@Render2D@@UAEXXZ			; Render2D::ClearZBuffer
PUBLIC	?Color@Render2D@@UAEKXZ				; Render2D::Color
PUBLIC	?SetColor@Render2D@@UAEXK@Z			; Render2D::SetColor
PUBLIC	?SetBackground@Render2D@@UAEXK@Z		; Render2D::SetBackground
PUBLIC	?SetLineStyle@Render2D@@UAEXH@Z			; Render2D::SetLineStyle
PUBLIC	??_GRender2D@@UAEPAXI@Z				; Render2D::`scalar deleting destructor'
PUBLIC	??0Render3D@@QAE@XZ				; Render3D::Render3D
PUBLIC	??1Render3D@@UAE@XZ				; Render3D::~Render3D
PUBLIC	?Cleanup@Render3D@@UAEXXZ			; Render3D::Cleanup
PUBLIC	??_GRender3D@@UAEPAXI@Z				; Render3D::`scalar deleting destructor'
PUBLIC	??0RenderOTW@@QAE@XZ				; RenderOTW::RenderOTW
PUBLIC	??1RenderOTW@@UAE@XZ				; RenderOTW::~RenderOTW
PUBLIC	??_GRenderOTW@@UAEPAXI@Z			; RenderOTW::`scalar deleting destructor'
PUBLIC	??0RenderTV@@QAE@XZ				; RenderTV::RenderTV
PUBLIC	??1RenderTV@@UAE@XZ				; RenderTV::~RenderTV
PUBLIC	?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z ; RenderTV::ComputeHorizonEffect
PUBLIC	??_GRenderTV@@UAEPAXI@Z				; RenderTV::`scalar deleting destructor'
PUBLIC	??0RenderIR@@QAE@XZ				; RenderIR::RenderIR
PUBLIC	??1RenderIR@@UAE@XZ				; RenderIR::~RenderIR
PUBLIC	?DrawMoon@RenderIR@@MAEXH@Z			; RenderIR::DrawMoon
PUBLIC	?DrawStars@RenderIR@@MAEXXZ			; RenderIR::DrawStars
PUBLIC	?SetTimeOfDayColor@RenderIR@@MAEXXZ		; RenderIR::SetTimeOfDayColor
PUBLIC	?AdjustSkyColor@RenderIR@@MAEXXZ		; RenderIR::AdjustSkyColor
PUBLIC	??_GRenderIR@@UAEPAXI@Z				; RenderIR::`scalar deleting destructor'
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ; SMSBaseClass::MasterArm
PUBLIC	?GetLantirnCameraX@AirframeClass@@QAEMXZ	; AirframeClass::GetLantirnCameraX
PUBLIC	?GetLantirnCameraY@AirframeClass@@QAEMXZ	; AirframeClass::GetLantirnCameraY
PUBLIC	?GetLantirnCameraZ@AirframeClass@@QAEMXZ	; AirframeClass::GetLantirnCameraZ
PUBLIC	?FindLaserPod@@YAPAVSensorClass@@PAVSimMoverClass@@@Z ; FindLaserPod
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7LaserPodClass@@6B@				; LaserPodClass::`vftable'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7VirtualDisplay@@6B@				; VirtualDisplay::`vftable'
PUBLIC	??_7Render2D@@6B@				; Render2D::`vftable'
PUBLIC	??_7Render3D@@6B@				; Render3D::`vftable'
PUBLIC	??_7RenderOTW@@6B@				; RenderOTW::`vftable'
PUBLIC	??_7RenderTV@@6B@				; RenderTV::`vftable'
PUBLIC	??_7RenderIR@@6B@				; RenderIR::`vftable'
PUBLIC	??_C@_04KCHJIPFN@AREA?$AA@			; `string'
PUBLIC	??_C@_07MBJCAOMB@NOT?5SOI?$AA@			; `string'
PUBLIC	??_C@_05NKNPLGBO@POINT?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4VirtualDisplay@@6B@			; VirtualDisplay::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVirtualDisplay@@@8			; VirtualDisplay `RTTI Type Descriptor'
PUBLIC	??_R3VirtualDisplay@@8				; VirtualDisplay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VirtualDisplay@@8				; VirtualDisplay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VirtualDisplay@@8			; VirtualDisplay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVDrawableClass@@@8			; DrawableClass `RTTI Type Descriptor'
PUBLIC	??_R3DrawableClass@@8				; DrawableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableClass@@8				; DrawableClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableClass@@8			; DrawableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Render3D@@6B@				; Render3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRender3D@@@8				; Render3D `RTTI Type Descriptor'
PUBLIC	??_R3Render3D@@8				; Render3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Render3D@@8				; Render3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Render3D@@8			; Render3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Render2D@@8			; Render2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRender2D@@@8				; Render2D `RTTI Type Descriptor'
PUBLIC	??_R3Render2D@@8				; Render2D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Render2D@@8				; Render2D::`RTTI Base Class Array'
PUBLIC	??_R4LaserPodClass@@6B@				; LaserPodClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLaserPodClass@@@8			; LaserPodClass `RTTI Type Descriptor'
PUBLIC	??_R3LaserPodClass@@8				; LaserPodClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LaserPodClass@@8				; LaserPodClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LaserPodClass@@8			; LaserPodClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VisualClass@@8			; VisualClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVisualClass@@@8				; VisualClass `RTTI Type Descriptor'
PUBLIC	??_R3VisualClass@@8				; VisualClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VisualClass@@8				; VisualClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SensorClass@@8			; SensorClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSensorClass@@@8				; SensorClass `RTTI Type Descriptor'
PUBLIC	??_R3SensorClass@@8				; SensorClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SensorClass@@8				; SensorClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MfdDrawable@@8			; MfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMfdDrawable@@@8				; MfdDrawable `RTTI Type Descriptor'
PUBLIC	??_R3MfdDrawable@@8				; MfdDrawable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MfdDrawable@@8				; MfdDrawable::`RTTI Base Class Array'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Render2D@@6B@				; Render2D::`RTTI Complete Object Locator'
PUBLIC	??_R4RenderOTW@@6B@				; RenderOTW::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderOTW@@@8				; RenderOTW `RTTI Type Descriptor'
PUBLIC	??_R3RenderOTW@@8				; RenderOTW::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderOTW@@8				; RenderOTW::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderOTW@@8			; RenderOTW::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RenderTV@@6B@				; RenderTV::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderTV@@@8				; RenderTV `RTTI Type Descriptor'
PUBLIC	??_R3RenderTV@@8				; RenderTV::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderTV@@8				; RenderTV::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderTV@@8			; RenderTV::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RenderIR@@6B@				; RenderIR::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderIR@@@8				; RenderIR `RTTI Type Descriptor'
PUBLIC	??_R3RenderIR@@8				; RenderIR::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderIR@@8				; RenderIR::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderIR@@8			; RenderIR::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c730fbf
PUBLIC	__real@3ce4c387
PUBLIC	__real@3cf30fbf
PUBLIC	__real@3d56774e
PUBLIC	__real@3db2b8c1
PUBLIC	__real@3dcccccd
PUBLIC	__real@3dd6774e
PUBLIC	__real@3e32b8c1
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e99999a
PUBLIC	__real@3eb2b8c1
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f1c61a9
PUBLIC	__real@3f800000
PUBLIC	__real@3f860a91
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@40060a91
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@40278d35
PUBLIC	__real@44800000
PUBLIC	__real@8000000000000000
PUBLIC	__real@bdcccccd
PUBLIC	__real@be4ccccd
PUBLIC	__real@be800000
PUBLIC	__real@becccccd
PUBLIC	__real@bf000000
PUBLIC	__real@bf060a91
PUBLIC	__real@bf19999a
PUBLIC	__real@bf800000
PUBLIC	__real@bfc90fd9
PUBLIC	__real@bff921fb54442d18
PUBLIC	__real@c0278d35
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_atan:PROC
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	?DisplayExit@DrawableClass@@UAEXXZ:PROC		; DrawableClass::DisplayExit
EXTRN	?DrawBorder@DrawableClass@@QAEXXZ:PROC		; DrawableClass::DrawBorder
EXTRN	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z:PROC ; DrawableClass::GetMfdColor
EXTRN	?PushButton@MfdDrawable@@UAEXHH@Z:PROC		; MfdDrawable::PushButton
EXTRN	?ClearSensorTarget@SensorClass@@UAEXXZ:PROC	; SensorClass::ClearSensorTarget
EXTRN	?SetSensorTarget@SensorClass@@MAEXPAVSimObjectType@@@Z:PROC ; SensorClass::SetSensorTarget
EXTRN	?SetSensorTargetHack@SensorClass@@MAEXPAVFalconEntity@@@Z:PROC ; SensorClass::SetSensorTargetHack
EXTRN	?CheckLockedTarget@SensorClass@@MAEXXZ:PROC	; SensorClass::CheckLockedTarget
EXTRN	??0VisualClass@@QAE@HPAVSimMoverClass@@@Z:PROC	; VisualClass::VisualClass
EXTRN	??1VisualClass@@UAE@XZ:PROC			; VisualClass::~VisualClass
EXTRN	?CanSeeObject@VisualClass@@UAEHPAVSimObjectType@@@Z:PROC ; VisualClass::CanSeeObject
EXTRN	?CanSeeObject@VisualClass@@UAEHMM@Z:PROC	; VisualClass::CanSeeObject
EXTRN	?GetSignature@VisualClass@@UAEMPAVSimObjectType@@@Z:PROC ; VisualClass::GetSignature
EXTRN	?CanDetectObject@VisualClass@@UAEHPAVSimObjectType@@@Z:PROC ; VisualClass::CanDetectObject
EXTRN	??_ELaserPodClass@@UAEPAXI@Z:PROC		; LaserPodClass::`vector deleting destructor'
EXTRN	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z:PROC ; MatrixMult
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??0ContextMPR@@QAE@XZ:PROC			; ContextMPR::ContextMPR
EXTRN	??1ContextMPR@@UAE@XZ:PROC			; ContextMPR::~ContextMPR
EXTRN	?SetState@ContextMPR@@QAEXGK@Z:PROC		; ContextMPR::SetState
EXTRN	?ClearBuffers@ContextMPR@@QAEXG@Z:PROC		; ContextMPR::ClearBuffers
EXTRN	?SelectForegroundColor@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectForegroundColor
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	?FlushPolyLists@ContextMPR@@QAEXXZ:PROC		; ContextMPR::FlushPolyLists
EXTRN	?Setup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Setup
EXTRN	?Cleanup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Cleanup
EXTRN	?Point@VirtualDisplay@@UAEXMM@Z:PROC		; VirtualDisplay::Point
EXTRN	?Line@VirtualDisplay@@UAEXMMMM@Z:PROC		; VirtualDisplay::Line
EXTRN	?Line@VirtualDisplay@@UAEXMMMMM@Z:PROC		; VirtualDisplay::Line
EXTRN	?Tri@VirtualDisplay@@UAEXMMMMMM@Z:PROC		; VirtualDisplay::Tri
EXTRN	?Oval@VirtualDisplay@@UAEXMMMM@Z:PROC		; VirtualDisplay::Oval
EXTRN	?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z:PROC	; VirtualDisplay::OvalArc
EXTRN	?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextLeft
EXTRN	?TextRight@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextRight
EXTRN	?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextLeftVertical
EXTRN	?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextRightVertical
EXTRN	?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextCenter
EXTRN	?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextCenterVertical
EXTRN	?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z:PROC	; VirtualDisplay::TextWrap
EXTRN	?ScreenTextHeight@VirtualDisplay@@SAHXZ:PROC	; VirtualDisplay::ScreenTextHeight
EXTRN	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z:PROC	; VirtualDisplay::ScreenTextWidth
EXTRN	?SetViewport@VirtualDisplay@@UAEXMMMM@Z:PROC	; VirtualDisplay::SetViewport
EXTRN	?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z:PROC ; VirtualDisplay::SetViewportRelative
EXTRN	?AdjustOriginInViewport@VirtualDisplay@@QAEXMM@Z:PROC ; VirtualDisplay::AdjustOriginInViewport
EXTRN	?Render2DTri@VirtualDisplay@@MAEXMMMMMM@Z:PROC	; VirtualDisplay::Render2DTri
EXTRN	??_EVirtualDisplay@@UAEPAXI@Z:PROC		; VirtualDisplay::`vector deleting destructor'
EXTRN	?Setup@Render2D@@UAEXPAVImageBuffer@@@Z:PROC	; Render2D::Setup
EXTRN	?Cleanup@Render2D@@UAEXXZ:PROC			; Render2D::Cleanup
EXTRN	?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z:PROC ; Render2D::SetImageBuffer
EXTRN	?StartDraw@Render2D@@UAEXXZ:PROC		; Render2D::StartDraw
EXTRN	?EndDraw@Render2D@@UAEXXZ:PROC			; Render2D::EndDraw
EXTRN	?SetViewport@Render2D@@UAEXMMMM@Z:PROC		; Render2D::SetViewport
EXTRN	?Render2DPoint@Render2D@@UAEXMM@Z:PROC		; Render2D::Render2DPoint
EXTRN	?Render2DLine@Render2D@@UAEXMMMM@Z:PROC		; Render2D::Render2DLine
EXTRN	?Render2DTri@Render2D@@UAEXMMMMMM@Z:PROC	; Render2D::Render2DTri
EXTRN	?ScreenText@Render2D@@UAEXMMPBDH@Z:PROC		; Render2D::ScreenText
EXTRN	??_ERender2D@@UAEPAXI@Z:PROC			; Render2D::`vector deleting destructor'
EXTRN	?Setup@Render3D@@UAEXPAVImageBuffer@@@Z:PROC	; Render3D::Setup
EXTRN	?StartDraw@Render3D@@UAEXXZ:PROC		; Render3D::StartDraw
EXTRN	?SetFOV@Render3D@@QAEXMM@Z:PROC			; Render3D::SetFOV
EXTRN	?SetViewport@Render3D@@UAEXMMMM@Z:PROC		; Render3D::SetViewport
EXTRN	??_ERender3D@@UAEPAXI@Z:PROC			; Render3D::`vector deleting destructor'
EXTRN	?Setup@RenderOTW@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderOTW::Setup
EXTRN	?Cleanup@RenderOTW@@UAEXXZ:PROC			; RenderOTW::Cleanup
EXTRN	?StartDraw@RenderOTW@@UAEXXZ:PROC		; RenderOTW::StartDraw
EXTRN	?EndDraw@RenderOTW@@UAEXXZ:PROC			; RenderOTW::EndDraw
EXTRN	?DrawScene@RenderOTW@@QAEXPBUTpoint@@PBUTrotation@@@Z:PROC ; RenderOTW::DrawScene
EXTRN	?ComputeVertexColor@RenderOTW@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderOTW::ComputeVertexColor
EXTRN	?ProcessColor@RenderOTW@@MAEXPAUTcolor@@@Z:PROC	; RenderOTW::ProcessColor
EXTRN	?DrawSun@RenderOTW@@MAEXXZ:PROC			; RenderOTW::DrawSun
EXTRN	?DrawMoon@RenderOTW@@MAEXXZ:PROC		; RenderOTW::DrawMoon
EXTRN	?DrawStars@RenderOTW@@MAEXXZ:PROC		; RenderOTW::DrawStars
EXTRN	?ComputeHorizonEffect@RenderOTW@@MAEXPAUHorizonRecord@@@Z:PROC ; RenderOTW::ComputeHorizonEffect
EXTRN	?SetTimeOfDayColor@RenderOTW@@MAEXXZ:PROC	; RenderOTW::SetTimeOfDayColor
EXTRN	?AdjustSkyColor@RenderOTW@@MAEXXZ:PROC		; RenderOTW::AdjustSkyColor
EXTRN	??_ERenderOTW@@UAEPAXI@Z:PROC			; RenderOTW::`vector deleting destructor'
EXTRN	?Setup@RenderTV@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderTV::Setup
EXTRN	?StartDraw@RenderTV@@UAEXXZ:PROC		; RenderTV::StartDraw
EXTRN	?EndDraw@RenderTV@@UAEXXZ:PROC			; RenderTV::EndDraw
EXTRN	?SetColor@RenderTV@@UAEXK@Z:PROC		; RenderTV::SetColor
EXTRN	?DrawSun@RenderTV@@MAEXXZ:PROC			; RenderTV::DrawSun
EXTRN	?DrawMoon@RenderTV@@MAEXXZ:PROC			; RenderTV::DrawMoon
EXTRN	?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z:PROC	; RenderTV::ProcessColor
EXTRN	?ComputeVertexColor@RenderTV@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderTV::ComputeVertexColor
EXTRN	??_ERenderTV@@UAEPAXI@Z:PROC			; RenderTV::`vector deleting destructor'
EXTRN	?Setup@RenderIR@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderIR::Setup
EXTRN	?StartDraw@RenderIR@@UAEXXZ:PROC		; RenderIR::StartDraw
EXTRN	?EndDraw@RenderIR@@UAEXXZ:PROC			; RenderIR::EndDraw
EXTRN	?ComputeVertexColor@RenderIR@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderIR::ComputeVertexColor
EXTRN	??_ERenderIR@@UAEPAXI@Z:PROC			; RenderIR::`vector deleting destructor'
EXTRN	?GetViewpoint@OTWDriverClass@@QAEPAVRViewPoint@@XZ:PROC ; OTWDriverClass::GetViewpoint
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??0FalconLaserDesignateMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconLaserDesignateMsg::FalconLaserDesignateMsg
EXTRN	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ:PROC ; SimulationDriver::GetPlayerAircraft
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuxRealTime@@3KA:DWORD				; vuxRealTime
EXTRN	?g_bRealisticAvionics@@3_NA:BYTE		; g_bRealisticAvionics
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?SimDriver@@3VSimulationDriver@@A:BYTE		; SimDriver
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?g_bRP5Comp@@3_NA:BYTE				; g_bRP5Comp
EXTRN	?g_bGreyMFD@@3_NA:BYTE				; g_bGreyMFD
EXTRN	?g_bGreyScaleMFD@@3_NA:BYTE			; g_bGreyScaleMFD
EXTRN	?bNVGmode@@3_NA:BYTE				; bNVGmode
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c0278d35
CONST	SEGMENT
__real@c0278d35 DD 0c0278d35r			; -2.61799
CONST	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@bfc90fd9
CONST	SEGMENT
__real@bfc90fd9 DD 0bfc90fd9r			; -1.5708
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf19999a
CONST	SEGMENT
__real@bf19999a DD 0bf19999ar			; -0.6
CONST	ENDS
;	COMDAT __real@bf060a91
CONST	SEGMENT
__real@bf060a91 DD 0bf060a91r			; -0.523599
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@becccccd
CONST	SEGMENT
__real@becccccd DD 0becccccdr			; -0.4
CONST	ENDS
;	COMDAT __real@be800000
CONST	SEGMENT
__real@be800000 DD 0be800000r			; -0.25
CONST	ENDS
;	COMDAT __real@be4ccccd
CONST	SEGMENT
__real@be4ccccd DD 0be4ccccdr			; -0.2
CONST	ENDS
;	COMDAT __real@bdcccccd
CONST	SEGMENT
__real@bdcccccd DD 0bdcccccdr			; -0.1
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@40278d35
CONST	SEGMENT
__real@40278d35 DD 040278d35r			; 2.61799
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@40060a91
CONST	SEGMENT
__real@40060a91 DD 040060a91r			; 2.09439
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3f860a91
CONST	SEGMENT
__real@3f860a91 DD 03f860a91r			; 1.0472
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1c61a9
CONST	SEGMENT
__real@3f1c61a9 DD 03f1c61a9r			; 0.610865
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3eb2b8c1
CONST	SEGMENT
__real@3eb2b8c1 DD 03eb2b8c1r			; 0.349066
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e32b8c1
CONST	SEGMENT
__real@3e32b8c1 DD 03e32b8c1r			; 0.174533
CONST	ENDS
;	COMDAT __real@3dd6774e
CONST	SEGMENT
__real@3dd6774e DD 03dd6774er			; 0.10472
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3db2b8c1
CONST	SEGMENT
__real@3db2b8c1 DD 03db2b8c1r			; 0.0872665
CONST	ENDS
;	COMDAT __real@3d56774e
CONST	SEGMENT
__real@3d56774e DD 03d56774er			; 0.0523599
CONST	ENDS
;	COMDAT __real@3cf30fbf
CONST	SEGMENT
__real@3cf30fbf DD 03cf30fbfr			; 0.0296706
CONST	ENDS
;	COMDAT __real@3ce4c387
CONST	SEGMENT
__real@3ce4c387 DD 03ce4c387r			; 0.0279253
CONST	ENDS
;	COMDAT __real@3c730fbf
CONST	SEGMENT
__real@3c730fbf DD 03c730fbfr			; 0.0148353
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderIR@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderIR@@8 DD FLAT:??_R0?AVRenderIR@@@8	; RenderIR::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderIR@@8
rdata$r	SEGMENT
??_R2RenderIR@@8 DD FLAT:??_R1A@?0A@EA@RenderIR@@8	; RenderIR::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RenderTV@@8
	DD	FLAT:??_R1A@?0A@EA@RenderOTW@@8
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderIR@@8
rdata$r	SEGMENT
??_R3RenderIR@@8 DD 00H					; RenderIR::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderIR@@@8
_DATA	SEGMENT
??_R0?AVRenderIR@@@8 DD FLAT:??_7type_info@@6B@		; RenderIR `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderIR@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderIR@@6B@
rdata$r	SEGMENT
??_R4RenderIR@@6B@ DD 00H				; RenderIR::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderIR@@@8
	DD	FLAT:??_R3RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderTV@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderTV@@8 DD FLAT:??_R0?AVRenderTV@@@8	; RenderTV::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderTV@@8
rdata$r	SEGMENT
??_R2RenderTV@@8 DD FLAT:??_R1A@?0A@EA@RenderTV@@8	; RenderTV::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RenderOTW@@8
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderTV@@8
rdata$r	SEGMENT
??_R3RenderTV@@8 DD 00H					; RenderTV::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderTV@@@8
_DATA	SEGMENT
??_R0?AVRenderTV@@@8 DD FLAT:??_7type_info@@6B@		; RenderTV `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderTV@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderTV@@6B@
rdata$r	SEGMENT
??_R4RenderTV@@6B@ DD 00H				; RenderTV::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderTV@@@8
	DD	FLAT:??_R3RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderOTW@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderOTW@@8 DD FLAT:??_R0?AVRenderOTW@@@8 ; RenderOTW::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderOTW@@8
rdata$r	SEGMENT
??_R2RenderOTW@@8 DD FLAT:??_R1A@?0A@EA@RenderOTW@@8	; RenderOTW::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderOTW@@8
rdata$r	SEGMENT
??_R3RenderOTW@@8 DD 00H				; RenderOTW::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderOTW@@@8
_DATA	SEGMENT
??_R0?AVRenderOTW@@@8 DD FLAT:??_7type_info@@6B@	; RenderOTW `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderOTW@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderOTW@@6B@
rdata$r	SEGMENT
??_R4RenderOTW@@6B@ DD 00H				; RenderOTW::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderOTW@@@8
	DD	FLAT:??_R3RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R4Render2D@@6B@
rdata$r	SEGMENT
??_R4Render2D@@6B@ DD 00H				; Render2D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRender2D@@@8
	DD	FLAT:??_R3Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2MfdDrawable@@8
rdata$r	SEGMENT
??_R2MfdDrawable@@8 DD FLAT:??_R1A@?0A@EA@MfdDrawable@@8 ; MfdDrawable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3MfdDrawable@@8
rdata$r	SEGMENT
??_R3MfdDrawable@@8 DD 00H				; MfdDrawable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMfdDrawable@@@8
_DATA	SEGMENT
??_R0?AVMfdDrawable@@@8 DD FLAT:??_7type_info@@6B@	; MfdDrawable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMfdDrawable@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@MfdDrawable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MfdDrawable@@8 DD FLAT:??_R0?AVMfdDrawable@@@8 ; MfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R2SensorClass@@8
rdata$r	SEGMENT
??_R2SensorClass@@8 DD FLAT:??_R1A@?0A@EA@SensorClass@@8 ; SensorClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MfdDrawable@@8
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3SensorClass@@8
rdata$r	SEGMENT
??_R3SensorClass@@8 DD 00H				; SensorClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SensorClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSensorClass@@@8
_DATA	SEGMENT
??_R0?AVSensorClass@@@8 DD FLAT:??_7type_info@@6B@	; SensorClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSensorClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SensorClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SensorClass@@8 DD FLAT:??_R0?AVSensorClass@@@8 ; SensorClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SensorClass@@8
rdata$r	ENDS
;	COMDAT ??_R2VisualClass@@8
rdata$r	SEGMENT
??_R2VisualClass@@8 DD FLAT:??_R1A@?0A@EA@VisualClass@@8 ; VisualClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SensorClass@@8
	DD	FLAT:??_R1A@?0A@EA@MfdDrawable@@8
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3VisualClass@@8
rdata$r	SEGMENT
??_R3VisualClass@@8 DD 00H				; VisualClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2VisualClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVisualClass@@@8
_DATA	SEGMENT
??_R0?AVVisualClass@@@8 DD FLAT:??_7type_info@@6B@	; VisualClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVisualClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VisualClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VisualClass@@8 DD FLAT:??_R0?AVVisualClass@@@8 ; VisualClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VisualClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@LaserPodClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@LaserPodClass@@8 DD FLAT:??_R0?AVLaserPodClass@@@8 ; LaserPodClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LaserPodClass@@8
rdata$r	ENDS
;	COMDAT ??_R2LaserPodClass@@8
rdata$r	SEGMENT
??_R2LaserPodClass@@8 DD FLAT:??_R1A@?0A@EA@LaserPodClass@@8 ; LaserPodClass::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VisualClass@@8
	DD	FLAT:??_R1A@?0A@EA@SensorClass@@8
	DD	FLAT:??_R1A@?0A@EA@MfdDrawable@@8
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3LaserPodClass@@8
rdata$r	SEGMENT
??_R3LaserPodClass@@8 DD 00H				; LaserPodClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2LaserPodClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLaserPodClass@@@8
_DATA	SEGMENT
??_R0?AVLaserPodClass@@@8 DD FLAT:??_7type_info@@6B@	; LaserPodClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLaserPodClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LaserPodClass@@6B@
rdata$r	SEGMENT
??_R4LaserPodClass@@6B@ DD 00H				; LaserPodClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLaserPodClass@@@8
	DD	FLAT:??_R3LaserPodClass@@8
rdata$r	ENDS
;	COMDAT ??_R2Render2D@@8
rdata$r	SEGMENT
??_R2Render2D@@8 DD FLAT:??_R1A@?0A@EA@Render2D@@8	; Render2D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3Render2D@@8
rdata$r	SEGMENT
??_R3Render2D@@8 DD 00H					; Render2D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRender2D@@@8
_DATA	SEGMENT
??_R0?AVRender2D@@@8 DD FLAT:??_7type_info@@6B@		; Render2D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRender2D@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Render2D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Render2D@@8 DD FLAT:??_R0?AVRender2D@@@8	; Render2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Render3D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Render3D@@8 DD FLAT:??_R0?AVRender3D@@@8	; Render3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R2Render3D@@8
rdata$r	SEGMENT
??_R2Render3D@@8 DD FLAT:??_R1A@?0A@EA@Render3D@@8	; Render3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3Render3D@@8
rdata$r	SEGMENT
??_R3Render3D@@8 DD 00H					; Render3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRender3D@@@8
_DATA	SEGMENT
??_R0?AVRender3D@@@8 DD FLAT:??_7type_info@@6B@		; Render3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRender3D@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Render3D@@6B@
rdata$r	SEGMENT
??_R4Render3D@@6B@ DD 00H				; Render3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRender3D@@@8
	DD	FLAT:??_R3Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableClass@@8 DD FLAT:??_R0?AVDrawableClass@@@8 ; DrawableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableClass@@8
rdata$r	SEGMENT
??_R2DrawableClass@@8 DD FLAT:??_R1A@?0A@EA@DrawableClass@@8 ; DrawableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DrawableClass@@8
rdata$r	SEGMENT
??_R3DrawableClass@@8 DD 00H				; DrawableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableClass@@@8
_DATA	SEGMENT
??_R0?AVDrawableClass@@@8 DD FLAT:??_7type_info@@6B@	; DrawableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VirtualDisplay@@8 DD FLAT:??_R0?AVVirtualDisplay@@@8 ; VirtualDisplay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R2VirtualDisplay@@8
rdata$r	SEGMENT
??_R2VirtualDisplay@@8 DD FLAT:??_R1A@?0A@EA@VirtualDisplay@@8 ; VirtualDisplay::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VirtualDisplay@@8
rdata$r	SEGMENT
??_R3VirtualDisplay@@8 DD 00H				; VirtualDisplay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVirtualDisplay@@@8
_DATA	SEGMENT
??_R0?AVVirtualDisplay@@@8 DD FLAT:??_7type_info@@6B@	; VirtualDisplay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVirtualDisplay@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VirtualDisplay@@6B@
rdata$r	SEGMENT
??_R4VirtualDisplay@@6B@ DD 00H				; VirtualDisplay::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVirtualDisplay@@@8
	DD	FLAT:??_R3VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
CONST	SEGMENT
?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB DD 03d8f5c29r ; 0.07 ; `LaserPodClass::DrawFOV'::`4'::Lenght
CONST	ENDS
;	COMDAT ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
CONST	SEGMENT
?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB DD 03e99999ar ; 0.3 ; `LaserPodClass::DrawFOV'::`4'::value
CONST	ENDS
;	COMDAT ??_C@_05NKNPLGBO@POINT?$AA@
CONST	SEGMENT
??_C@_05NKNPLGBO@POINT?$AA@ DB 'POINT', 00H		; `string'
CONST	ENDS
;	COMDAT ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
_DATA	SEGMENT
?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA DD 03ca3d70ar ; 0.02 ; `LaserPodClass::Display'::`92'::size
_DATA	ENDS
;	COMDAT ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
CONST	SEGMENT
??_C@_07MBJCAOMB@NOT?5SOI?$AA@ DB 'NOT SOI', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCHJIPFN@AREA?$AA@
CONST	SEGMENT
??_C@_04KCHJIPFN@AREA?$AA@ DB 'AREA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7RenderIR@@6B@
CONST	SEGMENT
??_7RenderIR@@6B@ DD FLAT:??_R4RenderIR@@6B@		; RenderIR::`vftable'
	DD	FLAT:??_ERenderIR@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderIR@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderIR@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@RenderTV@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderIR@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderIR@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderTV@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderTV@@MAEXXZ
	DD	FLAT:?DrawStars@RenderIR@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderIR@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderIR@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderIR@@MAEXH@Z
CONST	ENDS
;	COMDAT ??_7RenderTV@@6B@
CONST	SEGMENT
??_7RenderTV@@6B@ DD FLAT:??_R4RenderTV@@6B@		; RenderTV::`vftable'
	DD	FLAT:??_ERenderTV@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderTV@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderTV@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@RenderTV@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderTV@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderTV@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderTV@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderTV@@MAEXXZ
	DD	FLAT:?DrawStars@RenderOTW@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderOTW@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderOTW@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7RenderOTW@@6B@
CONST	SEGMENT
??_7RenderOTW@@6B@ DD FLAT:??_R4RenderOTW@@6B@		; RenderOTW::`vftable'
	DD	FLAT:??_ERenderOTW@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderOTW@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderOTW@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderOTW@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderOTW@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderOTW@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderOTW@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderOTW@@MAEXXZ
	DD	FLAT:?DrawStars@RenderOTW@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderOTW@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderOTW@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderOTW@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7Render3D@@6B@
CONST	SEGMENT
??_7Render3D@@6B@ DD FLAT:??_R4Render3D@@6B@		; Render3D::`vftable'
	DD	FLAT:??_ERender3D@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@Render3D@@UAEXXZ
	DD	FLAT:?StartDraw@Render3D@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@Render2D@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7Render2D@@6B@
CONST	SEGMENT
??_7Render2D@@6B@ DD FLAT:??_R4Render2D@@6B@		; Render2D::`vftable'
	DD	FLAT:??_ERender2D@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@Render2D@@UAEXXZ
	DD	FLAT:?StartDraw@Render2D@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@Render2D@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render2D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7VirtualDisplay@@6B@
CONST	SEGMENT
??_7VirtualDisplay@@6B@ DD FLAT:??_R4VirtualDisplay@@6B@ ; VirtualDisplay::`vftable'
	DD	FLAT:??_EVirtualDisplay@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@VirtualDisplay@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?SetLineStyle@VirtualDisplay@@UAEXH@Z
	DD	FLAT:?Color@VirtualDisplay@@UAEKXZ
	DD	FLAT:?SetViewport@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Render2DTri@VirtualDisplay@@MAEXMMMMMM@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7LaserPodClass@@6B@
CONST	SEGMENT
??_7LaserPodClass@@6B@ DD FLAT:??_R4LaserPodClass@@6B@	; LaserPodClass::`vftable'
	DD	FLAT:??_ELaserPodClass@@UAEPAXI@Z
	DD	FLAT:?Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z
	DD	FLAT:?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?DisplayExit@DrawableClass@@UAEXXZ
	DD	FLAT:?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ
	DD	FLAT:?PushButton@MfdDrawable@@UAEXHH@Z
	DD	FLAT:?SetType@SensorClass@@UAEXW4SensorType@1@@Z
	DD	FLAT:?SetPower@SensorClass@@UAEXH@Z
	DD	FLAT:?IsOn@SensorClass@@UAEHXZ
	DD	FLAT:?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z
	DD	FLAT:?ClearSensorTarget@SensorClass@@UAEXXZ
	DD	FLAT:?Exec@LaserPodClass@@UAEPAVSimObjectType@@PAV2@@Z
	DD	FLAT:?ExecModes@SensorClass@@UAEXHH@Z
	DD	FLAT:?UpdateState@SensorClass@@UAEXHH@Z
	DD	FLAT:?SetSeekerPos@SensorClass@@UAEXMM@Z
	DD	FLAT:?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ
	DD	FLAT:?SetSensorTarget@SensorClass@@MAEXPAVSimObjectType@@@Z
	DD	FLAT:?SetSensorTargetHack@SensorClass@@MAEXPAVFalconEntity@@@Z
	DD	FLAT:?CheckLockedTarget@SensorClass@@MAEXXZ
	DD	FLAT:?CanSeeObject@VisualClass@@UAEHMM@Z
	DD	FLAT:?CanSeeObject@VisualClass@@UAEHPAVSimObjectType@@@Z
	DD	FLAT:?GetSignature@VisualClass@@UAEMPAVSimObjectType@@@Z
	DD	FLAT:?CanDetectObject@VisualClass@@UAEHPAVSimObjectType@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RenderOTW@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$3
__ehfuncinfo$??1RenderOTW@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1RenderOTW@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RenderOTW@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$3
__ehfuncinfo$??0RenderOTW@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0RenderOTW@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z$0
__unwindtable$??1LaserPodClass@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1LaserPodClass@@UAE@XZ$0
__unwindtable$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z$1
__ehfuncinfo$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1LaserPodClass@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1LaserPodClass@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_i$ = -4						; size = 4
_theObject$ = 8						; size = 4
?FindLaserPod@@YAPAVSensorClass@@PAVSimMoverClass@@@Z PROC ; FindLaserPod

; 528  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 529  : int i;
; 530  : ShiAssert(theObject);
; 531  : SensorClass* retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0

; 532  : 
; 533  : if (!theObject) return retval;//me123 ctd

	cmp	DWORD PTR _theObject$[ebp], 0
	jne	SHORT $LN8@FindLaserP
	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN9@FindLaserP
$LN8@FindLaserP:

; 534  :    for (i=0; i<theObject->numSensors; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@FindLaserP
$LN6@FindLaserP:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@FindLaserP:
	mov	ecx, DWORD PTR _theObject$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+652]
	jge	$LN5@FindLaserP

; 535  :    {
; 536  : 		 if (theObject->sensorArray && theObject->sensorArray[i] && theObject->sensorArray[i]->Type() == SensorClass::TargetingPod)

	mov	eax, DWORD PTR _theObject$[ebp]
	cmp	DWORD PTR [eax+648], 0
	je	SHORT $LN4@FindLaserP
	mov	ecx, DWORD PTR _theObject$[ebp]
	mov	edx, DWORD PTR [ecx+648]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [edx+eax*4], 0
	je	SHORT $LN4@FindLaserP
	mov	ecx, DWORD PTR _theObject$[ebp]
	mov	edx, DWORD PTR [ecx+648]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	call	?Type@SensorClass@@QAE?AW4SensorType@1@XZ ; SensorClass::Type
	cmp	eax, 5
	jne	SHORT $LN4@FindLaserP

; 537  : 		 {
; 538  :         retval = theObject->sensorArray[i];

	mov	ecx, DWORD PTR _theObject$[ebp]
	mov	edx, DWORD PTR [ecx+648]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _retval$[ebp], ecx

; 539  :         break;

	jmp	SHORT $LN5@FindLaserP
	jmp	SHORT $LN3@FindLaserP
$LN4@FindLaserP:

; 540  : 		 }
; 541  :      else if (theObject->sensorArray && theObject->sensorArray[i] && theObject->sensorArray[i]->Type() == SensorClass::Visual)

	mov	edx, DWORD PTR _theObject$[ebp]
	cmp	DWORD PTR [edx+648], 0
	je	SHORT $LN3@FindLaserP
	mov	eax, DWORD PTR _theObject$[ebp]
	mov	ecx, DWORD PTR [eax+648]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	je	SHORT $LN3@FindLaserP
	mov	eax, DWORD PTR _theObject$[ebp]
	mov	ecx, DWORD PTR [eax+648]
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?Type@SensorClass@@QAE?AW4SensorType@1@XZ ; SensorClass::Type
	cmp	eax, 3
	jne	SHORT $LN3@FindLaserP

; 542  :      {
; 543  :          if (((VisualClass*)theObject->sensorArray[i])->VisualType() == VisualClass::TARGETINGPOD)

	mov	eax, DWORD PTR _theObject$[ebp]
	mov	ecx, DWORD PTR [eax+648]
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [ecx+edx*4]
	call	?VisualType@VisualClass@@QAEHXZ		; VisualClass::VisualType
	cmp	eax, 1
	jne	SHORT $LN3@FindLaserP

; 544  :          {
; 545  :             retval = theObject->sensorArray[i];

	mov	eax, DWORD PTR _theObject$[ebp]
	mov	ecx, DWORD PTR [eax+648]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _retval$[ebp], eax

; 546  :             break;

	jmp	SHORT $LN5@FindLaserP
$LN3@FindLaserP:

; 547  :          }
; 548  :      }
; 549  :    }

	jmp	$LN6@FindLaserP
$LN5@FindLaserP:

; 550  :    return retval;

	mov	eax, DWORD PTR _retval$[ebp]
$LN9@FindLaserP:

; 551  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindLaserPod@@YAPAVSensorClass@@PAVSimMoverClass@@@Z ENDP ; FindLaserPod
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\airframe.h
;	COMDAT ?GetLantirnCameraZ@AirframeClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLantirnCameraZ@AirframeClass@@QAEMXZ PROC		; AirframeClass::GetLantirnCameraZ, COMDAT
; _this$ = ecx

; 794  : 	float GetLantirnCameraZ() {return auxaeroData->LantirnCameraZ;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	fld	DWORD PTR [ecx+2968]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLantirnCameraZ@AirframeClass@@QAEMXZ ENDP		; AirframeClass::GetLantirnCameraZ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\airframe.h
;	COMDAT ?GetLantirnCameraY@AirframeClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLantirnCameraY@AirframeClass@@QAEMXZ PROC		; AirframeClass::GetLantirnCameraY, COMDAT
; _this$ = ecx

; 793  : 	float GetLantirnCameraY() {return auxaeroData->LantirnCameraY;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	fld	DWORD PTR [ecx+2964]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLantirnCameraY@AirframeClass@@QAEMXZ ENDP		; AirframeClass::GetLantirnCameraY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\airframe.h
;	COMDAT ?GetLantirnCameraX@AirframeClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLantirnCameraX@AirframeClass@@QAEMXZ PROC		; AirframeClass::GetLantirnCameraX, COMDAT
; _this$ = ecx

; 792  : 	float GetLantirnCameraX() {return auxaeroData->LantirnCameraX;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	fld	DWORD PTR [ecx+2960]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLantirnCameraX@AirframeClass@@QAEMXZ ENDP		; AirframeClass::GetLantirnCameraX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ PROC ; SMSBaseClass::MasterArm, COMDAT
; _this$ = ecx

; 92   : 	MasterArmState MasterArm(void) {return masterArm;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ENDP ; SMSBaseClass::MasterArm
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderIR@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderIR@@UAEPAXI@Z PROC				; RenderIR::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderIR@@UAE@XZ			; RenderIR::~RenderIR
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderIR@@UAEPAXI@Z ENDP				; RenderIR::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?AdjustSkyColor@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AdjustSkyColor@RenderIR@@MAEXXZ PROC			; RenderIR::AdjustSkyColor, COMDAT
; _this$ = ecx

; 33   : 	virtual void AdjustSkyColor( void )		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?AdjustSkyColor@RenderIR@@MAEXXZ ENDP			; RenderIR::AdjustSkyColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?SetTimeOfDayColor@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetTimeOfDayColor@RenderIR@@MAEXXZ PROC		; RenderIR::SetTimeOfDayColor, COMDAT
; _this$ = ecx

; 32   : 	virtual void SetTimeOfDayColor( void )	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetTimeOfDayColor@RenderIR@@MAEXXZ ENDP		; RenderIR::SetTimeOfDayColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?DrawStars@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DrawStars@RenderIR@@MAEXXZ PROC			; RenderIR::DrawStars, COMDAT
; _this$ = ecx

; 29   : 	virtual void DrawStars ( void )			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawStars@RenderIR@@MAEXXZ ENDP			; RenderIR::DrawStars
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?DrawMoon@RenderIR@@MAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DrawMoon@RenderIR@@MAEXH@Z PROC			; RenderIR::DrawMoon, COMDAT
; _this$ = ecx

; 28   : 	virtual void DrawMoon( GLint )		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DrawMoon@RenderIR@@MAEXH@Z ENDP			; RenderIR::DrawMoon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ??1RenderIR@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RenderIR@@UAE@XZ PROC				; RenderIR::~RenderIR, COMDAT
; _this$ = ecx

; 18   : 	virtual ~RenderIR()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderIR@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderTV@@UAE@XZ			; RenderTV::~RenderTV
	mov	esp, ebp
	pop	ebp
	ret	0
??1RenderIR@@UAE@XZ ENDP				; RenderIR::~RenderIR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ??0RenderIR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RenderIR@@QAE@XZ PROC				; RenderIR::RenderIR, COMDAT
; _this$ = ecx

; 17   : 	RenderIR()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RenderTV@@QAE@XZ			; RenderTV::RenderTV
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderIR@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenderIR@@QAE@XZ ENDP				; RenderIR::RenderIR
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderTV@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderTV@@UAEPAXI@Z PROC				; RenderTV::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderTV@@UAE@XZ			; RenderTV::~RenderTV
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderTV@@UAEPAXI@Z ENDP				; RenderTV::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pHorizon$ = 8						; size = 4
?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z PROC ; RenderTV::ComputeHorizonEffect, COMDAT
; _this$ = ecx

; 31   :  	virtual void ComputeHorizonEffect( HorizonRecord *pHorizon )	{ pHorizon->horeffect = 0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pHorizon$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	esp, ebp
	pop	ebp
	ret	4
?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z ENDP ; RenderTV::ComputeHorizonEffect
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ??1RenderTV@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RenderTV@@UAE@XZ PROC				; RenderTV::~RenderTV, COMDAT
; _this$ = ecx

; 18   : 	virtual ~RenderTV()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderTV@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderOTW@@UAE@XZ			; RenderOTW::~RenderOTW
	mov	esp, ebp
	pop	ebp
	ret	0
??1RenderTV@@UAE@XZ ENDP				; RenderTV::~RenderTV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ??0RenderTV@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RenderTV@@QAE@XZ PROC				; RenderTV::RenderTV, COMDAT
; _this$ = ecx

; 17   : 	RenderTV()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RenderOTW@@QAE@XZ			; RenderOTW::RenderOTW
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderTV@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenderTV@@QAE@XZ ENDP				; RenderTV::RenderTV
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderOTW@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderOTW@@UAEPAXI@Z PROC				; RenderOTW::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderOTW@@UAE@XZ			; RenderOTW::~RenderOTW
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderOTW@@UAEPAXI@Z ENDP				; RenderOTW::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ??1RenderOTW@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RenderOTW@@UAE@XZ PROC				; RenderOTW::~RenderOTW, COMDAT
; _this$ = ecx

; 107  : 	virtual ~RenderOTW()	{};

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RenderOTW@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderOTW@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263324				; 0004049cH
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render3D@@UAE@XZ			; Render3D::~Render3D
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RenderOTW@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Render3D@@UAE@XZ			; Render3D::~Render3D
__unwindfunclet$??1RenderOTW@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??1RenderOTW@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??1RenderOTW@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__ehhandler$??1RenderOTW@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RenderOTW@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RenderOTW@@UAE@XZ ENDP				; RenderOTW::~RenderOTW
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ??0RenderOTW@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0RenderOTW@@QAE@XZ PROC				; RenderOTW::RenderOTW, COMDAT
; _this$ = ecx

; 106  : 	RenderOTW()				{ skyRoof = FALSE; };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RenderOTW@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Render3D@@QAE@XZ			; Render3D::Render3D
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderOTW@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263324				; 0004049cH
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+263100], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RenderOTW@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Render3D@@UAE@XZ			; Render3D::~Render3D
__unwindfunclet$??0RenderOTW@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??0RenderOTW@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??0RenderOTW@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__ehhandler$??0RenderOTW@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RenderOTW@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RenderOTW@@QAE@XZ ENDP				; RenderOTW::RenderOTW
; Function compile flags: /Odtp
;	COMDAT ??_GRender3D@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRender3D@@UAEPAXI@Z PROC				; Render3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render3D@@UAE@XZ			; Render3D::~Render3D
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRender3D@@UAEPAXI@Z ENDP				; Render3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Cleanup@Render3D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@Render3D@@UAEXXZ PROC				; Render3D::Cleanup, COMDAT
; _this$ = ecx

; 49   : 	virtual void Cleanup( void )	{ Render2D::Cleanup(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@Render2D@@UAEXXZ		; Render2D::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@Render3D@@UAEXXZ ENDP				; Render3D::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ??1Render3D@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Render3D@@UAE@XZ PROC				; Render3D::~Render3D, COMDAT
; _this$ = ecx

; 43   : 	virtual ~Render3D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render3D@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render2D@@UAE@XZ			; Render2D::~Render2D
	mov	esp, ebp
	pop	ebp
	ret	0
??1Render3D@@UAE@XZ ENDP				; Render3D::~Render3D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ??0Render3D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Render3D@@QAE@XZ PROC				; Render3D::Render3D, COMDAT
; _this$ = ecx

; 42   : 	Render3D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Render2D@@QAE@XZ			; Render2D::Render2D
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render3D@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Render3D@@QAE@XZ ENDP				; Render3D::Render3D
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRender2D@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRender2D@@UAEPAXI@Z PROC				; Render2D::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render2D@@UAE@XZ			; Render2D::~Render2D
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRender2D@@UAEPAXI@Z ENDP				; Render2D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetLineStyle@Render2D@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLineStyle@Render2D@@UAEXH@Z PROC			; Render2D::SetLineStyle, COMDAT
; _this$ = ecx

; 60   : 	virtual void SetLineStyle (int) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLineStyle@Render2D@@UAEXH@Z ENDP			; Render2D::SetLineStyle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetBackground@Render2D@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packedRGBA$ = 8					; size = 4
?SetBackground@Render2D@@UAEXK@Z PROC			; Render2D::SetBackground, COMDAT
; _this$ = ecx

; 50   : 	virtual void SetBackground(DWORD packedRGBA){ context.SetState(MPR_STA_BG_COLOR,packedRGBA); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _packedRGBA$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBackground@Render2D@@UAEXK@Z ENDP			; Render2D::SetBackground
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetColor@Render2D@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packedRGBA$ = 8					; size = 4
?SetColor@Render2D@@UAEXK@Z PROC			; Render2D::SetColor, COMDAT
; _this$ = ecx

; 49   : 	virtual void SetColor(DWORD packedRGBA)	{ context.RestoreState(STATE_SOLID); context.SelectForegroundColor(packedRGBA); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
	mov	eax, DWORD PTR _packedRGBA$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectForegroundColor@ContextMPR@@QAEXH@Z ; ContextMPR::SelectForegroundColor
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColor@Render2D@@UAEXK@Z ENDP			; Render2D::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?Color@Render2D@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Color@Render2D@@UAEKXZ PROC				; Render2D::Color, COMDAT
; _this$ = ecx

; 48   : 	virtual DWORD Color(void) { return context.CurrentForegroundColor(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?CurrentForegroundColor@ContextMPR@@QAEHXZ ; ContextMPR::CurrentForegroundColor
	mov	esp, ebp
	pop	ebp
	ret	0
?Color@Render2D@@UAEKXZ ENDP				; Render2D::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?ClearZBuffer@Render2D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearZBuffer@Render2D@@UAEXXZ PROC			; Render2D::ClearZBuffer, COMDAT
; _this$ = ecx

; 42   : 	virtual void ClearZBuffer( void )	{ context.ClearBuffers( MPR_CI_ZBUFFER ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?ClearBuffers@ContextMPR@@QAEXG@Z	; ContextMPR::ClearBuffers
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearZBuffer@Render2D@@UAEXXZ ENDP			; Render2D::ClearZBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?ClearDraw@Render2D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearDraw@Render2D@@UAEXXZ PROC			; Render2D::ClearDraw, COMDAT
; _this$ = ecx

; 41   : 	virtual void ClearDraw( void )		{ context.ClearBuffers( MPR_CI_DRAW_BUFFER ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?ClearBuffers@ContextMPR@@QAEXG@Z	; ContextMPR::ClearBuffers
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDraw@Render2D@@UAEXXZ ENDP			; Render2D::ClearDraw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ??1Render2D@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Render2D@@UAE@XZ PROC				; Render2D::~Render2D, COMDAT
; _this$ = ecx

; 32   : 	virtual ~Render2D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render2D@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VirtualDisplay@@UAE@XZ		; VirtualDisplay::~VirtualDisplay
	mov	esp, ebp
	pop	ebp
	ret	0
??1Render2D@@UAE@XZ ENDP				; Render2D::~Render2D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ??0Render2D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Render2D@@QAE@XZ PROC				; Render2D::Render2D, COMDAT
; _this$ = ecx

; 31   : 	Render2D()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VirtualDisplay@@QAE@XZ		; VirtualDisplay::VirtualDisplay
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render2D@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Render2D@@QAE@XZ ENDP				; Render2D::Render2D
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVirtualDisplay@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVirtualDisplay@@UAEPAXI@Z PROC			; VirtualDisplay::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VirtualDisplay@@UAE@XZ		; VirtualDisplay::~VirtualDisplay
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVirtualDisplay@@UAEPAXI@Z ENDP			; VirtualDisplay::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Color@VirtualDisplay@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Color@VirtualDisplay@@UAEKXZ PROC			; VirtualDisplay::Color, COMDAT
; _this$ = ecx

; 136  : 	virtual DWORD Color( void )	{return 0x0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Color@VirtualDisplay@@UAEKXZ ENDP			; VirtualDisplay::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?SetLineStyle@VirtualDisplay@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLineStyle@VirtualDisplay@@UAEXH@Z PROC		; VirtualDisplay::SetLineStyle, COMDAT
; _this$ = ecx

; 135  : 	virtual void SetLineStyle (int) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLineStyle@VirtualDisplay@@UAEXH@Z ENDP		; VirtualDisplay::SetLineStyle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?TextHeight@VirtualDisplay@@UAEMXZ
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
?TextHeight@VirtualDisplay@@UAEMXZ PROC			; VirtualDisplay::TextHeight, COMDAT
; _this$ = ecx

; 121  : 	virtual float TextHeight(void)			{ return ScreenTextHeight()/scaleY; };		// normalized screen space

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	call	?ScreenTextHeight@VirtualDisplay@@SAHXZ	; VirtualDisplay::ScreenTextHeight
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?TextHeight@VirtualDisplay@@UAEMXZ ENDP			; VirtualDisplay::TextHeight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?TextWidth@VirtualDisplay@@UAEMPAD@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
?TextWidth@VirtualDisplay@@UAEMPAD@Z PROC		; VirtualDisplay::TextWidth, COMDAT
; _this$ = ecx

; 120  : 	virtual float TextWidth(char *string)	{ return ScreenTextWidth(string)/scaleX; };	// normalized screen space

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z ; VirtualDisplay::ScreenTextWidth
	add	esp, 4
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+32]
	movss	DWORD PTR tv73[ebp], xmm0
	fld	DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?TextWidth@VirtualDisplay@@UAEMPAD@Z ENDP		; VirtualDisplay::TextWidth
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Arc@VirtualDisplay@@UAEXMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xRadius$ = 16						; size = 4
_start$ = 20						; size = 4
_stop$ = 24						; size = 4
?Arc@VirtualDisplay@@UAEXMMMMM@Z PROC			; VirtualDisplay::Arc, COMDAT
; _this$ = ecx

; 109  : 		{ OvalArc(x, y, xRadius, xRadius*scaleX/scaleY, start, stop); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _stop$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _start$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	mulss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Arc@VirtualDisplay@@UAEXMMMMM@Z ENDP			; VirtualDisplay::Arc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Circle@VirtualDisplay@@UAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xRadius$ = 16						; size = 4
?Circle@VirtualDisplay@@UAEXMMM@Z PROC			; VirtualDisplay::Circle, COMDAT
; _this$ = ecx

; 107  : 		{ Oval(x, y, xRadius, xRadius*scaleX/scaleY); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	mulss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Circle@VirtualDisplay@@UAEXMMM@Z ENDP			; VirtualDisplay::Circle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ??1VirtualDisplay@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VirtualDisplay@@UAE@XZ PROC				; VirtualDisplay::~VirtualDisplay, COMDAT
; _this$ = ecx

; 86   :     virtual ~VirtualDisplay()	{ ShiAssert( ready == FALSE ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VirtualDisplay@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1ContextMPR@@UAE@XZ			; ContextMPR::~ContextMPR
	mov	esp, ebp
	pop	ebp
	ret	0
??1VirtualDisplay@@UAE@XZ ENDP				; VirtualDisplay::~VirtualDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ??0VirtualDisplay@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VirtualDisplay@@QAE@XZ PROC				; VirtualDisplay::VirtualDisplay, COMDAT
; _this$ = ecx

; 85   :     VirtualDisplay()			{ ready = FALSE; tLeft = tTop = tRight = tBottom = txRes = tyRes = 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VirtualDisplay@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0ContextMPR@@QAE@XZ			; ContextMPR::ContextMPR
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262776], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+262772], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+262768], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262764], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+262760], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+262756], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VirtualDisplay@@QAE@XZ ENDP				; VirtualDisplay::VirtualDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\context.h
;	COMDAT ?CurrentForegroundColor@ContextMPR@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurrentForegroundColor@ContextMPR@@QAEHXZ PROC		; ContextMPR::CurrentForegroundColor, COMDAT
; _this$ = ecx

; 708  : 	int CurrentForegroundColor(void) {return m_colFG_Raw;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?CurrentForegroundColor@ContextMPR@@QAEHXZ ENDP		; ContextMPR::CurrentForegroundColor
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\edge.h
;	COMDAT ??1Edge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Edge@@QAE@XZ PROC					; Edge::~Edge, COMDAT
; _this$ = ecx

; 20   : 	~Edge()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Edge@@QAE@XZ ENDP					; Edge::~Edge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\edge.h
;	COMDAT ??0Edge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Edge@@QAE@XZ PROC					; Edge::Edge, COMDAT
; _this$ = ecx

; 19   : 	Edge()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Edge@@QAE@XZ ENDP					; Edge::Edge
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GLaserPodClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GLaserPodClass@@UAEPAXI@Z PROC			; LaserPodClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1LaserPodClass@@UAE@XZ		; LaserPodClass::~LaserPodClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GLaserPodClass@@UAEPAXI@Z ENDP			; LaserPodClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
tv429 = -132						; size = 4
_zOff$ = -128						; size = 4
tv422 = -124						; size = 4
_range$ = -120						; size = 4
tv383 = -116						; size = 4
_xOff$ = -112						; size = 4
_yOff$ = -108						; size = 4
_costha$ = -104						; size = 4
_sintha$ = -100						; size = 4
_cospsi$ = -96						; size = 4
_sinphi$ = -92						; size = 4
_sinpsi$ = -88						; size = 4
_cosphi$ = -84						; size = 4
_this$ = -80						; size = 4
_viewRotation$ = -76					; size = 36
_cameraPos$ = -40					; size = 12
_tmpPos$ = -28						; size = 12
_newPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?DrawTerrain@LaserPodClass@@IAEXXZ PROC			; LaserPodClass::DrawTerrain
; _this$ = ecx

; 303  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 	Trotation viewRotation;
; 305  : 
; 306  : 	// RV - Biker - We have data for Lantirn Camera so why not use it
; 307  : 	Tpoint cameraPos;
; 308  : 
; 309  : 	Tpoint tmpPos;
; 310  : 	Tpoint newPos;
; 311  : 
; 312  : 	tmpPos.x = ((AircraftClass*)platform)->af->GetLantirnCameraX();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR [ecx+932]
	call	?GetLantirnCameraX@AirframeClass@@QAEMXZ ; AirframeClass::GetLantirnCameraX
	fstp	DWORD PTR _tmpPos$[ebp]

; 313  : 	tmpPos.y = ((AircraftClass*)platform)->af->GetLantirnCameraY();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+932]
	call	?GetLantirnCameraY@AirframeClass@@QAEMXZ ; AirframeClass::GetLantirnCameraY
	fstp	DWORD PTR _tmpPos$[ebp+4]

; 314  : 	tmpPos.z = ((AircraftClass*)platform)->af->GetLantirnCameraZ();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+932]
	call	?GetLantirnCameraZ@AirframeClass@@QAEMXZ ; AirframeClass::GetLantirnCameraZ
	fstp	DWORD PTR _tmpPos$[ebp+8]

; 315  : 
; 316  : 	MatrixMult( &(OTWDriver.ownshipRot), &tmpPos, &newPos );

	lea	eax, DWORD PTR _newPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpPos$[ebp]
	push	ecx
	push	OFFSET ?OTWDriver@@3VOTWDriverClass@@A+33580
	call	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z ; MatrixMult
	add	esp, 12					; 0000000cH

; 317  : 
; 318  : 	cameraPos.x = newPos.x;

	movss	xmm0, DWORD PTR _newPos$[ebp]
	movss	DWORD PTR _cameraPos$[ebp], xmm0

; 319  :    	cameraPos.y = newPos.y;

	movss	xmm0, DWORD PTR _newPos$[ebp+4]
	movss	DWORD PTR _cameraPos$[ebp+4], xmm0

; 320  :    	cameraPos.z = newPos.z;

	movss	xmm0, DWORD PTR _newPos$[ebp+8]
	movss	DWORD PTR _cameraPos$[ebp+8], xmm0

; 321  : 
; 322  : 	float costha,sintha,cospsi,sinpsi, sinphi, cosphi;
; 323  : 	float xOff, yOff, zOff;
; 324  : 	float range;
; 325  : 
; 326  :    if (IsSOI())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSOI@DrawableClass@@QAEHXZ		; DrawableClass::IsSOI
	test	eax, eax
	je	$LN3@DrawTerrai

; 327  :    {
; 328  :       xOff = tgtX - platform->XPos();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv383[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+104]
	subss	xmm0, DWORD PTR tv383[ebp]
	movss	DWORD PTR _xOff$[ebp], xmm0

; 329  :       yOff = tgtY - platform->YPos();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv422[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+108]
	subss	xmm0, DWORD PTR tv422[ebp]
	movss	DWORD PTR _yOff$[ebp], xmm0

; 330  :       zOff = tgtZ - platform->ZPos();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR tv429[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+112]
	subss	xmm0, DWORD PTR tv429[ebp]
	movss	DWORD PTR _zOff$[ebp], xmm0

; 331  : 
; 332  :       yaw = (float)atan2 (yOff,xOff);

	cvtss2sd xmm0, DWORD PTR _xOff$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _yOff$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+100]

; 333  :       cospsi = (float)cos (yaw);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+100]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _cospsi$[ebp]

; 334  :       sinpsi = (float)sin (yaw);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+100]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _sinpsi$[ebp]

; 335  : 
; 336  :       range = (float)sqrt(xOff*xOff+yOff*yOff+0.1f);

	movss	xmm0, DWORD PTR _xOff$[ebp]
	mulss	xmm0, DWORD PTR _xOff$[ebp]
	movss	xmm1, DWORD PTR _yOff$[ebp]
	mulss	xmm1, DWORD PTR _yOff$[ebp]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR __real@3dcccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _range$[ebp]

; 337  :       pitch = (float)atan (-zOff/range);

	movss	xmm0, DWORD PTR _zOff$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR _range$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?atan@@YAMM@Z				; atan
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+96]

; 338  :       costha = (float)cos (pitch);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+96]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _costha$[ebp]

; 339  :       sintha = (float)sin (pitch);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+96]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _sintha$[ebp]

; 340  : 
; 341  :       roll = 0.0F;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+92], xmm0

; 342  :     
; 343  :       cosphi = 1.0F;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cosphi$[ebp], xmm0

; 344  :       sinphi = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _sinphi$[ebp], xmm0

; 345  :    }
; 346  :    else

	jmp	$LN2@DrawTerrai
$LN3@DrawTerrai:

; 347  :    {
; 348  :       costha = (float)cos (pitch);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+96]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _costha$[ebp]

; 349  :       sintha = (float)sin (pitch);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+96]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _sintha$[ebp]

; 350  :       cospsi = (float)cos (yaw);

	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+100]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _cospsi$[ebp]

; 351  :       sinpsi = (float)sin (yaw);

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+100]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _sinpsi$[ebp]

; 352  :       cosphi = (float)cos (roll);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+92]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _cosphi$[ebp]

; 353  :       sinphi = (float)sin (roll);

	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+92]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _sinphi$[ebp]
$LN2@DrawTerrai:

; 354  :    }
; 355  : 
; 356  :    viewRotation.M11 = cospsi*costha;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	movss	DWORD PTR _viewRotation$[ebp], xmm0

; 357  :    viewRotation.M21 = sinpsi*costha;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	movss	DWORD PTR _viewRotation$[ebp+12], xmm0

; 358  :    viewRotation.M31 = -sintha;

	movss	xmm0, DWORD PTR _sintha$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _viewRotation$[ebp+24], xmm0

; 359  : 
; 360  :    viewRotation.M12 = -sinpsi*cosphi + cospsi*sintha*sinphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _viewRotation$[ebp+4], xmm0

; 361  :    viewRotation.M22 = cospsi*cosphi + sinpsi*sintha*sinphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _viewRotation$[ebp+16], xmm0

; 362  :    viewRotation.M32 = costha*sinphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	DWORD PTR _viewRotation$[ebp+28], xmm0

; 363  : 
; 364  :    viewRotation.M13 = sinpsi*sinphi + cospsi*sintha*cosphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _viewRotation$[ebp+8], xmm0

; 365  :    viewRotation.M23 = -cospsi*sinphi + sinpsi*sintha*cosphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _viewRotation$[ebp+20], xmm0

; 366  :    viewRotation.M33 = costha*cosphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	DWORD PTR _viewRotation$[ebp+32], xmm0

; 367  : 
; 368  :    ((RenderTV*)display)->StartDraw();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 369  :    ((RenderTV*)display)->DrawScene(&cameraPos, &viewRotation);

	lea	eax, DWORD PTR _viewRotation$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cameraPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?DrawScene@RenderOTW@@QAEXPBUTpoint@@PBUTrotation@@@Z ; RenderOTW::DrawScene

; 370  : 
; 371  : 	//JAM 12Dec03 - ZBUFFERING OFF
; 372  : 	if(DisplayOptions.bZBuffering)

	movzx	eax, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	eax, eax
	je	SHORT $LN1@DrawTerrai

; 373  : 		((RenderTV*)display)->context.FlushPolyLists();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, 100				; 00000064H
	call	?FlushPolyLists@ContextMPR@@QAEXXZ	; ContextMPR::FlushPolyLists
$LN1@DrawTerrai:

; 374  : 
; 375  : //   ((RenderTV*)display)->PostSceneCloudOcclusion();
; 376  :    ((RenderTV*)display)->EndDraw();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 377  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawTerrain@LaserPodClass@@IAEXXZ ENDP			; LaserPodClass::DrawTerrain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_display$ = 8						; size = 4
?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z PROC	; LaserPodClass::DrawFOV
; _this$ = ecx

; 566  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 567  : 	if(MenuMode)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	test	ecx, ecx
	je	SHORT $LN1@DrawFOV

; 568  : 		return;

	jmp	$LN2@DrawFOV
$LN1@DrawFOV:

; 569  : 	static const float value = LOCK_RING_MAX_SIZE - 0.2F;
; 570  : 	static const float Lenght = 0.07F;
; 571  : 	display->Line(value, -value, value, -value + Lenght);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 572  : 	display->Line(-value, -value, -value, -value + Lenght);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 573  : 	display->Line(value, value, value, value - Lenght);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	subss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 574  : 	display->Line(-value, value, -value,  value - Lenght);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	subss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 575  : 	display->Line(value, -value, value - Lenght, -value);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	subss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 576  : 	display->Line(-value, -value, -value + Lenght, -value);

	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 577  : 	display->Line(value, value, value - Lenght, value);

	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	subss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 578  : 	display->Line(-value, value, -value + Lenght, value);

	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR ?Lenght@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?value@?3??DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z@4MB
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
$LN2@DrawFOV:

; 579  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ENDP	; LaserPodClass::DrawFOV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = -4						; size = 4
_display$ = 8						; size = 4
?DrawBox@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z PROC	; LaserPodClass::DrawBox
; _this$ = ecx

; 554  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 555  : 	if(MenuMode)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+81]
	test	ecx, ecx
	je	SHORT $LN2@DrawBox

; 556  : 		return;

	jmp	$LN3@DrawBox
$LN2@DrawBox:

; 557  : 	float len = 0.1F;

	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR _len$[ebp], xmm0

; 558  : 	display->Line(-len, len, len, len);

	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 559  : 	display->Line(len, len, len, -len);

	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 560  : 	display->Line(len, -len, -len, -len);

	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 561  : 	display->Line(-len, -len, -len, len);

	push	ecx
	movss	xmm0, DWORD PTR _len$[ebp]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _len$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 562  : 	if(hasTarget == TargetLocked)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], 1
	jne	SHORT $LN1@DrawBox

; 563  : 		display->TextCenter(0.0F, -0.4F, "POINT");		

	push	0
	push	OFFSET ??_C@_05NKNPLGBO@POINT?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+72]
	call	edx
$LN1@DrawBox:
$LN3@DrawBox:

; 564  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DrawBox@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ENDP	; LaserPodClass::DrawBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_totalAngle$ = -28					; size = 4
tv157 = -24						; size = 4
tv214 = -20						; size = 4
tv150 = -16						; size = 4
_this$ = -12						; size = 4
_tmp$ = -8						; size = 4
_retval$ = -4						; size = 4
_az$ = 8						; size = 4
_el$ = 12						; size = 4
?SetDesiredSeekerPos@LaserPodClass@@QAEHPAM0@Z PROC	; LaserPodClass::SetDesiredSeekerPos
; _this$ = ecx

; 417  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 418  : int retval = FALSE;

	mov	DWORD PTR _retval$[ebp], 0

; 419  : float totalAngle, tmp;
; 420  : 
; 421  : 	// Gimbal limit the seeker
; 422  : #if 0 
; 423  : //MI original code
; 424  : 	// Looking down or left your total angle is limited to 160 Degrees
; 425  :    if (*el < 5.0F * DTR || *az < 5.0F * DTR)
; 426  :    {
; 427  :       tmp = (float)(cos (*az) * cos (*el));
; 428  :       totalAngle = (float)atan2(sqrt(1-tmp*tmp),tmp);
; 429  : 
; 430  :       if (totalAngle > LGB_GIMBAL_MAX)
; 431  :       {
; 432  :          retval = TRUE;
; 433  :       }
; 434  :    }
; 435  :    else //looking up and right
; 436  :    {
; 437  :       if (*az > 5.0F * DTR)
; 438  :       {
; 439  :          *az = 5.0F * DTR;
; 440  :          retval = TRUE;
; 441  :       }
; 442  : 
; 443  :       if (*el > 5.0F * DTR)
; 444  :       {
; 445  :          *el = 5.0F * DTR;
; 446  :          retval = TRUE;
; 447  :       }
; 448  :    }
; 449  : #endif
; 450  : // 2001-09-07 ADDED BY S.G. RP5 DEALS WITH THE LIMIT DIFFERENTLY
; 451  :    if (!g_bRP5Comp) {

	movzx	eax, BYTE PTR ?g_bRP5Comp@@3_NA		; g_bRP5Comp
	test	eax, eax
	jne	$LN17@SetDesired

; 452  : 	   // Looking down or left/right your total angle is limited to 150 Degrees
; 453  : 	   if (*el < 35.0F * DTR || *az > 5.0F * DTR)

	mov	ecx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@3f1c61a9
	comiss	xmm0, DWORD PTR [ecx]
	ja	SHORT $LN15@SetDesired
	mov	edx, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR [edx]
	comiss	xmm0, DWORD PTR __real@3db2b8c1
	jbe	$LN14@SetDesired
$LN15@SetDesired:

; 454  : 	   {
; 455  : 		  tmp = (float)(cos (*az) * cos (*el));

	mov	eax, DWORD PTR _az$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv150[ebp]
	movss	xmm0, DWORD PTR tv150[ebp]
	mov	ecx, DWORD PTR _el$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv214[ebp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR tv157[ebp]
	movss	xmm0, DWORD PTR tv214[ebp]
	mulss	xmm0, DWORD PTR tv157[ebp]
	movss	DWORD PTR _tmp$[ebp], xmm0

; 456  : 		  totalAngle = (float)atan2(sqrt(1-tmp*tmp),tmp);

	cvtss2sd xmm0, DWORD PTR _tmp$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _tmp$[ebp]
	mulss	xmm0, DWORD PTR _tmp$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, -4					; fffffffcH
	fstp	QWORD PTR [esp]
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _totalAngle$[ebp]

; 457  : 
; 458  : 		  if (totalAngle > LGB_GIMBAL_MAX)

	movss	xmm0, DWORD PTR _totalAngle$[ebp]
	comiss	xmm0, DWORD PTR __real@40278d35
	jbe	SHORT $LN14@SetDesired

; 459  : 		  {
; 460  : 			 retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN14@SetDesired:

; 461  : 		  }
; 462  : 	   }
; 463  : 		//up --> down is covered with the check above
; 464  : 	   if (*el > 35.0F * DTR) //35 degree up

	mov	edx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR [edx]
	comiss	xmm0, DWORD PTR __real@3f1c61a9
	jbe	SHORT $LN13@SetDesired

; 465  : 	   {
; 466  : 		   *el = 35.0F * DTR;

	mov	eax, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@3f1c61a9
	movss	DWORD PTR [eax], xmm0

; 467  : 		   retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN13@SetDesired:

; 468  : 	   }
; 469  :    }
; 470  :    else {

	jmp	$LN2@SetDesired
$LN17@SetDesired:

; 471  : // 2001-04-17 REWRITTEN BY S.G. WHAT IT SHOULD HAVE BEEN
; 472  : 		// az goes from -PI to PI (-180 to 180) and el goes from -PI/2 to PI/2 (-90 to 90).
; 473  : 		// If el needs to go lower than -90 or higher than 90, az is moved to the next quadrant so el is readjusted accordingly.
; 474  : 		// First for the front section of the plane (right side will have better elevation after 20 degrees)
; 475  : 		if (*az >= -90.0f * DTR && *az <= 20.0f * DTR) {

	mov	ecx, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	comiss	xmm0, DWORD PTR __real@bfc90fd9
	jb	SHORT $LN11@SetDesired
	mov	edx, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR __real@3eb2b8c1
	comiss	xmm0, DWORD PTR [edx]
	jb	SHORT $LN11@SetDesired

; 476  : 			if (*el > 20.0f * DTR) {

	mov	eax, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR __real@3eb2b8c1
	jbe	SHORT $LN10@SetDesired

; 477  : 				*el = 20.0f * DTR;

	mov	ecx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@3eb2b8c1
	movss	DWORD PTR [ecx], xmm0

; 478  : 				 retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN10@SetDesired:

; 479  : 			}
; 480  : 		}

	jmp	$LN2@SetDesired
$LN11@SetDesired:

; 481  : 		// Then the right side of the plane
; 482  : 		else if (*az > 20.0f * DTR && *az < 120.0f * DTR) {

	mov	edx, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR [edx]
	comiss	xmm0, DWORD PTR __real@3eb2b8c1
	jbe	SHORT $LN8@SetDesired
	mov	eax, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR __real@40060a91
	comiss	xmm0, DWORD PTR [eax]
	jbe	SHORT $LN8@SetDesired

; 483  : 			if (*el > 60.0f * DTR) {

	mov	ecx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	comiss	xmm0, DWORD PTR __real@3f860a91
	jbe	SHORT $LN7@SetDesired

; 484  : 				*el = 60.0f * DTR;

	mov	edx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@3f860a91
	movss	DWORD PTR [edx], xmm0

; 485  : 				 retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN7@SetDesired:

; 486  : 			}
; 487  : 		}
; 488  : 		// Now the extended back side (from -90 to +120, what is remaining)
; 489  : 		else {

	jmp	SHORT $LN2@SetDesired
$LN8@SetDesired:

; 490  : 			// If we're limited on the azimuth, simulate the pod looking back and limited at -150 degrees elevation)
; 491  : 			if (*az > 150.0f * DTR || *az < -150.0f * DTR) {

	mov	eax, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR [eax]
	comiss	xmm0, DWORD PTR __real@40278d35
	ja	SHORT $LN4@SetDesired
	mov	ecx, DWORD PTR _az$[ebp]
	movss	xmm0, DWORD PTR __real@c0278d35
	comiss	xmm0, DWORD PTR [ecx]
	jbe	SHORT $LN3@SetDesired
$LN4@SetDesired:

; 492  : 				if (*el > -30.f * DTR) {

	mov	edx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR [edx]
	comiss	xmm0, DWORD PTR __real@bf060a91
	jbe	SHORT $LN3@SetDesired

; 493  : 					*el = -30.0f * DTR;

	mov	eax, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@bf060a91
	movss	DWORD PTR [eax], xmm0

; 494  : 					 retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN3@SetDesired:

; 495  : 				}
; 496  : 			}
; 497  : 
; 498  : 			// From -90 to +120, can't see higher than 0 degree (blocked by the wings/frame)
; 499  : 			if (*el > 0.0f * DTR) {

	mov	ecx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN2@SetDesired

; 500  : 				*el = 0.0f * DTR;

	mov	edx, DWORD PTR _el$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0

; 501  : 				 retval = TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN2@SetDesired:

; 502  : 			}
; 503  : 
; 504  : 		}
; 505  :    }
; 506  :    // Send the new values to the base class
; 507  :    if (!retval)

	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN1@SetDesired

; 508  :       SetSeekerPos( *az, *el );

	mov	eax, DWORD PTR _el$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _az$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN1@SetDesired:

; 509  : 
; 510  :    // Tell the caller if he hit the limits
; 511  :    return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 512  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetDesiredSeekerPos@LaserPodClass@@QAEHPAM0@Z ENDP	; LaserPodClass::SetDesiredSeekerPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ToggleFOV@LaserPodClass@@QAEXXZ PROC			; LaserPodClass::ToggleFOV
; _this$ = ecx

; 83   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 	//MI Doc's say it's different
; 85   : 	if(!g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	jne	SHORT $LN9@ToggleFOV

; 86   : 	{
; 87   : 		if (curFOV > 3.0F * DTR)

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+88]
	comiss	xmm0, DWORD PTR __real@3d56774e
	jbe	SHORT $LN8@ToggleFOV

; 88   : 			// JB 010120 Fixed FOV
; 89   : 			//curFOV = 0.25F * DTR;
; 90   : 			curFOV = 3.0F * DTR;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3d56774e
	movss	DWORD PTR [edx+88], xmm0

; 91   : 		// JB 010120
; 92   : 		else

	jmp	SHORT $LN7@ToggleFOV
$LN8@ToggleFOV:

; 93   : 			curFOV = 10.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3e32b8c1
	movss	DWORD PTR [eax+88], xmm0
$LN7@ToggleFOV:

; 94   : 	}
; 95   : 	else

	jmp	SHORT $LN2@ToggleFOV
$LN9@ToggleFOV:

; 96   : 	{
; 97   : 		if(curFOV < 3.0F * DTR && curFOV > 1.6F * DTR)

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3d56774e
	comiss	xmm0, DWORD PTR [ecx+88]
	jbe	SHORT $LN5@ToggleFOV
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+88]
	comiss	xmm0, DWORD PTR __real@3ce4c387
	jbe	SHORT $LN5@ToggleFOV

; 98   : 			curFOV = 0.85F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3c730fbf
	movss	DWORD PTR [eax+88], xmm0
	jmp	SHORT $LN2@ToggleFOV
$LN5@ToggleFOV:

; 99   : 		else if(curFOV > 3.0F * DTR)

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+88]
	comiss	xmm0, DWORD PTR __real@3d56774e
	jbe	SHORT $LN3@ToggleFOV

; 100  : 			curFOV = 1.7F * DTR;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3cf30fbf
	movss	DWORD PTR [edx+88], xmm0

; 101  : 		else

	jmp	SHORT $LN2@ToggleFOV
$LN3@ToggleFOV:

; 102  : 			curFOV = 6.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3dd6774e
	movss	DWORD PTR [eax+88], xmm0
$LN2@ToggleFOV:

; 103  : 	}
; 104  : 	if (privateDisplay)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN1@ToggleFOV

; 105  : 		((Render3D*)privateDisplay)->SetFOV(curFOV);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+88]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	call	?SetFOV@Render3D@@QAEXMM@Z		; Render3D::SetFOV
$LN1@ToggleFOV:

; 106  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleFOV@LaserPodClass@@QAEXXZ ENDP			; LaserPodClass::ToggleFOV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\laserpod.h
;	COMDAT ?IsLocked@LaserPodClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?IsLocked@LaserPodClass@@QAEHXZ PROC			; LaserPodClass::IsLocked, COMDAT
; _this$ = ecx

; 19   : 	int IsLocked (void)							{return (hasTarget == TargetLocked);}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 1
	jne	SHORT $LN3@IsLocked
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsLocked
$LN3@IsLocked:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsLocked:
	mov	eax, DWORD PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLocked@LaserPodClass@@QAEHXZ ENDP			; LaserPodClass::IsLocked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LockTarget@LaserPodClass@@QAEHXZ PROC			; LaserPodClass::LockTarget
; _this$ = ecx

; 516  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 517  :    if (lockedTarget)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN2@LockTarget

; 518  :       hasTarget = TargetLocked;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 1

; 519  :    else

	jmp	SHORT $LN1@LockTarget
$LN2@LockTarget:

; 520  :       hasTarget = NoTarget;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
$LN1@LockTarget:

; 521  : 
; 522  :    return hasTarget;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+84]

; 523  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LockTarget@LaserPodClass@@QAEHXZ ENDP			; LaserPodClass::LockTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
$T2 = -100						; size = 8
$T3 = -92						; size = 8
$T4 = -84						; size = 8
$T5 = -76						; size = 8
$T6 = -68						; size = 8
$T7 = -60						; size = 8
$T8 = -52						; size = 4
$T9 = -48						; size = 4
tv270 = -44						; size = 4
$T10 = -40						; size = 4
tv254 = -36						; size = 4
tv157 = -32						; size = 4
$T11 = -28						; size = 4
tv141 = -24						; size = 4
_msg$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newTarget$ = 8						; size = 4
?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z PROC ; LaserPodClass::SetDesiredTarget
; _this$ = ecx

; 381  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 382  : 	FalconLaserDesignateMsg* msg;
; 383  : 	
; 384  : 	if (newTarget == lockedTarget)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newTarget$[ebp]
	cmp	ecx, DWORD PTR [eax+48]
	jne	SHORT $LN4@SetDesired

; 385  : 		return;

	jmp	$LN5@SetDesired
$LN4@SetDesired:

; 386  : 	
; 387  : 	// Undesignate the current target
; 388  : 	if (lockedTarget && lockedTarget->BaseData()->IsSim())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	$LN3@SetDesired
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ ; SimObjectType::BaseData
	mov	ecx, eax
	call	?IsSim@FalconEntity@@QAEHXZ		; FalconEntity::IsSim
	test	eax, eax
	je	$LN3@SetDesired

; 389  : 	{
; 390  : 		msg = new FalconLaserDesignateMsg(platform->Id(), FalconLocalGame);

	push	65					; 00000041H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN9@SetDesired
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@SetDesired
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN8@SetDesired
$LN7@SetDesired:
	mov	DWORD PTR tv141[ebp], 0
$LN8@SetDesired:
	push	1
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0FalconLaserDesignateMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconLaserDesignateMsg::FalconLaserDesignateMsg
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN10@SetDesired
$LN9@SetDesired:
	mov	DWORD PTR tv157[ebp], 0
$LN10@SetDesired:
	mov	ecx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _msg$[ebp], edx

; 391  : 		msg->dataBlock.source   = platform->Id();

	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], eax

; 392  : 		msg->dataBlock.target   = lockedTarget->BaseData()->Id();

	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ ; SimObjectType::BaseData
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], edx

; 393  : 		msg->dataBlock.state    = FALSE;

	mov	ecx, DWORD PTR _msg$[ebp]
	mov	BYTE PTR [ecx+64], 0

; 394  : 		FalconSendMessage (msg,TRUE);

	push	1
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN3@SetDesired:

; 395  : 	}
; 396  : 	
; 397  : 	if (newTarget && newTarget->BaseData()->IsSim() && CanSeeObject(newTarget) && CanDetectObject(newTarget))

	cmp	DWORD PTR _newTarget$[ebp], 0
	je	$LN2@SetDesired
	mov	ecx, DWORD PTR _newTarget$[ebp]
	call	?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ ; SimObjectType::BaseData
	mov	ecx, eax
	call	?IsSim@FalconEntity@@QAEHXZ		; FalconEntity::IsSim
	test	eax, eax
	je	$LN2@SetDesired
	mov	eax, DWORD PTR _newTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	test	eax, eax
	je	$LN2@SetDesired
	mov	ecx, DWORD PTR _newTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+88]
	call	edx
	test	eax, eax
	je	$LN2@SetDesired

; 398  : 	{
; 399  : 		SetSensorTarget( newTarget );

	mov	eax, DWORD PTR _newTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 400  : 
; 401  : 		// Designate it
; 402  : 		msg = new FalconLaserDesignateMsg(platform->Id(), FalconLocalGame);

	push	65					; 00000041H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN13@SetDesired
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@SetDesired
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv254[ebp], eax
	jmp	SHORT $LN12@SetDesired
$LN11@SetDesired:
	mov	DWORD PTR tv254[ebp], 0
$LN12@SetDesired:
	push	1
	mov	edx, DWORD PTR tv254[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0FalconLaserDesignateMsg@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconLaserDesignateMsg::FalconLaserDesignateMsg
	mov	DWORD PTR tv270[ebp], eax
	jmp	SHORT $LN14@SetDesired
$LN13@SetDesired:
	mov	DWORD PTR tv270[ebp], 0
$LN14@SetDesired:
	mov	ecx, DWORD PTR tv270[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _msg$[ebp], edx

; 403  : 		msg->dataBlock.source   = platform->Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], eax

; 404  : 		msg->dataBlock.target   = lockedTarget->BaseData()->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ ; SimObjectType::BaseData
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _msg$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], edx

; 405  : 		msg->dataBlock.state    = TRUE;

	mov	ecx, DWORD PTR _msg$[ebp]
	mov	BYTE PTR [ecx+64], 1

; 406  : 		FalconSendMessage (msg,TRUE);

	push	1
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 407  : 	}
; 408  : 	else

	jmp	SHORT $LN5@SetDesired
$LN2@SetDesired:

; 409  : 	{
; 410  : 		ClearSensorTarget();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax

; 411  : 		hasTarget = NoTarget;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 0
$LN5@SetDesired:

; 412  : 	}
; 413  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z$0:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z$1:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetDesiredTarget@LaserPodClass@@UAEXPAVSimObjectType@@@Z ENDP ; LaserPodClass::SetDesiredTarget
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv81 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_image$ = 8						; size = 4
?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z PROC	; LaserPodClass::DisplayInit
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 	 if (!g_bGreyScaleMFD)

	movzx	eax, BYTE PTR ?g_bGreyScaleMFD@@3_NA	; g_bGreyScaleMFD
	test	eax, eax
	jne	SHORT $LN3@DisplayIni

; 68   : 		 g_bGreyMFD = false;

	mov	BYTE PTR ?g_bGreyMFD@@3_NA, 0		; g_bGreyMFD
$LN3@DisplayIni:

; 69   :    privateDisplay =  new RenderIR;

	push	263372					; 000404ccH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@DisplayIni
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0RenderIR@@QAE@XZ			; RenderIR::RenderIR
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN7@DisplayIni
$LN6@DisplayIni:
	mov	DWORD PTR tv81[ebp], 0
$LN7@DisplayIni:
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+24], eax

; 70   :    ((RenderTV*)privateDisplay)->Setup (image, OTWDriver.GetViewpoint());

	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetViewpoint@OTWDriverClass@@QAEPAVRViewPoint@@XZ ; OTWDriverClass::GetViewpoint
	push	eax
	mov	ecx, DWORD PTR _image$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx+144]
	call	eax

; 71   : 	 if ((g_bGreyMFD) && (!bNVGmode))

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN2@DisplayIni
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN2@DisplayIni

; 72   : 		 privateDisplay->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 73   : 	 else

	jmp	SHORT $LN1@DisplayIni
$LN2@DisplayIni:

; 74   : 		 privateDisplay->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN1@DisplayIni:

; 75   :    ((RenderTV*)privateDisplay)->SetFOV(curFOV);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+88]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	?SetFOV@Render3D@@QAEXMM@Z		; Render3D::SetFOV

; 76   :    tgtX = platform->XPos();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+104]

; 77   :    tgtY = platform->YPos();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+108]

; 78   :    tgtZ = platform->ZPos();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+112]

; 79   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DisplayInit@LaserPodClass@@UAEXPAVImageBuffer@@@Z ENDP	; LaserPodClass::DisplayInit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
tv1406 = -40						; size = 8
_tmpColor$ = -32					; size = 4
_tmp$1 = -28						; size = 4
tv1403 = -24						; size = 4
_begin$2 = -20						; size = 4
_end$3 = -16						; size = 4
_playerAC$ = -12					; size = 4
_offset$4 = -8						; size = 4
_this$ = -4						; size = 4
_newDisplay$ = 8					; size = 4
?Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z PROC	; LaserPodClass::Display
; _this$ = ecx

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 112  : 		display = newDisplay;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newDisplay$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 113  : 		// FRB - B&W display
; 114  : 		if (g_bGreyMFD && !bNVGmode)

	movzx	edx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	edx, edx
	je	SHORT $LN46@Display
	movzx	eax, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	eax, eax
	jne	SHORT $LN46@Display

; 115  : 			display->SetColor(0xffffffff);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN46@Display:

; 116  : 
; 117  : 		int tmpColor = display->Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tmpColor$[ebp], eax

; 118  : 
; 119  :    if (privateDisplay)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	$LN2@Display

; 120  :    {
; 121  :       if (viewPoint && display->type == VirtualDisplay::DISPLAY_GENERAL)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN44@Display
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN44@Display

; 122  :       {
; 123  :          display->EndDraw();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 124  :         if (platform->IsAirplane() && ((AircraftClass*)platform)->Sms->MasterArm() != SMSBaseClass::Safe)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [edx+192]
	call	eax
	test	eax, eax
	je	SHORT $LN43@Display
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR [edx+940]
	call	?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ; SMSBaseClass::MasterArm
	test	eax, eax
	je	SHORT $LN43@Display

; 125  :          {
; 126  :             DrawTerrain();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawTerrain@LaserPodClass@@IAEXXZ	; LaserPodClass::DrawTerrain
$LN43@Display:

; 127  :          }
; 128  :          display->StartDraw();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN44@Display:

; 129  :       }
; 130  :       // Reset color after terrain
; 131  :       display->SetColor (tmpColor);

	mov	eax, DWORD PTR _tmpColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 132  : 
; 133  : 	  //MI looks different in real
; 134  : 	  if(!g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	jne	$LN42@Display

; 135  :       {
; 136  : 		  display->Line (0.0F, -1.0F, 0.0F, -0.1F);

	push	ecx
	movss	xmm0, DWORD PTR __real@bdcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 137  : 		  display->Line (0.0F,  1.0F, 0.0F,  0.1F);      

	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 138  : 		  display->Line (-1.0F, 0.0F, -0.1F, 0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bdcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 139  : 		  display->Line ( 1.0F, 0.0F,  0.1F, 0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 140  : 		  display->Line (-0.1F, -0.2F, 0.1F, -0.2F);

	push	ecx
	movss	xmm0, DWORD PTR __real@be4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bdcccccd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 141  : 		  display->Line (-0.1F, -0.4F, 0.1F, -0.4F);

	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bdcccccd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 142  : 		  display->Line (-0.1F, -0.6F, 0.1F, -0.6F);

	push	ecx
	movss	xmm0, DWORD PTR __real@bf19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bdcccccd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 143  : 	  }
; 144  : 	  else

	jmp	$LN40@Display
$LN42@Display:

; 145  : 	  {
; 146  : 		  if(!MenuMode)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+81]
	test	edx, edx
	jne	$LN40@Display

; 147  : 		  {
; 148  : 			  float begin = 0.1F;

	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR _begin$2[ebp], xmm0

; 149  : 			  float end = 0.3F;

	movss	xmm0, DWORD PTR __real@3e99999a
	movss	DWORD PTR _end$3[ebp], xmm0

; 150  : 			  display->Line(0.0F, -begin, 0.0F, -end);

	movss	xmm0, DWORD PTR _end$3[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _begin$2[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 151  : 			  display->Line(0.0F, begin, 0.0F, end);

	push	ecx
	movss	xmm0, DWORD PTR _end$3[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _begin$2[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 152  : 			  display->Line(-begin, 0.0F, -end, 0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _end$3[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _begin$2[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 153  : 			  display->Line(begin, 0.0F, end, 0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _end$3[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _begin$2[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+32]
	call	edx
$LN40@Display:

; 154  : 		  }
; 155  : 	  }
; 156  : 
; 157  :       if (hasTarget == TargetLocked)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 1
	jne	$LN39@Display

; 158  :       {
; 159  : 		  //MI
; 160  : 		  if(!g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	jne	$LN38@Display

; 161  : 		  {
; 162  : 			  display->Line (-LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 163  : 			  display->Line (-LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 164  : 			  display->Line ( LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 165  : 			  display->Line ( LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE,  LOCK_RING_MIN_SIZE, -LOCK_RING_MIN_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@be800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 166  : 		  }
; 167  : 		  else

	jmp	$LN34@Display
$LN38@Display:

; 168  : 		  {
; 169  : 				// FRB - B&W display
; 170  : 				if (g_bGreyMFD && !bNVGmode)

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN36@Display
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN36@Display

; 171  : 					display->SetColor(0xffffffff);

	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN36@Display:

; 172  : 			  //only if not in narrow view
; 173  : 			  if(curFOV > 3.0F * DTR)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	comiss	xmm0, DWORD PTR __real@3d56774e
	jbe	SHORT $LN35@Display

; 174  : 				  DrawFOV(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawFOV
$LN35@Display:

; 175  : 			  if(playerAC && playerAC->FCC && !playerAC->FCC
; 176  : 				  ->preDesignate && !IsLocked())

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	SHORT $LN34@Display
	mov	eax, DWORD PTR _playerAC$[ebp]
	cmp	DWORD PTR [eax+936], 0
	je	SHORT $LN34@Display
	mov	ecx, DWORD PTR _playerAC$[ebp]
	mov	edx, DWORD PTR [ecx+936]
	movsx	eax, BYTE PTR [edx+182]
	test	eax, eax
	jne	SHORT $LN34@Display
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocked@LaserPodClass@@QAEHXZ		; LaserPodClass::IsLocked
	test	eax, eax
	jne	SHORT $LN34@Display

; 177  : 				  display->TextCenter(0.0F, -0.4F, "AREA");

	push	0
	push	OFFSET ??_C@_04KCHJIPFN@AREA?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax
$LN34@Display:

; 178  : 		  }

	jmp	$LN21@Display
$LN39@Display:

; 179  : 
; 180  :       }
; 181  :       else if (lockedTarget)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	$LN32@Display

; 182  :       {
; 183  :       unsigned long tmp = vuxRealTime;

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	mov	DWORD PTR _tmp$1[ebp], edx

; 184  :       float offset = (float)(tmp & 0x3FF) / 0x400;

	mov	eax, DWORD PTR _tmp$1[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR tv1403[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv1403[ebp]
	mov	ecx, DWORD PTR tv1403[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv1406[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv1406[ebp]
	divss	xmm0, DWORD PTR __real@44800000
	movss	DWORD PTR _offset$4[ebp], xmm0

; 185  :    
; 186  :          if (tmp & 0x400)

	mov	edx, DWORD PTR _tmp$1[ebp]
	and	edx, 1024				; 00000400H
	je	SHORT $LN31@Display

; 187  :             offset = 1.0F - offset;

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _offset$4[ebp]
	movss	DWORD PTR _offset$4[ebp], xmm0
$LN31@Display:

; 188  :          offset *= LOCK_RING_MAX_SIZE - LOCK_RING_MIN_SIZE;

	movss	xmm0, DWORD PTR _offset$4[ebp]
	mulss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR _offset$4[ebp], xmm0

; 189  : 		
; 190  : 		 //MI
; 191  : 		 if(!g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	jne	$LN30@Display

; 192  : 		 {
; 193  : 			 display->Line (-(LOCK_RING_MIN_SIZE + offset), -(LOCK_RING_MIN_SIZE + offset), -(LOCK_RING_MIN_SIZE + offset),   LOCK_RING_MIN_SIZE + offset);

	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 194  : 			 display->Line (-(LOCK_RING_MIN_SIZE + offset), -(LOCK_RING_MIN_SIZE + offset),   LOCK_RING_MIN_SIZE + offset,  -(LOCK_RING_MIN_SIZE + offset));

	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 195  : 			 display->Line (  LOCK_RING_MIN_SIZE + offset,    LOCK_RING_MIN_SIZE + offset,  -(LOCK_RING_MIN_SIZE + offset),   LOCK_RING_MIN_SIZE + offset);

	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 196  : 			 display->Line (  LOCK_RING_MIN_SIZE + offset,    LOCK_RING_MIN_SIZE + offset,    LOCK_RING_MIN_SIZE + offset,  -(LOCK_RING_MIN_SIZE + offset));

	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR __real@3e800000
	addss	xmm0, DWORD PTR _offset$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 197  : 		 }
; 198  : 		 else

	jmp	$LN27@Display
$LN30@Display:

; 199  : 		 {
; 200  : 			 //only if not in narrow view
; 201  : 			 if(curFOV > 3.0F * DTR)

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+88]
	comiss	xmm0, DWORD PTR __real@3d56774e
	jbe	SHORT $LN28@Display

; 202  : 				 DrawFOV(display);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawFOV
$LN28@Display:

; 203  : 			 if(playerAC && playerAC->FCC && !playerAC->FCC
; 204  : 				  ->preDesignate && !IsLocked())

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	SHORT $LN27@Display
	mov	ecx, DWORD PTR _playerAC$[ebp]
	cmp	DWORD PTR [ecx+936], 0
	je	SHORT $LN27@Display
	mov	edx, DWORD PTR _playerAC$[ebp]
	mov	eax, DWORD PTR [edx+936]
	movsx	ecx, BYTE PTR [eax+182]
	test	ecx, ecx
	jne	SHORT $LN27@Display
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocked@LaserPodClass@@QAEHXZ		; LaserPodClass::IsLocked
	test	eax, eax
	jne	SHORT $LN27@Display

; 205  : 				  display->TextCenter(0.0F, -0.4F, "AREA");

	push	0
	push	OFFSET ??_C@_04KCHJIPFN@AREA?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax
$LN27@Display:

; 206  : 		 }
; 207  :       }
; 208  :       else

	jmp	$LN21@Display
$LN32@Display:

; 209  :       {
; 210  : 		  //MI
; 211  : 		  if(!g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	jne	$LN25@Display

; 212  : 		  {
; 213  : 			  display->Line (-LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 214  : 			  display->Line (-LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 215  : 			  display->Line ( LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 216  : 			  display->Line ( LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE,  LOCK_RING_MAX_SIZE, -LOCK_RING_MAX_SIZE);

	push	ecx
	movss	xmm0, DWORD PTR __real@bf000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 217  : 		  }
; 218  : 		  else

	jmp	$LN21@Display
$LN25@Display:

; 219  : 		  {
; 220  : 				// FRB - B&W display
; 221  : 				if (g_bGreyMFD && !bNVGmode)

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN23@Display
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN23@Display

; 222  : 					display->SetColor(0xffffffff);

	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN23@Display:

; 223  : 			  //only if not in narrow view
; 224  : 			  if(curFOV > 3.0F * DTR)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+88]
	comiss	xmm0, DWORD PTR __real@3d56774e
	jbe	SHORT $LN22@Display

; 225  : 				  DrawFOV(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawFOV@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawFOV
$LN22@Display:

; 226  : 			  if(playerAC && playerAC->FCC && !playerAC->FCC
; 227  : 				  ->preDesignate && !IsLocked())

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	SHORT $LN21@Display
	mov	eax, DWORD PTR _playerAC$[ebp]
	cmp	DWORD PTR [eax+936], 0
	je	SHORT $LN21@Display
	mov	ecx, DWORD PTR _playerAC$[ebp]
	mov	edx, DWORD PTR [ecx+936]
	movsx	eax, BYTE PTR [edx+182]
	test	eax, eax
	jne	SHORT $LN21@Display
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocked@LaserPodClass@@QAEHXZ		; LaserPodClass::IsLocked
	test	eax, eax
	jne	SHORT $LN21@Display

; 228  : 				  display->TextCenter(0.0F, -0.4F, "AREA");

	push	0
	push	OFFSET ??_C@_04KCHJIPFN@AREA?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@becccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax
$LN21@Display:

; 229  : 		  }
; 230  :       }
; 231  : 
; 232  :       if (!IsSOI())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSOI@DrawableClass@@QAEHXZ		; DrawableClass::IsSOI
	test	eax, eax
	jne	$LN20@Display

; 233  :       {
; 234  : 				if(g_bRealisticAvionics && !MenuMode)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	je	SHORT $LN19@Display
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+81]
	test	eax, eax
	jne	SHORT $LN19@Display

; 235  : 				{
; 236  : 					// FRB - B&W display
; 237  : 					if (g_bGreyMFD && !bNVGmode)

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN18@Display
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN18@Display

; 238  : 						display->SetColor(0xffffffff);

	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 239  : 					else

	jmp	SHORT $LN17@Display
$LN18@Display:

; 240  : 						display->SetColor(GetMfdColor(MFD_GREEN));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN17@Display:
	jmp	SHORT $LN15@Display
$LN19@Display:

; 241  : 					//Not here in real
; 242  : 					//display->TextCenter(0.0F, 0.4F, "NOT SOI");
; 243  : 				}
; 244  : 				else if(!g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	jne	SHORT $LN15@Display

; 245  : 				{
; 246  : 					display->SetColor(GetMfdColor(MFD_GREEN));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 247  : 					display->TextCenter(0.0F, 0.4F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3ecccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax
$LN15@Display:

; 248  : 				}
; 249  :       }
; 250  :       else

	jmp	SHORT $LN14@Display
$LN20@Display:

; 251  : 			{
; 252  : 				// FRB - B&W display
; 253  : 				if (g_bGreyMFD && !bNVGmode)

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN13@Display
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN13@Display

; 254  : 					display->SetColor(0xffffffff);

	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 255  : 				else

	jmp	SHORT $LN12@Display
$LN13@Display:

; 256  : 					display->SetColor(GetMfdColor(MFD_GREEN));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN12@Display:

; 257  : 				DrawBorder(); // JPO SOI

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawBorder@DrawableClass@@QAEXXZ	; DrawableClass::DrawBorder
$LN14@Display:

; 258  :       }
; 259  : 	  
; 260  : 	  //MI not here in real, according to docs and MFD vids from Kosovo bombings
; 261  : 	  if(!g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	jne	$LN11@Display

; 262  : 	  {
; 263  : 		  display->AdjustOriginInViewport (seekerAzCenter / LGB_GIMBAL_MAX, seekerElCenter / LGB_GIMBAL_MAX);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+60]
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+56]
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?AdjustOriginInViewport@VirtualDisplay@@QAEXMM@Z ; VirtualDisplay::AdjustOriginInViewport

; 264  : 		  display->Line (0.0F,  0.2F,  0.0F, -0.2F);

	push	ecx
	movss	xmm0, DWORD PTR __real@be4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 265  : 		  display->Line (0.2F,  0.0F, -0.2F,  0.0F);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@be4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 266  : 		  display->AdjustOriginInViewport (-seekerAzCenter / LGB_GIMBAL_MAX, -seekerElCenter / LGB_GIMBAL_MAX);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+60]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+56]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?AdjustOriginInViewport@VirtualDisplay@@QAEXMM@Z ; VirtualDisplay::AdjustOriginInViewport

; 267  : 	  }
; 268  : 	  else	//but instead, there's a small square

	jmp	$LN9@Display
$LN11@Display:

; 269  : 	  {
; 270  : 		  if(!MenuMode)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+81]
	test	edx, edx
	jne	$LN9@Display

; 271  : 		  {
; 272  : 				// FRB - B&W display
; 273  : 				if (g_bGreyMFD && !bNVGmode)

	movzx	eax, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	eax, eax
	je	SHORT $LN8@Display
	movzx	ecx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	ecx, ecx
	jne	SHORT $LN8@Display

; 274  : 					display->SetColor(0xffffffff);

	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 275  : 				else

	jmp	SHORT $LN7@Display
$LN8@Display:

; 276  : 					display->SetColor(GetMfdColor(MFD_GREEN));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN7@Display:

; 277  : 			  static float size = 0.02F;
; 278  : 			  display->AdjustOriginInViewport (seekerAzCenter / LGB_GIMBAL_MAX, seekerElCenter / LGB_GIMBAL_MAX);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+60]
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+56]
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?AdjustOriginInViewport@VirtualDisplay@@QAEXMM@Z ; VirtualDisplay::AdjustOriginInViewport

; 279  : 			  display->Tri(-size, size,-size, -size, size, size);

	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 280  : 			  display->Tri(size, size, size, -size, -size, -size);

	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR ?size@?FM@??Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z@4MA
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+36]
	call	eax

; 281  : 			  display->AdjustOriginInViewport (-seekerAzCenter / LGB_GIMBAL_MAX, -seekerElCenter / LGB_GIMBAL_MAX);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+60]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+56]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@40278d35
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?AdjustOriginInViewport@VirtualDisplay@@QAEXMM@Z ; VirtualDisplay::AdjustOriginInViewport
$LN9@Display:

; 282  : 		  }
; 283  : 	  }
; 284  : 	  //MI
; 285  : 	  if(g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	je	$LN2@Display

; 286  : 	  {
; 287  : 		  if(playerAC && playerAC->FCC)

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	$LN2@Display
	mov	edx, DWORD PTR _playerAC$[ebp]
	cmp	DWORD PTR [edx+936], 0
	je	SHORT $LN2@Display

; 288  : 		  {
; 289  : 				// FRB - B&W display
; 290  : 				if (g_bGreyMFD && !bNVGmode)

	movzx	eax, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	eax, eax
	je	SHORT $LN4@Display
	movzx	ecx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	ecx, ecx
	jne	SHORT $LN4@Display

; 291  : 					display->SetColor(0xffffffff);

	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 292  : 				else

	jmp	SHORT $LN3@Display
$LN4@Display:

; 293  : 					display->SetColor(GetMfdColor(MFD_GREEN));

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN3@Display:

; 294  : 			  if(playerAC->FCC->designateCmd || IsLocked())

	mov	ecx, DWORD PTR _playerAC$[ebp]
	mov	edx, DWORD PTR [ecx+936]
	movsx	eax, BYTE PTR [edx+184]
	test	eax, eax
	jne	SHORT $LN1@Display
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocked@LaserPodClass@@QAEHXZ		; LaserPodClass::IsLocked
	test	eax, eax
	je	SHORT $LN2@Display
$LN1@Display:

; 295  : 				  DrawBox(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawBox@LaserPodClass@@QAEXPAVVirtualDisplay@@@Z ; LaserPodClass::DrawBox
$LN2@Display:

; 296  : 		  }
; 297  : 	  }
; 298  :    }
; 299  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Display@LaserPodClass@@UAEXPAVVirtualDisplay@@@Z ENDP	; LaserPodClass::Display
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Exec@LaserPodClass@@UAEPAVSimObjectType@@PAV2@@Z PROC	; LaserPodClass::Exec
; _this$ = ecx

; 56   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   : 	if (hasTarget) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@Exec

; 58   : 		return lockedTarget;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	jmp	SHORT $LN3@Exec

; 59   : 	} else {

	jmp	SHORT $LN3@Exec
$LN2@Exec:

; 60   : 		return NULL;

	xor	eax, eax
$LN3@Exec:

; 61   : 	}
; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Exec@LaserPodClass@@UAEPAVSimObjectType@@PAV2@@Z ENDP	; LaserPodClass::Exec
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1LaserPodClass@@UAE@XZ PROC				; LaserPodClass::~LaserPodClass
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1LaserPodClass@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7LaserPodClass@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 50   :    DisplayExit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisplayExit@DrawableClass@@UAEXXZ	; DrawableClass::DisplayExit

; 51   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VisualClass@@UAE@XZ			; VisualClass::~VisualClass
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1LaserPodClass@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VisualClass@@UAE@XZ			; VisualClass::~VisualClass
__ehhandler$??1LaserPodClass@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1LaserPodClass@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1LaserPodClass@@UAE@XZ ENDP				; LaserPodClass::~LaserPodClass
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\visual\laserpod.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_idx$ = 8						; size = 4
_self$ = 12						; size = 4
??0LaserPodClass@@QAE@HPAVSimMoverClass@@@Z PROC	; LaserPodClass::LaserPodClass
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _self$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VisualClass@@QAE@HPAVSimMoverClass@@@Z ; VisualClass::VisualClass
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7LaserPodClass@@6B@

; 34   :    visualType = TARGETINGPOD;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 1

; 35   :    //MI docs say it's different
; 36   :    if(!g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	jne	SHORT $LN2@LaserPodCl

; 37   : 	   curFOV = 10.0F * DTR;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3e32b8c1
	movss	DWORD PTR [edx+88], xmm0

; 38   :    else

	jmp	SHORT $LN1@LaserPodCl
$LN2@LaserPodCl:

; 39   : 	   curFOV = 6.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3dd6774e
	movss	DWORD PTR [eax+88], xmm0
$LN1@LaserPodCl:

; 40   :    hasTarget = NoTarget;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 0

; 41   : 
; 42   :    //MI
; 43   :    BHOT = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+80], 1

; 44   :    MenuMode = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+81], 0

; 45   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0LaserPodClass@@QAE@HPAVSimMoverClass@@@Z ENDP	; LaserPodClass::LaserPodClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\visual.h
;	COMDAT ?VisualType@VisualClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?VisualType@VisualClass@@QAEHXZ PROC			; VisualClass::VisualType, COMDAT
; _this$ = ecx

; 20   : 	int VisualType( void )							{ return visualType; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?VisualType@VisualClass@@QAEHXZ ENDP			; VisualClass::VisualType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ PROC ; VuBin<FalconEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ENDP ; VuBin<FalconEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\object.h
;	COMDAT ?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ PROC	; SimObjectType::BaseData, COMDAT
; _this$ = ecx

; 92   : 	FalconEntity* BaseData(void) { return baseData.get(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?BaseData@SimObjectType@@QAEPAVFalconEntity@@XZ ENDP	; SimObjectType::BaseData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ PROC	; SensorClass::GetDisplay, COMDAT
; _this$ = ecx

; 55   : 	VirtualDisplay*	GetDisplay(void)                        { return privateDisplay; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ ENDP	; SensorClass::GetDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ PROC	; SensorClass::TargetUnderCursor, COMDAT
; _this$ = ecx

; 53   : 	virtual VU_ID TargetUnderCursor (void)                  { return targetUnderCursor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ ENDP	; SensorClass::TargetUnderCursor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?SetSeekerPos@SensorClass@@UAEXMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newAz$ = 8						; size = 4
_newEl$ = 12						; size = 4
?SetSeekerPos@SensorClass@@UAEXMM@Z PROC		; SensorClass::SetSeekerPos, COMDAT
; _this$ = ecx

; 51   : 	virtual void SetSeekerPos (float newAz, float newEl)	{ seekerAzCenter = newAz; seekerElCenter = newEl; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _newAz$[ebp]
	movss	DWORD PTR [eax+56], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _newEl$[ebp]
	movss	DWORD PTR [ecx+60], xmm0
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSeekerPos@SensorClass@@UAEXMM@Z ENDP		; SensorClass::SetSeekerPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?UpdateState@SensorClass@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?UpdateState@SensorClass@@UAEXHH@Z PROC			; SensorClass::UpdateState, COMDAT
; _this$ = ecx

; 50   : 	virtual void UpdateState(int, int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?UpdateState@SensorClass@@UAEXHH@Z ENDP			; SensorClass::UpdateState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?ExecModes@SensorClass@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?ExecModes@SensorClass@@UAEXHH@Z PROC			; SensorClass::ExecModes, COMDAT
; _this$ = ecx

; 49   : 	virtual void ExecModes(int, int)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?ExecModes@SensorClass@@UAEXHH@Z ENDP			; SensorClass::ExecModes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?IsOn@SensorClass@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsOn@SensorClass@@UAEHXZ PROC				; SensorClass::IsOn, COMDAT
; _this$ = ecx

; 40   : 	virtual BOOL			IsOn(void)				{ return isOn; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsOn@SensorClass@@UAEHXZ ENDP				; SensorClass::IsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?SetPower@SensorClass@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetPower@SensorClass@@UAEXH@Z PROC			; SensorClass::SetPower, COMDAT
; _this$ = ecx

; 39   : 	virtual void	SetPower (BOOL state)	{ isOn = state; if (!isOn) ClearSensorTarget(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+52], 0
	jne	SHORT $LN2@SetPower
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
$LN2@SetPower:
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPower@SensorClass@@UAEXH@Z ENDP			; SensorClass::SetPower
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?SetType@SensorClass@@UAEXW4SensorType@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_senstype$ = 8						; size = 4
?SetType@SensorClass@@UAEXW4SensorType@1@@Z PROC	; SensorClass::SetType, COMDAT
; _this$ = ecx

; 37   : 	virtual void	SetType(SensorType senstype)		{ sensorType = senstype; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _senstype$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetType@SensorClass@@UAEXW4SensorType@1@@Z ENDP	; SensorClass::SetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sensclas.h
;	COMDAT ?Type@SensorClass@@QAE?AW4SensorType@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Type@SensorClass@@QAE?AW4SensorType@1@XZ PROC		; SensorClass::Type, COMDAT
; _this$ = ecx

; 36   : 	SensorType	Type(void)			{ return sensorType; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@SensorClass@@QAE?AW4SensorType@1@XZ ENDP		; SensorClass::Type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?IsSOI@DrawableClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsSOI@DrawableClass@@QAEHXZ PROC			; DrawableClass::IsSOI, COMDAT
; _this$ = ecx

; 141  :       int IsSOI (void) {return (drawFlags & SOI ? TRUE : FALSE);};

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 1
	je	SHORT $LN3@IsSOI
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsSOI
$LN3@IsSOI:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsSOI:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSOI@DrawableClass@@QAEHXZ ENDP			; DrawableClass::IsSOI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\mltrig.h
;	COMDAT ?checked_atan2@@YANNN@Z
_TEXT	SEGMENT
_z$ = -8						; size = 8
_y$ = 8							; size = 8
_x$ = 16						; size = 8
?checked_atan2@@YANNN@Z PROC				; checked_atan2, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 47   : 	double z;
; 48   : 	
; 49   : 	if (x == -0.0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@8000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@checked_at

; 50   : 		x = 0.0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _x$[ebp], xmm0
$LN8@checked_at:

; 51   : 	
; 52   : 	if (x != 0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@checked_at

; 53   : 		z = atan(y / x);

	movsd	xmm0, QWORD PTR _y$[ebp]
	divsd	xmm0, QWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR _z$[ebp]
	jmp	SHORT $LN4@checked_at
$LN7@checked_at:

; 54   : 	else if (y > 0)

	movsd	xmm0, QWORD PTR _y$[ebp]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN5@checked_at

; 55   : 		z = HALF_DPI;

	movsd	xmm0, QWORD PTR __real@3ff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 56   : 	else

	jmp	SHORT $LN4@checked_at
$LN5@checked_at:

; 57   : 		z = -HALF_DPI;

	movsd	xmm0, QWORD PTR __real@bff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN4@checked_at:

; 58   : 
; 59   : 	if (x < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _x$[ebp]
	jbe	SHORT $LN1@checked_at

; 60   : 	{
; 61   : 		if (y < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _y$[ebp]
	jbe	SHORT $LN2@checked_at

; 62   : 			z -= DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	subsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 63   : 		else

	jmp	SHORT $LN1@checked_at
$LN2@checked_at:

; 64   : 			z += DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	addsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN1@checked_at:

; 65   : 	}
; 66   : 
; 67   : 	return z;

	fld	QWORD PTR _z$[ebp]

; 68   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?checked_atan2@@YANNN@Z ENDP				; checked_atan2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSim@FalconEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsSim@FalconEntity@@QAEHXZ PROC			; FalconEntity::IsSim, COMDAT
; _this$ = ecx

; 103  : 		{return (falconType & FalconSimEntity) ? TRUE : FALSE;};

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+137]
	and	ecx, 2
	je	SHORT $LN3@IsSim
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsSim
$LN3@IsSim:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsSim:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSim@FalconEntity@@QAEHXZ ENDP			; FalconEntity::IsSim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZPos@VuEntity@@QBEMXZ PROC				; VuEntity::ZPos, COMDAT
; _this$ = ecx

; 160  : 	BIG_SCALAR ZPos()	const { return pos_.z_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZPos@VuEntity@@QBEMXZ ENDP				; VuEntity::ZPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT

; 537  :         {return (sinf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 511  :         {return (cosf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?atan@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?atan@@YAMM@Z PROC					; atan, COMDAT

; 505  :         {return (atanf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_atanf
	add	esp, 4
	pop	ebp
	ret	0
?atan@@YAMM@Z ENDP					; atan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 430  :         {return ((float)sin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _atanf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT

; 404  :         {return ((float)atan((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_atanf	ENDP
_TEXT	ENDS
END
