; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\Navaids\tacan.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	??_C@_0BP@NDPOJKDI@sim?2sigdata?2tacan?2stations?4dat?$AA@ ; `string'
PUBLIC	?gTacanList@@3PAVTacanList@@A			; gTacanList
PUBLIC	?gpTacanFileName@@3PBDB				; gpTacanFileName
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
_BSS	SEGMENT
?gTacanList@@3PAVTacanList@@A DD 01H DUP (?)		; gTacanList
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
_DATA	SEGMENT
?gpTacanFileName@@3PBDB DD FLAT:??_C@_0BP@NDPOJKDI@sim?2sigdata?2tacan?2stations?4dat?$AA@ ; gpTacanFileName
_DATA	ENDS
;	COMDAT ??_C@_0BP@NDPOJKDI@sim?2sigdata?2tacan?2stations?4dat?$AA@
CONST	SEGMENT
??_C@_0BP@NDPOJKDI@sim?2sigdata?2tacan?2stations?4dat?$AA@ DB 'sim\sigdat'
	DB	'a\tacan\stations.dat', 00H			; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??MVU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator<
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??MVU_ID@@QBE_NABV0@@Z				; VU_ID::operator<
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	?GetCampId@CampBaseClass@@QBEFXZ		; CampBaseClass::GetCampId
PUBLIC	?GetType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetType
PUBLIC	?GetSType@CampBaseClass@@QBEEXZ			; CampBaseClass::GetSType
PUBLIC	??0LinkedTacanVUStr@TacanList@@QAE@XZ		; TacanList::LinkedTacanVUStr::LinkedTacanVUStr
PUBLIC	?StoreStation@TacanList@@AAEHPAPAULinkedCampStationStr@1@FHW4StationSet@1@HHHM@Z ; TacanList::StoreStation
PUBLIC	?ResolveStationList@TacanList@@AAEXPAPAULinkedCampStationStr@1@PAPAPAUTacanCampStr@1@H@Z ; TacanList::ResolveStationList
PUBLIC	?SearchForChannel@@YAHPAXPAPAX@Z		; SearchForChannel
PUBLIC	?GetChannelFromCampID@TacanList@@AAEHPAHPAW4StationSet@1@F@Z ; TacanList::GetChannelFromCampID
PUBLIC	?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z ; TacanList::GetPointerFromVUID
PUBLIC	?GetCampTacanFromVUID@TacanList@@AAEHPAPAUTacanCampStr@1@F@Z ; TacanList::GetCampTacanFromVUID
PUBLIC	?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z ; TacanList::InsertIntoTacanList
PUBLIC	?InitDynamicChans@TacanList@@AAEXXZ		; TacanList::InitDynamicChans
PUBLIC	?CleanupDynamicChans@TacanList@@AAEXXZ		; TacanList::CleanupDynamicChans
PUBLIC	?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z ; TacanList::AssignChannel
PUBLIC	?RetireChannel@TacanList@@AAEXVVU_ID@@@Z	; TacanList::RetireChannel
PUBLIC	?AddTacan@TacanList@@QAEXPAVCampBaseClass@@@Z	; TacanList::AddTacan
PUBLIC	?RemoveTacan@TacanList@@QAEXVVU_ID@@H@Z		; TacanList::RemoveTacan
PUBLIC	?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z ; TacanList::GetVUIDFromChannel
PUBLIC	?GetVUIDFromLocation@TacanList@@QAEHMMW4Domain@1@PAVVU_ID@@PAH2PAM@Z ; TacanList::GetVUIDFromLocation
PUBLIC	?GetChannelFromVUID@TacanList@@QAEHVVU_ID@@PAHPAW4StationSet@1@PAW4Domain@1@11PAM@Z ; TacanList::GetChannelFromVUID
PUBLIC	?GetCallsignFromCampID@TacanList@@QAEHFPAH@Z	; TacanList::GetCallsignFromCampID
PUBLIC	?ChannelToFrequency@TacanList@@SAHW4StationSet@1@H@Z ; TacanList::ChannelToFrequency
PUBLIC	??0TacanList@@QAE@XZ				; TacanList::TacanList
PUBLIC	??1TacanList@@QAE@XZ				; TacanList::~TacanList
PUBLIC	?CompareCampIDs@@YAHPAPAX0@Z			; CompareCampIDs
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03GILJFNFC@dat?$AA@			; `string'
PUBLIC	??_C@_08PEIMLNNL@stations?$AA@			; `string'
PUBLIC	??_C@_0BF@FPOLPOAP@?$CFd?5?$CFd?5?$CFc?5?$CFd?5?$CFd?5?$CFd?5?$CFf?$AA@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@42de3333
PUBLIC	__real@bf800000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_fgets:PROC
EXTRN	_sscanf:PROC
EXTRN	_bsearch:PROC
EXTRN	_qsort:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	_ResFClose:PROC
EXTRN	?DistSqu@@YAMMMMM@Z:PROC			; DistSqu
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?g_nMinTacanChannel@@3HA:DWORD			; g_nMinTacanChannel
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@42de3333
CONST	SEGMENT
__real@42de3333 DD 042de3333r			; 111.1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BF@FPOLPOAP@?$CFd?5?$CFd?5?$CFc?5?$CFd?5?$CFd?5?$CFd?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BF@FPOLPOAP@?$CFd?5?$CFd?5?$CFc?5?$CFd?5?$CFd?5?$CFd?5?$CFf?$AA@ DB '%'
	DB	'd %d %c %d %d %d %f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEIMLNNL@stations?$AA@
CONST	SEGMENT
??_C@_08PEIMLNNL@stations?$AA@ DB 'stations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GILJFNFC@dat?$AA@
CONST	SEGMENT
??_C@_03GILJFNFC@dat?$AA@ DB 'dat', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z$0
__unwindtable$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z$0
__ehfuncinfo$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_el2$ = -12						; size = 4
_el1$ = -8						; size = 4
_returnStatus$ = -4					; size = 4
_element1$ = 8						; size = 4
_element2$ = 12						; size = 4
?CompareCampIDs@@YAHPAPAX0@Z PROC			; CompareCampIDs

; 1014 : int CompareCampIDs(void** element1, void** element2) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1015 : 	int	returnStatus;
; 1016 : 	
; 1017 : 	TacanList::TacanCampStr** el1		= (TacanList::TacanCampStr**) element1;

	mov	eax, DWORD PTR _element1$[ebp]
	mov	DWORD PTR _el1$[ebp], eax

; 1018 : 	TacanList::TacanCampStr** el2		= (TacanList::TacanCampStr**) element2;

	mov	ecx, DWORD PTR _element2$[ebp]
	mov	DWORD PTR _el2$[ebp], ecx

; 1019 : 
; 1020 : 	if((*el1)->campaignID < (*el2)->campaignID) {

	mov	edx, DWORD PTR _el1$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, WORD PTR [eax+8]
	mov	edx, DWORD PTR _el2$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	edx, WORD PTR [eax+8]
	cmp	ecx, edx
	jge	SHORT $LN4@CompareCam

; 1021 : 		returnStatus	= -1;

	mov	DWORD PTR _returnStatus$[ebp], -1
	jmp	SHORT $LN3@CompareCam
$LN4@CompareCam:

; 1022 : 	}
; 1023 : 	else if((*el1)->campaignID == (*el2)->campaignID) {

	mov	eax, DWORD PTR _el1$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, WORD PTR [ecx+8]
	mov	eax, DWORD PTR _el2$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	eax, WORD PTR [ecx+8]
	cmp	edx, eax
	jne	SHORT $LN2@CompareCam

; 1024 : 		returnStatus	= 0;

	mov	DWORD PTR _returnStatus$[ebp], 0

; 1025 : 	}
; 1026 : 	else {

	jmp	SHORT $LN3@CompareCam
$LN2@CompareCam:

; 1027 : 		returnStatus	= 1;

	mov	DWORD PTR _returnStatus$[ebp], 1
$LN3@CompareCam:

; 1028 : 	}
; 1029 : 
; 1030 : 	return returnStatus;

	mov	eax, DWORD PTR _returnStatus$[ebp]

; 1031 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CompareCampIDs@@YAHPAPAX0@Z ENDP			; CompareCampIDs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_p_link$ = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
_p_current$ = -12					; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
??1TacanList@@QAE@XZ PROC				; TacanList::~TacanList
; _this$ = ecx

; 178  : TacanList::~TacanList() {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 	
; 180  : 	int i;
; 181  : 
; 182  : 	LinkedTacanVUStr* p_link;
; 183  : 	LinkedTacanVUStr* p_current;
; 184  : 
; 185  : 	for(i = 0; i < mCampListTally; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@TacanList
$LN4@TacanList:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@TacanList:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jge	SHORT $LN3@TacanList

; 186  : 		delete mpCampList[i];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 187  : 	}

	jmp	SHORT $LN4@TacanList
$LN3@TacanList:

; 188  : 
; 189  : 	delete [] mpCampList;					// Blow away the CampID list

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 190  : 
; 191  : 	p_current = mpTList;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _p_current$[ebp], eax
$LN2@TacanList:

; 192  : 
; 193  : 	while(p_current) {						// Walk the tacan list and delete all links

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN1@TacanList

; 194  : 		p_link		= p_current->p_next;

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p_link$[ebp], edx

; 195  : //		delete p_current->p_station;
; 196  : 		delete p_current;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 197  : 		p_current	= p_link;

	mov	edx, DWORD PTR _p_link$[ebp]
	mov	DWORD PTR _p_current$[ebp], edx

; 198  : 	}

	jmp	SHORT $LN2@TacanList
$LN1@TacanList:

; 199  : 
; 200  : 	CleanupDynamicChans();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupDynamicChans@TacanList@@AAEXXZ	; TacanList::CleanupDynamicChans

; 201  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1TacanList@@QAE@XZ ENDP				; TacanList::~TacanList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_tactype$ = -1084					; size = 4
_range$ = -1080						; size = 4
_p_stations$ = -1076					; size = 4
_callsign$ = -1072					; size = 4
_stationId$ = -1068					; size = 4
_channel$ = -1064					; size = 4
_ilsfreq$ = -1060					; size = 4
_result$ = -1056					; size = 4
tv132 = -1052						; size = 4
_band$ = -1048						; size = 4
_done$ = -1044						; size = 4
_p_File$ = -1040					; size = 4
_this$ = -1036						; size = 4
_bandChar$ = -1029					; size = 1
_buffer$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
??0TacanList@@QAE@XZ PROC				; TacanList::TacanList
; _this$ = ecx

; 91   : TacanList::TacanList() {

	push	ebp
	mov	ebp, esp
	sub	esp, 1084				; 0000043cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 
; 93   : 	LinkedCampStationStr	*p_stations	= NULL;

	mov	DWORD PTR _p_stations$[ebp], 0

; 94   : 	FILE					*p_File = NULL;

	mov	DWORD PTR _p_File$[ebp], 0

; 95   : 	BOOL					done= FALSE;

	mov	DWORD PTR _done$[ebp], 0

; 96   : 	StationSet				band=X;

	mov	DWORD PTR _band$[ebp], 0

; 97   : 	char					bandChar='x';

	mov	BYTE PTR _bandChar$[ebp], 120		; 00000078H

; 98   : 	int					channel= 106;

	mov	DWORD PTR _channel$[ebp], 106		; 0000006aH

; 99   : 	int					stationId=0;

	mov	DWORD PTR _stationId$[ebp], 0

; 100  : 	int					result=0;

	mov	DWORD PTR _result$[ebp], 0

; 101  : 	int					callsign=0;

	mov	DWORD PTR _callsign$[ebp], 0

; 102  : 	int range, tactype;
; 103  : 	float ilsfreq;
; 104  : 	char buffer[1024];
; 105  : 
; 106  : 	mpTList			= NULL;		

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 107  : 	mCampListTally	= 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 108  : 	p_File = OpenCampFile("stations", "dat", "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	OFFSET ??_C@_03GILJFNFC@dat?$AA@
	push	OFFSET ??_C@_08PEIMLNNL@stations?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p_File$[ebp], eax

; 109  : //	p_File			= CP_OPEN(gpTacanFileName, "r");
; 110  : 	F4Assert(p_File);
; 111  : 	//	Error: Couldn't open file
; 112  : 	if (p_File == NULL) done = TRUE;

	cmp	DWORD PTR _p_File$[ebp], 0
	jne	SHORT $LN19@TacanList
	mov	DWORD PTR _done$[ebp], 1
$LN19@TacanList:

; 113  : 	
; 114  : 	while(done == FALSE) {

	cmp	DWORD PTR _done$[ebp], 0
	jne	$LN17@TacanList

; 115  : 	    if (fgets (buffer, sizeof buffer, p_File) == NULL) {

	mov	edx, DWORD PTR _p_File$[ebp]
	push	edx
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN16@TacanList

; 116  : 		done = TRUE;

	mov	DWORD PTR _done$[ebp], 1

; 117  : 		break;

	jmp	$LN17@TacanList
$LN16@TacanList:

; 118  : 	    }
; 119  : 	    // check for comments.
; 120  : 	    if (buffer[0] == ';' || buffer[0] == '#' || buffer[0] == '\n')

	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buffer$[ebp+ecx]
	cmp	edx, 59					; 0000003bH
	je	SHORT $LN14@TacanList
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _buffer$[ebp+eax]
	cmp	ecx, 35					; 00000023H
	je	SHORT $LN14@TacanList
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buffer$[ebp+edx]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN15@TacanList
$LN14@TacanList:

; 121  : 		continue;

	jmp	SHORT $LN19@TacanList
$LN15@TacanList:

; 122  : 	    
; 123  : 	    result = sscanf(buffer, "%d %d %c %d %d %d %f", 
; 124  : 		&stationId, &channel, &bandChar, &callsign, 
; 125  : 		&range, &tactype, &ilsfreq);

	lea	ecx, DWORD PTR _ilsfreq$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tactype$[ebp]
	push	edx
	lea	eax, DWORD PTR _range$[ebp]
	push	eax
	lea	ecx, DWORD PTR _callsign$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bandChar$[ebp]
	push	edx
	lea	eax, DWORD PTR _channel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stationId$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BF@FPOLPOAP@?$CFd?5?$CFd?5?$CFc?5?$CFd?5?$CFd?5?$CFd?5?$CFf?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sscanf
	add	esp, 36					; 00000024H
	mov	DWORD PTR _result$[ebp], eax

; 126  : 	    
; 127  : 	    F4Assert(result >= NUM_TACAN_FIELDS);					// Four Fields should be read in or EOF (-1)
; 128  : 	    
; 129  : 	    if (result < NUM_TACAN_FIELDS)

	cmp	DWORD PTR _result$[ebp], 4
	jge	SHORT $LN13@TacanList

; 130  : 		continue;

	jmp	$LN19@TacanList
$LN13@TacanList:

; 131  : 	    
; 132  : 	    switch(result) { // fill in missing bits

	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR tv132[ebp], eax
	cmp	DWORD PTR tv132[ebp], 4
	je	SHORT $LN10@TacanList
	cmp	DWORD PTR tv132[ebp], 5
	je	SHORT $LN9@TacanList
	cmp	DWORD PTR tv132[ebp], 6
	je	SHORT $LN8@TacanList
	jmp	SHORT $LN11@TacanList
$LN10@TacanList:

; 133  : 	    case NUM_TACAN_FIELDS:
; 134  : 		range = 150;

	mov	DWORD PTR _range$[ebp], 150		; 00000096H
$LN9@TacanList:

; 135  : 		// fall
; 136  : 	    case NUM_TACAN_FIELDS+1:
; 137  : 		tactype = 1;

	mov	DWORD PTR _tactype$[ebp], 1
$LN8@TacanList:

; 138  : 		// fall
; 139  : 	    case NUM_TACAN_FIELDS+2:
; 140  : 		ilsfreq = 111.1f;

	movss	xmm0, DWORD PTR __real@42de3333
	movss	DWORD PTR _ilsfreq$[ebp], xmm0
$LN11@TacanList:

; 141  : 		break;
; 142  : 	    }
; 143  : 	    
; 144  : 	    if(bandChar == 'x' || bandChar == 'X') {

	movsx	ecx, BYTE PTR _bandChar$[ebp]
	cmp	ecx, 120				; 00000078H
	je	SHORT $LN6@TacanList
	movsx	edx, BYTE PTR _bandChar$[ebp]
	cmp	edx, 88					; 00000058H
	jne	SHORT $LN7@TacanList
$LN6@TacanList:

; 145  : 		band = X;

	mov	DWORD PTR _band$[ebp], 0
	jmp	SHORT $LN4@TacanList
$LN7@TacanList:

; 146  : 	    }
; 147  : 	    else if(bandChar == 'y' || bandChar == 'Y') {

	movsx	eax, BYTE PTR _bandChar$[ebp]
	cmp	eax, 121				; 00000079H
	je	SHORT $LN3@TacanList
	movsx	ecx, BYTE PTR _bandChar$[ebp]
	cmp	ecx, 89					; 00000059H
	jne	SHORT $LN4@TacanList
$LN3@TacanList:

; 148  : 		band = Y;

	mov	DWORD PTR _band$[ebp], 1
$LN4@TacanList:

; 149  : 	    }
; 150  : 	    else {
; 151  : 		ShiWarning("Invalid Tacan band\n");															//	Band can only be type X or Y
; 152  : 	    }
; 153  : 	    
; 154  : 	    F4Assert(channel > 0 && channel <= NUM_CHANNELS);					// Channel must be between 1 - 126 inclusive				
; 155  : 	    
; 156  : 	    if(StoreStation(&p_stations, (short)stationId, channel, band, callsign,
; 157  : 		range, tactype, ilsfreq)) {			// Insert into ordered linked list

	push	ecx
	movss	xmm0, DWORD PTR _ilsfreq$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _tactype$[ebp]
	push	edx
	mov	eax, DWORD PTR _range$[ebp]
	push	eax
	mov	ecx, DWORD PTR _callsign$[ebp]
	push	ecx
	mov	edx, DWORD PTR _band$[ebp]
	push	edx
	mov	eax, DWORD PTR _channel$[ebp]
	push	eax
	movzx	ecx, WORD PTR _stationId$[ebp]
	push	ecx
	lea	edx, DWORD PTR _p_stations$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StoreStation@TacanList@@AAEHPAPAULinkedCampStationStr@1@FHW4StationSet@1@HHHM@Z ; TacanList::StoreStation
	test	eax, eax
	je	SHORT $LN1@TacanList

; 158  : 		mCampListTally++;															// If there are no duplicates, increment Tally

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN1@TacanList:

; 159  : 	    }
; 160  : 	}

	jmp	$LN19@TacanList
$LN17@TacanList:

; 161  : 	ResolveStationList(&p_stations, &mpCampList, mCampListTally);	// Copy linked list into array

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR _p_stations$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResolveStationList@TacanList@@AAEXPAPAULinkedCampStationStr@1@PAPAPAUTacanCampStr@1@H@Z ; TacanList::ResolveStationList

; 162  : 	fclose(p_File);

	mov	ecx, DWORD PTR _p_File$[ebp]
	push	ecx
	call	_ResFClose
	add	esp, 4

; 163  : 	
; 164  : 	InitDynamicChans();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitDynamicChans@TacanList@@AAEXXZ	; TacanList::InitDynamicChans

; 165  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??0TacanList@@QAE@XZ ENDP				; TacanList::TacanList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_set$ = 8						; size = 4
_channel$ = 12						; size = 4
?ChannelToFrequency@TacanList@@SAHW4StationSet@1@H@Z PROC ; TacanList::ChannelToFrequency

; 994  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 995  :     switch (set) {

	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN7@ChannelToF
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN4@ChannelToF
	jmp	SHORT $LN1@ChannelToF
$LN7@ChannelToF:

; 996  :     case StationSet::X:
; 997  : 	if (channel < 64)

	cmp	DWORD PTR _channel$[ebp], 64		; 00000040H
	jge	SHORT $LN6@ChannelToF

; 998  : 	    return 961 + channel;

	mov	eax, DWORD PTR _channel$[ebp]
	add	eax, 961				; 000003c1H
	jmp	SHORT $LN10@ChannelToF

; 999  : 	else 

	jmp	SHORT $LN5@ChannelToF
$LN6@ChannelToF:

; 1000 : 	    return (channel = 126) + 1213;

	mov	DWORD PTR _channel$[ebp], 126		; 0000007eH
	mov	eax, DWORD PTR _channel$[ebp]
	add	eax, 1213				; 000004bdH
	jmp	SHORT $LN10@ChannelToF
$LN5@ChannelToF:

; 1001 : 	break;

	jmp	SHORT $LN10@ChannelToF
$LN4@ChannelToF:

; 1002 :     case StationSet::Y:
; 1003 : 	if (channel < 64)

	cmp	DWORD PTR _channel$[ebp], 64		; 00000040H
	jge	SHORT $LN3@ChannelToF

; 1004 : 	    return 1087 + channel;

	mov	eax, DWORD PTR _channel$[ebp]
	add	eax, 1087				; 0000043fH
	jmp	SHORT $LN10@ChannelToF
	jmp	SHORT $LN2@ChannelToF
$LN3@ChannelToF:

; 1005 : 	else return (channel - 126) + 1087;

	mov	eax, DWORD PTR _channel$[ebp]
	add	eax, 961				; 000003c1H
	jmp	SHORT $LN10@ChannelToF
$LN2@ChannelToF:

; 1006 : 	break;

	jmp	SHORT $LN10@ChannelToF
$LN1@ChannelToF:

; 1007 :     default:
; 1008 : 	return 0;

	xor	eax, eax
$LN10@ChannelToF:

; 1009 :     }
; 1010 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ChannelToFrequency@TacanList@@SAHW4StationSet@1@H@Z ENDP ; TacanList::ChannelToFrequency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -44						; size = 4
_returnStatus$ = -40					; size = 4
_p_occurrence$ = -36					; size = 4
_key$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_campId$ = 8						; size = 2
_callsign$ = 12						; size = 4
?GetCallsignFromCampID@TacanList@@QAEHFPAH@Z PROC	; TacanList::GetCallsignFromCampID
; _this$ = ecx

; 801  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 802  : 	if(campId < 0) {

	movsx	eax, WORD PTR _campId$[ebp]
	test	eax, eax
	jge	SHORT $LN2@GetCallsig

; 803  : 		//F4Assert(FALSE);														// Bad Id
; 804  : 		ShiWarning("bad campid\n");
; 805  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN3@GetCallsig
$LN2@GetCallsig:

; 806  : 	}
; 807  : 	
; 808  : 	TacanCampStr		key;
; 809  : 	TacanCampStr**		p_occurrence;
; 810  : 	BOOL					returnStatus	= FALSE;

	mov	DWORD PTR _returnStatus$[ebp], 0

; 811  : 
; 812  : 	key.campaignID		= campId;

	mov	cx, WORD PTR _campId$[ebp]
	mov	WORD PTR _key$[ebp+8], cx

; 813  : 
; 814  : 	p_occurrence		= (TacanCampStr**) bsearch(&key, mpCampList, mCampListTally,
; 815  : 								sizeof(TacanCampStr*),
; 816  : 								(int (*)(const void*, const void*))SearchForChannel);			//	Do the binary search

	push	OFFSET ?SearchForChannel@@YAHPAXPAPAX@Z	; SearchForChannel
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_bsearch
	add	esp, 20					; 00000014H
	mov	DWORD PTR _p_occurrence$[ebp], eax

; 817  : 	if(p_occurrence) {

	cmp	DWORD PTR _p_occurrence$[ebp], 0
	je	SHORT $LN1@GetCallsig

; 818  : 		*callsign			= (*p_occurrence)->callsign;

	mov	ecx, DWORD PTR _p_occurrence$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _callsign$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax], ecx

; 819  : 		returnStatus	= TRUE;

	mov	DWORD PTR _returnStatus$[ebp], 1
$LN1@GetCallsig:

; 820  : 	}
; 821  : 
; 822  : 	return returnStatus;

	mov	eax, DWORD PTR _returnStatus$[ebp]
$LN3@GetCallsig:

; 823  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCallsignFromCampID@TacanList@@QAEHFPAH@Z ENDP	; TacanList::GetCallsignFromCampID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_p_previous$ = -20					; size = 4
_result$ = -16						; size = 4
_tinfo$1 = -12						; size = 4
_this$ = -8						; size = 4
_tacanVUStr$ = -4					; size = 4
_id$ = 8						; size = 8
_p_channel$ = 16					; size = 4
_p_set$ = 20						; size = 4
_p_domain$ = 24						; size = 4
_rangep$ = 28						; size = 4
_ttype$ = 32						; size = 4
_ilsfreq$ = 36						; size = 4
?GetChannelFromVUID@TacanList@@QAEHVVU_ID@@PAHPAW4StationSet@1@PAW4Domain@1@11PAM@Z PROC ; TacanList::GetChannelFromVUID
; _this$ = ecx

; 310  : 				   int *rangep, int *ttype, float *ilsfreq) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 311  : 	
; 312  : 	BOOL	result;
; 313  : 	LinkedTacanVUStr* tacanVUStr;
; 314  : 	LinkedTacanVUStr* p_previous;
; 315  : 	
; 316  : 	result = GetPointerFromVUID(mpTList, id, &p_previous, &tacanVUStr);

	lea	eax, DWORD PTR _tacanVUStr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p_previous$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z ; TacanList::GetPointerFromVUID
	mov	DWORD PTR _result$[ebp], eax

; 317  : 	if(result) {

	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN1@GetChannel

; 318  : 		*p_channel	= tacanVUStr->channel;

	mov	eax, DWORD PTR _p_channel$[ebp]
	mov	ecx, DWORD PTR _tacanVUStr$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 319  : 		*p_set		= tacanVUStr->set;

	mov	eax, DWORD PTR _p_set$[ebp]
	mov	ecx, DWORD PTR _tacanVUStr$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx

; 320  : 		*p_domain	= tacanVUStr->domain;

	mov	eax, DWORD PTR _p_domain$[ebp]
	mov	ecx, DWORD PTR _tacanVUStr$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx

; 321  : 		TacanCampStr *tinfo; /// XXXXX Bleah
; 322  : 		if (GetCampTacanFromVUID(&tinfo, tacanVUStr->camp_id)) {

	mov	eax, DWORD PTR _tacanVUStr$[ebp]
	movzx	ecx, WORD PTR [eax+28]
	push	ecx
	lea	edx, DWORD PTR _tinfo$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCampTacanFromVUID@TacanList@@AAEHPAPAUTacanCampStr@1@F@Z ; TacanList::GetCampTacanFromVUID
	test	eax, eax
	je	SHORT $LN2@GetChannel

; 323  : 		    *rangep = tinfo->range;

	mov	eax, DWORD PTR _rangep$[ebp]
	mov	ecx, DWORD PTR _tinfo$1[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx

; 324  : 		    *ttype = tinfo->tactype;

	mov	eax, DWORD PTR _ttype$[ebp]
	mov	ecx, DWORD PTR _tinfo$1[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx

; 325  : 		    *ilsfreq = tinfo->ilsfreq;

	mov	eax, DWORD PTR _ilsfreq$[ebp]
	mov	ecx, DWORD PTR _tinfo$1[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx

; 326  : 		}
; 327  : 		else {

	jmp	SHORT $LN1@GetChannel
$LN2@GetChannel:

; 328  : 		    *rangep = 150;

	mov	eax, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [eax], 150			; 00000096H

; 329  : 		    *ttype = 1;

	mov	ecx, DWORD PTR _ttype$[ebp]
	mov	DWORD PTR [ecx], 1

; 330  : 		    *ilsfreq = 0;

	mov	edx, DWORD PTR _ilsfreq$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0
$LN1@GetChannel:

; 331  : 		}
; 332  : 
; 333  : 	}
; 334  : 
; 335  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 336  : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?GetChannelFromVUID@TacanList@@QAEHVVU_ID@@PAHPAW4StationSet@1@PAW4Domain@1@11PAM@Z ENDP ; TacanList::GetChannelFromVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_bestTacan$ = -40					; size = 8
_tacanX$ = -32						; size = 4
_tacanY$ = -28						; size = 4
_this$ = -24						; size = 4
_result$ = -20						; size = 4
_distance$ = -16					; size = 4
_p_entity$ = -12					; size = 4
_bestDistance$ = -8					; size = 4
_p_current$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_domain$ = 16						; size = 4
_id$ = 20						; size = 4
_range$ = 24						; size = 4
_type$ = 28						; size = 4
_ilsfreq$ = 32						; size = 4
?GetVUIDFromLocation@TacanList@@QAEHMMW4Domain@1@PAVVU_ID@@PAH2PAM@Z PROC ; TacanList::GetVUIDFromLocation
; _this$ = ecx

; 415  : 				    VU_ID* id, int *range, int *type, float *ilsfreq) {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	
; 417  : 	VuEntity*			p_entity;
; 418  : 	LinkedTacanVUStr*	p_current	= mpTList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _p_current$[ebp], ecx

; 419  : 	BOOL					result		= FALSE;

	mov	DWORD PTR _result$[ebp], 0

; 420  : 	float					tacanX;
; 421  : 	float					tacanY;
; 422  : 	float					distance;
; 423  : 	float					bestDistance = -1.0F;

	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _bestDistance$[ebp], xmm0

; 424  : 	VU_ID					bestTacan;	

	lea	ecx, DWORD PTR _bestTacan$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 425  : 	
; 426  : 	bestTacan	= FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _bestTacan$[ebp], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _bestTacan$[ebp+4], eax
$LN5@GetVUIDFro:

; 427  : 
; 428  : 	while(p_current) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	$LN4@GetVUIDFro

; 429  : 
; 430  : 		if(p_current->domain == domain) {

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR _domain$[ebp]
	jne	$LN2@GetVUIDFro

; 431  : 
; 432  : 			p_entity = vuDatabase->Find(p_current->vuID);

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _p_entity$[ebp], eax

; 433  : 			tacanX	= p_entity->XPos();

	mov	ecx, DWORD PTR _p_entity$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR _tacanX$[ebp]

; 434  : 			tacanY	= p_entity->YPos();

	mov	ecx, DWORD PTR _p_entity$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR _tacanY$[ebp]

; 435  : 
; 436  : 			distance = DistSqu(tacanX, tacanY, x, y);

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _tacanY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _tacanX$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?DistSqu@@YAMMMMM@Z			; DistSqu
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _distance$[ebp]

; 437  : 			if(distance < bestDistance || bestDistance < 0.0F) {

	movss	xmm0, DWORD PTR _bestDistance$[ebp]
	comiss	xmm0, DWORD PTR _distance$[ebp]
	ja	SHORT $LN1@GetVUIDFro
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _bestDistance$[ebp]
	jbe	SHORT $LN2@GetVUIDFro
$LN1@GetVUIDFro:

; 438  : 				bestDistance	= distance;

	movss	xmm0, DWORD PTR _distance$[ebp]
	movss	DWORD PTR _bestDistance$[ebp], xmm0

; 439  : 				bestTacan		= p_current->vuID;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	DWORD PTR _bestTacan$[ebp], ecx
	mov	DWORD PTR _bestTacan$[ebp+4], edx

; 440  : 				result			= TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN2@GetVUIDFro:

; 441  : 			}
; 442  : 		}
; 443  : 
; 444  : 		p_current	= p_current->p_next;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p_current$[ebp], ecx

; 445  : 	}

	jmp	$LN5@GetVUIDFro
$LN4@GetVUIDFro:

; 446  : 
; 447  : 	*id	= bestTacan;

	mov	edx, DWORD PTR _id$[ebp]
	mov	eax, DWORD PTR _bestTacan$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _bestTacan$[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 448  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 449  : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?GetVUIDFromLocation@TacanList@@QAEHMMW4Domain@1@PAVVU_ID@@PAH2PAM@Z ENDP ; TacanList::GetVUIDFromLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_tinfo$1 = -16						; size = 4
_result$ = -12						; size = 4
_this$ = -8						; size = 4
_p_current$ = -4					; size = 4
_channel$ = 8						; size = 4
_set$ = 12						; size = 4
_domain$ = 16						; size = 4
_vuid$ = 20						; size = 4
_rangep$ = 24						; size = 4
_ttype$ = 28						; size = 4
_ilsfreq$ = 32						; size = 4
?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z PROC ; TacanList::GetVUIDFromChannel
; _this$ = ecx

; 347  : 				   VU_ID*vuid, int *rangep, int *ttype, float *ilsfreq) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	
; 349  : 	BOOL					result		= FALSE;

	mov	DWORD PTR _result$[ebp], 0

; 350  : 	LinkedTacanVUStr*	p_current;
; 351  : 	*rangep = 0;

	mov	eax, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [eax], 0

; 352  : 	*ttype = 0;

	mov	ecx, DWORD PTR _ttype$[ebp]
	mov	DWORD PTR [ecx], 0

; 353  : 	*ilsfreq = 0;

	mov	edx, DWORD PTR _ilsfreq$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0

; 354  : 
; 355  : 	if(set == X && domain == AG) { 

	cmp	DWORD PTR _set$[ebp], 0
	jne	$LN18@GetVUIDFro
	cmp	DWORD PTR _domain$[ebp], 1
	jne	$LN18@GetVUIDFro

; 356  : 		p_current	= mpTList;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _p_current$[ebp], ecx
$LN17@GetVUIDFro:

; 357  : 		while(p_current && (p_current->channel != channel || p_current->set != set || p_current->domain != domain)) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN16@GetVUIDFro
	mov	edx, DWORD PTR _p_current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _channel$[ebp]
	jne	SHORT $LN15@GetVUIDFro
	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _set$[ebp]
	jne	SHORT $LN15@GetVUIDFro
	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _domain$[ebp]
	je	SHORT $LN16@GetVUIDFro
$LN15@GetVUIDFro:

; 358  : 			p_current	= p_current->p_next;

	mov	edx, DWORD PTR _p_current$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _p_current$[ebp], eax

; 359  : 		}

	jmp	SHORT $LN17@GetVUIDFro
$LN16@GetVUIDFro:

; 360  : 
; 361  : 		if(p_current) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN14@GetVUIDFro

; 362  : 		    *vuid		= p_current->vuID;

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _vuid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 363  : 		    TacanCampStr *tinfo; /// XXXXX Bleah
; 364  : 		    if (GetCampTacanFromVUID(&tinfo, p_current->camp_id)) {

	mov	edx, DWORD PTR _p_current$[ebp]
	movzx	eax, WORD PTR [edx+28]
	push	eax
	lea	ecx, DWORD PTR _tinfo$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCampTacanFromVUID@TacanList@@AAEHPAPAUTacanCampStr@1@F@Z ; TacanList::GetCampTacanFromVUID
	test	eax, eax
	je	SHORT $LN13@GetVUIDFro

; 365  : 			*rangep = tinfo->range;

	mov	edx, DWORD PTR _rangep$[ebp]
	mov	eax, DWORD PTR _tinfo$1[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx], ecx

; 366  : 			*ttype = tinfo->tactype;

	mov	edx, DWORD PTR _ttype$[ebp]
	mov	eax, DWORD PTR _tinfo$1[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR [edx], ecx

; 367  : 			*ilsfreq = tinfo->ilsfreq;

	mov	edx, DWORD PTR _ilsfreq$[ebp]
	mov	eax, DWORD PTR _tinfo$1[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx], ecx
$LN13@GetVUIDFro:

; 368  : 		    }
; 369  : 		    result	= TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN14@GetVUIDFro:

; 370  : 		}
; 371  : 	}

	jmp	$LN1@GetVUIDFro
$LN18@GetVUIDFro:

; 372  : 	else if(set == Y && domain == AA) {	// Note this only works for the host machine

	cmp	DWORD PTR _set$[ebp], 1
	jne	SHORT $LN11@GetVUIDFro
	cmp	DWORD PTR _domain$[ebp], 0
	jne	SHORT $LN11@GetVUIDFro

; 373  : 
; 374  : 		p_current	= mpAssigned;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _p_current$[ebp], eax
$LN10@GetVUIDFro:

; 375  : 
; 376  : 		while(p_current && (p_current->channel != channel || p_current->set != set || p_current->domain != domain)) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN9@GetVUIDFro
	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR _channel$[ebp]
	jne	SHORT $LN8@GetVUIDFro
	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _set$[ebp]
	jne	SHORT $LN8@GetVUIDFro
	mov	edx, DWORD PTR _p_current$[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _domain$[ebp]
	je	SHORT $LN9@GetVUIDFro
$LN8@GetVUIDFro:

; 377  : 			p_current	= p_current->p_next;

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p_current$[ebp], edx

; 378  : 		}

	jmp	SHORT $LN10@GetVUIDFro
$LN9@GetVUIDFro:

; 379  : 
; 380  : 		if(p_current) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN7@GetVUIDFro

; 381  : 			*vuid		= p_current->vuID;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _vuid$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 382  : 			*rangep = 150;

	mov	ecx, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [ecx], 150			; 00000096H

; 383  : 			*ttype = 1;

	mov	edx, DWORD PTR _ttype$[ebp]
	mov	DWORD PTR [edx], 1

; 384  : 			result	= TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN7@GetVUIDFro:

; 385  : 		}
; 386  : 	}

	jmp	SHORT $LN1@GetVUIDFro
$LN11@GetVUIDFro:

; 387  : 	else if (set == Y && domain == AG) { // M.N. for Carrier Tacans

	cmp	DWORD PTR _set$[ebp], 1
	jne	SHORT $LN1@GetVUIDFro
	cmp	DWORD PTR _domain$[ebp], 1
	jne	SHORT $LN1@GetVUIDFro

; 388  : 
; 389  : 		p_current	= mpAssigned;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p_current$[ebp], ecx
$LN4@GetVUIDFro:

; 390  : 
; 391  : 		while(p_current && (p_current->channel != channel || p_current->set != set || p_current->domain != domain)) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN3@GetVUIDFro
	mov	edx, DWORD PTR _p_current$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _channel$[ebp]
	jne	SHORT $LN2@GetVUIDFro
	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _set$[ebp]
	jne	SHORT $LN2@GetVUIDFro
	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _domain$[ebp]
	je	SHORT $LN3@GetVUIDFro
$LN2@GetVUIDFro:

; 392  : 			p_current	= p_current->p_next;

	mov	edx, DWORD PTR _p_current$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _p_current$[ebp], eax

; 393  : 		}

	jmp	SHORT $LN4@GetVUIDFro
$LN3@GetVUIDFro:

; 394  : 
; 395  : 		if(p_current) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN1@GetVUIDFro

; 396  : 			*vuid		= p_current->vuID;

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _vuid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 397  : 			*rangep = 50;

	mov	edx, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [edx], 50			; 00000032H

; 398  : 			*ttype = 1;

	mov	eax, DWORD PTR _ttype$[ebp]
	mov	DWORD PTR [eax], 1

; 399  : 			result	= TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN1@GetVUIDFro:

; 400  : 		}
; 401  : 	}
; 402  : 
; 403  : 
; 404  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 405  : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z ENDP ; TacanList::GetVUIDFromChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_p_previous$ = -16					; size = 4
$T1 = -12						; size = 4
_this$ = -8						; size = 4
_p_tacanVUStr$ = -4					; size = 4
_id$ = 8						; size = 8
_type$ = 16						; size = 4
?RemoveTacan@TacanList@@QAEXVVU_ID@@H@Z PROC		; TacanList::RemoveTacan
; _this$ = ecx

; 265  : void TacanList::RemoveTacan(VU_ID id, int type) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 266  : 
; 267  : 	LinkedTacanVUStr* p_tacanVUStr;
; 268  : 	LinkedTacanVUStr* p_previous;
; 269  : 
; 270  : 	if(type == NavigationSystem::AIRBASE)				// If removing an airbase

	cmp	DWORD PTR _type$[ebp], 0
	jne	$LN10@RemoveTaca

; 271  : 	{
; 272  : 		if(GetPointerFromVUID(mpTList, id, &p_previous, &p_tacanVUStr)) {		// Find location in list

	lea	eax, DWORD PTR _p_tacanVUStr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p_previous$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z ; TacanList::GetPointerFromVUID
	test	eax, eax
	je	SHORT $LN9@RemoveTaca

; 273  : 
; 274  : 			if(p_tacanVUStr->p_previous) {								// Break the chain and relink

	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN8@RemoveTaca

; 275  : 				p_tacanVUStr->p_previous->p_next = p_tacanVUStr->p_next;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 276  : 				if(p_tacanVUStr->p_next) {

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN7@RemoveTaca

; 277  : 					p_tacanVUStr->p_next->p_previous = p_tacanVUStr->p_previous;

	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
$LN7@RemoveTaca:

; 278  : 				}
; 279  : 			}
; 280  : 			else {

	jmp	SHORT $LN6@RemoveTaca
$LN8@RemoveTaca:

; 281  : 				mpTList = p_tacanVUStr->p_next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+20], eax

; 282  : 				if(p_tacanVUStr->p_next) {

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN6@RemoveTaca

; 283  : 					p_tacanVUStr->p_next->p_previous = NULL;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+4], 0
$LN6@RemoveTaca:

; 284  : 				}
; 285  : 			}
; 286  : 
; 287  : 			delete p_tacanVUStr;												// Destroy link

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@RemoveTaca:

; 288  : 		}
; 289  : 	}

	jmp	SHORT $LN11@RemoveTaca
$LN10@RemoveTaca:

; 290  : 	else if(type == NavigationSystem::TANKER)// If removing a tanker

	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN3@RemoveTaca

; 291  : 	{
; 292  : 		RetireChannel(id);

	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RetireChannel@TacanList@@AAEXVVU_ID@@@Z ; TacanList::RetireChannel
	jmp	SHORT $LN11@RemoveTaca
$LN3@RemoveTaca:

; 293  : 	}
; 294  : 	else if(type == NavigationSystem::CARRIER)	// If removing a carrier

	cmp	DWORD PTR _type$[ebp], 1
	jne	SHORT $LN11@RemoveTaca

; 295  : 	{
; 296  : 		RetireChannel(id);

	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RetireChannel@TacanList@@AAEXVVU_ID@@@Z ; TacanList::RetireChannel
$LN11@RemoveTaca:

; 297  : 	}
; 298  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RemoveTacan@TacanList@@QAEXVVU_ID@@H@Z ENDP		; TacanList::RemoveTacan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
$T1 = -68						; size = 8
$T2 = -60						; size = 8
$T3 = -52						; size = 8
$T4 = -44						; size = 8
$T5 = -36						; size = 8
_set$ = -28						; size = 4
_domain$ = -24						; size = 4
_p_tacanVUStr$ = -20					; size = 4
_channel$ = -16						; size = 4
_p_previous$ = -12					; size = 4
_p_next$ = -8						; size = 4
_this$ = -4						; size = 4
_p_campEntity$ = 8					; size = 4
?AddTacan@TacanList@@QAEXPAVCampBaseClass@@@Z PROC	; TacanList::AddTacan
; _this$ = ecx

; 211  : void TacanList::AddTacan(CampBaseClass *p_campEntity) {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 
; 213  : 	int						channel=0;

	mov	DWORD PTR _channel$[ebp], 0

; 214  : 	StationSet				set;
; 215  : 	Domain					domain;
; 216  : 	LinkedTacanVUStr*		p_tacanVUStr=NULL;

	mov	DWORD PTR _p_tacanVUStr$[ebp], 0

; 217  : 	LinkedTacanVUStr**		p_next=NULL;

	mov	DWORD PTR _p_next$[ebp], 0

; 218  : 	LinkedTacanVUStr*		p_previous=NULL;

	mov	DWORD PTR _p_previous$[ebp], 0

; 219  : 	
; 220  : 	if(p_campEntity->IsObjective() && 
; 221  : 		p_campEntity->GetType() == TYPE_AIRBASE)					// If inserting an airbase

	mov	eax, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	$LN9@AddTacan
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?GetType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetType
	movzx	ecx, al
	cmp	ecx, 1
	jne	$LN9@AddTacan

; 222  : 	{
; 223  : 		domain	= AG;

	mov	DWORD PTR _domain$[ebp], 1

; 224  : 		if(GetChannelFromCampID(&channel, &set, p_campEntity->GetCampId())) {// Get channel and band from mpCampList

	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?GetCampId@CampBaseClass@@QBEFXZ	; CampBaseClass::GetCampId
	movzx	edx, ax
	push	edx
	lea	eax, DWORD PTR _set$[ebp]
	push	eax
	lea	ecx, DWORD PTR _channel$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetChannelFromCampID@TacanList@@AAEHPAHPAW4StationSet@1@F@Z ; TacanList::GetChannelFromCampID
	test	eax, eax
	je	$LN8@AddTacan

; 225  : 			if(mpTList == NULL) {											// If the mpTList (tacan) list is empty ...

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], 0
	jne	SHORT $LN7@AddTacan

; 226  : 				p_next		= &mpTList;										// The next links are also empty

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _p_next$[ebp], eax

; 227  : 				p_previous	= NULL;

	mov	DWORD PTR _p_previous$[ebp], 0

; 228  : 				InsertIntoTacanList(&p_previous, p_next, p_campEntity->Id(), p_campEntity->GetCampID(), channel, set, domain);

	mov	ecx, DWORD PTR _domain$[ebp]
	push	ecx
	mov	edx, DWORD PTR _set$[ebp]
	push	edx
	mov	eax, DWORD PTR _channel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movzx	ecx, ax
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _p_next$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p_previous$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z ; TacanList::InsertIntoTacanList
	jmp	SHORT $LN8@AddTacan
$LN7@AddTacan:

; 229  : 			}
; 230  : 			else if(!GetPointerFromVUID(mpTList, p_campEntity->Id(), &p_previous, &p_tacanVUStr)) {	

	lea	edx, DWORD PTR _p_tacanVUStr$[ebp]
	push	edx
	lea	eax, DWORD PTR _p_previous$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z ; TacanList::GetPointerFromVUID
	test	eax, eax
	jne	SHORT $LN8@AddTacan

; 231  : 																					// Check the sorted mpTList (tacan) list for duplicate entries stop ...
; 232  : 																					// searching when we find a VU_ID greater than the one we are searching for.
; 233  : 																					// If the entity isn't already in the list then do the following.
; 234  : 				p_next		= &p_tacanVUStr;								// The next link will be where the search ended.

	lea	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR _p_next$[ebp], eax

; 235  : 				InsertIntoTacanList(&p_previous, p_next, p_campEntity->Id(), p_campEntity->GetCampID(), channel, set, domain);

	mov	ecx, DWORD PTR _domain$[ebp]
	push	ecx
	mov	edx, DWORD PTR _set$[ebp]
	push	edx
	mov	eax, DWORD PTR _channel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movzx	ecx, ax
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _p_next$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p_previous$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z ; TacanList::InsertIntoTacanList
$LN8@AddTacan:

; 236  : 			}
; 237  : 		}
; 238  : 	}
; 239  : 	else if(p_campEntity->EntityType()->classInfo_[VU_CLASS] == CLASS_UNIT && 

	jmp	$LN10@AddTacan
$LN9@AddTacan:

; 240  : 		p_campEntity->EntityType()->classInfo_[VU_TYPE] == TYPE_FLIGHT && 
; 241  : 		((Unit) p_campEntity)->GetUnitMission() == AMIS_TANKER)// If inserting a tanker

	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 0
	movzx	eax, BYTE PTR [eax+edx+8]
	cmp	eax, 6
	jne	SHORT $LN3@AddTacan
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN3@AddTacan
	mov	eax, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 28					; 0000001cH
	jne	SHORT $LN3@AddTacan

; 242  : 	{
; 243  : 		((FlightClass*)p_campEntity)->tacan_channel	= (uchar) AssignChannel(p_campEntity->Id(), AA, p_campEntity->GetCampID());		// assign a unique channel

	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movzx	ecx, ax
	push	ecx
	push	0
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z ; TacanList::AssignChannel
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	BYTE PTR [ecx+436], al

; 244  : 		((FlightClass*)p_campEntity)->tacan_band		= 'Y';

	mov	edx, DWORD PTR _p_campEntity$[ebp]
	mov	BYTE PTR [edx+437], 89			; 00000059H

; 245  : 	}
; 246  : 	else if(p_campEntity->EntityType()->classInfo_[VU_CLASS] == CLASS_UNIT && 

	jmp	$LN10@AddTacan
$LN3@AddTacan:

; 247  : 		p_campEntity->EntityType()->classInfo_[VU_TYPE] == TYPE_TASKFORCE &&
; 248  : 		p_campEntity->GetSType() == STYPE_UNIT_CARRIER)	// If inserting a carrier

	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	jne	SHORT $LN10@AddTacan
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN10@AddTacan
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?GetSType@CampBaseClass@@QBEEXZ		; CampBaseClass::GetSType
	movzx	eax, al
	cmp	eax, 3
	jne	SHORT $LN10@AddTacan

; 249  : 	{
; 250  : 		((TaskForceClass*)p_campEntity)->tacan_channel	= (uchar) AssignChannel(p_campEntity->Id(), AG, p_campEntity->GetCampID());		// assign a unique channel

	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movzx	ecx, ax
	push	ecx
	push	1
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z ; TacanList::AssignChannel
	mov	ecx, DWORD PTR _p_campEntity$[ebp]
	mov	BYTE PTR [ecx+309], al

; 251  : 		((TaskForceClass*)p_campEntity)->tacan_band		= 'Y';

	mov	edx, DWORD PTR _p_campEntity$[ebp]
	mov	BYTE PTR [edx+310], 89			; 00000059H
$LN10@AddTacan:

; 252  : 	}
; 253  : 
; 254  : 
; 255  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddTacan@TacanList@@QAEXPAVCampBaseClass@@@Z ENDP	; TacanList::AddTacan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_found$ = -12						; size = 4
_this$ = -8						; size = 4
_pTacanStr$ = -4					; size = 4
_vuID$ = 8						; size = 8
?RetireChannel@TacanList@@AAEXVVU_ID@@@Z PROC		; TacanList::RetireChannel
; _this$ = ecx

; 951  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 952  : 	BOOL					found			= FALSE;

	mov	DWORD PTR _found$[ebp], 0

; 953  : 	LinkedTacanVUStr* pTacanStr	= NULL;

	mov	DWORD PTR _pTacanStr$[ebp], 0

; 954  : 
; 955  : 	pTacanStr = mpAssigned;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pTacanStr$[ebp], ecx
$LN8@RetireChan:

; 956  : 
; 957  : 	while(!found && pTacanStr) {

	cmp	DWORD PTR _found$[ebp], 0
	jne	$LN9@RetireChan
	cmp	DWORD PTR _pTacanStr$[ebp], 0
	je	$LN9@RetireChan

; 958  : 
; 959  : 		if(pTacanStr->vuID == vuID) {

	lea	edx, DWORD PTR _vuID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	add	ecx, 20					; 00000014H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@RetireChan

; 960  : 			found = TRUE;

	mov	DWORD PTR _found$[ebp], 1

; 961  : 
; 962  : 			if(pTacanStr->p_previous) {										// If I'm not the first in the list

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN5@RetireChan

; 963  : 				pTacanStr->p_previous->p_next = pTacanStr->p_next;		// Break the link

	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 964  : 			}
; 965  : 			else {

	jmp	SHORT $LN4@RetireChan
$LN5@RetireChan:

; 966  : 				mpAssigned		= pTacanStr->p_next;							// Otherwise make my next link the first

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
$LN4@RetireChan:

; 967  : 			}
; 968  : 
; 969  : 			if(pTacanStr->p_next) {

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@RetireChan

; 970  : 				pTacanStr->p_next->p_previous = pTacanStr->p_previous;

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
$LN3@RetireChan:

; 971  : 			}
; 972  : 
; 973  : 			if(mpRetired) {														// If there is already a head on the retired list

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN2@RetireChan

; 974  : 				mpRetired->p_previous = pTacanStr;							// give the head my pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN2@RetireChan:

; 975  : 			}
; 976  : 
; 977  : 			pTacanStr->p_next = mpRetired;									// Put the head pointer into my next

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx

; 978  : 			mpRetired			= pTacanStr;									// Make myself the head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 979  : 		}
; 980  : 		else {

	jmp	SHORT $LN1@RetireChan
$LN6@RetireChan:

; 981  : 			pTacanStr = pTacanStr->p_next;									// Otherwise goto the next link

	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pTacanStr$[ebp], eax
$LN1@RetireChan:

; 982  : 		}
; 983  : 	}

	jmp	$LN8@RetireChan
$LN9@RetireChan:

; 984  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RetireChannel@TacanList@@AAEXVVU_ID@@@Z ENDP		; TacanList::RetireChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
tv75 = -32						; size = 4
$T3 = -28						; size = 4
_channel$ = -24						; size = 4
_this$ = -20						; size = 4
_pTacanStr$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_vuID$ = 8						; size = 8
_domain$ = 16						; size = 4
_camp_id$ = 20						; size = 2
?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z PROC ; TacanList::AssignChannel
; _this$ = ecx

; 884  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 885  : 	LinkedTacanVUStr* pTacanStr;
; 886  : 	int					channel = -1;

	mov	DWORD PTR _channel$[ebp], -1

; 887  : 
; 888  : 	if(mpRetired == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	$LN5@AssignChan

; 889  : 
; 890  : 		ShiAssert(mLastUnused >= g_nMinTacanChannel);
; 891  : 
; 892  : 		if(mLastUnused >= g_nMinTacanChannel) {	// Note: we have a total of 56 channels to work with.

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR ?g_nMinTacanChannel@@3HA	; g_nMinTacanChannel
	jl	$LN4@AssignChan

; 893  : 																		// If we need more than 56 at a time, then the campaign has gone wild.
; 894  : 																		// Ignore anything over 56 requests.
; 895  : 												// MN this doesn't seem to be an issue anymore...(why 56 at all ??)
; 896  : 			
; 897  : 			#ifdef USE_SH_POOLS
; 898  : 			pTacanStr = ( LinkedTacanVUStr * )MemAllocPtr( gTacanMemPool, sizeof( LinkedTacanVUStr ), 0 );	// Create a new link
; 899  : 			#else
; 900  : 			pTacanStr = new LinkedTacanVUStr;

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN8@AssignChan
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LinkedTacanVUStr@TacanList@@QAE@XZ
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN9@AssignChan
$LN8@AssignChan:
	mov	DWORD PTR tv75[ebp], 0
$LN9@AssignChan:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _pTacanStr$[ebp], ecx

; 901  : 			#endif
; 902  : 			
; 903  : 			if(mpAssigned) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN3@AssignChan

; 904  : 				mpAssigned->p_previous = pTacanStr;			// Were going to add to the head of the list, so copy the new link into the current head

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN3@AssignChan:

; 905  : 			}
; 906  : 
; 907  : 			pTacanStr->p_next			= mpAssigned;			// The next link is the current head ... since we are adding to the head

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 908  : 			pTacanStr->p_previous	= NULL;

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [eax+4], 0

; 909  : 			pTacanStr->channel		= mLastUnused--;		// Be sure to decrement the last unused

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx

; 910  : 			pTacanStr->set				= Y;

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [ecx+12], 1

; 911  : 			pTacanStr->domain			= domain;

	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	eax, DWORD PTR _domain$[ebp]
	mov	DWORD PTR [edx+16], eax

; 912  : 			pTacanStr->vuID			= vuID;

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [ecx+20], edx
	mov	eax, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [ecx+24], eax

; 913  : 			pTacanStr->camp_id		= camp_id;

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	dx, WORD PTR _camp_id$[ebp]
	mov	WORD PTR [ecx+28], dx

; 914  : 
; 915  : 			mpAssigned					= pTacanStr;			// Place it into the assigned list

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 916  : 			channel						= mpAssigned->channel;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _channel$[ebp], ecx
$LN4@AssignChan:

; 917  : 		}
; 918  : 	}
; 919  : 	else {

	jmp	$LN2@AssignChan
$LN5@AssignChan:

; 920  : 		pTacanStr = mpRetired;									// Pull off the head of the retired list

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _pTacanStr$[ebp], eax

; 921  : 		mpRetired = pTacanStr->p_next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax

; 922  : 
; 923  : 		if(mpAssigned) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN1@AssignChan

; 924  : 			mpAssigned->p_previous = pTacanStr;				// Were going to add to the head of the list, so copy the new link into the current head

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN1@AssignChan:

; 925  : 		}
; 926  : 
; 927  : 		pTacanStr->p_next				= mpAssigned;			// The next link is the current head ... since we are adding to the head

	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 928  : 		pTacanStr->p_previous		= NULL;

	mov	edx, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [edx+4], 0

; 929  : 		pTacanStr->set					= Y;

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [eax+12], 1

; 930  : 		pTacanStr->domain				= domain;

	mov	ecx, DWORD PTR _pTacanStr$[ebp]
	mov	edx, DWORD PTR _domain$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 931  : 		pTacanStr->vuID				= vuID;

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+24], edx

; 932  : 		pTacanStr->camp_id			= camp_id;

	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	cx, WORD PTR _camp_id$[ebp]
	mov	WORD PTR [eax+28], cx

; 933  : 			
; 934  : 		mpAssigned						= pTacanStr;			// Place it into the assigned list

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pTacanStr$[ebp]
	mov	DWORD PTR [edx+8], eax

; 935  : 		channel							= mpAssigned->channel;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _channel$[ebp], eax
$LN2@AssignChan:

; 936  : 	}
; 937  : 
; 938  : 	return channel;

	mov	eax, DWORD PTR _channel$[ebp]

; 939  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AssignChannel@TacanList@@AAEHVVU_ID@@W4Domain@1@F@Z ENDP ; TacanList::AssignChannel
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_this$ = -12						; size = 4
_pNext$ = -8						; size = 4
_pCurrent$ = -4						; size = 4
?CleanupDynamicChans@TacanList@@AAEXXZ PROC		; TacanList::CleanupDynamicChans
; _this$ = ecx

; 851  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 852  : 	LinkedTacanVUStr* pCurrent = NULL;

	mov	DWORD PTR _pCurrent$[ebp], 0

; 853  : 	LinkedTacanVUStr* pNext		= NULL;

	mov	DWORD PTR _pNext$[ebp], 0

; 854  : 
; 855  : 	pCurrent = mpAssigned;					// Walk the assigned list and free everything

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pCurrent$[ebp], ecx
$LN4@CleanupDyn:

; 856  : 	while(pCurrent) {

	cmp	DWORD PTR _pCurrent$[ebp], 0
	je	SHORT $LN3@CleanupDyn

; 857  : 		pNext = pCurrent->p_next;

	mov	edx, DWORD PTR _pCurrent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _pNext$[ebp], eax

; 858  : 		delete pCurrent;

	mov	ecx, DWORD PTR _pCurrent$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 859  : 		pCurrent = pNext;

	mov	eax, DWORD PTR _pNext$[ebp]
	mov	DWORD PTR _pCurrent$[ebp], eax

; 860  : 	}

	jmp	SHORT $LN4@CleanupDyn
$LN3@CleanupDyn:

; 861  : 	
; 862  : 	pCurrent = mpRetired;					// Walk the retired list and free everything

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _pCurrent$[ebp], edx
$LN2@CleanupDyn:

; 863  : 	while(pCurrent) {

	cmp	DWORD PTR _pCurrent$[ebp], 0
	je	SHORT $LN5@CleanupDyn

; 864  : 		pNext = pCurrent->p_next;

	mov	eax, DWORD PTR _pCurrent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pNext$[ebp], ecx

; 865  : 		delete pCurrent;

	mov	edx, DWORD PTR _pCurrent$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 866  : 		pCurrent = pNext;

	mov	ecx, DWORD PTR _pNext$[ebp]
	mov	DWORD PTR _pCurrent$[ebp], ecx

; 867  : 	}

	jmp	SHORT $LN2@CleanupDyn
$LN5@CleanupDyn:

; 868  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupDynamicChans@TacanList@@AAEXXZ ENDP		; TacanList::CleanupDynamicChans
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitDynamicChans@TacanList@@AAEXXZ PROC		; TacanList::InitDynamicChans
; _this$ = ecx

; 835  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 836  : 	mpAssigned	= NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 837  : 	mpRetired	= NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 838  : 	mLastUnused	= NUM_CHANNELS;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 126			; 0000007eH

; 839  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitDynamicChans@TacanList@@AAEXXZ ENDP		; TacanList::InitDynamicChans
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_this$ = -28						; size = 4
tv71 = -24						; size = 4
$T3 = -20						; size = 4
_p_tacanVUStr$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p_previous$ = 8					; size = 4
_p_next$ = 12						; size = 4
_vuId$ = 16						; size = 8
_camp_id$ = 24						; size = 2
_channel$ = 28						; size = 4
_set$ = 32						; size = 4
_domain$ = 36						; size = 4
?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z PROC ; TacanList::InsertIntoTacanList
; _this$ = ecx

; 529  : 				    Domain domain) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 	
; 531  : 	LinkedTacanVUStr* p_tacanVUStr;
; 532  : 	
; 533  : 	#ifdef USE_SH_POOLS
; 534  : 	p_tacanVUStr	= ( LinkedTacanVUStr * )MemAllocPtr( gTacanMemPool, sizeof( LinkedTacanVUStr ), 0 );	// Create a new link
; 535  : 	#else
; 536  : 	p_tacanVUStr						= new LinkedTacanVUStr;	// Create a new link

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN9@InsertInto
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0LinkedTacanVUStr@TacanList@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN10@InsertInto
$LN9@InsertInto:
	mov	DWORD PTR tv71[ebp], 0
$LN10@InsertInto:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _p_tacanVUStr$[ebp], ecx

; 537  : 	#endif
; 538  : 	p_tacanVUStr->channel			= channel;					// Stuff data into link

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [edx+8], eax

; 539  : 	p_tacanVUStr->set					= set;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	edx, DWORD PTR _set$[ebp]
	mov	DWORD PTR [ecx+12], edx

; 540  : 	p_tacanVUStr->domain				= domain;

	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	ecx, DWORD PTR _domain$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 541  : 	p_tacanVUStr->vuID				= vuId;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR _vuId$[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR _vuId$[ebp+4]
	mov	DWORD PTR [edx+24], ecx

; 542  : 	p_tacanVUStr->camp_id			= camp_id;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	ax, WORD PTR _camp_id$[ebp]
	mov	WORD PTR [edx+28], ax

; 543  : 	p_tacanVUStr->p_previous		= NULL;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 544  : 	p_tacanVUStr->p_next				= NULL;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [edx], 0

; 545  : 	
; 546  : 	if(*p_previous && *p_next) {										// If there are links that follow this link								

	mov	eax, DWORD PTR _p_previous$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@InsertInto
	mov	ecx, DWORD PTR _p_next$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN6@InsertInto

; 547  : 		p_tacanVUStr->p_previous	= *p_previous;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR _p_previous$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], ecx

; 548  : 		p_tacanVUStr->p_next			= *p_next;					// The link that follows is the next link					

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	eax, DWORD PTR _p_next$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 549  : 		(*p_previous)->p_next		= p_tacanVUStr;

	mov	edx, DWORD PTR _p_previous$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [eax], ecx

; 550  : 		(*p_next)->p_previous		= p_tacanVUStr;			// New link is now the previous

	mov	edx, DWORD PTR _p_next$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN7@InsertInto
$LN6@InsertInto:

; 551  : 	}
; 552  : 	else if(*p_next) {

	mov	edx, DWORD PTR _p_next$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN4@InsertInto

; 553  : 		p_tacanVUStr->p_previous	= NULL;

	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [eax+4], 0

; 554  : 		p_tacanVUStr->p_next			= *p_next;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	edx, DWORD PTR _p_next$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 555  : 		(*p_next)->p_previous		= p_tacanVUStr;

	mov	ecx, DWORD PTR _p_next$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [edx+4], eax

; 556  : 		mpTList							= p_tacanVUStr;	// Overwrite the head pointer

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [ecx+20], edx
	jmp	SHORT $LN7@InsertInto
$LN4@InsertInto:

; 557  : 	}
; 558  : 	else if(*p_previous) {

	mov	eax, DWORD PTR _p_previous$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@InsertInto

; 559  : 		p_tacanVUStr->p_previous	= *p_previous;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	edx, DWORD PTR _p_previous$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax

; 560  : 		p_tacanVUStr->p_next			= NULL;

	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [ecx], 0

; 561  : 		(*p_previous)->p_next		= p_tacanVUStr;

	mov	edx, DWORD PTR _p_previous$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [eax], ecx

; 562  : 	}
; 563  : 	else {

	jmp	SHORT $LN7@InsertInto
$LN2@InsertInto:

; 564  : 		p_tacanVUStr->p_previous	= NULL;

	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [edx+4], 0

; 565  : 		p_tacanVUStr->p_next			= NULL;

	mov	eax, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [eax], 0

; 566  : 		mpTList							= p_tacanVUStr;	// Overwrite the head pointer

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p_tacanVUStr$[ebp]
	mov	DWORD PTR [ecx+20], edx
$LN7@InsertInto:

; 567  : 	}
; 568  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InsertIntoTacanList@TacanList@@AAEXPAPAULinkedTacanVUStr@1@0VVU_ID@@FHW4StationSet@1@W4Domain@1@@Z ENDP ; TacanList::InsertIntoTacanList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -44						; size = 4
_returnStatus$ = -40					; size = 4
_p_occurrence$ = -36					; size = 4
_key$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_tacaninfo$ = 8						; size = 4
_campid$ = 12						; size = 2
?GetCampTacanFromVUID@TacanList@@AAEHPAPAUTacanCampStr@1@F@Z PROC ; TacanList::GetCampTacanFromVUID
; _this$ = ecx

; 500  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 501  : 	TacanCampStr		key;
; 502  : 	TacanCampStr**		p_occurrence;
; 503  : 	BOOL					returnStatus	= FALSE;

	mov	DWORD PTR _returnStatus$[ebp], 0

; 504  : 
; 505  : 	key.campaignID		= campid;

	mov	ax, WORD PTR _campid$[ebp]
	mov	WORD PTR _key$[ebp+8], ax

; 506  : 
; 507  : 	p_occurrence		= (TacanCampStr**) bsearch(&key, mpCampList, mCampListTally,
; 508  : 								sizeof(TacanCampStr*),
; 509  : 								(int (*)(const void*, const void*))SearchForChannel);			//	Do the binary search

	push	OFFSET ?SearchForChannel@@YAHPAXPAPAX@Z	; SearchForChannel
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _key$[ebp]
	push	edx
	call	_bsearch
	add	esp, 20					; 00000014H
	mov	DWORD PTR _p_occurrence$[ebp], eax

; 510  : 	if(p_occurrence) {

	cmp	DWORD PTR _p_occurrence$[ebp], 0
	je	SHORT $LN1@GetCampTac

; 511  : 	    *tacaninfo = *p_occurrence;

	mov	eax, DWORD PTR _tacaninfo$[ebp]
	mov	ecx, DWORD PTR _p_occurrence$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 512  : 	    returnStatus	= TRUE;

	mov	DWORD PTR _returnStatus$[ebp], 1
$LN1@GetCampTac:

; 513  : 	}
; 514  : 
; 515  : 	return returnStatus;

	mov	eax, DWORD PTR _returnStatus$[ebp]

; 516  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCampTacanFromVUID@TacanList@@AAEHPAPAUTacanCampStr@1@F@Z ENDP ; TacanList::GetCampTacanFromVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_result$ = -12						; size = 4
_p_previous$ = -8					; size = 4
_p_current$ = -4					; size = 4
_p_list$ = 8						; size = 4
_id$ = 12						; size = 8
_p_before$ = 20						; size = 4
_p_after$ = 24						; size = 4
?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z PROC ; TacanList::GetPointerFromVUID
; _this$ = ecx

; 465  : BOOL TacanList::GetPointerFromVUID(LinkedTacanVUStr* p_list, VU_ID id, LinkedTacanVUStr** p_before, LinkedTacanVUStr** p_after) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 466  : 
; 467  : 	BOOL					result		= FALSE;

	mov	DWORD PTR _result$[ebp], 0

; 468  : 	LinkedTacanVUStr*	p_current	= p_list;

	mov	eax, DWORD PTR _p_list$[ebp]
	mov	DWORD PTR _p_current$[ebp], eax

; 469  : 	LinkedTacanVUStr* p_previous	= NULL;

	mov	DWORD PTR _p_previous$[ebp], 0
$LN3@GetPointer:

; 470  : 
; 471  : 
; 472  : 	while(p_current && p_current->vuID < id) {

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN2@GetPointer
	lea	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _p_current$[ebp]
	add	ecx, 20					; 00000014H
	call	??MVU_ID@@QBE_NABV0@@Z			; VU_ID::operator<
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetPointer

; 473  : 		p_previous	= p_current;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	DWORD PTR _p_previous$[ebp], eax

; 474  : 		p_current	= p_current->p_next;

	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p_current$[ebp], edx

; 475  : 	}

	jmp	SHORT $LN3@GetPointer
$LN2@GetPointer:

; 476  : 
; 477  : 	*p_after			= p_current;

	mov	eax, DWORD PTR _p_after$[ebp]
	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	DWORD PTR [eax], ecx

; 478  : 	*p_before		= p_previous;

	mov	edx, DWORD PTR _p_before$[ebp]
	mov	eax, DWORD PTR _p_previous$[ebp]
	mov	DWORD PTR [edx], eax

; 479  : 
; 480  : 	if(*p_after && (*p_after)->vuID == id) {

	mov	ecx, DWORD PTR _p_after$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@GetPointer
	lea	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _p_after$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 20					; 00000014H
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetPointer

; 481  : 		result		= TRUE;

	mov	DWORD PTR _result$[ebp], 1
$LN1@GetPointer:

; 482  : 	}
; 483  : 
; 484  : 	return result;

	mov	eax, DWORD PTR _result$[ebp]

; 485  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetPointerFromVUID@TacanList@@AAEHPAULinkedTacanVUStr@1@VVU_ID@@PAPAU21@2@Z ENDP ; TacanList::GetPointerFromVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_returnStatus$ = -44					; size = 4
_this$ = -40						; size = 4
_p_occurrence$ = -36					; size = 4
_key$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_channel$ = 8						; size = 4
_band$ = 12						; size = 4
_airbaseId$ = 16					; size = 2
?GetChannelFromCampID@TacanList@@AAEHPAHPAW4StationSet@1@F@Z PROC ; TacanList::GetChannelFromCampID
; _this$ = ecx

; 772  : BOOL TacanList::GetChannelFromCampID(int* channel, StationSet* band, short airbaseId) {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 
; 774  : 	if(airbaseId < 0) {

	movsx	eax, WORD PTR _airbaseId$[ebp]
	test	eax, eax
	jge	SHORT $LN2@GetChannel

; 775  : 		//F4Assert(FALSE);														// Bad Id
; 776  : 		ShiWarning("bad airbase id\n");
; 777  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN3@GetChannel
$LN2@GetChannel:

; 778  : 	}
; 779  : 	
; 780  : 	TacanCampStr		key;
; 781  : 	TacanCampStr**		p_occurrence;
; 782  : 	BOOL					returnStatus	= FALSE;

	mov	DWORD PTR _returnStatus$[ebp], 0

; 783  : 
; 784  : 	key.campaignID		= airbaseId;

	mov	cx, WORD PTR _airbaseId$[ebp]
	mov	WORD PTR _key$[ebp+8], cx

; 785  : 
; 786  : 	p_occurrence		= (TacanCampStr**) bsearch(&key, mpCampList, mCampListTally,
; 787  : 								sizeof(TacanCampStr*),
; 788  : 								(int (*)(const void*, const void*))SearchForChannel);			//	Do the binary search

	push	OFFSET ?SearchForChannel@@YAHPAXPAPAX@Z	; SearchForChannel
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_bsearch
	add	esp, 20					; 00000014H
	mov	DWORD PTR _p_occurrence$[ebp], eax

; 789  : 	if(p_occurrence) {

	cmp	DWORD PTR _p_occurrence$[ebp], 0
	je	SHORT $LN1@GetChannel

; 790  : 		*channel			= (*p_occurrence)->channel;

	mov	ecx, DWORD PTR _p_occurrence$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _channel$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 791  : 		*band				= (*p_occurrence)->set;

	mov	edx, DWORD PTR _p_occurrence$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _band$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], edx

; 792  : 		returnStatus	= TRUE;

	mov	DWORD PTR _returnStatus$[ebp], 1
$LN1@GetChannel:

; 793  : 	}
; 794  : 
; 795  : 	return returnStatus;

	mov	eax, DWORD PTR _returnStatus$[ebp]
$LN3@GetChannel:

; 796  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetChannelFromCampID@TacanList@@AAEHPAHPAW4StationSet@1@F@Z ENDP ; TacanList::GetChannelFromCampID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_el2$ = -12						; size = 4
_el1$ = -8						; size = 4
_returnStatus$ = -4					; size = 4
_element1$ = 8						; size = 4
_element2$ = 12						; size = 4
?SearchForChannel@@YAHPAXPAPAX@Z PROC			; SearchForChannel

; 1041 : int SearchForChannel(void* element1, void** element2) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1042 :    
; 1043 : 	int	returnStatus;
; 1044 : 	TacanList::TacanCampStr* el1		= (TacanList::TacanCampStr*) element1;

	mov	eax, DWORD PTR _element1$[ebp]
	mov	DWORD PTR _el1$[ebp], eax

; 1045 : 	TacanList::TacanCampStr** el2	= (TacanList::TacanCampStr**) element2;

	mov	ecx, DWORD PTR _element2$[ebp]
	mov	DWORD PTR _el2$[ebp], ecx

; 1046 : 
; 1047 : 	if(el1->campaignID < (*el2)->campaignID) {

	mov	edx, DWORD PTR _el1$[ebp]
	movsx	eax, WORD PTR [edx+8]
	mov	ecx, DWORD PTR _el2$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	ecx, WORD PTR [edx+8]
	cmp	eax, ecx
	jge	SHORT $LN4@SearchForC

; 1048 : 		returnStatus	= -1;

	mov	DWORD PTR _returnStatus$[ebp], -1
	jmp	SHORT $LN3@SearchForC
$LN4@SearchForC:

; 1049 : 	}
; 1050 : 	else if(el1->campaignID == (*el2)->campaignID) {

	mov	edx, DWORD PTR _el1$[ebp]
	movsx	eax, WORD PTR [edx+8]
	mov	ecx, DWORD PTR _el2$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	ecx, WORD PTR [edx+8]
	cmp	eax, ecx
	jne	SHORT $LN2@SearchForC

; 1051 : 		returnStatus	= 0;

	mov	DWORD PTR _returnStatus$[ebp], 0

; 1052 : 	}
; 1053 : 	else {

	jmp	SHORT $LN3@SearchForC
$LN2@SearchForC:

; 1054 : 		returnStatus	= 1;

	mov	DWORD PTR _returnStatus$[ebp], 1
$LN3@SearchForC:

; 1055 : 	}
; 1056 : 
; 1057 : 	return returnStatus;

	mov	eax, DWORD PTR _returnStatus$[ebp]

; 1058 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SearchForChannel@@YAHPAXPAPAX@Z ENDP			; SearchForChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T1 = -20						; size = 4
_p_previous$ = -16					; size = 4
$T2 = -12						; size = 4
_i$ = -8						; size = 4
_p_current$ = -4					; size = 4
_p_list$ = 8						; size = 4
_p_CampIdArray$ = 12					; size = 4
_size$ = 16						; size = 4
?ResolveStationList@TacanList@@AAEXPAPAULinkedCampStationStr@1@PAPAPAUTacanCampStr@1@H@Z PROC ; TacanList::ResolveStationList
; _this$ = ecx

; 586  : void TacanList::ResolveStationList(LinkedCampStationStr** p_list, TacanCampStr*** p_CampIdArray, int size) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 587  : 	
; 588  : 	if(size <= 0) {											// Make sure we have work to do

	cmp	DWORD PTR _size$[ebp], 0
	jg	SHORT $LN4@ResolveSta

; 589  : 		//F4Assert(FALSE);
; 590  : 		ShiWarning("No work to do\n");
; 591  : 		return;

	jmp	$LN5@ResolveSta
$LN4@ResolveSta:

; 592  : 	}
; 593  : 	if(p_list == NULL) {										// Check for a good pointer

	cmp	DWORD PTR _p_list$[ebp], 0
	jne	SHORT $LN3@ResolveSta

; 594  : 		//F4Assert(FALSE);
; 595  : 		ShiWarning("no pointer\n");
; 596  : 		return;

	jmp	$LN5@ResolveSta
$LN3@ResolveSta:

; 597  : 	}
; 598  : 
; 599  : 	int i	= 0;

	mov	DWORD PTR _i$[ebp], 0

; 600  : 	LinkedCampStationStr *p_current;
; 601  : 	LinkedCampStationStr *p_previous;
; 602  : 
; 603  : 	#ifdef USE_SH_POOLS
; 604  : 	*p_CampIdArray = ( TacanCampStr ** )MemAllocPtr( gTacanMemPool, sizeof( TacanCampStr * ) * size, 0 );	// Create a new link
; 605  : 	#else
; 606  : 	*p_CampIdArray							= new TacanCampStr*[size];			// Create the array

	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR _p_CampIdArray$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx

; 607  : 	#endif
; 608  : 
; 609  : 	p_current								= *p_list;

	mov	edx, DWORD PTR _p_list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _p_current$[ebp], eax
$LN2@ResolveSta:

; 610  : 
; 611  : 	while(p_current) {														// While we are not at the end of the linked list

	cmp	DWORD PTR _p_current$[ebp], 0
	je	SHORT $LN1@ResolveSta

; 612  : 		(*p_CampIdArray)[i]				= p_current->p_station;		// Copy contents to the station struct into the array

	mov	ecx, DWORD PTR _p_CampIdArray$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax*4], ecx

; 613  : 
; 614  : 		p_previous							= p_current;					// Save location of the link

	mov	edx, DWORD PTR _p_current$[ebp]
	mov	DWORD PTR _p_previous$[ebp], edx

; 615  : 		p_current							= p_current->p_next;			// Goto the next link

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p_current$[ebp], ecx

; 616  : 		delete p_previous;													// Remove the previous link

	mov	edx, DWORD PTR _p_previous$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 617  : 		i++;																		// Increment element of the array

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 618  : 	}

	jmp	SHORT $LN2@ResolveSta
$LN1@ResolveSta:

; 619  : 
; 620  : #if 0
; 621  : 
; 622  : 	p_occurrence		= (TacanCampStr**) bsearch(&key, mpCampList, mCampListTally,
; 623  : 								sizeof(TacanCampStr*),
; 624  : 								(int (*)(const void*, const void*))SearchForChannel);			//	Do the binary search
; 625  : #endif
; 626  : 
; 627  : 
; 628  : 	qsort(*p_CampIdArray, size, sizeof(TacanCampStr*), (int (*)(const void*, const void*))CompareCampIDs);

	push	OFFSET ?CompareCampIDs@@YAHPAPAX0@Z	; CompareCampIDs
	push	4
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _p_CampIdArray$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_qsort
	add	esp, 16					; 00000010H
$LN5@ResolveSta:

; 629  : 
; 630  : 
; 631  : 	F4Assert(i == size);										// Otherwise memory has been stomped																
; 632  : 																	// or will be stomped when we clean up
; 633  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ResolveStationList@TacanList@@AAEXPAPAULinkedCampStationStr@1@PAPAPAUTacanCampStr@1@H@Z ENDP ; TacanList::ResolveStationList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\tacan.cpp
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_p_linkStaStr$ = -8					; size = 4
_p_staStr$ = -4						; size = 4
_p_list$ = 8						; size = 4
_airbaseId$ = 12					; size = 2
_channel$ = 16						; size = 4
_band$ = 20						; size = 4
_callsign$ = 24						; size = 4
_range$ = 28						; size = 4
_tactype$ = 32						; size = 4
_ilsfreq$ = 36						; size = 4
?StoreStation@TacanList@@AAEHPAPAULinkedCampStationStr@1@FHW4StationSet@1@HHHM@Z PROC ; TacanList::StoreStation
; _this$ = ecx

; 653  : 			     int range, int tactype, float ilsfreq) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 654  : 																									
; 655  : 	if(channel < 1 || channel > 126) {									// Note: the value of channel should be 		

	cmp	DWORD PTR _channel$[ebp], 1
	jl	SHORT $LN3@StoreStati
	cmp	DWORD PTR _channel$[ebp], 126		; 0000007eH
	jle	SHORT $LN4@StoreStati
$LN3@StoreStati:

; 656  : 		//F4Assert(FALSE);														// constrained to 1 - 126
; 657  : 		ShiWarning("invalid channel\n");
; 658  : 		return FALSE;

	xor	eax, eax
	jmp	$LN5@StoreStati
$LN4@StoreStati:

; 659  : 	}
; 660  : 	if(band != X && band != Y) {											// Channels are constrained to

	cmp	DWORD PTR _band$[ebp], 0
	je	SHORT $LN2@StoreStati
	cmp	DWORD PTR _band$[ebp], 1
	je	SHORT $LN2@StoreStati

; 661  : 		//F4Assert(FALSE);														// X or Y band.
; 662  : 		ShiWarning("invalid band\n");
; 663  : 		return FALSE;

	xor	eax, eax
	jmp	$LN5@StoreStati
$LN2@StoreStati:

; 664  : 	}
; 665  : 	if(p_list == NULL) {

	cmp	DWORD PTR _p_list$[ebp], 0
	jne	SHORT $LN1@StoreStati

; 666  : 		//F4Assert(FALSE);														// Bad pointer
; 667  : 		ShiWarning("bad pointer\n");
; 668  : 		return FALSE;

	xor	eax, eax
	jmp	$LN5@StoreStati
$LN1@StoreStati:

; 669  : 	}
; 670  : 
; 671  : 
; 672  : 	TacanCampStr*					p_staStr;
; 673  : 	LinkedCampStationStr*		p_linkStaStr;
; 674  : //	LinkedCampStationStr*		p_previous		= NULL;
; 675  : //	LinkedCampStationStr*		p_current		= NULL;
; 676  : //	BOOL								done				= FALSE;
; 677  : //	BOOL								returnStatus	= FALSE;
; 678  : 
; 679  : 
; 680  : 	#ifdef USE_SH_POOLS
; 681  : 	p_staStr = ( TacanCampStr * )MemAllocPtr( gTacanMemPool, sizeof( TacanCampStr ), 0 );	// Create a new link
; 682  : 	p_linkStaStr = ( LinkedCampStationStr * )MemAllocPtr( gTacanMemPool, sizeof( LinkedCampStationStr ), 0 );	// Create a new link
; 683  : 	#else
; 684  : 	p_staStr								= new TacanCampStr;				// Create a new element

	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _p_staStr$[ebp], eax

; 685  : 	p_linkStaStr						= new	LinkedCampStationStr;	// Create a new link

	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _p_linkStaStr$[ebp], ecx

; 686  : 	#endif
; 687  : 	p_staStr->channel					= channel;							// Fill the element

	mov	edx, DWORD PTR _p_staStr$[ebp]
	mov	eax, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [edx], eax

; 688  : 	p_staStr->set						= band;

	mov	ecx, DWORD PTR _p_staStr$[ebp]
	mov	edx, DWORD PTR _band$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 689  : 	p_staStr->campaignID				= airbaseId;

	mov	eax, DWORD PTR _p_staStr$[ebp]
	mov	cx, WORD PTR _airbaseId$[ebp]
	mov	WORD PTR [eax+8], cx

; 690  : 	p_staStr->callsign				= callsign;

	mov	edx, DWORD PTR _p_staStr$[ebp]
	mov	eax, DWORD PTR _callsign$[ebp]
	mov	DWORD PTR [edx+12], eax

; 691  : 	p_staStr->range = range;

	mov	ecx, DWORD PTR _p_staStr$[ebp]
	mov	edx, DWORD PTR _range$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 692  : 	p_staStr->tactype = tactype;

	mov	eax, DWORD PTR _p_staStr$[ebp]
	mov	ecx, DWORD PTR _tactype$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 693  : 	p_staStr->ilsfreq = ilsfreq;

	mov	edx, DWORD PTR _p_staStr$[ebp]
	movss	xmm0, DWORD PTR _ilsfreq$[ebp]
	movss	DWORD PTR [edx+24], xmm0

; 694  : 	p_linkStaStr->p_station			= p_staStr;							// Fill the link

	mov	eax, DWORD PTR _p_linkStaStr$[ebp]
	mov	ecx, DWORD PTR _p_staStr$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 695  : //	p_current							= *p_list;
; 696  : 
; 697  : 	p_linkStaStr->p_next				= *p_list;

	mov	edx, DWORD PTR _p_linkStaStr$[ebp]
	mov	eax, DWORD PTR _p_list$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 698  : 	*p_list								= p_linkStaStr;

	mov	edx, DWORD PTR _p_list$[ebp]
	mov	eax, DWORD PTR _p_linkStaStr$[ebp]
	mov	DWORD PTR [edx], eax

; 699  : 
; 700  : 	return TRUE;

	mov	eax, 1
$LN5@StoreStati:

; 701  : 
; 702  : 
; 703  : #if 0
; 704  : 	while(done == FALSE) {
; 705  : 
; 706  : 		if(*p_list == NULL) {
; 707  : 			*p_list						= p_linkStaStr;					// No elements in list 
; 708  : 			returnStatus				= TRUE;								// Automatically Insert
; 709  : 			done							= TRUE;								
; 710  : 		}
; 711  : 		else if(p_current->p_next == NULL) {
; 712  : 			if(p_current->p_station->campaignID > p_linkStaStr->p_station->campaignID) {
; 713  : 				p_linkStaStr->p_next	= p_current;
; 714  : 				*p_list					= p_linkStaStr;
; 715  : 				done						= TRUE;
; 716  : 				returnStatus			= TRUE;
; 717  : 			}
; 718  : 			else if(p_current->p_station->campaignID < p_linkStaStr->p_station->campaignID) {
; 719  : 				p_current->p_next		= p_linkStaStr;
; 720  : 				done						= TRUE;
; 721  : 				returnStatus			= TRUE;
; 722  : 			}
; 723  : 			else {
; 724  : 				delete p_linkStaStr->p_station;								// Clean up
; 725  : 				delete p_linkStaStr;
; 726  : 				done						= TRUE;								// Return false so that we don't increment the Tally
; 727  : 				returnStatus			= FALSE;
; 728  : 				F4Assert(FALSE);													// Duplicate Entries, sloppy file
; 729  : 			}
; 730  : 		}
; 731  : 		else if(p_current->p_station->campaignID > p_linkStaStr->p_station->campaignID) {
; 732  : 			p_linkStaStr->p_next		= p_current;						// Break links and insert
; 733  : 			if(p_previous) {													// If inserting before the first element
; 734  : 				p_previous->p_next	= p_linkStaStr;
; 735  : 			}
; 736  : 			else {
; 737  : 				*p_list					= p_linkStaStr;				
; 738  : 			}
; 739  : 			done							= TRUE;
; 740  : 			returnStatus				= TRUE;
; 741  : 		}
; 742  : 		else if(p_current->p_station->campaignID == p_linkStaStr->p_station->campaignID) {	// Duplicate Airbases
; 743  : 			delete p_linkStaStr->p_station;								// Clean up
; 744  : 			delete p_linkStaStr;
; 745  : 			done							= TRUE;								// Return false so that we don't increment the Tally
; 746  : 			returnStatus				= FALSE;
; 747  : 			F4Assert(FALSE);													// Duplicate Entries, sloppy file
; 748  : 		}
; 749  : 		else if(p_current->p_station->campaignID < p_linkStaStr->p_station->campaignID) {
; 750  : 			p_previous					= p_current;
; 751  : 			p_current					= p_current->p_next;
; 752  : 		}
; 753  : 	}
; 754  : 
; 755  : 	return returnStatus;
; 756  : #endif
; 757  : }

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?StoreStation@TacanList@@AAEHPAPAULinkedCampStationStr@1@FHW4StationSet@1@HHHM@Z ENDP ; TacanList::StoreStation
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0LinkedTacanVUStr@TacanList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LinkedTacanVUStr@TacanList@@QAE@XZ PROC		; TacanList::LinkedTacanVUStr::LinkedTacanVUStr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0LinkedTacanVUStr@TacanList@@QAE@XZ ENDP		; TacanList::LinkedTacanVUStr::LinkedTacanVUStr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetSType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetSType, COMDAT
; _this$ = ecx

; 290  : 	uchar GetSType (void)	const						{	return (EntityType())->classInfo_[VU_STYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetSType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetType@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CampBaseClass@@QBEEXZ PROC			; CampBaseClass::GetType, COMDAT
; _this$ = ecx

; 289  : 	uchar GetType()	const						{	return (EntityType())->classInfo_[VU_TYPE]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	mov	al, BYTE PTR [eax+ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@CampBaseClass@@QBEEXZ ENDP			; CampBaseClass::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetCampId@CampBaseClass@@QBEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampId@CampBaseClass@@QBEFXZ PROC			; CampBaseClass::GetCampId, COMDAT
; _this$ = ecx

; 139  : 	short GetCampId() const						{	return camp_id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+152]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampId@CampBaseClass@@QBEFXZ ENDP			; CampBaseClass::GetCampId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??MVU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??MVU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator<, COMDAT
; _this$ = ecx

; 140  : 	bool operator < (const VU_ID &rhs) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 141  : 		if (creator_ < rhs.creator_){

	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??MVU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator<
	test	eax, eax
	je	SHORT $LN3@operator

; 142  : 			return true;

	mov	al, 1
	jmp	SHORT $LN4@operator
$LN3@operator:

; 143  : 		}
; 144  : 		if (creator_ == rhs.creator_){

	mov	ecx, DWORD PTR _rhs$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN2@operator

; 145  : 			if (num_ < rhs.num_){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rhs$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN2@operator

; 146  : 				return true;

	mov	al, 1
	jmp	SHORT $LN4@operator
$LN2@operator:

; 147  : 			}
; 148  : 		}
; 149  : 		return false;

	xor	al, al
$LN4@operator:

; 150  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??MVU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator<
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??MVU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??MVU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator<, COMDAT
; _this$ = ecx

; 71   : 	int operator < (const VU_SESSION_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 72   : 		return (value_ < rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 73   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??MVU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator<
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
