; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\Navaids\navsystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?gNavigationSys@@3PAVNavigationSystem@@A	; gNavigationSys
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?gNavigationSys@@3PAVNavigationSystem@@A DD 01H DUP (?)	; gNavigationSys
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
_DEF_LAT DD	042071a8ar			; 33.7759
_DEF_LONG DD	042ee3ad1r			; 119.115
_HALFPI	DD	03fc90ff9r			; 1.5708
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_fabsf
PUBLIC	_cosf
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?ZPos@VuEntity@@QBEMXZ				; VuEntity::ZPos
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?checked_atan2@@YANNN@Z				; checked_atan2
PUBLIC	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
PUBLIC	?IsSetFlag@SimBaseClass@@QBEHH@Z		; SimBaseClass::IsSetFlag
PUBLIC	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
PUBLIC	?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ	; WayPointClass::GetWPTargetID
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?SetWPArrive@WayPointClass@@QAEXK@Z		; WayPointClass::SetWPArrive
PUBLIC	?SetLatLong@@YAXMM@Z				; SetLatLong
PUBLIC	?ResetLatLong@@YAXXZ				; ResetLatLong
PUBLIC	?GetLatLong@@YAXPAM0@Z				; GetLatLong
PUBLIC	??0Tacan_Data_Str@NavigationSystem@@QAE@XZ	; NavigationSystem::Tacan_Data_Str::Tacan_Data_Str
PUBLIC	??0Ils_Data_Str@NavigationSystem@@QAE@XZ	; NavigationSystem::Ils_Data_Str::Ils_Data_Str
PUBLIC	?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z ; NavigationSystem::CopyMissionTCNData
PUBLIC	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation
PUBLIC	??0NavigationSystem@@QAE@XZ			; NavigationSystem::NavigationSystem
PUBLIC	??1NavigationSystem@@QAE@XZ			; NavigationSystem::~NavigationSystem
PUBLIC	?ToggleUHFSrc@NavigationSystem@@QAEXXZ		; NavigationSystem::ToggleUHFSrc
PUBLIC	?GetUHFSrc@NavigationSystem@@QAE?AW4UHF_Mode_Type@1@XZ ; NavigationSystem::GetUHFSrc
PUBLIC	?SetUHFSrc@NavigationSystem@@QAEXW4UHF_Mode_Type@1@@Z ; NavigationSystem::SetUHFSrc
PUBLIC	?GetTCNAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z ; NavigationSystem::GetTCNAttribute
PUBLIC	?GetTCNPosition@NavigationSystem@@QAEHPAM00@Z	; NavigationSystem::GetTCNPosition
PUBLIC	?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAVVU_ID@@@Z ; NavigationSystem::GetILSAttribute
PUBLIC	?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z ; NavigationSystem::GetILSAttribute
PUBLIC	?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAD@Z ; NavigationSystem::GetILSAttribute
PUBLIC	?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z ; NavigationSystem::SetMissionTacans
PUBLIC	?DeleteMissionTacans@NavigationSystem@@QAEXXZ	; NavigationSystem::DeleteMissionTacans
PUBLIC	?SetDomain@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4Domain@TacanList@@@Z ; NavigationSystem::SetDomain
PUBLIC	?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z	; NavigationSystem::SetDomain
PUBLIC	?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetDomain
PUBLIC	?ToggleDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::ToggleDomain
PUBLIC	?ToggleControlSrc@NavigationSystem@@QAEXXZ	; NavigationSystem::ToggleControlSrc
PUBLIC	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
PUBLIC	?SetControlSrc@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z ; NavigationSystem::SetControlSrc
PUBLIC	?SetInstrumentMode@NavigationSystem@@QAEXW4Instrument_Mode@1@@Z ; NavigationSystem::SetInstrumentMode
PUBLIC	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
PUBLIC	?StepInstrumentMode@NavigationSystem@@QAEXXZ	; NavigationSystem::StepInstrumentMode
PUBLIC	?SetIlsData@NavigationSystem@@QAEXVVU_ID@@H@Z	; NavigationSystem::SetIlsData
PUBLIC	?ExecIls@NavigationSystem@@QAEXXZ		; NavigationSystem::ExecIls
PUBLIC	?GetMarkPoint@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ; NavigationSystem::GetMarkPoint
PUBLIC	?GetMarkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ; NavigationSystem::GetMarkWayPoint
PUBLIC	?GetMarkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ; NavigationSystem::GetMarkWayPoint
PUBLIC	?GetMarkIndex@NavigationSystem@@QAEHXZ		; NavigationSystem::GetMarkIndex
PUBLIC	?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ; NavigationSystem::SetMarkPoint
PUBLIC	?GotoPrevMark@NavigationSystem@@QAEXXZ		; NavigationSystem::GotoPrevMark
PUBLIC	?GotoNextMark@NavigationSystem@@QAEXXZ		; NavigationSystem::GotoNextMark
PUBLIC	?GetDataLink@NavigationSystem@@QAEXPAW4DLinkPointType@FalconDLinkMessage@@PAHPAD2222@Z ; NavigationSystem::GetDataLink
PUBLIC	?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z ; NavigationSystem::SetDataLinks
PUBLIC	?GetDLinkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ; NavigationSystem::GetDLinkWayPoint
PUBLIC	?GetDLinkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ; NavigationSystem::GetDLinkWayPoint
PUBLIC	?GotoPrevDLink@NavigationSystem@@QAEXXZ		; NavigationSystem::GotoPrevDLink
PUBLIC	?GotoNextDLink@NavigationSystem@@QAEXXZ		; NavigationSystem::GotoNextDLink
PUBLIC	?GetDLinkIndex@NavigationSystem@@QAEHXZ		; NavigationSystem::GetDLinkIndex
PUBLIC	?GetDESTOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ; NavigationSystem::GetDESTOA
PUBLIC	?GetDESTOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ; NavigationSystem::GetDESTOAPoint
PUBLIC	?GetDESTOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ; NavigationSystem::GetDESTOAPoint
PUBLIC	?GetDESTOAIndex@NavigationSystem@@QAEHXZ	; NavigationSystem::GetDESTOAIndex
PUBLIC	?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z ; NavigationSystem::SetDESTOAPoint
PUBLIC	?GetVIPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ; NavigationSystem::GetVIPOA
PUBLIC	?GetVIPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ; NavigationSystem::GetVIPOAPoint
PUBLIC	?GetVIPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ; NavigationSystem::GetVIPOAPoint
PUBLIC	?GetVIPOAIndex@NavigationSystem@@QAEHXZ		; NavigationSystem::GetVIPOAIndex
PUBLIC	?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ; NavigationSystem::SetVIPOAPoint
PUBLIC	?GetVRPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ; NavigationSystem::GetVRPOA
PUBLIC	?GetVRPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ; NavigationSystem::GetVRPOAPoint
PUBLIC	?GetVRPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ; NavigationSystem::GetVRPOAPoint
PUBLIC	?GetVRPOAIndex@NavigationSystem@@QAEHXZ		; NavigationSystem::GetVRPOAIndex
PUBLIC	?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ; NavigationSystem::SetVRPOAPoint
PUBLIC	?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z ; NavigationSystem::SetTacanChannel
PUBLIC	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
PUBLIC	?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::SetTacanChannel
PUBLIC	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanChannel
PUBLIC	?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@@Z ; NavigationSystem::SetTacanChannel
PUBLIC	?GetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAHPAW4StationSet@TacanList@@@Z ; NavigationSystem::GetTacanChannel
PUBLIC	?SetTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4StationSet@TacanList@@@Z ; NavigationSystem::SetTacanBand
PUBLIC	?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanBand
PUBLIC	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID
PUBLIC	?StepTacanChannelDigit@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z ; NavigationSystem::StepTacanChannelDigit
PUBLIC	?StepTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z ; NavigationSystem::StepTacanBand
PUBLIC	?StepPreviousTacan@NavigationSystem@@QAEXXZ	; NavigationSystem::StepPreviousTacan
PUBLIC	?StepNextTacan@NavigationSystem@@QAEXXZ		; NavigationSystem::StepNextTacan
PUBLIC	?GetHomeID@NavigationSystem@@QAEXPAVVU_ID@@@Z	; NavigationSystem::GetHomeID
PUBLIC	?GetCurrentID@NavigationSystem@@QAEXPAVVU_ID@@@Z ; NavigationSystem::GetCurrentID
PUBLIC	?GetType@NavigationSystem@@QAE?AW4Type@1@XZ	; NavigationSystem::GetType
PUBLIC	?SetIlsFromTacan@NavigationSystem@@QAEXXZ	; NavigationSystem::SetIlsFromTacan
PUBLIC	?IsTCNTanker@NavigationSystem@@QAEHXZ		; NavigationSystem::IsTCNTanker
PUBLIC	?IsTCNCarrier@NavigationSystem@@QAEHXZ		; NavigationSystem::IsTCNCarrier
PUBLIC	?IsTCNAirbase@NavigationSystem@@QAEHXZ		; NavigationSystem::IsTCNAirbase
PUBLIC	?GetAirbase@NavigationSystem@@QAEXPAVVU_ID@@@Z	; NavigationSystem::GetAirbase
PUBLIC	?GetILSData@NavigationSystem@@QAEXPAM000@Z	; NavigationSystem::GetILSData
PUBLIC	?ConvertNavtoRad@@YAMM@Z			; ConvertNavtoRad
PUBLIC	?ConvertRadtoNav@@YAMM@Z			; ConvertRadtoNav
PUBLIC	?BuildLatLongStr@@YAXMMPAD0@Z			; BuildLatLongStr
PUBLIC	?ApproxLatLong@@YAXMMPAM0@Z			; ApproxLatLong
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetTypeString@@YAXHPAD@Z			; GetTypeString
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	?FALCON_ORIGIN_LAT@@3MA				; FALCON_ORIGIN_LAT
PUBLIC	?FALCON_ORIGIN_LONG@@3MA			; FALCON_ORIGIN_LONG
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_01NANMIPIL@N?$AA@				; `string'
PUBLIC	??_C@_01DDCIFGEA@E?$AA@				; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01ELNMCGJD@W?$AA@				; `string'
PUBLIC	??_C@_0BI@OPJCMDLP@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?50?$CF2?42f?5?8?$AA@ ; `string'
PUBLIC	??_C@_0BH@NKMGPKAE@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@ ; `string'
PUBLIC	??_C@_0BI@NLBBMHEH@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF02?42f?5?8?$AA@ ; `string'
PUBLIC	??_C@_0BH@DGKGHCEL@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@ ; `string'
PUBLIC	??_C@_07IJDDADGK@feature?$AA@			; `string'
PUBLIC	??_C@_04OGKJMPGK@?$CF02d?$AA@			; `string'
PUBLIC	??_C@_05PBENCBIA@?$CF02dL?$AA@			; `string'
PUBLIC	??_C@_05CFAMBOFP@?$CF02dR?$AA@			; `string'
PUBLIC	??_C@_03GOOLIKIF@?$CF3d?$AA@			; `string'
PUBLIC	??_C@_05JEFOLKLE@?$CF2?41f?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@392c987a
PUBLIC	__real@3c8efa34
PUBLIC	__real@3d56774e
PUBLIC	__real@3f07ae14
PUBLIC	__real@3fc90fd9
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@40490fd9
PUBLIC	__real@40490fdb
PUBLIC	__real@4096cbe3
PUBLIC	__real@40a00000
PUBLIC	__real@40c90fd9
PUBLIC	__real@40c90fdb
PUBLIC	__real@41200000
PUBLIC	__real@42652ee1
PUBLIC	__real@42700000
PUBLIC	__real@42b40000
PUBLIC	__real@43340000
PUBLIC	__real@43b40000
PUBLIC	__real@45be3840
PUBLIC	__real@48127c00
PUBLIC	__real@4b9fa682
PUBLIC	__real@8000000000000000
PUBLIC	__real@bfc90fd9
PUBLIC	__real@bff921fb54442d18
PUBLIC	__real@c0490fd9
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_sprintf:PROC
EXTRN	_atan:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	??0WayPointClass@@QAE@XZ:PROC			; WayPointClass::WayPointClass
EXTRN	??0WayPointClass@@QAE@FFHHKKEH@Z:PROC		; WayPointClass::WayPointClass
EXTRN	?SetLocation@WayPointClass@@QAEXMMM@Z:PROC	; WayPointClass::SetLocation
EXTRN	?GetLocation@WayPointClass@@QBEXPAM00@Z:PROC	; WayPointClass::GetLocation
EXTRN	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ:PROC ; CampBaseClass::GetComponentLead
EXTRN	?GetOppositeRunway@ATCBrain@@QAEHH@Z:PROC	; ATCBrain::GetOppositeRunway
EXTRN	?FindBestLandingRunway@ATCBrain@@QAEHPAVFalconEntity@@H@Z:PROC ; ATCBrain::FindBestLandingRunway
EXTRN	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ:PROC ; SimulationDriver::GetPlayerAircraft
EXTRN	?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z:PROC ; TacanList::GetVUIDFromChannel
EXTRN	?GetChannelFromVUID@TacanList@@QAEHVVU_ID@@PAHPAW4StationSet@1@PAW4Domain@1@11PAM@Z:PROC ; TacanList::GetChannelFromVUID
EXTRN	?GetFirstPt@@YAHH@Z:PROC			; GetFirstPt
EXTRN	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z:PROC ; TranslatePointData
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z:PROC ; OTWDriverClass::GetGroundLevel
EXTRN	?ClearStrings@ICPClass@@QAEXXZ:PROC		; ICPClass::ClearStrings
EXTRN	?CheckBackupPages@ICPClass@@QAEHXZ:PROC		; ICPClass::CheckBackupPages
EXTRN	?SetMasterMode@FireControlComputer@@QAEXW4FCCMasterMode@1@@Z:PROC ; FireControlComputer::SetMasterMode
EXTRN	?FindNearestFriendlyAirbase@@YAPAVObjectiveClass@@EFF@Z:PROC ; FindNearestFriendlyAirbase
EXTRN	?GridToSim@@YAMF@Z:PROC				; GridToSim
EXTRN	?ConvertSimToGrid@@YAXPAUvector@@PAF1@Z:PROC	; ConvertSimToGrid
EXTRN	?GetTankerFlight@FlightClass@@QAEPAV1@XZ:PROC	; FlightClass::GetTankerFlight
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?PtHeaderDataTable@@3PAUPtHeaderDataType@@A:DWORD ; PtHeaderDataTable
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?SimDriver@@3VSimulationDriver@@A:BYTE		; SimDriver
EXTRN	?gTacanList@@3PAVTacanList@@A:DWORD		; gTacanList
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?g_bRealisticAvionics@@3_NA:BYTE		; g_bRealisticAvionics
EXTRN	?g_bINS@@3_NA:BYTE				; g_bINS
EXTRN	?DLink_Type_Str@@3PAPADA:BYTE			; DLink_Type_Str
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?FALCON_ORIGIN_LAT@@3MA DD 01H DUP (?)			; FALCON_ORIGIN_LAT
?FALCON_ORIGIN_LONG@@3MA DD 01H DUP (?)			; FALCON_ORIGIN_LONG
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@c0490fd9
CONST	SEGMENT
__real@c0490fd9 DD 0c0490fd9r			; -3.14159
CONST	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@bfc90fd9
CONST	SEGMENT
__real@bfc90fd9 DD 0bfc90fd9r			; -1.5708
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@4b9fa682
CONST	SEGMENT
__real@4b9fa682 DD 04b9fa682r			; 2.09257e+007
CONST	ENDS
;	COMDAT __real@48127c00
CONST	SEGMENT
__real@48127c00 DD 048127c00r			; 150000
CONST	ENDS
;	COMDAT __real@45be3840
CONST	SEGMENT
__real@45be3840 DD 045be3840r			; 6087.03
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@42652ee1
CONST	SEGMENT
__real@42652ee1 DD 042652ee1r			; 57.2958
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40c90fd9
CONST	SEGMENT
__real@40c90fd9 DD 040c90fd9r			; 6.28318
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4096cbe3
CONST	SEGMENT
__real@4096cbe3 DD 04096cbe3r			; 4.71239
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40490fd9
CONST	SEGMENT
__real@40490fd9 DD 040490fd9r			; 3.14159
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3fc90fd9
CONST	SEGMENT
__real@3fc90fd9 DD 03fc90fd9r			; 1.5708
CONST	ENDS
;	COMDAT __real@3f07ae14
CONST	SEGMENT
__real@3f07ae14 DD 03f07ae14r			; 0.53
CONST	ENDS
;	COMDAT __real@3d56774e
CONST	SEGMENT
__real@3d56774e DD 03d56774er			; 0.0523599
CONST	ENDS
;	COMDAT __real@3c8efa34
CONST	SEGMENT
__real@3c8efa34 DD 03c8efa34r			; 0.0174533
CONST	ENDS
;	COMDAT __real@392c987a
CONST	SEGMENT
__real@392c987a DD 0392c987ar			; 0.0001646
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05JEFOLKLE@?$CF2?41f?$AA@
CONST	SEGMENT
??_C@_05JEFOLKLE@?$CF2?41f?$AA@ DB '%2.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOOLIKIF@?$CF3d?$AA@
CONST	SEGMENT
??_C@_03GOOLIKIF@?$CF3d?$AA@ DB '%3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CFAMBOFP@?$CF02dR?$AA@
CONST	SEGMENT
??_C@_05CFAMBOFP@?$CF02dR?$AA@ DB '%02dR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PBENCBIA@?$CF02dL?$AA@
CONST	SEGMENT
??_C@_05PBENCBIA@?$CF02dL?$AA@ DB '%02dL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OGKJMPGK@?$CF02d?$AA@
CONST	SEGMENT
??_C@_04OGKJMPGK@?$CF02d?$AA@ DB '%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJDDADGK@feature?$AA@
CONST	SEGMENT
??_C@_07IJDDADGK@feature?$AA@ DB 'feature', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DGKGHCEL@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@
CONST	SEGMENT
??_C@_0BH@DGKGHCEL@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@ DB 'L'
	DB	'NG  %s %3d *  %2.2f ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NLBBMHEH@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF02?42f?5?8?$AA@
CONST	SEGMENT
??_C@_0BI@NLBBMHEH@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF02?42f?5?8?$AA@ DB 'L'
	DB	'NG  %s %3d *  %02.2f ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NKMGPKAE@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@
CONST	SEGMENT
??_C@_0BH@NKMGPKAE@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@ DB 'L'
	DB	'AT  %s %3d *  %2.2f ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OPJCMDLP@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?50?$CF2?42f?5?8?$AA@
CONST	SEGMENT
??_C@_0BI@OPJCMDLP@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?50?$CF2?42f?5?8?$AA@ DB 'L'
	DB	'AT  %s %3d *  0%2.2f ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01ELNMCGJD@W?$AA@
CONST	SEGMENT
??_C@_01ELNMCGJD@W?$AA@ DB 'W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DDCIFGEA@E?$AA@
CONST	SEGMENT
??_C@_01DDCIFGEA@E?$AA@ DB 'E', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NANMIPIL@N?$AA@
CONST	SEGMENT
??_C@_01NANMIPIL@N?$AA@ DB 'N', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0
__unwindtable$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0
__unwindtable$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z$0
__unwindtable$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z$0
__unwindtable$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0
__unwindtable$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z$0
__unwindtable$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z$1
__ehfuncinfo$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_FALCON_ORIGIN_LAT$initializer$ DD FLAT:??__EFALCON_ORIGIN_LAT@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_FALCON_ORIGIN_LONG$initializer$ DD FLAT:??__EFALCON_ORIGIN_LONG@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_dataPtr$1 = -24					; size = 4
_dataPtr$2 = -20					; size = 4
_dataPtr$3 = -16					; size = 4
_dataPtr$4 = -12					; size = 4
_dataPtr$5 = -8						; size = 4
_dataType$ = -1						; size = 1
_index$ = 8						; size = 4
_string$ = 12						; size = 4
?GetTypeString@@YAXHPAD@Z PROC				; GetTypeString

; 177  : void GetTypeString(int index, char* string) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 178  : 
; 179  : 	uchar	dataType = Falcon4ClassTable[index].dataType;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	dl, BYTE PTR [ecx+eax+76]
	mov	BYTE PTR _dataType$[ebp], dl

; 180  : 
; 181  : 
; 182  : 	if(dataType == DTYPE_FEATURE) {

	movzx	eax, BYTE PTR _dataType$[ebp]
	cmp	eax, 1
	jne	SHORT $LN10@GetTypeStr

; 183  : 		struct FeatureEntry* dataPtr;
; 184  : 		dataPtr = (struct FeatureEntry*) Falcon4ClassTable[index].dataPtr;

	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+ecx+77]
	mov	DWORD PTR _dataPtr$1[ebp], eax

; 185  : 		strcpy(string, "feature");

	push	OFFSET ??_C@_07IJDDADGK@feature?$AA@
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
	jmp	$LN11@GetTypeStr
$LN10@GetTypeStr:

; 186  : 	}
; 187  : 	else if(dataType == DTYPE_OBJECTIVE) {

	movzx	edx, BYTE PTR _dataType$[ebp]
	cmp	edx, 3
	jne	SHORT $LN8@GetTypeStr

; 188  : 		struct ObjClassDataType* dataPtr;
; 189  : 		dataPtr = (struct ObjClassDataType*) Falcon4ClassTable[index].dataPtr;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, DWORD PTR [ecx+eax+77]
	mov	DWORD PTR _dataPtr$5[ebp], edx

; 190  : 		strcpy(string, dataPtr->Name);

	mov	eax, DWORD PTR _dataPtr$5[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
	jmp	$LN11@GetTypeStr
$LN8@GetTypeStr:

; 191  : 	}
; 192  : 	else if(dataType == DTYPE_UNIT) {

	movzx	edx, BYTE PTR _dataType$[ebp]
	cmp	edx, 4
	jne	SHORT $LN6@GetTypeStr

; 193  : 		struct UnitClassDataType* dataPtr;
; 194  : 		dataPtr = (struct UnitClassDataType*) Falcon4ClassTable[index].dataPtr;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, DWORD PTR [ecx+eax+77]
	mov	DWORD PTR _dataPtr$4[ebp], edx

; 195  : 		strcpy(string, dataPtr->Name);

	mov	eax, DWORD PTR _dataPtr$4[ebp]
	add	eax, 230				; 000000e6H
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN11@GetTypeStr
$LN6@GetTypeStr:

; 196  : 	}
; 197  : 	else if(dataType == DTYPE_VEHICLE) {

	movzx	edx, BYTE PTR _dataType$[ebp]
	cmp	edx, 5
	jne	SHORT $LN4@GetTypeStr

; 198  : 		struct VehicleClassDataType* dataPtr;
; 199  : 		dataPtr = (struct VehicleClassDataType*) Falcon4ClassTable[index].dataPtr;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, DWORD PTR [ecx+eax+77]
	mov	DWORD PTR _dataPtr$3[ebp], edx

; 200  : 		strcpy(string, dataPtr->Name);

	mov	eax, DWORD PTR _dataPtr$3[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN11@GetTypeStr
$LN4@GetTypeStr:

; 201  : 	}
; 202  : 	else if(dataType == DTYPE_WEAPON) {

	movzx	edx, BYTE PTR _dataType$[ebp]
	cmp	edx, 6
	jne	SHORT $LN2@GetTypeStr

; 203  : 		struct WeaponClassDataType* dataPtr;
; 204  : 		dataPtr = (struct WeaponClassDataType*) Falcon4ClassTable[index].dataPtr;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 81					; 00000051H
	mov	ecx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	edx, DWORD PTR [ecx+eax+77]
	mov	DWORD PTR _dataPtr$2[ebp], edx

; 205  : 		strcpy(string, dataPtr->Name);

	mov	eax, DWORD PTR _dataPtr$2[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 206  : 	}
; 207  : 	else {

	jmp	SHORT $LN11@GetTypeStr
$LN2@GetTypeStr:

; 208  : 		string = NULL;

	mov	DWORD PTR _string$[ebp], 0
$LN11@GetTypeStr:

; 209  : 	}
; 210  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTypeString@@YAXHPAD@Z ENDP				; GetTypeString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
;	COMDAT ??__EFALCON_ORIGIN_LONG@@YAXXZ
text$yc	SEGMENT
??__EFALCON_ORIGIN_LONG@@YAXXZ PROC			; `dynamic initializer for 'FALCON_ORIGIN_LONG'', COMDAT

; 63   : float FALCON_ORIGIN_LONG = DEF_LONG;

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _DEF_LONG
	movss	DWORD PTR ?FALCON_ORIGIN_LONG@@3MA, xmm0
	pop	ebp
	ret	0
??__EFALCON_ORIGIN_LONG@@YAXXZ ENDP			; `dynamic initializer for 'FALCON_ORIGIN_LONG''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
;	COMDAT ??__EFALCON_ORIGIN_LAT@@YAXXZ
text$yc	SEGMENT
??__EFALCON_ORIGIN_LAT@@YAXXZ PROC			; `dynamic initializer for 'FALCON_ORIGIN_LAT'', COMDAT

; 62   : float FALCON_ORIGIN_LAT = DEF_LAT;

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _DEF_LAT
	movss	DWORD PTR ?FALCON_ORIGIN_LAT@@3MA, xmm0
	pop	ebp
	ret	0
??__EFALCON_ORIGIN_LAT@@YAXXZ ENDP			; `dynamic initializer for 'FALCON_ORIGIN_LAT''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_cosLatitude$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_latitude$ = 16						; size = 4
_longitude$ = 20					; size = 4
?ApproxLatLong@@YAXMMPAM0@Z PROC			; ApproxLatLong

; 120  : void ApproxLatLong(float x, float y, float* latitude, float* longitude) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 121  : 	
; 122  : 	float	cosLatitude;
; 123  : 
; 124  : 	*latitude	= (FALCON_ORIGIN_LAT * FT_PER_DEGREE + x) / EARTH_RADIUS_FT;

	movss	xmm0, DWORD PTR ?FALCON_ORIGIN_LAT@@3MA
	mulss	xmm0, DWORD PTR __real@45be3840
	mulss	xmm0, DWORD PTR __real@42700000
	addss	xmm0, DWORD PTR _x$[ebp]
	divss	xmm0, DWORD PTR __real@4b9fa682
	mov	eax, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [eax], xmm0

; 125  : 	cosLatitude = (float)cos(*latitude);

	mov	ecx, DWORD PTR _latitude$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _cosLatitude$[ebp]

; 126  : 
; 127  : 	*longitude	= ((FALCON_ORIGIN_LONG * DTR * EARTH_RADIUS_FT * cosLatitude) + y) / (EARTH_RADIUS_FT * cosLatitude);

	movss	xmm0, DWORD PTR ?FALCON_ORIGIN_LONG@@3MA
	mulss	xmm0, DWORD PTR __real@3c8efa34
	mulss	xmm0, DWORD PTR __real@4b9fa682
	mulss	xmm0, DWORD PTR _cosLatitude$[ebp]
	addss	xmm0, DWORD PTR _y$[ebp]
	movss	xmm1, DWORD PTR __real@4b9fa682
	mulss	xmm1, DWORD PTR _cosLatitude$[ebp]
	divss	xmm0, xmm1
	mov	edx, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [edx], xmm0

; 128  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ApproxLatLong@@YAXMMPAM0@Z ENDP			; ApproxLatLong
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv160 = -32						; size = 4
tv151 = -28						; size = 4
_LongStr$ = -24						; size = 4
_longMin$ = -20						; size = 4
_LatStr$ = -16						; size = 4
_latMin$ = -12						; size = 4
_longDeg$ = -8						; size = 4
_latDeg$ = -4						; size = 4
_latitude$ = 8						; size = 4
_longitude$ = 12					; size = 4
_latStr$ = 16						; size = 4
_longStr$ = 20						; size = 4
?BuildLatLongStr@@YAXMMPAD0@Z PROC			; BuildLatLongStr

; 136  : void BuildLatLongStr(float latitude, float longitude, char* latStr, char* longStr) {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 137  : 
; 138  : 	int	latDeg,		longDeg;
; 139  : 	float	latMin,		longMin;
; 140  : 	char *LatStr = "N";

	mov	DWORD PTR _LatStr$[ebp], OFFSET ??_C@_01NANMIPIL@N?$AA@

; 141  : 	char *LongStr = "E";

	mov	DWORD PTR _LongStr$[ebp], OFFSET ??_C@_01DDCIFGEA@E?$AA@

; 142  : 
; 143  : 	latitude		*= RTD;

	movss	xmm0, DWORD PTR _latitude$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	movss	DWORD PTR _latitude$[ebp], xmm0

; 144  : 	longitude	*= RTD;

	movss	xmm0, DWORD PTR _longitude$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	movss	DWORD PTR _longitude$[ebp], xmm0

; 145  : 	
; 146  : 	longDeg		= FloatToInt32(longitude);

	push	ecx
	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _longDeg$[ebp], eax

; 147  : 	longMin		= (float)fabs(longitude - longDeg) * DEG_TO_MIN;

	cvtsi2ss xmm0, DWORD PTR _longDeg$[ebp]
	movss	xmm1, DWORD PTR _longitude$[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv151[ebp]
	movss	xmm0, DWORD PTR tv151[ebp]
	mulss	xmm0, DWORD PTR __real@42700000
	movss	DWORD PTR _longMin$[ebp], xmm0

; 148  : 
; 149  : 	latDeg		= FloatToInt32(latitude);

	push	ecx
	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _latDeg$[ebp], eax

; 150  : 	latMin		= (float)fabs(latitude - latDeg) * DEG_TO_MIN;

	cvtsi2ss xmm0, DWORD PTR _latDeg$[ebp]
	movss	xmm1, DWORD PTR _latitude$[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv160[ebp]
	movss	xmm0, DWORD PTR tv160[ebp]
	mulss	xmm0, DWORD PTR __real@42700000
	movss	DWORD PTR _latMin$[ebp], xmm0

; 151  : 
; 152  : 	// format lat/long here
; 153  : 	if (latDeg < 0) 

	cmp	DWORD PTR _latDeg$[ebp], 0
	jge	SHORT $LN6@BuildLatLo

; 154  : 	    LatStr = "S";

	mov	DWORD PTR _LatStr$[ebp], OFFSET ??_C@_01CPLAODJH@S?$AA@
$LN6@BuildLatLo:

; 155  : 	if (longDeg < 0)

	cmp	DWORD PTR _longDeg$[ebp], 0
	jge	SHORT $LN5@BuildLatLo

; 156  : 	    LongStr = "W";

	mov	DWORD PTR _LongStr$[ebp], OFFSET ??_C@_01ELNMCGJD@W?$AA@
$LN5@BuildLatLo:

; 157  : 	if(latMin < 10.0F) {

	movss	xmm0, DWORD PTR __real@41200000
	comiss	xmm0, DWORD PTR _latMin$[ebp]
	jbe	SHORT $LN4@BuildLatLo

; 158  : 		sprintf(latStr, "LAT  %s %3d *  0%2.2f \'", LatStr, latDeg, latMin);

	cvtss2sd xmm0, DWORD PTR _latMin$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _latDeg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LatStr$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BI@OPJCMDLP@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?50?$CF2?42f?5?8?$AA@
	mov	edx, DWORD PTR _latStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 159  : 	}
; 160  : 	else {

	jmp	SHORT $LN3@BuildLatLo
$LN4@BuildLatLo:

; 161  : 		sprintf(latStr, "LAT  %s %3d *  %2.2f \'", LatStr, latDeg, latMin);

	cvtss2sd xmm0, DWORD PTR _latMin$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _latDeg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LatStr$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@NKMGPKAE@LAT?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@
	mov	edx, DWORD PTR _latStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H
$LN3@BuildLatLo:

; 162  : 	}
; 163  : 
; 164  : 	if(longMin < 10.0F) {

	movss	xmm0, DWORD PTR __real@41200000
	comiss	xmm0, DWORD PTR _longMin$[ebp]
	jbe	SHORT $LN2@BuildLatLo

; 165  : 		sprintf(longStr, "LNG  %s %3d *  %02.2f \'", LongStr, longDeg, longMin);

	cvtss2sd xmm0, DWORD PTR _longMin$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _longDeg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LongStr$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BI@NLBBMHEH@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF02?42f?5?8?$AA@
	mov	edx, DWORD PTR _longStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 166  : 	}
; 167  : 	else {

	jmp	SHORT $LN1@BuildLatLo
$LN2@BuildLatLo:

; 168  : 		sprintf(longStr, "LNG  %s %3d *  %2.2f \'", LongStr, longDeg, longMin);

	cvtss2sd xmm0, DWORD PTR _longMin$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _longDeg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LongStr$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@DGKGHCEL@LNG?5?5?$CFs?5?$CF3d?5?$CK?5?5?$CF2?42f?5?8?$AA@
	mov	edx, DWORD PTR _longStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H
$LN1@BuildLatLo:

; 169  : 	}
; 170  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BuildLatLongStr@@YAXMMPAD0@Z ENDP			; BuildLatLongStr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv130 = -12						; size = 4
tv94 = -8						; size = 4
tv88 = -4						; size = 4
_radAngle$ = 8						; size = 4
?ConvertRadtoNav@@YAMM@Z PROC				; ConvertRadtoNav

; 70   : float ConvertRadtoNav(float radAngle) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 71   : 	if(radAngle <= HALFPI && radAngle >= -PI) {

	movss	xmm0, DWORD PTR _HALFPI
	comiss	xmm0, DWORD PTR _radAngle$[ebp]
	jb	SHORT $LN4@ConvertRad
	movss	xmm0, DWORD PTR _radAngle$[ebp]
	comiss	xmm0, DWORD PTR __real@c0490fdb
	jb	SHORT $LN4@ConvertRad

; 72   : 		return((HALFPI - radAngle) * RTD);

	movss	xmm0, DWORD PTR _HALFPI
	subss	xmm0, DWORD PTR _radAngle$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	movss	DWORD PTR tv88[ebp], xmm0
	fld	DWORD PTR tv88[ebp]
	jmp	SHORT $LN1@ConvertRad
	jmp	SHORT $LN1@ConvertRad
$LN4@ConvertRad:

; 73   : 	}
; 74   : 	else if(radAngle <= PI && radAngle >= HALFPI) {

	movss	xmm0, DWORD PTR __real@40490fdb
	comiss	xmm0, DWORD PTR _radAngle$[ebp]
	jb	SHORT $LN2@ConvertRad
	movss	xmm0, DWORD PTR _radAngle$[ebp]
	comiss	xmm0, DWORD PTR _HALFPI
	jb	SHORT $LN2@ConvertRad

; 75   : 		return(((5 * HALFPI) - radAngle) * RTD);

	movss	xmm0, DWORD PTR __real@40a00000
	mulss	xmm0, DWORD PTR _HALFPI
	subss	xmm0, DWORD PTR _radAngle$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	movss	DWORD PTR tv94[ebp], xmm0
	fld	DWORD PTR tv94[ebp]
	jmp	SHORT $LN1@ConvertRad

; 76   : 	}
; 77   : 	else {

	jmp	SHORT $LN1@ConvertRad
$LN2@ConvertRad:

; 78   : 		return((2 * PI - radAngle) * RTD);

	movss	xmm0, DWORD PTR __real@40c90fdb
	subss	xmm0, DWORD PTR _radAngle$[ebp]
	mulss	xmm0, DWORD PTR __real@42652ee1
	movss	DWORD PTR tv130[ebp], xmm0
	fld	DWORD PTR tv130[ebp]
$LN1@ConvertRad:

; 79   : 	}
; 80   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertRadtoNav@@YAMM@Z ENDP				; ConvertRadtoNav
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv86 = -8						; size = 4
tv81 = -4						; size = 4
_navAngle$ = 8						; size = 4
?ConvertNavtoRad@@YAMM@Z PROC				; ConvertNavtoRad

; 88   : float ConvertNavtoRad(float navAngle) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	if((navAngle > 0.0F) && (navAngle < 90.0F)) {

	movss	xmm0, DWORD PTR _navAngle$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN2@ConvertNav
	movss	xmm0, DWORD PTR __real@42b40000
	comiss	xmm0, DWORD PTR _navAngle$[ebp]
	jbe	SHORT $LN2@ConvertNav

; 90   : 		return(HALFPI - (navAngle * DTR));

	movss	xmm0, DWORD PTR _navAngle$[ebp]
	mulss	xmm0, DWORD PTR __real@3c8efa34
	movss	xmm1, DWORD PTR _HALFPI
	subss	xmm1, xmm0
	movss	DWORD PTR tv81[ebp], xmm1
	fld	DWORD PTR tv81[ebp]
	jmp	SHORT $LN1@ConvertNav

; 91   : 	}
; 92   : 	else {

	jmp	SHORT $LN1@ConvertNav
$LN2@ConvertNav:

; 93   : 		return(5 * HALFPI - (navAngle * DTR));

	movss	xmm0, DWORD PTR __real@40a00000
	mulss	xmm0, DWORD PTR _HALFPI
	movss	xmm1, DWORD PTR _navAngle$[ebp]
	mulss	xmm1, DWORD PTR __real@3c8efa34
	subss	xmm0, xmm1
	movss	DWORD PTR tv86[ebp], xmm0
	fld	DWORD PTR tv86[ebp]
$LN1@ConvertNav:

; 94   : 	}
; 95   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ConvertNavtoRad@@YAMM@Z ENDP				; ConvertNavtoRad
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_LocDev$ = 8						; size = 4
_finalHeading$ = 12					; size = 4
_finalGS$ = 16						; size = 4
_DistToSta$ = 20					; size = 4
?GetILSData@NavigationSystem@@QAEXPAM000@Z PROC		; NavigationSystem::GetILSData
; _this$ = ecx

; 2204 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2205 : 	//current Localizer deviation
; 2206 : 	*LocDev = mpCurrentIls.gpDeviation;

	mov	eax, DWORD PTR _LocDev$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1948]
	mov	DWORD PTR [eax], edx

; 2207 : 
; 2208 : 	//Get the current Glidepath deviation
; 2209 : 	*finalGS = mpCurrentIls.gsDeviation;

	mov	eax, DWORD PTR _finalGS$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1952]
	mov	DWORD PTR [eax], edx

; 2210 : 
; 2211 : 	//runway heading
; 2212 : 	*finalHeading = (float)mpCurrentIls.heading;

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+1936]
	mov	ecx, DWORD PTR _finalHeading$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 2213 : 
; 2214 : 	//Get the distance
; 2215 : 	*DistToSta = distToToLocalizer;

	mov	edx, DWORD PTR _DistToSta$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2000]
	mov	DWORD PTR [edx], ecx

; 2216 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetILSData@NavigationSystem@@QAEXPAM000@Z ENDP		; NavigationSystem::GetILSData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
$T1 = -56						; size = 8
$T2 = -48						; size = 8
_airbase$ = -40						; size = 4
tv163 = -36						; size = 4
_y$ = -32						; size = 2
_x$ = -28						; size = 2
_pcurrentWaypoint$ = -24				; size = 4
_this$ = -20						; size = 4
_pos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pATCId$ = 8						; size = 4
?GetAirbase@NavigationSystem@@QAEXPAVVU_ID@@@Z PROC	; NavigationSystem::GetAirbase
; _this$ = ecx

; 2095 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2096 : 	WayPointClass			*pcurrentWaypoint;
; 2097 : 	Objective				airbase;
; 2098 : 	GridIndex				x, y;
; 2099 : 	vector					pos;
; 2100 : 
; 2101 : // 2002-04-08 MN CTD fix
; 2102 : 	if (!SimDriver.GetPlayerAircraft())

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	jne	SHORT $LN12@GetAirbase

; 2103 : 	{
; 2104 : 		*pATCId = FalconNullId;

	mov	eax, DWORD PTR _pATCId$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx

; 2105 : 		return;

	jmp	$LN13@GetAirbase
$LN12@GetAirbase:

; 2106 : 	}
; 2107 : 
; 2108 : 	if(GetInstrumentMode() == TACAN || GetInstrumentMode() == ILS_TACAN) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	cmp	eax, 3
	je	SHORT $LN10@GetAirbase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	cmp	eax, 2
	jne	SHORT $LN11@GetAirbase
$LN10@GetAirbase:

; 2109 : 		GetTacanVUID(GetControlSrc(), pATCId);

	mov	eax, DWORD PTR _pATCId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID
	jmp	$LN1@GetAirbase
$LN11@GetAirbase:

; 2110 : 	}
; 2111 : 	else if(GetInstrumentMode() == NAV || GetInstrumentMode() == ILS_NAV) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	test	eax, eax
	je	SHORT $LN7@GetAirbase
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	cmp	eax, 1
	jne	$LN8@GetAirbase
$LN7@GetAirbase:

; 2112 : 		pcurrentWaypoint	= SimDriver.GetPlayerAircraft()->curWaypoint;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+728]
	mov	DWORD PTR _pcurrentWaypoint$[ebp], ecx

; 2113 : 		
; 2114 : 		if(pcurrentWaypoint && pcurrentWaypoint->GetWPAction() == WP_LAND) {

	cmp	DWORD PTR _pcurrentWaypoint$[ebp], 0
	je	SHORT $LN6@GetAirbase
	mov	ecx, DWORD PTR _pcurrentWaypoint$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 7
	jne	SHORT $LN6@GetAirbase

; 2115 : 			*pATCId	= pcurrentWaypoint->GetWPTargetID();		

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _pcurrentWaypoint$[ebp]
	call	?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ ; WayPointClass::GetWPTargetID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pATCId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	jmp	$LN2@GetAirbase
$LN6@GetAirbase:

; 2116 : 		}
; 2117 : 		else if(SimDriver.GetPlayerAircraft()) {

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	$LN2@GetAirbase

; 2118 : 			pos.x = SimDriver.GetPlayerAircraft()->XPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR _pos$[ebp]

; 2119 : 			pos.y = SimDriver.GetPlayerAircraft()->YPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR _pos$[ebp+4]

; 2120 : 
; 2121 : 			ConvertSimToGrid (&pos, &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	call	?ConvertSimToGrid@@YAXPAUvector@@PAF1@Z	; ConvertSimToGrid
	add	esp, 12					; 0000000cH

; 2122 : 			airbase = FindNearestFriendlyAirbase (SimDriver.GetPlayerAircraft()->GetTeam(), x, y);

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR tv163[ebp], eax
	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR tv163[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv163[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	movzx	ecx, al
	push	ecx
	call	?FindNearestFriendlyAirbase@@YAPAVObjectiveClass@@EFF@Z ; FindNearestFriendlyAirbase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _airbase$[ebp], eax

; 2123 : 
; 2124 : 			if(airbase)

	cmp	DWORD PTR _airbase$[ebp], 0
	je	SHORT $LN3@GetAirbase

; 2125 : 				*pATCId	= airbase->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _airbase$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pATCId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 2126 : 			else 

	jmp	SHORT $LN2@GetAirbase
$LN3@GetAirbase:

; 2127 : 				*pATCId = FalconNullId;

	mov	ecx, DWORD PTR _pATCId$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+4], eax
$LN2@GetAirbase:

; 2128 : 		}
; 2129 : 	}
; 2130 : 	else {

	jmp	SHORT $LN1@GetAirbase
$LN8@GetAirbase:

; 2131 : 		*pATCId = FalconNullId;

	mov	ecx, DWORD PTR _pATCId$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+4], eax
$LN1@GetAirbase:
$LN13@GetAirbase:

; 2132 : 	}
; 2133 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAirbase@NavigationSystem@@QAEXPAVVU_ID@@@Z ENDP	; NavigationSystem::GetAirbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_VuId$ = -16						; size = 8
_this$ = -8						; size = 4
_pCampBase$ = -4					; size = 4
?IsTCNAirbase@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::IsTCNAirbase
; _this$ = ecx

; 2186 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2187 : 	VU_ID				VuId;

	lea	ecx, DWORD PTR _VuId$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2188 : 	CampBaseClass*	pCampBase;
; 2189 : 
; 2190 : 	GetTacanVUID(GetControlSrc(), &VuId);

	lea	eax, DWORD PTR _VuId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID

; 2191 : 	pCampBase = (CampBaseClass*) vuDatabase->Find(VuId);

	mov	ecx, DWORD PTR _VuId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _VuId$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _pCampBase$[ebp], eax

; 2192 : 
; 2193 : 	if(pCampBase && pCampBase->IsObjective() && pCampBase->EntityType()->classInfo_[VU_TYPE] == TYPE_AIRBASE)

	cmp	DWORD PTR _pCampBase$[ebp], 0
	je	SHORT $LN2@IsTCNAirba
	mov	eax, DWORD PTR _pCampBase$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN2@IsTCNAirba
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN2@IsTCNAirba

; 2194 : 	{
; 2195 : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@IsTCNAirba

; 2196 : 	}
; 2197 : 	else {

	jmp	SHORT $LN3@IsTCNAirba
$LN2@IsTCNAirba:

; 2198 : 		return FALSE;

	xor	eax, eax
$LN3@IsTCNAirba:

; 2199 : 	}
; 2200 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsTCNAirbase@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::IsTCNAirbase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_VuId$ = -16						; size = 8
_this$ = -8						; size = 4
_pCampBase$ = -4					; size = 4
?IsTCNCarrier@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::IsTCNCarrier
; _this$ = ecx

; 2165 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 2166 : 	VU_ID				VuId;

	lea	ecx, DWORD PTR _VuId$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2167 : 	CampBaseClass*	pCampBase;
; 2168 : 
; 2169 : 	GetTacanVUID(GetControlSrc(), &VuId);

	lea	eax, DWORD PTR _VuId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID

; 2170 : 	pCampBase = (CampBaseClass*) vuDatabase->Find(VuId);

	mov	ecx, DWORD PTR _VuId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _VuId$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _pCampBase$[ebp], eax

; 2171 : 
; 2172 : 	if(pCampBase && pCampBase->EntityType()->classInfo_[VU_CLASS] == CLASS_UNIT && pCampBase->EntityType()->classInfo_[VU_TYPE] == TYPE_TASKFORCE && pCampBase->EntityType()->classInfo_[VU_STYPE] == STYPE_UNIT_CARRIER)

	cmp	DWORD PTR _pCampBase$[ebp], 0
	je	SHORT $LN2@IsTCNCarri
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	jne	SHORT $LN2@IsTCNCarri
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN2@IsTCNCarri
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	imul	ecx, 3
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 3
	jne	SHORT $LN2@IsTCNCarri

; 2173 : 	{
; 2174 : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@IsTCNCarri

; 2175 : 	}
; 2176 : 	else {

	jmp	SHORT $LN3@IsTCNCarri
$LN2@IsTCNCarri:

; 2177 : 		return FALSE;

	xor	eax, eax
$LN3@IsTCNCarri:

; 2178 : 	}
; 2179 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsTCNCarrier@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::IsTCNCarrier
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_VuId$ = -20						; size = 8
_pFlight$ = -12						; size = 4
_this$ = -8						; size = 4
_pCampBase$ = -4					; size = 4
?IsTCNTanker@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::IsTCNTanker
; _this$ = ecx

; 2140 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2141 : 	VU_ID				VuId;

	lea	ecx, DWORD PTR _VuId$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2142 : 	CampBaseClass*	pCampBase;
; 2143 : 	FlightClass*	pFlight;
; 2144 : 
; 2145 : 	GetTacanVUID(GetControlSrc(), &VuId);

	lea	eax, DWORD PTR _VuId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID

; 2146 : 	pCampBase = (CampBaseClass*) vuDatabase->Find(VuId);

	mov	ecx, DWORD PTR _VuId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _VuId$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _pCampBase$[ebp], eax

; 2147 : 
; 2148 : 	if(pCampBase && pCampBase->EntityType()->classInfo_[VU_CLASS] == CLASS_UNIT && pCampBase->EntityType()->classInfo_[VU_TYPE] == TYPE_FLIGHT) {

	cmp	DWORD PTR _pCampBase$[ebp], 0
	je	SHORT $LN2@IsTCNTanke
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 6
	jne	SHORT $LN2@IsTCNTanke
	mov	ecx, DWORD PTR _pCampBase$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN2@IsTCNTanke

; 2149 : 		pFlight = (FlightClass*) pCampBase;

	mov	eax, DWORD PTR _pCampBase$[ebp]
	mov	DWORD PTR _pFlight$[ebp], eax

; 2150 : 
; 2151 : 		if(pFlight->GetUnitMission() == AMIS_TANKER) {

	mov	ecx, DWORD PTR _pFlight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pFlight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 28					; 0000001cH
	jne	SHORT $LN1@IsTCNTanke

; 2152 : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN3@IsTCNTanke
$LN1@IsTCNTanke:

; 2153 : 		}
; 2154 : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN3@IsTCNTanke
$LN2@IsTCNTanke:

; 2155 : 	}
; 2156 : 
; 2157 : 	return FALSE;

	xor	eax, eax
$LN3@IsTCNTanke:

; 2158 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsTCNTanker@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::IsTCNTanker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_ATCId$ = -24						; size = 8
_this$ = -16						; size = 4
_rwindex$ = -12						; size = 4
_playerAC$ = -8						; size = 4
_atc$ = -4						; size = 4
?SetIlsFromTacan@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::SetIlsFromTacan
; _this$ = ecx

; 2227 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2228 : 	VU_ID ATCId = FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR _ATCId$[ebp], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR _ATCId$[ebp+4], ecx

; 2229 : 	ObjectiveClass *atc;
; 2230 : 	int rwindex = 0;

	mov	DWORD PTR _rwindex$[ebp], 0

; 2231 : 	AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 2232 : 	if (playerAC && playerAC->IsSetFlag( MOTION_OWNSHIP )) {

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	$LN5@SetIlsFrom
	push	65536					; 00010000H
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?IsSetFlag@SimBaseClass@@QBEHH@Z	; SimBaseClass::IsSetFlag
	test	eax, eax
	je	$LN5@SetIlsFrom

; 2233 : 		// Find the VU_ID for the entity that the TACAN channel represents
; 2234 : 		GetTacanVUID(GetControlSrc(), &ATCId);

	lea	edx, DWORD PTR _ATCId$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ; NavigationSystem::GetTacanVUID

; 2235 : 
; 2236 : 		if (ATCId != FalconNullId) {

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	lea	ecx, DWORD PTR _ATCId$[ebp]
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@SetIlsFrom

; 2237 : 			// use the VU_ID to get the pointer to the airbase
; 2238 : 			atc = (ObjectiveClass*)vuDatabase->Find(ATCId);

	mov	ecx, DWORD PTR _ATCId$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _ATCId$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _atc$[ebp], eax

; 2239 : 			// is the objective selected actually an airbase??
; 2240 : 			if(atc && atc->IsObjective() && atc->EntityType()->classInfo_[VU_TYPE] == TYPE_AIRBASE){

	cmp	DWORD PTR _atc$[ebp], 0
	je	SHORT $LN5@SetIlsFrom
	mov	eax, DWORD PTR _atc$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _atc$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN5@SetIlsFrom
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN5@SetIlsFrom

; 2241 : 				// if so, figure out which runway player should use at selected airbase
; 2242 : 				rwindex = atc->brain->FindBestLandingRunway(playerAC, FALSE);

	push	0
	mov	eax, DWORD PTR _playerAC$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	mov	ecx, DWORD PTR [ecx+240]
	call	?FindBestLandingRunway@ATCBrain@@QAEHPAVFalconEntity@@H@Z ; ATCBrain::FindBestLandingRunway
	mov	DWORD PTR _rwindex$[ebp], eax

; 2243 : 				// sfr: only do if rwindex is valid
; 2244 : 				if (rwindex != 0){

	cmp	DWORD PTR _rwindex$[ebp], 0
	je	SHORT $LN5@SetIlsFrom

; 2245 : 					// and set the ILS data
; 2246 : 					/*gNavigationSys->*/SetIlsData(ATCId, rwindex);

	mov	edx, DWORD PTR _rwindex$[ebp]
	push	edx
	mov	eax, DWORD PTR _ATCId$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ATCId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsData@NavigationSystem@@QAEXVVU_ID@@H@Z ; NavigationSystem::SetIlsData
$LN5@SetIlsFrom:

; 2247 : 				}
; 2248 : 			}
; 2249 : 		}
; 2250 : 	}
; 2251 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetIlsFromTacan@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::SetIlsFromTacan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@NavigationSystem@@QAE?AW4Type@1@XZ PROC	; NavigationSystem::GetType
; _this$ = ecx

; 777  : NavigationSystem::Type NavigationSystem::GetType(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 778  : 
; 779  : 	if(mpCurrentMissionTacan) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1972], 0
	je	SHORT $LN2@GetType

; 780  : 		return mpCurrentMissionTacan->type;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@GetType

; 781  : 	}
; 782  : 	else {

	jmp	SHORT $LN3@GetType
$LN2@GetType:

; 783  : 		return TOTAL_TYPES;

	mov	eax, 3
$LN3@GetType:

; 784  : 	}
; 785  : 
; 786  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@NavigationSystem@@QAE?AW4Type@1@XZ ENDP	; NavigationSystem::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?GetCurrentID@NavigationSystem@@QAEXPAVVU_ID@@@Z PROC	; NavigationSystem::GetCurrentID
; _this$ = ecx

; 867  : void NavigationSystem::GetCurrentID(VU_ID* id) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 868  : 
; 869  : 	if(mpCurrentMissionTacan) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1972], 0
	je	SHORT $LN2@GetCurrent

; 870  : 		*id			= mpCurrentMissionTacan->pData->vuID;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 871  : 	}
; 872  : 	else {

	jmp	SHORT $LN3@GetCurrent
$LN2@GetCurrent:

; 873  : 		*id			= FalconNullId;

	mov	ecx, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+4], eax
$LN3@GetCurrent:

; 874  : 	}
; 875  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCurrentID@NavigationSystem@@QAEXPAVVU_ID@@@Z ENDP	; NavigationSystem::GetCurrentID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?GetHomeID@NavigationSystem@@QAEXPAVVU_ID@@@Z PROC	; NavigationSystem::GetHomeID
; _this$ = ecx

; 849  : void NavigationSystem::GetHomeID(VU_ID* id) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 850  : 	
; 851  : 	if(mpMissionTacans) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1968], 0
	je	SHORT $LN2@GetHomeID

; 852  : 		*id			= mpMissionTacans->pData->vuID;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1968]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 853  : 	}
; 854  : 	else {

	jmp	SHORT $LN3@GetHomeID
$LN2@GetHomeID:

; 855  : 		*id			= FalconNullId;

	mov	ecx, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+4], eax
$LN3@GetHomeID:

; 856  : 	}
; 857  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetHomeID@NavigationSystem@@QAEXPAVVU_ID@@@Z ENDP	; NavigationSystem::GetHomeID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StepNextTacan@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::StepNextTacan
; _this$ = ecx

; 825  : void NavigationSystem::StepNextTacan(void) {	// For ICP Only

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  : 	if(mpCurrentMissionTacan && mpCurrentMissionTacan->pData->vuID != FalconNullId) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1972], 0
	je	$LN4@StepNextTa
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	ecx, DWORD PTR [edx+8]
	add	ecx, 20					; 00000014H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@StepNextTa

; 828  : 
; 829  : 		if(mpCurrentMissionTacan->pNext == NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN2@StepNextTa

; 830  : 			mpCurrentMissionTacan = mpMissionTacans;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1968]
	mov	DWORD PTR [eax+1972], edx

; 831  : 		}
; 832  : 		else {

	jmp	SHORT $LN1@StepNextTa
$LN2@StepNextTa:

; 833  : 			mpCurrentMissionTacan = mpCurrentMissionTacan->pNext;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1972]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+1972], eax
$LN1@StepNextTa:

; 834  : 		}
; 835  : 
; 836  : 		CopyMissionTCNData(&mpCurrentTCN[ICP], mpCurrentMissionTacan);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	push	edx
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z ; NavigationSystem::CopyMissionTCNData

; 837  : 		SetDomain(mpCurrentMissionTacan->type);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1972]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z ; NavigationSystem::SetDomain
$LN4@StepNextTa:

; 838  : 	}
; 839  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?StepNextTacan@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::StepNextTacan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_p_current$ = -8					; size = 4
_this$ = -4						; size = 4
?StepPreviousTacan@NavigationSystem@@QAEXXZ PROC	; NavigationSystem::StepPreviousTacan
; _this$ = ecx

; 794  : void NavigationSystem::StepPreviousTacan(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 795  : 
; 796  : 	Tacan_Data_LL_Str*	p_current;
; 797  : 
; 798  : 	if(mpCurrentMissionTacan && mpCurrentMissionTacan->pData->vuID != FalconNullId) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1972], 0
	je	$LN6@StepPrevio
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	ecx, DWORD PTR [edx+8]
	add	ecx, 20					; 00000014H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN6@StepPrevio

; 799  : 		if(mpCurrentMissionTacan->pPrevious == NULL) {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN4@StepPrevio

; 800  : 
; 801  : 			p_current	= mpMissionTacans;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1968]
	mov	DWORD PTR _p_current$[ebp], ecx
$LN3@StepPrevio:

; 802  : 			while(p_current->pNext != NULL) {

	mov	edx, DWORD PTR _p_current$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@StepPrevio

; 803  : 				p_current = p_current->pNext;

	mov	eax, DWORD PTR _p_current$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p_current$[ebp], ecx

; 804  : 			}

	jmp	SHORT $LN3@StepPrevio
$LN2@StepPrevio:

; 805  : 
; 806  : 			mpCurrentMissionTacan = p_current;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p_current$[ebp]
	mov	DWORD PTR [edx+1972], eax

; 807  : 		}
; 808  : 		else {

	jmp	SHORT $LN1@StepPrevio
$LN4@StepPrevio:

; 809  : 			mpCurrentMissionTacan = mpCurrentMissionTacan->pPrevious;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+1972], ecx
$LN1@StepPrevio:

; 810  : 		}
; 811  : 
; 812  : 		CopyMissionTCNData(&mpCurrentTCN[ICP], mpCurrentMissionTacan);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1972]
	push	eax
	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z ; NavigationSystem::CopyMissionTCNData

; 813  : 		SetDomain(mpCurrentMissionTacan->type);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z ; NavigationSystem::SetDomain
$LN6@StepPrevio:

; 814  : 	}
; 815  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?StepPreviousTacan@NavigationSystem@@QAEXXZ ENDP	; NavigationSystem::StepPreviousTacan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?StepTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::StepTacanBand
; _this$ = ecx

; 2014 : void NavigationSystem::StepTacanBand(Tacan_Channel_Src src) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2015 : 
; 2016 : 	VU_ID			vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 2017 : 
; 2018 : 	if(mpCurrentTCN[src].set == TacanList::X) {

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1836], 0
	jne	SHORT $LN2@StepTacanB

; 2019 : 		mpCurrentTCN[src].set = TacanList::Y;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+1836], 1

; 2020 : 	}
; 2021 : 	else {

	jmp	SHORT $LN1@StepTacanB
$LN2@StepTacanB:

; 2022 : 		mpCurrentTCN[src].set = TacanList::X;

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+1836], 0
$LN1@StepTacanB:

; 2023 : 	}
; 2024 : 
; 2025 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 2026 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1856]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1852]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1848]
	push	edx
	lea	eax, DWORD PTR _vuID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1836]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 2027 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+edx+1840], ecx
	mov	ecx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+edx+1844], ecx

; 2028 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 2029 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan

; 2030 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?StepTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::StepTacanBand
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_digit$ = 12						; size = 4
_direction$ = 16					; size = 4
?StepTacanChannelDigit@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z PROC ; NavigationSystem::StepTacanChannelDigit
; _this$ = ecx

; 1969 : void NavigationSystem::StepTacanChannelDigit(Tacan_Channel_Src src, int digit, int direction) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1970 : 
; 1971 : 	if(digit < 0 || digit > 2)

	cmp	DWORD PTR _digit$[ebp], 0
	jl	SHORT $LN7@StepTacanC
	cmp	DWORD PTR _digit$[ebp], 2
	jle	SHORT $LN8@StepTacanC
$LN7@StepTacanC:

; 1972 : 	{
; 1973 : 		// Tacan Channels have between one and three digits.
; 1974 : 		// Element #2 = MSDigit, Element #0 = LSDigit
; 1975 : 		ShiWarning ("Bad TACAN Step");
; 1976 : 		return;

	jmp	$LN9@StepTacanC
$LN8@StepTacanC:

; 1977 : 	}
; 1978 : 															
; 1979 : 	VU_ID			vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1980 : 
; 1981 : 	//JPO rewrite to step in either direction.
; 1982 : 	// increment/decrement first, ask questions later.
; 1983 : 	mpCurrentTCN[src].digits[digit]	+= direction;			// Set the element to the appropiate value

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4+4]
	add	ecx, DWORD PTR _direction$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [eax+edx+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	mov	DWORD PTR [edx+eax*4+4], ecx

; 1984 : 
; 1985 : 	if(digit == 2) { // can only be 0 or 1.

	cmp	DWORD PTR _digit$[ebp], 2
	jne	SHORT $LN6@StepTacanC

; 1986 : 	    if (mpCurrentTCN[src].digits[digit] < 0) mpCurrentTCN[src].digits[digit] = 1;

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	mov	ecx, DWORD PTR _digit$[ebp]
	cmp	DWORD PTR [eax+ecx*4+4], 0
	jge	SHORT $LN5@StepTacanC
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, DWORD PTR _digit$[ebp]
	mov	DWORD PTR [ecx+edx*4+4], 1
$LN5@StepTacanC:

; 1987 : 	    if (mpCurrentTCN[src].digits[digit] > 1) mpCurrentTCN[src].digits[digit] = 0;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	cmp	DWORD PTR [edx+eax*4+4], 1
	jle	SHORT $LN4@StepTacanC
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	mov	ecx, DWORD PTR _digit$[ebp]
	mov	DWORD PTR [eax+ecx*4+4], 0
$LN4@StepTacanC:

; 1988 : 	}
; 1989 : 	else {

	jmp	SHORT $LN3@StepTacanC
$LN6@StepTacanC:

; 1990 : 	    if (mpCurrentTCN[src].digits[digit] < 0) mpCurrentTCN[src].digits[digit] = 9;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, DWORD PTR _digit$[ebp]
	cmp	DWORD PTR [ecx+edx*4+4], 0
	jge	SHORT $LN2@StepTacanC
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	mov	DWORD PTR [edx+eax*4+4], 9
$LN2@StepTacanC:

; 1991 : 	    if (mpCurrentTCN[src].digits[digit] > 9) mpCurrentTCN[src].digits[digit] = 0;

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	mov	ecx, DWORD PTR _digit$[ebp]
	cmp	DWORD PTR [eax+ecx*4+4], 9
	jle	SHORT $LN3@StepTacanC
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, DWORD PTR _digit$[ebp]
	mov	DWORD PTR [ecx+edx*4+4], 0
$LN3@StepTacanC:

; 1992 : 
; 1993 : 	}
; 1994 : 
; 1995 : 	mpCurrentTCN[src].channel			=	mpCurrentTCN[src].digits[2] * 100 +		// Set the update the channel in the struct
; 1996 : 													mpCurrentTCN[src].digits[1] * 10 +
; 1997 : 													mpCurrentTCN[src].digits[0];

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR [edx+eax+4]
	imul	ecx, 100				; 00000064H
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [eax+edx+1820]
	mov	eax, 4
	shl	eax, 0
	mov	edx, DWORD PTR [edx+eax+4]
	imul	edx, 10					; 0000000aH
	add	ecx, edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+eax+1820]
	mov	edx, 4
	imul	edx, 0
	add	ecx, DWORD PTR [eax+edx+4]
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax+1820], ecx

; 1998 : 
; 1999 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 2000 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1856]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1852]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1848]
	push	edx
	lea	eax, DWORD PTR _vuID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1836]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 2001 : 	mpCurrentTCN[src].vuID				= vuID;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+edx+1840], ecx
	mov	ecx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+edx+1844], ecx

; 2002 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 2003 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN9@StepTacanC:

; 2004 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?StepTacanChannelDigit@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z ENDP ; NavigationSystem::StepTacanChannelDigit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_p_vuID$ = 12						; size = 4
?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z PROC ; NavigationSystem::GetTacanVUID
; _this$ = ecx

; 2041 : void NavigationSystem::GetTacanVUID(Tacan_Channel_Src src, VU_ID* p_vuID) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2042 : 
; 2043 : 	if(src == ICP) {

	cmp	DWORD PTR _src$[ebp], 0
	jne	SHORT $LN2@GetTacanVU

; 2044 : 		*p_vuID = mpCurrentTCN[0].vuID;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+1840]
	mov	eax, DWORD PTR [ecx+eax+1844]
	mov	ecx, DWORD PTR _p_vuID$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 2045 : 	}
; 2046 : 	else {

	jmp	SHORT $LN3@GetTacanVU
$LN2@GetTacanVU:

; 2047 : 		*p_vuID = mpCurrentTCN[1].vuID;

	mov	edx, 40					; 00000028H
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1840]
	mov	edx, DWORD PTR [eax+edx+1844]
	mov	eax, DWORD PTR _p_vuID$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
$LN3@GetTacanVU:

; 2048 : 	}
; 2049 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetTacanVUID@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAVVU_ID@@@Z ENDP ; NavigationSystem::GetTacanVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::GetTacanBand
; _this$ = ecx

; 1898 : TacanList::StationSet NavigationSystem::GetTacanBand(Tacan_Channel_Src src) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1899 : 	
; 1900 : 	return mpCurrentTCN[src].set;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+1836]

; 1901 : 
; 1902 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::GetTacanBand
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_set$ = 12						; size = 4
?SetTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4StationSet@TacanList@@@Z PROC ; NavigationSystem::SetTacanBand
; _this$ = ecx

; 1872 : void NavigationSystem::SetTacanBand(Tacan_Channel_Src src, TacanList::StationSet set) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1873 : 
; 1874 : 	if(set != TacanList::X && set != TacanList::Y)

	cmp	DWORD PTR _set$[ebp], 0
	je	SHORT $LN1@SetTacanBa
	cmp	DWORD PTR _set$[ebp], 1
	je	SHORT $LN1@SetTacanBa

; 1875 : 	{
; 1876 : 		ShiWarning ("Bad TACAN Band");
; 1877 : 		return;

	jmp	$LN2@SetTacanBa
$LN1@SetTacanBa:

; 1878 : 	}
; 1879 : 
; 1880 : 	VU_ID		vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1881 : 
; 1882 : 	mpCurrentTCN[src].set	= set;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _set$[ebp]
	mov	DWORD PTR [ecx+eax+1836], edx

; 1883 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 1884 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1856]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1852]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1848]
	push	edx
	lea	eax, DWORD PTR _vuID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1836]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1885 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+edx+1840], ecx
	mov	ecx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+edx+1844], ecx

; 1886 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1887 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN2@SetTacanBa:

; 1888 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTacanBand@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4StationSet@TacanList@@@Z ENDP ; NavigationSystem::SetTacanBand
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_channel$ = 12						; size = 4
_set$ = 16						; size = 4
?GetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAHPAW4StationSet@TacanList@@@Z PROC ; NavigationSystem::GetTacanChannel
; _this$ = ecx

; 1955 : void NavigationSystem::GetTacanChannel(Tacan_Channel_Src src, int* channel, TacanList::StationSet* set) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1956 : 	
; 1957 : 	*channel = mpCurrentTCN[src].channel;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _channel$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+1820]
	mov	DWORD PTR [ecx], eax

; 1958 : 	*set		= mpCurrentTCN[src].set;

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _set$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+1836]
	mov	DWORD PTR [edx], ecx

; 1959 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@PAHPAW4StationSet@TacanList@@@Z ENDP ; NavigationSystem::GetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_channel$ = 12						; size = 4
_set$ = 16						; size = 4
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@@Z PROC ; NavigationSystem::SetTacanChannel
; _this$ = ecx

; 1912 : void NavigationSystem::SetTacanChannel(Tacan_Channel_Src src, int channel, TacanList::StationSet set) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1913 : 
; 1914 : 	if(channel < 1 || channel > 126) {				// Tacan Channels are numbered 1 to 126

	cmp	DWORD PTR _channel$[ebp], 1
	jl	SHORT $LN2@SetTacanCh
	cmp	DWORD PTR _channel$[ebp], 126		; 0000007eH
	jle	SHORT $LN3@SetTacanCh
$LN2@SetTacanCh:

; 1915 : 		ShiWarning ("Bad TACAN Number");
; 1916 : 		return;

	jmp	$LN4@SetTacanCh
$LN3@SetTacanCh:

; 1917 : 	}
; 1918 : 
; 1919 : 	if(set != TacanList::X && set != TacanList::Y)

	cmp	DWORD PTR _set$[ebp], 0
	je	SHORT $LN1@SetTacanCh
	cmp	DWORD PTR _set$[ebp], 1
	je	SHORT $LN1@SetTacanCh

; 1920 : 	{
; 1921 : 		ShiWarning ("Bad TACAN Band");
; 1922 : 		return;

	jmp	$LN4@SetTacanCh
$LN1@SetTacanCh:

; 1923 : 	}
; 1924 : 
; 1925 : 	VU_ID				vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1926 : 	
; 1927 : 	mpCurrentTCN[src].channel	= channel;		// Set the new channel

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [ecx+eax+1820], edx

; 1928 : 
; 1929 : 															// Break up into digits
; 1930 : 	mpCurrentTCN[src].digits[2]	= channel / 100;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1820]
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR [edx+ecx+4], eax

; 1931 : 	channel								= channel - mpCurrentTCN[src].digits[2] * 100;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 1932 : 	mpCurrentTCN[src].digits[1]	= channel / 10;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1820]
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR [edx+ecx+4], eax

; 1933 : 	channel								= channel - mpCurrentTCN[src].digits[1] * 10;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 1934 : 	mpCurrentTCN[src].digits[0]	= channel;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [ecx+edx+4], eax

; 1935 : 
; 1936 : 	mpCurrentTCN[src].set	= set;

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _set$[ebp]
	mov	DWORD PTR [edx+ecx+1836], eax

; 1937 : 
; 1938 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 1939 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1856]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1852]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1848]
	push	eax
	lea	ecx, DWORD PTR _vuID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1836]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1820]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1940 : 
; 1941 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [ecx+eax+1840], edx
	mov	edx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [ecx+eax+1844], edx

; 1942 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1943 : 	// sfr: wooooa, we are creating gNavigationSys here, how can we use it???
; 1944 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN4@SetTacanCh:

; 1945 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@@Z ENDP ; NavigationSystem::SetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::GetTacanChannel
; _this$ = ecx

; 1858 : int NavigationSystem::GetTacanChannel(Tacan_Channel_Src src) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1859 : 
; 1860 : 	return mpCurrentTCN[src].channel;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+1820]

; 1861 : 
; 1862 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::GetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_channel$ = 12						; size = 4
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@H@Z PROC ; NavigationSystem::SetTacanChannel
; _this$ = ecx

; 1824 : void NavigationSystem::SetTacanChannel(Tacan_Channel_Src src, int channel) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1825 : 	
; 1826 : 
; 1827 : 	if(channel < 1 || channel > 126) {				// Tacan Channels are numbered 1 to 126

	cmp	DWORD PTR _channel$[ebp], 1
	jl	SHORT $LN1@SetTacanCh
	cmp	DWORD PTR _channel$[ebp], 126		; 0000007eH
	jle	SHORT $LN2@SetTacanCh
$LN1@SetTacanCh:

; 1828 : 		ShiWarning ("Bad TACAN Channel");
; 1829 : 		return;

	jmp	$LN3@SetTacanCh
$LN2@SetTacanCh:

; 1830 : 	}
; 1831 : 
; 1832 : 	VU_ID				vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1833 : 	
; 1834 : 	mpCurrentTCN[src].channel	= channel;		// Set the new channel

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [ecx+eax+1820], edx

; 1835 : 
; 1836 : 															// Break up into digits
; 1837 : 	mpCurrentTCN[src].digits[2]	= channel / 100;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1820]
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR [edx+ecx+4], eax

; 1838 : 	channel								= channel - mpCurrentTCN[src].digits[2] * 100;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 1839 : 	mpCurrentTCN[src].digits[1]	= channel / 10;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1820]
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR [edx+ecx+4], eax

; 1840 : 	channel								= channel - mpCurrentTCN[src].digits[1] * 10;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 1841 : 	mpCurrentTCN[src].digits[0]	= channel;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [ecx+edx+4], eax

; 1842 : 												
; 1843 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 1844 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1856]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1852]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1848]
	push	eax
	lea	ecx, DWORD PTR _vuID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1836]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1820]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1845 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [ecx+eax+1840], edx
	mov	edx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [ecx+eax+1844], edx

; 1846 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1847 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN3@SetTacanCh:

; 1848 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@H@Z ENDP ; NavigationSystem::SetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_digit$ = 12						; size = 4
?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z PROC ; NavigationSystem::GetTacanChannel
; _this$ = ecx

; 1811 : int NavigationSystem::GetTacanChannel(Tacan_Channel_Src src, int digit) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1812 : 	
; 1813 : 	return mpCurrentTCN[src].digits[digit];

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	mov	eax, DWORD PTR [edx+eax*4+4]

; 1814 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ENDP ; NavigationSystem::GetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_digit$ = 12						; size = 4
_value$ = 16						; size = 4
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z PROC ; NavigationSystem::SetTacanChannel
; _this$ = ecx

; 1724 : void NavigationSystem::SetTacanChannel(Tacan_Channel_Src src, int digit, int value) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1725 : 
; 1726 : 	if(digit < 0 || digit > 2)

	cmp	DWORD PTR _digit$[ebp], 0
	jl	SHORT $LN3@SetTacanCh
	cmp	DWORD PTR _digit$[ebp], 2
	jle	SHORT $LN4@SetTacanCh
$LN3@SetTacanCh:

; 1727 : 	{															// Tacan Channels have between one and three digits.
; 1728 : 		ShiWarning ("Too many digits");					// Element #2 = MSDigit, Element #0 = LSDigit
; 1729 : 		return;

	jmp	$LN5@SetTacanCh
$LN4@SetTacanCh:

; 1730 : 	}
; 1731 : 
; 1732 : 	if(digit == 2 && (value < 0 || value > 1))

	cmp	DWORD PTR _digit$[ebp], 2
	jne	SHORT $LN2@SetTacanCh
	cmp	DWORD PTR _value$[ebp], 0
	jl	SHORT $LN1@SetTacanCh
	cmp	DWORD PTR _value$[ebp], 1
	jle	SHORT $LN2@SetTacanCh
$LN1@SetTacanCh:

; 1733 : 	{	// Element #2 can only take values of 0 or 1
; 1734 : 		ShiWarning ("Bad TACAN Number");
; 1735 : 		return;

	jmp	$LN5@SetTacanCh
$LN2@SetTacanCh:

; 1736 : 	}
; 1737 : 
; 1738 : 	VU_ID		vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1739 : 
; 1740 : 	mpCurrentTCN[src].digits[digit]	= value;											// Set the element to the appropiate value

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	mov	eax, DWORD PTR _digit$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx+eax*4+4], ecx

; 1741 : 	mpCurrentTCN[src].channel			=	mpCurrentTCN[src].digits[2] * 100 +		// Set the update the channel in the struct
; 1742 : 													mpCurrentTCN[src].digits[1] * 10 +
; 1743 : 													mpCurrentTCN[src].digits[0];

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1820]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+1820]
	mov	edx, 4
	shl	edx, 0
	mov	ecx, DWORD PTR [ecx+edx+4]
	imul	ecx, 10					; 0000000aH
	add	eax, ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1820]
	mov	ecx, 4
	imul	ecx, 0
	add	eax, DWORD PTR [edx+ecx+4]
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx+1820], eax

; 1744 : 
; 1745 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 1746 : 	    	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1856]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1852]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1848]
	push	ecx
	lea	edx, DWORD PTR _vuID$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+1836]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+1820]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1747 : 	mpCurrentTCN[src].vuID	= vuID;	

	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [edx+ecx+1840], eax
	mov	eax, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [edx+ecx+1844], eax

; 1748 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1749 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN5@SetTacanCh:

; 1750 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HH@Z ENDP ; NavigationSystem::SetTacanChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = -40					; size = 4
_longitude$ = -36					; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
tv131 = -24						; size = 4
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_arriveTime$ = 24					; size = 4
?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z PROC ; NavigationSystem::SetVRPOAPoint
; _this$ = ecx

; 1471 : {	

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1472 : 	float latitude;
; 1473 : 	float longitude;
; 1474 : 
; 1475 : 	if(mpVRPOA[mCurrentVRPOA].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1600]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1688], 0
	je	SHORT $LN1@SetVRPOAPo

; 1476 : 		delete mpVRPOA[mCurrentVRPOA].pWaypoint;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1600]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1688]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@SetVRPOAPo:

; 1477 : 
; 1478 : 	mpVRPOA[mCurrentVRPOA].pWaypoint		= new WayPointClass(0, 0, 0, 0, 0, 0, 0, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN4@SetVRPOAPo
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN5@SetVRPOAPo
$LN4@SetVRPOAPo:
	mov	DWORD PTR tv131[ebp], 0
$LN5@SetVRPOAPo:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1600]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+1688], eax

; 1479 : 	mpVRPOA[mCurrentVRPOA].pWaypoint->SetLocation(x, y, z);

	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1600]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1688]
	call	?SetLocation@WayPointClass@@QAEXMMM@Z	; WayPointClass::SetLocation

; 1480 : 	//Needed?
; 1481 : 	//mpVRPOA[mCurrentVRPOA].pWaypoint->SetWPArrive(arriveTime);
; 1482 : 
; 1483 : 	
; 1484 : 	mpVRPOA[mCurrentVRPOA].pointType		= type;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1600]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax+edx+1604], ecx

; 1485 : 
; 1486 : 	ApproxLatLong(x, y, &latitude, &longitude);

	lea	edx, DWORD PTR _longitude$[ebp]
	push	edx
	lea	eax, DWORD PTR _latitude$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?ApproxLatLong@@YAXMMPAM0@Z		; ApproxLatLong
	add	esp, 16					; 00000010H

; 1487 : 	BuildLatLongStr(latitude, longitude, mpVRPOA[mCurrentVRPOA].pLatStr, mpVRPOA[mCurrentVRPOA].pLongStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1600]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1648]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1600]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1608]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?BuildLatLongStr@@YAXMMPAD0@Z		; BuildLatLongStr
	add	esp, 16					; 00000010H

; 1488 : 	SimDriver.GetPlayerAircraft()->FCC->waypointStepCmd = 127;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	eax, DWORD PTR [eax+936]
	mov	BYTE PTR [eax+194], 127			; 0000007fH

; 1489 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetVRPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ENDP ; NavigationSystem::SetVRPOAPoint
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVRPOAIndex@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::GetVRPOAIndex
; _this$ = ecx

; 1233 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1234 : 	return mCurrentVRPOA;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1600]

; 1235 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetVRPOAIndex@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::GetVRPOAIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_ppwayPoint$ = 12					; size = 4
?GetVRPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetVRPOAPoint
; _this$ = ecx

; 1337 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1338 :    if (mpVRPOA[index].pWaypoint)

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1688], 0
	je	SHORT $LN2@GetVRPOAPo

; 1339 : 	   *ppwayPoint = mpVRPOA[index].pWaypoint;	

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx+1688]
	mov	DWORD PTR [eax], edx

; 1340 :    else

	jmp	SHORT $LN3@GetVRPOAPo
$LN2@GetVRPOAPo:

; 1341 :       *ppwayPoint = NULL;

	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetVRPOAPo:

; 1342 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetVRPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetVRPOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppwayPoint$ = 8					; size = 4
?GetVRPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetVRPOAPoint
; _this$ = ecx

; 1384 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1385 :    if (mpVRPOA[mCurrentMark].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1688], 0
	je	SHORT $LN2@GetVRPOAPo

; 1386 : 	   *ppwayPoint = mpVRPOA[mCurrentMark].pWaypoint;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+1688]
	mov	DWORD PTR [edx], ecx

; 1387 :    else

	jmp	SHORT $LN3@GetVRPOAPo
$LN2@GetVRPOAPo:

; 1388 :       *ppwayPoint = NULL;

	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@GetVRPOAPo:

; 1389 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetVRPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetVRPOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppointType$ = 8					; size = 4
_platStr$ = 12						; size = 4
_plongStr$ = 16						; size = 4
?GetVRPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z PROC ; NavigationSystem::GetVRPOA
; _this$ = ecx

; 1285 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1286 : 	*platStr	= NULL;

	mov	eax, DWORD PTR _platStr$[ebp]
	mov	BYTE PTR [eax], 0

; 1287 : 	*plongStr	= NULL;

	mov	ecx, DWORD PTR _plongStr$[ebp]
	mov	BYTE PTR [ecx], 0

; 1288 : 
; 1289 : 	*ppointType	= mpVRPOA[mCurrentVRPOA].pointType;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1600]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _ppointType$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+1604]
	mov	DWORD PTR [ecx], eax

; 1290 : 
; 1291 : 	strcpy(platStr, mpVIPOA[mCurrentVRPOA].pLatStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1600]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1428]
	push	ecx
	mov	edx, DWORD PTR _platStr$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1292 : 	strcpy(plongStr, mpVIPOA[mCurrentVRPOA].pLongStr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1600]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1468]
	push	eax
	mov	ecx, DWORD PTR _plongStr$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1293 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetVRPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ENDP ; NavigationSystem::GetVRPOA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = -40					; size = 4
_longitude$ = -36					; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
tv131 = -24						; size = 4
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_arriveTime$ = 24					; size = 4
?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z PROC ; NavigationSystem::SetVIPOAPoint
; _this$ = ecx

; 1447 : {	

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1448 : 	float latitude;
; 1449 : 	float longitude;
; 1450 : 
; 1451 : 	if(mpVIPOA[mCurrentVIPOA].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1420]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1508], 0
	je	SHORT $LN1@SetVIPOAPo

; 1452 : 		delete mpVIPOA[mCurrentVIPOA].pWaypoint;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1420]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1508]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@SetVIPOAPo:

; 1453 : 
; 1454 : 	mpVIPOA[mCurrentVIPOA].pWaypoint		= new WayPointClass(0, 0, 0, 0, 0, 0, 0, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN4@SetVIPOAPo
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN5@SetVIPOAPo
$LN4@SetVIPOAPo:
	mov	DWORD PTR tv131[ebp], 0
$LN5@SetVIPOAPo:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1420]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+1508], eax

; 1455 : 	mpVIPOA[mCurrentVIPOA].pWaypoint->SetLocation(x, y, z);

	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1420]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1508]
	call	?SetLocation@WayPointClass@@QAEXMMM@Z	; WayPointClass::SetLocation

; 1456 : 	//Needed?
; 1457 : 	//mpVIPOA[mCurrentVIPOA].pWaypoint->SetWPArrive(arriveTime);
; 1458 : 
; 1459 : 	
; 1460 : 	mpVIPOA[mCurrentVIPOA].pointType		= type;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1420]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax+edx+1424], ecx

; 1461 : 
; 1462 : 	ApproxLatLong(x, y, &latitude, &longitude);

	lea	edx, DWORD PTR _longitude$[ebp]
	push	edx
	lea	eax, DWORD PTR _latitude$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?ApproxLatLong@@YAXMMPAM0@Z		; ApproxLatLong
	add	esp, 16					; 00000010H

; 1463 : 	BuildLatLongStr(latitude, longitude, mpVIPOA[mCurrentVIPOA].pLatStr, mpVIPOA[mCurrentVIPOA].pLongStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1420]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1468]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1420]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1428]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?BuildLatLongStr@@YAXMMPAD0@Z		; BuildLatLongStr
	add	esp, 16					; 00000010H

; 1464 : 	SimDriver.GetPlayerAircraft()->FCC->waypointStepCmd = 127;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	eax, DWORD PTR [eax+936]
	mov	BYTE PTR [eax+194], 127			; 0000007fH

; 1465 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetVIPOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ENDP ; NavigationSystem::SetVIPOAPoint
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVIPOAIndex@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::GetVIPOAIndex
; _this$ = ecx

; 1225 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1226 : 	return mCurrentVIPOA;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1420]

; 1227 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetVIPOAIndex@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::GetVIPOAIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_ppwayPoint$ = 12					; size = 4
?GetVIPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetVIPOAPoint
; _this$ = ecx

; 1326 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1327 :    if (mpVIPOA[index].pWaypoint)

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1508], 0
	je	SHORT $LN2@GetVIPOAPo

; 1328 : 	   *ppwayPoint = mpVIPOA[index].pWaypoint;	

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx+1508]
	mov	DWORD PTR [eax], edx

; 1329 :    else

	jmp	SHORT $LN3@GetVIPOAPo
$LN2@GetVIPOAPo:

; 1330 :       *ppwayPoint = NULL;

	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetVIPOAPo:

; 1331 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetVIPOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetVIPOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppwayPoint$ = 8					; size = 4
?GetVIPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetVIPOAPoint
; _this$ = ecx

; 1373 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1374 :    if (mpVIPOA[mCurrentMark].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1508], 0
	je	SHORT $LN2@GetVIPOAPo

; 1375 : 	   *ppwayPoint = mpVIPOA[mCurrentMark].pWaypoint;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+1508]
	mov	DWORD PTR [edx], ecx

; 1376 :    else

	jmp	SHORT $LN3@GetVIPOAPo
$LN2@GetVIPOAPo:

; 1377 :       *ppwayPoint = NULL;

	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@GetVIPOAPo:

; 1378 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetVIPOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetVIPOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppointType$ = 8					; size = 4
_platStr$ = 12						; size = 4
_plongStr$ = 16						; size = 4
?GetVIPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z PROC ; NavigationSystem::GetVIPOA
; _this$ = ecx

; 1271 : {	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1272 : 	*platStr	= NULL;

	mov	eax, DWORD PTR _platStr$[ebp]
	mov	BYTE PTR [eax], 0

; 1273 : 	*plongStr	= NULL;

	mov	ecx, DWORD PTR _plongStr$[ebp]
	mov	BYTE PTR [ecx], 0

; 1274 : 
; 1275 : 	*ppointType	= mpVIPOA[mCurrentVIPOA].pointType;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1420]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _ppointType$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+1424]
	mov	DWORD PTR [ecx], eax

; 1276 : 
; 1277 : 	strcpy(platStr, mpVIPOA[mCurrentVIPOA].pLatStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1420]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1428]
	push	ecx
	mov	edx, DWORD PTR _platStr$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1278 : 	strcpy(plongStr, mpVIPOA[mCurrentVIPOA].pLongStr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1420]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1468]
	push	eax
	mov	ecx, DWORD PTR _plongStr$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1279 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetVIPOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ENDP ; NavigationSystem::GetVIPOA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = -40					; size = 4
_longitude$ = -36					; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
tv93 = -24						; size = 4
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_number$ = 24						; size = 4
?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z PROC ; NavigationSystem::SetDESTOAPoint
; _this$ = ecx

; 1426 : {	

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1427 : 	float latitude;
; 1428 : 	float longitude;
; 1429 : 
; 1430 : 	if(mpDESTOA[number].pWaypoint)

	mov	eax, DWORD PTR _number$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1240], 0
	je	SHORT $LN1@SetDESTOAP

; 1431 : 		delete mpDESTOA[number].pWaypoint;

	mov	edx, DWORD PTR _number$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1240]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@SetDESTOAP:

; 1432 : 
; 1433 : 	mpDESTOA[number].pWaypoint		= new WayPointClass(0, 0, 0, 0, 0, 0, 0, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN4@SetDESTOAP
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN5@SetDESTOAP
$LN4@SetDESTOAP:
	mov	DWORD PTR tv93[ebp], 0
$LN5@SetDESTOAP:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _number$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+1240], eax

; 1434 : 	mpDESTOA[number].pWaypoint->SetLocation(x, y, z);

	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _number$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+1240]
	call	?SetLocation@WayPointClass@@QAEXMMM@Z	; WayPointClass::SetLocation

; 1435 : 	
; 1436 : 	mpDESTOA[number].pointType		= type;

	mov	eax, DWORD PTR _number$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [ecx+eax+1156], edx

; 1437 : 
; 1438 : 	ApproxLatLong(x, y, &latitude, &longitude);

	lea	eax, DWORD PTR _longitude$[ebp]
	push	eax
	lea	ecx, DWORD PTR _latitude$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?ApproxLatLong@@YAXMMPAM0@Z		; ApproxLatLong
	add	esp, 16					; 00000010H

; 1439 : 	BuildLatLongStr(latitude, longitude, mpDESTOA[number].pLatStr, mpDESTOA[number].pLongStr);

	mov	edx, DWORD PTR _number$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1200]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1160]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?BuildLatLongStr@@YAXMMPAD0@Z		; BuildLatLongStr
	add	esp, 16					; 00000010H

; 1440 : 	SimDriver.GetPlayerAircraft()->FCC->waypointStepCmd = 127;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	edx, DWORD PTR [eax+936]
	mov	BYTE PTR [edx+194], 127			; 0000007fH

; 1441 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetDESTOAPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMH@Z ENDP ; NavigationSystem::SetDESTOAPoint
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDESTOAIndex@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::GetDESTOAIndex
; _this$ = ecx

; 1217 : {	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1218 : 	return mCurrentDESTOA;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1152]

; 1219 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDESTOAIndex@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::GetDESTOAIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_ppwayPoint$ = 12					; size = 4
?GetDESTOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetDESTOAPoint
; _this$ = ecx

; 1315 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1316 :    if (mpDESTOA[index].pWaypoint)

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1240], 0
	je	SHORT $LN2@GetDESTOAP

; 1317 : 	   *ppwayPoint = mpDESTOA[index].pWaypoint;	

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx+1240]
	mov	DWORD PTR [eax], edx

; 1318 :    else

	jmp	SHORT $LN3@GetDESTOAP
$LN2@GetDESTOAP:

; 1319 :       *ppwayPoint = NULL;

	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetDESTOAP:

; 1320 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetDESTOAPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetDESTOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppwayPoint$ = 8					; size = 4
?GetDESTOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetDESTOAPoint
; _this$ = ecx

; 1362 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1363 :    if (mpDESTOA[mCurrentMark].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1240], 0
	je	SHORT $LN2@GetDESTOAP

; 1364 : 	   *ppwayPoint = mpDESTOA[mCurrentMark].pWaypoint;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+1240]
	mov	DWORD PTR [edx], ecx

; 1365 :    else

	jmp	SHORT $LN3@GetDESTOAP
$LN2@GetDESTOAP:

; 1366 :       *ppwayPoint = NULL;

	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@GetDESTOAP:

; 1367 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDESTOAPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetDESTOAPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppointType$ = 8					; size = 4
_platStr$ = 12						; size = 4
_plongStr$ = 16						; size = 4
?GetDESTOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z PROC ; NavigationSystem::GetDESTOA
; _this$ = ecx

; 1257 : {	

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1258 : 	*platStr	= NULL;

	mov	eax, DWORD PTR _platStr$[ebp]
	mov	BYTE PTR [eax], 0

; 1259 : 	*plongStr	= NULL;

	mov	ecx, DWORD PTR _plongStr$[ebp]
	mov	BYTE PTR [ecx], 0

; 1260 : 
; 1261 : 	*ppointType	= mpDESTOA[mCurrentDESTOA].pointType;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1152]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _ppointType$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+1156]
	mov	DWORD PTR [ecx], eax

; 1262 : 
; 1263 : 	strcpy(platStr, mpDESTOA[mCurrentDESTOA].pLatStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1152]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1160]
	push	ecx
	mov	edx, DWORD PTR _platStr$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1264 : 	strcpy(plongStr, mpDESTOA[mCurrentDESTOA].pLongStr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1152]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1200]
	push	eax
	mov	ecx, DWORD PTR _plongStr$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1265 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetDESTOA@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ENDP ; NavigationSystem::GetDESTOA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDLinkIndex@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::GetDLinkIndex
; _this$ = ecx

; 1680 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1681 : 	return mCurrentDLink;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+888]

; 1682 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDLinkIndex@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::GetDLinkIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GotoNextDLink@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::GotoNextDLink
; _this$ = ecx

; 1706 : void NavigationSystem::GotoNextDLink(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1707 : 
; 1708 : 	if(mCurrentDLink == MAX_DLINKPOINTS - 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+888], 4
	jne	SHORT $LN2@GotoNextDL

; 1709 : 		mCurrentDLink = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+888], 0

; 1710 : 	else 

	jmp	SHORT $LN3@GotoNextDL
$LN2@GotoNextDL:

; 1711 : 		mCurrentDLink++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+888]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+888], eax
$LN3@GotoNextDL:

; 1712 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GotoNextDLink@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::GotoNextDLink
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GotoPrevDLink@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::GotoPrevDLink
; _this$ = ecx

; 1690 : void NavigationSystem::GotoPrevDLink(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1691 : 
; 1692 : 	if(mCurrentDLink == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+888], 0
	jne	SHORT $LN2@GotoPrevDL

; 1693 : 		mCurrentDLink = MAX_DLINKPOINTS - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+888], 4

; 1694 : 	else

	jmp	SHORT $LN3@GotoPrevDL
$LN2@GotoPrevDL:

; 1695 : 		mCurrentDLink--;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+888]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+888], eax
$LN3@GotoPrevDL:

; 1696 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GotoPrevDLink@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::GotoPrevDLink
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_ppwayPoint$ = 12					; size = 4
?GetDLinkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetDLinkWayPoint
; _this$ = ecx

; 1530 : void NavigationSystem::GetDLinkWayPoint(int index, WayPointClass** ppwayPoint) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1531 : 
; 1532 :    if (mpDLinkPoints[index].pWaypoint)

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+896], 0
	je	SHORT $LN2@GetDLinkWa

; 1533 : 	   *ppwayPoint = mpDLinkPoints[index].pWaypoint;

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx+896]
	mov	DWORD PTR [eax], edx

; 1534 :    else

	jmp	SHORT $LN3@GetDLinkWa
$LN2@GetDLinkWa:

; 1535 :       *ppwayPoint = NULL;

	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetDLinkWa:

; 1536 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetDLinkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetDLinkWayPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppwayPoint$ = 8					; size = 4
?GetDLinkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetDLinkWayPoint
; _this$ = ecx

; 1546 : void NavigationSystem::GetDLinkWayPoint(WayPointClass** ppwayPoint) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1547 : 
; 1548 :    if (mpDLinkPoints[mCurrentDLink].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+896], 0
	je	SHORT $LN2@GetDLinkWa

; 1549 : 	   *ppwayPoint = mpDLinkPoints[mCurrentDLink].pWaypoint;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+896]
	mov	DWORD PTR [edx], ecx

; 1550 :    else

	jmp	SHORT $LN3@GetDLinkWa
$LN2@GetDLinkWa:

; 1551 :       *ppwayPoint = NULL;

	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@GetDLinkWa:

; 1552 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDLinkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetDLinkWayPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_ipz$ = -84						; size = 4
_tgtz$ = -80						; size = 4
_distance$ = -76					; size = 4
tv417 = -72						; size = 4
tv405 = -68						; size = 4
_ipy$ = -64						; size = 4
_tgty$ = -60						; size = 4
_ipx$ = -56						; size = 4
_tgtx$ = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
tv144 = -40						; size = 4
$T4 = -36						; size = 4
_heading$ = -32						; size = 4
_deltay$ = -28						; size = 4
_deltax$ = -24						; size = 4
_this$ = -20						; size = 4
_i$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_totalPoints$ = 8					; size = 1
_target$ = 12						; size = 2
_threat$ = 16						; size = 2
_ptype$ = 20						; size = 4
_px$ = 24						; size = 4
_py$ = 28						; size = 4
_pz$ = 32						; size = 4
_parriveTime$ = 36					; size = 4
?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z PROC ; NavigationSystem::SetDataLinks
; _this$ = ecx

; 1605 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1606 : 	int	i;
; 1607 : 	float tgtx;
; 1608 : 	float tgty;
; 1609 : 	float tgtz;
; 1610 : 	float ipx;
; 1611 : 	float ipy;
; 1612 : 	float ipz;
; 1613 : 	float deltax;
; 1614 : 	float deltay;
; 1615 : 	int	heading;
; 1616 : 	float	distance;
; 1617 : 
; 1618 : 	GetTypeString(target, mpDLinkTarget);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1795				; 00000703H
	push	eax
	movzx	ecx, WORD PTR _target$[ebp]
	push	ecx
	call	?GetTypeString@@YAXHPAD@Z		; GetTypeString
	add	esp, 8

; 1619 : 	GetTypeString(threat, mpDLinkThreat);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1780				; 000006f4H
	push	edx
	movzx	eax, WORD PTR _threat$[ebp]
	push	eax
	call	?GetTypeString@@YAXHPAD@Z		; GetTypeString
	add	esp, 8

; 1620 : 	
; 1621 : 	for(i = 0; i < totalPoints; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@SetDataLin
$LN10@SetDataLin:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN11@SetDataLin:
	movsx	edx, BYTE PTR _totalPoints$[ebp]
	cmp	DWORD PTR _i$[ebp], edx
	jge	$LN9@SetDataLin

; 1622 : 		
; 1623 : 		mpDLinkPoints[i].pointType = ptype[i];

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _ptype$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax+892], edx

; 1624 : 		strcpy(mpDLinkPoints[i].pTypeStr, DLink_Type_Str[ptype[i]]);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ptype$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?DLink_Type_Str@@3PAPADA[edx*4]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+900]
	push	eax
	call	_strcpy
	add	esp, 8

; 1625 : 
; 1626 : 		if(mpDLinkPoints[i].pWaypoint) {

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+896], 0
	je	SHORT $LN8@SetDataLin

; 1627 : 			delete mpDLinkPoints[i].pWaypoint;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+896]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@SetDataLin:

; 1628 : 		}
; 1629 : 		mpDLinkPoints[i].pWaypoint = new WayPointClass;

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN14@SetDataLin
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@XZ		; WayPointClass::WayPointClass
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN15@SetDataLin
$LN14@SetDataLin:
	mov	DWORD PTR tv144[ebp], 0
$LN15@SetDataLin:
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+edx+896], ecx

; 1630 : 		mpDLinkPoints[i].pWaypoint->SetLocation(GridToSim(px[i]),
; 1631 : 																GridToSim(py[i]),
; 1632 : 																-(float)pz[i] * GRIDZ_SCALE_FACTOR);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _pz$[ebp]
	movsx	ecx, WORD PTR [eax+edx*2]
	cvtsi2ss xmm0, ecx
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@41200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _py$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _px$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	push	ecx
	call	?GridToSim@@YAMF@Z			; GridToSim
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+896]
	call	?SetLocation@WayPointClass@@QAEXMMM@Z	; WayPointClass::SetLocation

; 1633 : 
; 1634 : 		mpDLinkPoints[i].pWaypoint->SetWPArrive(parriveTime[i]);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _parriveTime$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+896]
	call	?SetWPArrive@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPArrive

; 1635 : 
; 1636 : 
; 1637 : 		if(i && mpDLinkPoints[i].pointType == FalconDLinkMessage::TGT && mpDLinkPoints[i - 1].pointType == FalconDLinkMessage::IP) {

	cmp	DWORD PTR _i$[ebp], 0
	je	$LN7@SetDataLin
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+892], 2
	jne	$LN7@SetDataLin
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+892], 1
	jne	$LN7@SetDataLin

; 1638 : 
; 1639 : 			mpDLinkPoints[i].pWaypoint->GetLocation(&tgtx, &tgty, &tgtz);

	lea	ecx, DWORD PTR _tgtz$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tgty$[ebp]
	push	edx
	lea	eax, DWORD PTR _tgtx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+896]
	call	?GetLocation@WayPointClass@@QBEXPAM00@Z	; WayPointClass::GetLocation

; 1640 : 			mpDLinkPoints[i - 1].pWaypoint->GetLocation(&ipx, &ipy, &ipz);

	lea	eax, DWORD PTR _ipz$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ipy$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ipx$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+896]
	call	?GetLocation@WayPointClass@@QBEXPAM00@Z	; WayPointClass::GetLocation

; 1641 : 
; 1642 : 			deltax		= tgtx - ipx;

	movss	xmm0, DWORD PTR _tgtx$[ebp]
	subss	xmm0, DWORD PTR _ipx$[ebp]
	movss	DWORD PTR _deltax$[ebp], xmm0

; 1643 : 			deltay		= tgty - ipy;

	movss	xmm0, DWORD PTR _tgty$[ebp]
	subss	xmm0, DWORD PTR _ipy$[ebp]
	movss	DWORD PTR _deltay$[ebp], xmm0

; 1644 : 
; 1645 : 			heading		= FloatToInt32(ConvertRadtoNav((float)atan2(deltax, deltay)));

	cvtss2sd xmm0, DWORD PTR _deltay$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	cvtss2sd xmm0, DWORD PTR _deltax$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR tv405[ebp]
	fld	DWORD PTR tv405[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?ConvertRadtoNav@@YAMM@Z		; ConvertRadtoNav
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _heading$[ebp], eax

; 1646 : 			if(heading == 0) {

	cmp	DWORD PTR _heading$[ebp], 0
	jne	SHORT $LN6@SetDataLin

; 1647 : 				heading = 360;

	mov	DWORD PTR _heading$[ebp], 360		; 00000168H
$LN6@SetDataLin:

; 1648 : 			}
; 1649 : 
; 1650 : 			distance		= (float)sqrt(deltax * deltax + deltay + deltay) * FT_TO_NM;

	movss	xmm0, DWORD PTR _deltax$[ebp]
	mulss	xmm0, DWORD PTR _deltax$[ebp]
	addss	xmm0, DWORD PTR _deltay$[ebp]
	addss	xmm0, DWORD PTR _deltay$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR tv417[ebp]
	movss	xmm0, DWORD PTR tv417[ebp]
	mulss	xmm0, DWORD PTR __real@392c987a
	movss	DWORD PTR _distance$[ebp], xmm0

; 1651 : 
; 1652 : 			sprintf(mpDLinkPoints[i].attackHeading, "%3d", heading);

	mov	edx, DWORD PTR _heading$[ebp]
	push	edx
	push	OFFSET ??_C@_03GOOLIKIF@?$CF3d?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+935]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1653 : 			if(mpDLinkPoints[i].attackHeading[0] == ' ') {

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+892]
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR [edx+eax+43]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN5@SetDataLin

; 1654 : 				mpDLinkPoints[i].attackHeading[0] = '0';

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+892]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+43], 48		; 00000030H
$LN5@SetDataLin:

; 1655 : 			}
; 1656 : 
; 1657 : 			strcpy(mpDLinkPoints[i - 1].attackHeading, mpDLinkPoints[i].attackHeading);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+935]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+935]
	push	edx
	call	_strcpy
	add	esp, 8

; 1658 : 
; 1659 : 			sprintf(mpDLinkPoints[i].distance, "%2.1f", distance);

	cvtss2sd xmm0, DWORD PTR _distance$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_05JEFOLKLE@?$CF2?41f?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+939]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 1660 : 			strcpy(mpDLinkPoints[i - 1].distance, mpDLinkPoints[i].distance);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+939]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+939]
	push	edx
	call	_strcpy
	add	esp, 8

; 1661 : 		}
; 1662 : 		else {

	jmp	SHORT $LN4@SetDataLin
$LN7@SetDataLin:

; 1663 : 
; 1664 : 			*(mpDLinkPoints[i].attackHeading)	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+892]
	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR [edx+eax+43], 0

; 1665 : 			*(mpDLinkPoints[i].distance)			= NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+892]
	mov	ecx, 1
	imul	ecx, 0
	mov	BYTE PTR [eax+ecx+47], 0
$LN4@SetDataLin:

; 1666 : 		}
; 1667 : 	}

	jmp	$LN10@SetDataLin
$LN9@SetDataLin:

; 1668 : 
; 1669 : 	for(i = totalPoints; i < MAX_DLINKPOINTS; i++) {

	movsx	edx, BYTE PTR _totalPoints$[ebp]
	mov	DWORD PTR _i$[ebp], edx
	jmp	SHORT $LN3@SetDataLin
$LN2@SetDataLin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@SetDataLin:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN1@SetDataLin

; 1670 : 		mpDLinkPoints[i].pointType = FalconDLinkMessage::NODLINK;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+892], 0

; 1671 : 	}

	jmp	SHORT $LN2@SetDataLin
$LN1@SetDataLin:

; 1672 : 
; 1673 : 	SimDriver.GetPlayerAircraft()->FCC->waypointStepCmd = 127;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	eax, DWORD PTR [eax+936]
	mov	BYTE PTR [eax+194], 127			; 0000007fH

; 1674 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetDataLinks@NavigationSystem@@QAEXDGGPAW4DLinkPointType@FalconDLinkMessage@@PAF11PAJ@Z ENDP ; NavigationSystem::SetDataLinks
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptype$ = 8						; size = 4
_ppointNumber$ = 12					; size = 4
_ptypeStr$ = 16						; size = 4
_ptarget$ = 20						; size = 4
_pthreat$ = 24						; size = 4
_pheading$ = 28						; size = 4
_pdistance$ = 32					; size = 4
?GetDataLink@NavigationSystem@@QAEXPAW4DLinkPointType@FalconDLinkMessage@@PAHPAD2222@Z PROC ; NavigationSystem::GetDataLink
; _this$ = ecx

; 1569 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1570 : 	*ptype			= mpDLinkPoints[mCurrentDLink].pointType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _ptype$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+892]
	mov	DWORD PTR [edx], ecx

; 1571 : 	*ppointNumber	= mCurrentDLink;

	mov	edx, DWORD PTR _ppointNumber$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	mov	DWORD PTR [edx], ecx

; 1572 : 
; 1573 : 	if(*ptype == FalconDLinkMessage::NODLINK) {

	mov	edx, DWORD PTR _ptype$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN2@GetDataLin

; 1574 : 		*ptarget		= NULL;

	mov	eax, DWORD PTR _ptarget$[ebp]
	mov	BYTE PTR [eax], 0

; 1575 : 		*pthreat		= NULL;

	mov	ecx, DWORD PTR _pthreat$[ebp]
	mov	BYTE PTR [ecx], 0

; 1576 : 		*ptypeStr	= NULL;

	mov	edx, DWORD PTR _ptypeStr$[ebp]
	mov	BYTE PTR [edx], 0

; 1577 : 		*pheading	= NULL;

	mov	eax, DWORD PTR _pheading$[ebp]
	mov	BYTE PTR [eax], 0

; 1578 : 		*pdistance	= NULL;

	mov	ecx, DWORD PTR _pdistance$[ebp]
	mov	BYTE PTR [ecx], 0

; 1579 : 	}
; 1580 : 	else {

	jmp	$LN3@GetDataLin
$LN2@GetDataLin:

; 1581 : 		strcpy(ptarget, mpDLinkTarget);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1795				; 00000703H
	push	edx
	mov	eax, DWORD PTR _ptarget$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1582 : 		strcpy(pthreat, mpDLinkThreat);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1780				; 000006f4H
	push	ecx
	mov	edx, DWORD PTR _pthreat$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1583 : 		strcpy(ptypeStr, mpDLinkPoints[mCurrentDLink].pTypeStr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+888]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+900]
	push	eax
	mov	ecx, DWORD PTR _ptypeStr$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1584 : 		strcpy(pheading, mpDLinkPoints[mCurrentDLink].attackHeading);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+888]
	imul	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+935]
	push	edx
	mov	eax, DWORD PTR _pheading$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1585 : 		strcpy(pdistance, mpDLinkPoints[mCurrentDLink].distance);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+888]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+939]
	push	ecx
	mov	edx, DWORD PTR _pdistance$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN3@GetDataLin:

; 1586 : 
; 1587 : 	}
; 1588 : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?GetDataLink@NavigationSystem@@QAEXPAW4DLinkPointType@FalconDLinkMessage@@PAHPAD2222@Z ENDP ; NavigationSystem::GetDataLink
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GotoNextMark@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::GotoNextMark
; _this$ = ecx

; 1515 : void NavigationSystem::GotoNextMark(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1516 : 
; 1517 : 	if(mCurrentMark == MAX_MARKPOINTS - 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 9
	jne	SHORT $LN2@GotoNextMa

; 1518 : 		mCurrentMark = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1519 : 	else 

	jmp	SHORT $LN3@GotoNextMa
$LN2@GotoNextMa:

; 1520 : 		mCurrentMark++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@GotoNextMa:

; 1521 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GotoNextMark@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::GotoNextMark
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GotoPrevMark@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::GotoPrevMark
; _this$ = ecx

; 1499 : void NavigationSystem::GotoPrevMark(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1500 : 
; 1501 : 	if(mCurrentMark == 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@GotoPrevMa

; 1502 : 		mCurrentMark = MAX_MARKPOINTS - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 9

; 1503 : 	else

	jmp	SHORT $LN3@GotoPrevMa
$LN2@GotoPrevMa:

; 1504 : 		mCurrentMark--;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@GotoPrevMa:

; 1505 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GotoPrevMark@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::GotoPrevMark
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = -40					; size = 4
_longitude$ = -36					; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
tv131 = -24						; size = 4
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_z$ = 20						; size = 4
_arriveTime$ = 24					; size = 4
?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z PROC ; NavigationSystem::SetMarkPoint
; _this$ = ecx

; 1399 : void NavigationSystem::SetMarkPoint(Point_Type type, float x, float y, float z, long arriveTime) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1400 : 	
; 1401 : 	float latitude;
; 1402 : 	float longitude;
; 1403 : 
; 1404 : 	if(mpMarkPoints[mCurrentMark].pWaypoint) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+92], 0
	je	SHORT $LN1@SetMarkPoi

; 1405 : 
; 1406 : 		delete mpMarkPoints[mCurrentMark].pWaypoint;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+92]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@SetMarkPoi:

; 1407 : 	}
; 1408 : 
; 1409 : 	mpMarkPoints[mCurrentMark].pWaypoint		= new WayPointClass(0, 0, 0, 0, 0, 0, 0, 0);

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN4@SetMarkPoi
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0WayPointClass@@QAE@FFHHKKEH@Z	; WayPointClass::WayPointClass
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN5@SetMarkPoi
$LN4@SetMarkPoi:
	mov	DWORD PTR tv131[ebp], 0
$LN5@SetMarkPoi:
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+ecx+92], eax

; 1410 : 	mpMarkPoints[mCurrentMark].pWaypoint->SetLocation(x, y, z);

	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+92]
	call	?SetLocation@WayPointClass@@QAEXMMM@Z	; WayPointClass::SetLocation

; 1411 : 	mpMarkPoints[mCurrentMark].pWaypoint->SetWPArrive(arriveTime);

	mov	ecx, DWORD PTR _arriveTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+eax+92]
	call	?SetWPArrive@WayPointClass@@QAEXK@Z	; WayPointClass::SetWPArrive

; 1412 : 
; 1413 : 	
; 1414 : 	mpMarkPoints[mCurrentMark].pointType		= type;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx

; 1415 : 
; 1416 : 	ApproxLatLong(x, y, &latitude, &longitude);

	lea	eax, DWORD PTR _longitude$[ebp]
	push	eax
	lea	ecx, DWORD PTR _latitude$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?ApproxLatLong@@YAXMMPAM0@Z		; ApproxLatLong
	add	esp, 16					; 00000010H

; 1417 : 	BuildLatLongStr(latitude, longitude, mpMarkPoints[mCurrentMark].pLatStr, mpMarkPoints[mCurrentMark].pLongStr);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+52]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+12]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?BuildLatLongStr@@YAXMMPAD0@Z		; BuildLatLongStr
	add	esp, 16					; 00000010H

; 1418 : 	SimDriver.GetPlayerAircraft()->FCC->waypointStepCmd = 127;

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+936]
	mov	BYTE PTR [ecx+194], 127			; 0000007fH

; 1419 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetMarkPoint@NavigationSystem@@QAEXW4Point_Type@1@MMMJ@Z ENDP ; NavigationSystem::SetMarkPoint
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMarkIndex@NavigationSystem@@QAEHXZ PROC		; NavigationSystem::GetMarkIndex
; _this$ = ecx

; 1206 : int NavigationSystem::GetMarkIndex(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1207 : 	
; 1208 : 	return mCurrentMark;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1209 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMarkIndex@NavigationSystem@@QAEHXZ ENDP		; NavigationSystem::GetMarkIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_ppwayPoint$ = 12					; size = 4
?GetMarkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetMarkWayPoint
; _this$ = ecx

; 1303 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1304 :    if (mpMarkPoints[index].pWaypoint)

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+92], 0
	je	SHORT $LN2@GetMarkWay

; 1305 : 	   *ppwayPoint = mpMarkPoints[index].pWaypoint;	

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+edx+92]
	mov	DWORD PTR [eax], edx

; 1306 :    else

	jmp	SHORT $LN3@GetMarkWay
$LN2@GetMarkWay:

; 1307 :       *ppwayPoint = NULL;

	mov	eax, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetMarkWay:

; 1308 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetMarkWayPoint@NavigationSystem@@QAEXHPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetMarkWayPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppwayPoint$ = 8					; size = 4
?GetMarkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z PROC ; NavigationSystem::GetMarkWayPoint
; _this$ = ecx

; 1349 : void NavigationSystem::GetMarkWayPoint(WayPointClass** ppwayPoint) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1350 : 
; 1351 :    if (mpMarkPoints[mCurrentMark].pWaypoint)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+92], 0
	je	SHORT $LN2@GetMarkWay

; 1352 : 	   *ppwayPoint = mpMarkPoints[mCurrentMark].pWaypoint;	

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+92]
	mov	DWORD PTR [edx], ecx

; 1353 :    else

	jmp	SHORT $LN3@GetMarkWay
$LN2@GetMarkWay:

; 1354 :       *ppwayPoint = NULL;

	mov	edx, DWORD PTR _ppwayPoint$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@GetMarkWay:

; 1355 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMarkWayPoint@NavigationSystem@@QAEXPAPAVWayPointClass@@@Z ENDP ; NavigationSystem::GetMarkWayPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppointType$ = 8					; size = 4
_platStr$ = 12						; size = 4
_plongStr$ = 16						; size = 4
?GetMarkPoint@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z PROC ; NavigationSystem::GetMarkPoint
; _this$ = ecx

; 1241 : void NavigationSystem::GetMarkPoint(Point_Type* ppointType, char* platStr, char* plongStr) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1242 : 	
; 1243 : 	*platStr		= NULL;

	mov	eax, DWORD PTR _platStr$[ebp]
	mov	BYTE PTR [eax], 0

; 1244 : 	*plongStr	= NULL;

	mov	ecx, DWORD PTR _plongStr$[ebp]
	mov	BYTE PTR [ecx], 0

; 1245 : 
; 1246 : 	*ppointType	= mpMarkPoints[mCurrentMark].pointType;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _ppointType$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+8]
	mov	DWORD PTR [ecx], eax

; 1247 : 
; 1248 : 	strcpy(platStr, mpMarkPoints[mCurrentMark].pLatStr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+12]
	push	ecx
	mov	edx, DWORD PTR _platStr$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1249 : 	strcpy(plongStr, mpMarkPoints[mCurrentMark].pLongStr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+52]
	push	eax
	mov	ecx, DWORD PTR _plongStr$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1250 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetMarkPoint@NavigationSystem@@QAEXPAW4Point_Type@1@PAD1@Z ENDP ; NavigationSystem::GetMarkPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv308 = -24						; size = 4
tv300 = -20						; size = 4
tv292 = -16						; size = 4
tv284 = -12						; size = 4
tv276 = -8						; size = 4
_this$ = -4						; size = 4
?ExecIls@NavigationSystem@@QAEXXZ PROC			; NavigationSystem::ExecIls
; _this$ = ecx

; 404  : void NavigationSystem::ExecIls(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 405  : 	//MI moved to the class
; 406  : 	/*float xfrontdiff;
; 407  : 	float yfrontdiff;
; 408  : 	float xbackdiff;
; 409  : 	float ybackdiff;
; 410  : 	float zdiff;
; 411  : 	float bearingToLocalizer;
; 412  : 	float distToToLocalizer;
; 413  : 	float el;
; 414  : 	float approach;*/
; 415  : 
; 416  : 	mpCurrentIls.gpDeviation = -180.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c0490fd9
	movss	DWORD PTR [eax+1948], xmm0

; 417  : 	mpCurrentIls.gsDeviation = 180.0F * DTR;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40490fd9
	movss	DWORD PTR [ecx+1952], xmm0

; 418  : 
; 419  : 	if(SimDriver.GetPlayerAircraft() && mpCurrentIls.rwyidx != 0 && mpCurrentIls.vuID != FalconNullId && (GetInstrumentMode() == NavigationSystem::ILS_TACAN || GetInstrumentMode() == NavigationSystem::ILS_NAV)) {

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	$LN8@ExecIls
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1928], 0
	je	$LN8@ExecIls
	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1956				; 000007a4H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN8@ExecIls
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	cmp	eax, 2
	je	SHORT $LN7@ExecIls
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ; NavigationSystem::GetInstrumentMode
	cmp	eax, 1
	jne	$LN8@ExecIls
$LN7@ExecIls:

; 420  : 					
; 421  : 		xfrontdiff						= mpCurrentIls.frontx - SimDriver.GetPlayerAircraft()->XPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv276[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+1908]
	subss	xmm0, DWORD PTR tv276[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+1976], xmm0

; 422  : 		yfrontdiff						= mpCurrentIls.fronty - SimDriver.GetPlayerAircraft()->YPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv284[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+1912]
	subss	xmm0, DWORD PTR tv284[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+1980], xmm0

; 423  : 		xbackdiff						= mpCurrentIls.backx - SimDriver.GetPlayerAircraft()->XPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv292[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+1916]
	subss	xmm0, DWORD PTR tv292[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+1984], xmm0

; 424  : 		ybackdiff						= mpCurrentIls.backy - SimDriver.GetPlayerAircraft()->YPos();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv300[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+1920]
	subss	xmm0, DWORD PTR tv300[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+1988], xmm0

; 425  : 	
; 426  : 		zdiff								= (float)fabs(mpCurrentIls.z - SimDriver.GetPlayerAircraft()->ZPos());

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, eax
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR tv308[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+1924]
	subss	xmm0, DWORD PTR tv308[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+1992]

; 427  : 											
; 428  : 		bearingToLocalizer			= (float) atan2(xbackdiff, ybackdiff);						// radians +-pi, xaxis = 0deg

	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+1988]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+1984]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+1996]

; 429  : 
; 430  : 		if(bearingToLocalizer >= -90.0F * DTR && bearingToLocalizer <= 180.0F * DTR) {

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+1996]
	comiss	xmm0, DWORD PTR __real@bfc90fd9
	jb	SHORT $LN6@ExecIls
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40490fd9
	comiss	xmm0, DWORD PTR [eax+1996]
	jb	SHORT $LN6@ExecIls

; 431  : 			bearingToLocalizer = 90.0F * DTR - bearingToLocalizer;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3fc90fd9
	subss	xmm0, DWORD PTR [ecx+1996]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+1996], xmm0

; 432  : 		}
; 433  : 		else {

	jmp	SHORT $LN5@ExecIls
$LN6@ExecIls:

; 434  : 			bearingToLocalizer = -(270.0F * DTR + bearingToLocalizer);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@4096cbe3
	addss	xmm0, DWORD PTR [eax+1996]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+1996], xmm0
$LN5@ExecIls:

; 435  : 		}
; 436  : 		
; 437  : 		distToToLocalizer				= (float) sqrt(xfrontdiff * xfrontdiff + yfrontdiff * yfrontdiff);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+1976]
	mulss	xmm0, DWORD PTR [eax+1976]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+1980]
	mulss	xmm1, DWORD PTR [edx+1980]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+2000]

; 438  : 								
; 439  : 		el									= (float) atan2(zdiff, distToToLocalizer);

	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+2000]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+1992]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+2004]

; 440  : 		approach							= (float)mpCurrentIls.heading;

	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+1936]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+2008], xmm0

; 441  : 
; 442  : 		if(approach > 180) {

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+2008]
	comiss	xmm0, DWORD PTR __real@43340000
	jbe	SHORT $LN4@ExecIls

; 443  : 			approach -= 360;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+2008]
	subss	xmm0, DWORD PTR __real@43b40000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+2008], xmm0
$LN4@ExecIls:

; 444  : 		}
; 445  : 		approach	*= DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+2008]
	mulss	xmm0, DWORD PTR __real@3c8efa34
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+2008], xmm0

; 446  : 											
; 447  : 		mpCurrentIls.gpDeviation	= bearingToLocalizer - approach;						// Calc approach error

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+1996]
	subss	xmm0, DWORD PTR [eax+2008]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+1948], xmm0

; 448  : 
; 449  : 		if(mpCurrentIls.gpDeviation < -180.0F * DTR) {

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@c0490fd9
	comiss	xmm0, DWORD PTR [edx+1948]
	jbe	SHORT $LN3@ExecIls

; 450  : 			mpCurrentIls.gpDeviation += 360.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+1948]
	addss	xmm0, DWORD PTR __real@40c90fd9
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+1948], xmm0
	jmp	SHORT $LN1@ExecIls
$LN3@ExecIls:

; 451  : 		}
; 452  : 		else if(mpCurrentIls.gpDeviation > 180.0F * DTR) {

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+1948]
	comiss	xmm0, DWORD PTR __real@40490fd9
	jbe	SHORT $LN1@ExecIls

; 453  : 			mpCurrentIls.gpDeviation -= 360.0F * DTR;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+1948]
	subss	xmm0, DWORD PTR __real@40c90fd9
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+1948], xmm0
$LN1@ExecIls:

; 454  : 		}
; 455  : 
; 456  : 		mpCurrentIls.gsDeviation	= 3.0F * DTR - el;											// Calc glideSlope error 3 degress from level

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3d56774e
	subss	xmm0, DWORD PTR [edx+2004]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+1952], xmm0
$LN8@ExecIls:

; 457  : 	}
; 458  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ExecIls@NavigationSystem@@QAEXXZ ENDP			; NavigationSystem::ExecIls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv304 = -12						; size = 4
_backIdx$ = -8						; size = 4
_this$ = -4						; size = 4
_airbaseid$ = 8						; size = 8
_rwyidx$ = 16						; size = 4
?SetIlsData@NavigationSystem@@QAEXVVU_ID@@H@Z PROC	; NavigationSystem::SetIlsData
; _this$ = ecx

; 350  : void NavigationSystem::SetIlsData(VU_ID airbaseid, int rwyidx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 351  : 
; 352  : 	int				backIdx;
; 353  : 
; 354  : 	mpCurrentIls.vuID				= airbaseid;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _airbaseid$[ebp]
	mov	DWORD PTR [eax+1956], ecx
	mov	edx, DWORD PTR _airbaseid$[ebp+4]
	mov	DWORD PTR [eax+1960], edx

; 355  : 	mpCurrentIls.pobjective		= (ObjectiveClass *)vuDatabase->Find(mpCurrentIls.vuID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1960]
	push	ecx
	mov	edx, DWORD PTR [eax+1956]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1964], eax

; 356  : 	ShiAssert(FALSE == F4IsBadReadPtr(mpCurrentIls.pobjective, sizeof *mpCurrentIls.pobjective));
; 357  : //	if (mpCurrentIls.pobjective->ZPos() == 0.0f) // JPO - fix up old data
; 358  : //	    	mpCurrentIls.pobjective->SetPosition (mpCurrentIls.pobjective->XPos(), 
; 359  : //		mpCurrentIls.pobjective->YPos(), 
; 360  : //		OTWDriver.GetGroundLevel(mpCurrentIls.pobjective->XPos(), mpCurrentIls.pobjective->YPos()));
; 361  : 
; 362  : 	mpCurrentIls.rwyidx			= rwyidx;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _rwyidx$[ebp]
	mov	DWORD PTR [edx+1928], eax

; 363  : 	backIdx							= mpCurrentIls.pobjective->brain->GetOppositeRunway(mpCurrentIls.rwyidx);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1928]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1964]
	mov	ecx, DWORD PTR [ecx+240]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	mov	DWORD PTR _backIdx$[ebp], eax

; 364  : 	
; 365  : 	TranslatePointData(mpCurrentIls.pobjective, GetFirstPt(backIdx), &mpCurrentIls.backx, &mpCurrentIls.backy);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1920				; 00000780H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1916				; 0000077cH
	push	eax
	mov	ecx, DWORD PTR _backIdx$[ebp]
	push	ecx
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1964]
	push	eax
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 366  : 	TranslatePointData(mpCurrentIls.pobjective, GetFirstPt(mpCurrentIls.rwyidx), &mpCurrentIls.frontx, &mpCurrentIls.fronty);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1908				; 00000774H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1928]
	push	ecx
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1964]
	push	eax
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 367  : // 2001-05-15 MODIFIED BY S.G. PER JULIAN'S INSTRUCTION BUT USING MY APPROACH. JULIAN'S APPROACH CAN POSSIBLY CREATE PROBLEMS IN OTHER SECTION OF THE CODE THAT ASSUMES THE OBJECTIVE IS AT ZERO ALTITUDE
; 368  : //	mpCurrentIls.z					= mpCurrentIls.pobjective->ZPos();
; 369  : 	if (mpCurrentIls.pobjective->ZPos() == 0.0f) // JPO - fix up old data

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1964]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR tv304[ebp]
	movss	xmm0, DWORD PTR tv304[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@SetIlsData

; 370  : 		mpCurrentIls.z = OTWDriver.GetGroundLevel(mpCurrentIls.pobjective->XPos(), mpCurrentIls.pobjective->YPos());

	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1964]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1964]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z ; OTWDriverClass::GetGroundLevel
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+1924]

; 371  : 	else

	jmp	SHORT $LN7@SetIlsData
$LN8@SetIlsData:

; 372  : 		mpCurrentIls.z = mpCurrentIls.pobjective->ZPos();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1964]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+1924]
$LN7@SetIlsData:

; 373  : 
; 374  : 	mpCurrentIls.heading			= PtHeaderDataTable[backIdx].data;

	mov	ecx, DWORD PTR _backIdx$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	eax, WORD PTR [edx+ecx+10]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1936], eax

; 375  : 	mpCurrentIls.sinHeading		= PtHeaderDataTable[backIdx].sinHeading;

	mov	edx, DWORD PTR _backIdx$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	mov	edx, DWORD PTR [ecx+edx+12]
	mov	DWORD PTR [eax+1940], edx

; 376  : 	mpCurrentIls.cosHeading		= PtHeaderDataTable[backIdx].cosHeading;

	mov	eax, DWORD PTR _backIdx$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	mov	eax, DWORD PTR [edx+eax+16]
	mov	DWORD PTR [ecx+1944], eax

; 377  : 
; 378  : 	if(PtHeaderDataTable[backIdx].ltrt == 0) {

	mov	ecx, DWORD PTR _backIdx$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	eax, BYTE PTR [edx+ecx+25]
	test	eax, eax
	jne	SHORT $LN6@SetIlsData

; 379  : // 2001-05-24 MODIFIED BY S.G. NEED TO ROUND, NOT TRUNCATE
; 380  : //		sprintf(mpCurrentIls.rwynum, "%02d", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.499F));
; 381  : 		sprintf(mpCurrentIls.rwynum, "%02d", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.53F));

	mov	ecx, DWORD PTR _backIdx$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	eax, WORD PTR [edx+ecx+10]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR __real@3f07ae14
	cvttss2si ecx, xmm0
	push	ecx
	push	OFFSET ??_C@_04OGKJMPGK@?$CF02d?$AA@
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1932				; 0000078cH
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	$LN2@SetIlsData
$LN6@SetIlsData:

; 382  : 	}
; 383  : 	else if(PtHeaderDataTable[backIdx].ltrt == -1) {	// left, just a guess vwf

	mov	eax, DWORD PTR _backIdx$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	edx, BYTE PTR [ecx+eax+25]
	cmp	edx, -1
	jne	SHORT $LN4@SetIlsData

; 384  : // 2001-05-24 MODIFIED BY S.G. NEED TO ROUND, NOT TRUNCATE
; 385  : //		sprintf(mpCurrentIls.rwynum, "%02dL", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.499F));
; 386  : 		sprintf(mpCurrentIls.rwynum, "%02dL", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.53F));

	mov	eax, DWORD PTR _backIdx$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	edx, WORD PTR [ecx+eax+10]
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR __real@3f07ae14
	cvttss2si eax, xmm0
	push	eax
	push	OFFSET ??_C@_05PBENCBIA@?$CF02dL?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1932				; 0000078cH
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@SetIlsData
$LN4@SetIlsData:

; 387  : 	}
; 388  : 	else 	if(PtHeaderDataTable[backIdx].ltrt == 1) {

	mov	edx, DWORD PTR _backIdx$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	ecx, BYTE PTR [eax+edx+25]
	cmp	ecx, 1
	jne	SHORT $LN2@SetIlsData

; 389  : // 2001-05-24 MODIFIED BY S.G. NEED TO ROUND, NOT TRUNCATE
; 390  : //		sprintf(mpCurrentIls.rwynum, "%02dR", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.499F));
; 391  : 		sprintf(mpCurrentIls.rwynum, "%02dR", (int)(PtHeaderDataTable[backIdx].data/10.0F + 0.53F));

	mov	edx, DWORD PTR _backIdx$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	ecx, WORD PTR [eax+edx+10]
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@41200000
	addss	xmm0, DWORD PTR __real@3f07ae14
	cvttss2si edx, xmm0
	push	edx
	push	OFFSET ??_C@_05CFAMBOFP@?$CF02dR?$AA@
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1932				; 0000078cH
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN2@SetIlsData:

; 392  : 	}
; 393  : 	else
; 394  : 	{
; 395  : 		ShiWarning ("Bad ILS Data");
; 396  : 	}
; 397  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIlsData@NavigationSystem@@QAEXVVU_ID@@H@Z ENDP	; NavigationSystem::SetIlsData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv90 = -12						; size = 4
tv83 = -8						; size = 4
_this$ = -4						; size = 4
?StepInstrumentMode@NavigationSystem@@QAEXXZ PROC	; NavigationSystem::StepInstrumentMode
; _this$ = ecx

; 1137 : void NavigationSystem::StepInstrumentMode(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1138 : 	
; 1139 : 
; 1140 : 	//MI additions
; 1141 : 	if(g_bRealisticAvionics && g_bINS && SimDriver.GetPlayerAircraft())

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	je	SHORT $LN17@StepInstru
	movzx	ecx, BYTE PTR ?g_bINS@@3_NA		; g_bINS
	test	ecx, ecx
	je	SHORT $LN17@StepInstru
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	SHORT $LN17@StepInstru

; 1142 : 	{
; 1143 : 		SimDriver.GetPlayerAircraft()->LOCValid = TRUE;	//Flag not visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+837], 1

; 1144 : 		SimDriver.GetPlayerAircraft()->GSValid = TRUE;	//Flag not visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+836], 1
$LN17@StepInstru:

; 1145 : 	}
; 1146 : 
; 1147 : 	if(mInstrumentMode == TACAN) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1812], 3
	jne	SHORT $LN16@StepInstru

; 1148 : 		mInstrumentMode = NAV;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1812], 0

; 1149 : 	}
; 1150 : 	else {

	jmp	$LN18@StepInstru
$LN16@StepInstru:

; 1151 : 		if(!g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	jne	SHORT $LN14@StepInstru

; 1152 : 		{
; 1153 : 			//MI original code
; 1154 : 			switch(mInstrumentMode) 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1812]
	mov	DWORD PTR tv83[ebp], eax
	cmp	DWORD PTR tv83[ebp], 3
	ja	SHORT $LN12@StepInstru
	mov	ecx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN20@StepInstru[ecx*4]
$LN11@StepInstru:

; 1155 : 			{				
; 1156 : 			case NAV:
; 1157 : 				mInstrumentMode = ILS_NAV;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1812], 1

; 1158 : 				break;

	jmp	SHORT $LN12@StepInstru
$LN10@StepInstru:

; 1159 : 			case ILS_NAV:
; 1160 : 				mInstrumentMode = ILS_TACAN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1812], 2

; 1161 : 				break;

	jmp	SHORT $LN12@StepInstru
$LN9@StepInstru:

; 1162 : 			case ILS_TACAN:
; 1163 : 				mInstrumentMode = TACAN;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1812], 3

; 1164 : 				break;

	jmp	SHORT $LN12@StepInstru
$LN8@StepInstru:

; 1165 : 			case TACAN:
; 1166 : 				mInstrumentMode = NAV;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1812], 0
$LN12@StepInstru:

; 1167 : 				break;
; 1168 : 			}
; 1169 : 		}
; 1170 : 		else

	jmp	$LN18@StepInstru
$LN14@StepInstru:

; 1171 : 		{
; 1172 : 			//MI modified for ICP stuff
; 1173 : 			switch(mInstrumentMode) 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1812]
	mov	DWORD PTR tv90[ebp], ecx
	cmp	DWORD PTR tv90[ebp], 3
	ja	$LN18@StepInstru
	mov	edx, DWORD PTR tv90[ebp]
	jmp	DWORD PTR $LN21@StepInstru[edx*4]
$LN4@StepInstru:

; 1174 : 			{
; 1175 : 			case NAV:
; 1176 : 				mInstrumentMode = ILS_NAV;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1812], 1

; 1177 : 				SimDriver.GetPlayerAircraft()->FCC->SetMasterMode(FireControlComputer::ILS);

	push	3
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+936]
	call	?SetMasterMode@FireControlComputer@@QAEXW4FCCMasterMode@1@@Z ; FireControlComputer::SetMasterMode

; 1178 : 				break;

	jmp	SHORT $LN18@StepInstru
$LN3@StepInstru:

; 1179 : 			case ILS_NAV:
; 1180 : 				mInstrumentMode = ILS_TACAN;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1812], 2

; 1181 : 				SimDriver.GetPlayerAircraft()->FCC->SetMasterMode(FireControlComputer::ILS);

	push	3
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+936]
	call	?SetMasterMode@FireControlComputer@@QAEXW4FCCMasterMode@1@@Z ; FireControlComputer::SetMasterMode

; 1182 : 				break;

	jmp	SHORT $LN18@StepInstru
$LN2@StepInstru:

; 1183 : 			case ILS_TACAN:
; 1184 : 				mInstrumentMode = TACAN;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1812], 3

; 1185 : 				SimDriver.GetPlayerAircraft()->FCC->SetMasterMode(FireControlComputer::Nav);

	push	4
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+936]
	call	?SetMasterMode@FireControlComputer@@QAEXW4FCCMasterMode@1@@Z ; FireControlComputer::SetMasterMode

; 1186 : 				break;

	jmp	SHORT $LN18@StepInstru
$LN1@StepInstru:

; 1187 : 			case TACAN:
; 1188 : 				mInstrumentMode = NAV;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1812], 0

; 1189 : 				SimDriver.GetPlayerAircraft()->FCC->SetMasterMode(FireControlComputer::Nav);

	push	4
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	ecx, DWORD PTR [eax+936]
	call	?SetMasterMode@FireControlComputer@@QAEXW4FCCMasterMode@1@@Z ; FireControlComputer::SetMasterMode
$LN18@StepInstru:

; 1190 : 				break;
; 1191 : 			}
; 1192 : 
; 1193 : 		}
; 1194 : 	}
; 1195 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@StepInstru:
	DD	$LN11@StepInstru
	DD	$LN10@StepInstru
	DD	$LN9@StepInstru
	DD	$LN8@StepInstru
$LN21@StepInstru:
	DD	$LN4@StepInstru
	DD	$LN3@StepInstru
	DD	$LN2@StepInstru
	DD	$LN1@StepInstru
?StepInstrumentMode@NavigationSystem@@QAEXXZ ENDP	; NavigationSystem::StepInstrumentMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ PROC ; NavigationSystem::GetInstrumentMode
; _this$ = ecx

; 1123 : NavigationSystem::Instrument_Mode NavigationSystem::GetInstrumentMode(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 
; 1125 : 	return mInstrumentMode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1812]

; 1126 : 
; 1127 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstrumentMode@NavigationSystem@@QAE?AW4Instrument_Mode@1@XZ ENDP ; NavigationSystem::GetInstrumentMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mode$ = 8						; size = 4
?SetInstrumentMode@NavigationSystem@@QAEXW4Instrument_Mode@1@@Z PROC ; NavigationSystem::SetInstrumentMode
; _this$ = ecx

; 1104 : void NavigationSystem::SetInstrumentMode(Instrument_Mode mode) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 	
; 1106 : 	if(mode < 0 || mode >= TOTAL_MODES)

	cmp	DWORD PTR _mode$[ebp], 0
	jl	SHORT $LN1@SetInstrum
	cmp	DWORD PTR _mode$[ebp], 4
	jl	SHORT $LN2@SetInstrum
$LN1@SetInstrum:

; 1107 : 	{
; 1108 : 		ShiWarning ("Bad NAV Mode");
; 1109 : 		return;

	jmp	SHORT $LN3@SetInstrum
$LN2@SetInstrum:

; 1110 : 	}
; 1111 : 
; 1112 : 	mInstrumentMode = mode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+1812], ecx
$LN3@SetInstrum:

; 1113 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetInstrumentMode@NavigationSystem@@QAEXW4Instrument_Mode@1@@Z ENDP ; NavigationSystem::SetInstrumentMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?SetControlSrc@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::SetControlSrc
; _this$ = ecx

; 1002 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1003 : 	mCurrentTCNSrc = src;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+1816], ecx

; 1004 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1005 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan

; 1006 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetControlSrc@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::SetControlSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ PROC ; NavigationSystem::GetControlSrc
; _this$ = ecx

; 991  : NavigationSystem::Tacan_Channel_Src NavigationSystem::GetControlSrc(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 992  : 
; 993  : 	return mCurrentTCNSrc;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1816]

; 994  : 
; 995  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ENDP ; NavigationSystem::GetControlSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ToggleControlSrc@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::ToggleControlSrc
; _this$ = ecx

; 955  : void NavigationSystem::ToggleControlSrc(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 956  : 
; 957  : 	if(!g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	jne	SHORT $LN7@ToggleCont

; 958  : 	{
; 959  : 		//MI Original code
; 960  : 		if(mCurrentTCNSrc == ICP) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1816], 0
	jne	SHORT $LN6@ToggleCont

; 961  : 			mCurrentTCNSrc = AUXCOMM;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1816], 1

; 962  : 		}
; 963  : 		else {

	jmp	SHORT $LN5@ToggleCont
$LN6@ToggleCont:

; 964  : 			mCurrentTCNSrc = ICP;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1816], 0
$LN5@ToggleCont:

; 965  : 		}
; 966  : 	}
; 967  : 	else

	jmp	SHORT $LN8@ToggleCont
$LN7@ToggleCont:

; 968  : 	{
; 969  : 		//MI modified for ICP stuff
; 970  : 		//These pages change when in Backup mode
; 971  : 		if(OTWDriver.pCockpitManager->mpIcp->CheckBackupPages())

	mov	ecx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	mov	ecx, DWORD PTR [ecx+688]
	call	?CheckBackupPages@ICPClass@@QAEHXZ	; ICPClass::CheckBackupPages
	test	eax, eax
	je	SHORT $LN3@ToggleCont

; 972  : 			OTWDriver.pCockpitManager->mpIcp->ClearStrings();

	mov	edx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	mov	ecx, DWORD PTR [edx+688]
	call	?ClearStrings@ICPClass@@QAEXXZ		; ICPClass::ClearStrings
$LN3@ToggleCont:

; 973  : 
; 974  : 		if(mCurrentTCNSrc == ICP) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1816], 0
	jne	SHORT $LN2@ToggleCont

; 975  : 			mCurrentTCNSrc = AUXCOMM;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1816], 1

; 976  : 		else 

	jmp	SHORT $LN1@ToggleCont
$LN2@ToggleCont:

; 977  : 			mCurrentTCNSrc = ICP;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1816], 0
$LN1@ToggleCont:

; 978  : 		// MD --20040605: and update ILS info since we may be changing TACAN completely
; 979  : 		/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN8@ToggleCont:

; 980  : 	}
; 981  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleControlSrc@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::ToggleControlSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?ToggleDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::ToggleDomain
; _this$ = ecx

; 1077 : TacanList::Domain NavigationSystem::ToggleDomain(Tacan_Channel_Src src) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1078 : 
; 1079 : 	VU_ID		vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1080 : 
; 1081 : 	if(mpCurrentDomain[src] == TacanList::AA) {

	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+1900], 0
	jne	SHORT $LN2@ToggleDoma

; 1082 : 		mpCurrentDomain[src] = TacanList::AG;

	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+1900], 1

; 1083 : 	}
; 1084 : 	else {

	jmp	SHORT $LN1@ToggleDoma
$LN2@ToggleDoma:

; 1085 : 		mpCurrentDomain[src] = TacanList::AA;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+1900], 0
$LN1@ToggleDoma:

; 1086 : 	}
; 1087 : 
; 1088 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set,
; 1089 : 	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1856]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1852]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1848]
	push	edx
	lea	eax, DWORD PTR _vuID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1836]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1090 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+edx+1840], ecx
	mov	ecx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+edx+1844], ecx

; 1091 : 
; 1092 : 	return mpCurrentDomain[src];

	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+1900]

; 1093 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ToggleDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::ToggleDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z PROC ; NavigationSystem::GetDomain
; _this$ = ecx

; 1065 : TacanList::Domain NavigationSystem::GetDomain(Tacan_Channel_Src src) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1066 : 
; 1067 : 	return mpCurrentDomain[src];

	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+1900]

; 1068 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ENDP ; NavigationSystem::GetDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z PROC	; NavigationSystem::SetDomain
; _this$ = ecx

; 1016 : void NavigationSystem::SetDomain(Type type) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1017 : 
; 1018 : 	switch(type) {

	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN3@SetDomain
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN2@SetDomain
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN1@SetDomain
	jmp	SHORT $LN4@SetDomain
$LN3@SetDomain:

; 1019 : 	case AIRBASE:
; 1020 : 		mpCurrentDomain[ICP] = TacanList::AG;

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+1900], 1

; 1021 : 	break;

	jmp	SHORT $LN4@SetDomain
$LN2@SetDomain:

; 1022 : 	case CARRIER:
; 1023 : 		mpCurrentDomain[ICP] = TacanList::AG;

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+1900], 1

; 1024 : 	break;

	jmp	SHORT $LN4@SetDomain
$LN1@SetDomain:

; 1025 : 	case TANKER:
; 1026 : 		mpCurrentDomain[ICP] = TacanList::AA;

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+1900], 0
$LN4@SetDomain:

; 1027 : 	break;
; 1028 : 	}
; 1029 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1030 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan

; 1031 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z ENDP	; NavigationSystem::SetDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_vuID$ = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_domain$ = 12						; size = 4
?SetDomain@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4Domain@TacanList@@@Z PROC ; NavigationSystem::SetDomain
; _this$ = ecx

; 1039 : void NavigationSystem::SetDomain(Tacan_Channel_Src src, TacanList::Domain domain) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1040 : 	
; 1041 : 	if(domain < 0 || domain >= TacanList::NumDomains)

	cmp	DWORD PTR _domain$[ebp], 0
	jl	SHORT $LN1@SetDomain
	cmp	DWORD PTR _domain$[ebp], 2
	jl	SHORT $LN2@SetDomain
$LN1@SetDomain:

; 1042 : 	{
; 1043 : 		ShiWarning ("Bad Nav Domain");
; 1044 : 		return;

	jmp	$LN3@SetDomain
$LN2@SetDomain:

; 1045 : 	}
; 1046 : 
; 1047 : 	VU_ID		vuID;

	lea	ecx, DWORD PTR _vuID$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 1048 : 
; 1049 : 	mpCurrentDomain[src] = domain;

	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _domain$[ebp]
	mov	DWORD PTR [ecx+eax*4+1900], edx

; 1050 : 	FindTacanStation(src, mpCurrentTCN[src].channel, mpCurrentTCN[src].set, 
; 1051 : 	    &vuID, &mpCurrentTCN[src].range, &mpCurrentTCN[src].ttype, &mpCurrentTCN[src].ilsfreq);

	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1856]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1852]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1848]
	push	edx
	lea	eax, DWORD PTR _vuID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1836]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ; NavigationSystem::FindTacanStation

; 1052 : 	mpCurrentTCN[src].vuID	= vuID;

	mov	edx, DWORD PTR _src$[ebp]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vuID$[ebp]
	mov	DWORD PTR [eax+edx+1840], ecx
	mov	ecx, DWORD PTR _vuID$[ebp+4]
	mov	DWORD PTR [eax+edx+1844], ecx

; 1053 : 	// MD --20040605: and update ILS info since we may be changing TACAN completely
; 1054 : 	/*gNavigationSys->*/SetIlsFromTacan();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetIlsFromTacan@NavigationSystem@@QAEXXZ ; NavigationSystem::SetIlsFromTacan
$LN3@SetDomain:

; 1055 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetDomain@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@W4Domain@TacanList@@@Z ENDP ; NavigationSystem::SetDomain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_pNext$ = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
_pLink$ = -4						; size = 4
?DeleteMissionTacans@NavigationSystem@@QAEXXZ PROC	; NavigationSystem::DeleteMissionTacans
; _this$ = ecx

; 591  : void NavigationSystem::DeleteMissionTacans(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 592  : 	
; 593  : 	Tacan_Data_LL_Str*	pLink;
; 594  : 	Tacan_Data_LL_Str*	pNext;
; 595  : 
; 596  : 	if(mpMissionTacans) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1968], 0
	je	SHORT $LN4@DeleteMiss

; 597  : 		pLink = mpMissionTacans;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1968]
	mov	DWORD PTR _pLink$[ebp], edx
$LN2@DeleteMiss:

; 598  : 
; 599  : 		while(pLink) {

	cmp	DWORD PTR _pLink$[ebp], 0
	je	SHORT $LN1@DeleteMiss

; 600  : 			pNext	=	pLink->pNext;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pNext$[ebp], ecx

; 601  : 			delete pLink->pData;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 602  : 			delete pLink;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 603  : 			pLink = pNext;

	mov	ecx, DWORD PTR _pNext$[ebp]
	mov	DWORD PTR _pLink$[ebp], ecx

; 604  : 		}

	jmp	SHORT $LN2@DeleteMiss
$LN1@DeleteMiss:

; 605  : 
; 606  : 		mpMissionTacans				= NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1968], 0

; 607  : 		mpCurrentMissionTacan		= NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1972], 0
$LN4@DeleteMiss:

; 608  : 	}
; 609  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteMissionTacans@NavigationSystem@@QAEXXZ ENDP	; NavigationSystem::DeleteMissionTacans
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
$T2 = -116						; size = 8
$T3 = -108						; size = 8
_id$ = -100						; size = 8
_domain$ = -92						; size = 4
$T4 = -88						; size = 4
$T5 = -84						; size = 4
_ttype$6 = -80						; size = 4
_ilsfreq$7 = -76					; size = 4
_range$8 = -72						; size = 4
_set$ = -68						; size = 4
$T9 = -64						; size = 4
$T10 = -60						; size = 4
tv207 = -56						; size = 4
$T11 = -52						; size = 4
tv133 = -48						; size = 4
$T12 = -44						; size = 4
_prevLink$ = -40					; size = 4
_pFlight$ = -36						; size = 4
_pTankerFlight$ = -32					; size = 4
_pwaypoint$ = -28					; size = 4
_this$ = -24						; size = 4
_channel$ = -20						; size = 4
_pLink$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ownship$ = 8						; size = 4
?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z PROC ; NavigationSystem::SetMissionTacans
; _this$ = ecx

; 618  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 619  : 
; 620  : 	WayPointClass*				pwaypoint = ownship->waypoint;

	mov	eax, DWORD PTR _ownship$[ebp]
	mov	ecx, DWORD PTR [eax+732]
	mov	DWORD PTR _pwaypoint$[ebp], ecx

; 621  : 	VU_ID							id;	

	lea	ecx, DWORD PTR _id$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 622  : 	int							channel;
; 623  : 	TacanList::Domain			domain;
; 624  : 	TacanList::StationSet	set;
; 625  : 	Tacan_Data_LL_Str*		pLink;
; 626  : 	Tacan_Data_LL_Str*		prevLink;
; 627  : 	FlightClass*				pFlight = NULL;

	mov	DWORD PTR _pFlight$[ebp], 0

; 628  : 	FlightClass*				pTankerFlight = NULL;

	mov	DWORD PTR _pTankerFlight$[ebp], 0

; 629  : 
; 630  : 	if(mpMissionTacans) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1968], 0
	je	SHORT $LN12@SetMission

; 631  : 		DeleteMissionTacans();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteMissionTacans@NavigationSystem@@QAEXXZ ; NavigationSystem::DeleteMissionTacans
$LN12@SetMission:

; 632  : 	}
; 633  : 
; 634  : 	// 2001-10-09 M.N. Modified -> Sorting direction changed so that our home base will become 
; 635  : 	// the first Tacanlist element and thus will be set up as our ICP tacan channel
; 636  : 	// old sorting: If alternate base present, its tacan channel gets ICP tacan channel
; 637  : 
; 638  : 	// Moved tanker tacan channel behind waypoint "channels"
; 639  : 
; 640  : //	prevLink = new Tacan_Data_LL_Str;			
; 641  : //	prevLink->pData = new Tacan_Data_Str;
; 642  : 	prevLink = NULL;

	mov	DWORD PTR _prevLink$[ebp], 0
$LN11@SetMission:

; 643  : 
; 644  : 	while(pwaypoint) {

	cmp	DWORD PTR _pwaypoint$[ebp], 0
	je	$LN10@SetMission

; 645  : 		if(pwaypoint->GetWPAction() == WP_LAND) {

	mov	ecx, DWORD PTR _pwaypoint$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 7
	jne	$LN8@SetMission

; 646  : 			
; 647  : 			id = pwaypoint->GetWPTargetID();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _pwaypoint$[ebp]
	call	?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ ; WayPointClass::GetWPTargetID
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _id$[ebp], ecx
	mov	DWORD PTR _id$[ebp+4], edx

; 648  : 			int range, ttype;
; 649  : 			float ilsfreq;
; 650  : 			if(gTacanList->GetChannelFromVUID(id, &channel, &set, &domain,
; 651  : 			    &range, &ttype, &ilsfreq)) {	// If we find the tacan put it in the list

	lea	eax, DWORD PTR _ilsfreq$7[ebp]
	push	eax
	lea	ecx, DWORD PTR _ttype$6[ebp]
	push	ecx
	lea	edx, DWORD PTR _range$8[ebp]
	push	edx
	lea	eax, DWORD PTR _domain$[ebp]
	push	eax
	lea	ecx, DWORD PTR _set$[ebp]
	push	ecx
	lea	edx, DWORD PTR _channel$[ebp]
	push	edx
	mov	eax, DWORD PTR _id$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	call	?GetChannelFromVUID@TacanList@@QAEHVVU_ID@@PAHPAW4StationSet@1@PAW4Domain@1@11PAM@Z ; TacanList::GetChannelFromVUID
	test	eax, eax
	je	$LN8@SetMission

; 652  : 				
; 653  : 
; 654  : 				pLink						= new Tacan_Data_LL_Str;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	edx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _pLink$[ebp], edx

; 655  : 				pLink->pData				= new Tacan_Data_Str;

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN15@SetMission
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0Tacan_Data_Str@NavigationSystem@@QAE@XZ
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN16@SetMission
$LN15@SetMission:
	mov	DWORD PTR tv133[ebp], 0
$LN16@SetMission:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR [ecx+8], edx

; 656  : 
; 657  : 				pLink->pNext				= NULL;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [eax], 0

; 658  : 				pLink->pPrevious			= NULL;

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 659  : 				pLink->pData->vuID		= id;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+24], edx

; 660  : 				pLink->pData->channel	= channel;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [ecx], edx

; 661  : 				pLink->pData->set			= set;						

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _set$[ebp]
	mov	DWORD PTR [ecx+16], edx

; 662  : 				pLink->pData->digits[2]	= channel / 100;		// Break up into digits

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR [ecx+edx+4], eax

; 663  : 				channel						= channel - pLink->pData->digits[2] * 100;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 664  : 				pLink->pData->digits[1]	= channel / 10;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR [ecx+edx+4], eax

; 665  : 				channel						= channel - pLink->pData->digits[1] * 10;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 666  : 				pLink->pData->digits[0]	= channel;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [eax+ecx+4], edx

; 667  : 				pLink->pData->range = range;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _range$8[ebp]
	mov	DWORD PTR [ecx+28], edx

; 668  : 				pLink->pData->ilsfreq = ilsfreq;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR _ilsfreq$7[ebp]
	movss	DWORD PTR [ecx+36], xmm0

; 669  : 				pLink->pData->ttype = ttype;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _ttype$6[ebp]
	mov	DWORD PTR [eax+32], ecx

; 670  : 
; 671  : 				pLink->type = AIRBASE;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [edx+12], 0

; 672  : 					
; 673  : 				//add link
; 674  : 				if(mpMissionTacans == NULL) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1968], 0
	jne	SHORT $LN7@SetMission

; 675  : 					mpMissionTacans		= pLink;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [ecx+1968], edx

; 676  : 					pLink->pPrevious		= NULL;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [eax+4], 0

; 677  : 				}
; 678  : 				else{

	jmp	SHORT $LN6@SetMission
$LN7@SetMission:

; 679  : //					mpMissionTacans->pPrevious = pLink;
; 680  : //					pLink->pNext			= mpMissionTacans;
; 681  : 
; 682  : 					// 2001-10-08 M.N. sort the other way around 
; 683  : 					//                 -> first list entry is always our home base
; 684  : 					ShiAssert(prevLink);
; 685  : 					pLink->pPrevious = prevLink;

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR _prevLink$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 686  : 					mpMissionTacans->pNext = pLink;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1968]
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [ecx], edx
$LN6@SetMission:

; 687  : 					
; 688  : 				}					
; 689  : 				prevLink = pLink;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR _prevLink$[ebp], eax
$LN8@SetMission:

; 690  : 			}
; 691  : 		}
; 692  : 		pwaypoint = pwaypoint->GetNextWP();

	mov	ecx, DWORD PTR _pwaypoint$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _pwaypoint$[ebp], eax

; 693  : 	}	

	jmp	$LN11@SetMission
$LN10@SetMission:

; 694  : 
; 695  : 	pFlight			= (FlightClass*) ownship->GetCampaignObject();

	mov	ecx, DWORD PTR _ownship$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	DWORD PTR _pFlight$[ebp], eax

; 696  : 	if(pFlight) {

	cmp	DWORD PTR _pFlight$[ebp], 0
	je	SHORT $LN5@SetMission

; 697  : 		pTankerFlight = pFlight->GetTankerFlight();

	mov	ecx, DWORD PTR _pFlight$[ebp]
	call	?GetTankerFlight@FlightClass@@QAEPAV1@XZ ; FlightClass::GetTankerFlight
	mov	DWORD PTR _pTankerFlight$[ebp], eax
$LN5@SetMission:

; 698  : 	}
; 699  : 
; 700  : 	if(pTankerFlight) {

	cmp	DWORD PTR _pTankerFlight$[ebp], 0
	je	$LN2@SetMission

; 701  : 		pLink							= new Tacan_Data_LL_Str;

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _pLink$[ebp], ecx

; 702  : 		pLink->pData				= new Tacan_Data_Str;

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN17@SetMission
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0Tacan_Data_Str@NavigationSystem@@QAE@XZ
	mov	DWORD PTR tv207[ebp], eax
	jmp	SHORT $LN18@SetMission
$LN17@SetMission:
	mov	DWORD PTR tv207[ebp], 0
$LN18@SetMission:
	mov	edx, DWORD PTR tv207[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [eax+8], ecx

; 703  : 
; 704  : 		pLink->pNext				= NULL;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [edx], 0

; 705  : 		pLink->pPrevious			= NULL;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [eax+4], 0

; 706  : 		pLink->pData->vuID		= pTankerFlight->Id();

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTankerFlight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+20], edx
	mov	DWORD PTR [ecx+24], eax

; 707  : 		pLink->pData->channel	= (int)pTankerFlight->tacan_channel;

	mov	edx, DWORD PTR _pTankerFlight$[ebp]
	movzx	eax, BYTE PTR [edx+436]
	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], eax

; 708  : 		channel						= pLink->pData->channel;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _channel$[ebp], edx

; 709  : 		pLink->pData->set			= TacanList::Y;						

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+16], 1

; 710  : 		pLink->pData->digits[2]	= channel / 100;		// Break up into digits

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR [ecx+edx+4], eax

; 711  : 		channel						= channel - pLink->pData->digits[2] * 100;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 712  : 		pLink->pData->digits[1]	= channel / 10;

	mov	eax, DWORD PTR _channel$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR [ecx+edx+4], eax

; 713  : 		channel						= channel - pLink->pData->digits[1] * 10;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR [ecx+edx+4]
	imul	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _channel$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _channel$[ebp], ecx

; 714  : 		pLink->pData->digits[0]	= channel;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _channel$[ebp]
	mov	DWORD PTR [eax+ecx+4], edx

; 715  : 		pLink->pData->range = 150;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+28], 150			; 00000096H

; 716  : 		pLink->pData->ilsfreq = 0;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+36], xmm0

; 717  : 		pLink->pData->ttype = 1;

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+32], 1

; 718  : 
; 719  : 		pLink->type					= TANKER;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [eax+12], 2

; 720  : 
; 721  : 		//	mpMissionTacans			= pLink;
; 722  : 
; 723  : 
; 724  : 		//add link (we already have at least one tacan, so just add another one
; 725  : 		//	ShiAssert(prevLink); not needed anymore
; 726  : 
; 727  : 		// M.N. we have no airbase - can be in IA; CTD Fix
; 728  : 			
; 729  : 			if (!mpMissionTacans)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1968], 0
	jne	SHORT $LN3@SetMission

; 730  : 				mpMissionTacans = pLink;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [edx+1968], eax

; 731  : 			else 

	jmp	SHORT $LN2@SetMission
$LN3@SetMission:

; 732  : 			{
; 733  : 				pLink->pPrevious = prevLink;

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR _prevLink$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 734  : 				mpMissionTacans->pNext = pLink;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1968]
	mov	edx, DWORD PTR _pLink$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@SetMission:

; 735  : 			}
; 736  : 		}					
; 737  : 
; 738  : 
; 739  : // Now we have a list of Homeplate->Alt->Tanker or Homeplate->Tanker or only Homeplate
; 740  : // mpCurrentTCN[ICP] = homeplate tacan channel in every case
; 741  : // old algorithm result: if Alternate base present, mpCurrentTCN[ICP] = altbase tacan
; 742  : 
; 743  : 	if(mpMissionTacans) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1968], 0
	je	SHORT $LN1@SetMission

; 744  : 		mpCurrentMissionTacan			= mpMissionTacans;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1968]
	mov	DWORD PTR [ecx+1972], eax

; 745  : 		CopyMissionTCNData(&mpCurrentTCN[ICP], mpCurrentMissionTacan);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1972]
	push	edx
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1820]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z ; NavigationSystem::CopyMissionTCNData

; 746  : 		SetDomain(mpMissionTacans->type);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1968]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDomain@NavigationSystem@@QAEXW4Type@1@@Z ; NavigationSystem::SetDomain
$LN1@SetMission:

; 747  : 	}
; 748  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z$0:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z$1:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetMissionTacans@NavigationSystem@@QAEXPAVAircraftClass@@@Z ENDP ; NavigationSystem::SetMissionTacans
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_returnVal$ = -8					; size = 4
_this$ = -4						; size = 4
_attribute$ = 8						; size = 4
_pRwyNum$ = 12						; size = 4
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAD@Z PROC ; NavigationSystem::GetILSAttribute
; _this$ = ecx

; 554  : BOOL NavigationSystem::GetILSAttribute(Attribute attribute, char* pRwyNum) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 555  : 	BOOL returnVal = FALSE;

	mov	DWORD PTR _returnVal$[ebp], 0

; 556  : 	
; 557  : 	*pRwyNum = NULL;

	mov	eax, DWORD PTR _pRwyNum$[ebp]
	mov	BYTE PTR [eax], 0

; 558  : 
; 559  : 	if(mpCurrentIls.vuID != FalconNullId && mpCurrentIls.rwyidx != 0) {

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1956				; 000007a4H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetILSAttr
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1928], 0
	je	SHORT $LN2@GetILSAttr

; 560  : 
; 561  : 		if(attribute == RWY_NUM) {

	cmp	DWORD PTR _attribute$[ebp], 3
	jne	SHORT $LN2@GetILSAttr

; 562  : 			strcpy(pRwyNum, mpCurrentIls.rwynum);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1932				; 0000078cH
	push	eax
	mov	ecx, DWORD PTR _pRwyNum$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 563  : 			returnVal = TRUE;

	mov	DWORD PTR _returnVal$[ebp], 1
$LN2@GetILSAttr:

; 564  : 		}
; 565  : 	}
; 566  : 
; 567  : 	return returnVal;

	mov	eax, DWORD PTR _returnVal$[ebp]

; 568  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAD@Z ENDP ; NavigationSystem::GetILSAttribute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_ID$1 = -44						; size = 8
_range$2 = -36						; size = 4
_type$3 = -32						; size = 4
_ilsf$4 = -28						; size = 4
_returnVal$ = -24					; size = 4
_TacanChannel$5 = -20					; size = 4
_Digit3$6 = -16						; size = 4
_Digit2$7 = -12						; size = 4
_Digit1$8 = -8						; size = 4
_this$ = -4						; size = 4
_attribute$ = 8						; size = 4
_value$ = 12						; size = 4
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z PROC ; NavigationSystem::GetILSAttribute
; _this$ = ecx

; 466  : BOOL NavigationSystem::GetILSAttribute(Attribute attribute, float* value) {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 467  : 
; 468  : 	BOOL returnVal = FALSE;

	mov	DWORD PTR _returnVal$[ebp], 0

; 469  : 
; 470  : 	*value = 0.0F;

	mov	eax, DWORD PTR _value$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 471  : 
; 472  : 	// MD -- 20040605: adding a reception check here -- you should not be able to get a signal and therefore
; 473  : 	// needles should remain inactive if range to station is greater than ~25nm (150k feet)
; 474  : 	if(mpCurrentIls.vuID != FalconNullId && mpCurrentIls.rwyidx != 0 && (distToToLocalizer < 150000.0F)) 

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1956				; 000007a4H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN16@GetILSAttr
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1928], 0
	je	$LN16@GetILSAttr
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@48127c00
	comiss	xmm0, DWORD PTR [eax+2000]
	jbe	$LN16@GetILSAttr

; 475  : 	{
; 476  : 		//MI check to make sure we are allowed to get the ILS
; 477  : 		if(g_bRealisticAvionics)

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	je	$LN9@GetILSAttr

; 478  : 		{
; 479  : 			VU_ID		ID;

	lea	ecx, DWORD PTR _ID$1[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID

; 480  : 			int Digit1, Digit2, Digit3, TacanChannel;
; 481  : 			int range, type;
; 482  : 			float ilsf;
; 483  : 			if(GetControlSrc() == NavigationSystem::AUXCOMM)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	cmp	eax, 1
	jne	$LN14@GetILSAttr

; 484  : 			{
; 485  : 				//Get our current AUXComm channel
; 486  : 				Digit1 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::AUXCOMM, 2);

	push	2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit1$8[ebp], eax

; 487  : 				Digit2 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::AUXCOMM, 1);

	push	1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit2$7[ebp], eax

; 488  : 				Digit3 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::AUXCOMM, 0);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit3$6[ebp], eax

; 489  : 				TacanChannel = (Digit1 * 100 + Digit2 * 10 + Digit3);

	mov	edx, DWORD PTR _Digit1$8[ebp]
	imul	edx, 100				; 00000064H
	mov	eax, DWORD PTR _Digit2$7[ebp]
	imul	eax, 10					; 0000000aH
	add	edx, DWORD PTR _Digit3$6[ebp]
	add	eax, edx
	mov	DWORD PTR _TacanChannel$5[ebp], eax

; 490  : 
; 491  : 				gTacanList->GetVUIDFromChannel(TacanChannel,
; 492  : 					GetTacanBand(NavigationSystem::AUXCOMM), GetDomain(NavigationSystem::AUXCOMM),
; 493  : 					&ID, &range, &type, &ilsf);

	lea	ecx, DWORD PTR _ilsf$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _type$3[ebp]
	push	edx
	lea	eax, DWORD PTR _range$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$1[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetDomain
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanBand
	push	eax
	mov	edx, DWORD PTR _TacanChannel$5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	call	?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z ; TacanList::GetVUIDFromChannel

; 494  : 
; 495  : 				if(GetTacanBand(NavigationSystem::AUXCOMM) == TacanList::Y ||	//Tacanband isn't X
; 496  : 					GetDomain(NavigationSystem::AUXCOMM) == TacanList::AA ||	//Not in AG Mode
; 497  : 					mpCurrentIls.vuID != ID)									//Tacanchannel not same

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanBand
	cmp	eax, 1
	je	SHORT $LN12@GetILSAttr
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetDomain
	test	eax, eax
	je	SHORT $LN12@GetILSAttr
	lea	eax, DWORD PTR _ID$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1956				; 000007a4H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@GetILSAttr
$LN12@GetILSAttr:

; 498  : 				{
; 499  : 					return FALSE;

	xor	eax, eax
	jmp	$LN17@GetILSAttr
$LN13@GetILSAttr:

; 500  : 				}
; 501  : 			}

	jmp	$LN9@GetILSAttr
$LN14@GetILSAttr:

; 502  : 			else if(GetControlSrc() == NavigationSystem::ICP)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetControlSrc@NavigationSystem@@QAE?AW4Tacan_Channel_Src@1@XZ ; NavigationSystem::GetControlSrc
	test	eax, eax
	jne	$LN9@GetILSAttr

; 503  : 			{ 
; 504  : 				Digit1 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::ICP, 2);

	push	2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit1$8[ebp], eax

; 505  : 				Digit2 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::ICP, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit2$7[ebp], eax

; 506  : 				Digit3 = /*gNavigationSys->*/GetTacanChannel(NavigationSystem::ICP, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanChannel@NavigationSystem@@QAEHW4Tacan_Channel_Src@1@H@Z ; NavigationSystem::GetTacanChannel
	mov	DWORD PTR _Digit3$6[ebp], eax

; 507  : 				TacanChannel = (Digit1 * 100 + Digit2 * 10 + Digit3);

	mov	edx, DWORD PTR _Digit1$8[ebp]
	imul	edx, 100				; 00000064H
	mov	eax, DWORD PTR _Digit2$7[ebp]
	imul	eax, 10					; 0000000aH
	add	edx, DWORD PTR _Digit3$6[ebp]
	add	eax, edx
	mov	DWORD PTR _TacanChannel$5[ebp], eax

; 508  : 
; 509  : 				gTacanList->GetVUIDFromChannel(TacanChannel, //Tacanchannel not same
; 510  : 					GetTacanBand(NavigationSystem::ICP), GetDomain(NavigationSystem::ICP),
; 511  : 					&ID, &range, &type, &ilsf);

	lea	ecx, DWORD PTR _ilsf$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _type$3[ebp]
	push	edx
	lea	eax, DWORD PTR _range$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _ID$1[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetDomain
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanBand
	push	eax
	mov	edx, DWORD PTR _TacanChannel$5[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	call	?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z ; TacanList::GetVUIDFromChannel

; 512  : 
; 513  : 				if(GetTacanBand(NavigationSystem::ICP) == TacanList::Y ||	//Tacanband isn't X
; 514  : 					GetDomain(NavigationSystem::ICP) == TacanList::AA ||	// Not in AG mode
; 515  : 					mpCurrentIls.vuID != ID)

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTacanBand@NavigationSystem@@QAE?AW4StationSet@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetTacanBand
	cmp	eax, 1
	je	SHORT $LN8@GetILSAttr
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDomain@NavigationSystem@@QAE?AW4Domain@TacanList@@W4Tacan_Channel_Src@1@@Z ; NavigationSystem::GetDomain
	test	eax, eax
	je	SHORT $LN8@GetILSAttr
	lea	eax, DWORD PTR _ID$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1956				; 000007a4H
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@GetILSAttr
$LN8@GetILSAttr:

; 516  : 				{
; 517  : 					return FALSE;

	xor	eax, eax
	jmp	$LN17@GetILSAttr
$LN9@GetILSAttr:

; 518  : 				}
; 519  : 			}
; 520  : 		}
; 521  : 		if(attribute == GP_DEV) {

	cmp	DWORD PTR _attribute$[ebp], 4
	jne	SHORT $LN7@GetILSAttr

; 522  : 			*value = mpCurrentIls.gpDeviation;

	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1948]
	mov	DWORD PTR [edx], ecx

; 523  : 			returnVal = TRUE;

	mov	DWORD PTR _returnVal$[ebp], 1

; 524  : 			if(g_bRealisticAvionics && g_bINS && SimDriver.GetPlayerAircraft())

	movzx	edx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	edx, edx
	je	SHORT $LN6@GetILSAttr
	movzx	eax, BYTE PTR ?g_bINS@@3_NA		; g_bINS
	test	eax, eax
	je	SHORT $LN6@GetILSAttr
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	SHORT $LN6@GetILSAttr

; 525  : 				SimDriver.GetPlayerAircraft()->LOCValid = TRUE;	//Flag not visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+837], 1
$LN6@GetILSAttr:

; 526  : 		}

	jmp	SHORT $LN3@GetILSAttr
$LN7@GetILSAttr:

; 527  : 		else if(attribute == GS_DEV) {

	cmp	DWORD PTR _attribute$[ebp], 5
	jne	SHORT $LN3@GetILSAttr

; 528  : 			*value = mpCurrentIls.gsDeviation;

	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1952]
	mov	DWORD PTR [ecx], eax

; 529  : 			returnVal = TRUE;

	mov	DWORD PTR _returnVal$[ebp], 1

; 530  : 			if(g_bRealisticAvionics && g_bINS && SimDriver.GetPlayerAircraft())

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	je	SHORT $LN3@GetILSAttr
	movzx	edx, BYTE PTR ?g_bINS@@3_NA		; g_bINS
	test	edx, edx
	je	SHORT $LN3@GetILSAttr
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	SHORT $LN3@GetILSAttr

; 531  : 				SimDriver.GetPlayerAircraft()->GSValid = TRUE;	//Flag not visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+836], 1
$LN3@GetILSAttr:

; 532  : 		}
; 533  : 	}
; 534  : 	else

	jmp	SHORT $LN1@GetILSAttr
$LN16@GetILSAttr:

; 535  : 	{
; 536  : 		//MI additions
; 537  : 		if(g_bRealisticAvionics && g_bINS && SimDriver.GetPlayerAircraft())

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	je	SHORT $LN1@GetILSAttr
	movzx	ecx, BYTE PTR ?g_bINS@@3_NA		; g_bINS
	test	ecx, ecx
	je	SHORT $LN1@GetILSAttr
	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	test	eax, eax
	je	SHORT $LN1@GetILSAttr

; 538  : 		{
; 539  : 			SimDriver.GetPlayerAircraft()->LOCValid = FALSE;	//Flag visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+837], 0

; 540  : 			SimDriver.GetPlayerAircraft()->GSValid = FALSE;	//Flag visible

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	BYTE PTR [eax+836], 0
$LN1@GetILSAttr:

; 541  : 		}
; 542  : 	}
; 543  : 
; 544  : 	return returnVal;

	mov	eax, DWORD PTR _returnVal$[ebp]
$LN17@GetILSAttr:

; 545  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z ENDP ; NavigationSystem::GetILSAttribute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_returnVal$ = -4					; size = 4
_attribute$ = 8						; size = 4
_pId$ = 12						; size = 4
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAVVU_ID@@@Z PROC ; NavigationSystem::GetILSAttribute
; _this$ = ecx

; 575  : BOOL NavigationSystem::GetILSAttribute(Attribute attribute, VU_ID* pId) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 576  : 	BOOL returnVal = FALSE;

	mov	DWORD PTR _returnVal$[ebp], 0

; 577  : 
; 578  : 	*pId = mpCurrentIls.vuID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1956]
	mov	edx, DWORD PTR [eax+1960]
	mov	eax, DWORD PTR _pId$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 579  : 
; 580  : 	if(*pId != FalconNullId) {

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, DWORD PTR _pId$[ebp]
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetILSAttr

; 581  : 		returnVal = TRUE;

	mov	DWORD PTR _returnVal$[ebp], 1
$LN1@GetILSAttr:

; 582  : 	}
; 583  : 
; 584  : 	return returnVal;

	mov	eax, DWORD PTR _returnVal$[ebp]

; 585  : 	attribute;
; 586  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetILSAttribute@NavigationSystem@@QAEHW4Attribute@1@PAVVU_ID@@@Z ENDP ; NavigationSystem::GetILSAttribute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_entity$ = -4						; size = 4
_xp$ = 8						; size = 4
_yp$ = 12						; size = 4
_zp$ = 16						; size = 4
?GetTCNPosition@NavigationSystem@@QAEHPAM00@Z PROC	; NavigationSystem::GetTCNPosition
; _this$ = ecx

; 883  : BOOL NavigationSystem::GetTCNPosition(float *xp, float *yp, float *zp) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 884  :     
; 885  :     VuEntity*	entity;
; 886  :     
; 887  :     entity = vuDatabase->Find(mpCurrentTCN[mCurrentTCNSrc].vuID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1816]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1844]
	push	eax
	mov	ecx, DWORD PTR [edx+ecx+1840]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _entity$[ebp], eax

; 888  :     
; 889  :     if(entity == NULL) {

	cmp	DWORD PTR _entity$[ebp], 0
	jne	SHORT $LN3@GetTCNPosi

; 890  : 	*xp = *yp = *zp = 0;

	mov	edx, DWORD PTR _zp$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0
	mov	eax, DWORD PTR _yp$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _xp$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx], xmm0

; 891  : 	return FALSE;

	xor	eax, eax
	jmp	SHORT $LN4@GetTCNPosi
$LN3@GetTCNPosi:

; 892  :     }
; 893  :     
; 894  :     if(entity->EntityType()->classInfo_[VU_CLASS] == CLASS_UNIT &&
; 895  : 	entity->EntityType()->classInfo_[VU_TYPE] == TYPE_FLIGHT) 

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	edx, 1
	shl	edx, 0
	movzx	eax, BYTE PTR [eax+edx+8]
	cmp	eax, 6
	jne	SHORT $LN1@GetTCNPosi
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR [eax+ecx+8]
	cmp	edx, 1
	jne	SHORT $LN1@GetTCNPosi

; 896  : 	{
; 897  : 		if(((FlightClass*) entity)->GetComponentLead()) 

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	test	eax, eax
	je	SHORT $LN1@GetTCNPosi

; 898  : 		{
; 899  : 			entity = ((FlightClass*) entity)->GetComponentLead();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	mov	DWORD PTR _entity$[ebp], eax
$LN1@GetTCNPosi:

; 900  : 		}
; 901  :     }
; 902  :     //	else if(entity->GetType() == STYPE_UNIT_CARRIER) {
; 903  :     //	}
; 904  :     
; 905  :     *xp = entity->XPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	mov	eax, DWORD PTR _xp$[ebp]
	fstp	DWORD PTR [eax]

; 906  :     *yp = entity->YPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	mov	ecx, DWORD PTR _yp$[ebp]
	fstp	DWORD PTR [ecx]

; 907  :     *zp = entity->ZPos();

	mov	ecx, DWORD PTR _entity$[ebp]
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	mov	edx, DWORD PTR _zp$[ebp]
	fstp	DWORD PTR [edx]

; 908  :     
; 909  :     return TRUE;

	mov	eax, 1
$LN4@GetTCNPosi:

; 910  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTCNPosition@NavigationSystem@@QAEHPAM00@Z ENDP	; NavigationSystem::GetTCNPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_z$ = -24						; size = 4
_y$ = -20						; size = 4
_x$ = -16						; size = 4
tv64 = -12						; size = 4
tv86 = -8						; size = 4
_this$ = -4						; size = 4
_attribute$ = 8						; size = 4
_value$ = 12						; size = 4
?GetTCNAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z PROC ; NavigationSystem::GetTCNAttribute
; _this$ = ecx

; 917  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 918  :    
; 919  :     switch (attribute) {

	mov	eax, DWORD PTR _attribute$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 7
	je	SHORT $LN9@GetTCNAttr
	cmp	DWORD PTR tv64[ebp], 8
	je	SHORT $LN8@GetTCNAttr
	jmp	SHORT $LN10@GetTCNAttr
$LN9@GetTCNAttr:

; 920  :     case RANGE:
; 921  : 	*value = static_cast<float>(mpCurrentTCN[mCurrentTCNSrc].range);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1816]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+edx+1848]
	mov	ecx, DWORD PTR _value$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 922  : 	return TRUE;

	mov	eax, 1
	jmp	$LN12@GetTCNAttr
$LN8@GetTCNAttr:

; 923  :     case ILSFREQ:
; 924  : 	*value =mpCurrentTCN[mCurrentTCNSrc].ilsfreq;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1816]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+eax+1856]
	mov	DWORD PTR [ecx], eax

; 925  : 	return TRUE;

	mov	eax, 1
	jmp	SHORT $LN12@GetTCNAttr
$LN10@GetTCNAttr:

; 926  :     }
; 927  :     
; 928  :     float x, y, z;
; 929  :     if (GetTCNPosition(&x, &y, &z) != TRUE)

	lea	ecx, DWORD PTR _z$[ebp]
	push	ecx
	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTCNPosition@NavigationSystem@@QAEHPAM00@Z ; NavigationSystem::GetTCNPosition
	cmp	eax, 1
	je	SHORT $LN7@GetTCNAttr

; 930  : 	return FALSE;

	xor	eax, eax
	jmp	SHORT $LN12@GetTCNAttr
$LN7@GetTCNAttr:

; 931  :     switch (attribute) {

	mov	ecx, DWORD PTR _attribute$[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 0
	je	SHORT $LN4@GetTCNAttr
	cmp	DWORD PTR tv86[ebp], 1
	je	SHORT $LN3@GetTCNAttr
	cmp	DWORD PTR tv86[ebp], 2
	je	SHORT $LN2@GetTCNAttr
	jmp	SHORT $LN1@GetTCNAttr
$LN4@GetTCNAttr:

; 932  :     case X_POS:
; 933  : 	*value = x;

	mov	edx, DWORD PTR _value$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [edx], xmm0

; 934  : 	break;

	jmp	SHORT $LN5@GetTCNAttr
$LN3@GetTCNAttr:

; 935  :     case Y_POS:
; 936  : 	*value = y;

	mov	eax, DWORD PTR _value$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax], xmm0

; 937  : 	break;

	jmp	SHORT $LN5@GetTCNAttr
$LN2@GetTCNAttr:

; 938  :     case Z_POS:
; 939  : 	*value = z;

	mov	ecx, DWORD PTR _value$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [ecx], xmm0

; 940  : 	break;

	jmp	SHORT $LN5@GetTCNAttr
$LN1@GetTCNAttr:

; 941  :     default:
; 942  : 	return FALSE;

	xor	eax, eax
	jmp	SHORT $LN12@GetTCNAttr
$LN5@GetTCNAttr:

; 943  :     }
; 944  :     return TRUE;

	mov	eax, 1
$LN12@GetTCNAttr:

; 945  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetTCNAttribute@NavigationSystem@@QAEHW4Attribute@1@PAM@Z ENDP ; NavigationSystem::GetTCNAttribute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mode$ = 8						; size = 4
?SetUHFSrc@NavigationSystem@@QAEXW4UHF_Mode_Type@1@@Z PROC ; NavigationSystem::SetUHFSrc
; _this$ = ecx

; 2085 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2086 : 	mUHFMode = mode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax], ecx

; 2087 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetUHFSrc@NavigationSystem@@QAEXW4UHF_Mode_Type@1@@Z ENDP ; NavigationSystem::SetUHFSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUHFSrc@NavigationSystem@@QAE?AW4UHF_Mode_Type@1@XZ PROC ; NavigationSystem::GetUHFSrc
; _this$ = ecx

; 2075 : NavigationSystem::UHF_Mode_Type NavigationSystem::GetUHFSrc(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2076 : 	return mUHFMode;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 2077 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetUHFSrc@NavigationSystem@@QAE?AW4UHF_Mode_Type@1@XZ ENDP ; NavigationSystem::GetUHFSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ToggleUHFSrc@NavigationSystem@@QAEXXZ PROC		; NavigationSystem::ToggleUHFSrc
; _this$ = ecx

; 2058 : void NavigationSystem::ToggleUHFSrc(void) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2059 : 
; 2060 : 	if(mUHFMode == UHF_NORM) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@ToggleUHFS

; 2061 : 		mUHFMode = UHF_BACKUP;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 1

; 2062 : 	}
; 2063 : 	else {

	jmp	SHORT $LN3@ToggleUHFS
$LN2@ToggleUHFS:

; 2064 : 		mUHFMode = UHF_NORM;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@ToggleUHFS:

; 2065 : 	}
; 2066 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleUHFSrc@NavigationSystem@@QAEXXZ ENDP		; NavigationSystem::ToggleUHFSrc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
$T1 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -16						; size = 4
$T5 = -12						; size = 4
_this$ = -8						; size = 4
_i$ = -4						; size = 4
??1NavigationSystem@@QAE@XZ PROC			; NavigationSystem::~NavigationSystem
; _this$ = ecx

; 307  : NavigationSystem::~NavigationSystem() {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 308  : 
; 309  : 	int	i;
; 310  : 
; 311  : 	DeleteMissionTacans();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteMissionTacans@NavigationSystem@@QAEXXZ ; NavigationSystem::DeleteMissionTacans

; 312  : 	for(i = 0; i < MAX_MARKPOINTS; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN21@Navigation
$LN20@Navigation:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN21@Navigation:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN19@Navigation

; 313  : 		if(mpMarkPoints[i].pWaypoint) {

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+92], 0
	je	SHORT $LN18@Navigation

; 314  : 			delete mpMarkPoints[i].pWaypoint;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+92]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@Navigation:

; 315  : 		}
; 316  : 	}

	jmp	SHORT $LN20@Navigation
$LN19@Navigation:

; 317  : 
; 318  : 	for(i = 0; i < MAX_DLINKPOINTS; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@Navigation
$LN16@Navigation:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN17@Navigation:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN15@Navigation

; 319  : 		if(mpDLinkPoints[i].pWaypoint) {

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+896], 0
	je	SHORT $LN14@Navigation

; 320  : 			delete mpDLinkPoints[i].pWaypoint;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+896]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@Navigation:

; 321  : 		}
; 322  : 	}

	jmp	SHORT $LN16@Navigation
$LN15@Navigation:

; 323  : 	//MI OA Stuff
; 324  : 	if(g_bRealisticAvionics)

	movzx	edx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	edx, edx
	je	$LN22@Navigation

; 325  : 	{
; 326  : 		for(i = 0; i < MAX_DESTOA; i++) 

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@Navigation
$LN11@Navigation:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@Navigation:
	cmp	DWORD PTR _i$[ebp], 3
	jge	SHORT $LN10@Navigation

; 327  : 		{
; 328  : 			if(mpDESTOA[i].pWaypoint) 

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx+1240], 0
	je	SHORT $LN9@Navigation

; 329  : 				delete mpDESTOA[i].pWaypoint;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax+1240]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@Navigation:

; 330  : 		}

	jmp	SHORT $LN11@Navigation
$LN10@Navigation:

; 331  : 		for(i = 0; i < MAX_VIPOA; i++) 

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@Navigation
$LN7@Navigation:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN8@Navigation:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN6@Navigation

; 332  : 		{
; 333  : 			if(mpVIPOA[i].pWaypoint) 

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx+1508], 0
	je	SHORT $LN5@Navigation

; 334  : 				delete mpVIPOA[i].pWaypoint;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx+1508]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Navigation:

; 335  : 		}

	jmp	SHORT $LN7@Navigation
$LN6@Navigation:

; 336  : 		for(i = 0; i < MAX_VRPOA; i++) 

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Navigation
$LN3@Navigation:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@Navigation:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN22@Navigation

; 337  : 		{
; 338  : 			if(mpVRPOA[i].pWaypoint) 

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax+1688], 0
	je	SHORT $LN1@Navigation

; 339  : 				delete mpVRPOA[i].pWaypoint;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx+1688]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Navigation:

; 340  : 		}

	jmp	SHORT $LN3@Navigation
$LN22@Navigation:

; 341  : 	}
; 342  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1NavigationSystem@@QAE@XZ ENDP			; NavigationSystem::~NavigationSystem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
??0NavigationSystem@@QAE@XZ PROC			; NavigationSystem::NavigationSystem
; _this$ = ecx

; 218  : NavigationSystem::NavigationSystem() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??0Tacan_Data_Str@NavigationSystem@@QAE@XZ
	push	2
	push	40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1820				; 0000071cH
	push	eax
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1908				; 00000774H
	call	??0Ils_Data_Str@NavigationSystem@@QAE@XZ

; 219  : 
; 220  : 	int	i;
; 221  : 
; 222  : 	mInstrumentMode						= NAV;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1812], 0

; 223  : 	mCurrentTCNSrc							= ICP;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1816], 0

; 224  : 												
; 225  : 	mpCurrentDomain[AUXCOMM]			=	TacanList::AA;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+1900], 0

; 226  : 	mpCurrentDomain[ICP]					=	TacanList::AA;

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+1900], 0

; 227  : 
; 228  : 	memset(&mpCurrentTCN[ICP], 0, sizeof mpCurrentTCN[ICP]);

	push	40					; 00000028H
	push	0
	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 229  : 	memset(&mpCurrentTCN[AUXCOMM], 0, sizeof mpCurrentTCN[ICP]);

	push	40					; 00000028H
	push	0
	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1820]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 230  : 
; 231  : 	SetTacanChannel(AUXCOMM, 106, TacanList::X);

	push	0
	push	106					; 0000006aH
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@@Z ; NavigationSystem::SetTacanChannel

; 232  : 
; 233  : 	//MI initialize the ICP's settings
; 234  : 	SetTacanChannel(ICP, 106, TacanList::X);

	push	0
	push	106					; 0000006aH
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTacanChannel@NavigationSystem@@QAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@@Z ; NavigationSystem::SetTacanChannel

; 235  : 
; 236  : 	mpMissionTacans						= NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1968], 0

; 237  : 	mpCurrentMissionTacan				= NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1972], 0

; 238  : 
; 239  : 	mCurrentMark							= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 240  : 	mCurrentDLink							= 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+888], 0

; 241  : 
; 242  : 	mUHFMode									= UHF_NORM;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 243  : 
; 244  : 	mpCurrentIls.frontx					= 0.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+1908], xmm0

; 245  : 	mpCurrentIls.fronty					= 0.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+1912], xmm0

; 246  : 	mpCurrentIls.backx					= 0.0F;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+1916], xmm0

; 247  : 	mpCurrentIls.backy					= 0.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+1920], xmm0

; 248  : 	mpCurrentIls.z							= 0.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+1924], xmm0

; 249  : 	mpCurrentIls.rwyidx					= 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1928], 0

; 250  : 	*mpCurrentIls.rwynum					= NULL;

	mov	eax, 1
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+1932], 0

; 251  : 	mpCurrentIls.heading					= 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1936], 0

; 252  : 	mpCurrentIls.sinHeading				= 0.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+1940], xmm0

; 253  : 	mpCurrentIls.cosHeading				= 0.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+1944], xmm0

; 254  : 	mpCurrentIls.vuID						= FalconNullId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+1956], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+1960], ecx

; 255  : 	mpCurrentIls.pobjective				= NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1964], 0

; 256  : 
; 257  : 
; 258  : 	mCurrentDESTOA = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1152], 0

; 259  : 	mCurrentVIPOA = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1420], 0

; 260  : 	mCurrentVRPOA = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1600], 0

; 261  : 	for(i = 0; i < MAX_MARKPOINTS; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@Navigation
$LN15@Navigation:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN16@Navigation:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN14@Navigation

; 262  : 		mpMarkPoints[i].pointType	= NODATA;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+8], 0

; 263  : 		mpMarkPoints[i].pWaypoint	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+92], 0

; 264  : 		*(mpMarkPoints[i].pLatStr)	= NULL;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+4], 0

; 265  : 		*(mpMarkPoints[i].pLongStr)	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR [edx+eax+44], 0

; 266  : 	}

	jmp	SHORT $LN15@Navigation
$LN14@Navigation:

; 267  : 
; 268  : 	for(i = 0; i < MAX_DLINKPOINTS; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@Navigation
$LN12@Navigation:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN13@Navigation:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN11@Navigation

; 269  : 		mpDLinkPoints[i].pointType = FalconDLinkMessage::NODLINK;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+892], 0

; 270  : 		mpDLinkPoints[i].pWaypoint = NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 52					; 00000034H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+896], 0

; 271  : 	}

	jmp	SHORT $LN12@Navigation
$LN11@Navigation:

; 272  : 	//MI OA Stuff
; 273  : 	if(g_bRealisticAvionics)

	movzx	eax, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	eax, eax
	je	$LN1@Navigation

; 274  : 	{
; 275  : 		for(i = 0; i < MAX_DESTOA; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@Navigation
$LN8@Navigation:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@Navigation:
	cmp	DWORD PTR _i$[ebp], 3
	jge	SHORT $LN7@Navigation

; 276  : 		{
; 277  : 			mpDESTOA[i].pointType	= NODATA;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+1156], 0

; 278  : 			mpDESTOA[i].pWaypoint	= NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+1240], 0

; 279  : 			*(mpDESTOA[i].pLatStr)	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1156]
	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR [edx+eax+4], 0

; 280  : 			*(mpDESTOA[i].pLongStr)	= NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1156]
	mov	ecx, 1
	imul	ecx, 0
	mov	BYTE PTR [eax+ecx+44], 0

; 281  : 		}

	jmp	SHORT $LN8@Navigation
$LN7@Navigation:

; 282  : 		for(i = 0; i < MAX_VIPOA; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@Navigation
$LN5@Navigation:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@Navigation:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN4@Navigation

; 283  : 		{
; 284  : 			mpVIPOA[i].pointType	= NODATA;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+1424], 0

; 285  : 			mpVIPOA[i].pWaypoint	= NULL;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx+1508], 0

; 286  : 			*(mpVIPOA[i].pLatStr)	= NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1424]
	mov	ecx, 1
	imul	ecx, 0
	mov	BYTE PTR [eax+ecx+4], 0

; 287  : 			*(mpVIPOA[i].pLongStr)	= NULL;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1424]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+44], 0

; 288  : 		}

	jmp	SHORT $LN5@Navigation
$LN4@Navigation:

; 289  : 		for(i = 0; i < MAX_VRPOA; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Navigation
$LN2@Navigation:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Navigation:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN1@Navigation

; 290  : 		{
; 291  : 			mpVRPOA[i].pointType	= NODATA;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 88					; 00000058H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+1604], 0

; 292  : 			mpVRPOA[i].pWaypoint	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+1688], 0

; 293  : 			*(mpVRPOA[i].pLatStr)	= NULL;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1604]
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR [ecx+edx+4], 0

; 294  : 			*(mpVRPOA[i].pLongStr)	= NULL;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1604]
	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR [edx+eax+44], 0

; 295  : 		}

	jmp	SHORT $LN2@Navigation
$LN1@Navigation:

; 296  : 	}
; 297  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0NavigationSystem@@QAE@XZ ENDP			; NavigationSystem::NavigationSystem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_findWalker$2 = -44					; size = 12
$T3 = -32						; size = 8
_this$ = -24						; size = 4
_result$4 = -20						; size = 4
_p_flight$5 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_channel$ = 12						; size = 4
_set$ = 16						; size = 4
_id$ = 20						; size = 4
_rangep$ = 24						; size = 4
_type$ = 28						; size = 4
_ilsfreq$ = 32						; size = 4
?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z PROC ; NavigationSystem::FindTacanStation
; _this$ = ecx

; 1768 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1769 :     *rangep = 0;

	mov	eax, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [eax], 0

; 1770 :     *type = 0;

	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [ecx], 0

; 1771 :     *ilsfreq = 0;

	mov	edx, DWORD PTR _ilsfreq$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx], xmm0

; 1772 :     if(set == TacanList::Y && mpCurrentDomain[src] == TacanList::AA) {	// this only works for tankers now

	cmp	DWORD PTR _set$[ebp], 1
	jne	$LN7@FindTacanS
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+1900], 0
	jne	$LN7@FindTacanS

; 1773 : 
; 1774 : 		FlightClass*	p_flight;
; 1775 : 		BOOL				result = FALSE;

	mov	DWORD PTR _result$4[ebp], 0

; 1776 : 
; 1777 : 		VuListIterator findWalker (SimDriver.tankerList);

	mov	edx, DWORD PTR ?SimDriver@@3VSimulationDriver@@A+36
	push	edx
	lea	ecx, DWORD PTR _findWalker$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1778 : 		*id		= FalconNullId;			

	mov	eax, DWORD PTR _id$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+4], edx

; 1779 : 		p_flight = (FlightClass*)findWalker.GetFirst();

	lea	ecx, DWORD PTR _findWalker$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _p_flight$5[ebp], eax
$LN6@FindTacanS:

; 1780 : 		while(p_flight && result == FALSE) {

	cmp	DWORD PTR _p_flight$5[ebp], 0
	je	SHORT $LN5@FindTacanS
	cmp	DWORD PTR _result$4[ebp], 0
	jne	SHORT $LN5@FindTacanS

; 1781 : 		
; 1782 : 			if(((int)p_flight->tacan_channel) == channel) {

	mov	eax, DWORD PTR _p_flight$5[ebp]
	movzx	ecx, BYTE PTR [eax+436]
	cmp	ecx, DWORD PTR _channel$[ebp]
	jne	SHORT $LN4@FindTacanS

; 1783 : 				*id		= p_flight->Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_flight$5[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1784 : 				result	= TRUE;

	mov	DWORD PTR _result$4[ebp], 1

; 1785 : 				*rangep = 150;

	mov	ecx, DWORD PTR _rangep$[ebp]
	mov	DWORD PTR [ecx], 150			; 00000096H

; 1786 : 				*type = 1;

	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [edx], 1

; 1787 : 				*ilsfreq = 0;

	mov	eax, DWORD PTR _ilsfreq$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0

; 1788 : 			}
; 1789 : 			else {

	jmp	SHORT $LN3@FindTacanS
$LN4@FindTacanS:

; 1790 : 				p_flight = (FlightClass*)findWalker.GetNext();

	lea	ecx, DWORD PTR _findWalker$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _p_flight$5[ebp], eax
$LN3@FindTacanS:

; 1791 : 			}
; 1792 : 		}

	jmp	SHORT $LN6@FindTacanS
$LN5@FindTacanS:

; 1793 : 
; 1794 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _findWalker$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 1795 : 	else {

	jmp	SHORT $LN1@FindTacanS
$LN7@FindTacanS:

; 1796 : 		if(!gTacanList->GetVUIDFromChannel(channel, set, mpCurrentDomain[src],
; 1797 : 		    id, rangep, type, ilsfreq)) {

	mov	ecx, DWORD PTR _ilsfreq$[ebp]
	push	ecx
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	mov	eax, DWORD PTR _rangep$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+1900]
	push	ecx
	mov	edx, DWORD PTR _set$[ebp]
	push	edx
	mov	eax, DWORD PTR _channel$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gTacanList@@3PAVTacanList@@A ; gTacanList
	call	?GetVUIDFromChannel@TacanList@@QAEHHW4StationSet@1@W4Domain@1@PAVVU_ID@@PAH3PAM@Z ; TacanList::GetVUIDFromChannel
	test	eax, eax
	jne	SHORT $LN1@FindTacanS

; 1798 : 			*id		= FalconNullId;

	mov	ecx, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+4], eax
$LN1@FindTacanS:

; 1799 : 		}
; 1800 : 	}
; 1801 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z$0:
	lea	ecx, DWORD PTR _findWalker$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindTacanStation@NavigationSystem@@AAEXW4Tacan_Channel_Src@1@HW4StationSet@TacanList@@PAVVU_ID@@PAH3PAM@Z ENDP ; NavigationSystem::FindTacanStation
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pData$ = 8						; size = 4
_pLink$ = 12						; size = 4
?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z PROC ; NavigationSystem::CopyMissionTCNData
; _this$ = ecx

; 758  : void NavigationSystem::CopyMissionTCNData(Tacan_Data_Str* pData, Tacan_Data_LL_Str* pLink) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 759  : 
; 760  : 		pData->vuID			= pLink->pData->vuID;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR [ecx+20], edx
	mov	DWORD PTR [ecx+24], eax

; 761  : 		pData->channel		= pLink->pData->channel;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 762  : 		pData->set			= pLink->pData->set;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], eax

; 763  : 		pData->digits[0]	= pLink->pData->digits[0];

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, 4
	imul	ecx, 0
	mov	esi, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [edx+eax+4]
	mov	DWORD PTR [esi+ecx+4], edx

; 764  : 		pData->digits[1]	= pLink->pData->digits[1];

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, 4
	shl	edx, 0
	mov	eax, 4
	shl	eax, 0
	mov	esi, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [ecx+edx+4]
	mov	DWORD PTR [esi+eax+4], ecx

; 765  : 		pData->digits[2]	= pLink->pData->digits[2];

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	esi, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR [esi+edx+4], eax

; 766  : 		pData->range		= pLink->pData->range;

	mov	ecx, DWORD PTR _pLink$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR [eax+28], ecx

; 767  : 		pData->ilsfreq		= pLink->pData->ilsfreq;

	mov	edx, DWORD PTR _pLink$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR [eax+36]
	mov	DWORD PTR [ecx+36], edx

; 768  : 		pData->ttype		= pLink->pData->ttype;

	mov	eax, DWORD PTR _pLink$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _pData$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+32], eax

; 769  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyMissionTCNData@NavigationSystem@@AAEXPAUTacan_Data_Str@1@PAUTacan_Data_LL_Str@1@@Z ENDP ; NavigationSystem::CopyMissionTCNData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Ils_Data_Str@NavigationSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Ils_Data_Str@NavigationSystem@@QAE@XZ PROC		; NavigationSystem::Ils_Data_Str::Ils_Data_Str, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Ils_Data_Str@NavigationSystem@@QAE@XZ ENDP		; NavigationSystem::Ils_Data_Str::Ils_Data_Str
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Tacan_Data_Str@NavigationSystem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Tacan_Data_Str@NavigationSystem@@QAE@XZ PROC		; NavigationSystem::Tacan_Data_Str::Tacan_Data_Str, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Tacan_Data_Str@NavigationSystem@@QAE@XZ ENDP		; NavigationSystem::Tacan_Data_Str::Tacan_Data_Str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = 8						; size = 4
_longitude$ = 12					; size = 4
?GetLatLong@@YAXPAM0@Z PROC				; GetLatLong

; 112  : {

	push	ebp
	mov	ebp, esp

; 113  : 	*latitude = FALCON_ORIGIN_LAT;

	mov	eax, DWORD PTR _latitude$[ebp]
	movss	xmm0, DWORD PTR ?FALCON_ORIGIN_LAT@@3MA
	movss	DWORD PTR [eax], xmm0

; 114  : 	*longitude = FALCON_ORIGIN_LONG;

	mov	ecx, DWORD PTR _longitude$[ebp]
	movss	xmm0, DWORD PTR ?FALCON_ORIGIN_LONG@@3MA
	movss	DWORD PTR [ecx], xmm0

; 115  : }

	pop	ebp
	ret	0
?GetLatLong@@YAXPAM0@Z ENDP				; GetLatLong
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
?ResetLatLong@@YAXXZ PROC				; ResetLatLong

; 106  : {

	push	ebp
	mov	ebp, esp

; 107  :     FALCON_ORIGIN_LAT = DEF_LAT;

	movss	xmm0, DWORD PTR _DEF_LAT
	movss	DWORD PTR ?FALCON_ORIGIN_LAT@@3MA, xmm0

; 108  :     FALCON_ORIGIN_LONG = DEF_LONG;

	movss	xmm0, DWORD PTR _DEF_LONG
	movss	DWORD PTR ?FALCON_ORIGIN_LONG@@3MA, xmm0

; 109  : }

	pop	ebp
	ret	0
?ResetLatLong@@YAXXZ ENDP				; ResetLatLong
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\navaids\navsystem.cpp
_TEXT	SEGMENT
_latitude$ = 8						; size = 4
_longitude$ = 12					; size = 4
?SetLatLong@@YAXMM@Z PROC				; SetLatLong

; 100  : {

	push	ebp
	mov	ebp, esp

; 101  :     FALCON_ORIGIN_LAT = latitude;

	movss	xmm0, DWORD PTR _latitude$[ebp]
	movss	DWORD PTR ?FALCON_ORIGIN_LAT@@3MA, xmm0

; 102  :     FALCON_ORIGIN_LONG = longitude;

	movss	xmm0, DWORD PTR _longitude$[ebp]
	movss	DWORD PTR ?FALCON_ORIGIN_LONG@@3MA, xmm0

; 103  : }

	pop	ebp
	ret	0
?SetLatLong@@YAXMM@Z ENDP				; SetLatLong
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPArrive@WayPointClass@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?SetWPArrive@WayPointClass@@QAEXK@Z PROC		; WayPointClass::SetWPArrive, COMDAT
; _this$ = ecx

; 195  : 	void SetWPArrive (CampaignTime t)				{ Arrive = t; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPArrive@WayPointClass@@QAEXK@Z ENDP		; WayPointClass::SetWPArrive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ PROC	; WayPointClass::GetWPTargetID, COMDAT
; _this$ = ecx

; 167  : 	VU_ID GetWPTargetID (void)						{ return TargetID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetWPTargetID@WayPointClass@@QAE?AVVU_ID@@XZ ENDP	; WayPointClass::GetWPTargetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ PROC ; SimBaseClass::GetCampaignObject, COMDAT
; _this$ = ecx

; 212  : 	CampBaseClass *GetCampaignObject (void) { return campaignObject.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ENDP ; SimBaseClass::GetCampaignObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?IsSetFlag@SimBaseClass@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_flag$ = 8						; size = 4
?IsSetFlag@SimBaseClass@@QBEHH@Z PROC			; SimBaseClass::IsSetFlag, COMDAT
; _this$ = ecx

; 178  : 	int  IsSetFlag(int flag) const { return ((specialData.flags & flag) ? TRUE : FALSE); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	and	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN3@IsSetFlag
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsSetFlag
$LN3@IsSetFlag:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsSetFlag:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSetFlag@SimBaseClass@@QBEHH@Z ENDP			; SimBaseClass::IsSetFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ PROC ; VuBin<CampBaseClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ENDP ; VuBin<CampBaseClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\mltrig.h
;	COMDAT ?checked_atan2@@YANNN@Z
_TEXT	SEGMENT
_z$ = -8						; size = 8
_y$ = 8							; size = 8
_x$ = 16						; size = 8
?checked_atan2@@YANNN@Z PROC				; checked_atan2, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 47   : 	double z;
; 48   : 	
; 49   : 	if (x == -0.0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@8000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@checked_at

; 50   : 		x = 0.0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _x$[ebp], xmm0
$LN8@checked_at:

; 51   : 	
; 52   : 	if (x != 0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@checked_at

; 53   : 		z = atan(y / x);

	movsd	xmm0, QWORD PTR _y$[ebp]
	divsd	xmm0, QWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR _z$[ebp]
	jmp	SHORT $LN4@checked_at
$LN7@checked_at:

; 54   : 	else if (y > 0)

	movsd	xmm0, QWORD PTR _y$[ebp]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN5@checked_at

; 55   : 		z = HALF_DPI;

	movsd	xmm0, QWORD PTR __real@3ff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 56   : 	else

	jmp	SHORT $LN4@checked_at
$LN5@checked_at:

; 57   : 		z = -HALF_DPI;

	movsd	xmm0, QWORD PTR __real@bff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN4@checked_at:

; 58   : 
; 59   : 	if (x < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _x$[ebp]
	jbe	SHORT $LN1@checked_at

; 60   : 	{
; 61   : 		if (y < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _y$[ebp]
	jbe	SHORT $LN2@checked_at

; 62   : 			z -= DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	subsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 63   : 		else

	jmp	SHORT $LN1@checked_at
$LN2@checked_at:

; 64   : 			z += DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	addsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN1@checked_at:

; 65   : 	}
; 66   : 
; 67   : 	return z;

	fld	QWORD PTR _z$[ebp]

; 68   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?checked_atan2@@YANNN@Z ENDP				; checked_atan2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZPos@VuEntity@@QBEMXZ PROC				; VuEntity::ZPos, COMDAT
; _this$ = ecx

; 160  : 	BIG_SCALAR ZPos()	const { return pos_.z_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZPos@VuEntity@@QBEMXZ ENDP				; VuEntity::ZPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 517  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 511  :         {return (cosf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
