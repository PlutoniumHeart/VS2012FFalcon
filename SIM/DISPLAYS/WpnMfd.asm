; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\SIM\DISPLAYS\WpnMfd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
_DATA	SEGMENT
_matrix44_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
_matrix33_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_DATA	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?ZPos@VuEntity@@QBEMXZ				; VuEntity::ZPos
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0DrawableClass@@IAE@XZ			; DrawableClass::DrawableClass
PUBLIC	??1DrawableClass@@UAE@XZ			; DrawableClass::~DrawableClass
PUBLIC	?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z ; DrawableClass::Display
PUBLIC	?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z ; DrawableClass::DisplayInit
PUBLIC	?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ ; DrawableClass::GetDisplay
PUBLIC	?OnMFD@DrawableClass@@QAEHXZ			; DrawableClass::OnMFD
PUBLIC	?SetIntensity@DrawableClass@@QAEXI@Z		; DrawableClass::SetIntensity
PUBLIC	?GetIntensity@DrawableClass@@QAEIXZ		; DrawableClass::GetIntensity
PUBLIC	?PushButton@DrawableClass@@UAEXHH@Z		; DrawableClass::PushButton
PUBLIC	??_GDrawableClass@@UAEPAXI@Z			; DrawableClass::`scalar deleting destructor'
PUBLIC	?CurMode@MFDClass@@QAE?AW4MfdMode@1@XZ		; MFDClass::CurMode
PUBLIC	?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ	; MFDClass::GetOwnShip
PUBLIC	?GetTGPWarning@MFDClass@@QAEHXZ			; MFDClass::GetTGPWarning
PUBLIC	??0MfdDrawable@@QAE@XZ				; MfdDrawable::MfdDrawable
PUBLIC	?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z	; MfdDrawable::Display
PUBLIC	??_GMfdDrawable@@UAEPAXI@Z			; MfdDrawable::`scalar deleting destructor'
PUBLIC	??0WpnMfdDrawable@@QAE@XZ			; WpnMfdDrawable::WpnMfdDrawable
PUBLIC	??1WpnMfdDrawable@@UAE@XZ			; WpnMfdDrawable::~WpnMfdDrawable
PUBLIC	?Display@WpnMfdDrawable@@UAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::Display
PUBLIC	?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z ; WpnMfdDrawable::DisplayInit
PUBLIC	?GetDisplay@WpnMfdDrawable@@UAEPAVVirtualDisplay@@XZ ; WpnMfdDrawable::GetDisplay
PUBLIC	?HARMWpnMode@WpnMfdDrawable@@QAEXXZ		; WpnMfdDrawable::HARMWpnMode
PUBLIC	?OffMode@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::OffMode
PUBLIC	?PushButton@WpnMfdDrawable@@EAEXHH@Z		; WpnMfdDrawable::PushButton
PUBLIC	?OSBLabels@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::OSBLabels
PUBLIC	?DrawRALT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::DrawRALT
PUBLIC	?DrawHDPT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@PAVSMSClass@@@Z ; WpnMfdDrawable::DrawHDPT
PUBLIC	?HdptStationSym@WpnMfdDrawable@@AAEDHPAVSMSClass@@@Z ; WpnMfdDrawable::HdptStationSym
PUBLIC	?DrawDLZ@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::DrawDLZ
PUBLIC	??_GWpnMfdDrawable@@UAEPAXI@Z			; WpnMfdDrawable::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?CurrentForegroundColor@ContextMPR@@QAEHXZ	; ContextMPR::CurrentForegroundColor
PUBLIC	??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ		; VuBin<SimWeaponClass>::operator!
PUBLIC	??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ		; VuBin<SimWeaponClass>::operator bool
PUBLIC	?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ ; FireControlComputer::GetMasterMode
PUBLIC	?GetSubMode@FireControlComputer@@QAE?AW4FCCSubMode@1@XZ ; FireControlComputer::GetSubMode
PUBLIC	?NumHardpoints@SMSBaseClass@@QAEHXZ		; SMSBaseClass::NumHardpoints
PUBLIC	?CurHardpoint@SMSBaseClass@@QAEHXZ		; SMSBaseClass::CurHardpoint
PUBLIC	?NumCurrentWpn@SMSBaseClass@@QAEHXZ		; SMSBaseClass::NumCurrentWpn
PUBLIC	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
PUBLIC	?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ; SMSBaseClass::MasterArm
PUBLIC	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ	; SimVehicleClass::GetSOI
PUBLIC	?AutopilotType@AircraftClass@@QAE?AW4AutoPilotType@1@XZ ; AircraftClass::AutopilotType
PUBLIC	?RaltReady@AircraftClass@@QAEHXZ		; AircraftClass::RaltReady
PUBLIC	??0VirtualDisplay@@QAE@XZ			; VirtualDisplay::VirtualDisplay
PUBLIC	??1VirtualDisplay@@UAE@XZ			; VirtualDisplay::~VirtualDisplay
PUBLIC	?Circle@VirtualDisplay@@UAEXMMM@Z		; VirtualDisplay::Circle
PUBLIC	?Arc@VirtualDisplay@@UAEXMMMMM@Z		; VirtualDisplay::Arc
PUBLIC	?TextWidth@VirtualDisplay@@UAEMPAD@Z		; VirtualDisplay::TextWidth
PUBLIC	?TextHeight@VirtualDisplay@@UAEMXZ		; VirtualDisplay::TextHeight
PUBLIC	?CurFont@VirtualDisplay@@SAHXZ			; VirtualDisplay::CurFont
PUBLIC	?SetLineStyle@VirtualDisplay@@UAEXH@Z		; VirtualDisplay::SetLineStyle
PUBLIC	?Color@VirtualDisplay@@UAEKXZ			; VirtualDisplay::Color
PUBLIC	??_GVirtualDisplay@@UAEPAXI@Z			; VirtualDisplay::`scalar deleting destructor'
PUBLIC	??0Render2D@@QAE@XZ				; Render2D::Render2D
PUBLIC	??1Render2D@@UAE@XZ				; Render2D::~Render2D
PUBLIC	?GetImageBuffer@Render2D@@QAEPAVImageBuffer@@XZ	; Render2D::GetImageBuffer
PUBLIC	?ClearDraw@Render2D@@UAEXXZ			; Render2D::ClearDraw
PUBLIC	?ClearZBuffer@Render2D@@UAEXXZ			; Render2D::ClearZBuffer
PUBLIC	?Color@Render2D@@UAEKXZ				; Render2D::Color
PUBLIC	?SetColor@Render2D@@UAEXK@Z			; Render2D::SetColor
PUBLIC	?SetBackground@Render2D@@UAEXK@Z		; Render2D::SetBackground
PUBLIC	?SetLineStyle@Render2D@@UAEXH@Z			; Render2D::SetLineStyle
PUBLIC	??_GRender2D@@UAEPAXI@Z				; Render2D::`scalar deleting destructor'
PUBLIC	??0Render3D@@QAE@XZ				; Render3D::Render3D
PUBLIC	??1Render3D@@UAE@XZ				; Render3D::~Render3D
PUBLIC	?Cleanup@Render3D@@UAEXXZ			; Render3D::Cleanup
PUBLIC	??_GRender3D@@UAEPAXI@Z				; Render3D::`scalar deleting destructor'
PUBLIC	??0Edge@@QAE@XZ					; Edge::Edge
PUBLIC	??1Edge@@QAE@XZ					; Edge::~Edge
PUBLIC	??0RenderOTW@@QAE@XZ				; RenderOTW::RenderOTW
PUBLIC	??1RenderOTW@@UAE@XZ				; RenderOTW::~RenderOTW
PUBLIC	??_GRenderOTW@@UAEPAXI@Z			; RenderOTW::`scalar deleting destructor'
PUBLIC	??0RenderTV@@QAE@XZ				; RenderTV::RenderTV
PUBLIC	??1RenderTV@@UAE@XZ				; RenderTV::~RenderTV
PUBLIC	?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z ; RenderTV::ComputeHorizonEffect
PUBLIC	??_GRenderTV@@UAEPAXI@Z				; RenderTV::`scalar deleting destructor'
PUBLIC	??0RenderIR@@QAE@XZ				; RenderIR::RenderIR
PUBLIC	??1RenderIR@@UAE@XZ				; RenderIR::~RenderIR
PUBLIC	?DrawMoon@RenderIR@@MAEXH@Z			; RenderIR::DrawMoon
PUBLIC	?DrawStars@RenderIR@@MAEXXZ			; RenderIR::DrawStars
PUBLIC	?SetTimeOfDayColor@RenderIR@@MAEXXZ		; RenderIR::SetTimeOfDayColor
PUBLIC	?AdjustSkyColor@RenderIR@@MAEXXZ		; RenderIR::AdjustSkyColor
PUBLIC	??_GRenderIR@@UAEPAXI@Z				; RenderIR::`scalar deleting destructor'
PUBLIC	?SetXYZ@MissileDisplayClass@@QAEXMMM@Z		; MissileDisplayClass::SetXYZ
PUBLIC	?CurFOV@MaverickDisplayClass@@QAEMXZ		; MaverickDisplayClass::CurFOV
PUBLIC	?ToggleFOV@MaverickDisplayClass@@QAEXXZ		; MaverickDisplayClass::ToggleFOV
PUBLIC	?GetFOVLevel@MissileClass@@QAEMXZ		; MissileClass::GetFOVLevel
PUBLIC	?GetEXPLevel@MissileClass@@QAEMXZ		; MissileClass::GetEXPLevel
PUBLIC	?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ ; HarmTargetingPod::GetSubMode
PUBLIC	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode
PUBLIC	?SetLastSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetLastSubMode
PUBLIC	?SetRange@HarmTargetingPod@@QAEXH@Z		; HarmTargetingPod::SetRange
PUBLIC	?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ ; HarmTargetingPod::GetZoomMode
PUBLIC	?GetPreHandoffMode@HarmTargetingPod@@QAE?AW4PreHandoffMode@1@XZ ; HarmTargetingPod::GetPreHandoffMode
PUBLIC	?GetFilterMode@HarmTargetingPod@@QAE?AW4HASFilterMode@1@XZ ; HarmTargetingPod::GetFilterMode
PUBLIC	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode
PUBLIC	?ResetHASTimer@HarmTargetingPod@@QAEXXZ		; HarmTargetingPod::ResetHASTimer
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7DrawableClass@@6B@				; DrawableClass::`vftable'
PUBLIC	??_7MfdDrawable@@6B@				; MfdDrawable::`vftable'
PUBLIC	??_7WpnMfdDrawable@@6B@				; WpnMfdDrawable::`vftable'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7VirtualDisplay@@6B@				; VirtualDisplay::`vftable'
PUBLIC	??_7Render2D@@6B@				; Render2D::`vftable'
PUBLIC	??_7Render3D@@6B@				; Render3D::`vftable'
PUBLIC	??_7RenderOTW@@6B@				; RenderOTW::`vftable'
PUBLIC	??_7RenderTV@@6B@				; RenderTV::`vftable'
PUBLIC	??_7RenderIR@@6B@				; RenderIR::`vftable'
PUBLIC	??_C@_0O@MDMAMLOB@NOT?5TIMED?5OUT?$AA@		; `string'
PUBLIC	??_C@_04BKGGJKLP@STBY?$AA@			; `string'
PUBLIC	??_C@_04NGKPLICF@OPER?$AA@			; `string'
PUBLIC	??_C@_03PHIAGONP@PRE?$AA@			; `string'
PUBLIC	??_C@_03NOAAMIEF@VIS?$AA@			; `string'
PUBLIC	??_C@_04DKKPAKDO@BORE?$AA@			; `string'
PUBLIC	??_C@_03MPPIHBHJ@OFF?$AA@			; `string'
PUBLIC	??_C@_04KICLEKHI@GRAY?$AA@			; `string'
PUBLIC	??_C@_02BFICIOJL@ON?$AA@			; `string'
PUBLIC	??_C@_03PHODBHCN@FOV?$AA@			; `string'
PUBLIC	??_C@_03KKGFKKLA@EXP?$AA@			; `string'
PUBLIC	??_C@_03CAIJIGAK@HOC?$AA@			; `string'
PUBLIC	??_C@_03BEHMNIMA@COH?$AA@			; `string'
PUBLIC	??_C@_02ONHIBMNM@M?5?$AA@			; `string'
PUBLIC	??_C@_04LOCMGGPM@?$CFd?$CFs?$AA@		; `string'
PUBLIC	??_C@_03DNJPAHKI@SIM?$AA@			; `string'
PUBLIC	??_C@_03KDFFCEML@RDY?$AA@			; `string'
PUBLIC	??_C@_02CLOBADPI@DL?$AA@			; `string'
PUBLIC	??_C@_03GANFLJFB@HAS?$AA@			; `string'
PUBLIC	??_C@_03PPOGOLCL@POS?$AA@			; `string'
PUBLIC	??_C@_07MBJCAOMB@NOT?5SOI?$AA@			; `string'
PUBLIC	??_C@_04HKIOICEJ@TBL1?$AA@			; `string'
PUBLIC	??_C@_02KOENCFNK@PB?$AA@			; `string'
PUBLIC	??_C@_03INCLDCMH@UFC?$AA@			; `string'
PUBLIC	??_C@_02NNFLAEJD@OF?$AA@			; `string'
PUBLIC	??_C@_02OEPNLDDP@GS?$AA@			; `string'
PUBLIC	??_C@_01JPJNBJEM@I?$AA@				; `string'
PUBLIC	??_C@_01GAPBHFFA@T?$AA@				; `string'
PUBLIC	??_C@_03LECCGOIK@CTR?$AA@			; `string'
PUBLIC	??_C@_02LBFBEEGD@RT?$AA@			; `string'
PUBLIC	??_C@_02KHOJMKBJ@LT?$AA@			; `string'
PUBLIC	??_C@_04KPGPJCNC@WIDE?$AA@			; `string'
PUBLIC	??_C@_04GNBGIMEE@SRCH?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01DGKLNCNG@R?$AA@				; `string'
PUBLIC	??_C@_03NIFPGLBG@ALL?$AA@			; `string'
PUBLIC	??_C@_02MEIMKHMB@HP?$AA@			; `string'
PUBLIC	??_C@_02JHFFIENB@HA?$AA@			; `string'
PUBLIC	??_C@_02JAFMCMAN@LA?$AA@			; `string'
PUBLIC	??_C@_03IKCHFLMD@WPN?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4VirtualDisplay@@6B@			; VirtualDisplay::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVirtualDisplay@@@8			; VirtualDisplay `RTTI Type Descriptor'
PUBLIC	??_R3VirtualDisplay@@8				; VirtualDisplay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VirtualDisplay@@8				; VirtualDisplay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VirtualDisplay@@8			; VirtualDisplay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DrawableClass@@6B@				; DrawableClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawableClass@@@8			; DrawableClass `RTTI Type Descriptor'
PUBLIC	??_R3DrawableClass@@8				; DrawableClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableClass@@8				; DrawableClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableClass@@8			; DrawableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Render3D@@6B@				; Render3D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRender3D@@@8				; Render3D `RTTI Type Descriptor'
PUBLIC	??_R3Render3D@@8				; Render3D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Render3D@@8				; Render3D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Render3D@@8			; Render3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Render2D@@8			; Render2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRender2D@@@8				; Render2D `RTTI Type Descriptor'
PUBLIC	??_R3Render2D@@8				; Render2D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Render2D@@8				; Render2D::`RTTI Base Class Array'
PUBLIC	??_R4MfdDrawable@@6B@				; MfdDrawable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMfdDrawable@@@8				; MfdDrawable `RTTI Type Descriptor'
PUBLIC	??_R3MfdDrawable@@8				; MfdDrawable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MfdDrawable@@8				; MfdDrawable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MfdDrawable@@8			; MfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4WpnMfdDrawable@@6B@			; WpnMfdDrawable::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVWpnMfdDrawable@@@8			; WpnMfdDrawable `RTTI Type Descriptor'
PUBLIC	??_R3WpnMfdDrawable@@8				; WpnMfdDrawable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2WpnMfdDrawable@@8				; WpnMfdDrawable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@WpnMfdDrawable@@8			; WpnMfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Render2D@@6B@				; Render2D::`RTTI Complete Object Locator'
PUBLIC	??_R4RenderOTW@@6B@				; RenderOTW::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderOTW@@@8				; RenderOTW `RTTI Type Descriptor'
PUBLIC	??_R3RenderOTW@@8				; RenderOTW::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderOTW@@8				; RenderOTW::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderOTW@@8			; RenderOTW::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RenderTV@@6B@				; RenderTV::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderTV@@@8				; RenderTV `RTTI Type Descriptor'
PUBLIC	??_R3RenderTV@@8				; RenderTV::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderTV@@8				; RenderTV::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderTV@@8			; RenderTV::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RenderIR@@6B@				; RenderIR::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRenderIR@@@8				; RenderIR `RTTI Type Descriptor'
PUBLIC	??_R3RenderIR@@8				; RenderIR::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RenderIR@@8				; RenderIR::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RenderIR@@8			; RenderIR::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3c8efa34
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dd6774e
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3f051eb8
PUBLIC	__real@3f19999a
PUBLIC	__real@3f333333
PUBLIC	__real@3f5eb852
PUBLIC	__real@3f666666
PUBLIC	__real@3f733333
PUBLIC	__real@3f800000
PUBLIC	__real@3fcccccd
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40a00000
PUBLIC	__real@40c00000
PUBLIC	__real@41400000
PUBLIC	__real@bf4ccccd
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_sprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	?SetPosition@VuEntity@@QAEXMMM@Z:PROC		; VuEntity::SetPosition
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?DisplayExit@DrawableClass@@UAEXXZ:PROC		; DrawableClass::DisplayExit
EXTRN	?LabelButton@DrawableClass@@QAEXHPAD0H@Z:PROC	; DrawableClass::LabelButton
EXTRN	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z:PROC	; DrawableClass::GetButtonPos
EXTRN	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z:PROC ; DrawableClass::GetMfdColor
EXTRN	??_EDrawableClass@@UAEPAXI@Z:PROC		; DrawableClass::`vector deleting destructor'
EXTRN	??1MfdDrawable@@UAE@XZ:PROC			; MfdDrawable::~MfdDrawable
EXTRN	?DisplayInit@MfdDrawable@@UAEXPAVImageBuffer@@@Z:PROC ; MfdDrawable::DisplayInit
EXTRN	?PushButton@MfdDrawable@@UAEXHH@Z:PROC		; MfdDrawable::PushButton
EXTRN	?BottomRow@MfdDrawable@@QAEXXZ:PROC		; MfdDrawable::BottomRow
EXTRN	?DrawReference@MfdDrawable@@QAEXPAVAircraftClass@@@Z:PROC ; MfdDrawable::DrawReference
EXTRN	?DrawRedBreak@MfdDrawable@@QAEXPAVVirtualDisplay@@@Z:PROC ; MfdDrawable::DrawRedBreak
EXTRN	?TGPAttitudeWarning@MfdDrawable@@QAEXPAVVirtualDisplay@@@Z:PROC ; MfdDrawable::TGPAttitudeWarning
EXTRN	??_EMfdDrawable@@UAEPAXI@Z:PROC			; MfdDrawable::`vector deleting destructor'
EXTRN	??_EWpnMfdDrawable@@UAEPAXI@Z:PROC		; WpnMfdDrawable::`vector deleting destructor'
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??0ContextMPR@@QAE@XZ:PROC			; ContextMPR::ContextMPR
EXTRN	??1ContextMPR@@UAE@XZ:PROC			; ContextMPR::~ContextMPR
EXTRN	?SetState@ContextMPR@@QAEXGK@Z:PROC		; ContextMPR::SetState
EXTRN	?ClearBuffers@ContextMPR@@QAEXG@Z:PROC		; ContextMPR::ClearBuffers
EXTRN	?SelectForegroundColor@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectForegroundColor
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	?FindRollAngle@HudClass@@QAEHM@Z:PROC		; HudClass::FindRollAngle
EXTRN	?FindPitchAngle@HudClass@@QAEHM@Z:PROC		; HudClass::FindPitchAngle
EXTRN	?FindSensor@@YAPAVSensorClass@@PAVSimMoverClass@@H@Z:PROC ; FindSensor
EXTRN	?SetSubMode@FireControlComputer@@QAEXW4FCCSubMode@1@@Z:PROC ; FireControlComputer::SetSubMode
EXTRN	?StationOK@SMSBaseClass@@QAEHH@Z:PROC		; SMSBaseClass::StationOK
EXTRN	?StepMavSubMode@SMSBaseClass@@QAEX_N@Z:PROC	; SMSBaseClass::StepMavSubMode
EXTRN	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z:PROC ; SimVehicleClass::SOIManager
EXTRN	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ:PROC ; SimulationDriver::GetPlayerAircraft
EXTRN	?Setup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Setup
EXTRN	?Cleanup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Cleanup
EXTRN	?Point@VirtualDisplay@@UAEXMM@Z:PROC		; VirtualDisplay::Point
EXTRN	?Line@VirtualDisplay@@UAEXMMMM@Z:PROC		; VirtualDisplay::Line
EXTRN	?Line@VirtualDisplay@@UAEXMMMMM@Z:PROC		; VirtualDisplay::Line
EXTRN	?Tri@VirtualDisplay@@UAEXMMMMMM@Z:PROC		; VirtualDisplay::Tri
EXTRN	?Oval@VirtualDisplay@@UAEXMMMM@Z:PROC		; VirtualDisplay::Oval
EXTRN	?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z:PROC	; VirtualDisplay::OvalArc
EXTRN	?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextLeft
EXTRN	?TextRight@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextRight
EXTRN	?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextLeftVertical
EXTRN	?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextRightVertical
EXTRN	?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z:PROC	; VirtualDisplay::TextCenter
EXTRN	?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z:PROC ; VirtualDisplay::TextCenterVertical
EXTRN	?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z:PROC	; VirtualDisplay::TextWrap
EXTRN	?ScreenTextHeight@VirtualDisplay@@SAHXZ:PROC	; VirtualDisplay::ScreenTextHeight
EXTRN	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z:PROC	; VirtualDisplay::ScreenTextWidth
EXTRN	?SetFont@VirtualDisplay@@SAXH@Z:PROC		; VirtualDisplay::SetFont
EXTRN	?SetViewport@VirtualDisplay@@UAEXMMMM@Z:PROC	; VirtualDisplay::SetViewport
EXTRN	?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z:PROC ; VirtualDisplay::SetViewportRelative
EXTRN	?Render2DTri@VirtualDisplay@@MAEXMMMMMM@Z:PROC	; VirtualDisplay::Render2DTri
EXTRN	??_EVirtualDisplay@@UAEPAXI@Z:PROC		; VirtualDisplay::`vector deleting destructor'
EXTRN	?Setup@Render2D@@UAEXPAVImageBuffer@@@Z:PROC	; Render2D::Setup
EXTRN	?Cleanup@Render2D@@UAEXXZ:PROC			; Render2D::Cleanup
EXTRN	?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z:PROC ; Render2D::SetImageBuffer
EXTRN	?StartDraw@Render2D@@UAEXXZ:PROC		; Render2D::StartDraw
EXTRN	?EndDraw@Render2D@@UAEXXZ:PROC			; Render2D::EndDraw
EXTRN	?SetViewport@Render2D@@UAEXMMMM@Z:PROC		; Render2D::SetViewport
EXTRN	?Render2DPoint@Render2D@@UAEXMM@Z:PROC		; Render2D::Render2DPoint
EXTRN	?Render2DLine@Render2D@@UAEXMMMM@Z:PROC		; Render2D::Render2DLine
EXTRN	?Render2DTri@Render2D@@UAEXMMMMMM@Z:PROC	; Render2D::Render2DTri
EXTRN	?ScreenText@Render2D@@UAEXMMPBDH@Z:PROC		; Render2D::ScreenText
EXTRN	??_ERender2D@@UAEPAXI@Z:PROC			; Render2D::`vector deleting destructor'
EXTRN	?Setup@Render3D@@UAEXPAVImageBuffer@@@Z:PROC	; Render3D::Setup
EXTRN	?StartDraw@Render3D@@UAEXXZ:PROC		; Render3D::StartDraw
EXTRN	?SetFOV@Render3D@@QAEXMM@Z:PROC			; Render3D::SetFOV
EXTRN	?SetViewport@Render3D@@UAEXMMMM@Z:PROC		; Render3D::SetViewport
EXTRN	??_ERender3D@@UAEPAXI@Z:PROC			; Render3D::`vector deleting destructor'
EXTRN	?Setup@RenderOTW@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderOTW::Setup
EXTRN	?Cleanup@RenderOTW@@UAEXXZ:PROC			; RenderOTW::Cleanup
EXTRN	?StartDraw@RenderOTW@@UAEXXZ:PROC		; RenderOTW::StartDraw
EXTRN	?EndDraw@RenderOTW@@UAEXXZ:PROC			; RenderOTW::EndDraw
EXTRN	?ComputeVertexColor@RenderOTW@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderOTW::ComputeVertexColor
EXTRN	?ProcessColor@RenderOTW@@MAEXPAUTcolor@@@Z:PROC	; RenderOTW::ProcessColor
EXTRN	?DrawSun@RenderOTW@@MAEXXZ:PROC			; RenderOTW::DrawSun
EXTRN	?DrawMoon@RenderOTW@@MAEXXZ:PROC		; RenderOTW::DrawMoon
EXTRN	?DrawStars@RenderOTW@@MAEXXZ:PROC		; RenderOTW::DrawStars
EXTRN	?ComputeHorizonEffect@RenderOTW@@MAEXPAUHorizonRecord@@@Z:PROC ; RenderOTW::ComputeHorizonEffect
EXTRN	?SetTimeOfDayColor@RenderOTW@@MAEXXZ:PROC	; RenderOTW::SetTimeOfDayColor
EXTRN	?AdjustSkyColor@RenderOTW@@MAEXXZ:PROC		; RenderOTW::AdjustSkyColor
EXTRN	??_ERenderOTW@@UAEPAXI@Z:PROC			; RenderOTW::`vector deleting destructor'
EXTRN	?Setup@RenderTV@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderTV::Setup
EXTRN	?StartDraw@RenderTV@@UAEXXZ:PROC		; RenderTV::StartDraw
EXTRN	?EndDraw@RenderTV@@UAEXXZ:PROC			; RenderTV::EndDraw
EXTRN	?SetColor@RenderTV@@UAEXK@Z:PROC		; RenderTV::SetColor
EXTRN	?DrawSun@RenderTV@@MAEXXZ:PROC			; RenderTV::DrawSun
EXTRN	?DrawMoon@RenderTV@@MAEXXZ:PROC			; RenderTV::DrawMoon
EXTRN	?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z:PROC	; RenderTV::ProcessColor
EXTRN	?ComputeVertexColor@RenderTV@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderTV::ComputeVertexColor
EXTRN	??_ERenderTV@@UAEPAXI@Z:PROC			; RenderTV::`vector deleting destructor'
EXTRN	?Setup@RenderIR@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z:PROC ; RenderIR::Setup
EXTRN	?StartDraw@RenderIR@@UAEXXZ:PROC		; RenderIR::StartDraw
EXTRN	?EndDraw@RenderIR@@UAEXXZ:PROC			; RenderIR::EndDraw
EXTRN	?ComputeVertexColor@RenderIR@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z:PROC ; RenderIR::ComputeVertexColor
EXTRN	??_ERenderIR@@UAEPAXI@Z:PROC			; RenderIR::`vector deleting destructor'
EXTRN	?GetViewpoint@OTWDriverClass@@QAEPAVRViewPoint@@XZ:PROC ; OTWDriverClass::GetViewpoint
EXTRN	?GetFault@FackClass@@QAEHW4type_FSubSystem@FaultClass@@@Z:PROC ; FackClass::GetFault
EXTRN	?GetFault@FackClass@@QAEHW4type_CSubSystem@@@Z:PROC ; FackClass::GetFault
EXTRN	?ToggleZoomMode@HarmTargetingPod@@QAEXXZ:PROC	; HarmTargetingPod::ToggleZoomMode
EXTRN	?LockPOSTarget@HarmTargetingPod@@QAEXXZ:PROC	; HarmTargetingPod::LockPOSTarget
EXTRN	?SetPOSTargetIndex@HarmTargetingPod@@QAEXH@Z:PROC ; HarmTargetingPod::SetPOSTargetIndex
EXTRN	?DrawBullseyeCircle@@YAXPAVVirtualDisplay@@MM@Z:PROC ; DrawBullseyeCircle
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?SimLibElapsedTime@@3KA:DWORD			; SimLibElapsedTime
EXTRN	?g_bRealisticAvionics@@3_NA:BYTE		; g_bRealisticAvionics
EXTRN	?MfdDisplay@@3PAPAVMFDClass@@A:BYTE		; MfdDisplay
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheHud@@3PAVHudClass@@A:DWORD			; TheHud
EXTRN	?SimDriver@@3VSimulationDriver@@A:BYTE		; SimDriver
EXTRN	?pFontSet@VirtualDisplay@@2PAUFontSet@@A:DWORD	; VirtualDisplay::pFontSet
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?g_bGreyMFD@@3_NA:BYTE				; g_bGreyMFD
EXTRN	?g_bGreyScaleMFD@@3_NA:BYTE			; g_bGreyScaleMFD
EXTRN	?bNVGmode@@3_NA:BYTE				; bNVGmode
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bf4ccccd
CONST	SEGMENT
__real@bf4ccccd DD 0bf4ccccdr			; -0.8
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fcccccd
CONST	SEGMENT
__real@3fcccccd DD 03fcccccdr			; 1.6
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f5eb852
CONST	SEGMENT
__real@3f5eb852 DD 03f5eb852r			; 0.87
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f051eb8
CONST	SEGMENT
__real@3f051eb8 DD 03f051eb8r			; 0.52
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dd6774e
CONST	SEGMENT
__real@3dd6774e DD 03dd6774er			; 0.10472
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@3c8efa34
CONST	SEGMENT
__real@3c8efa34 DD 03c8efa34r			; 0.0174533
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderIR@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderIR@@8 DD FLAT:??_R0?AVRenderIR@@@8	; RenderIR::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderIR@@8
rdata$r	SEGMENT
??_R2RenderIR@@8 DD FLAT:??_R1A@?0A@EA@RenderIR@@8	; RenderIR::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RenderTV@@8
	DD	FLAT:??_R1A@?0A@EA@RenderOTW@@8
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderIR@@8
rdata$r	SEGMENT
??_R3RenderIR@@8 DD 00H					; RenderIR::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderIR@@@8
_DATA	SEGMENT
??_R0?AVRenderIR@@@8 DD FLAT:??_7type_info@@6B@		; RenderIR `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderIR@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderIR@@6B@
rdata$r	SEGMENT
??_R4RenderIR@@6B@ DD 00H				; RenderIR::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderIR@@@8
	DD	FLAT:??_R3RenderIR@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderTV@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderTV@@8 DD FLAT:??_R0?AVRenderTV@@@8	; RenderTV::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderTV@@8
rdata$r	SEGMENT
??_R2RenderTV@@8 DD FLAT:??_R1A@?0A@EA@RenderTV@@8	; RenderTV::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RenderOTW@@8
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderTV@@8
rdata$r	SEGMENT
??_R3RenderTV@@8 DD 00H					; RenderTV::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderTV@@@8
_DATA	SEGMENT
??_R0?AVRenderTV@@@8 DD FLAT:??_7type_info@@6B@		; RenderTV `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderTV@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderTV@@6B@
rdata$r	SEGMENT
??_R4RenderTV@@6B@ DD 00H				; RenderTV::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderTV@@@8
	DD	FLAT:??_R3RenderTV@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RenderOTW@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RenderOTW@@8 DD FLAT:??_R0?AVRenderOTW@@@8 ; RenderOTW::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R2RenderOTW@@8
rdata$r	SEGMENT
??_R2RenderOTW@@8 DD FLAT:??_R1A@?0A@EA@RenderOTW@@8	; RenderOTW::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Render3D@@8
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3RenderOTW@@8
rdata$r	SEGMENT
??_R3RenderOTW@@8 DD 00H				; RenderOTW::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRenderOTW@@@8
_DATA	SEGMENT
??_R0?AVRenderOTW@@@8 DD FLAT:??_7type_info@@6B@	; RenderOTW `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRenderOTW@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RenderOTW@@6B@
rdata$r	SEGMENT
??_R4RenderOTW@@6B@ DD 00H				; RenderOTW::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRenderOTW@@@8
	DD	FLAT:??_R3RenderOTW@@8
rdata$r	ENDS
;	COMDAT ??_R4Render2D@@6B@
rdata$r	SEGMENT
??_R4Render2D@@6B@ DD 00H				; Render2D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRender2D@@@8
	DD	FLAT:??_R3Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@WpnMfdDrawable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@WpnMfdDrawable@@8 DD FLAT:??_R0?AVWpnMfdDrawable@@@8 ; WpnMfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3WpnMfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R2WpnMfdDrawable@@8
rdata$r	SEGMENT
??_R2WpnMfdDrawable@@8 DD FLAT:??_R1A@?0A@EA@WpnMfdDrawable@@8 ; WpnMfdDrawable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MfdDrawable@@8
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3WpnMfdDrawable@@8
rdata$r	SEGMENT
??_R3WpnMfdDrawable@@8 DD 00H				; WpnMfdDrawable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2WpnMfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWpnMfdDrawable@@@8
_DATA	SEGMENT
??_R0?AVWpnMfdDrawable@@@8 DD FLAT:??_7type_info@@6B@	; WpnMfdDrawable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVWpnMfdDrawable@@', 00H
_DATA	ENDS
;	COMDAT ??_R4WpnMfdDrawable@@6B@
rdata$r	SEGMENT
??_R4WpnMfdDrawable@@6B@ DD 00H				; WpnMfdDrawable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVWpnMfdDrawable@@@8
	DD	FLAT:??_R3WpnMfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MfdDrawable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MfdDrawable@@8 DD FLAT:??_R0?AVMfdDrawable@@@8 ; MfdDrawable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R2MfdDrawable@@8
rdata$r	SEGMENT
??_R2MfdDrawable@@8 DD FLAT:??_R1A@?0A@EA@MfdDrawable@@8 ; MfdDrawable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R3MfdDrawable@@8
rdata$r	SEGMENT
??_R3MfdDrawable@@8 DD 00H				; MfdDrawable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMfdDrawable@@@8
_DATA	SEGMENT
??_R0?AVMfdDrawable@@@8 DD FLAT:??_7type_info@@6B@	; MfdDrawable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMfdDrawable@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MfdDrawable@@6B@
rdata$r	SEGMENT
??_R4MfdDrawable@@6B@ DD 00H				; MfdDrawable::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMfdDrawable@@@8
	DD	FLAT:??_R3MfdDrawable@@8
rdata$r	ENDS
;	COMDAT ??_R2Render2D@@8
rdata$r	SEGMENT
??_R2Render2D@@8 DD FLAT:??_R1A@?0A@EA@Render2D@@8	; Render2D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3Render2D@@8
rdata$r	SEGMENT
??_R3Render2D@@8 DD 00H					; Render2D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRender2D@@@8
_DATA	SEGMENT
??_R0?AVRender2D@@@8 DD FLAT:??_7type_info@@6B@		; Render2D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRender2D@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Render2D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Render2D@@8 DD FLAT:??_R0?AVRender2D@@@8	; Render2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Render2D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Render3D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Render3D@@8 DD FLAT:??_R0?AVRender3D@@@8	; Render3D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R2Render3D@@8
rdata$r	SEGMENT
??_R2Render3D@@8 DD FLAT:??_R1A@?0A@EA@Render3D@@8	; Render3D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Render2D@@8
	DD	FLAT:??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R3Render3D@@8
rdata$r	SEGMENT
??_R3Render3D@@8 DD 00H					; Render3D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRender3D@@@8
_DATA	SEGMENT
??_R0?AVRender3D@@@8 DD FLAT:??_7type_info@@6B@		; Render3D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRender3D@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Render3D@@6B@
rdata$r	SEGMENT
??_R4Render3D@@6B@ DD 00H				; Render3D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRender3D@@@8
	DD	FLAT:??_R3Render3D@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableClass@@8 DD FLAT:??_R0?AVDrawableClass@@@8 ; DrawableClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableClass@@8
rdata$r	SEGMENT
??_R2DrawableClass@@8 DD FLAT:??_R1A@?0A@EA@DrawableClass@@8 ; DrawableClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DrawableClass@@8
rdata$r	SEGMENT
??_R3DrawableClass@@8 DD 00H				; DrawableClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableClass@@@8
_DATA	SEGMENT
??_R0?AVDrawableClass@@@8 DD FLAT:??_7type_info@@6B@	; DrawableClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DrawableClass@@6B@
rdata$r	SEGMENT
??_R4DrawableClass@@6B@ DD 00H				; DrawableClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawableClass@@@8
	DD	FLAT:??_R3DrawableClass@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VirtualDisplay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VirtualDisplay@@8 DD FLAT:??_R0?AVVirtualDisplay@@@8 ; VirtualDisplay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R2VirtualDisplay@@8
rdata$r	SEGMENT
??_R2VirtualDisplay@@8 DD FLAT:??_R1A@?0A@EA@VirtualDisplay@@8 ; VirtualDisplay::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VirtualDisplay@@8
rdata$r	SEGMENT
??_R3VirtualDisplay@@8 DD 00H				; VirtualDisplay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVirtualDisplay@@@8
_DATA	SEGMENT
??_R0?AVVirtualDisplay@@@8 DD FLAT:??_7type_info@@6B@	; VirtualDisplay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVirtualDisplay@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VirtualDisplay@@6B@
rdata$r	SEGMENT
??_R4VirtualDisplay@@6B@ DD 00H				; VirtualDisplay::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVirtualDisplay@@@8
	DD	FLAT:??_R3VirtualDisplay@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKCHFLMD@WPN?$AA@
CONST	SEGMENT
??_C@_03IKCHFLMD@WPN?$AA@ DB 'WPN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JAFMCMAN@LA?$AA@
CONST	SEGMENT
??_C@_02JAFMCMAN@LA?$AA@ DB 'LA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JHFFIENB@HA?$AA@
CONST	SEGMENT
??_C@_02JHFFIENB@HA?$AA@ DB 'HA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MEIMKHMB@HP?$AA@
CONST	SEGMENT
??_C@_02MEIMKHMB@HP?$AA@ DB 'HP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIFPGLBG@ALL?$AA@
CONST	SEGMENT
??_C@_03NIFPGLBG@ALL?$AA@ DB 'ALL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DGKLNCNG@R?$AA@
CONST	SEGMENT
??_C@_01DGKLNCNG@R?$AA@ DB 'R', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GNBGIMEE@SRCH?$AA@
CONST	SEGMENT
??_C@_04GNBGIMEE@SRCH?$AA@ DB 'SRCH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KPGPJCNC@WIDE?$AA@
CONST	SEGMENT
??_C@_04KPGPJCNC@WIDE?$AA@ DB 'WIDE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KHOJMKBJ@LT?$AA@
CONST	SEGMENT
??_C@_02KHOJMKBJ@LT?$AA@ DB 'LT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LBFBEEGD@RT?$AA@
CONST	SEGMENT
??_C@_02LBFBEEGD@RT?$AA@ DB 'RT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LECCGOIK@CTR?$AA@
CONST	SEGMENT
??_C@_03LECCGOIK@CTR?$AA@ DB 'CTR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GAPBHFFA@T?$AA@
CONST	SEGMENT
??_C@_01GAPBHFFA@T?$AA@ DB 'T', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JPJNBJEM@I?$AA@
CONST	SEGMENT
??_C@_01JPJNBJEM@I?$AA@ DB 'I', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OEPNLDDP@GS?$AA@
CONST	SEGMENT
??_C@_02OEPNLDDP@GS?$AA@ DB 'GS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NNFLAEJD@OF?$AA@
CONST	SEGMENT
??_C@_02NNFLAEJD@OF?$AA@ DB 'OF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03INCLDCMH@UFC?$AA@
CONST	SEGMENT
??_C@_03INCLDCMH@UFC?$AA@ DB 'UFC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KOENCFNK@PB?$AA@
CONST	SEGMENT
??_C@_02KOENCFNK@PB?$AA@ DB 'PB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKIOICEJ@TBL1?$AA@
CONST	SEGMENT
??_C@_04HKIOICEJ@TBL1?$AA@ DB 'TBL1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
CONST	SEGMENT
??_C@_07MBJCAOMB@NOT?5SOI?$AA@ DB 'NOT SOI', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PPOGOLCL@POS?$AA@
CONST	SEGMENT
??_C@_03PPOGOLCL@POS?$AA@ DB 'POS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GANFLJFB@HAS?$AA@
CONST	SEGMENT
??_C@_03GANFLJFB@HAS?$AA@ DB 'HAS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CLOBADPI@DL?$AA@
CONST	SEGMENT
??_C@_02CLOBADPI@DL?$AA@ DB 'DL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KDFFCEML@RDY?$AA@
CONST	SEGMENT
??_C@_03KDFFCEML@RDY?$AA@ DB 'RDY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNJPAHKI@SIM?$AA@
CONST	SEGMENT
??_C@_03DNJPAHKI@SIM?$AA@ DB 'SIM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOCMGGPM@?$CFd?$CFs?$AA@
CONST	SEGMENT
??_C@_04LOCMGGPM@?$CFd?$CFs?$AA@ DB '%d%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02ONHIBMNM@M?5?$AA@
CONST	SEGMENT
??_C@_02ONHIBMNM@M?5?$AA@ DB 'M ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BEHMNIMA@COH?$AA@
CONST	SEGMENT
??_C@_03BEHMNIMA@COH?$AA@ DB 'COH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CAIJIGAK@HOC?$AA@
CONST	SEGMENT
??_C@_03CAIJIGAK@HOC?$AA@ DB 'HOC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KKGFKKLA@EXP?$AA@
CONST	SEGMENT
??_C@_03KKGFKKLA@EXP?$AA@ DB 'EXP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PHODBHCN@FOV?$AA@
CONST	SEGMENT
??_C@_03PHODBHCN@FOV?$AA@ DB 'FOV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BFICIOJL@ON?$AA@
CONST	SEGMENT
??_C@_02BFICIOJL@ON?$AA@ DB 'ON', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KICLEKHI@GRAY?$AA@
CONST	SEGMENT
??_C@_04KICLEKHI@GRAY?$AA@ DB 'GRAY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MPPIHBHJ@OFF?$AA@
CONST	SEGMENT
??_C@_03MPPIHBHJ@OFF?$AA@ DB 'OFF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DKKPAKDO@BORE?$AA@
CONST	SEGMENT
??_C@_04DKKPAKDO@BORE?$AA@ DB 'BORE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NOAAMIEF@VIS?$AA@
CONST	SEGMENT
??_C@_03NOAAMIEF@VIS?$AA@ DB 'VIS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PHIAGONP@PRE?$AA@
CONST	SEGMENT
??_C@_03PHIAGONP@PRE?$AA@ DB 'PRE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NGKPLICF@OPER?$AA@
CONST	SEGMENT
??_C@_04NGKPLICF@OPER?$AA@ DB 'OPER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BKGGJKLP@STBY?$AA@
CONST	SEGMENT
??_C@_04BKGGJKLP@STBY?$AA@ DB 'STBY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MDMAMLOB@NOT?5TIMED?5OUT?$AA@
CONST	SEGMENT
??_C@_0O@MDMAMLOB@NOT?5TIMED?5OUT?$AA@ DB 'NOT TIMED OUT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7RenderIR@@6B@
CONST	SEGMENT
??_7RenderIR@@6B@ DD FLAT:??_R4RenderIR@@6B@		; RenderIR::`vftable'
	DD	FLAT:??_ERenderIR@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderIR@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderIR@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@RenderTV@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderIR@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderIR@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderTV@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderTV@@MAEXXZ
	DD	FLAT:?DrawStars@RenderIR@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderIR@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderIR@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderIR@@MAEXH@Z
CONST	ENDS
;	COMDAT ??_7RenderTV@@6B@
CONST	SEGMENT
??_7RenderTV@@6B@ DD FLAT:??_R4RenderTV@@6B@		; RenderTV::`vftable'
	DD	FLAT:??_ERenderTV@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderTV@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderTV@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@RenderTV@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderTV@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderTV@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderTV@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderTV@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderTV@@MAEXXZ
	DD	FLAT:?DrawStars@RenderOTW@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderOTW@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderOTW@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7RenderOTW@@6B@
CONST	SEGMENT
??_7RenderOTW@@6B@ DD FLAT:??_R4RenderOTW@@6B@		; RenderOTW::`vftable'
	DD	FLAT:??_ERenderOTW@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@RenderOTW@@UAEXXZ
	DD	FLAT:?StartDraw@RenderOTW@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@RenderOTW@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
	DD	FLAT:?Setup@RenderOTW@@UAEXPAVImageBuffer@@PAVRViewPoint@@@Z
	DD	FLAT:?ComputeVertexColor@RenderOTW@@MAEXPAUTerrainVertex@@PAUTpost@@MMM@Z
	DD	FLAT:?ProcessColor@RenderOTW@@MAEXPAUTcolor@@@Z
	DD	FLAT:?DrawSun@RenderOTW@@MAEXXZ
	DD	FLAT:?DrawMoon@RenderOTW@@MAEXXZ
	DD	FLAT:?DrawStars@RenderOTW@@MAEXXZ
	DD	FLAT:?ComputeHorizonEffect@RenderOTW@@MAEXPAUHorizonRecord@@@Z
	DD	FLAT:?SetTimeOfDayColor@RenderOTW@@MAEXXZ
	DD	FLAT:?AdjustSkyColor@RenderOTW@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7Render3D@@6B@
CONST	SEGMENT
??_7Render3D@@6B@ DD FLAT:??_R4Render3D@@6B@		; Render3D::`vftable'
	DD	FLAT:??_ERender3D@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@Render3D@@UAEXXZ
	DD	FLAT:?StartDraw@Render3D@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@Render2D@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render3D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render3D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7Render2D@@6B@
CONST	SEGMENT
??_7Render2D@@6B@ DD FLAT:??_R4Render2D@@6B@		; Render2D::`vftable'
	DD	FLAT:??_ERender2D@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@Render2D@@UAEXXZ
	DD	FLAT:?StartDraw@Render2D@@UAEXXZ
	DD	FLAT:?ClearDraw@Render2D@@UAEXXZ
	DD	FLAT:?EndDraw@Render2D@@UAEXXZ
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:?SetColor@Render2D@@UAEXK@Z
	DD	FLAT:?SetBackground@Render2D@@UAEXK@Z
	DD	FLAT:?ScreenText@Render2D@@UAEXMMPBDH@Z
	DD	FLAT:?SetLineStyle@Render2D@@UAEXH@Z
	DD	FLAT:?Color@Render2D@@UAEKXZ
	DD	FLAT:?SetViewport@Render2D@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Render2DPoint@Render2D@@UAEXMM@Z
	DD	FLAT:?Render2DLine@Render2D@@UAEXMMMM@Z
	DD	FLAT:?Render2DTri@Render2D@@UAEXMMMMMM@Z
	DD	FLAT:?Setup@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?ClearZBuffer@Render2D@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7VirtualDisplay@@6B@
CONST	SEGMENT
??_7VirtualDisplay@@6B@ DD FLAT:??_R4VirtualDisplay@@6B@ ; VirtualDisplay::`vftable'
	DD	FLAT:??_EVirtualDisplay@@UAEPAXI@Z
	DD	FLAT:?Setup@VirtualDisplay@@UAEXXZ
	DD	FLAT:?Cleanup@VirtualDisplay@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Point@VirtualDisplay@@UAEXMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?Line@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?Tri@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Oval@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?OvalArc@VirtualDisplay@@UAEXMMMMMM@Z
	DD	FLAT:?Circle@VirtualDisplay@@UAEXMMM@Z
	DD	FLAT:?Arc@VirtualDisplay@@UAEXMMMMM@Z
	DD	FLAT:?TextLeft@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRight@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextLeftVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextRightVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenter@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextCenterVertical@VirtualDisplay@@UAEXMMPBDH@Z
	DD	FLAT:?TextWrap@VirtualDisplay@@UAEHMMPBDMM@Z
	DD	FLAT:?TextWidth@VirtualDisplay@@UAEMPAD@Z
	DD	FLAT:?TextHeight@VirtualDisplay@@UAEMXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?SetLineStyle@VirtualDisplay@@UAEXH@Z
	DD	FLAT:?Color@VirtualDisplay@@UAEKXZ
	DD	FLAT:?SetViewport@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:?SetViewportRelative@VirtualDisplay@@UAEXMMMM@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Render2DTri@VirtualDisplay@@MAEXMMMMMM@Z
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7WpnMfdDrawable@@6B@
CONST	SEGMENT
??_7WpnMfdDrawable@@6B@ DD FLAT:??_R4WpnMfdDrawable@@6B@ ; WpnMfdDrawable::`vftable'
	DD	FLAT:??_EWpnMfdDrawable@@UAEPAXI@Z
	DD	FLAT:?Display@WpnMfdDrawable@@UAEXPAVVirtualDisplay@@@Z
	DD	FLAT:?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?DisplayExit@DrawableClass@@UAEXXZ
	DD	FLAT:?GetDisplay@WpnMfdDrawable@@UAEPAVVirtualDisplay@@XZ
	DD	FLAT:?PushButton@WpnMfdDrawable@@EAEXHH@Z
CONST	ENDS
;	COMDAT ??_7MfdDrawable@@6B@
CONST	SEGMENT
??_7MfdDrawable@@6B@ DD FLAT:??_R4MfdDrawable@@6B@	; MfdDrawable::`vftable'
	DD	FLAT:??_EMfdDrawable@@UAEPAXI@Z
	DD	FLAT:?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z
	DD	FLAT:?DisplayInit@MfdDrawable@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?DisplayExit@DrawableClass@@UAEXXZ
	DD	FLAT:?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ
	DD	FLAT:?PushButton@MfdDrawable@@UAEXHH@Z
CONST	ENDS
;	COMDAT ??_7DrawableClass@@6B@
CONST	SEGMENT
??_7DrawableClass@@6B@ DD FLAT:??_R4DrawableClass@@6B@	; DrawableClass::`vftable'
	DD	FLAT:??_EDrawableClass@@UAEPAXI@Z
	DD	FLAT:?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z
	DD	FLAT:?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z
	DD	FLAT:?DisplayExit@DrawableClass@@UAEXXZ
	DD	FLAT:?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ
	DD	FLAT:?PushButton@DrawableClass@@UAEXHH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1RenderOTW@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1RenderOTW@@UAE@XZ$3
__ehfuncinfo$??1RenderOTW@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1RenderOTW@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RenderOTW@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RenderOTW@@QAE@XZ$3
__ehfuncinfo$??0RenderOTW@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0RenderOTW@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z$0
__ehfuncinfo$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?ResetHASTimer@HarmTargetingPod@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetHASTimer@HarmTargetingPod@@QAEXXZ PROC		; HarmTargetingPod::ResetHASTimer, COMDAT
; _this$ = ecx

; 112  : 	void			ResetHASTimer ( void ) { HASTimer = SimLibElapsedTime; HASNumTargets = 0;  }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [eax+164], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+148], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetHASTimer@HarmTargetingPod@@QAEXXZ ENDP		; HarmTargetingPod::ResetHASTimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mode$ = 8						; size = 4
?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z PROC ; HarmTargetingPod::SetFilterMode, COMDAT
; _this$ = ecx

; 109  : 	void			SetFilterMode ( HASFilterMode mode ) { filterMode = mode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+184], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ENDP ; HarmTargetingPod::SetFilterMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?GetFilterMode@HarmTargetingPod@@QAE?AW4HASFilterMode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFilterMode@HarmTargetingPod@@QAE?AW4HASFilterMode@1@XZ PROC ; HarmTargetingPod::GetFilterMode, COMDAT
; _this$ = ecx

; 108  : 	HASFilterMode	GetFilterMode ( void ) { return filterMode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+184]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFilterMode@HarmTargetingPod@@QAE?AW4HASFilterMode@1@XZ ENDP ; HarmTargetingPod::GetFilterMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?GetPreHandoffMode@HarmTargetingPod@@QAE?AW4PreHandoffMode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPreHandoffMode@HarmTargetingPod@@QAE?AW4PreHandoffMode@1@XZ PROC ; HarmTargetingPod::GetPreHandoffMode, COMDAT
; _this$ = ecx

; 106  : 	PreHandoffMode  GetPreHandoffMode ( void ) { return preHandoffMode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+224]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPreHandoffMode@HarmTargetingPod@@QAE?AW4PreHandoffMode@1@XZ ENDP ; HarmTargetingPod::GetPreHandoffMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ PROC ; HarmTargetingPod::GetZoomMode, COMDAT
; _this$ = ecx

; 91   : 	HASZoomMode     GetZoomMode(void) { return zoomMode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+176]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ ENDP ; HarmTargetingPod::GetZoomMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?SetRange@HarmTargetingPod@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newRange$ = 8						; size = 4
?SetRange@HarmTargetingPod@@QAEXH@Z PROC		; HarmTargetingPod::SetRange, COMDAT
; _this$ = ecx

; 88   : 	void			SetRange (int newRange)		{ displayRange = trueDisplayRange = newRange; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newRange$[ebp]
	mov	DWORD PTR [eax+120], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newRange$[ebp]
	mov	DWORD PTR [edx+116], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRange@HarmTargetingPod@@QAEXH@Z ENDP		; HarmTargetingPod::SetRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?SetLastSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_HarmMode$ = 8						; size = 4
?SetLastSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z PROC ; HarmTargetingPod::SetLastSubMode, COMDAT
; _this$ = ecx

; 86   : 	void			SetLastSubMode ( Submode HarmMode ) { lastSubmode = HarmMode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _HarmMode$[ebp]
	mov	DWORD PTR [eax+172], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLastSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ENDP ; HarmTargetingPod::SetLastSubMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_HarmMode$ = 8						; size = 4
?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z PROC	; HarmTargetingPod::SetSubMode, COMDAT
; _this$ = ecx

; 85   : 	void			SetSubMode ( Submode HarmMode ) { submode = HarmMode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _HarmMode$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ENDP	; HarmTargetingPod::SetSubMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\harmpod.h
;	COMDAT ?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ PROC	; HarmTargetingPod::GetSubMode, COMDAT
; _this$ = ecx

; 83   : 	Submode			GetSubMode ( void ) { return submode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+168]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ ENDP	; HarmTargetingPod::GetSubMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\missile.h
;	COMDAT ?GetEXPLevel@MissileClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEXPLevel@MissileClass@@QAEMXZ PROC			; MissileClass::GetEXPLevel, COMDAT
; _this$ = ecx

; 271  : 	float GetEXPLevel (void) { return auxData->EXPLevel;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+860]
	fld	DWORD PTR [ecx+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetEXPLevel@MissileClass@@QAEMXZ ENDP			; MissileClass::GetEXPLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\missile.h
;	COMDAT ?GetFOVLevel@MissileClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFOVLevel@MissileClass@@QAEMXZ PROC			; MissileClass::GetFOVLevel, COMDAT
; _this$ = ecx

; 270  : 	float GetFOVLevel (void) { return auxData->FOVLevel;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+860]
	fld	DWORD PTR [ecx]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFOVLevel@MissileClass@@QAEMXZ ENDP			; MissileClass::GetFOVLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mavdisp.h
;	COMDAT ?ToggleFOV@MaverickDisplayClass@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ToggleFOV@MaverickDisplayClass@@QAEXXZ PROC		; MaverickDisplayClass::ToggleFOV, COMDAT
; _this$ = ecx

; 33   :       void ToggleFOV (void) {toggleFOV = TRUE;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 1
	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleFOV@MaverickDisplayClass@@QAEXXZ ENDP		; MaverickDisplayClass::ToggleFOV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mavdisp.h
;	COMDAT ?CurFOV@MaverickDisplayClass@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurFOV@MaverickDisplayClass@@QAEMXZ PROC		; MaverickDisplayClass::CurFOV, COMDAT
; _this$ = ecx

; 32   :       float CurFOV (void) {return curFOV;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?CurFOV@MaverickDisplayClass@@QAEMXZ ENDP		; MaverickDisplayClass::CurFOV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\misldisp.h
;	COMDAT ?SetXYZ@MissileDisplayClass@@QAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?SetXYZ@MissileDisplayClass@@QAEXMMM@Z PROC		; MissileDisplayClass::SetXYZ, COMDAT
; _this$ = ecx

; 20   :       void SetXYZ (float x, float y, float z) { platform->SetPosition (x, y, z); } ;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?SetPosition@VuEntity@@QAEXMMM@Z	; VuEntity::SetPosition
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetXYZ@MissileDisplayClass@@QAEXMMM@Z ENDP		; MissileDisplayClass::SetXYZ
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderIR@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderIR@@UAEPAXI@Z PROC				; RenderIR::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderIR@@UAE@XZ			; RenderIR::~RenderIR
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderIR@@UAEPAXI@Z ENDP				; RenderIR::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?AdjustSkyColor@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AdjustSkyColor@RenderIR@@MAEXXZ PROC			; RenderIR::AdjustSkyColor, COMDAT
; _this$ = ecx

; 33   : 	virtual void AdjustSkyColor( void )		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?AdjustSkyColor@RenderIR@@MAEXXZ ENDP			; RenderIR::AdjustSkyColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?SetTimeOfDayColor@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetTimeOfDayColor@RenderIR@@MAEXXZ PROC		; RenderIR::SetTimeOfDayColor, COMDAT
; _this$ = ecx

; 32   : 	virtual void SetTimeOfDayColor( void )	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetTimeOfDayColor@RenderIR@@MAEXXZ ENDP		; RenderIR::SetTimeOfDayColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?DrawStars@RenderIR@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DrawStars@RenderIR@@MAEXXZ PROC			; RenderIR::DrawStars, COMDAT
; _this$ = ecx

; 29   : 	virtual void DrawStars ( void )			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawStars@RenderIR@@MAEXXZ ENDP			; RenderIR::DrawStars
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ?DrawMoon@RenderIR@@MAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DrawMoon@RenderIR@@MAEXH@Z PROC			; RenderIR::DrawMoon, COMDAT
; _this$ = ecx

; 28   : 	virtual void DrawMoon( GLint )		{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DrawMoon@RenderIR@@MAEXH@Z ENDP			; RenderIR::DrawMoon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ??1RenderIR@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RenderIR@@UAE@XZ PROC				; RenderIR::~RenderIR, COMDAT
; _this$ = ecx

; 18   : 	virtual ~RenderIR()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderIR@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderTV@@UAE@XZ			; RenderTV::~RenderTV
	mov	esp, ebp
	pop	ebp
	ret	0
??1RenderIR@@UAE@XZ ENDP				; RenderIR::~RenderIR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderir.h
;	COMDAT ??0RenderIR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RenderIR@@QAE@XZ PROC				; RenderIR::RenderIR, COMDAT
; _this$ = ecx

; 17   : 	RenderIR()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RenderTV@@QAE@XZ			; RenderTV::RenderTV
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderIR@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenderIR@@QAE@XZ ENDP				; RenderIR::RenderIR
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderTV@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderTV@@UAEPAXI@Z PROC				; RenderTV::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderTV@@UAE@XZ			; RenderTV::~RenderTV
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderTV@@UAEPAXI@Z ENDP				; RenderTV::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pHorizon$ = 8						; size = 4
?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z PROC ; RenderTV::ComputeHorizonEffect, COMDAT
; _this$ = ecx

; 31   :  	virtual void ComputeHorizonEffect( HorizonRecord *pHorizon )	{ pHorizon->horeffect = 0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pHorizon$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	esp, ebp
	pop	ebp
	ret	4
?ComputeHorizonEffect@RenderTV@@MAEXPAUHorizonRecord@@@Z ENDP ; RenderTV::ComputeHorizonEffect
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ??1RenderTV@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RenderTV@@UAE@XZ PROC				; RenderTV::~RenderTV, COMDAT
; _this$ = ecx

; 18   : 	virtual ~RenderTV()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderTV@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderOTW@@UAE@XZ			; RenderOTW::~RenderOTW
	mov	esp, ebp
	pop	ebp
	ret	0
??1RenderTV@@UAE@XZ ENDP				; RenderTV::~RenderTV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\rendertv.h
;	COMDAT ??0RenderTV@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0RenderTV@@QAE@XZ PROC				; RenderTV::RenderTV, COMDAT
; _this$ = ecx

; 17   : 	RenderTV()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RenderOTW@@QAE@XZ			; RenderOTW::RenderOTW
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderTV@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0RenderTV@@QAE@XZ ENDP				; RenderTV::RenderTV
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRenderOTW@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRenderOTW@@UAEPAXI@Z PROC				; RenderOTW::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RenderOTW@@UAE@XZ			; RenderOTW::~RenderOTW
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRenderOTW@@UAEPAXI@Z ENDP				; RenderOTW::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ??1RenderOTW@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RenderOTW@@UAE@XZ PROC				; RenderOTW::~RenderOTW, COMDAT
; _this$ = ecx

; 107  : 	virtual ~RenderOTW()	{};

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RenderOTW@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderOTW@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263324				; 0004049cH
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	call	??1Edge@@QAE@XZ				; Edge::~Edge
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render3D@@UAE@XZ			; Render3D::~Render3D
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1RenderOTW@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Render3D@@UAE@XZ			; Render3D::~Render3D
__unwindfunclet$??1RenderOTW@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??1RenderOTW@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??1RenderOTW@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__ehhandler$??1RenderOTW@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RenderOTW@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RenderOTW@@UAE@XZ ENDP				; RenderOTW::~RenderOTW
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\renderow.h
;	COMDAT ??0RenderOTW@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0RenderOTW@@QAE@XZ PROC				; RenderOTW::RenderOTW, COMDAT
; _this$ = ecx

; 106  : 	RenderOTW()				{ skyRoof = FALSE; };

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RenderOTW@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Render3D@@QAE@XZ			; Render3D::Render3D
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RenderOTW@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263324				; 0004049cH
	call	??0Edge@@QAE@XZ				; Edge::Edge
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+263100], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RenderOTW@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Render3D@@UAE@XZ			; Render3D::~Render3D
__unwindfunclet$??0RenderOTW@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263288				; 00040478H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??0RenderOTW@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263300				; 00040484H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__unwindfunclet$??0RenderOTW@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 263312				; 00040490H
	jmp	??1Edge@@QAE@XZ				; Edge::~Edge
__ehhandler$??0RenderOTW@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RenderOTW@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RenderOTW@@QAE@XZ ENDP				; RenderOTW::RenderOTW
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\edge.h
;	COMDAT ??1Edge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Edge@@QAE@XZ PROC					; Edge::~Edge, COMDAT
; _this$ = ecx

; 20   : 	~Edge()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1Edge@@QAE@XZ ENDP					; Edge::~Edge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\edge.h
;	COMDAT ??0Edge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Edge@@QAE@XZ PROC					; Edge::Edge, COMDAT
; _this$ = ecx

; 19   : 	Edge()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Edge@@QAE@XZ ENDP					; Edge::Edge
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRender3D@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRender3D@@UAEPAXI@Z PROC				; Render3D::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render3D@@UAE@XZ			; Render3D::~Render3D
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRender3D@@UAEPAXI@Z ENDP				; Render3D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Cleanup@Render3D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@Render3D@@UAEXXZ PROC				; Render3D::Cleanup, COMDAT
; _this$ = ecx

; 49   : 	virtual void Cleanup( void )	{ Render2D::Cleanup(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@Render2D@@UAEXXZ		; Render2D::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@Render3D@@UAEXXZ ENDP				; Render3D::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ??1Render3D@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Render3D@@UAE@XZ PROC				; Render3D::~Render3D, COMDAT
; _this$ = ecx

; 43   : 	virtual ~Render3D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render3D@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render2D@@UAE@XZ			; Render2D::~Render2D
	mov	esp, ebp
	pop	ebp
	ret	0
??1Render3D@@UAE@XZ ENDP				; Render3D::~Render3D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ??0Render3D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Render3D@@QAE@XZ PROC				; Render3D::Render3D, COMDAT
; _this$ = ecx

; 42   : 	Render3D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Render2D@@QAE@XZ			; Render2D::Render2D
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render3D@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Render3D@@QAE@XZ ENDP				; Render3D::Render3D
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRender2D@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRender2D@@UAEPAXI@Z PROC				; Render2D::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Render2D@@UAE@XZ			; Render2D::~Render2D
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRender2D@@UAEPAXI@Z ENDP				; Render2D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetLineStyle@Render2D@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLineStyle@Render2D@@UAEXH@Z PROC			; Render2D::SetLineStyle, COMDAT
; _this$ = ecx

; 60   : 	virtual void SetLineStyle (int) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLineStyle@Render2D@@UAEXH@Z ENDP			; Render2D::SetLineStyle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetBackground@Render2D@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packedRGBA$ = 8					; size = 4
?SetBackground@Render2D@@UAEXK@Z PROC			; Render2D::SetBackground, COMDAT
; _this$ = ecx

; 50   : 	virtual void SetBackground(DWORD packedRGBA){ context.SetState(MPR_STA_BG_COLOR,packedRGBA); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _packedRGBA$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBackground@Render2D@@UAEXK@Z ENDP			; Render2D::SetBackground
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?SetColor@Render2D@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_packedRGBA$ = 8					; size = 4
?SetColor@Render2D@@UAEXK@Z PROC			; Render2D::SetColor, COMDAT
; _this$ = ecx

; 49   : 	virtual void SetColor(DWORD packedRGBA)	{ context.RestoreState(STATE_SOLID); context.SelectForegroundColor(packedRGBA); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
	mov	eax, DWORD PTR _packedRGBA$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectForegroundColor@ContextMPR@@QAEXH@Z ; ContextMPR::SelectForegroundColor
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColor@Render2D@@UAEXK@Z ENDP			; Render2D::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?Color@Render2D@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Color@Render2D@@UAEKXZ PROC				; Render2D::Color, COMDAT
; _this$ = ecx

; 48   : 	virtual DWORD Color(void) { return context.CurrentForegroundColor(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?CurrentForegroundColor@ContextMPR@@QAEHXZ ; ContextMPR::CurrentForegroundColor
	mov	esp, ebp
	pop	ebp
	ret	0
?Color@Render2D@@UAEKXZ ENDP				; Render2D::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?ClearZBuffer@Render2D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearZBuffer@Render2D@@UAEXXZ PROC			; Render2D::ClearZBuffer, COMDAT
; _this$ = ecx

; 42   : 	virtual void ClearZBuffer( void )	{ context.ClearBuffers( MPR_CI_ZBUFFER ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?ClearBuffers@ContextMPR@@QAEXG@Z	; ContextMPR::ClearBuffers
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearZBuffer@Render2D@@UAEXXZ ENDP			; Render2D::ClearZBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?ClearDraw@Render2D@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearDraw@Render2D@@UAEXXZ PROC			; Render2D::ClearDraw, COMDAT
; _this$ = ecx

; 41   : 	virtual void ClearDraw( void )		{ context.ClearBuffers( MPR_CI_DRAW_BUFFER ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?ClearBuffers@ContextMPR@@QAEXG@Z	; ContextMPR::ClearBuffers
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearDraw@Render2D@@UAEXXZ ENDP			; Render2D::ClearDraw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ?GetImageBuffer@Render2D@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetImageBuffer@Render2D@@QAEPAVImageBuffer@@XZ PROC	; Render2D::GetImageBuffer, COMDAT
; _this$ = ecx

; 38   : 	ImageBuffer* GetImageBuffer(void) {return image;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetImageBuffer@Render2D@@QAEPAVImageBuffer@@XZ ENDP	; Render2D::GetImageBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ??1Render2D@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Render2D@@UAE@XZ PROC				; Render2D::~Render2D, COMDAT
; _this$ = ecx

; 32   : 	virtual ~Render2D()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render2D@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VirtualDisplay@@UAE@XZ		; VirtualDisplay::~VirtualDisplay
	mov	esp, ebp
	pop	ebp
	ret	0
??1Render2D@@UAE@XZ ENDP				; Render2D::~Render2D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render2d.h
;	COMDAT ??0Render2D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Render2D@@QAE@XZ PROC				; Render2D::Render2D, COMDAT
; _this$ = ecx

; 31   : 	Render2D()			{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VirtualDisplay@@QAE@XZ		; VirtualDisplay::VirtualDisplay
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Render2D@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Render2D@@QAE@XZ ENDP				; Render2D::Render2D
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GVirtualDisplay@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVirtualDisplay@@UAEPAXI@Z PROC			; VirtualDisplay::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VirtualDisplay@@UAE@XZ		; VirtualDisplay::~VirtualDisplay
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVirtualDisplay@@UAEPAXI@Z ENDP			; VirtualDisplay::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Color@VirtualDisplay@@UAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Color@VirtualDisplay@@UAEKXZ PROC			; VirtualDisplay::Color, COMDAT
; _this$ = ecx

; 136  : 	virtual DWORD Color( void )	{return 0x0; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Color@VirtualDisplay@@UAEKXZ ENDP			; VirtualDisplay::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?SetLineStyle@VirtualDisplay@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetLineStyle@VirtualDisplay@@UAEXH@Z PROC		; VirtualDisplay::SetLineStyle, COMDAT
; _this$ = ecx

; 135  : 	virtual void SetLineStyle (int) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLineStyle@VirtualDisplay@@UAEXH@Z ENDP		; VirtualDisplay::SetLineStyle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?CurFont@VirtualDisplay@@SAHXZ
_TEXT	SEGMENT
?CurFont@VirtualDisplay@@SAHXZ PROC			; VirtualDisplay::CurFont, COMDAT

; 132  : 	static int CurFont(void) { return pFontSet->fontNum; };

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [eax+24672]
	pop	ebp
	ret	0
?CurFont@VirtualDisplay@@SAHXZ ENDP			; VirtualDisplay::CurFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?TextHeight@VirtualDisplay@@UAEMXZ
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
?TextHeight@VirtualDisplay@@UAEMXZ PROC			; VirtualDisplay::TextHeight, COMDAT
; _this$ = ecx

; 121  : 	virtual float TextHeight(void)			{ return ScreenTextHeight()/scaleY; };		// normalized screen space

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	call	?ScreenTextHeight@VirtualDisplay@@SAHXZ	; VirtualDisplay::ScreenTextHeight
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?TextHeight@VirtualDisplay@@UAEMXZ ENDP			; VirtualDisplay::TextHeight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?TextWidth@VirtualDisplay@@UAEMPAD@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_string$ = 8						; size = 4
?TextWidth@VirtualDisplay@@UAEMPAD@Z PROC		; VirtualDisplay::TextWidth, COMDAT
; _this$ = ecx

; 120  : 	virtual float TextWidth(char *string)	{ return ScreenTextWidth(string)/scaleX; };	// normalized screen space

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z ; VirtualDisplay::ScreenTextWidth
	add	esp, 4
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+32]
	movss	DWORD PTR tv73[ebp], xmm0
	fld	DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?TextWidth@VirtualDisplay@@UAEMPAD@Z ENDP		; VirtualDisplay::TextWidth
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Arc@VirtualDisplay@@UAEXMMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xRadius$ = 16						; size = 4
_start$ = 20						; size = 4
_stop$ = 24						; size = 4
?Arc@VirtualDisplay@@UAEXMMMMM@Z PROC			; VirtualDisplay::Arc, COMDAT
; _this$ = ecx

; 109  : 		{ OvalArc(x, y, xRadius, xRadius*scaleX/scaleY, start, stop); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _stop$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _start$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	mulss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Arc@VirtualDisplay@@UAEXMMMMM@Z ENDP			; VirtualDisplay::Arc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?Circle@VirtualDisplay@@UAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xRadius$ = 16						; size = 4
?Circle@VirtualDisplay@@UAEXMMM@Z PROC			; VirtualDisplay::Circle, COMDAT
; _this$ = ecx

; 107  : 		{ Oval(x, y, xRadius, xRadius*scaleX/scaleY); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	mulss	xmm0, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [ecx+36]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _xRadius$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Circle@VirtualDisplay@@UAEXMMM@Z ENDP			; VirtualDisplay::Circle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ??1VirtualDisplay@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1VirtualDisplay@@UAE@XZ PROC				; VirtualDisplay::~VirtualDisplay, COMDAT
; _this$ = ecx

; 86   :     virtual ~VirtualDisplay()	{ ShiAssert( ready == FALSE ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VirtualDisplay@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1ContextMPR@@UAE@XZ			; ContextMPR::~ContextMPR
	mov	esp, ebp
	pop	ebp
	ret	0
??1VirtualDisplay@@UAE@XZ ENDP				; VirtualDisplay::~VirtualDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ??0VirtualDisplay@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VirtualDisplay@@QAE@XZ PROC				; VirtualDisplay::VirtualDisplay, COMDAT
; _this$ = ecx

; 85   :     VirtualDisplay()			{ ready = FALSE; tLeft = tTop = tRight = tBottom = txRes = tyRes = 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VirtualDisplay@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0ContextMPR@@QAE@XZ			; ContextMPR::ContextMPR
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262776], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+262772], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+262768], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262764], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+262760], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+262756], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VirtualDisplay@@QAE@XZ ENDP				; VirtualDisplay::VirtualDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\aircrft.h
;	COMDAT ?RaltReady@AircraftClass@@QAEHXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?RaltReady@AircraftClass@@QAEHXZ PROC			; AircraftClass::RaltReady, COMDAT
; _this$ = ecx

; 416  : 	int RaltReady() { return (RALTCoolTime < 0.0F && RALTStatus == RON) ? 1 : 0; };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+1008]
	jbe	SHORT $LN3@RaltReady
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1004], 2
	jne	SHORT $LN3@RaltReady
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@RaltReady
$LN3@RaltReady:
	mov	DWORD PTR tv68[ebp], 0
$LN4@RaltReady:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?RaltReady@AircraftClass@@QAEHXZ ENDP			; AircraftClass::RaltReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\aircrft.h
;	COMDAT ?AutopilotType@AircraftClass@@QAE?AW4AutoPilotType@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AutopilotType@AircraftClass@@QAE?AW4AutoPilotType@1@XZ PROC ; AircraftClass::AutopilotType, COMDAT
; _this$ = ecx

; 329  : 	AutoPilotType	AutopilotType (void) {return autopilotType;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+968]
	mov	esp, ebp
	pop	ebp
	ret	0
?AutopilotType@AircraftClass@@QAE?AW4AutoPilotType@1@XZ ENDP ; AircraftClass::AutopilotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simveh.h
;	COMDAT ?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ PROC		; SimVehicleClass::GetSOI, COMDAT
; _this$ = ecx

; 64   : 	SOI GetSOI(void)	{return curSOI;};	//MI

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+724]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ENDP		; SimVehicleClass::GetSOI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ PROC ; SMSBaseClass::MasterArm, COMDAT
; _this$ = ecx

; 92   : 	MasterArmState MasterArm(void) {return masterArm;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ENDP ; SMSBaseClass::MasterArm
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ PROC	; SMSBaseClass::Ownship, COMDAT
; _this$ = ecx

; 91   : 	SimVehicleClass* Ownship(void) {return ownship;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ENDP	; SMSBaseClass::Ownship
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?NumCurrentWpn@SMSBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NumCurrentWpn@SMSBaseClass@@QAEHXZ PROC		; SMSBaseClass::NumCurrentWpn, COMDAT
; _this$ = ecx

; 89   : 	int  NumCurrentWpn(void) {return numCurrentWpn;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?NumCurrentWpn@SMSBaseClass@@QAEHXZ ENDP		; SMSBaseClass::NumCurrentWpn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?CurHardpoint@SMSBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurHardpoint@SMSBaseClass@@QAEHXZ PROC			; SMSBaseClass::CurHardpoint, COMDAT
; _this$ = ecx

; 88   : 	int CurHardpoint (void) {return curHardpoint;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?CurHardpoint@SMSBaseClass@@QAEHXZ ENDP			; SMSBaseClass::CurHardpoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\sms.h
;	COMDAT ?NumHardpoints@SMSBaseClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NumHardpoints@SMSBaseClass@@QAEHXZ PROC		; SMSBaseClass::NumHardpoints, COMDAT
; _this$ = ecx

; 87   : 	int NumHardpoints (void) {return numHardpoints;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?NumHardpoints@SMSBaseClass@@QAEHXZ ENDP		; SMSBaseClass::NumHardpoints
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\fcc.h
;	COMDAT ?GetSubMode@FireControlComputer@@QAE?AW4FCCSubMode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSubMode@FireControlComputer@@QAE?AW4FCCSubMode@1@XZ PROC ; FireControlComputer::GetSubMode, COMDAT
; _this$ = ecx

; 281  : 	FCCSubMode GetSubMode (void) {return (subMode);};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+148]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSubMode@FireControlComputer@@QAE?AW4FCCSubMode@1@XZ ENDP ; FireControlComputer::GetSubMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\fcc.h
;	COMDAT ?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ PROC ; FireControlComputer::GetMasterMode, COMDAT
; _this$ = ecx

; 276  : 	FCCMasterMode GetMasterMode (void) {return (masterMode);};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+144]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ ENDP ; FireControlComputer::GetMasterMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ PROC		; VuBin<SimWeaponClass>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ ENDP		; VuBin<SimWeaponClass>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ PROC		; VuBin<SimWeaponClass>::operator!, COMDAT
; _this$ = ecx

; 37   : 	bool operator!() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		return e == NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 39   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ ENDP		; VuBin<SimWeaponClass>::operator!
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\context.h
;	COMDAT ?CurrentForegroundColor@ContextMPR@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurrentForegroundColor@ContextMPR@@QAEHXZ PROC		; ContextMPR::CurrentForegroundColor, COMDAT
; _this$ = ecx

; 708  : 	int CurrentForegroundColor(void) {return m_colFG_Raw;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?CurrentForegroundColor@ContextMPR@@QAEHXZ ENDP		; ContextMPR::CurrentForegroundColor
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GWpnMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GWpnMfdDrawable@@UAEPAXI@Z PROC			; WpnMfdDrawable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1WpnMfdDrawable@@UAE@XZ		; WpnMfdDrawable::~WpnMfdDrawable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GWpnMfdDrawable@@UAEPAXI@Z ENDP			; WpnMfdDrawable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_range$ = -60						; size = 4
tv275 = -56						; size = 4
tv268 = -52						; size = 4
tv261 = -48						; size = 4
tv214 = -44						; size = 4
_percentRange$ = -40					; size = 4
tv173 = -36						; size = 4
tv171 = -32						; size = 4
_dz$ = -28						; size = 4
_dy$ = -24						; size = 4
_dx$ = -20						; size = 4
_yOffset$ = -16						; size = 4
_rMax$ = -12						; size = 4
_rMin$ = -8						; size = 4
_this$ = -4						; size = 4
_display$ = 8						; size = 4
?DrawDLZ@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z PROC	; WpnMfdDrawable::DrawDLZ
; _this$ = ecx

; 240  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 	if(!pFCC){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN2@DrawDLZ
	jmp	$LN3@DrawDLZ
$LN2@DrawDLZ:

; 242  : 
; 243  : 	float yOffset;
; 244  : 	float percentRange;
; 245  : 	float rMax, rMin;
; 246  : 	float range;
; 247  : 	float dx, dy, dz;
; 248  : 
; 249  : 	if (pFCC->missileTarget)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, BYTE PTR [edx+192]
	test	eax, eax
	je	$LN1@DrawDLZ

; 250  : 	{
; 251  : 		// Range Carat / Closure
; 252  : 		rMax   = pFCC->missileRMax;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movss	xmm0, DWORD PTR [edx+288]
	movss	DWORD PTR _rMax$[ebp], xmm0

; 253  : 		rMin   = pFCC->missileRMin;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movss	xmm0, DWORD PTR [ecx+292]
	movss	DWORD PTR _rMin$[ebp], xmm0

; 254  : 		
; 255  : 		// get range to ground designaate point
; 256  : 		dx = Sms->Ownship()->XPos() - pFCC->groundDesignateX;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv261[ebp]
	movss	xmm0, DWORD PTR tv261[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	subss	xmm0, DWORD PTR [ecx+376]
	movss	DWORD PTR _dx$[ebp], xmm0

; 257  : 		dy = Sms->Ownship()->YPos() - pFCC->groundDesignateY;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv268[ebp]
	movss	xmm0, DWORD PTR tv268[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	subss	xmm0, DWORD PTR [ecx+380]
	movss	DWORD PTR _dy$[ebp], xmm0

; 258  : 		dz = Sms->Ownship()->ZPos() - pFCC->groundDesignateZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR tv275[ebp]
	movss	xmm0, DWORD PTR tv275[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	subss	xmm0, DWORD PTR [ecx+384]
	movss	DWORD PTR _dz$[ebp], xmm0

; 259  : 		range = (float)sqrt( dx*dx + dy*dy + dz*dz );

	movss	xmm0, DWORD PTR _dx$[ebp]
	mulss	xmm0, DWORD PTR _dx$[ebp]
	movss	xmm1, DWORD PTR _dy$[ebp]
	mulss	xmm1, DWORD PTR _dy$[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _dz$[ebp]
	mulss	xmm1, DWORD PTR _dz$[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _range$[ebp]

; 260  : 		
; 261  : 		// Normailze the ranges for DLZ display
; 262  : 		percentRange = range / pFCC->missileWEZDisplayRange;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movss	xmm0, DWORD PTR _range$[ebp]
	divss	xmm0, DWORD PTR [eax+312]
	movss	DWORD PTR _percentRange$[ebp], xmm0

; 263  : 		rMin /= pFCC->missileWEZDisplayRange;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movss	xmm0, DWORD PTR _rMin$[ebp]
	divss	xmm0, DWORD PTR [edx+312]
	movss	DWORD PTR _rMin$[ebp], xmm0

; 264  : 		rMax /= pFCC->missileWEZDisplayRange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movss	xmm0, DWORD PTR _rMax$[ebp]
	divss	xmm0, DWORD PTR [ecx+312]
	movss	DWORD PTR _rMax$[ebp], xmm0

; 265  : 		
; 266  : 		// Clamp in place
; 267  : 		rMin = min (rMin, 1.0F);

	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR _rMin$[ebp]
	jbe	SHORT $LN5@DrawDLZ
	movss	xmm0, DWORD PTR _rMin$[ebp]
	movss	DWORD PTR tv171[ebp], xmm0
	jmp	SHORT $LN6@DrawDLZ
$LN5@DrawDLZ:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv171[ebp], xmm0
$LN6@DrawDLZ:
	movss	xmm0, DWORD PTR tv171[ebp]
	movss	DWORD PTR _rMin$[ebp], xmm0

; 268  : 		rMax = min (rMax, 1.0F);

	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR _rMax$[ebp]
	jbe	SHORT $LN7@DrawDLZ
	movss	xmm0, DWORD PTR _rMax$[ebp]
	movss	DWORD PTR tv173[ebp], xmm0
	jmp	SHORT $LN8@DrawDLZ
$LN7@DrawDLZ:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv173[ebp], xmm0
$LN8@DrawDLZ:
	movss	xmm0, DWORD PTR tv173[ebp]
	movss	DWORD PTR _rMax$[ebp], xmm0

; 269  : 		
; 270  : 		// Draw the symbol
; 271  : 		
; 272  : 		// Rmin/Rmax
; 273  : 		display->Line (0.9F, -0.8F + rMin * 1.6F, 0.95F, -0.8F + rMin * 1.6F);

	movss	xmm0, DWORD PTR _rMin$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f733333
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _rMin$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 274  : 		display->Line (0.9F, -0.8F + rMin * 1.6F, 0.9F,  -0.8F + rMax * 1.6F);

	movss	xmm0, DWORD PTR _rMax$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _rMin$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 275  : 		display->Line (0.9F, -0.8F + rMax * 1.6F, 0.95F, -0.8F + rMax * 1.6F);

	movss	xmm0, DWORD PTR _rMax$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f733333
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _rMax$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 276  : 		
; 277  : 		// Range Caret
; 278  : 		yOffset = min (-0.8F + percentRange * 1.6F, 1.0F);

	movss	xmm0, DWORD PTR _percentRange$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	movss	xmm1, DWORD PTR __real@3f800000
	comiss	xmm1, xmm0
	jbe	SHORT $LN9@DrawDLZ
	movss	xmm0, DWORD PTR _percentRange$[ebp]
	mulss	xmm0, DWORD PTR __real@3fcccccd
	addss	xmm0, DWORD PTR __real@bf4ccccd
	movss	DWORD PTR tv214[ebp], xmm0
	jmp	SHORT $LN10@DrawDLZ
$LN9@DrawDLZ:
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv214[ebp], xmm0
$LN10@DrawDLZ:
	movss	xmm0, DWORD PTR tv214[ebp]
	movss	DWORD PTR _yOffset$[ebp], xmm0

; 279  : 		
; 280  : 		display->Line (0.9F, yOffset, 0.9F - 0.03F, yOffset + 0.03F);

	movss	xmm0, DWORD PTR _yOffset$[ebp]
	addss	xmm0, DWORD PTR __real@3cf5c28f
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f5eb852
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _yOffset$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 281  : 		display->Line (0.9F, yOffset, 0.9F - 0.03F, yOffset - 0.03F);

	movss	xmm0, DWORD PTR _yOffset$[ebp]
	subss	xmm0, DWORD PTR __real@3cf5c28f
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f5eb852
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _yOffset$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
$LN1@DrawDLZ:
$LN3@DrawDLZ:

; 282  : 	}
; 283  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DrawDLZ@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ENDP	; WpnMfdDrawable::DrawDLZ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
_Sms$ = 12						; size = 4
?HdptStationSym@WpnMfdDrawable@@AAEDHPAVSMSClass@@@Z PROC ; WpnMfdDrawable::HdptStationSym
; _this$ = ecx

; 637  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 638  :     if (Sms->hardPoint[n] == NULL) return ' '; // empty hp

	mov	eax, DWORD PTR _Sms$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+edx*4], 0
	jne	SHORT $LN5@HdptStatio
	mov	al, 32					; 00000020H
	jmp	$LN6@HdptStatio
$LN5@HdptStatio:

; 639  : 	if(Sms->hardPoint[n]->weaponCount <= 0) return ' ';	//MI don't bother drawing empty hardpoints

	mov	eax, DWORD PTR _Sms$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	movsx	ecx, WORD PTR [eax+10]
	test	ecx, ecx
	jg	SHORT $LN4@HdptStatio
	mov	al, 32					; 00000020H
	jmp	SHORT $LN6@HdptStatio
$LN4@HdptStatio:

; 640  :     if (Sms->StationOK(n) == FALSE) return 'F'; // malfunction on  HP

	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	ecx, DWORD PTR _Sms$[ebp]
	call	?StationOK@SMSBaseClass@@QAEHH@Z	; SMSBaseClass::StationOK
	test	eax, eax
	jne	SHORT $LN3@HdptStatio
	mov	al, 70					; 00000046H
	jmp	SHORT $LN6@HdptStatio
$LN3@HdptStatio:

; 641  :     if (Sms->hardPoint[n]->GetWeaponType() == Sms->curWeaponType)

	mov	eax, DWORD PTR _Sms$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _Sms$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [eax+156]
	call	edx
	mov	ecx, DWORD PTR _Sms$[ebp]
	cmp	eax, DWORD PTR [ecx+148]
	jne	SHORT $LN2@HdptStatio

; 642  : 	return '0' + n; // exact match for weapon

	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 48					; 00000030H
	jmp	SHORT $LN6@HdptStatio
$LN2@HdptStatio:

; 643  :     if (Sms->hardPoint[n]->GetWeaponClass() == Sms->curWeaponClass)

	mov	edx, DWORD PTR _Sms$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _Sms$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+164]
	call	eax
	mov	ecx, DWORD PTR _Sms$[ebp]
	cmp	eax, DWORD PTR [ecx+156]
	jne	SHORT $LN1@HdptStatio

; 644  : 	return 'M'; // weapon of similar class

	mov	al, 77					; 0000004dH
	jmp	SHORT $LN6@HdptStatio
$LN1@HdptStatio:

; 645  :     return ' ';

	mov	al, 32					; 00000020H
$LN6@HdptStatio:

; 646  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?HdptStationSym@WpnMfdDrawable@@AAEDHPAVSMSClass@@@Z ENDP ; WpnMfdDrawable::HdptStationSym
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
tv201 = -40						; size = 4
tv178 = -36						; size = 4
_width$ = -32						; size = 4
tv151 = -28						; size = 4
_leftEdge$ = -24					; size = 4
_x$ = -20						; size = 4
_y$ = -16						; size = 4
_this$ = -12						; size = 4
_i$1 = -8						; size = 4
_c$2 = -1						; size = 1
_display$ = 8						; size = 4
_Sms$ = 12						; size = 4
?DrawHDPT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@PAVSMSClass@@@Z PROC ; WpnMfdDrawable::DrawHDPT
; _this$ = ecx

; 611  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 612  : 	float leftEdge;
; 613  :     float width = display->TextWidth("M ");

	push	OFFSET ??_C@_02ONHIBMNM@M?5?$AA@
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	fstp	DWORD PTR _width$[ebp]

; 614  : 	float x = 0, y = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _x$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _y$[ebp], xmm0

; 615  : 	GetButtonPos(8, &x, &y); // use button 8 as a reference (lower rhs)

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 616  : 	y -= display->TextHeight()*2;

	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	fstp	DWORD PTR tv201[ebp]
	movss	xmm0, DWORD PTR tv201[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR _y$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _y$[ebp], xmm1

; 617  : 	for(int i=0; i<Sms->NumHardpoints(); i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN6@DrawHDPT
$LN5@DrawHDPT:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN6@DrawHDPT:
	mov	ecx, DWORD PTR _Sms$[ebp]
	call	?NumHardpoints@SMSBaseClass@@QAEHXZ	; SMSBaseClass::NumHardpoints
	cmp	DWORD PTR _i$1[ebp], eax
	jge	$LN4@DrawHDPT

; 618  :     {
; 619  : 		char c = HdptStationSym(i, Sms);

	mov	edx, DWORD PTR _Sms$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HdptStationSym@WpnMfdDrawable@@AAEDHPAVSMSClass@@@Z ; WpnMfdDrawable::HdptStationSym
	mov	BYTE PTR _c$2[ebp], al

; 620  : 		if (c == ' ') continue; // Don't bother drawing blanks.

	movsx	ecx, BYTE PTR _c$2[ebp]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN3@DrawHDPT
	jmp	SHORT $LN5@DrawHDPT
$LN3@DrawHDPT:

; 621  : 		Str[0] = c;

	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _c$2[ebp]
	mov	BYTE PTR [eax+edx+48], cl

; 622  : 		Str[1] = '\0';

	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+edx+48], 0

; 623  : 		if(i < 6)

	cmp	DWORD PTR _i$1[ebp], 6
	jge	SHORT $LN2@DrawHDPT

; 624  : 		{
; 625  : 			leftEdge = -x + width * (i-1);

	movss	xmm0, DWORD PTR _x$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, DWORD PTR _i$1[ebp]
	sub	ecx, 1
	cvtsi2ss xmm1, ecx
	mulss	xmm1, DWORD PTR _width$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _leftEdge$[ebp], xmm0

; 626  : 			display->TextLeft(leftEdge, y, Str, (Sms->CurHardpoint() == i ? 2 : 0));

	mov	ecx, DWORD PTR _Sms$[ebp]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	cmp	eax, DWORD PTR _i$1[ebp]
	jne	SHORT $LN9@DrawHDPT
	mov	DWORD PTR tv151[ebp], 2
	jmp	SHORT $LN10@DrawHDPT
$LN9@DrawHDPT:
	mov	DWORD PTR tv151[ebp], 0
$LN10@DrawHDPT:
	mov	edx, DWORD PTR tv151[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _leftEdge$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 627  : 		}
; 628  : 		else

	jmp	SHORT $LN1@DrawHDPT
$LN2@DrawHDPT:

; 629  : 		{
; 630  : 			leftEdge = x - width * (Sms->NumHardpoints() - i - 1);

	mov	ecx, DWORD PTR _Sms$[ebp]
	call	?NumHardpoints@SMSBaseClass@@QAEHXZ	; SMSBaseClass::NumHardpoints
	sub	eax, DWORD PTR _i$1[ebp]
	sub	eax, 1
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR _width$[ebp]
	movss	xmm1, DWORD PTR _x$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _leftEdge$[ebp], xmm1

; 631  : 			// Box the current station
; 632  : 			display->TextRight(leftEdge, y, Str, (Sms->CurHardpoint() == i ? 2 : 0));

	mov	ecx, DWORD PTR _Sms$[ebp]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	cmp	eax, DWORD PTR _i$1[ebp]
	jne	SHORT $LN11@DrawHDPT
	mov	DWORD PTR tv178[ebp], 2
	jmp	SHORT $LN12@DrawHDPT
$LN11@DrawHDPT:
	mov	DWORD PTR tv178[ebp], 0
$LN12@DrawHDPT:
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _leftEdge$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
$LN1@DrawHDPT:

; 633  : 		}
; 634  :     }

	jmp	$LN5@DrawHDPT
$LN4@DrawHDPT:

; 635  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DrawHDPT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@PAVSMSClass@@@Z ENDP ; WpnMfdDrawable::DrawHDPT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
tv187 = -36						; size = 4
_x$1 = -32						; size = 4
_RALT$2 = -28						; size = 4
_this$ = -24						; size = 4
_y$3 = -20						; size = 4
_tempstr$4 = -16					; size = 10
__$ArrayPad$ = -4					; size = 4
_display$ = 8						; size = 4
?DrawRALT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z PROC ; WpnMfdDrawable::DrawRALT
; _this$ = ecx

; 593  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 594  : 	if( TheHud && !(self->mFaults && self->mFaults->GetFault(FaultClass::ralt_fault))
; 595  : 	    && self->af->platform->RaltReady() &&
; 596  : 	    TheHud->FindRollAngle(-TheHud->hat) && TheHud->FindPitchAngle(-TheHud->hat) )

	cmp	DWORD PTR ?TheHud@@3PAVHudClass@@A, 0	; TheHud
	je	$LN3@DrawRALT
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	DWORD PTR [ecx+928], 0
	je	SHORT $LN2@DrawRALT
	push	24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [eax+928]
	call	?GetFault@FackClass@@QAEHW4type_FSubSystem@FaultClass@@@Z ; FackClass::GetFault
	test	eax, eax
	jne	$LN3@DrawRALT
$LN2@DrawRALT:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+932]
	mov	ecx, DWORD PTR [eax+1088]
	call	?RaltReady@AircraftClass@@QAEHXZ	; AircraftClass::RaltReady
	test	eax, eax
	je	$LN3@DrawRALT
	mov	ecx, DWORD PTR ?TheHud@@3PAVHudClass@@A	; TheHud
	movss	xmm0, DWORD PTR [ecx+5080]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?TheHud@@3PAVHudClass@@A	; TheHud
	call	?FindRollAngle@HudClass@@QAEHM@Z	; HudClass::FindRollAngle
	test	eax, eax
	je	$LN3@DrawRALT
	mov	edx, DWORD PTR ?TheHud@@3PAVHudClass@@A	; TheHud
	movss	xmm0, DWORD PTR [edx+5080]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?TheHud@@3PAVHudClass@@A	; TheHud
	call	?FindPitchAngle@HudClass@@QAEHM@Z	; HudClass::FindPitchAngle
	test	eax, eax
	je	$LN3@DrawRALT

; 597  : 	{
; 598  : 		float x,y = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _y$3[ebp], xmm0

; 599  : 		GetButtonPos(5, &x, &y);

	lea	eax, DWORD PTR _y$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$1[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 600  : 		y += display->TextHeight();

	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+88]
	call	edx
	fstp	DWORD PTR tv187[ebp]
	movss	xmm0, DWORD PTR tv187[ebp]
	addss	xmm0, DWORD PTR _y$3[ebp]
	movss	DWORD PTR _y$3[ebp], xmm0

; 601  : 		x -= 0.05F;

	movss	xmm0, DWORD PTR _x$1[ebp]
	subss	xmm0, DWORD PTR __real@3d4ccccd
	movss	DWORD PTR _x$1[ebp], xmm0

; 602  : 		int RALT = (int)-TheHud->hat;

	mov	eax, DWORD PTR ?TheHud@@3PAVHudClass@@A	; TheHud
	movss	xmm0, DWORD PTR [eax+5080]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	cvttss2si ecx, xmm0
	mov	DWORD PTR _RALT$2[ebp], ecx

; 603  : 		char tempstr[10] = "";

	mov	dl, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _tempstr$4[ebp], dl
	xor	eax, eax
	mov	DWORD PTR _tempstr$4[ebp+1], eax
	mov	DWORD PTR _tempstr$4[ebp+5], eax
	mov	BYTE PTR _tempstr$4[ebp+9], al

; 604  : 		if(RALT > 9990)

	cmp	DWORD PTR _RALT$2[ebp], 9990		; 00002706H
	jle	SHORT $LN1@DrawRALT

; 605  : 		RALT = 9990;

	mov	DWORD PTR _RALT$2[ebp], 9990		; 00002706H
$LN1@DrawRALT:

; 606  : 		sprintf(tempstr, "%d", RALT);

	mov	ecx, DWORD PTR _RALT$2[ebp]
	push	ecx
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	edx, DWORD PTR _tempstr$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 607  : 		display->TextRight(x, y, tempstr);

	push	0
	lea	eax, DWORD PTR _tempstr$4[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _y$3[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$1[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
$LN3@DrawRALT:

; 608  : 	}
; 609  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?DrawRALT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ENDP ; WpnMfdDrawable::DrawRALT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_width$ = -80						; size = 4
tv495 = -76						; size = 4
tv523 = -72						; size = 4
_y$ = -68						; size = 4
tv561 = -64						; size = 4
_x$ = -60						; size = 4
tv503 = -56						; size = 4
_ZoomMin$ = -52						; size = 4
tv376 = -48						; size = 4
_ZoomMax$ = -44						; size = 4
tv422 = -40						; size = 4
_mode$ = -36						; size = 4
_this$ = -32						; size = 4
_tmpStr$ = -28						; size = 12
_tempstr$ = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
_display$ = 8						; size = 4
?OSBLabels@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z PROC ; WpnMfdDrawable::OSBLabels
; _this$ = ecx

; 511  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 512  : 	char tempstr[10] = "";

	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _tempstr$[ebp], al
	xor	ecx, ecx
	mov	DWORD PTR _tempstr$[ebp+1], ecx
	mov	DWORD PTR _tempstr$[ebp+5], ecx
	mov	BYTE PTR _tempstr$[ebp+9], cl

; 513  : 	if(!Sms->Powered)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN22@OSBLabels

; 514  : 		LabelButton (0, "STBY");

	push	0
	push	0
	push	OFFSET ??_C@_04BKGGJKLP@STBY?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 515  : 
; 516  : 	else

	jmp	SHORT $LN21@OSBLabels
$LN22@OSBLabels:

; 517  : 		LabelButton (0, "OPER");

	push	0
	push	0
	push	OFFSET ??_C@_04NGKPLICF@OPER?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN21@OSBLabels:

; 518  : 
; 519  : 	if(Sms->MavSubMode == SMSBaseClass::PRE)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN20@OSBLabels

; 520  : 		sprintf(tempstr,"PRE");

	push	OFFSET ??_C@_03PHIAGONP@PRE?$AA@
	lea	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8
	jmp	SHORT $LN17@OSBLabels
$LN20@OSBLabels:

; 521  : 
; 522  : 	else if(Sms->MavSubMode == SMSBaseClass::VIS)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	DWORD PTR [eax+24], 1
	jne	SHORT $LN18@OSBLabels

; 523  : 		sprintf(tempstr, "VIS");

	push	OFFSET ??_C@_03NOAAMIEF@VIS?$AA@
	lea	ecx, DWORD PTR _tempstr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 524  : 
; 525  : 	else

	jmp	SHORT $LN17@OSBLabels
$LN18@OSBLabels:

; 526  : 		sprintf(tempstr,"BORE");

	push	OFFSET ??_C@_04DKKPAKDO@BORE?$AA@
	lea	edx, DWORD PTR _tempstr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8
$LN17@OSBLabels:

; 527  : 
; 528  : 	LabelButton(1, tempstr);

	push	0
	push	0
	lea	eax, DWORD PTR _tempstr$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 529  : 	
; 530  : 	if (g_bGreyMFD)

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN16@OSBLabels

; 531  : 		LabelButton(19, "GRAY", "OFF");

	push	0
	push	OFFSET ??_C@_03MPPIHBHJ@OFF?$AA@
	push	OFFSET ??_C@_04KICLEKHI@GRAY?$AA@
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 532  : 	else

	jmp	SHORT $LN15@OSBLabels
$LN16@OSBLabels:

; 533  : 		LabelButton(19, "GRAY", "ON");

	push	0
	push	OFFSET ??_C@_02BFICIOJL@ON?$AA@
	push	OFFSET ??_C@_04KICLEKHI@GRAY?$AA@
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN15@OSBLabels:

; 534  : 	// RV - Biker - Make FOV switching this dynamic
; 535  : 	//if (mavDisplay && mavDisplay->CurFOV() > (3.5F * DTR))
; 536  : 	float ZoomMin;
; 537  : 	float ZoomMax;
; 538  : 
; 539  : 	if((MissileClass*)Sms->GetCurrentWeapon() && ((MissileClass*)Sms->GetCurrentWeapon())->GetEXPLevel() > 0 && ((MissileClass*)Sms->GetCurrentWeapon())->GetFOVLevel() > 0) {

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	test	eax, eax
	je	$LN14@OSBLabels
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	?GetEXPLevel@MissileClass@@QAEMXZ	; MissileClass::GetEXPLevel
	fstp	DWORD PTR tv495[ebp]
	movss	xmm0, DWORD PTR tv495[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN14@OSBLabels
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	?GetFOVLevel@MissileClass@@QAEMXZ	; MissileClass::GetFOVLevel
	fstp	DWORD PTR tv503[ebp]
	movss	xmm0, DWORD PTR tv503[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN14@OSBLabels

; 540  : 		ZoomMin = ((MissileClass*)Sms->GetCurrentWeapon())->GetFOVLevel();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	?GetFOVLevel@MissileClass@@QAEMXZ	; MissileClass::GetFOVLevel
	fstp	DWORD PTR _ZoomMin$[ebp]

; 541  : 		ZoomMax = ((MissileClass*)Sms->GetCurrentWeapon())->GetEXPLevel();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	?GetEXPLevel@MissileClass@@QAEMXZ	; MissileClass::GetEXPLevel
	fstp	DWORD PTR _ZoomMax$[ebp]

; 542  : 	}
; 543  : 	else {

	jmp	SHORT $LN13@OSBLabels
$LN14@OSBLabels:

; 544  : 		// This should work for old values
; 545  : 		ZoomMin = 3.0f;

	movss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR _ZoomMin$[ebp], xmm0

; 546  : 		ZoomMax = 6.0f;

	movss	xmm0, DWORD PTR __real@40c00000
	movss	DWORD PTR _ZoomMax$[ebp], xmm0
$LN13@OSBLabels:

; 547  : 	}
; 548  : 
; 549  : 	if (mavDisplay && mavDisplay->CurFOV() > 12.0f/(ZoomMax-(ZoomMax-ZoomMin)/2.0f) * DTR)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN12@OSBLabels
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	call	?CurFOV@MaverickDisplayClass@@QAEMXZ	; MaverickDisplayClass::CurFOV
	fstp	DWORD PTR tv523[ebp]
	movss	xmm0, DWORD PTR tv523[ebp]
	movss	xmm1, DWORD PTR _ZoomMax$[ebp]
	subss	xmm1, DWORD PTR _ZoomMin$[ebp]
	divss	xmm1, DWORD PTR __real@40000000
	movss	xmm2, DWORD PTR _ZoomMax$[ebp]
	subss	xmm2, xmm1
	movss	xmm1, DWORD PTR __real@41400000
	divss	xmm1, xmm2
	mulss	xmm1, DWORD PTR __real@3c8efa34
	comiss	xmm0, xmm1
	jbe	SHORT $LN12@OSBLabels

; 550  : 		LabelButton (2, "FOV");

	push	0
	push	0
	push	OFFSET ??_C@_03PHODBHCN@FOV?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 551  : 	else

	jmp	SHORT $LN11@OSBLabels
$LN12@OSBLabels:

; 552  : 		LabelButton (2, "EXP", NULL, 1);

	push	1
	push	0
	push	OFFSET ??_C@_03KKGFKKLA@EXP?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN11@OSBLabels:

; 553  : 	if(Sms->curWeapon)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 164				; 000000a4H
	call	??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ	; VuBin<SimWeaponClass>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@OSBLabels

; 554  : 	{
; 555  : 		if(((MissileClass*)Sms->GetCurrentWeapon())->HOC)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, BYTE PTR [eax+813]
	test	ecx, ecx
	je	SHORT $LN9@OSBLabels

; 556  : 			LabelButton (4, "HOC");

	push	0
	push	0
	push	OFFSET ??_C@_03CAIJIGAK@HOC?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 557  : 		else

	jmp	SHORT $LN8@OSBLabels
$LN9@OSBLabels:

; 558  : 			LabelButton (4, "COH");

	push	0
	push	0
	push	OFFSET ??_C@_03BEHMNIMA@COH?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN8@OSBLabels:

; 559  : 	}
; 560  : 	//Doc says this isn't there anymore in the real deal
; 561  : 	//LabelButton (19, pFCC->subModeString);
; 562  : 	char tmpStr[12];
; 563  :     float width = display->TextWidth("M ");

	push	OFFSET ??_C@_02ONHIBMNM@M?5?$AA@
	mov	edx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax+84]
	call	edx
	fstp	DWORD PTR _width$[ebp]

; 564  :     if (Sms->CurHardpoint() < 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	test	eax, eax
	jge	SHORT $LN7@OSBLabels

; 565  : 		return;

	jmp	$LN23@OSBLabels
$LN7@OSBLabels:

; 566  :     sprintf (tmpStr, "%d%s", Sms->NumCurrentWpn(), Sms->hardPoint[Sms->CurHardpoint()]->GetWeaponData()->mnemonic);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv376[ebp], edx
	mov	eax, DWORD PTR tv376[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv376[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?NumCurrentWpn@SMSBaseClass@@QAEHXZ	; SMSBaseClass::NumCurrentWpn
	push	eax
	push	OFFSET ??_C@_04LOCMGGPM@?$CFd?$CFs?$AA@
	lea	edx, DWORD PTR _tmpStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 567  :     ShiAssert(strlen(tmpStr) < sizeof (tmpStr));
; 568  :     LabelButton(5, tmpStr);

	push	0
	push	0
	lea	eax, DWORD PTR _tmpStr$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 569  : 
; 570  : 	char *mode = "";

	mov	DWORD PTR _mode$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 571  : 	if(Sms->Powered && Sms->MavCoolTimer <= 0.0F)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	movzx	eax, BYTE PTR [edx+16]
	test	eax, eax
	je	SHORT $LN4@OSBLabels
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+20]
	jb	SHORT $LN4@OSBLabels

; 572  : 	{
; 573  : 		switch (Sms->MasterArm())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?MasterArm@SMSBaseClass@@QAE?AW4MasterArmState@1@XZ ; SMSBaseClass::MasterArm
	mov	DWORD PTR tv422[ebp], eax
	cmp	DWORD PTR tv422[ebp], 0
	je	SHORT $LN3@OSBLabels
	cmp	DWORD PTR tv422[ebp], 1
	je	SHORT $LN2@OSBLabels
	cmp	DWORD PTR tv422[ebp], 2
	je	SHORT $LN1@OSBLabels
	jmp	SHORT $LN4@OSBLabels
$LN3@OSBLabels:

; 574  : 		{
; 575  : 		case SMSBaseClass::Safe:
; 576  : 			mode = "";

	mov	DWORD PTR _mode$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@

; 577  : 			break;

	jmp	SHORT $LN4@OSBLabels
$LN2@OSBLabels:

; 578  : 		case SMSBaseClass::Sim:
; 579  : 			mode = "SIM";

	mov	DWORD PTR _mode$[ebp], OFFSET ??_C@_03DNJPAHKI@SIM?$AA@

; 580  : 			break;

	jmp	SHORT $LN4@OSBLabels
$LN1@OSBLabels:

; 581  : 		case SMSBaseClass::Arm:
; 582  : 			mode = "RDY";

	mov	DWORD PTR _mode$[ebp], OFFSET ??_C@_03KDFFCEML@RDY?$AA@
$LN4@OSBLabels:

; 583  : 			break;
; 584  : 		}
; 585  :  	}
; 586  : 
; 587  :     float x, y;
; 588  : 	GetButtonPos (12, &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 589  : 	display->TextCenter(x, y + display->TextHeight(), mode);

	push	0
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	fstp	DWORD PTR tv561[ebp]
	movss	xmm0, DWORD PTR tv561[ebp]
	addss	xmm0, DWORD PTR _y$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 590  : 	BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow
$LN23@OSBLabels:

; 591  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?OSBLabels@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ENDP ; WpnMfdDrawable::OSBLabels
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
tv287 = -52						; size = 4
tv249 = -48						; size = 4
tv231 = -44						; size = 4
tv193 = -40						; size = 4
tv131 = -36						; size = 4
tv74 = -32						; size = 4
tv273 = -28						; size = 4
_pFCC$ = -24						; size = 4
tv210 = -20						; size = 4
tv209 = -16						; size = 4
_playerAC$ = -12					; size = 4
_this$ = -8						; size = 4
_harmPod$ = -4						; size = 4
_whichButton$ = 8					; size = 4
_whichMFD$ = 12						; size = 4
?PushButton@WpnMfdDrawable@@EAEXHH@Z PROC		; WpnMfdDrawable::PushButton
; _this$ = ecx

; 286  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 287  :     AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 288  : 	FireControlComputer* pFCC = playerAC->Sms->Ownship()->GetFCC();

	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx+460]
	call	eax
	mov	DWORD PTR _pFCC$[ebp], eax

; 289  : 	HarmTargetingPod* harmPod = (HarmTargetingPod*)FindSensor(Sms->Ownship(), SensorClass::HTS);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	push	eax
	call	?FindSensor@@YAPAVSensorClass@@PAVSimMoverClass@@H@Z ; FindSensor
	add	esp, 8
	mov	DWORD PTR _harmPod$[ebp], eax

; 290  : 
; 291  : 	// RV - I-Hawk - First check if FCC isn't in HARM mode
; 292  : 	if ( pFCC->GetMasterMode() != FireControlComputer::AirGroundHARM )

	mov	ecx, DWORD PTR _pFCC$[ebp]
	call	?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ ; FireControlComputer::GetMasterMode
	cmp	eax, 7
	je	$LN55@PushButton

; 293  : 	{
; 294  : 		switch (whichButton)

	mov	edx, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv131[ebp], edx
	cmp	DWORD PTR tv131[ebp], 19		; 00000013H
	ja	$LN53@PushButton
	mov	eax, DWORD PTR tv131[ebp]
	movzx	ecx, BYTE PTR $LN60@PushButton[eax]
	jmp	DWORD PTR $LN65@PushButton[ecx*4]
$LN52@PushButton:

; 295  : 		{
; 296  : 		case 0:
; 297  : 			if(!Sms->Powered)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN51@PushButton

; 298  : 			{
; 299  : 				Sms->Powered = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	BYTE PTR [eax+16], 1
$LN51@PushButton:

; 300  : 			}
; 301  : 			break;

	jmp	$LN53@PushButton
$LN50@PushButton:

; 302  : 
; 303  : 		case 1:
; 304  : 			Sms->StepMavSubMode();

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?StepMavSubMode@SMSBaseClass@@QAEX_N@Z	; SMSBaseClass::StepMavSubMode

; 305  : 			break;

	jmp	$LN53@PushButton
$LN49@PushButton:

; 306  : 
; 307  : 		case 2:
; 308  : 			if(mavDisplay)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+36], 0
	je	SHORT $LN48@PushButton

; 309  : 			{
; 310  : 				mavDisplay->ToggleFOV();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	?ToggleFOV@MaverickDisplayClass@@QAEXXZ	; MaverickDisplayClass::ToggleFOV
$LN48@PushButton:

; 311  : 			}
; 312  : 			break;

	jmp	$LN53@PushButton
$LN47@PushButton:

; 313  : 
; 314  : 		case 4:
; 315  : 			((MissileClass*)Sms->GetCurrentWeapon())->HOC = !((MissileClass*)Sms->GetCurrentWeapon())->HOC;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, BYTE PTR [eax+813]
	test	ecx, ecx
	jne	SHORT $LN58@PushButton
	mov	DWORD PTR tv193[ebp], 1
	jmp	SHORT $LN59@PushButton
$LN58@PushButton:
	mov	DWORD PTR tv193[ebp], 0
$LN59@PushButton:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	cl, BYTE PTR tv193[ebp]
	mov	BYTE PTR [eax+813], cl

; 316  : 			break;

	jmp	SHORT $LN53@PushButton
$LN46@PushButton:

; 317  : 		case 19:
; 318  : 			if ((g_bGreyMFD) || (!g_bGreyScaleMFD))

	movzx	edx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	edx, edx
	jne	SHORT $LN44@PushButton
	movzx	eax, BYTE PTR ?g_bGreyScaleMFD@@3_NA	; g_bGreyScaleMFD
	test	eax, eax
	jne	SHORT $LN45@PushButton
$LN44@PushButton:

; 319  : 				g_bGreyMFD = false;

	mov	BYTE PTR ?g_bGreyMFD@@3_NA, 0		; g_bGreyMFD

; 320  : 			else

	jmp	SHORT $LN43@PushButton
$LN45@PushButton:

; 321  : 				g_bGreyMFD = true;

	mov	BYTE PTR ?g_bGreyMFD@@3_NA, 1		; g_bGreyMFD
$LN43@PushButton:

; 322  : 		break;

	jmp	SHORT $LN53@PushButton
$LN42@PushButton:

; 323  : 
; 324  : 		case 10:
; 325  : 		case 11:	
; 326  : 		case 12:	
; 327  : 		case 13:
; 328  : 		case 14:
; 329  : 			MfdDrawable::PushButton(whichButton, whichMFD);

	mov	ecx, DWORD PTR _whichMFD$[ebp]
	push	ecx
	mov	edx, DWORD PTR _whichButton$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton
$LN53@PushButton:

; 330  : 			break;
; 331  : 
; 332  : 		default:
; 333  : 			break;
; 334  : 		}
; 335  : 	}
; 336  : 
; 337  : 	else	// Now handle the HARM mode 

	jmp	$LN56@PushButton
$LN55@PushButton:

; 338  : 	{
; 339  : 		switch ( harmPod->GetSubMode() )

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ ; HarmTargetingPod::GetSubMode
	mov	DWORD PTR tv209[ebp], eax
	mov	eax, DWORD PTR tv209[ebp]
	sub	eax, 1
	mov	DWORD PTR tv209[ebp], eax
	cmp	DWORD PTR tv209[ebp], 3
	ja	SHORT $LN37@PushButton
	mov	ecx, DWORD PTR tv209[ebp]
	jmp	DWORD PTR $LN66@PushButton[ecx*4]
$LN37@PushButton:

; 340  : 		{
; 341  : 		case HarmTargetingPod::HarmModeChooser:
; 342  : 		default:
; 343  : 			switch ( whichButton )

	mov	edx, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv210[ebp], edx
	mov	eax, DWORD PTR tv210[ebp]
	sub	eax, 10					; 0000000aH
	mov	DWORD PTR tv210[ebp], eax
	cmp	DWORD PTR tv210[ebp], 9
	ja	SHORT $LN35@PushButton
	mov	ecx, DWORD PTR tv210[ebp]
	movzx	edx, BYTE PTR $LN61@PushButton[ecx]
	jmp	DWORD PTR $LN67@PushButton[edx*4]
$LN34@PushButton:

; 344  : 			{
; 345  : 			case 10:
; 346  : 			case 11:	
; 347  : 			case 12:	
; 348  : 			case 13:
; 349  : 			case 14:
; 350  : 				MfdDrawable::PushButton(whichButton, whichMFD);

	mov	eax, DWORD PTR _whichMFD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _whichButton$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton

; 351  : 				break;

	jmp	SHORT $LN35@PushButton
$LN33@PushButton:

; 352  : 
; 353  : 			case 19:
; 354  : 				harmPod->SetSubMode( HarmTargetingPod::POS );

	push	3
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 355  : 				harmPod->SetRange( 60 );

	push	60					; 0000003cH
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetRange@HarmTargetingPod@@QAEXH@Z	; HarmTargetingPod::SetRange

; 356  : 				break;

	jmp	SHORT $LN35@PushButton
$LN32@PushButton:

; 357  :                 
; 358  : 			case 18:
; 359  : 				harmPod->SetSubMode( HarmTargetingPod::HAS );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 360  : 				harmPod->SetRange( 60 );

	push	60					; 0000003cH
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetRange@HarmTargetingPod@@QAEXH@Z	; HarmTargetingPod::SetRange

; 361  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 362  : 				harmPod->SetFilterMode( HarmTargetingPod::ALL );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode
$LN35@PushButton:

; 363  : 				break;
; 364  : 
; 365  : 			}
; 366  : 			break;

	jmp	$LN56@PushButton
$LN31@PushButton:

; 367  : 
; 368  : 		case HarmTargetingPod::HAS:
; 369  : 			switch ( whichButton )

	mov	edx, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv231[ebp], edx
	cmp	DWORD PTR tv231[ebp], 14		; 0000000eH
	ja	SHORT $LN29@PushButton
	mov	eax, DWORD PTR tv231[ebp]
	movzx	ecx, BYTE PTR $LN62@PushButton[eax]
	jmp	DWORD PTR $LN68@PushButton[ecx*4]
$LN28@PushButton:

; 370  : 			{
; 371  : 			case 0:
; 372  : 				harmPod->SetSubMode( HarmTargetingPod::HarmModeChooser );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 373  : 				pFCC->dropTrackCmd = TRUE; // drop target if switching HTS mode

	mov	edx, DWORD PTR _pFCC$[ebp]
	mov	BYTE PTR [edx+185], 1

; 374  : 				break;

	jmp	SHORT $LN29@PushButton
$LN27@PushButton:

; 375  : 
; 376  : 			case 2:
; 377  : 				harmPod->ToggleZoomMode();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ToggleZoomMode@HarmTargetingPod@@QAEXXZ ; HarmTargetingPod::ToggleZoomMode

; 378  : 				break;

	jmp	SHORT $LN29@PushButton
$LN26@PushButton:

; 379  : 			
; 380  : 			case 3:
; 381  : 				// Go to the threats filtering screen
; 382  : 				harmPod->SetSubMode( HarmTargetingPod::FilterMode ); 

	push	4
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 383  : 				harmPod->SetLastSubMode( HarmTargetingPod::HAS ); 

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetLastSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetLastSubMode

; 384  : 				break;

	jmp	SHORT $LN29@PushButton
$LN25@PushButton:

; 385  : 
; 386  : 			case 6:
; 387  : 				// Reset HAS timer
; 388  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 389  : 				break;

	jmp	SHORT $LN29@PushButton
$LN24@PushButton:

; 390  : 
; 391  : 			case 10:
; 392  : 			case 11:	
; 393  : 			case 12:	
; 394  : 			case 13:
; 395  : 			case 14:
; 396  : 				MfdDrawable::PushButton(whichButton, whichMFD);

	mov	eax, DWORD PTR _whichMFD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _whichButton$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton
$LN29@PushButton:

; 397  : 			}
; 398  : 
; 399  : 			break;

	jmp	$LN56@PushButton
$LN23@PushButton:

; 400  : 
; 401  : 		case HarmTargetingPod::POS:
; 402  : 			switch ( whichButton )

	mov	edx, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv249[ebp], edx
	cmp	DWORD PTR tv249[ebp], 19		; 00000013H
	ja	$LN21@PushButton
	mov	eax, DWORD PTR tv249[ebp]
	movzx	ecx, BYTE PTR $LN63@PushButton[eax]
	jmp	DWORD PTR $LN69@PushButton[ecx*4]
$LN20@PushButton:

; 403  : 			{
; 404  : 			case 0:
; 405  : 				harmPod->SetSubMode( HarmTargetingPod::HarmModeChooser );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 406  : 				pFCC->dropTrackCmd = TRUE; // drop target if switching HTS mode

	mov	edx, DWORD PTR _pFCC$[ebp]
	mov	BYTE PTR [edx+185], 1

; 407  : 				break;

	jmp	SHORT $LN21@PushButton
$LN19@PushButton:

; 408  : 
; 409  : 			case 10:
; 410  : 			case 11:	
; 411  : 			case 12:	
; 412  : 			case 13:
; 413  : 			case 14:
; 414  : 				MfdDrawable::PushButton(whichButton, whichMFD);

	mov	eax, DWORD PTR _whichMFD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _whichButton$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton

; 415  : 				break;

	jmp	SHORT $LN21@PushButton
$LN18@PushButton:

; 416  : 
; 417  : 			case 16:
; 418  : 				harmPod->SetPOSTargetIndex ( 0 );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetPOSTargetIndex@HarmTargetingPod@@QAEXH@Z ; HarmTargetingPod::SetPOSTargetIndex

; 419  : 				harmPod->LockPOSTarget();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?LockPOSTarget@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::LockPOSTarget

; 420  : 				break;

	jmp	SHORT $LN21@PushButton
$LN17@PushButton:

; 421  : 
; 422  : 			case 17:
; 423  : 				harmPod->SetPOSTargetIndex ( 1 );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetPOSTargetIndex@HarmTargetingPod@@QAEXH@Z ; HarmTargetingPod::SetPOSTargetIndex

; 424  : 				harmPod->LockPOSTarget();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?LockPOSTarget@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::LockPOSTarget

; 425  : 				break;

	jmp	SHORT $LN21@PushButton
$LN16@PushButton:

; 426  : 
; 427  : 			case 18:
; 428  : 				harmPod->SetPOSTargetIndex ( 2 );

	push	2
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetPOSTargetIndex@HarmTargetingPod@@QAEXH@Z ; HarmTargetingPod::SetPOSTargetIndex

; 429  : 				harmPod->LockPOSTarget();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?LockPOSTarget@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::LockPOSTarget

; 430  : 				break;

	jmp	SHORT $LN21@PushButton
$LN15@PushButton:

; 431  : 
; 432  : 			case 19:
; 433  : 				harmPod->SetPOSTargetIndex ( 3 );

	push	3
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetPOSTargetIndex@HarmTargetingPod@@QAEXH@Z ; HarmTargetingPod::SetPOSTargetIndex

; 434  : 				harmPod->LockPOSTarget();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?LockPOSTarget@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::LockPOSTarget
$LN21@PushButton:

; 435  : 				break;
; 436  : 			}
; 437  : 
; 438  : 			break;

	jmp	$LN56@PushButton
$LN14@PushButton:

; 439  : 
; 440  : 		case HarmTargetingPod::Handoff:
; 441  : 			switch ( whichButton )

	mov	edx, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv273[ebp], edx
	cmp	DWORD PTR tv273[ebp], 0
	je	SHORT $LN11@PushButton
	cmp	DWORD PTR tv273[ebp], 9
	jle	SHORT $LN12@PushButton
	cmp	DWORD PTR tv273[ebp], 14		; 0000000eH
	jle	SHORT $LN10@PushButton
	jmp	SHORT $LN12@PushButton
$LN11@PushButton:

; 442  : 			{
; 443  : 			case 0:
; 444  : 				harmPod->SetSubMode( HarmTargetingPod::HarmModeChooser );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 445  : 				pFCC->dropTrackCmd = TRUE; // drop target if switching HARM mode

	mov	eax, DWORD PTR _pFCC$[ebp]
	mov	BYTE PTR [eax+185], 1

; 446  : 				break;

	jmp	SHORT $LN12@PushButton
$LN10@PushButton:

; 447  : 
; 448  : 			case 10:
; 449  : 			case 11:	
; 450  : 			case 12:	
; 451  : 			case 13:
; 452  : 			case 14:
; 453  : 				MfdDrawable::PushButton(whichButton, whichMFD);

	mov	ecx, DWORD PTR _whichMFD$[ebp]
	push	ecx
	mov	edx, DWORD PTR _whichButton$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton
$LN12@PushButton:

; 454  : 				break;
; 455  : 			}
; 456  : 
; 457  : 			break;

	jmp	$LN56@PushButton
$LN9@PushButton:

; 458  : 
; 459  : 		case HarmTargetingPod::FilterMode:
; 460  : 			switch ( whichButton )

	mov	eax, DWORD PTR _whichButton$[ebp]
	mov	DWORD PTR tv287[ebp], eax
	cmp	DWORD PTR tv287[ebp], 19		; 00000013H
	ja	$LN56@PushButton
	mov	ecx, DWORD PTR tv287[ebp]
	movzx	edx, BYTE PTR $LN64@PushButton[ecx]
	jmp	DWORD PTR $LN70@PushButton[edx*4]
$LN6@PushButton:

; 461  : 			{
; 462  : 			case 0:
; 463  : 				harmPod->SetSubMode( HarmTargetingPod::HAS ); // Return right back to HAS

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 464  : 				playerAC->SOIManager ( SimVehicleClass::SOI_WEAPON );

	push	2
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z ; SimVehicleClass::SOIManager

; 465  : 				break;

	jmp	$LN56@PushButton
$LN5@PushButton:

; 466  : 
; 467  : 			case 10:
; 468  : 			case 11:	
; 469  : 			case 12:	
; 470  : 			case 13:
; 471  : 			case 14:
; 472  : 				MfdDrawable::PushButton(whichButton, whichMFD);

	mov	eax, DWORD PTR _whichMFD$[ebp]
	push	eax
	mov	ecx, DWORD PTR _whichButton$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PushButton@MfdDrawable@@UAEXHH@Z	; MfdDrawable::PushButton

; 473  : 				break;

	jmp	$LN56@PushButton
$LN4@PushButton:

; 474  : 
; 475  : 				// Eache of this buttons sets a different filtering mode and getting back to HAS
; 476  : 			case 19:
; 477  : 				harmPod->SetFilterMode ( HarmTargetingPod::ALL );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode

; 478  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 479  : 				harmPod->SetSubMode( HarmTargetingPod::HAS );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 480  : 				playerAC->SOIManager ( SimVehicleClass::SOI_WEAPON );

	push	2
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z ; SimVehicleClass::SOIManager

; 481  : 				break;

	jmp	SHORT $LN56@PushButton
$LN3@PushButton:

; 482  :                 
; 483  : 			case 18:
; 484  : 				harmPod->SetFilterMode ( HarmTargetingPod::HP );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode

; 485  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 486  : 				harmPod->SetSubMode( HarmTargetingPod::HAS );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 487  : 				playerAC->SOIManager ( SimVehicleClass::SOI_WEAPON );

	push	2
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z ; SimVehicleClass::SOIManager

; 488  : 				break;

	jmp	SHORT $LN56@PushButton
$LN2@PushButton:

; 489  : 
; 490  : 			case 17:
; 491  : 				harmPod->SetFilterMode ( HarmTargetingPod::HA );

	push	2
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode

; 492  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 493  : 				harmPod->SetSubMode( HarmTargetingPod::HAS );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 494  : 				playerAC->SOIManager ( SimVehicleClass::SOI_WEAPON );

	push	2
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z ; SimVehicleClass::SOIManager

; 495  : 				break;

	jmp	SHORT $LN56@PushButton
$LN1@PushButton:

; 496  : 
; 497  : 			case 16:
; 498  : 				harmPod->SetFilterMode ( HarmTargetingPod::LA );

	push	3
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetFilterMode@HarmTargetingPod@@QAEXW4HASFilterMode@1@@Z ; HarmTargetingPod::SetFilterMode

; 499  : 				harmPod->ResetHASTimer();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?ResetHASTimer@HarmTargetingPod@@QAEXXZ	; HarmTargetingPod::ResetHASTimer

; 500  : 				harmPod->SetSubMode( HarmTargetingPod::HAS );

	push	1
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode

; 501  : 				playerAC->SOIManager ( SimVehicleClass::SOI_WEAPON );

	push	2
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?SOIManager@SimVehicleClass@@QAEXW4SOI@1@@Z ; SimVehicleClass::SOIManager
$LN56@PushButton:

; 502  : 				break;			
; 503  : 			}
; 504  : 
; 505  : 			break;
; 506  : 		}
; 507  : 	}
; 508  : }

	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN65@PushButton:
	DD	$LN52@PushButton
	DD	$LN50@PushButton
	DD	$LN49@PushButton
	DD	$LN47@PushButton
	DD	$LN42@PushButton
	DD	$LN46@PushButton
	DD	$LN53@PushButton
$LN60@PushButton:
	DB	0
	DB	1
	DB	2
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
$LN66@PushButton:
	DD	$LN31@PushButton
	DD	$LN14@PushButton
	DD	$LN23@PushButton
	DD	$LN9@PushButton
$LN67@PushButton:
	DD	$LN34@PushButton
	DD	$LN32@PushButton
	DD	$LN33@PushButton
	DD	$LN35@PushButton
$LN61@PushButton:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	3
	DB	3
	DB	3
	DB	1
	DB	2
	npad	2
$LN68@PushButton:
	DD	$LN28@PushButton
	DD	$LN27@PushButton
	DD	$LN26@PushButton
	DD	$LN25@PushButton
	DD	$LN24@PushButton
	DD	$LN29@PushButton
$LN62@PushButton:
	DB	0
	DB	5
	DB	1
	DB	2
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	npad	1
$LN69@PushButton:
	DD	$LN20@PushButton
	DD	$LN19@PushButton
	DD	$LN18@PushButton
	DD	$LN17@PushButton
	DD	$LN16@PushButton
	DD	$LN15@PushButton
	DD	$LN21@PushButton
$LN63@PushButton:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
$LN70@PushButton:
	DD	$LN6@PushButton
	DD	$LN5@PushButton
	DD	$LN1@PushButton
	DD	$LN2@PushButton
	DD	$LN3@PushButton
	DD	$LN4@PushButton
	DD	$LN56@PushButton
$LN64@PushButton:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
?PushButton@WpnMfdDrawable@@EAEXHH@Z ENDP		; WpnMfdDrawable::PushButton
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_cX$ = -16						; size = 4
_ofont$ = -12						; size = 4
_cY$ = -8						; size = 4
_this$ = -4						; size = 4
_display$ = 8						; size = 4
?OffMode@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z PROC	; WpnMfdDrawable::OffMode
; _this$ = ecx

; 814  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 815  : 	float cX, cY = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _cY$[ebp], xmm0

; 816  : 	display->TextCenterVertical (0.0f, 0.2f, "WPN");

	push	0
	push	OFFSET ??_C@_03IKCHFLMD@WPN?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 817  : 	int ofont = display->CurFont();

	call	?CurFont@VirtualDisplay@@SAHXZ		; VirtualDisplay::CurFont
	mov	DWORD PTR _ofont$[ebp], eax

; 818  : 	display->SetFont(2);

	push	2
	call	?SetFont@VirtualDisplay@@SAXH@Z		; VirtualDisplay::SetFont
	add	esp, 4

; 819  : 	display->TextCenterVertical (0.0f, 0.0f, "OFF");

	push	0
	push	OFFSET ??_C@_03MPPIHBHJ@OFF?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _display$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _display$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 820  : 	display->SetFont(ofont);

	mov	ecx, DWORD PTR _ofont$[ebp]
	push	ecx
	call	?SetFont@VirtualDisplay@@SAXH@Z		; VirtualDisplay::SetFont
	add	esp, 4

; 821  : 	theRadar->GetCursorPosition (&cX, &cY);

	lea	edx, DWORD PTR _cY$[ebp]
	push	edx
	lea	eax, DWORD PTR _cX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR [edx+204]
	call	eax

; 822  : 	if( OTWDriver.pCockpitManager && OTWDriver.pCockpitManager->mpIcp &&  // JPG 14 Dec 03 - Added BE/ownship info
; 823  : 		OTWDriver.pCockpitManager->mpIcp->ShowBullseyeInfo )

	cmp	DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684, 0
	je	SHORT $LN2@OffMode
	mov	ecx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	cmp	DWORD PTR [ecx+688], 0
	je	SHORT $LN2@OffMode
	mov	edx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	mov	eax, DWORD PTR [edx+688]
	movzx	ecx, BYTE PTR [eax+300]
	test	ecx, ecx
	je	SHORT $LN2@OffMode

; 824  : 	{
; 825  : 		DrawBullseyeCircle(display, cX, cY);

	push	ecx
	movss	xmm0, DWORD PTR _cY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _cX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _display$[ebp]
	push	edx
	call	?DrawBullseyeCircle@@YAXPAVVirtualDisplay@@MM@Z ; DrawBullseyeCircle
	add	esp, 12					; 0000000cH

; 826  : 	}
; 827  : 
; 828  : 	else

	jmp	SHORT $LN1@OffMode
$LN2@OffMode:

; 829  : 	{
; 830  : 		DrawReference(MfdDisplay[OnMFD()]->GetOwnShip());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnMFD@DrawableClass@@QAEHXZ		; DrawableClass::OnMFD
	mov	ecx, DWORD PTR ?MfdDisplay@@3PAPAVMFDClass@@A[eax*4]
	call	?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ ; MFDClass::GetOwnShip
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawReference@MfdDrawable@@QAEXPAVAircraftClass@@@Z ; MfdDrawable::DrawReference
$LN1@OffMode:

; 831  : 	}
; 832  : 
; 833  : 	BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 834  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OffMode@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ENDP	; WpnMfdDrawable::OffMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_tempColor$1 = -76					; size = 4
_tempColor$2 = -72					; size = 4
_tempColor$3 = -68					; size = 4
_tempColor$4 = -64					; size = 4
_tempColor$5 = -60					; size = 4
tv843 = -56						; size = 4
tv818 = -52						; size = 4
tv793 = -48						; size = 4
tv768 = -44						; size = 4
tv587 = -40						; size = 4
tv75 = -36						; size = 4
tv400 = -32						; size = 4
_boxed$6 = -28						; size = 4
tv137 = -24						; size = 4
_playerAC$ = -20					; size = 4
_x$7 = -16						; size = 4
_y$8 = -12						; size = 4
_harmPod$ = -8						; size = 4
_this$ = -4						; size = 4
?HARMWpnMode@WpnMfdDrawable@@QAEXXZ PROC		; WpnMfdDrawable::HARMWpnMode
; _this$ = ecx

; 650  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 651  : 	AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 652  : 	
; 653  : 	pFCC = playerAC->Sms->Ownship()->GetFCC();

	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+460]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 654  : 	Sms = playerAC->Sms;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	mov	DWORD PTR [edx+40], ecx

; 655  : 	HarmTargetingPod* harmPod = (HarmTargetingPod*)FindSensor(Sms->Ownship(), SensorClass::HTS);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	push	eax
	call	?FindSensor@@YAPAVSensorClass@@PAVSimMoverClass@@H@Z ; FindSensor
	add	esp, 8
	mov	DWORD PTR _harmPod$[ebp], eax

; 656  : 
; 657  : 	if ( pFCC->GetMasterMode() == FireControlComputer::AirGroundHARM ) // Varify we are in HARM FCC Master mode

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?GetMasterMode@FireControlComputer@@QAE?AW4FCCMasterMode@1@XZ ; FireControlComputer::GetMasterMode
	cmp	eax, 7
	jne	$LN24@HARMWpnMod

; 658  : 	{
; 659  : 		switch ( harmPod->GetSubMode() ) // Check which Submode 

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ ; HarmTargetingPod::GetSubMode
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv137[ebp], ecx
	cmp	DWORD PTR tv137[ebp], 3
	ja	SHORT $LN23@HARMWpnMod
	mov	edx, DWORD PTR tv137[ebp]
	jmp	DWORD PTR $LN37@HARMWpnMod[edx*4]
$LN23@HARMWpnMod:

; 660  : 		{
; 661  : 		case HarmTargetingPod::HarmModeChooser: 
; 662  : 		default:
; 663  : 			LabelButton (17, "DL");

	push	0
	push	0
	push	OFFSET ??_C@_02CLOBADPI@DL?$AA@
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 664  : 			LabelButton (18, "HAS");

	push	0
	push	0
	push	OFFSET ??_C@_03GANFLJFB@HAS?$AA@
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 665  : 			LabelButton (19, "POS");

	push	0
	push	0
	push	OFFSET ??_C@_03PPOGOLCL@POS?$AA@
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 666  : 			BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 667  : 
; 668  : 			if ( !(playerAC->GetSOI() == SimVehicleClass::SOI_WEAPON) )

	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ; SimVehicleClass::GetSOI
	cmp	eax, 2
	je	$LN22@HARMWpnMod

; 669  : 			{
; 670  : 				DWORD tempColor = display->Color();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	mov	DWORD PTR _tempColor$5[ebp], eax

; 671  : 				display->SetColor(GetMfdColor(MFD_WHITY_GRAY));

	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 672  : 				display->TextCenter(0.0F, 0.6F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+72]
	call	edx

; 673  : 				display->SetColor(tempColor);

	mov	eax, DWORD PTR _tempColor$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN22@HARMWpnMod:

; 674  : 			}
; 675  : 			break;

	jmp	$LN24@HARMWpnMod
$LN21@HARMWpnMod:

; 676  : 		
; 677  : 		case HarmTargetingPod::POS:
; 678  : 			LabelButton (0, "POS");

	push	0
	push	0
	push	OFFSET ??_C@_03PPOGOLCL@POS?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 679  : 			LabelButton (1, "TBL1");

	push	0
	push	0
	push	OFFSET ??_C@_04HKIOICEJ@TBL1?$AA@
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 680  : 			LabelButton (2, "PB");

	push	0
	push	0
	push	OFFSET ??_C@_02KOENCFNK@PB?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 681  : 			LabelButton (4, "UFC");

	push	0
	push	0
	push	OFFSET ??_C@_03INCLDCMH@UFC?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 682  : 			LabelButton (8, "GS", "OF");

	push	0
	push	OFFSET ??_C@_02NNFLAEJD@OF?$AA@
	push	OFFSET ??_C@_02OEPNLDDP@GS?$AA@
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 683  : 			LabelButton (9, "T", "I");

	push	0
	push	OFFSET ??_C@_01JPJNBJEM@I?$AA@
	push	OFFSET ??_C@_01GAPBHFFA@T?$AA@
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 684  : 			harmPod->SetIntensity(GetIntensity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIntensity@DrawableClass@@QAEIXZ	; DrawableClass::GetIntensity
	push	eax
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetIntensity@DrawableClass@@QAEXI@Z	; DrawableClass::SetIntensity

; 685  : 			harmPod->POSDisplay(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _harmPod$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _harmPod$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax

; 686  : 			BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 687  : 
; 688  : 			if ( !(playerAC->GetSOI() == SimVehicleClass::SOI_WEAPON) )

	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ; SimVehicleClass::GetSOI
	cmp	eax, 2
	je	$LN20@HARMWpnMod

; 689  : 			{
; 690  : 				DWORD tempColor = display->Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tempColor$4[ebp], eax

; 691  : 				display->SetColor(GetMfdColor(MFD_WHITY_GRAY));

	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 692  : 				display->TextCenter(0.0F, 0.6F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 693  : 				display->SetColor(tempColor);

	mov	ecx, DWORD PTR _tempColor$4[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN20@HARMWpnMod:

; 694  : 			}
; 695  : 			break;

	jmp	$LN24@HARMWpnMod
$LN19@HARMWpnMod:

; 696  : 
; 697  : 		case HarmTargetingPod::HAS: 
; 698  : 		
; 699  : 			LabelButton (0, "HAS");

	push	0
	push	0
	push	OFFSET ??_C@_03GANFLJFB@HAS?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 700  : 			LabelButton (1, "TBL1");

	push	0
	push	0
	push	OFFSET ??_C@_04HKIOICEJ@TBL1?$AA@
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 701  : 
; 702  : 			switch ( harmPod->GetZoomMode() )

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ ; HarmTargetingPod::GetZoomMode
	mov	DWORD PTR tv400[ebp], eax
	cmp	DWORD PTR tv400[ebp], 1
	je	SHORT $LN16@HARMWpnMod
	cmp	DWORD PTR tv400[ebp], 2
	je	SHORT $LN15@HARMWpnMod
	cmp	DWORD PTR tv400[ebp], 3
	je	SHORT $LN14@HARMWpnMod
	jmp	SHORT $LN13@HARMWpnMod
$LN16@HARMWpnMod:

; 703  : 			{
; 704  : 			case HarmTargetingPod::Center: 
; 705  : 			    LabelButton (2, "CTR");

	push	0
	push	0
	push	OFFSET ??_C@_03LECCGOIK@CTR?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 706  : 				break;

	jmp	SHORT $LN17@HARMWpnMod
$LN15@HARMWpnMod:

; 707  : 
; 708  : 			case HarmTargetingPod::Right: 
; 709  : 			    LabelButton (2, "RT");

	push	0
	push	0
	push	OFFSET ??_C@_02LBFBEEGD@RT?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 710  : 				break;

	jmp	SHORT $LN17@HARMWpnMod
$LN14@HARMWpnMod:

; 711  : 
; 712  : 			case HarmTargetingPod::Left: 
; 713  : 			    LabelButton (2, "LT");

	push	0
	push	0
	push	OFFSET ??_C@_02KHOJMKBJ@LT?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 714  : 				break;

	jmp	SHORT $LN17@HARMWpnMod
$LN13@HARMWpnMod:

; 715  : 
; 716  : 			case HarmTargetingPod::Wide:
; 717  : 			default:
; 718  : 			    LabelButton (2, "WIDE");

	push	0
	push	0
	push	OFFSET ??_C@_04KPGPJCNC@WIDE?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN17@HARMWpnMod:

; 719  : 				break;
; 720  : 			}
; 721  : 
; 722  : 			LabelButton (3, "SRCH");

	push	0
	push	0
	push	OFFSET ??_C@_04GNBGIMEE@SRCH?$AA@
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 723  : 			LabelButton (4, "UFC");

	push	0
	push	0
	push	OFFSET ??_C@_03INCLDCMH@UFC?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 724  : 			LabelButton (6, "R", "S");

	push	0
	push	OFFSET ??_C@_01CPLAODJH@S?$AA@
	push	OFFSET ??_C@_01DGKLNCNG@R?$AA@
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 725  : 			LabelButton (9, "T", "I");

	push	0
	push	OFFSET ??_C@_01JPJNBJEM@I?$AA@
	push	OFFSET ??_C@_01GAPBHFFA@T?$AA@
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 726  : 			harmPod->SetIntensity(GetIntensity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIntensity@DrawableClass@@QAEIXZ	; DrawableClass::GetIntensity
	push	eax
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetIntensity@DrawableClass@@QAEXI@Z	; DrawableClass::SetIntensity

; 727  : 			harmPod->HASDisplay(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _harmPod$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _harmPod$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 728  : 			BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 729  : 
; 730  : 			if ( !(playerAC->GetSOI() == SimVehicleClass::SOI_WEAPON) )

	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ; SimVehicleClass::GetSOI
	cmp	eax, 2
	je	$LN12@HARMWpnMod

; 731  : 			{
; 732  : 				DWORD tempColor = display->Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tempColor$3[ebp], eax

; 733  : 				display->SetColor(GetMfdColor(MFD_WHITY_GRAY));

	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 734  : 				display->TextCenter(0.0F, 0.52F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f051eb8
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 735  : 				display->SetColor(tempColor);

	mov	ecx, DWORD PTR _tempColor$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN12@HARMWpnMod:

; 736  : 			}
; 737  : 			break;

	jmp	$LN24@HARMWpnMod
$LN11@HARMWpnMod:

; 738  : 
; 739  : 			case HarmTargetingPod::Handoff: 
; 740  : 		
; 741  : 			LabelButton (0, "HAS");

	push	0
	push	0
	push	OFFSET ??_C@_03GANFLJFB@HAS?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 742  : 			LabelButton (1, "TBL1");

	push	0
	push	0
	push	OFFSET ??_C@_04HKIOICEJ@TBL1?$AA@
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 743  : 
; 744  : 			switch ( harmPod->GetZoomMode() )

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetZoomMode@HarmTargetingPod@@QAE?AW4HASZoomMode@1@XZ ; HarmTargetingPod::GetZoomMode
	mov	DWORD PTR tv587[ebp], eax
	cmp	DWORD PTR tv587[ebp], 3
	ja	SHORT $LN9@HARMWpnMod
	mov	ecx, DWORD PTR tv587[ebp]
	jmp	DWORD PTR $LN38@HARMWpnMod[ecx*4]
$LN8@HARMWpnMod:

; 745  : 			{
; 746  : 			case HarmTargetingPod::Center: 
; 747  : 			    LabelButton (2, "CTR");

	push	0
	push	0
	push	OFFSET ??_C@_03LECCGOIK@CTR?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 748  : 				break;

	jmp	SHORT $LN9@HARMWpnMod
$LN7@HARMWpnMod:

; 749  : 
; 750  : 			case HarmTargetingPod::Right: 
; 751  : 			    LabelButton (2, "RT");

	push	0
	push	0
	push	OFFSET ??_C@_02LBFBEEGD@RT?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 752  : 				break;

	jmp	SHORT $LN9@HARMWpnMod
$LN6@HARMWpnMod:

; 753  : 
; 754  : 			case HarmTargetingPod::Left: 
; 755  : 			    LabelButton (2, "LT");

	push	0
	push	0
	push	OFFSET ??_C@_02KHOJMKBJ@LT?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 756  : 				break;

	jmp	SHORT $LN9@HARMWpnMod
$LN5@HARMWpnMod:

; 757  : 
; 758  : 			case HarmTargetingPod::Wide: 
; 759  : 				if ( harmPod->GetPreHandoffMode() == HarmTargetingPod::HAS )

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetPreHandoffMode@HarmTargetingPod@@QAE?AW4PreHandoffMode@1@XZ ; HarmTargetingPod::GetPreHandoffMode
	cmp	eax, 1
	jne	SHORT $LN4@HARMWpnMod

; 760  : 				{
; 761  :                     LabelButton (2, "WIDE");

	push	0
	push	0
	push	OFFSET ??_C@_04KPGPJCNC@WIDE?$AA@
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton
$LN4@HARMWpnMod:
$LN9@HARMWpnMod:

; 762  : 				}
; 763  : 				break;
; 764  : 			}
; 765  : 
; 766  : 			LabelButton (4, "UFC");

	push	0
	push	0
	push	OFFSET ??_C@_03INCLDCMH@UFC?$AA@
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 767  : 			LabelButton (9, "T", "I");

	push	0
	push	OFFSET ??_C@_01JPJNBJEM@I?$AA@
	push	OFFSET ??_C@_01GAPBHFFA@T?$AA@
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 768  : 			harmPod->SetIntensity(GetIntensity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIntensity@DrawableClass@@QAEIXZ	; DrawableClass::GetIntensity
	push	eax
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetIntensity@DrawableClass@@QAEXI@Z	; DrawableClass::SetIntensity

; 769  : 			harmPod->HandoffDisplay(display);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _harmPod$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _harmPod$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 770  : 			BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 771  : 
; 772  : 			if ( !(playerAC->GetSOI() == SimVehicleClass::SOI_WEAPON) )

	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ; SimVehicleClass::GetSOI
	cmp	eax, 2
	je	$LN3@HARMWpnMod

; 773  : 			{
; 774  : 				DWORD tempColor = display->Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tempColor$2[ebp], eax

; 775  : 				display->SetColor(GetMfdColor(MFD_WHITY_GRAY));

	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 776  : 				display->TextCenter(0.0F, 0.6F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 777  : 				display->SetColor(tempColor);

	mov	ecx, DWORD PTR _tempColor$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN3@HARMWpnMod:

; 778  : 			}
; 779  : 			break;

	jmp	$LN24@HARMWpnMod
$LN2@HARMWpnMod:

; 780  : 
; 781  : 		case HarmTargetingPod::FilterMode: 
; 782  : 			LabelButton (0, "HAS");

	push	0
	push	0
	push	OFFSET ??_C@_03GANFLJFB@HAS?$AA@
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LabelButton@DrawableClass@@QAEXHPAD0H@Z ; DrawableClass::LabelButton

; 783  : 
; 784  : 			float x,y;
; 785  : 			int boxed = harmPod->GetFilterMode();

	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetFilterMode@HarmTargetingPod@@QAE?AW4HASFilterMode@1@XZ ; HarmTargetingPod::GetFilterMode
	mov	DWORD PTR _boxed$6[ebp], eax

; 786  : 
; 787  : 			GetButtonPos(19, &x, &y);

	lea	ecx, DWORD PTR _y$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$7[ebp]
	push	edx
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 788  : 			display->TextLeft ( x, y, "ALL", boxed == HarmTargetingPod::ALL ? 2 : 0 );

	cmp	DWORD PTR _boxed$6[ebp], 0
	jne	SHORT $LN29@HARMWpnMod
	mov	DWORD PTR tv768[ebp], 2
	jmp	SHORT $LN30@HARMWpnMod
$LN29@HARMWpnMod:
	mov	DWORD PTR tv768[ebp], 0
$LN30@HARMWpnMod:
	mov	eax, DWORD PTR tv768[ebp]
	push	eax
	push	OFFSET ??_C@_03NIFPGLBG@ALL?$AA@
	push	ecx
	movss	xmm0, DWORD PTR _y$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$7[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 789  : 
; 790  : 			GetButtonPos(18, &x, &y);

	lea	ecx, DWORD PTR _y$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$7[ebp]
	push	edx
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 791  : 			display->TextLeft ( x, y, "HP", boxed == HarmTargetingPod::HP ? 2 : 0 );

	cmp	DWORD PTR _boxed$6[ebp], 1
	jne	SHORT $LN31@HARMWpnMod
	mov	DWORD PTR tv793[ebp], 2
	jmp	SHORT $LN32@HARMWpnMod
$LN31@HARMWpnMod:
	mov	DWORD PTR tv793[ebp], 0
$LN32@HARMWpnMod:
	mov	eax, DWORD PTR tv793[ebp]
	push	eax
	push	OFFSET ??_C@_02MEIMKHMB@HP?$AA@
	push	ecx
	movss	xmm0, DWORD PTR _y$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$7[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 792  : 
; 793  : 			GetButtonPos(17, &x, &y);

	lea	ecx, DWORD PTR _y$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$7[ebp]
	push	edx
	push	17					; 00000011H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 794  : 			display->TextLeft ( x, y, "HA", boxed == HarmTargetingPod::HA ? 2 : 0 );

	cmp	DWORD PTR _boxed$6[ebp], 2
	jne	SHORT $LN33@HARMWpnMod
	mov	DWORD PTR tv818[ebp], 2
	jmp	SHORT $LN34@HARMWpnMod
$LN33@HARMWpnMod:
	mov	DWORD PTR tv818[ebp], 0
$LN34@HARMWpnMod:
	mov	eax, DWORD PTR tv818[ebp]
	push	eax
	push	OFFSET ??_C@_02JHFFIENB@HA?$AA@
	push	ecx
	movss	xmm0, DWORD PTR _y$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$7[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 795  : 
; 796  : 			GetButtonPos(16, &x, &y);

	lea	ecx, DWORD PTR _y$8[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$7[ebp]
	push	edx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetButtonPos@DrawableClass@@QAEXHPAM0@Z ; DrawableClass::GetButtonPos

; 797  : 			display->TextLeft ( x, y, "LA", boxed == HarmTargetingPod::LA ? 2 : 0 );

	cmp	DWORD PTR _boxed$6[ebp], 3
	jne	SHORT $LN35@HARMWpnMod
	mov	DWORD PTR tv843[ebp], 2
	jmp	SHORT $LN36@HARMWpnMod
$LN35@HARMWpnMod:
	mov	DWORD PTR tv843[ebp], 0
$LN36@HARMWpnMod:
	mov	eax, DWORD PTR tv843[ebp]
	push	eax
	push	OFFSET ??_C@_02JAFMCMAN@LA?$AA@
	push	ecx
	movss	xmm0, DWORD PTR _y$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$7[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 798  : 
; 799  : 			BottomRow();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BottomRow@MfdDrawable@@QAEXXZ		; MfdDrawable::BottomRow

; 800  : 
; 801  : 			if ( !(playerAC->GetSOI() == SimVehicleClass::SOI_WEAPON) )

	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?GetSOI@SimVehicleClass@@QAE?AW4SOI@1@XZ ; SimVehicleClass::GetSOI
	cmp	eax, 2
	je	$LN1@HARMWpnMod

; 802  : 			{
; 803  : 				DWORD tempColor = display->Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tempColor$1[ebp], eax

; 804  : 				display->SetColor(GetMfdColor(MFD_WHITY_GRAY));

	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 805  : 				display->TextCenter(0.0F, 0.6F, "NOT SOI");

	push	0
	push	OFFSET ??_C@_07MBJCAOMB@NOT?5SOI?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f19999a
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax

; 806  : 				display->SetColor(tempColor);

	mov	ecx, DWORD PTR _tempColor$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN1@HARMWpnMod:
$LN24@HARMWpnMod:

; 807  : 			}
; 808  : 			break;
; 809  : 		}
; 810  : 	}
; 811  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN37@HARMWpnMod:
	DD	$LN19@HARMWpnMod
	DD	$LN11@HARMWpnMod
	DD	$LN21@HARMWpnMod
	DD	$LN2@HARMWpnMod
$LN38@HARMWpnMod:
	DD	$LN5@HARMWpnMod
	DD	$LN8@HARMWpnMod
	DD	$LN7@HARMWpnMod
	DD	$LN6@HARMWpnMod
?HARMWpnMode@WpnMfdDrawable@@QAEXXZ ENDP		; WpnMfdDrawable::HARMWpnMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
tv568 = -100						; size = 4
tv644 = -96						; size = 4
tv656 = -92						; size = 4
tv646 = -88						; size = 4
tv654 = -84						; size = 4
tv648 = -80						; size = 4
tv652 = -76						; size = 4
tv589 = -72						; size = 4
tv610 = -68						; size = 4
tv642 = -64						; size = 4
tv650 = -60						; size = 4
tv640 = -56						; size = 4
tv258 = -52						; size = 4
tv161 = -48						; size = 4
_retval$ = -44						; size = 4
_rz$ = -40						; size = 4
_ry$ = -36						; size = 4
_theMissile$ = -32					; size = 4
_playerAC$ = -28					; size = 4
_rx$ = -24						; size = 4
_this$ = -20						; size = 4
_pos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?GetDisplay@WpnMfdDrawable@@UAEPAVVirtualDisplay@@XZ PROC ; WpnMfdDrawable::GetDisplay
; _this$ = ecx

; 61   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 	AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 63   : 	if(!playerAC || !playerAC->Sms || 
; 64   : 		!playerAC->Sms->curWeapon)

	cmp	DWORD PTR _playerAC$[ebp], 0
	je	SHORT $LN7@GetDisplay
	mov	eax, DWORD PTR _playerAC$[ebp]
	cmp	DWORD PTR [eax+940], 0
	je	SHORT $LN7@GetDisplay
	mov	ecx, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [ecx+940]
	add	ecx, 164				; 000000a4H
	call	??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ	; VuBin<SimWeaponClass>::operator!
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@GetDisplay
$LN7@GetDisplay:

; 65   : 		return privateDisplay;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	jmp	$LN9@GetDisplay
$LN8@GetDisplay:

; 66   : 
; 67   : 	Sms = playerAC->Sms;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _playerAC$[ebp]
	mov	eax, DWORD PTR [edx+940]
	mov	DWORD PTR [ecx+40], eax

; 68   : 
; 69   : 	VirtualDisplay* retval= privateDisplay;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _retval$[ebp], edx

; 70   : 	MissileClass* theMissile = (MissileClass*)(Sms->GetCurrentWeapon());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _theMissile$[ebp], eax

; 71   : 	float rx, ry, rz;
; 72   : 	Tpoint pos;
; 73   : 	
; 74   : 	if(Sms->CurHardpoint() < 0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	test	eax, eax
	jge	SHORT $LN6@GetDisplay

; 75   : 	{
; 76   : 		return retval;

	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN9@GetDisplay
$LN6@GetDisplay:

; 77   : 	}
; 78   : 	
; 79   : 	if(Sms->hardPoint[Sms->CurHardpoint()]->GetWeaponClass() == wcAgmWpn &&
; 80   : 		Sms->curWeaponType == wtAgm65)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv161[ebp], edx
	mov	eax, DWORD PTR tv161[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv161[ebp]
	mov	eax, DWORD PTR [edx+164]
	call	eax
	cmp	eax, 6
	jne	$LN3@GetDisplay
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+148], 4
	jne	$LN3@GetDisplay

; 81   : 	{
; 82   : 		if (theMissile && theMissile->IsMissile())

	cmp	DWORD PTR _theMissile$[ebp], 0
	je	$LN3@GetDisplay
	mov	eax, DWORD PTR _theMissile$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _theMissile$[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	test	eax, eax
	je	$LN3@GetDisplay

; 83   : 		{
; 84   : 			mavDisplay = (MaverickDisplayClass*)theMissile->display;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _theMissile$[ebp]
	mov	eax, DWORD PTR [edx+712]
	mov	DWORD PTR [ecx+36], eax

; 85   : 			if (mavDisplay)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	$LN3@GetDisplay

; 86   : 			{
; 87   : 				if (!mavDisplay->GetDisplay())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	test	eax, eax
	jne	$LN2@GetDisplay

; 88   : 				{
; 89   : 					if (privateDisplay)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN1@GetDisplay

; 90   : 					{
; 91   : 						mavDisplay->DisplayInit(((Render2D*)(privateDisplay))->GetImageBuffer());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	call	?GetImageBuffer@Render2D@@QAEPAVImageBuffer@@XZ ; Render2D::GetImageBuffer
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+36]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN1@GetDisplay:

; 92   : 					}
; 93   : 					mavDisplay->viewPoint = viewPoint;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax

; 94   : 					
; 95   : 					// Set missile initial position
; 96   : 					Sms->hardPoint[Sms->CurHardpoint()]->GetSubPosition(Sms->curWpnNum, &rx, &ry, &rz);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?CurHardpoint@SMSBaseClass@@QAEHXZ	; SMSBaseClass::CurHardpoint
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv258[ebp], edx
	lea	eax, DWORD PTR _rz$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ry$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rx$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	mov	eax, DWORD PTR tv258[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv258[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 97   : 					rx += 5.0F;

	movss	xmm0, DWORD PTR _rx$[ebp]
	addss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _rx$[ebp], xmm0

; 98   : 					pos.x = Sms->Ownship()->XPos() + Sms->Ownship()->dmx[0][0]*rx + Sms->Ownship()->dmx[1][0]*ry +
; 99   : 						Sms->Ownship()->dmx[2][0]*rz;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv568[ebp]
	movss	xmm0, DWORD PTR tv568[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv640[ebp], xmm0
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	imul	eax, 0
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rx$[ebp]
	movss	xmm1, DWORD PTR tv640[ebp]
	addss	xmm1, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	movss	DWORD PTR tv642[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	lea	eax, DWORD PTR [eax+edx+296]
	mov	ecx, 4
	imul	ecx, 0
	movss	xmm0, DWORD PTR [eax+ecx]
	mulss	xmm0, DWORD PTR _ry$[ebp]
	movss	xmm1, DWORD PTR tv642[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv644[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	imul	eax, 0
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rz$[ebp]
	movss	xmm1, DWORD PTR tv644[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _pos$[ebp], xmm1

; 100  : 					pos.y = Sms->Ownship()->YPos() + Sms->Ownship()->dmx[0][1]*rx + Sms->Ownship()->dmx[1][1]*ry +
; 101  : 						Sms->Ownship()->dmx[2][1]*rz;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv589[ebp]
	movss	xmm0, DWORD PTR tv589[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv646[ebp], xmm0
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rx$[ebp]
	movss	xmm1, DWORD PTR tv646[ebp]
	addss	xmm1, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	movss	DWORD PTR tv648[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	lea	eax, DWORD PTR [eax+edx+296]
	mov	ecx, 4
	shl	ecx, 0
	movss	xmm0, DWORD PTR [eax+ecx]
	mulss	xmm0, DWORD PTR _ry$[ebp]
	movss	xmm1, DWORD PTR tv648[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv650[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rz$[ebp]
	movss	xmm1, DWORD PTR tv650[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _pos$[ebp+4], xmm1

; 102  : 					pos.z = Sms->Ownship()->ZPos() + Sms->Ownship()->dmx[0][2]*rx + Sms->Ownship()->dmx[1][2]*ry +
; 103  : 						Sms->Ownship()->dmx[2][2]*rz;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, eax
	call	?ZPos@VuEntity@@QBEMXZ			; VuEntity::ZPos
	fstp	DWORD PTR tv610[ebp]
	movss	xmm0, DWORD PTR tv610[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv652[ebp], xmm0
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	imul	ecx, 0
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rx$[ebp]
	movss	xmm1, DWORD PTR tv652[ebp]
	addss	xmm1, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	movss	DWORD PTR tv654[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	edx, 12					; 0000000cH
	shl	edx, 0
	lea	eax, DWORD PTR [eax+edx+296]
	mov	ecx, 4
	shl	ecx, 1
	movss	xmm0, DWORD PTR [eax+ecx]
	mulss	xmm0, DWORD PTR _ry$[ebp]
	movss	xmm1, DWORD PTR tv654[ebp]
	addss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	movss	DWORD PTR tv656[ebp], xmm1
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	lea	edx, DWORD PTR [eax+ecx+296]
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR [edx+eax]
	mulss	xmm0, DWORD PTR _rz$[ebp]
	movss	xmm1, DWORD PTR tv656[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _pos$[ebp+8], xmm1

; 104  : 					mavDisplay->SetXYZ (pos.x, pos.y, pos.z);

	push	ecx
	movss	xmm0, DWORD PTR _pos$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _pos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _pos$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	call	?SetXYZ@MissileDisplayClass@@QAEXMMM@Z	; MissileDisplayClass::SetXYZ
$LN2@GetDisplay:

; 105  : 				}
; 106  : 				retval = mavDisplay->GetDisplay();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	mov	DWORD PTR _retval$[ebp], eax
$LN3@GetDisplay:

; 107  : 			}
; 108  : 		}
; 109  : 	}
; 110  : 	return (retval);

	mov	eax, DWORD PTR _retval$[ebp]
$LN9@GetDisplay:

; 111  : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDisplay@WpnMfdDrawable@@UAEPAVVirtualDisplay@@XZ ENDP ; WpnMfdDrawable::GetDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv88 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_image$ = 8						; size = 4
?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z PROC ; WpnMfdDrawable::DisplayInit
; _this$ = ecx

; 44   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 45   :     DisplayExit();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 46   :     
; 47   : 		if (!g_bGreyScaleMFD)

	movzx	ecx, BYTE PTR ?g_bGreyScaleMFD@@3_NA	; g_bGreyScaleMFD
	test	ecx, ecx
	jne	SHORT $LN3@DisplayIni

; 48   : 			g_bGreyMFD = false;

	mov	BYTE PTR ?g_bGreyMFD@@3_NA, 0		; g_bGreyMFD
$LN3@DisplayIni:

; 49   : 
; 50   :     privateDisplay = new RenderIR;

	push	263372					; 000404ccH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@DisplayIni
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0RenderIR@@QAE@XZ			; RenderIR::RenderIR
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN7@DisplayIni
$LN6@DisplayIni:
	mov	DWORD PTR tv88[ebp], 0
$LN7@DisplayIni:
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+24], ecx

; 51   :     ((RenderIR*)privateDisplay)->Setup(image, OTWDriver.GetViewpoint());

	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetViewpoint@OTWDriverClass@@QAEPAVRViewPoint@@XZ ; OTWDriverClass::GetViewpoint
	push	eax
	mov	edx, DWORD PTR _image$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [eax+144]
	call	edx

; 52   :     
; 53   : 		if ((g_bGreyMFD) && (!bNVGmode))

	movzx	eax, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	eax, eax
	je	SHORT $LN2@DisplayIni
	movzx	ecx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	ecx, ecx
	jne	SHORT $LN2@DisplayIni

; 54   : 			privateDisplay->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 55   : 		else

	jmp	SHORT $LN1@DisplayIni
$LN2@DisplayIni:

; 56   : 			privateDisplay->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN1@DisplayIni:

; 57   :    	((Render3D*)privateDisplay)->SetFOV(6.0f*DTR);

	push	ecx
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3dd6774e
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	?SetFOV@Render3D@@QAEXMM@Z		; Render3D::SetFOV

; 58   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DisplayInit@WpnMfdDrawable@@UAEXPAVImageBuffer@@@Z ENDP ; WpnMfdDrawable::DisplayInit
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_cX$ = -28						; size = 4
_cY$ = -24						; size = 4
tv93 = -20						; size = 4
_harmPod$ = -16						; size = 4
_i$1 = -12						; size = 4
_playerAC$ = -8						; size = 4
_this$ = -4						; size = 4
_newDisplay$ = 8					; size = 4
?Display@WpnMfdDrawable@@UAEXPAVVirtualDisplay@@@Z PROC	; WpnMfdDrawable::Display
; _this$ = ecx

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	AircraftClass *playerAC = SimDriver.GetPlayerAircraft();

	mov	ecx, OFFSET ?SimDriver@@3VSimulationDriver@@A ; SimDriver
	call	?GetPlayerAircraft@SimulationDriver@@QBEPAVAircraftClass@@XZ ; SimulationDriver::GetPlayerAircraft
	mov	DWORD PTR _playerAC$[ebp], eax

; 115  : 	float cX, cY;
; 116  : 
; 117  : 	display = newDisplay;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newDisplay$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 118  : 	self = ((AircraftClass*)playerAC);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	DWORD PTR [edx+28], eax

; 119  : 	theRadar = (RadarDopplerClass*)FindSensor(playerAC, SensorClass::Radar);

	push	1
	mov	ecx, DWORD PTR _playerAC$[ebp]
	push	ecx
	call	?FindSensor@@YAPAVSensorClass@@PAVSimMoverClass@@H@Z ; FindSensor
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax

; 120  : 	pFCC = playerAC->Sms->Ownship()->GetFCC();

	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+460]
	call	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax

; 121  : 	Sms = playerAC->Sms;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+940]
	mov	DWORD PTR [edx+40], ecx

; 122  : 	mavDisplay = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], 0

; 123  : 	display = newDisplay;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newDisplay$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 124  : 	HarmTargetingPod* harmPod = (HarmTargetingPod*)FindSensor(Sms->Ownship(), SensorClass::HTS);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	call	?Ownship@SMSBaseClass@@QAEPAVSimVehicleClass@@XZ ; SMSBaseClass::Ownship
	push	eax
	call	?FindSensor@@YAPAVSensorClass@@PAVSimMoverClass@@H@Z ; FindSensor
	add	esp, 8
	mov	DWORD PTR _harmPod$[ebp], eax

; 125  : 	if(!theRadar || !pFCC || !self || !Sms)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN28@Display
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN28@Display
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28], 0
	je	SHORT $LN28@Display
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN29@Display
$LN28@Display:

; 126  : 	{
; 127  : 		ShiWarning("Oh Oh shouldn't be here without a radar or FCC or player or SMS!");
; 128  : 		return;

	jmp	$LN30@Display
$LN29@Display:

; 129  : 	}
; 130  : 
; 131  : 	if( !g_bRealisticAvionics || !Sms->curWeapon || (Sms->curWeaponType != wtAgm65 && Sms->curWeaponType != wtAgm88) )

	movzx	ecx, BYTE PTR ?g_bRealisticAvionics@@3_NA ; g_bRealisticAvionics
	test	ecx, ecx
	je	SHORT $LN26@Display
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	add	ecx, 164				; 000000a4H
	call	??7?$VuBin@VSimWeaponClass@@@@QBE_NXZ	; VuBin<SimWeaponClass>::operator!
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN26@Display
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+148], 4
	je	SHORT $LN27@Display
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	cmp	DWORD PTR [ecx+148], 3
	je	SHORT $LN27@Display
$LN26@Display:

; 132  : 	{
; 133  : 		OffMode(display);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OffMode@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::OffMode

; 134  : 		return;

	jmp	$LN30@Display
$LN27@Display:

; 135  : 	}
; 136  : 
; 137  : 	if ( harmPod && Sms->curWeaponType == wtAgm88 )

	cmp	DWORD PTR _harmPod$[ebp], 0
	je	SHORT $LN25@Display
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+148], 3
	jne	SHORT $LN25@Display

; 138  : 	{
; 139  : 		// This makes sure we are in the correct FCC submode
; 140  : 		if ( pFCC->GetSubMode() != FireControlComputer::HARM )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	call	?GetSubMode@FireControlComputer@@QAE?AW4FCCSubMode@1@XZ ; FireControlComputer::GetSubMode
	cmp	eax, 23					; 00000017H
	je	SHORT $LN24@Display

; 141  : 		{
; 142  : 			pFCC->SetSubMode( FireControlComputer::HARM );

	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	call	?SetSubMode@FireControlComputer@@QAEXW4FCCSubMode@1@@Z ; FireControlComputer::SetSubMode

; 143  : 			harmPod->SetSubMode( HarmTargetingPod::HarmModeChooser );

	push	0
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?SetSubMode@HarmTargetingPod@@QAEXW4Submode@1@@Z ; HarmTargetingPod::SetSubMode
$LN24@Display:

; 144  : 		}
; 145  : 
; 146  : 		HARMWpnMode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?HARMWpnMode@WpnMfdDrawable@@QAEXXZ	; WpnMfdDrawable::HARMWpnMode
$LN25@Display:

; 147  : 	}
; 148  : 
; 149  : 	if(Sms->curWeapon && Sms->curWeaponType == wtAgm65) // RV-I-Hawk - No do for HARM WPN

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	add	ecx, 164				; 000000a4H
	call	??B?$VuBin@VSimWeaponClass@@@@QBE_NXZ	; VuBin<SimWeaponClass>::operator bool
	movzx	eax, al
	test	eax, eax
	je	$LN23@Display
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+148], 4
	jne	$LN23@Display

; 150  : 	{
; 151  : 	    ShiAssert(Sms->curWeapon->IsMissile());
; 152  : 		mavDisplay = (MaverickDisplayClass*)((MissileClass*)Sms->GetCurrentWeapon())->display;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+40]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+712]
	mov	DWORD PTR [ecx+36], edx

; 153  : 
; 154  : 		// FRB - B&W display
; 155  : 		if ((g_bGreyMFD) && (!bNVGmode))

	movzx	eax, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	eax, eax
	je	SHORT $LN22@Display
	movzx	ecx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	ecx, ecx
	jne	SHORT $LN22@Display

; 156  : 			display->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 157  : 		else

	jmp	SHORT $LN21@Display
$LN22@Display:

; 158  : 			display->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN21@Display:

; 159  : 
; 160  : 		if(mavDisplay && (!((MissileClass*)Sms->GetCurrentWeapon())->Covered || playerAC->AutopilotType() == AircraftClass::CombatAP) && Sms->MavCoolTimer <= 0.0F)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	$LN20@Display
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	movzx	ecx, BYTE PTR [eax+812]
	test	ecx, ecx
	je	SHORT $LN19@Display
	mov	ecx, DWORD PTR _playerAC$[ebp]
	call	?AutopilotType@AircraftClass@@QAE?AW4AutoPilotType@1@XZ ; AircraftClass::AutopilotType
	cmp	eax, 2
	jne	SHORT $LN20@Display
$LN19@Display:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+20]
	jb	SHORT $LN20@Display

; 161  : 		{
; 162  : 			mavDisplay->SetIntensity(GetIntensity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIntensity@DrawableClass@@QAEIXZ	; DrawableClass::GetIntensity
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36]
	call	?SetIntensity@DrawableClass@@QAEXI@Z	; DrawableClass::SetIntensity

; 163  : 			mavDisplay->viewPoint = viewPoint;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx

; 164  : 			mavDisplay->Display(display);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 165  : 			//DLZ
; 166  : 			DrawDLZ(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawDLZ@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::DrawDLZ
	jmp	SHORT $LN17@Display
$LN20@Display:

; 167  : 		}
; 168  : 		else if(Sms->MavCoolTimer > 0.0F && Sms->Powered)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	movss	xmm0, DWORD PTR [ecx+20]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN17@Display
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN17@Display

; 169  : 		{
; 170  : 			display->TextCenter(0.0F, 0.7F, "NOT TIMED OUT");

	push	0
	push	OFFSET ??_C@_0O@MDMAMLOB@NOT?5TIMED?5OUT?$AA@
	push	ecx
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+72]
	call	eax
$LN17@Display:

; 171  : 		}
; 172  : 		DrawRALT(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawRALT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::DrawRALT
$LN23@Display:

; 173  : 	}
; 174  : 	
; 175  : 	// RV-I-Hawk - No do for HARM WPN in HTSSubmode
; 176  : 	if ( Sms->curWeaponType == wtAgm65 ||( Sms->curWeaponType == wtAgm88 && harmPod->GetSubMode() != HarmTargetingPod::HarmModeChooser) )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	cmp	DWORD PTR [ecx+148], 4
	je	SHORT $LN15@Display
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	DWORD PTR [eax+148], 3
	jne	SHORT $LN16@Display
	mov	ecx, DWORD PTR _harmPod$[ebp]
	call	?GetSubMode@HarmTargetingPod@@QAE?AW4Submode@1@XZ ; HarmTargetingPod::GetSubMode
	test	eax, eax
	je	SHORT $LN16@Display
$LN15@Display:

; 177  : 	{
; 178  : 		// FRB - B&W display
; 179  : 		if ((g_bGreyMFD) && (!bNVGmode))

	movzx	ecx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	ecx, ecx
	je	SHORT $LN14@Display
	movzx	edx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	edx, edx
	jne	SHORT $LN14@Display

; 180  : 			display->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 181  : 		else

	jmp	SHORT $LN13@Display
$LN14@Display:

; 182  : 			display->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+92]
	call	edx
$LN13@Display:

; 183  : 
; 184  :     //SMSMissiles
; 185  : 		DrawHDPT(display, Sms);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawHDPT@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@PAVSMSClass@@@Z ; WpnMfdDrawable::DrawHDPT
$LN16@Display:

; 186  : 	}
; 187  : 
; 188  : 	// RV-I-Hawk - No do for HARM WPN
; 189  : 	if ( Sms->curWeaponType == wtAgm65 )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	cmp	DWORD PTR [edx+148], 4
	jne	SHORT $LN12@Display

; 190  : 	{
; 191  : 		// FRB - B&W display
; 192  : 		if ((g_bGreyMFD) && (!bNVGmode))

	movzx	eax, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	eax, eax
	je	SHORT $LN11@Display
	movzx	ecx, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	ecx, ecx
	jne	SHORT $LN11@Display

; 193  : 			display->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 194  : 		else

	jmp	SHORT $LN10@Display
$LN11@Display:

; 195  : 			display->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN10@Display:

; 196  : 
; 197  :     //OSB's
; 198  : 		OSBLabels(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OSBLabels@WpnMfdDrawable@@AAEXPAVVirtualDisplay@@@Z ; WpnMfdDrawable::OSBLabels
$LN12@Display:

; 199  : 	}
; 200  : 
; 201  : 	//Reference symbol
; 202  : 	theRadar->GetCursorPosition (&cX, &cY);

	lea	eax, DWORD PTR _cY$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR [edx+204]
	call	eax

; 203  : 	if(OTWDriver.pCockpitManager && OTWDriver.pCockpitManager->mpIcp &&
; 204  : 	   OTWDriver.pCockpitManager->mpIcp->ShowBullseyeInfo)

	cmp	DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684, 0
	je	$LN9@Display
	mov	ecx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	cmp	DWORD PTR [ecx+688], 0
	je	$LN9@Display
	mov	edx, DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+33684
	mov	eax, DWORD PTR [edx+688]
	movzx	ecx, BYTE PTR [eax+300]
	test	ecx, ecx
	je	SHORT $LN9@Display

; 205  : 	{
; 206  : 		// FRB - B&W display
; 207  : 		if ((g_bGreyMFD) && (!bNVGmode))

	movzx	edx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	edx, edx
	je	SHORT $LN8@Display
	movzx	eax, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	eax, eax
	jne	SHORT $LN8@Display

; 208  : 			display->SetColor(GetMfdColor(MFD_WHITE));

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMfdColor@DrawableClass@@QAEIW4MfdColor@@@Z ; DrawableClass::GetMfdColor
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 209  : 		else

	jmp	SHORT $LN7@Display
$LN8@Display:

; 210  : 			display->SetColor (0xff00ff00);

	push	-16711936				; ff00ff00H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN7@Display:

; 211  : 
; 212  : 		DrawBullseyeCircle(display, cX, cY);

	push	ecx
	movss	xmm0, DWORD PTR _cY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _cX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?DrawBullseyeCircle@@YAXPAVVirtualDisplay@@MM@Z ; DrawBullseyeCircle
	add	esp, 12					; 0000000cH

; 213  : 	}
; 214  : 
; 215  : 	else

	jmp	SHORT $LN6@Display
$LN9@Display:

; 216  : 	{
; 217  : 		DrawReference(MfdDisplay[OnMFD()]->GetOwnShip());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnMFD@DrawableClass@@QAEHXZ		; DrawableClass::OnMFD
	mov	ecx, DWORD PTR ?MfdDisplay@@3PAPAVMFDClass@@A[eax*4]
	call	?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ ; MFDClass::GetOwnShip
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawReference@MfdDrawable@@QAEXPAVAircraftClass@@@Z ; MfdDrawable::DrawReference
$LN6@Display:

; 218  : 	}
; 219  : 
; 220  : 	//Booster 18/09/2004 - Draw Pull Up cross on MFD-SMS if ground Collision
; 221  :    	if (playerAC->mFaults->GetFault(alt_low))

	push	2
	mov	eax, DWORD PTR _playerAC$[ebp]
	mov	ecx, DWORD PTR [eax+928]
	call	?GetFault@FackClass@@QAEHW4type_CSubSystem@@@Z ; FackClass::GetFault
	test	eax, eax
	je	SHORT $LN5@Display

; 222  : 	{
; 223  : 		DrawRedBreak(display);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawRedBreak@MfdDrawable@@QAEXPAVVirtualDisplay@@@Z ; MfdDrawable::DrawRedBreak
$LN5@Display:

; 224  : 	}
; 225  : 
; 226  : 	// RV - I-Hawk
; 227  : 	// Check, if 1 of the MFDs is showing TGP and the attitude warning is set, show it... 
; 228  : 	// (works on all MFDs and not only here)
; 229  : 	for ( int i = 0; i < 4; i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@Display
$LN3@Display:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@Display:
	cmp	DWORD PTR _i$1[ebp], 4
	jge	SHORT $LN2@Display

; 230  : 	{
; 231  : 		if ( (MfdDisplay[i])->GetTGPWarning() && (MfdDisplay[i])->CurMode() == MFDClass::TGPMode )

	mov	ecx, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?MfdDisplay@@3PAPAVMFDClass@@A[ecx*4]
	call	?GetTGPWarning@MFDClass@@QAEHXZ		; MFDClass::GetTGPWarning
	test	eax, eax
	je	SHORT $LN1@Display
	mov	edx, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR ?MfdDisplay@@3PAPAVMFDClass@@A[edx*4]
	call	?CurMode@MFDClass@@QAE?AW4MfdMode@1@XZ	; MFDClass::CurMode
	cmp	eax, 8
	jne	SHORT $LN1@Display

; 232  : 		{ 
; 233  : 			TGPAttitudeWarning(display);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TGPAttitudeWarning@MfdDrawable@@QAEXPAVVirtualDisplay@@@Z ; MfdDrawable::TGPAttitudeWarning

; 234  : 			break;

	jmp	SHORT $LN2@Display
$LN1@Display:

; 235  : 		}
; 236  : 	}

	jmp	SHORT $LN3@Display
$LN2@Display:
$LN30@Display:

; 237  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Display@WpnMfdDrawable@@UAEXPAVVirtualDisplay@@@Z ENDP	; WpnMfdDrawable::Display
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ??1WpnMfdDrawable@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1WpnMfdDrawable@@UAE@XZ PROC				; WpnMfdDrawable::~WpnMfdDrawable, COMDAT
; _this$ = ecx

; 233  :       ~WpnMfdDrawable(void) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7WpnMfdDrawable@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MfdDrawable@@UAE@XZ			; MfdDrawable::~MfdDrawable
	mov	esp, ebp
	pop	ebp
	ret	0
??1WpnMfdDrawable@@UAE@XZ ENDP				; WpnMfdDrawable::~WpnMfdDrawable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\displays\wpnmfd.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0WpnMfdDrawable@@QAE@XZ PROC				; WpnMfdDrawable::WpnMfdDrawable
; _this$ = ecx

; 36   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0MfdDrawable@@QAE@XZ			; MfdDrawable::MfdDrawable
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7WpnMfdDrawable@@6B@

; 37   : 	self = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0

; 38   : 	pFCC = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0

; 39   : 	mavDisplay = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 40   : 	Sms = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0

; 41   : 	theRadar = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0

; 42   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0WpnMfdDrawable@@QAE@XZ ENDP				; WpnMfdDrawable::WpnMfdDrawable
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMfdDrawable@@UAEPAXI@Z PROC				; MfdDrawable::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MfdDrawable@@UAE@XZ			; MfdDrawable::~MfdDrawable
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMfdDrawable@@UAEPAXI@Z ENDP				; MfdDrawable::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vd$ = 8						; size = 4
?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z PROC	; MfdDrawable::Display, COMDAT
; _this$ = ecx

; 138  :       virtual void Display (VirtualDisplay*vd) { display = vd; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _vd$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z ENDP	; MfdDrawable::Display
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ??0MfdDrawable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MfdDrawable@@QAE@XZ PROC				; MfdDrawable::MfdDrawable, COMDAT
; _this$ = ecx

; 135  :       MfdDrawable () {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DrawableClass@@IAE@XZ		; DrawableClass::DrawableClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MfdDrawable@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0MfdDrawable@@QAE@XZ ENDP				; MfdDrawable::MfdDrawable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ?GetTGPWarning@MFDClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTGPWarning@MFDClass@@QAEHXZ PROC			; MFDClass::GetTGPWarning, COMDAT
; _this$ = ecx

; 94   : 	int GetTGPWarning() { return TGPWarning; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTGPWarning@MFDClass@@QAEHXZ ENDP			; MFDClass::GetTGPWarning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ PROC	; MFDClass::GetOwnShip, COMDAT
; _this$ = ecx

; 82   : 	AircraftClass *GetOwnShip() { return ownship; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+132]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwnShip@MFDClass@@QAEPAVAircraftClass@@XZ ENDP	; MFDClass::GetOwnShip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\mfd.h
;	COMDAT ?CurMode@MFDClass@@QAE?AW4MfdMode@1@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?CurMode@MFDClass@@QAE?AW4MfdMode@1@XZ PROC		; MFDClass::CurMode, COMDAT
; _this$ = ecx

; 71   : 	MfdMode CurMode() { return mode == MfdMenu ? restoreMode : mode; };

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 1
	jne	SHORT $LN3@CurMode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@CurMode
$LN3@CurMode:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv68[ebp], ecx
$LN4@CurMode:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?CurMode@MFDClass@@QAE?AW4MfdMode@1@XZ ENDP		; MFDClass::CurMode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDrawableClass@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawableClass@@UAEPAXI@Z PROC			; DrawableClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableClass@@UAE@XZ		; DrawableClass::~DrawableClass
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawableClass@@UAEPAXI@Z ENDP			; DrawableClass::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?PushButton@DrawableClass@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?PushButton@DrawableClass@@UAEXHH@Z PROC		; DrawableClass::PushButton, COMDAT
; _this$ = ecx

; 152  :       virtual void PushButton (int, int)	{};								// Override to get button messages in subclasses

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?PushButton@DrawableClass@@UAEXHH@Z ENDP		; DrawableClass::PushButton
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?GetIntensity@DrawableClass@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIntensity@DrawableClass@@QAEIXZ PROC		; DrawableClass::GetIntensity, COMDAT
; _this$ = ecx

; 148  :       unsigned int GetIntensity(void) { return intensity; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIntensity@DrawableClass@@QAEIXZ ENDP		; DrawableClass::GetIntensity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?SetIntensity@DrawableClass@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?SetIntensity@DrawableClass@@QAEXI@Z PROC		; DrawableClass::SetIntensity, COMDAT
; _this$ = ecx

; 147  :       void  SetIntensity (unsigned int val) { intensity = val; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetIntensity@DrawableClass@@QAEXI@Z ENDP		; DrawableClass::SetIntensity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?OnMFD@DrawableClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnMFD@DrawableClass@@QAEHXZ PROC			; DrawableClass::OnMFD, COMDAT
; _this$ = ecx

; 145  :       int	OnMFD (void)			{return MFDOn;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?OnMFD@DrawableClass@@QAEHXZ ENDP			; DrawableClass::OnMFD
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ PROC ; DrawableClass::GetDisplay, COMDAT
; _this$ = ecx

; 139  :       virtual VirtualDisplay* GetDisplay (void)	{return privateDisplay;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ ENDP ; DrawableClass::GetDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z PROC	; DrawableClass::DisplayInit, COMDAT
; _this$ = ecx

; 137  :       virtual void DisplayInit (ImageBuffer*)	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z ENDP	; DrawableClass::DisplayInit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z PROC	; DrawableClass::Display, COMDAT
; _this$ = ecx

; 136  :       virtual void Display(VirtualDisplay*)		{ ShiWarning( "No Display!" ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z ENDP	; DrawableClass::Display
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ??1DrawableClass@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DrawableClass@@UAE@XZ PROC				; DrawableClass::~DrawableClass, COMDAT
; _this$ = ecx

; 132  :       virtual ~DrawableClass (void)				{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableClass@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1DrawableClass@@UAE@XZ ENDP				; DrawableClass::~DrawableClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\drawable.h
;	COMDAT ??0DrawableClass@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DrawableClass@@IAE@XZ PROC				; DrawableClass::DrawableClass, COMDAT
; _this$ = ecx

; 126  :       DrawableClass(void) {privateDisplay = display = NULL; viewPoint = NULL; drawFlags = 0;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableClass@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0DrawableClass@@IAE@XZ ENDP				; DrawableClass::DrawableClass
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZPos@VuEntity@@QBEMXZ PROC				; VuEntity::ZPos, COMDAT
; _this$ = ecx

; 160  : 	BIG_SCALAR ZPos()	const { return pos_.z_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?ZPos@VuEntity@@QBEMXZ ENDP				; VuEntity::ZPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
END
