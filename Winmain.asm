; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.6030 

	TITLE	.\UI\SRC\Winmain.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LFHHJFCN@?4tlb?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06JHNIBAJK@CLSID?2?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@CCIMKLEB@?2Required?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@LFOHFLDB@?2Implemented?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@OGDGDABE@DllGetVersion?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGEBEC@comctl32?4dll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KFDNOLCO@shell32?4dll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NPFKCNOE@Unknown?5Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNIJINN@IDispatch?5error?5?$CD?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPPGFENJ@Unknown?5error?50x?$CF0lX?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0FG@EOHGAEB@?3Sun?3Sunday?3Mon?3Monday?3Tue?3Tuesd@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0IH@HPGJLCCK@?3Jan?3January?3Feb?3February?3Mar?3Ma@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FGFHJIJL@?$CD32770?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DF@EEPGJILL@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BEBEHAMB@COMCTL32?4DLL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIOMMJMF@AXWIN?5Frame?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@FJBCDDKK@AXWIN?5UI?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EFNCNKLF@AtlAxWin71?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1M@IJFAIKMG@?$AAA?$AAX?$AAW?$AAI?$AAN?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@POPOELFC@WM_ATLGETHOST?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@ICJMLDDL@WM_ATLGETCONTROL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09OOFFBKGI@ATL?3?$CF8?48X?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BE@DOFEADIM@?$AAA?$AAT?$AAL?$AA?3?$AA?$CF?$AA8?$AA?4?$AA8?$AAX?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07JPHDIPNG@DISPLAY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03BBABOKL@GIF?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DJLAKPIA@LBM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03BFAIMLIE@PCX?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03CNFPPDJC@BMP?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03MNGDDBAC@APL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03GGDFNBH@TGA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03CMMIMEAC@DDS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAMNDNOM@namespace?5mutex?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IIFJAPHG@DllUnregisterServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KAJBENLI@Error?3?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JEMHBKHA@Unspecified?5Error?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@EBFEGAAI@Information?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DE@CPOIMBCH@?$HL?$CF08lX?9?$CF04X?9?$CF04X?9?$CF02X?$CF02X?9?$CF02X?$CF0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@IHMKMHN@Falcon?54?40?5Debug?5Window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0DN@LDDOKEGO@HandleWinMain?3?5Error?50x?$CFX?5occure@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PDMLIFGH@GNGameSpy?4dll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CLMAFLMP@GNCorePS?4dll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHPNHPBL@GNShared?4dll?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07GDGMJMJJ@Falcon4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@HKFGEHJL@openplaying?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0EA@DECDCGCI@HandleWinMain?3?5Error?50x?$CFX?5occure@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@HAIHPOAG@JustForGilman?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CG@ILCLOB@Falcon?54?40?5?9?5Version?5?$CF1d?4?$CF02d?4?$CF1@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06KCIFIIHN@?$CFs?3?$CFs?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@LBCKFMNB@?$CFs?2terrdata?2misctex?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@ONEBAAFD@?$CFs?2Pictures?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@EGKPCFAN@?$CFs?2terrain?2theater?4map?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@ONFAGCKK@?$CFs?2falcon4?4ini?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09KHBCPIND@?$CFs?2Config?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06LAMNFEIL@?$CFs?2Art?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09KADMDAPI@?$CFs?2?$CFs?4ini?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02HOGEDOAB@Id?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04EPLBDGIG@Lang?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07GCCODDFC@display?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@GAMKKCDC@WinMain?5Thread?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07GMLLACMO@rheydon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07HPFCBJFF@HostIDX?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05PMBENPHG@?9file?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06OHLAKOLC@?9event?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PLCHJDII@?9repair?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KGBEKOGC@?9armageddon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04BIELNKJB@?9log?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02OLHPOPJI@?9C?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03PPGMFBP@?9UA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02BKJHAODO@?9g?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05DHBJIMBI@?9full?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07EPCJCNHC@?9window?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06DHEEKLDP@?9hires?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08NPLKDBJI@?9version?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JAEHAJNO@?9norudder?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@NFNLEJPF@?9nosmoothing?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08NICBJJHH@?9numhats?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08FLDKIHPE@?9nosound?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07GENNGFLG@?9nopete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IDAPPFO@?9tacedit?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06DMDEHABB@?9norsc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07EDMLKJLF@?9usersc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05LMCBPBAD@?9auto?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08GMAHGMDF@?9nomovie?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EBICPLIN@?9noUIcomms?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05OHPGHBKD@?9time?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCCJBEMI@?9movie?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09MNALEAMA@?9noloader?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@DFHPHOCE@?9bandwidth?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09HDOOMJGP@?9bandwith?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03KHMOKHHP@?9bw?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07BOMKEPEL@?9urview?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08GODJPMBM@?9latency?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05DEDPAEMF@?9drop?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08FMAGOMFJ@?9session?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08HLEKBIEM@?9hostidx?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KFONBLME@?9hostid?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FNELANOH@?9alive?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05FHMEINFP@?9mono?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07HIEOBIMN@?9nomono?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05BIDBHMLN@?9head?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NLLPJCGP@?9swap?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04MIHAIBLG@?9mtu?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03PBFIJCOK@?9ef?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03OENKNOFJ@?9ip?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@IJKKJKCI@Force?5IP?5Address?5to?5?$CF08x?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05HDLOEPOC@?9port?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06IKDJADCB@?9notnl?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05MCGGLAGA@?9lgbk?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05JCDAFC@?$CF?419s?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06BPKAOIDI@?9smoke?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@DBLHFPEP@?9enumswdev?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@KJDCEAMO@?9cockpitverifier?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@PHJHLDM@?9writesndtbl?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEPECOMF@?9writemissiontbl?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LHMPGDOC@baseDir?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@BGENKKMB@No?5Registry?5Variable?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CEGDFPFP@?4?2?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@JPHDLCOH@theaterDir?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09BKOCKBCN@objectDir?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09DOMNOEH@movieMode?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05PELKKPHE@Hurry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08IKNLGGOC@uiArtDir?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@NKIODECG@uiSoundDir?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07BNHBBHGA@?2sounds?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05MDAMHPFF@Korea?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LKIMHNID@Eurowar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06GBJMIBCI@?$CFs?2sim?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@CCLCELMH@No?5Entities?5Loaded?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJHMKFEB@No?5Tactics?5Loaded?4?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07HMOCDNDG@Instant?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CI@PPEJILHM@Campaign?5Join?5Error?3?5Not?5a?5valid@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BO@BAJMPCDG@Requesting?5campaign?5preload?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GEFDLDAC@Requesting?5all?5campaign?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@NIMMODLI@Requesting?5campaign?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06IMIHEKN@remote?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05IDKHKMLA@local?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@IHLFPBJB@Starting?5?$CFs?5game?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@NHCAEOMH@Failed?5to?5join?5game?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@LMMEICJG@Game?5Is?5Full?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BN@FAGEFFEP@Match?5Play?5game?5in?5progress?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DDKBHCBL@Starting?4?4?5?$CFd?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KMCPKFBA@Got?5Scenario?5Stats?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BMIBAIOI@Got?5Entities?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@DIBLHBFE@Got?5weather?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@MAEHGNGC@Got?5persistant?5lists?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@MKNDGGEP@Got?5objective?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@BNNEBOK@Got?5team?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@KKONDOBP@Got?5unit?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NDKFKLKF@Got?5VC?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEHNADBL@Got?5Priorities?5data?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BL@CHDHKBAC@Player?5squadron?5recalled?$CB?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@HFJOAOBI@?$CFs?2intro?4avi?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BJAHKJJN@theSurface?5?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@OBOANGA@movieFile?5?5?$CFx?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GMJBGMKC@movieOpen?$CI?$CJ?5returned?5?$CFd?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GPFHLBEO@Move?5file?5?$CFs?5not?5found?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@KOFCKGIE@error?5with?5movieStart?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@HACDBEDG@Premature?5movie?5exit?4?6?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@KNFOBEHK@Network?2Logon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08GBJFCIEI@Username?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@HHPDHHJB@AtlAxWinLic71?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT _InlineIsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _==
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __tcsncpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CharNextO@@YAPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?A2WBSTR@@YAPAGPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlDevModeW2A@@YGPAU_devicemodeA@@PAU1@PBU_devicemodeW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComAutoCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComAutoCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetResourceInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@PAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindResourceInstance@ATL@@YAPAUHINSTANCE__@@PBD0G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIDispatch@@@ATL@@QAEPAUIDispatch@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDOfName@?$CComPtr@UIDispatch@@@ATL@@QAEJPBGPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke0@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke1@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvokeN@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@H0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProperty@?$CComPtr@UIDispatch@@@ATL@@SAJPAUIDispatch@@JPAUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ByteLength@CComBSTR@ATL@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ICComBSTR@ATL@@QAEPAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComBSTR@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CComBSTR@ATL@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CComBSTR@ATL@@QAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@CComBSTR@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7CComBSTR@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AppendBSTR@CComBSTR@ATL@@QAEJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CComBSTR@ATL@@QAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??MCComBSTR@ATL@@QBE_NABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??MCComBSTR@ATL@@QBE_NPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??OCComBSTR@ATL@@QBE_NABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??OCComBSTR@ATL@@QBE_NPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9CComBSTR@ATL@@QBE_NPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComBSTR@ATL@@QBE_NABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComBSTR@ATL@@QBE_NPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComBSTR@ATL@@QBE_NH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComBSTR@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComBSTR@ATL@@QBE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NPAUHINSTANCE__@@IAAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringResource@CComBSTR@ATL@@SA_NIAAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComVariant@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@ABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComVariant@ATL@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@ABVCComBSTR@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4CComVariant@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8CComVariant@ATL@@QBE_NABUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearToZero@CComVariant@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CComVariant@ATL@@QAEJPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalCopy@CComVariant@ATL@@QAEXPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@GTClassesAllowedInStream@2@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke2@?$CComPtr@UIDispatch@@@ATL@@QAEJJPAUtagVARIANT@@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlInternalOleLoadFromStream@ATL@@YAJPAUIStream@@ABU_GUID@@PAPAXTClassesAllowedInStream@1@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RevokeClassObject@_ATL_OBJMAP_ENTRY30@ATL@@QAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassObject@_ATL_OBJMAP_ENTRY30@ATL@@QAGJKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Decrement@CComSingleThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCodeAddress@_stdcallthunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDynamicStdCallThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCodeAddress@CDynamicStdCallThunk@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InlineIsEqualUnknown@ATL@@YGHABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CHandle@ATL@@QAEXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CHandle@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CHandle@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CCritSecLock@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CCritSecLock@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlComModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterTypeLib@CAtlComModule@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterTypeLib@CAtlComModule@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnRegisterTypeLib@CAtlComModule@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnRegisterTypeLib@CAtlComModule@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@CAtlComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCreateWndData@CAtlWinModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExtractCreateWndData@CAtlWinModule@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E2
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ??0CAtlModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTermFunc@CAtlModule@ATL@@QAEJP6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAtlModule@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComModule@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_m_hInst@CComModule@ATL@@QBEAAPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CComModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComModule@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Apartment@CComApartment@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetThread@CComSimpleThreadAllocator@ATL@@QAEHPAVCComApartment@2@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@PAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryStringValue@CRegKey@ATL@@QAEJPBDPADPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetKeyValue@CRegKey@ATL@@QAEJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterProgID@CComModule@ATL@@SAJPBD00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterWithString@CRegObject@ATL@@IAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CommonFileRegister@CRegObject@ATL@@IAEJPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDirLen@ATL@@YGIPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlLoadTypeLib@ATL@@YGJPAUHINSTANCE__@@PBGPAPAGPAPAUITypeLib@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlUnRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterTypeLib@ATL@@YGJPAUHINSTANCE__@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComModuleRegisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComModuleUnregisterServer@ATL@@YGJPAU_ATL_COM_MODULE70@1@HPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlRegisterClassCategoriesHelper@ATL@@YGJABU_GUID@@PBU_ATL_CATMAP_ENTRY@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPAUHINSTANCE__@@PAU_DLLVERSIONINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetDllVersion@ATL@@YAJPBDPAU_DLLVERSIONINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_m_csStaticDataInit@CComModule@ATL@@QAEAAU_RTL_CRITICAL_SECTION@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClassObject@CComModule@ATL@@QAEJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@CComModule@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAdvise@ATL@@YGJPAUIUnknown@@0ABU_GUID@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlUnadvise@ATL@@YGJPAUIUnknown@@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComModuleGetClassObject@ATL@@YGJPAU_ATL_COM_MODULE70@1@ABU_GUID@@1PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComModuleRegisterClassObjects@ATL@@YGJPAU_ATL_COM_MODULE70@1@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlComModuleRevokeClassObjects@ATL@@YGJPAU_ATL_COM_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWaitWithMessageLoop@ATL@@YGHPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleAddCreateWndData@ATL@@YGXPAU_ATL_WIN_MODULE70@1@PAU_AtlCreateWndData@1@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleExtractCreateWndData@ATL@@YGPAXPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlModuleAddTermFunc@ATL@@YGJPAU_ATL_MODULE70@1@P6GXK@ZK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlReportError@ATL@@YGJABU_GUID@@PBDK10J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CComTypeAttr@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CComVarDesc@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CComFuncDesc@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@CComExcepInfo@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneSID@CSecurityDescriptor@ATL@@SAJPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Initialize@CSecurityDescriptor@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetOwner@CSecurityDescriptor@ATL@@QAEJPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetGroup@CSecurityDescriptor@ATL@@QAEJPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allow@CSecurityDescriptor@ATL@@QAEJPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Deny@CSecurityDescriptor@ATL@@QAEJPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Revoke@CSecurityDescriptor@ATL@@QAEJPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetProcessSids@CSecurityDescriptor@ATL@@SAJPAPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetThreadSids@CSecurityDescriptor@ATL@@SAJPAPAX0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTokenSids@CSecurityDescriptor@ATL@@SAJPAXPAPAX1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPrincipalSID@CSecurityDescriptor@ATL@@SAJPBDPAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CSecurityDescriptor@ATL@@QAEJPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyACL@CSecurityDescriptor@ATL@@SAJPAU_ACL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddAccessDeniedACEToACL@CSecurityDescriptor@ATL@@SAJPAPAU_ACL@@PAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddAccessAllowedACEToACL@CSecurityDescriptor@ATL@@SAJPAPAU_ACL@@PAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemovePrincipalFromACL@CSecurityDescriptor@ATL@@SAJPAU_ACL@@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CComObjectRootBase@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlFinalConstruct@CComObjectRootBase@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalQueryInterface@CComObjectRootBase@ATL@@SGJPAXPBU_ATL_INTMAP_ENTRY@2@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterAddRef@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterRelease@CComObjectRootBase@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OuterQueryInterface@CComObjectRootBase@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetVoid@CComObjectRootBase@ATL@@QAEXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructAddRef@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalFinalConstructRelease@CComObjectRootBase@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Cache@CComObjectRootBase@ATL@@SGJPAXABU_GUID@@PAPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CComClassFactory@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComClassFactory@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockServer@CComClassFactory@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComClassFactory@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CComClassFactoryAutoThread@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CComClassFactoryAutoThread@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CComClassFactoryAutoThread@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@CComClassFactoryAutoThread@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockServer@CComClassFactoryAutoThread@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComClassFactoryAutoThread@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnsureTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cleanup@CComTypeInfoHolder@ATL@@SGXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadNameCache@CComTypeInfoHolder@ATL@@QAEJPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTI@CComTypeInfoHolder@ATL@@QAEJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DispEventAdvise@_IDispEvent@ATL@@QAEJPAUIUnknown@@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DispEventUnadvise@_IDispEvent@ATL@@QAEJPAUIUnknown@@PBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetUserDefinedType@ATL@@YAGPAUITypeInfo@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@CComDynamicUnkArray@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CComDynamicUnkArray@ATL@@QAEPAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlSetErrorInfo@ATL@@YGJABU_GUID@@PBGK10JPAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetObjectSourceInterface@ATL@@YGJPAUIUnknown@@PAU_GUID@@1PAG2@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersist@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckError@_com_util@@YAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_bstr_t@@QAEAAV0@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y_bstr_t@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B_bstr_t@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7_bstr_t@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@_bstr_t@@QAEXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Compare@_bstr_t@@ABEHABV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@PAG_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Data_t@_bstr_t@@QAE@ABV1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@Data_t@_bstr_t@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@Data_t@_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Length@Data_t@_bstr_t@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@Data_t@_bstr_t@@QBEHABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2Data_t@_bstr_t@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_variant_t@@QAEAAV0@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8_variant_t@@QBE_NPBUtagVARIANT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clear@_variant_t@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChangeType@_variant_t@@QAEXGPBV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_variant_t@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@JPAUIErrorInfo@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_com_error@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Error@_com_error@@QBEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WCode@_com_error@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ErrorMessage@_com_error@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HRESULTToWCode@_com_error@@SAGJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_D3DVECTOR@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_D3DMATRIX@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_D3DMATRIX@@QAEAAMHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R_D3DMATRIX@@QBEABMHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceill
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10l
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modfl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhl
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _frexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ldexpf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _acosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _asinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _atan2f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _cosf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _coshf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _expf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _floorf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _fmodf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _logf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _log10f
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _modff
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _powf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sinhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _tanhf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_D3DVECTOR@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A_D3DVECTOR@@QBEABMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A_D3DVECTOR@@QAEAAMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??K@YA?AU_D3DVECTOR@@ABU0@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Magnitude@@YAMABU_D3DVECTOR@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SquareMagnitude@@YAMABU_D3DVECTOR@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR4@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@MMMMMMMMMMMMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXQUATERNION@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXPLANE@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemchr
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcmp
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemcpy
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemmove
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _wmemset
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@G@std@@SAPAGPAGPBGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@G@std@@SAGABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@G@std@@SA_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@G@std@@SAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_exception@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_exception@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1domain_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gdomain_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@runtime_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1overflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Goverflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1underflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gunderflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1range_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Grange_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Timevec@std@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Timevec@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4_Timevec@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcvt@_Locinfo@std@@QBE?AU_Cvtvec@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bid@locale@std@@QAEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Incref@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Decref@facet@locale@std@@QAEPAV123@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1facet@locale@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0facet@locale@std@@IAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0locale@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfacet@locale@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0codecvt_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1codecvt_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@codecvt_base@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@codecvt_base@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gcodecvt_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$codecvt@GDH@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$codecvt@GDH@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$codecvt@GDH@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_in@?$codecvt@GDH@std@@MBEHAAHPBD1AAPBDPAG3AAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_out@?$codecvt@GDH@std@@MBEHAAHPBG1AAPBGPAD3AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_unshift@?$codecvt@GDH@std@@MBEHAAHPAD1AAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_length@?$codecvt@GDH@std@@MBEHABHPBD1I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_always_noconv@?$codecvt@GDH@std@@MBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_max_length@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_encoding@?$codecvt@GDH@std@@MBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$codecvt@GDH@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ctype_base@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ctype_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gctype_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@D@std@@QBE_NFD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@D@std@@QAE@PBF_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@D@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$ctype@D@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEDDD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?table@?$ctype@D@std@@IBEPBFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is@?$ctype@G@std@@QBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$ctype@G@std@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Getcat@?$ctype@G@std@@SAIPAPBVfacet@locale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$ctype@G@std@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$ctype@G@std@@IAEXABV_Locinfo@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBE_NFG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_is@?$ctype@G@std@@MBEPBGPBG0PAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_is@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_scan_not@?$ctype@G@std@@MBEPBGFPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_tolower@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_toupper@?$ctype@G@std@@MBEPBGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dowiden@?$ctype@G@std@@IBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_widen@?$ctype@G@std@@MBEPBDPBD0PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Donarrow@?$ctype@G@std@@IBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEDGD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?do_narrow@?$ctype@G@std@@MBEPBGPBG0DPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@D@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$ctype@G@std@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1failure@ios_base@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdstate@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?good@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?eof@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fail@ios_base@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?exceptions@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flags@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setf@ios_base@std@@QAEHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?unsetf@ios_base@std@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?width@ios_base@std@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getloc@ios_base@std@@QBE?AVlocale@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gfailure@ios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gios_base@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWin32Heap@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CWin32Heap@ATL@@UAEXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@CWin32Heap@ATL@@UAEPAXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CWin32Heap@ATL@@UAEIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWin32Heap@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIMalloc@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowLongPtrA@@YAJPAUHWND__@@HJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowLongPtrA@@YAJPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_RECT@ATL@@QAE@PAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_U_MENUorID@ATL@@QAE@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_ATL_MSG@ATL@@QAE@PAUHWND__@@IIJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Register@_ATL_WNDCLASSINFOA@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSplitHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DlgTemplateItemCount@_DialogSplitHelper@ATL@@SAAAGPAUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindFirstDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindNextDlgItem@_DialogSplitHelper@ATL@@SAPAUDLGITEMTEMPLATE@@PAU3@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SplitDialogTemplate@_DialogSplitHelper@ATL@@SAPAUDLGTEMPLATE@@PAU3@PAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseInitData@_DialogSplitHelper@ATL@@SAJPAUIStream@@PAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWindow@ATL@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@CWindow@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCWindow@ATL@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExStyle@CWindow@ATL@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowLongA@CWindow@ATL@@QAEJHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowTextA@CWindow@ATL@@QBEHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowTextLengthA@CWindow@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMenu@CWindow@ATL@@QBEPAUHMENU__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWindowPos@CWindow@ATL@@QAEHPAUHWND__@@HHHHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClientRect@CWindow@ATL@@QBEHPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDC@CWindow@ATL@@QAEPAUHDC__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CWindow@ATL@@QAEHPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRect@CWindow@ATL@@QAEHPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRgn@CWindow@ATL@@QAEXPAUHRGN__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RedrawWindow@CWindow@ATL@@QAEHPBUtagRECT@@PAUHRGN__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCapture@CWindow@ATL@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsChild@CWindow@ATL@@QBEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@CWindow@ATL@@QBE?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDlgItem@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsParentDialog@CWindow@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDescendantWindow@CWindow@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMessageToDescendants@CWindow@ATL@@QAEXIIJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowTextA@CWindow@ATL@@QAEHAAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CWndProcThunk@ATL@@QAEXP6GJPAUHWND__@@IIJ@ZPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWNDPROC@CWndProcThunk@ATL@@QAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogSize@_DialogSizeHelper@ATL@@SAXPBUDLGTEMPLATE@@PAUtagSIZE@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFontDimensions@_DialogSizeHelper@ATL@@SAXPBDGPAUtagSIZE@@PAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertDialogUnitsToPixels@_DialogSizeHelper@ATL@@SAXPBDGPAUtagSIZE@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsDialogEx@_DialogSizeHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasFont@_DialogSizeHelper@ATL@@SAHPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFontSizeField@_DialogSizeHelper@ATL@@SAPAEPBUDLGTEMPLATE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFont@_DialogSizeHelper@ATL@@SAHPBUDLGTEMPLATE@@PADPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSizeInDialogUnits@_DialogSizeHelper@ATL@@SAXPBUDLGTEMPLATE@@PAUtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateNormalizedObject@ATL@@YAJPBGABU_GUID@@PAPAXAA_NPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxFrameWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxFrameWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CAxFrameWindow@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxFrameWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@CAxFrameWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxFrameWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxFrameWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxFrameWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxFrameWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InsertMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAUtagOleMenuGroupWidths@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMenu@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@PAXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveMenus@CAxFrameWindow@ATL@@UAGJPAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStatusText@CAxFrameWindow@ATL@@UAGJPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxFrameWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxFrameWindow@ATL@@UAGJPAUtagMSG@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAxFrameWindow@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxFrameWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceUIWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxUIWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxUIWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CAxUIWindow@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxUIWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@CAxUIWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxUIWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxUIWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBorder@CAxUIWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBorderSpace@CAxUIWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetActiveObject@CAxUIWindow@ATL@@UAGJPAUIOleInPlaceActiveObject@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAxUIWindow@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxUIWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAxHostWindow@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAxHostWindow@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@CAxHostWindow@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetControllingUnknown@CAxHostWindow@ATL@@UAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetRawUnknown@CAxHostWindow@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetUnknown@CAxHostWindow@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@CAxHostWindow@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ProcessWindowMessage@CAxHostWindow@ATL@@UAEHPAUHWND__@@IIJAAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnForwardMsg@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetUnknown@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnGetControl@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseAll@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnEraseBackground@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnMouseActivate@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSetFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnKillFocus@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSize@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDestroy@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWindowMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnWindowlessMouseMessage@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPaint@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControl@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AttachControl@CAxHostWindow@ATL@@UAGJPAUIUnknown@@PAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryControl@CAxHostWindow@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetExternalDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetExternalUIHandler@CAxHostWindow@ATL@@UAGJPAUIDocHostUIHandlerDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLic@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateControlLicEx@CAxHostWindow@ATL@@UAGJPBGPAUHWND__@@PAUIStream@@PAPAUIUnknown@@ABU_GUID@@PAU5@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowContextMenu@CAxHostWindow@ATL@@UAGJKPAUtagPOINT@@PAUIUnknown@@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHostInfo@CAxHostWindow@ATL@@UAGJPAU_DOCHOSTUIINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowUI@CAxHostWindow@ATL@@UAGJKPAUIOleInPlaceActiveObject@@PAUIOleCommandTarget@@PAUIOleInPlaceFrame@@PAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HideUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateUI@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableModeless@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDocWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFrameWindowActivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResizeBorder@CAxHostWindow@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@PBU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetOptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDropTarget@CAxHostWindow@ATL@@UAGJPAUIDropTarget@@PAPAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExternal@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateUrl@CAxHostWindow@ATL@@UAGJKPAGPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FilterDataObject@CAxHostWindow@ATL@@UAGJPAUIDataObject@@PAPAU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FireAmbientPropertyChange@CAxHostWindow@ATL@@QAEJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@CAxHostWindow@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowWindowlessActivation@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_BackColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_BackColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_ForeColor@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ForeColor@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_LocaleID@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_LocaleID@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_UserMode@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_UserMode@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_DisplayAsDefault@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DisplayAsDefault@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_Font@CAxHostWindow@ATL@@UAGJPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_Font@CAxHostWindow@ATL@@UAGJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_MessageReflect@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_MessageReflect@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ShowGrabHandles@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ShowHatching@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_DocHostFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DocHostFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_DocHostDoubleClickFlags@CAxHostWindow@ATL@@UAGJPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_AllowContextMenu@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowContextMenu@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_AllowShowUI@CAxHostWindow@ATL@@UAGJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_AllowShowUI@CAxHostWindow@ATL@@UAGJPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_OptionKeyPath@CAxHostWindow@ATL@@UAGJPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAmbientDispatch@CAxHostWindow@ATL@@UAGJPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSite@CAxHostWindow@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMoniker@CAxHostWindow@ATL@@UAGJKKPAPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetContainer@CAxHostWindow@ATL@@UAGJPAPAUIOleContainer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowObject@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnShowWindow@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestNewObjectLayout@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindow@CAxHostWindow@ATL@@UAGJPAPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ContextSensitiveHelp@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInPlaceActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowContext@CAxHostWindow@ATL@@UAGJPAPAUIOleInPlaceFrame@@PAPAUIOleInPlaceUIWindow@@PAUtagRECT@@2PAUtagOIFI@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Scroll@CAxHostWindow@ATL@@UAGJUtagSIZE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnUIDeactivate@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInPlaceDeactivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DiscardUndoState@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeactivateAndUndo@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnPosRectChange@CAxHostWindow@ATL@@UAGJPBUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInPlaceActivateEx@CAxHostWindow@ATL@@UAGJPAHK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnInPlaceDeactivateEx@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RequestUIActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanWindowlessActivate@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCapture@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCapture@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFocus@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDC@CAxHostWindow@ATL@@UAGJPBUtagRECT@@KPAPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseDC@CAxHostWindow@ATL@@UAGJPAUHDC__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRect@CAxHostWindow@ATL@@UAGJPBUtagRECT@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InvalidateRgn@CAxHostWindow@ATL@@UAGJPAUHRGN__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ScrollRect@CAxHostWindow@ATL@@UAGJHHPBUtagRECT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AdjustRect@CAxHostWindow@ATL@@UAGJPAUtagRECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDefWindowMessage@CAxHostWindow@ATL@@UAGJIIJPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnControlInfoChanged@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockInPlaceActive@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetExtendedControl@CAxHostWindow@ATL@@UAGJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TransformCoords@CAxHostWindow@ATL@@UAGJPAU_POINTL@@PAUtagPOINTF@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TranslateAcceleratorA@CAxHostWindow@ATL@@UAGJPAUtagMSG@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFocus@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShowPropertyFrame@CAxHostWindow@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnDataChange@CAxHostWindow@ATL@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnViewChange@CAxHostWindow@ATL@@UAGXKJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnRename@CAxHostWindow@ATL@@UAGXPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnSave@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnClose@CAxHostWindow@ATL@@UAGXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseDisplayName@CAxHostWindow@ATL@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnumObjects@CAxHostWindow@ATL@@UAGJKPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LockContainer@CAxHostWindow@ATL@@UAGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ActivateAx@CAxHostWindow@ATL@@QAEJPAUIUnknown@@_NPAUIStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SubclassWindow@CAxHostWindow@ATL@@QAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseWindow@CAxHostWindow@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReflectNotifications@CAxHostWindow@ATL@@QAEJIIJAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryService@CAxHostWindow@ATL@@UAGJABU_GUID@@0PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAxHostWindow@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinHostWindowLic@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleClientSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSiteWindowless@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleControlSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleContainer@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IServiceProvider@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAdviseSink@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IDocHostUIHandler@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinHostWindow@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSiteEx@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IParseDisplayName@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IObjectWithSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinAmbientDispatchEx@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IOleInPlaceSite@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IAxWinAmbientDispatch@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IDispatch@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAxWindowProc@ATL@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlAxWindowProc2@ATL@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindResource@ATL@@YAPAUHRSRC__@@PAUHINSTANCE__@@PBD1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindResource@ATL@@YAPAUHRSRC__@@PAUHINSTANCE__@@PBG1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInvalidValue@_AtlDialogBoxIndirectParamHelper@ATL@@SAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValidReturnVal@_AtlDialogBoxIndirectParamHelper@ATL@@SA_NH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInvalidValue@_AtlCreateDialogIndirectParamHelper@ATL@@SAPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsValidReturnVal@_AtlCreateDialogIndirectParamHelper@ATL@@SA_NPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxCreateControlEx@28
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxCreateControlLic@20
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxCreateControlLicEx@32
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtr@UIAxWinHostWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxWinInit@0
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxGetControl@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _AtlAxGetHost@8
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAHPAUHINSTANCE__@@PBDPAUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamA@ATL@@SAXPADPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadCursorA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassExA@AtlModuleRegisterWndClassInfoParamA@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetClassInfoExA@AtlModuleRegisterWndClassInfoParamW@ATL@@SAHPAUHINSTANCE__@@PBGPAUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatWindowClassName@AtlModuleRegisterWndClassInfoParamW@ATL@@SAXPAGPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadCursorA@AtlModuleRegisterWndClassInfoParamW@ATL@@SAPAUHICON__@@PAUHINSTANCE__@@PBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterClassExA@AtlModuleRegisterWndClassInfoParamW@ATL@@SAGPAU_ATL_WIN_MODULE70@2@PBUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterClassExA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXA@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterClassExW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PBUtagWNDCLASSEXW@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterWndClassInfoA@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOA@1@PAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlWinModuleRegisterWndClassInfoW@ATL@@YGGPAU_ATL_WIN_MODULE70@1@PAU_ATL_BASE_MODULE70@1@PAU_ATL_WNDCLASSINFOW@1@PAP6GJPAUHWND__@@IIJ@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHiMetricToPixel@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlPixelToHiMetric@ATL@@YGXPBUtagSIZE@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SqrtSSE@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FloatToInt32@@YAHM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clamp@@YAMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fchop@@YAHM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??OVU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??MVU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ZPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetVuState@VuEntity@@IAEXW4VU_MEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuScopeLock@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuScopeLock@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Entity@VuMessage@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuDelaySlave@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Handle@VuDelaySlave@@UAEHPAVVuEvent@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Handle@VuDelaySlave@@UAEHPAVVuFullUpdateEvent@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuDelaySlave@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuMessageFilter@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuMessageFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuMessageFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuStandardMsgFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@VuStandardMsgFilter@@UBEPAVVuMessageFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuStandardMsgFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuResendMsgFilter@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuResendMsgFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@VuResendMsgFilter@@UBEPAVVuMessageFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuResendMsgFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuNullMessageFilter@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuNullMessageFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Test@VuNullMessageFilter@@UBEEPAVVuMessage@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@VuNullMessageFilter@@UBEPAVVuMessageFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuNullMessageFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuFilter@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuKeyFilter@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuKeyFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuBiKeyFilter@@IAE@IM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VuBiKeyFilter@@IAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VuBiKeyFilter@@MAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVuBiKeyFilter@@MAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSetFalcFlag@FalconEntity@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMovementType@FalconEntity@@UAE?AW4MoveType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FalconNothingFilterType@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1FalconNothingFilterType@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GFalconNothingFilterType@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DrawableClass@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DrawableClass@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Display@DrawableClass@@UAEXPAVVirtualDisplay@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DisplayInit@DrawableClass@@UAEXPAVImageBuffer@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDisplay@DrawableClass@@UAEPAVVirtualDisplay@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PushButton@DrawableClass@@UAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDrawableClass@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0color@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?XYZtoRGB@color@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RGBtoHSV@color@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xyLtoXYZ@color@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDXContext@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CurrentForegroundColor@ContextMPR@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?glGetFileExtension@@YAXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CFileIO@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileIO@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileIO@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileMemory@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileMemory@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CImageFileMemory@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCImageFileMemory@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?getSubtitles@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Get3dTrackIR@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyfile@PlayerOptionsClass@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSubtitles@PlayerOptionsClass@@QAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareWith@ANode@@UAEHPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHeadTracking@OTWDriverClass@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InSim@SimulationLoopControl@@SA_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsAcStatusBitsSet@AircraftClass@@QBE_NH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsAwake@CampBaseClass@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsAggregate@CampBaseClass@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDomain@CampBaseClass@@QBEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnsetChecked@CampBaseClass@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$pair@VVU_ID@@V?$VuBin@VCampBaseClass@@@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1UnitFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@UnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@UnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1AirUnitFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@AirUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@AirUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GAirUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1GroundUnitFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@GroundUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@GroundUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GGroundUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1NavalUnitFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@NavalUnitFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@NavalUnitFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GNavalUnitFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0UnitProxFilter@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1UnitProxFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@UnitProxFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GUnitProxFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ObjFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@ObjFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@ObjFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GObjFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0ObjProxFilter@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ObjProxFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@ObjProxFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GObjProxFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CampBaseFilter@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CampBaseFilter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@CampBaseFilter@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Copy@CampBaseFilter@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCampBaseFilter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RunningTactical@SimulationDriver@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RunningCampaign@SimulationDriver@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MfdDrawable@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Display@MfdDrawable@@UAEXPAVVirtualDisplay@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GMfdMenuDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1MfdMenuDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1LantirnDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GLantirnDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TestMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GTestMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BlankMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBlankMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DteMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDteMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1FlcsMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GFlcsMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1FlirMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GFlirMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1WpnMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GWpnMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TgpMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GTgpMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1HadMfdDrawable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GHadMfdDrawable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetType@SensorClass@@UAEXW4SensorType@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetPower@SensorClass@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsOn@SensorClass@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecModes@SensorClass@@UAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateState@SensorClass@@UAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSeekerPos@SensorClass@@UAEXMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TargetUnderCursor@SensorClass@@UAE?AVVU_ID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDisplay@SensorClass@@UAEPAVVirtualDisplay@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1IrstClass@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GIrstClass@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?frontSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PixelSize@ImageBuffer@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCreationIter@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCreationIter@CampaignClass@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Moving@UnitClass@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCheck@C_Hash@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSrcRect@O_Output@@QAEXPAUUI95_RECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDestRect@O_Output@@QAEXPAUUI95_RECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetImage@O_Output@@QAEPAVIMAGE_RSC@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAnim@O_Output@@QAEPAVANIM_RES@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFgColor@O_Output@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBgColor@O_Output@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSrcRect@O_Output@@QAEPAUUI95_RECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDestRect@O_Output@@QAEPAUUI95_RECT@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1C_Base@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlags@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlagBitOn@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFlagBitOff@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetW@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetH@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetWH@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetXYWH@C_Base@@UAEXJJJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetState@C_Base@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHotKey@C_Base@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMenu@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFont@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSound@C_Base@@UAEXJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDragCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHelpText@C_Base@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOver@C_Base@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOverColor@C_Base@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOverPerc@C_Base@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRelX@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRelY@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetState@C_Base@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHotKey@C_Base@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMenu@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFont@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHelpText@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMouseOver@C_Base@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDragCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsBase@C_Base@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsControl@C_Base@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Refresh@C_Base@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cleanup@C_Base@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TimerUpdate@C_Base@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Activate@C_Base@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Deactivate@C_Base@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckHotSpots@C_Base@@UAEJJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckKeyboard@C_Base@@UAEHEEEJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Process@C_Base@@UAEHJF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloseWindow@C_Base@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?MouseOver@C_Base@@UAEHJJPAV1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMe@C_Base@@UAEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Dragable@C_Base@@UAEHJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetItemXY@C_Base@@UAEXJPAJ0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Wheel@C_Base@@UAEHHGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LocalFind@C_Base@@UAEFPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GC_Base@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GC_Hash@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1C_Control@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelX@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelY@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetRelXY@C_Control@@UAEXJJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDragCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMenu@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHelpText@C_Control@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetHotKey@C_Control@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOver@C_Control@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOverColor@C_Control@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMouseOverPerc@C_Control@@UAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsBase@C_Control@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsControl@C_Control@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRelX@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRelY@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDragCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMenu@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHelpText@C_Control@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHotKey@C_Control@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMouseOver@C_Control@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GC_Control@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInteger@C_EditBox@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFont@C_Text@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SaveText@C_Text@@UAEXPAXPAVC_Parser@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetText@C_VersionText@@UAEXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetText@C_VersionText@@UAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GC_VersionText@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1C_VersionText@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DrawableObject@@QAE@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DrawableObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRadarSign@DrawableObject@@UAEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLabel@DrawableObject@@UAEXPADK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetInhibitFlag@DrawableObject@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDrawableObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateMPR@Palette@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0BNode@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3BNode@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0BSubTree@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BSubTree@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BSubTree@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBSubTree@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BRoot@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BRoot@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBRoot@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BSpecialXform@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BSpecialXform@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBSpecialXform@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BSlotNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BSlotNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBSlotNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BDofNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BDofNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBDofNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BXDofNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BXDofNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBXDofNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BTransNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BTransNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBTransNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BScaleNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BScaleNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBScaleNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BSwitchNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BSwitchNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBSwitchNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BXSwitchNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BXSwitchNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBXSwitchNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BSplitterNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BSplitterNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBSplitterNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0BPrimitiveNode@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BPrimitiveNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BPrimitiveNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBPrimitiveNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BLitPrimitiveNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BLitPrimitiveNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBLitPrimitiveNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BCulledPrimitiveNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BCulledPrimitiveNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBCulledPrimitiveNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BLightStringNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BLightStringNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBLightStringNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BRenderControlNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Type@BRenderControlNode@@UAE?AW4BNodeType@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GBRenderControlNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Radius@ObjectInstance@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RadarSign@ObjectInstance@@QAEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNTextureSet@ObjectInstance@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetInhibitFlag@DrawableBSP@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetRadarSign@DrawableBSP@@UAEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDrawableBSP@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __mm_cvtpi16_ps
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __mm_cvtpu16_ps
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __mm_cvtps_pi16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateFastRandom@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Sin@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cos@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Edge@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Edge@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DistanceFrom@Edge@@QAEMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Vector@D3DFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Vector@D3DFrame@@QAE@MMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4Vector@D3DFrame@@QAEAAV01@V01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??TVector@D3DFrame@@QBE?AV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??UVector@D3DFrame@@QBEMABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DD3DFrame@@YA?AVVector@0@MABV10@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??HVector@D3DFrame@@QBE?AV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??GVector@D3DFrame@@QBE?AV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DVector@D3DFrame@@QBE?AV01@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??KVector@D3DFrame@@QBE?AV01@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??YVector@D3DFrame@@QAE?AV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_0Vector@D3DFrame@@QAE?AV01@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Magnitude@Vector@D3DFrame@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Size@Vector@D3DFrame@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SizeSquared@Vector@D3DFrame@@QBEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsZero@Vector@D3DFrame@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Normalize@Vector@D3DFrame@@QAE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SafeNormal@Vector@D3DFrame@@QBE?AV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BoundToCube@Vector@D3DFrame@@QAE?AV12@M@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Plane@D3DFrame@@QAE@MMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PlaneDot@Plane@D3DFrame@@QBEMABVVector@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4Matrix@D3DFrame@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitIdentity@Matrix@D3DFrame@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Translate@Matrix@D3DFrame@@QAEXMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Translate@Matrix@D3DFrame@@QAEXVVector@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Scale@Matrix@D3DFrame@@QAEXMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Scale@Matrix@D3DFrame@@QAEXVVector@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RotateRadX@Matrix@D3DFrame@@QAEXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RotateRadY@Matrix@D3DFrame@@QAEXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RotateRadZ@Matrix@D3DFrame@@QAEXM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RotateRad@Matrix@D3DFrame@@QAEXMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Rotate@Matrix@D3DFrame@@QAEXMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Rotate@Matrix@D3DFrame@@QAEXVVector@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Vertex@D3DFrame@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Vertex@D3DFrame@@QAE@VVector@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateMatrix@Coords@D3DFrame@@MAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMatrix@Coords@D3DFrame@@QAEAAVMatrix@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FSnap@D3DFrame@@YAMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PointPlaneDist@D3DFrame@@YAMABVVector@1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Parallel@D3DFrame@@YA_NABVVector@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??DD3DFrame@@YA?AVMatrix@0@ABV10@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0VirtualDisplay@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1VirtualDisplay@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Circle@VirtualDisplay@@UAEXMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Arc@VirtualDisplay@@UAEXMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TextWidth@VirtualDisplay@@UAEMPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TextHeight@VirtualDisplay@@UAEMXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLineStyle@VirtualDisplay@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Color@VirtualDisplay@@UAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GVirtualDisplay@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Render2D@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Render2D@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearDraw@Render2D@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearZBuffer@Render2D@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Color@Render2D@@UAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetColor@Render2D@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetBackground@Render2D@@UAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLineStyle@Render2D@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRender2D@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Render3D@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Render3D@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Cleanup@Render3D@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRender3D@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1RenderOTW@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRenderOTW@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0DeviceAxis@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0TrackIR@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1TrackIR@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E5
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E6
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?GetFaultCount@FaultClass@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Breakable@FaultClass@@QAEHW4type_FSubSystem@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMflListCount@FaultClass@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearMfl@FaultClass@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStartTime@FaultClass@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@ComSup@@YAJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutHeartbeatInterval@IUplink@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutMasterServerPort@IUplink@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutQueryPort@IUplink@GNETCORELib@@QAEXF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E8
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E9
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT _$E11
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E12
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E14
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
;	COMDAT _$E15
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
;	COMDAT ?BuildAscii@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?initApplication@@YAEPAUHINSTANCE__@@0H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndUI@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SimWndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_ip@@YAHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ParseCommandLine@@YAXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SystemLevelInit@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GRadioSubTitle@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SystemLevelExit@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GWinAmpFrontEnd@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GUIComms@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CampaignAutoSave@@YAXW4FalconGameType@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PlayMovie@@YAXPADHHHHPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ShutdownCampaign@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EnableCampaignMenus@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DisableCampaignMenus@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConsoleWrite@@YAXPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CtrlAltDelMask@@YAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?i_am@@YAHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDispatch@@@ATL@@IAE@PAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDispatch@@@ATL@@QBEPAUIDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIDispatch@@@ATL@@QAEPAPAUIDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIDispatch@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIDispatch@@@ATL@@QAEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIUnknown@@@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIUnknown@@@ATL@@QAEPAUIUnknown@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIUnknown@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIUnknown@@@ATL@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIUnknown@@@ATL@@QAEPAPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIUnknown@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIUnknown@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIUnknown@@@ATL@@QBE_NPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIUnknown@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UIUnknown@@@ATL@@QAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@QBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIPersistStream@@@ATL@@QAEPAPAUIPersistStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStream@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStream@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEHABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlAutoThreadModuleT@VCAtlAutoThreadModule@ATL@@VCComSimpleThreadAllocator@2@$0PPPPPPPP@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CAtlAutoThreadModuleT@VCAtlAutoThreadModule@ATL@@VCComSimpleThreadAllocator@2@$0PPPPPPPP@@ATL@@UAEJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeLib@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeLib@@@ATL@@QBEPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeLib@@@ATL@@QAEPAPAUITypeLib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeLib@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeLib@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UICatRegister@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UICatRegister@@@ATL@@QAEPAPAUICatRegister@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UICatRegister@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICatRegister@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QAEPAPAUIConnectionPointContainer@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIConnectionPointContainer@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPointContainer@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIConnectionPoint@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIConnectionPoint@@@ATL@@QAEPAPAUIConnectionPoint@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIConnectionPoint@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIConnectionPoint@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UITypeInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UITypeInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@?$CComPtrBase@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UITypeInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UITypeInfo2@@@ATL@@QAEPAPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UICreateErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UICreateErrorInfo@@@ATL@@QAEPAPAUICreateErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UICreateErrorInfo@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICreateErrorInfo@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIErrorInfo@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIErrorInfo@@@ATL@@QBEPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIErrorInfo@@@ATL@@QAEPAPAUIErrorInfo@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAUIProvideClassInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QAEPAPAUIProvideClassInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIProvideClassInfo2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIProvideClassInfo2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersist@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersist@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIPersist@@@ATL@@QAEPAPAUIPersist@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersist@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersist@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEPAV12@PAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@GU?$char_traits@G@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@GU?$char_traits@G@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@JHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIMalloc@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIMalloc@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIMalloc@@@ATL@@QAEPAPAUIMalloc@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIMalloc@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIMalloc@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAEHABQAUATL_CHAIN_ENTRY@CDynamicChain@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAEAAPAUATL_CHAIN_ENTRY@CDynamicChain@1@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEP6GHPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindowT@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassName@?$CAxWindow2T@VCWindow@ATL@@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIClassFactory2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIClassFactory2@@@ATL@@QAEPAPAUIClassFactory2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIClassFactory2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIClassFactory2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEP6GJPAUHWND__@@IIJ@ZXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestroyWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DefWindowProcA@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEJIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnFinalMessage@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEXPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIOleInPlaceActiveObject@@@ATL@@QAEPAUIOleInPlaceActiveObject@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAUIOleInPlaceActiveObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceActiveObject@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSite@?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypeInfoCount@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetTypeInfo@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIDsOfNames@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invoke@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleObject@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleObject@@@ATL@@QBEPAUIOleObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleObject@@@ATL@@QAEPAPAUIOleObject@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleObject@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleObject@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleObject@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEPAPAUIOleInPlaceFrame@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@QAEJPAPAUIOleInPlaceFrame@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEPAPAUIOleInPlaceUIWindow@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??7?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@QAEJPAPAUIOleInPlaceUIWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIViewObjectEx@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAUIViewObjectEx@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEPAPAUIViewObjectEx@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIViewObjectEx@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIViewObjectEx@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIViewObjectEx@@@ATL@@QBE_NPAUIViewObjectEx@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIViewObjectEx@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEPAPAUIOleInPlaceObjectWindowless@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleInPlaceObjectWindowless@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIDocHostUIHandlerDispatch@@@ATL@@QAEPAUIDocHostUIHandlerDispatch@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAUIDocHostUIHandlerDispatch@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIDocHostUIHandlerDispatch@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CComPtr@UIFontDisp@@@ATL@@QAEPAUIFontDisp@@PAU2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIFontDisp@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIFontDisp@@@ATL@@QAEPAPAUIFontDisp@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8?$CComPtrBase@UIFontDisp@@@ATL@@QBE_NPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyTo@?$CComPtrBase@UIFontDisp@@@ATL@@QAEJPAPAUIFontDisp@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIServiceProvider@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAUIServiceProvider@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIServiceProvider@@@ATL@@QAEPAPAUIServiceProvider@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIServiceProvider@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIServiceProvider@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPtrBase@UIServiceProvider@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleInPlaceActiveObject@@$1?_GUID_00000117_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIObjectWithSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAUIObjectWithSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIObjectWithSite@@@ATL@@QAEPAPAUIObjectWithSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIObjectWithSite@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIObjectWithSite@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleClientSite@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleClientSite@@@ATL@@QBEPAUIOleClientSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIOleClientSite@@@ATL@@QAEPAPAUIOleClientSite@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIStream@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIStream@@@ATL@@QBEPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIStream@@@ATL@@QAEPAPAUIStream@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIPersistStreamInit@@@ATL@@QAEPAPAUIPersistStreamInit@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIPersistStreamInit@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIPersistStreamInit@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIWebBrowser2@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAUIWebBrowser2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIWebBrowser2@@@ATL@@QAEPAPAUIWebBrowser2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIWebBrowser2@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIWebBrowser2@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleControl@@$1?_GUID_b196b288_bab4_101a_b69c_00aa00341d07@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIOleControl@@@ATL@@QBEPAUIOleControl@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIOleControl@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIOleControl@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reset@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIOleClientSite@@$1?_GUID_00000118_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStreamInit@@$1?_GUID_7fd52380_4e07_101b_ae2d_08002b2ec713@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIPersistStream@@$1?_GUID_00000109_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComQIPtr@UIAdviseSink@@$1?_GUID_0000010f_0000_0000_c000_000000000046@@3U__s_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UIAdviseSink@@@ATL@@QBEPAUIAdviseSink@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComCreator@V?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QAEPAPAUIAxWinHostWindowLic@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindowLic@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAxWinHostWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPtrBase@UIAxWinHostWindow@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??I?$CComPtrBase@UIAxWinHostWindow@@@ATL@@QAEPAPAUIAxWinHostWindow@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$CComPtrBase@UIAxWinHostWindow@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UIAxWinHostWindow@@@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$VuBin@VVuTargetEntity@@@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$VuBin@VVuTargetEntity@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VVuTargetEntity@@@@QBEPAVVuTargetEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reset@?$VuBin@VVuEntity@@@@QAEXPAVVuEntity@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$VuBin@VCampBaseClass@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VSimBaseClass@@@@QBEPAVSimBaseClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reset@?$VuBin@VSimBaseClass@@@@QAEXPAVSimBaseClass@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get@?$VuBin@VSimWeaponClass@@@@QBEPAVSimWeaponClass@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@PAUIEnumUnknown@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@PAUIUnknown@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIListViewItemContainer@GNETCORELib@@$1?_GUID_1386ae5a_d6f3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIListViewItemContainer@GNETCORELib@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIListViewItemContainer@GNETCORELib@@$1?_GUID_1386ae5a_d6f3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIPlayer@GNETCORELib@@$1?_GUID_dda57125_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@PAUIPlayer@GNETCORELib@@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIPlayer@GNETCORELib@@$1?_GUID_dda57125_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBEPAUIUplink@GNETCORELib@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlAutoThreadModuleT@VCAtlAutoThreadModule@ATL@@VCComSimpleThreadAllocator@2@$0PPPPPPPP@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Glocale@std@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@GU?$char_traits@G@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CWindowImplRoot@VCWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxFrameWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@VCAxUIWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_D?$basic_istream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIUnknown@@@ATL@@IAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@QAEPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXHABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeLib@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UICatRegister@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIConnectionPointContainer@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIConnectionPoint@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo@@@ATL@@IAE@PAUITypeInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalAddRef@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalRelease@?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UITypeInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UICreateErrorInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIErrorInfo@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIProvideClassInfo2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersist@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@GU?$char_traits@G@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@GU?$char_traits@G@std@@@std@@QBEPAV?$basic_ostream@GU?$char_traits@G@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@GU?$char_traits@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IBEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IAEPAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@GU?$char_traits@G@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIMalloc@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAEXHABQAUATL_CHAIN_ENTRY@CDynamicChain@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CWindowImplRoot@VCWindow@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIClassFactory2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceActiveObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndCaption@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleObject@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceFrame@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceUIWindow@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIViewObjectEx@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleInPlaceObjectWindowless@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIDocHostUIHandlerDispatch@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIFontDisp@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIServiceProvider@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIObjectWithSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleClientSite@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIStream@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIPersistStreamInit@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIWebBrowser2@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIOleControl@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_InternalQueryInterface@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@QAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtr@UIAdviseSink@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindowLic@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAxWinHostWindow@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@IAE@V?$allocator@VDDDriverInfo@DeviceManager@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@VDDDriverInfo@DeviceManager@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIUnknown@@$1?_GUID_00000000_0000_0000_c000_000000000046@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIListViewItemContainer@GNETCORELib@@$1?_GUID_1386ae5a_d6f3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIListViewItemContainer@GNETCORELib@@$1?_GUID_1386ae5a_d6f3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIPlayer@GNETCORELib@@$1?_GUID_dda57125_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_com_ptr_t@V?$_com_IIID@UIPlayer@GNETCORELib@@$1?_GUID_dda57125_d4e3_11d2_9018_004f4e006398@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalConstruct@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetControllingUnknown@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CMessageMap@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CWndProcThunk@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IEnumUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@G$0IA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIOleControl@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComPtrBase@UIAdviseSink@@@ATL@@IAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@IAEXPAVDDDriverInfo@DeviceManager@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@VDDDriverInfo@DeviceManager@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@VDDDriverInfo@DeviceManager@@@std@@QAEXPAVDDDriverInfo@DeviceManager@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@VDDDriverInfo@DeviceManager@@@std@@QAEPAVDDDriverInfo@DeviceManager@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FinalRelease@?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0Wrapper@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@QAE@ABQAUATL_CHAIN_ENTRY@CDynamicChain@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetWndExStyle@?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@SAKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@VDDDriverInfo@DeviceManager@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIPersistStream@@@IUnknown@@QAGJPAPAUIPersistStream@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@AAVCComCriticalSection@1@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UITypeInfo2@@@IUnknown@@QAGJPAPAUITypeInfo2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?4UITypeInfo2@@@?$CComPtr@UITypeInfo@@@ATL@@QAEPAUITypeInfo@@ABV?$CComPtr@UITypeInfo2@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@N@@YANNH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@H@@YAHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Pow_int@O@@YAOOH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$use_facet@V?$ctype@G@std@@@std@@YAABV?$ctype@G@0@ABVlocale@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DialogProc@?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@SGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StartWindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WindowProc@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@PAU3@V_U_RECT@2@PBDKKV_U_MENUorID@2@GPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEHPAUHWND__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnsubclassWindow@?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@QAEPAUHWND__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxFrameWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@VCAxUIWindow@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIDispatch@@@?$CComPtrBase@UIOleObject@@@ATL@@QBEJPAPAUIDispatch@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Next@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJKPAPAUIUnknown@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Skip@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Clone@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@UAGJPAPAUIEnumUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@QAEJPAPAUIUnknown@@0PAU3@W4CComEnumFlags@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAxDialogCreateT@PBGV_AtlDialogBoxIndirectParamHelper@ATL@@$1?DialogBoxIndirectParamW@@YGHPAUHINSTANCE__@@PBUDLGTEMPLATE@@PAUHWND__@@P6GH2IIJ@ZJ@Z@ATL@@YAHPAUHINSTANCE__@@PBGPAUHWND__@@P6GH2IIJ@ZJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAxDialogCreateT@PBDV_AtlDialogBoxIndirectParamHelper@ATL@@$1?DialogBoxIndirectParamA@@YGHPAUHINSTANCE__@@PBUDLGTEMPLATE@@PAUHWND__@@P6GH2IIJ@ZJ@Z@ATL@@YAHPAUHINSTANCE__@@PBDPAUHWND__@@P6GH2IIJ@ZJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAxDialogCreateT@PBGV_AtlCreateDialogIndirectParamHelper@ATL@@$1?CreateDialogIndirectParamW@@YGPAUHWND__@@PAUHINSTANCE__@@PBUDLGTEMPLATE@@PAU4@P6GH2IIJ@ZJ@Z@ATL@@YAPAUHWND__@@PAUHINSTANCE__@@PBGPAU1@P6GH2IIJ@ZJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlAxDialogCreateT@PBDV_AtlCreateDialogIndirectParamHelper@ATL@@$1?CreateDialogIndirectParamA@@YGPAUHWND__@@PAUHINSTANCE__@@PBUDLGTEMPLATE@@PAU4@P6GH2IIJ@ZJ@Z@ATL@@YAPAUHWND__@@PAUHINSTANCE__@@PBDPAU1@P6GH2IIJ@ZJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIAxWinHostWindow@@@IUnknown@@QAGJPAPAUIAxWinHostWindow@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamA@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOA@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamA@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$AtlModuleRegisterWndClassInfoT@VAtlModuleRegisterWndClassInfoParamW@ATL@@@ATL@@YAGPAU_ATL_BASE_MODULE70@0@PAU_ATL_WIN_MODULE70@0@PAU_ATL_WNDCLASSINFOW@0@PAP6GJPAUHWND__@@IIJ@ZVAtlModuleRegisterWndClassInfoParamW@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$Abs@M@@YAMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?8VVuEntity@@@@YA_NPBXABV?$VuBin@VVuEntity@@@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$Clamp@M@D3DFrame@@YAMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$Square@N@D3DFrame@@YANN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$Abs@N@D3DFrame@@YANN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAPAXIPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3G@Wrapper@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@SAXPAXPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@Wrapper@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@SAPAXIPAPAUATL_CHAIN_ENTRY@CDynamicChain@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@Wrapper@?$CSimpleArray@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@V?$CSimpleArrayEqualHelper@PAUATL_CHAIN_ENTRY@CDynamicChain@ATL@@@3@@ATL@@SAXPAXPAPAUATL_CHAIN_ENTRY@CDynamicChain@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@YAXPAVDDDriverInfo@DeviceManager@@0AAV?$allocator@VDDDriverInfo@DeviceManager@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@VDDDriverInfo@DeviceManager@@@std@@YAPAVDDDriverInfo@DeviceManager@@IPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CComPtrBase@UITypeInfo2@@@ATL@@QBEPAUITypeInfo2@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxFrameWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CComObject@VCAxUIWindow@ATL@@@ATL@@QAE@PAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$_CopyInterface@UIUnknown@@@ATL@@SAJPAPAUIUnknown@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?init@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$_CopyInterface@UIUnknown@@@ATL@@SAXPAPAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateInstance@?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@SGJPAPAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVDDDriverInfo@DeviceManager@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVDDDriverInfo@DeviceManager@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@VDDDriverInfo@DeviceManager@@V?$allocator@VDDDriverInfo@DeviceManager@@@std@@@std@@YAXPAVDDDriverInfo@DeviceManager@@0AAV?$allocator@VDDDriverInfo@DeviceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@VDDDriverInfo@DeviceManager@@@std@@QAEXPAVDDDriverInfo@DeviceManager@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@VDDDriverInfo@DeviceManager@@@std@@YAXPAVDDDriverInfo@DeviceManager@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GDDDriverInfo@DeviceManager@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DDDriverInfo@DeviceManager@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@V?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@U_DDSURFACEDESC2@@V?$allocator@U_DDSURFACEDESC2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@V?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@U_DDSURFACEDESC2@@V?$allocator@U_DDSURFACEDESC2@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@V?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@@std@@IAEXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@QAEXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@U_DDSURFACEDESC2@@V?$allocator@U_DDSURFACEDESC2@@@std@@@std@@IAEXPAU_DDSURFACEDESC2@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_DDSURFACEDESC2@@@std@@QAEXPAU_DDSURFACEDESC2@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@V?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@@std@@YAXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@0AAV?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U_DDSURFACEDESC2@@V?$allocator@U_DDSURFACEDESC2@@@std@@@std@@YAXPAU_DDSURFACEDESC2@@0AAV?$allocator@U_DDSURFACEDESC2@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@V?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@@std@@YAXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@0AAV?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAU_DDSURFACEDESC2@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU_DDSURFACEDESC2@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@U_DDSURFACEDESC2@@V?$allocator@U_DDSURFACEDESC2@@@std@@@std@@YAXPAU_DDSURFACEDESC2@@0AAV?$allocator@U_DDSURFACEDESC2@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@QAEXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_DDSURFACEDESC2@@@std@@QAEXPAU_DDSURFACEDESC2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@VD3DDeviceInfo@DDDriverInfo@DeviceManager@@@std@@YAXPAVD3DDeviceInfo@DDDriverInfo@DeviceManager@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_DDSURFACEDESC2@@@std@@YAXPAU_DDSURFACEDESC2@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GD3DDeviceInfo@DDDriverInfo@DeviceManager@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1D3DDeviceInfo@DDDriverInfo@DeviceManager@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ECAxHostWindow@ATL@@WDI@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WCA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WCE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAxHostWindow@ATL@@WCI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CAxHostWindow@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CAxHostWindow@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W3AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@W7AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_E?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WDI@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WBM@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCA@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCE@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryInterface@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@WCI@AGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000025_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020400_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000151_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ObjFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BTransNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf89_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0c733a30_2a1c_11ce_ade5_00aa0044773d
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7Render3D@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0e6d4d92_6738_11cf_9608_00aa00680db4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IServiceProvider@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57122_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000012a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf83_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_cf51ed10_62fe_11cf_bf86_00a0c9034836
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleInPlaceUIWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000019_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0f70ccce_d716_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020402_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e7_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VirtualDisplay@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3ace_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b288_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7MfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_6d5140c1_7436_11ce_8034_00aa006009fa
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e013_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7BScaleNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_550dda30_0541_11d2_9ca9_0060b0ec3d39
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000001cf_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b28f_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b287_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxUIWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9d9bb9a8_d54c_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxFrameWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020403_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d783c329_d613_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_65725580_9b5d_11d0_9bfe_00c04fc99c8e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szThreadingModel@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020405_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d001f200_ef97_11ce_9bc9_00aa00608e01
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000114_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b15b8dc1_c7e1_11d0_8680_00aa00bdcb71
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8c_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_922eada0_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e4_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000022_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuNullMessageFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d4d4a0fc_3b73_11d1_b2b4_00c04fb92596
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000122_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e012_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7Render2D@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CFileMemory@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IAxWinHostWindowLic@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000c_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BRenderControlNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bc0bf6ae_8878_11d1_83e9_00c04fc2c6d4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IGame
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_Host
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IMasterServer
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServer
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IPlayer
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServerEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IHost
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_RemoteMasterServer
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_SHAREDLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_Player
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IGameEvents
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57129_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf86_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szBoth@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DrawableObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_f52e2b61_18a1_11d1_b105_00805f49916b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuMessageFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000016_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000033_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bd1ae5e0_a6ae_11ce_bd37_504200c10000
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000103_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1386ae5a_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CFileIO@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bef6e003_a874_101a_8bba_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7NavalUnitFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24292_0c96_11ce_a0cf_00aa00600ab8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7HadMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000102_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a5029fb6_3c34_11d1_9c99_00c04fb998aa
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BDofNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d5_bafa_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_8d19c834_8879_11d1_83e9_00c04fc2c6d4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000113_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_df0b3d60_548f_101b_8e65_08002b2bd119
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b284_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000119_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7RenderOTW@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf85_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000139_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000032_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00000110_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a5ca5f7f_1847_4d87_9c5b_918509f7511d
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000101_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3127ca40_446e_11ce_8135_00aa004bb851
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IObjectWithSite@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_25b15600_0115_11d0_bf0d_00aa00b8dfd2
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BSubTree@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56afc_593b_101a_b569_08002b2dbf7a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_69d14c80_c18e_11d0_a9ce_006097942311
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9ed_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7AirUnitFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000129_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf82_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_894ad3b0_ef97_11ce_9bc9_00aa00608e01
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IDispatch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_90efd9f9_d7a8_11d2_901a_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000104_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8a_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7Coords@D3DFrame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80980_bf32_101a_8bbb_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020412_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7TestMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b6ea2051_048a_11d1_82b9_00c04fb9942e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_b3e7c340_ef97_11ce_9bc9_00aa00608e01
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a1faf330_ef97_11ce_9bc9_00aa00608e01
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3efaa413_272f_11d2_836f_0000f87a7782
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010f_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7WpnMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IDocHostUIHandler@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000150_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1386ae5d_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8f_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d1_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000026_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7FlirMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3aca_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000125_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55980ba0_35aa_11cf_b671_00aa004cd6d8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000138_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af24290_0c96_11ce_a0cf_00aa00600ab8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0002e000_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9cd_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7_com_error@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000031_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f569d0_593b_101a_b569_08002b2dbf7a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DrawableBSP@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_25336920_03f9_11cf_8fd0_00aa00686f13
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ed8c108d_4349_11d2_91a4_00c04f7969e8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuStandardMsgFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000018_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3efaa426_272f_11d2_836f_0000f87a7782
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DrawableClass@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AV_com_error@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000010a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9c2cad80_3424_11cf_b670_00aa004cd6d8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7C_Control@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bd3f23c0_d43e_11cf_893b_00aa00bdce1a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b28b_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7FalconNothingFilterType@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000000_0000_0000_0000_000000000000
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7DteMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IAxWinAmbientDispatchEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7FlcsMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c0_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf87_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szAUTPRX32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA1?AV_com_error@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00000010_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7GroundUnitFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IEnumUnknown@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_0002040e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002040f_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf81_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CComClassFactoryAutoThread@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_9bfbbc02_eff1_101a_84ed_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_742b0e01_14e6_101b_914e_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3acb_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3af280b6_cb3f_11d0_891e_00c04fb6bfc4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf80_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56b60_593b_101a_b569_08002b2dbf7a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_70bdde00_c18e_11d0_a9ce_006097942311
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011c_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000115_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7bf80981_bf32_101a_8bbb_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000112_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleContainer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e8_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000117_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8e_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleInPlaceSiteEx@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_30f3d47a_6447_11d1_8e3c_00c04fb9386d
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuResendMsgFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57120_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d5f56a34_593b_101a_b569_08002b2dbf7a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9c9_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e1_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_99caf010_415e_11cf_8814_00aa00b569f5
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000e0000_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000001_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b6b03a0c_d547_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b8d1f614_d5e4_4bd1_8f01_17371deaf685
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020411_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szApartment@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57125_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_0000010c_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@@@8??0bad_cast@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_8edbef0a_aeb1_48ad_9ed2_bd41cd1075bd
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000127_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8b_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000121_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d0_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3acd_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_8856f961_340a_11d0_a96b_00c04fd705a2
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_fc4801a1_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9ee_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_a7aba9c1_8983_11cf_8f20_00805f2cd064
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9e5_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BSpecialXform@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7C_VersionText@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf91_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleInPlaceSite@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BSwitchNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szLS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuBiKeyFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_0e6d4d90_6738_11cf_9608_00aa00680db4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000147_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1cf2b120_547d_101b_8e65_08002b2bd119
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BSlotNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000029_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_22f03340_547d_101b_8e65_08002b2bd119
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000001d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BLitPrimitiveNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
;	COMDAT ??_7IOleClientSite@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AV_com_error@@@8??0_com_error@@QAE@ABV0@@Z16
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7BXDofNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuDelaySlave@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_948c5ad3_c58d_11d0_9c0b_00c04fc99c8e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7C_Base@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7BCulledPrimitiveNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000116_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_37d84f60_42cb_11ce_8135_00aa004bb851
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000030_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI1?AV_com_error@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9f0_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000020_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA2?AVbad_cast@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_3935bda8_4ed9_495c_8650_e01fc1e38a4b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IrstClass@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7UnitProxFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1c2056cc_5ef4_101b_8bc8_00aa003e3b29
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020404_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_01e44665_24ac_101b_84ed_08002b2ec713
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_969dc708_5c76_11d1_8d86_0000f804b057
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1386ae5c_d6f3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_e0016343_4124_48a9_9734_93f48700a04a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BLightStringNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVbad_cast@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_0000000f_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7VuKeyFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IAxWinHostWindow@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_53c84785_8425_4dc5_971b_e58d9c19f9b6
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_4ef6100a_af88_11d0_9846_00c04fc29993
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleControlSite@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_711c7600_6b48_11d1_b403_00aa00b92af1
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf84_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3acc_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?big@?1??RsqrtSSE@@YAMM@Z@4HA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_00020410_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_1c733a30_2a1c_11ce_ade5_00aa0044773d
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011e_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CImageFileMemory@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9c1_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b28c_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57127_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7SubTitleNode@RadioSubTitle@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_f29f6bc0_5021_11ce_aa15_00006901293f
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e3_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9eb_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?wc@?1??GetWndClassInfo@CAxHostWindow@ATL@@SAAAU_ATL_WNDCLASSINFOA@3@XZ@4U43@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7BSplitterNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IUnknown@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_594f31d0_7f19_11d0_b194_00a0c90dc8bf
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9ef_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_79eac9d2_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_fc4801a3_2ba9_11cf_a229_00aa003d7352
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@CAxHostWindow@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7MfdMenuDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_36b5b50d_69bb_43d5_83f6_aaf7eb9fff7b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_cfc399af_d876_11d0_9c10_00c04fc99c8e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_7fd52380_4e07_101b_ae2d_08002b2ec713
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2b8de2fe_8d2d_11d1_b2fc_00c04fd915a9
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ObjProxFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000126_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3efaa425_272f_11d2_836f_0000f87a7782
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00020406_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000010d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000012_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_ed8c108e_4349_11d2_91a4_00c04f7969e8
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000100_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CampBaseFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000000d_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_58a08519_24c8_4935_b482_3fd823333a4f
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf88_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9e0_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_db2f3acf_2f86_11d1_8e04_00c04fb9989a
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BRoot@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_55272a00_42cb_11ce_8135_00aa004bb851
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT __GUID_00000003_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2b8de2ff_8d2d_11d1_b2fc_00c04fd915a9
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000105_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf90_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000002_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d7_bafa_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_310afa62_0575_11d2_9ca9_0060b0ec3d39
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __GUID_00020401_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_947990de_cc28_11d2_a0f7_00805f858fb1
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_376bd3aa_3845_101b_84ed_08002b2ec713
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000118_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_618736e0_3c3d_11cf_810c_00aa00389b71
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d8_bafa_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000011b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AUInit_Error@RadioSubTitle@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7IRegistrarBase@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_bef6e002_a874_101a_8bba_00aa00300cab
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b6ea2050_048a_11d1_82b9_00c04fb9942e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000145_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szIPS32@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b285_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_entries@?1??_GetEntries@?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_7UnitFilter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleInPlaceFrame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_2933bf8d_7b36_11d2_b20e_00c04f983e60
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_dda57123_d4e3_11d2_9018_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b286_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a9d758a0_4617_11cf_95fc_00aa00680db4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?szVIProgID@?1??RegisterClassHelper@CComModule@ATL@@QAGJABU_GUID@@PBD11K@Z@4QBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxUIWindow@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIDocHostUIHandler@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CComModule@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleContainer@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAtlModule@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMessageMap@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
;	COMDAT ??_7?$CComEnumImpl@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleClientSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAG@ATL@@2QQtagVARIANT@@PAPAGQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6BIOleInPlaceFrame@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxUIWindow@ATL@@6BIOleInPlaceUIWindow@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAxFrameWindow@ATL@@6BIOleInPlaceFrame@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_tih@?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAG@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIServiceProvider@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAxWinHostWindowLic@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6BIOleInPlaceUIWindow@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIOleInPlaceSiteWindowless@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CAtlModuleT@VCComModule@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CWindowImplRoot@VCWindow@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CComClassFactory@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIDocHostUIHandler@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIOleClientSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$IDispatchImpl@UIAxWinAmbientDispatchEx@@$1?_GUID_b2d0778b_ac99_4c58_a5c8_e7724e5316b5@@3U__s_GUID@@B$1?m_libid@CAtlModule@ATL@@2U_GUID@@A$0PPPP@$0PPPP@VCComTypeInfoHolder@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?_GUID_00000100_0000_0000_c000_000000000046@@3U__s_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CComClassFactoryAutoThread@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIOleContainer@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7_IDispEvent@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxFrameWindow@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComObject@VCAxUIWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CDialogImplBaseT@VCWindow@ATL@@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleInPlaceSiteWindowless@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIServiceProvider@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIOleControlSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CAtlAutoThreadModuleT@VCAtlAutoThreadModule@ATL@@VCComSimpleThreadAllocator@2@$0PPPPPPPP@@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIAxWinHostWindowLic@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIOleControlSite@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@6BIAdviseSink@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CAxHostWindow@ATL@@6BIAdviseSink@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$CComObject@VCAxFrameWindow@ATL@@@ATL@@6B?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@1@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CWin32Heap@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT __GUID_0000000b_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_df360ef0_de0d_11d2_9023_004f4e006398
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BPrimitiveNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000128_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_22f55881_280b_11d0_a8a9_00a0c90c2004
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_eb0cb9e8_7996_11d2_872e_0000f8080859
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0002e011_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BXSwitchNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$codecvt@GDH@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8?$basic_ostream@GU?$char_traits@G@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@G@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7facet@locale@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_streambuf@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_7?$basic_istream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_8?$basic_istream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@GU?$char_traits@G@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7codecvt_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7underflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ctype_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7overflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HA
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$ctype@D@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7bad_exception@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8?$basic_istream@GU?$char_traits@G@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7failure@ios_base@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7domain_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b28d_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000149_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IParseDisplayName@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7TgpMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7LantirnDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000013a_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_22f55882_280b_11d0_a8a9_00a0c90c2004
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7BlankMfdDrawable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9ec_baf9_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_79eac9d6_bafa_11ce_8c82_00aa004ba90b
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b289_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_3f7f31ac_e15f_11d0_9c25_00c04fc99c8e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000111_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000109_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IAdviseSink@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000021_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_000e0020_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_b196b283_bab4_101a_b69c_00aa00341d07
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IAxWinAmbientDispatch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_a6bc3ac0_dbaa_11ce_9de3_00aa004bb851
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_0000002f_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_d30c1661_cdaf_11d0_8a3e_00c04fc9e26e
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7IOleInPlaceSiteWindowless@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_00000148_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __GUID_4f9f9fcb_e0f4_48eb_b7ab_fa2ea9365cb4
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCU
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?VT@?$CVarTypeInfo@I@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::CVarTypeInfo<unsigned int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAI@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::CVarTypeInfo<unsigned int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@J@ATL@@2GB			; ATL::CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::CVarTypeInfo<long>::pmField
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?VT@?$CVarTypeInfo@PAJ@ATL@@2GB			; ATL::CVarTypeInfo<long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::CVarTypeInfo<long *>::pmField
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?VT@?$CVarTypeInfo@K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long>::VT
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::CVarTypeInfo<unsigned long>::pmField
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?VT@?$CVarTypeInfo@PAK@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long *>::VT
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::CVarTypeInfo<unsigned long *>::pmField
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?VT@?$CVarTypeInfo@_J@ATL@@2GB			; ATL::CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::CVarTypeInfo<__int64>::pmField
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?VT@?$CVarTypeInfo@PA_J@ATL@@2GB		; ATL::CVarTypeInfo<__int64 *>::VT
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::CVarTypeInfo<__int64 *>::pmField
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?VT@?$CVarTypeInfo@_K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?VT@?$CVarTypeInfo@PA_K@ATL@@2GB		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?VT@?$CVarTypeInfo@M@ATL@@2GB			; ATL::CVarTypeInfo<float>::VT
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::CVarTypeInfo<float>::pmField
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	_IID_IInternalConnection
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?VT@?$CVarTypeInfo@PAM@ATL@@2GB			; ATL::CVarTypeInfo<float *>::VT
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::CVarTypeInfo<float *>::pmField
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?VT@?$CVarTypeInfo@N@ATL@@2GB			; ATL::CVarTypeInfo<double>::VT
PUBLIC	_LIBID_ATLLib
PUBLIC	?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::CVarTypeInfo<double>::pmField
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?VT@?$CVarTypeInfo@PAN@ATL@@2GB			; ATL::CVarTypeInfo<double *>::VT
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::CVarTypeInfo<double *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB	; ATL::CVarTypeInfo<tagVARIANT>::VT
PUBLIC	?VT@?$CVarTypeInfo@PAG@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAG@ATL@@2GB		; ATL::CVarTypeInfo<unsigned short * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAG@ATL@@2QQtagVARIANT@@PAPAGQ3@ ; ATL::CVarTypeInfo<unsigned short * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch *>::pmField
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY>::pmField
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY *>::VT
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY *>::pmField
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?weatherCondition@@3HA				; weatherCondition
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_LIBID_SHAREDLib
PUBLIC	_CLSID_Host
PUBLIC	_IID_IHost
PUBLIC	_CLSID_Player
PUBLIC	_IID_IPlayer
PUBLIC	_CLSID_RemoteMasterServer
PUBLIC	_IID_IMasterServer
PUBLIC	_IID_IRemoteMasterServer
PUBLIC	_IID_IRemoteMasterServerEvents
PUBLIC	_IID_IGame
PUBLIC	_IID_IGameEvents
PUBLIC	?top_space@@3PADA				; top_space
PUBLIC	?program_name@@3PADA				; program_name
PUBLIC	?legal_crap@@3PADA				; legal_crap
PUBLIC	?bottom_space@@3PADA				; bottom_space
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?cbNeverDelete@CRegParser@ATL@@1HB		; ATL::CRegParser::cbNeverDelete
PUBLIC	?MAX_VALUE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_VALUE
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?MAX_TYPE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_TYPE
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?realWeather@@3PAVRealWeather@@A		; realWeather
PUBLIC	?noUIcomms@@3HA					; noUIcomms
PUBLIC	?FalconMovieDirectory@@3PADA			; FalconMovieDirectory
PUBLIC	?FalconMovieMode@@3PADA				; FalconMovieMode
PUBLIC	?displayCampaign@@3HA				; displayCampaign
PUBLIC	?studlyCampaignDude@@3HA			; studlyCampaignDude
PUBLIC	?RepairObjective@@3HA				; RepairObjective
PUBLIC	?rcDefault@CWindow@ATL@@2UtagRECT@@A		; ATL::CWindow::rcDefault
PUBLIC	?DestroyObjective@@3HA				; DestroyObjective
PUBLIC	?ClearObjManualFlags@@3HA			; ClearObjManualFlags
PUBLIC	?doUI@@3HA					; doUI
PUBLIC	?wait_for_loaded@@3HA				; wait_for_loaded
PUBLIC	?eyeFlyEnabled@@3HA				; eyeFlyEnabled
PUBLIC	?NoRudder@@3HA					; NoRudder
PUBLIC	?DisableSmoothing@@3HA				; DisableSmoothing
PUBLIC	?NumHats@@3HA					; NumHats
PUBLIC	?FalconUIArtDirectory@@3PADA			; FalconUIArtDirectory
PUBLIC	?FalconUIArtThrDirectory@@3PADA			; FalconUIArtThrDirectory
PUBLIC	?FalconUISoundDirectory@@3PADA			; FalconUISoundDirectory
PUBLIC	?FalconSoundThrDirectory@@3PADA			; FalconSoundThrDirectory
PUBLIC	?FalconCockpitThrDirectory@@3PADA		; FalconCockpitThrDirectory
PUBLIC	?FalconZipsThrDirectory@@3PADA			; FalconZipsThrDirectory
PUBLIC	?FalconTacrefThrDirectory@@3PADA		; FalconTacrefThrDirectory
PUBLIC	?FalconSplashThrDirectory@@3PADA		; FalconSplashThrDirectory
PUBLIC	?auto_start@@3HA				; auto_start
PUBLIC	?intro_movie@@3HA				; intro_movie
PUBLIC	?mainMenuWnd@@3PAUHWND__@@A			; mainMenuWnd
PUBLIC	?mainAppWnd@@3PAUHWND__@@A			; mainAppWnd
PUBLIC	?doNetwork@@3HA					; doNetwork
PUBLIC	?numZips@@3HA					; numZips
PUBLIC	?resourceHandle@@3PAHA				; resourceHandle
PUBLIC	?SimPathHandle@@3HA				; SimPathHandle
PUBLIC	?WM_ATLGETHOST@ATL@@3IA				; ATL::WM_ATLGETHOST
PUBLIC	?WM_ATLGETCONTROL@ATL@@3IA			; ATL::WM_ATLGETCONTROL
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	?VersionInfo@@3HA				; VersionInfo
PUBLIC	?winamp@@3PAVWinAmpFrontEnd@@A			; winamp
PUBLIC	?g_bHas3DNow@@3_NA				; g_bHas3DNow
PUBLIC	?SecretCode@@3PADA				; SecretCode
PUBLIC	?g_bEnableCockpitVerifier@@3_NA			; g_bEnableCockpitVerifier
PUBLIC	?lTestVarString@@3PADA				; lTestVarString
PUBLIC	?MajorVersion@@3HA				; MajorVersion
PUBLIC	?g_writeSndTbl@@3_NA				; g_writeSndTbl
PUBLIC	?g_writeMissionTbl@@3_NA			; g_writeMissionTbl
PUBLIC	?MinorVersion@@3HA				; MinorVersion
PUBLIC	?BuildNumber@@3HA				; BuildNumber
PUBLIC	?ShowVersion@@3HA				; ShowVersion
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	?radioLabel@@3PAVRadioSubTitle@@A		; radioLabel
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?wsadata@@3UWSAData@@A				; wsadata
PUBLIC	_g_strLgbk
PUBLIC	?VT@?$CVarTypeInfo@D@ATL@@2GB			; ATL::CVarTypeInfo<char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::CVarTypeInfo<char>::pmField
PUBLIC	?hInst@@3PAUHINSTANCE__@@A			; hInst
PUBLIC	?VT@?$CVarTypeInfo@E@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::CVarTypeInfo<unsigned char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAD@ATL@@2GB			; ATL::CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::CVarTypeInfo<char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAE@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@F@ATL@@2GB			; ATL::CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::CVarTypeInfo<short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAF@ATL@@2GB			; ATL::CVarTypeInfo<short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::CVarTypeInfo<short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@G@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::CVarTypeInfo<unsigned short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@H@ATL@@2GB			; ATL::CVarTypeInfo<int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::CVarTypeInfo<int>::pmField
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?VT@?$CVarTypeInfo@PAH@ATL@@2GB			; ATL::CVarTypeInfo<int *>::VT
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::CVarTypeInfo<int *>::pmField
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
_BSS	SEGMENT
?realWeather@@3PAVRealWeather@@A DD 01H DUP (?)		; realWeather
?noUIcomms@@3HA DD 01H DUP (?)				; noUIcomms
?FalconMovieDirectory@@3PADA DB 0104H DUP (?)		; FalconMovieDirectory
?FalconMovieMode@@3PADA DB 0104H DUP (?)		; FalconMovieMode
?displayCampaign@@3HA DD 01H DUP (?)			; displayCampaign
?studlyCampaignDude@@3HA DD 01H DUP (?)			; studlyCampaignDude
?RepairObjective@@3HA DD 01H DUP (?)			; RepairObjective
?DestroyObjective@@3HA DD 01H DUP (?)			; DestroyObjective
?ClearObjManualFlags@@3HA DD 01H DUP (?)		; ClearObjManualFlags
?doUI@@3HA DD	01H DUP (?)				; doUI
?eyeFlyEnabled@@3HA DD 01H DUP (?)			; eyeFlyEnabled
?NoRudder@@3HA DD 01H DUP (?)				; NoRudder
?DisableSmoothing@@3HA DD 01H DUP (?)			; DisableSmoothing
_KeepFocus DD	01H DUP (?)
?FalconUIArtDirectory@@3PADA DB 0104H DUP (?)		; FalconUIArtDirectory
?FalconUIArtThrDirectory@@3PADA DB 0104H DUP (?)	; FalconUIArtThrDirectory
?FalconUISoundDirectory@@3PADA DB 0104H DUP (?)		; FalconUISoundDirectory
?FalconSoundThrDirectory@@3PADA DB 0104H DUP (?)	; FalconSoundThrDirectory
?FalconCockpitThrDirectory@@3PADA DB 0104H DUP (?)	; FalconCockpitThrDirectory
?FalconZipsThrDirectory@@3PADA DB 0104H DUP (?)		; FalconZipsThrDirectory
?FalconTacrefThrDirectory@@3PADA DB 0104H DUP (?)	; FalconTacrefThrDirectory
?FalconSplashThrDirectory@@3PADA DB 0104H DUP (?)	; FalconSplashThrDirectory
?mainMenuWnd@@3PAUHWND__@@A DD 01H DUP (?)		; mainMenuWnd
?mainAppWnd@@3PAUHWND__@@A DD 01H DUP (?)		; mainAppWnd
?doNetwork@@3HA DD 01H DUP (?)				; doNetwork
?numZips@@3HA DD 01H DUP (?)				; numZips
?resourceHandle@@3PAHA DD 01H DUP (?)			; resourceHandle
_BSS	ENDS
;	COMDAT ?WM_ATLGETHOST@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETHOST@ATL@@3IA DD 01H DUP (?)			; ATL::WM_ATLGETHOST
_BSS	ENDS
;	COMDAT ?WM_ATLGETCONTROL@ATL@@3IA
_BSS	SEGMENT
?WM_ATLGETCONTROL@ATL@@3IA DD 01H DUP (?)		; ATL::WM_ATLGETCONTROL
_BSS	ENDS
_BSS	SEGMENT
?VersionInfo@@3HA DD 01H DUP (?)			; VersionInfo
?winamp@@3PAVWinAmpFrontEnd@@A DD 01H DUP (?)		; winamp
?g_bHas3DNow@@3_NA DB 01H DUP (?)			; g_bHas3DNow
	ALIGN	4

?g_bEnableCockpitVerifier@@3_NA DB 01H DUP (?)		; g_bEnableCockpitVerifier
	ALIGN	4

?g_writeSndTbl@@3_NA DB 01H DUP (?)			; g_writeSndTbl
	ALIGN	4

?g_writeMissionTbl@@3_NA DB 01H DUP (?)			; g_writeMissionTbl
	ALIGN	4

?ShowVersion@@3HA DD 01H DUP (?)			; ShowVersion
_ObjectMap DB	024H DUP (?)
?radioLabel@@3PAVRadioSubTitle@@A DD 01H DUP (?)	; radioLabel
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
_BSS	SEGMENT
?wsadata@@3UWSAData@@A DB 0190H DUP (?)			; wsadata
_g_strLgbk DB	014H DUP (?)
?hInst@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; hInst
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::CVarTypeInfo<char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB DW 0cH	; ATL::CVarTypeInfo<tagVARIANT>::VT
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAG@ATL@@2GB DW 08H			; ATL::CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAG@ATL@@2GB DW 04008H		; ATL::CVarTypeInfo<unsigned short * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAG@ATL@@2QQtagVARIANT@@PAPAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAG@ATL@@2QQtagVARIANT@@PAPAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_VALUE@CRegParser@ATL@@1HB DD 01000H		; ATL::CRegParser::MAX_VALUE
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_TYPE@CRegParser@ATL@@1HB DD 01000H			; ATL::CRegParser::MAX_TYPE
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT
?cbNeverDelete@CRegParser@ATL@@1HB DD 0cH		; ATL::CRegParser::cbNeverDelete
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?rcDefault@CWindow@ATL@@2UtagRECT@@A
_DATA	SEGMENT
?rcDefault@CWindow@ATL@@2UtagRECT@@A DD 080000000H	; ATL::CWindow::rcDefault
	DD	080000000H
	DD	00H
	DD	00H
_DATA	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
?weatherCondition@@3HA DD 01H				; weatherCondition
_DATA	ENDS
;	COMDAT _LIBID_SHAREDLib
CONST	SEGMENT
_LIBID_SHAREDLib DD 0890a47f1H
	DW	0d62fH
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _CLSID_Host
CONST	SEGMENT
_CLSID_Host DD	0b6b03a0dH
	DW	0d547H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _IID_IHost
CONST	SEGMENT
_IID_IHost DD	0b6b03a0cH
	DW	0d547H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _CLSID_Player
CONST	SEGMENT
_CLSID_Player DD 0546dbb68H
	DW	0338fH
	DW	04c04H
	DB	083H
	DB	0b7H
	DB	0dbH
	DB	0c0H
	DB	0efH
	DB	08fH
	DB	09H
	DB	0a6H
CONST	ENDS
;	COMDAT _IID_IPlayer
CONST	SEGMENT
_IID_IPlayer DD	0dda57125H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _CLSID_RemoteMasterServer
CONST	SEGMENT
_CLSID_RemoteMasterServer DD 045292708H
	DW	037a2H
	DW	0483bH
	DB	08eH
	DB	04aH
	DB	0e3H
	DB	0b6H
	DB	01fH
	DB	053H
	DB	07aH
	DB	0fH
CONST	ENDS
;	COMDAT _IID_IMasterServer
CONST	SEGMENT
_IID_IMasterServer DD 0dda57127H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServer
CONST	SEGMENT
_IID_IRemoteMasterServer DD 0e0016343H
	DW	04124H
	DW	048a9H
	DB	097H
	DB	034H
	DB	093H
	DB	0f4H
	DB	087H
	DB	00H
	DB	0a0H
	DB	04aH
CONST	ENDS
;	COMDAT _IID_IRemoteMasterServerEvents
CONST	SEGMENT
_IID_IRemoteMasterServerEvents DD 036b5b50dH
	DW	069bbH
	DW	043d5H
	DB	083H
	DB	0f6H
	DB	0aaH
	DB	0f7H
	DB	0ebH
	DB	09fH
	DB	0ffH
	DB	07bH
CONST	ENDS
;	COMDAT _IID_IGame
CONST	SEGMENT
_IID_IGame DD	0dda57123H
	DW	0d4e3H
	DW	011d2H
	DB	090H
	DB	018H
	DB	00H
	DB	04fH
	DB	04eH
	DB	00H
	DB	063H
	DB	098H
CONST	ENDS
;	COMDAT _IID_IGameEvents
CONST	SEGMENT
_IID_IGameEvents DD 0b8d1f614H
	DW	0d5e4H
	DW	04bd1H
	DB	08fH
	DB	01H
	DB	017H
	DB	037H
	DB	01dH
	DB	0eaH
	DB	0f6H
	DB	085H
CONST	ENDS
_DATA	SEGMENT
	ORG $+4
?top_space@@3PADA DB '                                                   '
	DB	'                            ', 00H		; top_space
?program_name@@3PADA DB '    ****    Falcon 4.0    ****    ', 00H ; program_name
	ORG $+5
?legal_crap@@3PADA DB '    ****    (c)1998 MicroProse, Inc. All Rights Re'
	DB	'served.    ****    ', 00H			; legal_crap
	ORG $+2
?bottom_space@@3PADA DB '                                                '
	DB	'                               ', 00H	; bottom_space
?wait_for_loaded@@3HA DD 01H				; wait_for_loaded
_lTestVar DD	01H
?NumHats@@3HA DD 0ffffffffH				; NumHats
?auto_start@@3HA DD 01H					; auto_start
?intro_movie@@3HA DD 01H				; intro_movie
?SimPathHandle@@3HA DD 0ffffffffH			; SimPathHandle
?SecretCode@@3PADA DB 'SecretCodeGoesHere', 00H		; SecretCode
	ORG $+1
?lTestVarString@@3PADA DB 'JustForGilman1', 00H		; lTestVarString
	ORG $+1
?MajorVersion@@3HA DD 01H				; MajorVersion
?MinorVersion@@3HA DD 0dH				; MinorVersion
?BuildNumber@@3HA DD 04fc6H				; BuildNumber
_DATA	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

	jmp	DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	esi
	mov	DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

	xor	esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

	call	DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

	push	7
	lea	ecx, DWORD PTR _szACP$[esp+20]
	push	ecx
	push	4100					; 00001004H
	push	eax
	call	DWORD PTR __imp__GetLocaleInfoA@16
	test	eax, eax
	je	SHORT $L241603

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

	mov	al, BYTE PTR _szACP$[esp+16]
	test	al, al
	lea	ecx, DWORD PTR _szACP$[esp+16]
	je	SHORT $L241603
	npad	6
$L32341:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

	movsx	eax, al
	lea	edx, DWORD PTR [esi+esi*4]
	inc	ecx
	lea	esi, DWORD PTR [eax+edx*2-48]
	mov	al, BYTE PTR [ecx]
	test	al, al
	jne	SHORT $L32341

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

	test	esi, esi
	jne	SHORT $L241604
$L241603:

; 121  : 		nACP = ::GetACP();

	call	DWORD PTR __imp__GetACP@0
	pop	esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+12]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 12					; 0000000cH
	ret	0
$L241604:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+16]
	mov	eax, esi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 12					; 0000000cH
	ret	0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogtpy
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

	mov	eax, 3

; 129  : }

	ret	0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

	sub	esp, 152				; 00000098H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

	lea	eax, DWORD PTR _ver$[esp+152]
	push	eax
	mov	DWORD PTR _ver$[esp+156], 148		; 00000094H
	call	DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

	cmp	DWORD PTR _ver$[esp+168], 2
	jne	SHORT $L32351
	cmp	DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

	mov	eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
	jae	SHORT $L32352
$L32351:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

	mov	eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L32352:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

	push	eax
	push	OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	call	DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+152]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	ret	0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
EXTRN	__imp__RaiseException@16:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
_dwExceptionCode$ = 8					; size = 4
_dwExceptionFlags$ = 12					; size = 4
?_AtlRaiseException@ATL@@YAXKK@Z PROC NEAR		; ATL::_AtlRaiseException, COMDAT

; 27   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

	mov	eax, DWORD PTR _dwExceptionFlags$[esp-4]
	mov	ecx, DWORD PTR _dwExceptionCode$[esp-4]
	push	0
	push	0
	push	eax
	push	ecx
	call	DWORD PTR __imp__RaiseException@16

; 28   : }

	ret	0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
PUBLIC	??0CComCriticalSection@ATL@@QAE@XZ		; ATL::CComCriticalSection::CComCriticalSection
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComCriticalSection@ATL@@QAE@XZ PROC NEAR		; ATL::CComCriticalSection::CComCriticalSection, COMDAT
; _this$ = ecx

; 114  : 	CComCriticalSection() throw()

	mov	eax, ecx

; 115  : 	{
; 116  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

	xor	ecx, ecx
	mov	edx, eax
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
	mov	DWORD PTR [edx+20], ecx

; 117  : 	}

	ret	0
??0CComCriticalSection@ATL@@QAE@XZ ENDP			; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
PUBLIC	?Init@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Init
EXTRN	__imp__InitializeCriticalSection@4:NEAR
EXTRN	__except_handler3:NEAR
EXTRN	__except_list:DWORD
;	COMDAT CONST
CONST	SEGMENT
$T241634 DD	0ffffffffH
	DD	FLAT:$L241629
	DD	FLAT:$L241630
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Init@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
$T241633 = -28						; size = 4
__$SEHRec$ = -24					; size = 24
?Init@CComCriticalSection@ATL@@QAEJXZ PROC NEAR		; ATL::CComCriticalSection::Init, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET FLAT:$T241634
	push	OFFSET FLAT:__except_handler3
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 130  : 		HRESULT hRes = S_OK;

	xor	esi, esi

; 131  : 		__try

	mov	DWORD PTR __$SEHRec$[ebp+20], esi

; 132  : 		{
; 133  : 			InitializeCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__InitializeCriticalSection@4
	jmp	SHORT $L241639
$L241629:
$L241640:

; 134  : 		}
; 135  : 		// structured exception may be raised in low memory situations
; 136  : 		__except(EXCEPTION_EXECUTE_HANDLER)

	mov	eax, DWORD PTR __$SEHRec$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T241633[ebp], edx
	mov	eax, 1
$L241638:
$L241631:
	ret	0
$L241630:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 137  : 		{
; 138  : 			if (STATUS_NO_MEMORY == GetExceptionCode())

	xor	eax, eax
	cmp	DWORD PTR $T241633[ebp], -1073741801	; c0000017H
	setne	al
	dec	eax
	and	eax, 442377				; 0006c009H
	add	eax, -2147467259			; 80004005H
	mov	esi, eax
$L241639:
	mov	DWORD PTR __$SEHRec$[ebp+20], -1

; 139  : 				hRes = E_OUTOFMEMORY;
; 140  : 			else
; 141  : 				hRes = E_FAIL;
; 142  : 		}
; 143  : 		return hRes;

	mov	eax, esi

; 144  : 	}

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
PUBLIC	?Term@CComCriticalSection@ATL@@QAEJXZ		; ATL::CComCriticalSection::Term
EXTRN	__imp__DeleteCriticalSection@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT
?Term@CComCriticalSection@ATL@@QAEJXZ PROC NEAR		; ATL::CComCriticalSection::Term, COMDAT
; _this$ = ecx

; 148  : 		DeleteCriticalSection(&m_sec);

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 149  : 		return S_OK;

	xor	eax, eax

; 150  : 	}	

	ret	0
?Term@CComCriticalSection@ATL@@QAEJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ PROC NEAR ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT
; _this$ = ecx

; 207  : 		return m_hInst;

	mov	eax, DWORD PTR [ecx+4]

; 208  : 	}

	ret	0
?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
EXTRN	__imp__SysFreeString@4:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComBSTR@ATL@@QAE@XZ PROC NEAR			; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 651  : 		::SysFreeString(m_str);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp__SysFreeString@4

; 652  : 	}

	ret	0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
PUBLIC	??0_ATL_MODULE70@ATL@@QAE@XZ			; ATL::_ATL_MODULE70::_ATL_MODULE70
; Function compile flags: /Ogtpy
;	COMDAT ??0_ATL_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_MODULE70@ATL@@QAE@XZ PROC NEAR			; ATL::_ATL_MODULE70::_ATL_MODULE70, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	lea	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
	mov	DWORD PTR [edx+20], ecx
	ret	0
??0_ATL_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_MODULE70::_ATL_MODULE70
_TEXT	ENDS
PUBLIC	?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init
EXTRN	?_AtlComModule@ATL@@3VCAtlComModule@1@A:BYTE	; ATL::_AtlComModule
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
_plibid$ = 16						; size = 4
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z PROC NEAR ; ATL::CComModule::Init, COMDAT
; _this$ = ecx

; 6476 : 	if (plibid != NULL)

	mov	eax, DWORD PTR _plibid$[esp-4]
	test	eax, eax
	je	SHORT $L71870

; 6477 : 		m_libid = *plibid;

	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A, edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+4, edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+8, edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR ?m_libid@CAtlModule@ATL@@2U_GUID@@A+12, eax
$L71870:
	push	esi

; 6478 : 
; 6479 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 6480 : 	if (p != (_ATL_OBJMAP_ENTRY*)-1)

	mov	esi, DWORD PTR _p$[esp]
	cmp	esi, -1
	je	SHORT $L71877

; 6481 : 	{
; 6482 : 		m_pObjMap = p;
; 6483 : 		if (m_pObjMap != NULL)

	test	esi, esi
	mov	DWORD PTR [ecx+44], esi
	je	SHORT $L71877

; 6484 : 		{
; 6485 : 			pEntry = m_pObjMap;
; 6486 : 			while (pEntry->pclsid != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $L71877
$L71876:

; 6487 : 			{
; 6488 : 				pEntry->pfnObjectMain(true); //initialize class resources

	push	1
	call	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi+36]

; 6489 : 				pEntry++;

	add	esi, 36					; 00000024H
	test	eax, eax
	jne	SHORT $L71876
$L71877:

; 6490 : 			}
; 6491 : 		}
; 6492 : 	}
; 6493 : 	for (_ATL_OBJMAP_ENTRY** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

	mov	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jae	SHORT $L241665
	npad	3
$L71879:

; 6494 : 	{
; 6495 : 		if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L71880

; 6496 : 			(*ppEntry)->pfnObjectMain(true); //initialize class resources

	push	1
	call	DWORD PTR [eax+32]
$L71880:
	mov	eax, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	add	esi, 4
	cmp	esi, eax
	jb	SHORT $L71879
$L241665:

; 6497 : 	}
; 6498 : 	return S_OK;

	xor	eax, eax
	pop	esi

; 6499 : }

	ret	12					; 0000000cH
?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ENDP ; ATL::CComModule::Init
_TEXT	ENDS
PUBLIC	?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.inl
;	COMDAT ?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z PROC NEAR ; ATL::AtlWinModuleInit, COMDAT

; 353  : 	if (pWinModule == NULL)

	mov	eax, DWORD PTR _pWinModule$[esp-4]
	test	eax, eax

; 354  : 		return E_INVALIDARG;

	je	SHORT $L241669

; 355  : 		
; 356  : 	// check only in the DLL
; 357  : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	DWORD PTR [eax], 44			; 0000002cH
	je	SHORT $L72441
$L241669:

; 358  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H

; 363  : 	if (FAILED(hr))
; 364  : 	{
; 365  : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));
; 366  : 		ATLASSERT(0);
; 367  : 	}
; 368  : 	return hr;
; 369  : }

	ret	4
$L72441:

; 359  : 
; 360  : 	pWinModule->m_pCreateWndList = NULL;
; 361  : 
; 362  : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+28], 0
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init

; 363  : 	if (FAILED(hr))
; 364  : 	{
; 365  : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));
; 366  : 		ATLASSERT(0);
; 367  : 	}
; 368  : 	return hr;
; 369  : }

	ret	4
?AtlWinModuleInit@ATL@@YGJPAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
PUBLIC	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z	; ATL::AtlCallTermFunc
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT
_pModule$ = 8						; size = 4
?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z PROC NEAR ; ATL::AtlCallTermFunc, COMDAT

; 406  : {

	push	ebx

; 407  : 	if (pModule == NULL)

	mov	ebx, DWORD PTR _pModule$[esp]
	test	ebx, ebx
	jne	SHORT $L72472

; 408  : 		_AtlRaiseException(EXCEPTION_ACCESS_VIOLATION);

	push	ebx
	push	ebx
	push	1
	push	-1073741819				; c0000005H
	call	DWORD PTR __imp__RaiseException@16
$L241680:
$L72472:
	push	esi

; 409  : 		
; 410  : 	_ATL_TERMFUNC_ELEM* pElem = pModule->m_pTermFuncs;

	mov	esi, DWORD PTR [ebx+8]

; 411  : 	_ATL_TERMFUNC_ELEM* pNext = NULL;
; 412  : 	while (pElem != NULL)

	test	esi, esi
	je	SHORT $L72478
	push	edi
$L72477:

; 413  : 	{
; 414  : 		pElem->pFunc(pElem->dw);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	DWORD PTR [esi]

; 415  : 		pNext = pElem->pNext;

	mov	edi, DWORD PTR [esi+8]

; 416  : 		delete pElem;

	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	test	edi, edi

; 417  : 		pElem = pNext;

	mov	esi, edi
	jne	SHORT $L72477
	pop	edi
$L72478:
	pop	esi

; 418  : 	}
; 419  : 	pModule->m_pTermFuncs = NULL;

	mov	DWORD PTR [ebx+8], 0
	pop	ebx

; 420  : }

	ret	4
$L241679:
?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ENDP	; ATL::AtlCallTermFunc
_TEXT	ENDS
PUBLIC	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
; Function compile flags: /Ogtpy
;	COMDAT ??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
_TEXT	SEGMENT
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::~stringdispid, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
	ret	0
??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ ENDP	; ATL::CComTypeInfoHolder::stringdispid::~stringdispid
_TEXT	ENDS
PUBLIC	??0Data_t@_bstr_t@@QAE@PBD@Z			; _bstr_t::Data_t::Data_t
EXTRN	?ConvertStringToBSTR@_com_util@@YGPAGPBD@Z:NEAR	; _com_util::ConvertStringToBSTR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
;	COMDAT ??0Data_t@_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0Data_t@_bstr_t@@QAE@PBD@Z PROC NEAR			; _bstr_t::Data_t::Data_t, COMDAT
; _this$ = ecx

; 605  :     m_wstr = _com_util::ConvertStringToBSTR(s);

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	push	eax
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 1
	call	?ConvertStringToBSTR@_com_util@@YGPAGPBD@Z ; _com_util::ConvertStringToBSTR
	mov	DWORD PTR [esi], eax

; 606  : }

	mov	eax, esi
	pop	esi
	ret	4
??0Data_t@_bstr_t@@QAE@PBD@Z ENDP			; _bstr_t::Data_t::Data_t
_TEXT	ENDS
PUBLIC	?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ		; _bstr_t::Data_t::GetWString
; Function compile flags: /Ogtpy
;	COMDAT ?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ
_TEXT	SEGMENT
?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ PROC NEAR	; _bstr_t::Data_t::GetWString, COMDAT
; _this$ = ecx

; 725  : {

	mov	eax, ecx

; 726  :     return m_wstr;
; 727  : }

	ret	0
?GetWString@Data_t@_bstr_t@@QAEAAPAGXZ ENDP		; _bstr_t::Data_t::GetWString
_TEXT	ENDS
PUBLIC	??2Data_t@_bstr_t@@SAPAXI@Z			; _bstr_t::Data_t::operator new
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogtpy
;	COMDAT ??2Data_t@_bstr_t@@SAPAXI@Z
_TEXT	SEGMENT
_sz$ = 8						; size = 4
??2Data_t@_bstr_t@@SAPAXI@Z PROC NEAR			; _bstr_t::Data_t::operator new, COMDAT

; 828  :     return ::operator new(sz);

	jmp	??2@YAPAXI@Z				; operator new
??2Data_t@_bstr_t@@SAPAXI@Z ENDP			; _bstr_t::Data_t::operator new
_TEXT	ENDS
PUBLIC	?_Free@Data_t@_bstr_t@@AAEXXZ			; _bstr_t::Data_t::_Free
EXTRN	??_V@YAXPAX@Z:NEAR				; operator delete[]
; Function compile flags: /Ogtpy
;	COMDAT ?_Free@Data_t@_bstr_t@@AAEXXZ
_TEXT	SEGMENT
?_Free@Data_t@_bstr_t@@AAEXXZ PROC NEAR			; _bstr_t::Data_t::_Free, COMDAT
; _this$ = ecx

; 842  : {

	push	esi
	mov	esi, ecx

; 843  :     if (m_wstr != NULL) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L76780

; 844  :         ::SysFreeString(m_wstr);

	push	eax
	call	DWORD PTR __imp__SysFreeString@4
$L76780:

; 845  :     }
; 846  : 
; 847  :     if (m_str != NULL) {

	mov	esi, DWORD PTR [esi+4]
	test	esi, esi
	je	SHORT $L76781

; 848  :         delete [] m_str;

	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L76781:
	pop	esi

; 849  :     }
; 850  : }

	ret	0
?_Free@Data_t@_bstr_t@@AAEXXZ ENDP			; _bstr_t::Data_t::_Free
_TEXT	ENDS
PUBLIC	??1_com_error@@UAE@XZ				; _com_error::~_com_error
PUBLIC	??_7_com_error@@6B@				; _com_error::`vftable'
PUBLIC	??_G_com_error@@UAEPAXI@Z			; _com_error::`scalar deleting destructor'
EXTRN	__imp__LocalFree@4:NEAR
EXTRN	??_E_com_error@@UAEPAXI@Z:NEAR			; _com_error::`vector deleting destructor'
;	COMDAT ??_7_com_error@@6B@
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comdef.h
CONST	SEGMENT
??_7_com_error@@6B@ DD FLAT:??_E_com_error@@UAEPAXI@Z	; _com_error::`vftable'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1_com_error@@UAE@XZ
_TEXT	SEGMENT
??1_com_error@@UAE@XZ PROC NEAR				; _com_error::~_com_error, COMDAT
; _this$ = ecx

; 144  : {

	push	esi
	mov	esi, ecx

; 145  :     if (m_perrinfo != NULL) {

	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	mov	DWORD PTR [esi], OFFSET FLAT:??_7_com_error@@6B@
	je	SHORT $L77554

; 146  :         m_perrinfo->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L77554:

; 147  :     }
; 148  :     if (m_pszMsg != NULL) {

	mov	esi, DWORD PTR [esi+12]
	test	esi, esi
	je	SHORT $L77555

; 149  :         LocalFree((HLOCAL)m_pszMsg);

	push	esi
	call	DWORD PTR __imp__LocalFree@4
$L77555:
	pop	esi

; 150  :     }
; 151  : }

	ret	0
??1_com_error@@UAE@XZ ENDP				; _com_error::~_com_error
_TEXT	ENDS
PUBLIC	?Error@_com_error@@QBEJXZ			; _com_error::Error
; Function compile flags: /Ogtpy
;	COMDAT ?Error@_com_error@@QBEJXZ
_TEXT	SEGMENT
?Error@_com_error@@QBEJXZ PROC NEAR			; _com_error::Error, COMDAT
; _this$ = ecx

; 164  :     return m_hresult;

	mov	eax, DWORD PTR [ecx+4]

; 165  : }

	ret	0
?Error@_com_error@@QBEJXZ ENDP				; _com_error::Error
_TEXT	ENDS
PUBLIC	?getSubtitles@PlayerOptionsClass@@QBE_NXZ	; PlayerOptionsClass::getSubtitles
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?getSubtitles@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT
?getSubtitles@PlayerOptionsClass@@QBE_NXZ PROC NEAR	; PlayerOptionsClass::getSubtitles, COMDAT
; _this$ = ecx

; 178  : 	bool getSubtitles(void) const							{ return subTitles; }			// Retro 25Dec2003

	mov	al, BYTE PTR [ecx+204]
	ret	0
?getSubtitles@PlayerOptionsClass@@QBE_NXZ ENDP		; PlayerOptionsClass::getSubtitles
_TEXT	ENDS
PUBLIC	?Get3dTrackIR@PlayerOptionsClass@@QBE_NXZ	; PlayerOptionsClass::Get3dTrackIR
; Function compile flags: /Ogtpy
;	COMDAT ?Get3dTrackIR@PlayerOptionsClass@@QBE_NXZ
_TEXT	SEGMENT
?Get3dTrackIR@PlayerOptionsClass@@QBE_NXZ PROC NEAR	; PlayerOptionsClass::Get3dTrackIR, COMDAT
; _this$ = ecx

; 180  : 	bool Get3dTrackIR(void) const                           { return TrackIR_3d; }			// Retro 27Dec2003

	mov	al, BYTE PTR [ecx+206]
	ret	0
?Get3dTrackIR@PlayerOptionsClass@@QBE_NXZ ENDP		; PlayerOptionsClass::Get3dTrackIR
_TEXT	ENDS
PUBLIC	?GetKeyfile@PlayerOptionsClass@@QAEPADXZ	; PlayerOptionsClass::GetKeyfile
; Function compile flags: /Ogtpy
;	COMDAT ?GetKeyfile@PlayerOptionsClass@@QAEPADXZ
_TEXT	SEGMENT
?GetKeyfile@PlayerOptionsClass@@QAEPADXZ PROC NEAR	; PlayerOptionsClass::GetKeyfile, COMDAT
; _this$ = ecx

; 213  : 	_TCHAR *GetKeyfile(void)								{return keyfile;}

	lea	eax, DWORD PTR [ecx+164]
	ret	0
?GetKeyfile@PlayerOptionsClass@@QAEPADXZ ENDP		; PlayerOptionsClass::GetKeyfile
_TEXT	ENDS
PUBLIC	?SetSubtitles@PlayerOptionsClass@@QAEX_N@Z	; PlayerOptionsClass::SetSubtitles
; Function compile flags: /Ogtpy
;	COMDAT ?SetSubtitles@PlayerOptionsClass@@QAEX_N@Z
_TEXT	SEGMENT
_onOff$ = 8						; size = 1
?SetSubtitles@PlayerOptionsClass@@QAEX_N@Z PROC NEAR	; PlayerOptionsClass::SetSubtitles, COMDAT
; _this$ = ecx

; 227  : 	void SetSubtitles(bool onOff)							{ subTitles = onOff; }		// Retro 25Dec2003

	mov	al, BYTE PTR _onOff$[esp-4]
	mov	BYTE PTR [ecx+204], al
	ret	4
?SetSubtitles@PlayerOptionsClass@@QAEX_N@Z ENDP		; PlayerOptionsClass::SetSubtitles
_TEXT	ENDS
PUBLIC	?SetHeadTracking@OTWDriverClass@@QAEXH@Z	; OTWDriverClass::SetHeadTracking
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\sim\include\otwdrive.h
;	COMDAT ?SetHeadTracking@OTWDriverClass@@QAEXH@Z
_TEXT	SEGMENT
_flag$ = 8						; size = 4
?SetHeadTracking@OTWDriverClass@@QAEXH@Z PROC NEAR	; OTWDriverClass::SetHeadTracking, COMDAT
; _this$ = ecx

; 884  :     void SetHeadTracking (int flag) {mUseHeadTracking = flag;}

	mov	eax, DWORD PTR _flag$[esp-4]
	mov	DWORD PTR [ecx+34016], eax
	ret	4
?SetHeadTracking@OTWDriverClass@@QAEXH@Z ENDP		; OTWDriverClass::SetHeadTracking
_TEXT	ENDS
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:NEAR ; VuSessionEntity::Game
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC NEAR ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	jmp	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
PUBLIC	?frontSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ ; ImageBuffer::frontSurface
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\graphics\include\imagebuf.h
;	COMDAT ?frontSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ
_TEXT	SEGMENT
?frontSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ PROC NEAR ; ImageBuffer::frontSurface, COMDAT
; _this$ = ecx

; 43   : 	IDirectDrawSurface7 *frontSurface()	{ return m_pDDSFront; };

	mov	eax, DWORD PTR [ecx+12]
	ret	0
?frontSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ ENDP ; ImageBuffer::frontSurface
_TEXT	ENDS
PUBLIC	?SetCreationIter@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreationIter
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreationIter@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_rand$ = 8						; size = 4
?SetCreationIter@CampaignClass@@QAEXJ@Z PROC NEAR	; CampaignClass::SetCreationIter, COMDAT
; _this$ = ecx

; 212  : 	void SetCreationIter(long rand) { CreationRand=rand; }

	mov	eax, DWORD PTR _rand$[esp-4]
	mov	DWORD PTR [ecx+352], eax
	ret	4
?SetCreationIter@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreationIter
_TEXT	ENDS
PUBLIC	?GetCreationIter@CampaignClass@@QAEJXZ		; CampaignClass::GetCreationIter
; Function compile flags: /Ogtpy
;	COMDAT ?GetCreationIter@CampaignClass@@QAEJXZ
_TEXT	SEGMENT
?GetCreationIter@CampaignClass@@QAEJXZ PROC NEAR	; CampaignClass::GetCreationIter, COMDAT
; _this$ = ecx

; 215  : 	long GetCreationIter()			{ return(CreationRand); }

	mov	eax, DWORD PTR [ecx+352]
	ret	0
?GetCreationIter@CampaignClass@@QAEJXZ ENDP		; CampaignClass::GetCreationIter
_TEXT	ENDS
PUBLIC	?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ ; DisplayDevice::GetImageBuffer
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\graphics\include\device.h
;	COMDAT ?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ PROC NEAR ; DisplayDevice::GetImageBuffer, COMDAT
; _this$ = ecx

; 28   : 	ImageBuffer*	GetImageBuffer( void )			{ return &image; };

	lea	eax, DWORD PTR [ecx+12]
	ret	0
?GetImageBuffer@DisplayDevice@@QAEPAVImageBuffer@@XZ ENDP ; DisplayDevice::GetImageBuffer
_TEXT	ENDS
PUBLIC	?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ ; FalconDisplayConfiguration::GetImageBuffer
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\falclib\include\dispcfg.h
;	COMDAT ?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ
_TEXT	SEGMENT
?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ PROC NEAR ; FalconDisplayConfiguration::GetImageBuffer, COMDAT
; _this$ = ecx

; 39   : 	ImageBuffer* GetImageBuffer() {return theDisplayDevice.GetImageBuffer();};

	lea	eax, DWORD PTR [ecx+148]
	ret	0
?GetImageBuffer@FalconDisplayConfiguration@@QAEPAVImageBuffer@@XZ ENDP ; FalconDisplayConfiguration::GetImageBuffer
_TEXT	ENDS
PUBLIC	??0TrackIR@@QAE@XZ				; TrackIR::TrackIR
EXTRN	__fltused:NEAR
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\sim\include\trackir.h
;	COMDAT ??0TrackIR@@QAE@XZ
_TEXT	SEGMENT
??0TrackIR@@QAE@XZ PROC NEAR				; TrackIR::TrackIR, COMDAT
; _this$ = ecx

; 7    : 	TrackIR()

	mov	eax, ecx
	xor	ecx, ecx

; 8    : 			{	FrameSignature = missedFrameCount = Pit_2d_Yaw = Pit_2d_Yaw = 0;
; 9    : 				panningAllowed = isActive = true;

	mov	dl, 1
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], ecx
	mov	BYTE PTR [eax+9], dl
	mov	BYTE PTR [eax+8], dl

; 10   : 				yaw = pitch = roll = x = y = z = 0;

	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+20], ecx

; 11   : 			};

	ret	0
??0TrackIR@@QAE@XZ ENDP					; TrackIR::TrackIR
_TEXT	ENDS
PUBLIC	??1TrackIR@@QAE@XZ				; TrackIR::~TrackIR
; Function compile flags: /Ogtpy
;	COMDAT ??1TrackIR@@QAE@XZ
_TEXT	SEGMENT
??1TrackIR@@QAE@XZ PROC NEAR				; TrackIR::~TrackIR, COMDAT
; _this$ = ecx

; 12   : 	~TrackIR() {};

	ret	0
??1TrackIR@@QAE@XZ ENDP					; TrackIR::~TrackIR
_TEXT	ENDS
PUBLIC	?RegisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z	; ComSup::RegisterServer
PUBLIC	??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@	; `string'
EXTRN	__imp__GetProcAddress@8:NEAR
;	COMDAT ??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@
; File f:\projects\freefalcon\include\comsup.h
CONST	SEGMENT
??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@ DB 'DllRegisterServer', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?RegisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_hInst$ = 8						; size = 4
?RegisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z PROC NEAR	; ComSup::RegisterServer, COMDAT

; 126  : 		if(!hInst) return E_FAIL;

	mov	eax, DWORD PTR _hInst$[esp-4]
	test	eax, eax
	jne	SHORT $L230043
	mov	eax, -2147467259			; 80004005H

; 132  : 	}

	ret	0
$L230043:

; 127  : 	
; 128  : 		HRESULT (__stdcall *pprocDLLRegisterServer)() = (HRESULT (__stdcall *)())

	push	OFFSET FLAT:??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8

; 129  : 			GetProcAddress(hInst, "DllRegisterServer");
; 130  : 		if(!pprocDLLRegisterServer) return -2;

	test	eax, eax
	jne	SHORT $L230048
	mov	eax, -2					; fffffffeH

; 132  : 	}

	ret	0
$L230048:

; 131  : 		return pprocDLLRegisterServer();

	jmp	eax
?RegisterServer@ComSup@@YAJPAUHINSTANCE__@@@Z ENDP	; ComSup::RegisterServer
_TEXT	ENDS
PUBLIC	?RegisterServer@ComSup@@YAJPBD@Z		; ComSup::RegisterServer
EXTRN	__imp__LoadLibraryA@4:NEAR
EXTRN	__imp__FreeLibrary@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterServer@ComSup@@YAJPBD@Z
_TEXT	SEGMENT
_lpszServername$ = 8					; size = 4
?RegisterServer@ComSup@@YAJPBD@Z PROC NEAR		; ComSup::RegisterServer, COMDAT

; 136  : 		HINSTANCE hInst = LoadLibrary(lpszServername);	// retry

	mov	eax, DWORD PTR _lpszServername$[esp-4]
	push	esi
	push	eax
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	esi, eax

; 137  : 		if(!hInst) return E_FAIL;

	test	esi, esi
	jne	SHORT $L241760
	mov	eax, -2147467259			; 80004005H
	pop	esi

; 141  : 	}

	ret	0

; 138  : 		HRESULT hr = RegisterServer(hInst);

$L241760:
	push	edi
	push	OFFSET FLAT:??_C@_0BC@NPBLIDJ@DllRegisterServer?$AA@
	push	esi
	call	DWORD PTR __imp__GetProcAddress@8
	test	eax, eax
	jne	SHORT $L241762

; 139  : 		FreeLibrary(hInst);

	push	esi
	mov	edi, -2					; fffffffeH
	call	DWORD PTR __imp__FreeLibrary@4

; 140  : 		return hr;

	mov	eax, edi
	pop	edi
	pop	esi

; 141  : 	}

	ret	0

; 138  : 		HRESULT hr = RegisterServer(hInst);

$L241762:
	call	eax

; 139  : 		FreeLibrary(hInst);

	push	esi
	mov	edi, eax
	call	DWORD PTR __imp__FreeLibrary@4

; 140  : 		return hr;

	mov	eax, edi
	pop	edi
	pop	esi

; 141  : 	}

	ret	0
?RegisterServer@ComSup@@YAJPBD@Z ENDP			; ComSup::RegisterServer
_TEXT	ENDS
PUBLIC	?PutHeartbeatInterval@IUplink@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IUplink::PutHeartbeatInterval
PUBLIC	__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
EXTRN	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z:NEAR ; _com_issue_errorex
;	COMDAT __GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
; File f:\projects\freefalcon\build\release_win32\core.tli
CONST	SEGMENT
__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513 DD 05ff85b6bH
	DW	0de05H
	DW	042b9H
	DB	083H
	DB	01fH
	DB	0dcH
	DB	06aH
	DB	04eH
	DB	030H
	DB	0a5H
	DB	013H
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?PutHeartbeatInterval@IUplink@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
?PutHeartbeatInterval@IUplink@GNETCORELib@@QAEXJ@Z PROC NEAR ; GNETCORELib::IUplink::PutHeartbeatInterval, COMDAT
; _this$ = ecx

; 657  : inline void IUplink::PutHeartbeatInterval ( long pVal ) {

	push	esi
	mov	esi, ecx

; 658  :     HRESULT _hr = put_HeartbeatInterval(pVal);

	mov	ecx, DWORD PTR _pVal$[esp]
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	esi
	call	DWORD PTR [eax+16]

; 659  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232135
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232135:
	pop	esi

; 660  : }

	ret	4
?PutHeartbeatInterval@IUplink@GNETCORELib@@QAEXJ@Z ENDP	; GNETCORELib::IUplink::PutHeartbeatInterval
_TEXT	ENDS
PUBLIC	?PutMasterServerPort@IUplink@GNETCORELib@@QAEXJ@Z ; GNETCORELib::IUplink::PutMasterServerPort
; Function compile flags: /Ogtpy
;	COMDAT ?PutMasterServerPort@IUplink@GNETCORELib@@QAEXJ@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
?PutMasterServerPort@IUplink@GNETCORELib@@QAEXJ@Z PROC NEAR ; GNETCORELib::IUplink::PutMasterServerPort, COMDAT
; _this$ = ecx

; 681  : inline void IUplink::PutMasterServerPort ( long pVal ) {

	push	esi
	mov	esi, ecx

; 682  :     HRESULT _hr = put_MasterServerPort(pVal);

	mov	ecx, DWORD PTR _pVal$[esp]
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	esi
	call	DWORD PTR [eax+32]

; 683  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232165
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232165:
	pop	esi

; 684  : }

	ret	4
?PutMasterServerPort@IUplink@GNETCORELib@@QAEXJ@Z ENDP	; GNETCORELib::IUplink::PutMasterServerPort
_TEXT	ENDS
PUBLIC	?PutQueryPort@IUplink@GNETCORELib@@QAEXF@Z	; GNETCORELib::IUplink::PutQueryPort
; Function compile flags: /Ogtpy
;	COMDAT ?PutQueryPort@IUplink@GNETCORELib@@QAEXF@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 2
?PutQueryPort@IUplink@GNETCORELib@@QAEXF@Z PROC NEAR	; GNETCORELib::IUplink::PutQueryPort, COMDAT
; _this$ = ecx

; 753  : inline void IUplink::PutQueryPort ( short pVal ) {

	push	esi
	mov	esi, ecx

; 754  :     HRESULT _hr = put_QueryPort(pVal);

	mov	ecx, DWORD PTR _pVal$[esp]
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	esi
	call	DWORD PTR [eax+80]

; 755  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232257
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232257:
	pop	esi

; 756  : }

	ret	4
?PutQueryPort@IUplink@GNETCORELib@@QAEXF@Z ENDP		; GNETCORELib::IUplink::PutQueryPort
_TEXT	ENDS
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
?Online@UIComms@@QAEHXZ PROC NEAR			; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	mov	eax, DWORD PTR [ecx+64]
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
PUBLIC	?BuildAscii@@YAXXZ				; BuildAscii
EXTRN	__imp__VkKeyScanA@4:NEAR
EXTRN	__imp__MapVirtualKeyA@8:NEAR
EXTRN	?Key_Chart@@3PAUASCII_TABLE@@A:BYTE		; Key_Chart
EXTRN	_isalpha:NEAR
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
;	COMDAT ?BuildAscii@@YAXXZ
_TEXT	SEGMENT
tv269 = -4						; size = 4
?BuildAscii@@YAXXZ PROC NEAR				; BuildAscii, COMDAT

; 389  : {

	push	ecx
	push	ebx
	push	ebp

; 390  : 	short i,kbd,scan;
; 391  : 	short vkey,shiftstates;
; 392  : 
; 393  : 	for(i=31;i<256;i++)

	mov	ebp, DWORD PTR __imp__MapVirtualKeyA@8
	push	esi
	mov	ebx, 31					; 0000001fH
	push	edi
	mov	DWORD PTR tv269[esp+20], ebx
$L234128:

; 394  : 	{
; 395  : 		vkey=VkKeyScan(static_cast<char>(i));

	push	ebx
	call	DWORD PTR __imp__VkKeyScanA@4
	mov	esi, eax

; 396  : 		if(vkey != -1)

	cmp	si, -1
	je	SHORT $L234129
	movsx	edi, si

; 397  : 		{
; 398  : 			kbd = static_cast<short>(MapVirtualKey(vkey,2) & 0xff);

	push	2
	push	edi
	call	ebp

; 399  : 
; 400  : 			if(kbd)

	test	al, al
	je	SHORT $L234129

; 401  : 			{
; 402  : 				shiftstates = static_cast<short>((vkey >> 8) & 0x07);
; 403  : 				scan		= static_cast<short>(MapVirtualKey(vkey,0) & 0xff);

	push	0
	sar	esi, 8
	push	edi
	and	esi, 7
	call	ebp
	and	eax, 255				; 000000ffH

; 404  : 
; 405  : 				Key_Chart[scan].Ascii[shiftstates]= static_cast<char>(i);

	movsx	eax, ax
	shl	eax, 4
	movsx	ecx, si
	lea	esi, DWORD PTR [eax+ecx]

; 406  : 				Key_Chart[scan].Flags[shiftstates] |= _IS_ASCII_;

	mov	dl, BYTE PTR ?Key_Chart@@3PAUASCII_TABLE@@A[esi+8]
	or	dl, 1

; 407  : 				if(i >= '0' && i <= '9')

	cmp	bx, 48					; 00000030H
	mov	BYTE PTR ?Key_Chart@@3PAUASCII_TABLE@@A[esi], bl
	mov	BYTE PTR ?Key_Chart@@3PAUASCII_TABLE@@A[esi+8], dl
	mov	al, dl
	jl	SHORT $L234138
	cmp	bx, 57					; 00000039H
	jg	SHORT $L234138

; 408  : 					Key_Chart[scan].Flags[shiftstates] |= _IS_DIGIT_;

	or	al, 4
	mov	BYTE PTR ?Key_Chart@@3PAUASCII_TABLE@@A[esi+8], al
$L234138:

; 409  : 				if(isalpha(i))

	mov	edx, DWORD PTR tv269[esp+20]
	push	edx
	call	_isalpha
	add	esp, 4
	test	eax, eax
	je	SHORT $L234129

; 410  : 					Key_Chart[scan].Flags[shiftstates] |= _IS_ALPHA_;

	or	BYTE PTR ?Key_Chart@@3PAUASCII_TABLE@@A[esi+8], 2
$L234129:
	mov	ecx, DWORD PTR tv269[esp+20]
	inc	ebx
	inc	ecx
	cmp	bx, 256					; 00000100H
	mov	DWORD PTR tv269[esp+20], ecx
	jl	$L234128
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 411  : 			}
; 412  : 		}
; 413  : 	}
; 414  : }

	pop	ecx
	ret	0
?BuildAscii@@YAXXZ ENDP					; BuildAscii
_TEXT	ENDS
PUBLIC	?EndUI@@YAXXZ					; EndUI
EXTRN	?Suspend@CampaignClass@@QAEXXZ:NEAR		; CampaignClass::Suspend
EXTRN	?Resume@CampaignClass@@QAEXXZ:NEAR		; CampaignClass::Resume
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	__imp__SetFocus@4:NEAR
EXTRN	?UI_Cleanup@@YAXXZ:NEAR				; UI_Cleanup
; Function compile flags: /Ogtpy
;	COMDAT ?EndUI@@YAXXZ
_TEXT	SEGMENT
?EndUI@@YAXXZ PROC NEAR					; EndUI, COMDAT

; 785  : 	// Looking for multiplayer stomp...
; 786  : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 787  : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 788  : 
; 789  : 	doUI=FALSE;
; 790  : 	TheCampaign.Suspend();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR ?doUI@@3HA, 0			; doUI
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 791  : 	UI_Cleanup();

	call	?UI_Cleanup@@YAXXZ			; UI_Cleanup

; 792  : 	TheCampaign.Resume();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 793  : 	if (auto_start)

	mov	eax, DWORD PTR ?auto_start@@3HA		; auto_start
	test	eax, eax
	je	SHORT $L234426

; 794  : 	{
; 795  : 		SetFocus(mainMenuWnd);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	eax
	call	DWORD PTR __imp__SetFocus@4
$L234426:

; 796  : 	}
; 797  : }

	ret	0
?EndUI@@YAXXZ ENDP					; EndUI
_TEXT	ENDS
PUBLIC	?SimWndProc@@YGJPAUHWND__@@IIJ@Z		; SimWndProc
EXTRN	?_LeaveMode@FalconDisplayConfiguration@@IAEXXZ:NEAR ; FalconDisplayConfiguration::_LeaveMode
EXTRN	?_EnterMode@FalconDisplayConfiguration@@IAEXW4DisplayMode@1@HH@Z:NEAR ; FalconDisplayConfiguration::_EnterMode
EXTRN	?_ToggleFullScreen@FalconDisplayConfiguration@@IAEXXZ:NEAR ; FalconDisplayConfiguration::_ToggleFullScreen
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	__imp__PostMessageA@16:NEAR
EXTRN	__imp__DefWindowProcA@16:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?SimWndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SimWndProc@@YGJPAUHWND__@@IIJ@Z PROC NEAR		; SimWndProc, COMDAT

; 801  : LRESULT retval = 0;	
; 802  : 
; 803  : 	// Looking for multiplayer stomp...
; 804  : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 805  : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 806  : 
; 807  : 
; 808  : #ifdef _USE_SECRET_CODE_
; 809  : 	int i;
; 810  : 
; 811  : 	for(i=0;i<18;i++)
; 812  : 		if(PetersSecretCode[17-i] != SecretCode[i])
; 813  : 			break;
; 814  : 
; 815  : 	if(i != 18)
; 816  : 		message=WM_DESTROY;
; 817  : #endif // _USE_SECRET_CODE_
; 818  : 
; 819  : 	switch (message)

	mov	eax, DWORD PTR _message$[esp-4]
	push	esi
	xor	esi, esi
	cmp	eax, 1024				; 00000400H
	ja	SHORT $L241787
	je	SHORT $L234441
	mov	ecx, eax
	dec	ecx
	je	SHORT $L234438
	dec	ecx
	je	SHORT $L234439
	sub	ecx, 4
	jne	SHORT $L234450
$L234441:

; 955  :       break;
; 956  : 
; 957  :       case WM_ACTIVATE:
; 958  :          retval = 0;

	xor	eax, eax
	pop	esi

; 989  : }

	ret	16					; 00000010H
$L234439:

; 825  :       break;
; 826  : 
; 827  : 
; 828  : #ifdef _DEBUG	// We only care about these in debug mode
; 829  :       case WM_COMMAND:
; 830  :          switch (LOWORD(wParam))
; 831  :          {
; 832  :             case ID_SHOW_VERSION:
; 833  :                if (ShowVersion != 2)
; 834  :                   ShowVersion = 2;
; 835  :                else
; 836  :                   ShowVersion = 0;
; 837  :             break;
; 838  : 
; 839  :             case ID_SHOW_MAJOR_VERSION:
; 840  :                if (ShowVersion != 1)
; 841  :                   ShowVersion = 1;
; 842  :                else
; 843  :                   ShowVersion = 0;
; 844  :             break;
; 845  : 
; 846  :             case ID_FILE_EXIT:
; 847  : 				PostQuitMessage (0);
; 848  : 				retval = 0;
; 849  :             break;
; 850  : 
; 851  : 			case ID_CAMPAIGN_NEW:
; 852  : 				TheCampaign.NewCampaign((FalconGameType)lParam, "default");
; 853  : 				EnableCampaignMenus();
; 854  : 				break;
; 855  : 
; 856  : 			case ID_CAMPAIGN_LOAD:
; 857  : 				if (!OpenCampFile(hwnd))
; 858  : 					{
; 859  : 					TheCampaign.EndCampaign();
; 860  : 					return 0;
; 861  : 					}
; 862  : 				EnableMenuItem(GetMenu(hwnd), ID_CAMPAIGN_SAVE, MF_ENABLED);
; 863  : 				EnableCampaignMenus();
; 864  : 				break;
; 865  : 
; 866  : 			case ID_CAMPAIGN_EXIT:
; 867  : 				DisableCampaignMenus();
; 868  : 				TheCampaign.EndCampaign();
; 869  : #if CAMPTOOL
; 870  : 				if (hMainWnd)
; 871  : 					PostMessage (hMainWnd, WM_CLOSE, 0, 0);
; 872  : #endif
; 873  : 				DisableCampaignMenus();
; 874  : 				break;
; 875  : 
; 876  : 			case ID_CAMPAIGN_SAVE:
; 877  : 				SaveCampFile(hwnd,LOWORD(wParam));
; 878  : 				break;		
; 879  : 
; 880  : 			case ID_CAMPAIGN_SAVEAS:
; 881  : 			case ID_CAMPAIGN_SAVEALLAS:
; 882  : 			case ID_CAMPAIGN_SAVEINSTANTAS:
; 883  : 				SaveAsCampFile(hwnd,LOWORD(wParam));
; 884  : 				break;
; 885  : 
; 886  : 			case ID_CAMPAIGN_DISPLAY:
; 887  : #ifdef CAMPTOOL
; 888  : 				if (!displayCampaign)
; 889  : 					{
; 890  : 					CampMain (hInst, SW_SHOW);
; 891  : 					displayCampaign = TRUE;
; 892  : 					}
; 893  : 				else
; 894  : 					{
; 895  : 					if (hMainWnd)
; 896  : 						PostMessage (hMainWnd, WM_CLOSE, 0, 0);
; 897  : 					displayCampaign = FALSE;
; 898  : 					}
; 899  : 				CheckMenuItem(GetMenu(hwnd), ID_CAMPAIGN_DISPLAY, (displayCampaign ? MF_CHECKED : MF_UNCHECKED));
; 900  : #endif CAMPTOOL
; 901  : 				break;
; 902  : 
; 903  :             case ID_CAMPAIGN_PAUSED:
; 904  : 				if (gameCompressionRatio)
; 905  : 					SetTimeCompression(0);
; 906  : 				else
; 907  : 					SetTimeCompression(1);
; 908  : 				CheckMenuItem(GetMenu(hwnd), ID_CAMPAIGN_PAUSED, (gameCompressionRatio ? MF_UNCHECKED : MF_CHECKED));
; 909  : 				break;
; 910  : 
; 911  : #ifdef CAMPTOOL
; 912  : 			case ID_CAMPAIGN_SELECTSQUADRON:
; 913  : 				DialogBox(hInst,MAKEINTRESOURCE(IDD_SQUADRONDIALOG),mainMenuWnd,(DLGPROC)SelectSquadron);
; 914  : 				break;
; 915  : 
; 916  : 			case ID_CAMPAIGN_FLYMISSION:
; 917  : 				DialogBox(hInst,MAKEINTRESOURCE(IDD_MISSDIALOG),mainMenuWnd,(DLGPROC)SelectMission);
; 918  : 				break;
; 919  : 
; 920  : 			case ID_CAMPAIGN_RENAMINGON:
; 921  : 				gRenameIds = 1-gRenameIds;
; 922  : 				CheckMenuItem(GetMenu(hwnd), ID_CAMPAIGN_RENAMINGON, (gRenameIds ? MF_CHECKED : MF_UNCHECKED));
; 923  : 				break;
; 924  : #endif
; 925  : 
; 926  :             case ID_SOUND_START:
; 927  :                F4SoundStart();
; 928  :             break;
; 929  : 
; 930  :             case ID_SOUND_STOP:
; 931  :                F4SoundStop();
; 932  :             break;
; 933  : 
; 934  : 			case ID_VOICES_TOOL:
; 935  : 				DialogBox(hInst,MAKEINTRESOURCE(IDD_PLAYVOICES),FalconDisplay.appWin,(DLGPROC)PlayVoicesProc);
; 936  :             	break;
; 937  : 
; 938  : 			case ID_UI_AIRBASE:
; 939  : 				PostMessage(FalconDisplay.appWin,FM_START_UI,0,0); // Start UI
; 940  : #ifdef DEBUG
; 941  :             ShowCursor(FALSE); // Turn off mouse cursor for until EXIT in UI is selected
; 942  : #endif
; 943  : 				break;
; 944  :             default:
; 945  :                retval = 0;
; 946  :             break;
; 947  :          }
; 948  :       break;
; 949  : #endif // Debug stuff...
; 950  : 
; 951  : 
; 952  :       case WM_DESTROY :                    
; 953  :          PostMessage (hwnd, WM_COMMAND, ID_FILE_EXIT, 0);

	mov	eax, DWORD PTR _hwnd$[esp]
	push	0
	push	102					; 00000066H
	push	273					; 00000111H
	push	eax
	call	DWORD PTR __imp__PostMessageA@16

; 954  :          retval = 0;

	xor	eax, eax
	pop	esi

; 989  : }

	ret	16					; 00000010H
$L234438:

; 820  : 	{
; 821  : 
; 822  : 	case WM_CREATE :
; 823  :          SetFocus (hwnd);

	mov	ecx, DWORD PTR _hwnd$[esp]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4

; 824  :          retval = 0;

	xor	eax, eax
	pop	esi

; 989  : }

	ret	16					; 00000010H
$L241787:

; 801  : LRESULT retval = 0;	
; 802  : 
; 803  : 	// Looking for multiplayer stomp...
; 804  : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 805  : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 806  : 
; 807  : 
; 808  : #ifdef _USE_SECRET_CODE_
; 809  : 	int i;
; 810  : 
; 811  : 	for(i=0;i<18;i++)
; 812  : 		if(PetersSecretCode[17-i] != SecretCode[i])
; 813  : 			break;
; 814  : 
; 815  : 	if(i != 18)
; 816  : 		message=WM_DESTROY;
; 817  : #endif // _USE_SECRET_CODE_
; 818  : 
; 819  : 	switch (message)

	mov	ecx, eax
	sub	ecx, 1075				; 00000433H
	je	SHORT $L234442
	dec	ecx
	je	SHORT $L234448
	dec	ecx
	je	SHORT $L234449
$L234450:
	pop	esi

; 981  : 			break;
; 982  : 		}
; 983  : 
; 984  :       default:
; 985  :          retval = DefWindowProc (hwnd, message, wParam, lParam);

	mov	DWORD PTR _message$[esp-4], eax
	jmp	DWORD PTR __imp__DefWindowProcA@16
$L234449:

; 975  : 			break;
; 976  : 		}
; 977  : 
; 978  : 		case FM_DISP_TOGGLE_FULLSCREEN:
; 979  : 		{
; 980  : 			FalconDisplay._ToggleFullScreen();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_ToggleFullScreen@FalconDisplayConfiguration@@IAEXXZ ; FalconDisplayConfiguration::_ToggleFullScreen

; 986  :       break;
; 987  : 	}
; 988  : 	return retval;

	mov	eax, esi
	pop	esi

; 989  : }

	ret	16					; 00000010H
$L234448:

; 969  : 			break;
; 970  : 		}
; 971  : 
; 972  : 		case FM_DISP_LEAVE_MODE:
; 973  : 		{
; 974  : 			FalconDisplay._LeaveMode();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_LeaveMode@FalconDisplayConfiguration@@IAEXXZ ; FalconDisplayConfiguration::_LeaveMode

; 986  :       break;
; 987  : 	}
; 988  : 	return retval;

	mov	eax, esi
	pop	esi

; 989  : }

	ret	16					; 00000010H
$L234442:

; 959  :       break;
; 960  : 
; 961  :       case WM_USER:
; 962  :          retval = 0;
; 963  :       break;
; 964  : 
; 965  : 		// OW
; 966  : 		case FM_DISP_ENTER_MODE:
; 967  : 		{
; 968  : 			FalconDisplay._EnterMode((FalconDisplayConfiguration::DisplayMode) wParam, LOWORD(lParam), HIWORD(lParam));

	mov	eax, DWORD PTR _lParam$[esp]
	mov	ecx, eax
	shr	ecx, 16					; 00000010H
	movzx	edx, ax
	mov	eax, DWORD PTR _wParam$[esp]
	push	ecx
	push	edx
	push	eax
	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_EnterMode@FalconDisplayConfiguration@@IAEXW4DisplayMode@1@HH@Z ; FalconDisplayConfiguration::_EnterMode

; 986  :       break;
; 987  : 	}
; 988  : 	return retval;

	mov	eax, esi
	pop	esi

; 989  : }

	ret	16					; 00000010H
?SimWndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; SimWndProc
_TEXT	ENDS
PUBLIC	?get_ip@@YAHPAD@Z				; get_ip
EXTRN	_atoi:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?get_ip@@YAHPAD@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
?get_ip@@YAHPAD@Z PROC NEAR				; get_ip, COMDAT

; 993  : 	char
; 994  : 		*src;
; 995  : 
; 996  : 	unsigned int
; 997  : 		addr=0;
; 998  : 
; 999  : 	if(!str)

	mov	eax, DWORD PTR _str$[esp-4]
	push	edi
	xor	edi, edi
	test	eax, eax
	jne	SHORT $L234456
	pop	edi

; 1021 : 
; 1022 : 	return addr;
; 1023 : }

	ret	0
$L234456:

; 1000 : 		return 0;
; 1001 : 
; 1002 : 	src = str;
; 1003 : 
; 1004 : 	while (*src)

	cmp	BYTE PTR [eax], 0
	push	esi
	mov	esi, eax
	je	SHORT $L234459
$L234458:

; 1005 : 	{
; 1006 : 		if (*src == '.')

	cmp	BYTE PTR [esi], 46			; 0000002eH
	jne	SHORT $L234460

; 1007 : 		{
; 1008 : 			*src = 0;
; 1009 : 			addr = addr * 256 + atoi (str);

	push	eax
	mov	BYTE PTR [esi], 0
	call	_atoi
	shl	edi, 8
	add	edi, eax
	add	esp, 4

; 1010 : 			*src = '.';

	mov	BYTE PTR [esi], 46			; 0000002eH

; 1011 : 			src ++;

	inc	esi

; 1012 : 			str = src;

	mov	eax, esi

; 1013 : 		}
; 1014 : 		else

	jmp	SHORT $L234461
$L234460:

; 1015 : 		{
; 1016 : 			src ++;

	inc	esi
$L234461:

; 1000 : 		return 0;
; 1001 : 
; 1002 : 	src = str;
; 1003 : 
; 1004 : 	while (*src)

	cmp	BYTE PTR [esi], 0
	jne	SHORT $L234458
$L234459:

; 1017 : 		}
; 1018 : 	}
; 1019 : 
; 1020 : 	addr = addr * 256 + atoi (str);

	push	eax
	call	_atoi
	add	esp, 4
	shl	edi, 8
	pop	esi
	add	eax, edi
	pop	edi

; 1021 : 
; 1022 : 	return addr;
; 1023 : }

	ret	0
?get_ip@@YAHPAD@Z ENDP					; get_ip
_TEXT	ENDS
PUBLIC	??_GRadioSubTitle@@QAEPAXI@Z			; RadioSubTitle::`scalar deleting destructor'
EXTRN	??1RadioSubTitle@@QAE@XZ:NEAR			; RadioSubTitle::~RadioSubTitle
; Function compile flags: /Ogtpy
;	COMDAT ??_GRadioSubTitle@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GRadioSubTitle@@QAEPAXI@Z PROC NEAR			; RadioSubTitle::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1RadioSubTitle@@QAE@XZ		; RadioSubTitle::~RadioSubTitle
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L241797
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L241797:
	mov	eax, esi
	pop	esi
	ret	4
??_GRadioSubTitle@@QAEPAXI@Z ENDP			; RadioSubTitle::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GWinAmpFrontEnd@@QAEPAXI@Z			; WinAmpFrontEnd::`scalar deleting destructor'
EXTRN	??1WinAmpFrontEnd@@QAE@XZ:NEAR			; WinAmpFrontEnd::~WinAmpFrontEnd
; Function compile flags: /Ogtpy
;	COMDAT ??_GWinAmpFrontEnd@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GWinAmpFrontEnd@@QAEPAXI@Z PROC NEAR			; WinAmpFrontEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1WinAmpFrontEnd@@QAE@XZ		; WinAmpFrontEnd::~WinAmpFrontEnd
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L241801
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L241801:
	mov	eax, esi
	pop	esi
	ret	4
??_GWinAmpFrontEnd@@QAEPAXI@Z ENDP			; WinAmpFrontEnd::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GUIComms@@QAEPAXI@Z				; UIComms::`scalar deleting destructor'
EXTRN	??1UIComms@@QAE@XZ:NEAR				; UIComms::~UIComms
; Function compile flags: /Ogtpy
;	COMDAT ??_GUIComms@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GUIComms@@QAEPAXI@Z PROC NEAR			; UIComms::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1UIComms@@QAE@XZ			; UIComms::~UIComms
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L241805
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L241805:
	mov	eax, esi
	pop	esi
	ret	4
??_GUIComms@@QAEPAXI@Z ENDP				; UIComms::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_05PELKKPHE@Hurry?$AA@			; `string'
PUBLIC	?PlayMovie@@YAXPADHHHHPAX@Z			; PlayMovie
PUBLIC	??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@ ; `string'
PUBLIC	??_C@_0P@BJAHKJJN@theSurface?5?$CFx?6?$AA@	; `string'
PUBLIC	??_C@_0P@OBOANGA@movieFile?5?5?$CFx?6?$AA@	; `string'
PUBLIC	??_C@_0BJ@GMJBGMKC@movieOpen?$CI?$CJ?5returned?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@GPFHLBEO@Move?5file?5?$CFs?5not?5found?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@KOFCKGIE@error?5with?5movieStart?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@HACDBEDG@Premature?5movie?5exit?4?6?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
EXTRN	__imp__Sleep@4:NEAR
EXTRN	_stricmp:NEAR
EXTRN	__imp__InvalidateRect@12:NEAR
EXTRN	_MonoPrint:NEAR
EXTRN	__imp__GetClientRect@8:NEAR
EXTRN	_F4HearVoices:NEAR
EXTRN	_F4SilenceVoices:NEAR
EXTRN	_movieOpen:NEAR
EXTRN	_movieClose:NEAR
EXTRN	_movieStart:NEAR
EXTRN	_movieIsPlaying:NEAR
EXTRN	__imp__ShowCursor@4:NEAR
EXTRN	__imp__ClientToScreen@8:NEAR
EXTRN	__imp__GetMessageA@16:NEAR
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
EXTRN	__imp__PeekMessageA@20:NEAR
EXTRN	__imp__SetRect@20:NEAR
EXTRN	__imp__OffsetRect@12:NEAR
EXTRN	_sprintf:NEAR
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PELKKPHE@Hurry?$AA@
CONST	SEGMENT
??_C@_05PELKKPHE@Hurry?$AA@ DB 'Hurry', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@ DB 'stopMovie = %d.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BJAHKJJN@theSurface?5?$CFx?6?$AA@
CONST	SEGMENT
??_C@_0P@BJAHKJJN@theSurface?5?$CFx?6?$AA@ DB 'theSurface %x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OBOANGA@movieFile?5?5?$CFx?6?$AA@
CONST	SEGMENT
??_C@_0P@OBOANGA@movieFile?5?5?$CFx?6?$AA@ DB 'movieFile  %x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GMJBGMKC@movieOpen?$CI?$CJ?5returned?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GMJBGMKC@movieOpen?$CI?$CJ?5returned?5?$CFd?6?$AA@ DB 'movieOpe'
	DB	'n() returned %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HACDBEDG@Premature?5movie?5exit?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@HACDBEDG@Premature?5movie?5exit?4?6?$AA@ DB 'Premature movie ex'
	DB	'it.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GPFHLBEO@Move?5file?5?$CFs?5not?5found?4?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GPFHLBEO@Move?5file?5?$CFs?5not?5found?4?6?$AA@ DB 'Move file %'
	DB	's not found.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KOFCKGIE@error?5with?5movieStart?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@KOFCKGIE@error?5with?5movieStart?4?6?$AA@ DB 'error with movieS'
	DB	'tart.', 0aH, 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?PlayMovie@@YAXPADHHHHPAX@Z
_TEXT	SEGMENT
_pt$ = -324						; size = 8
_stopMovie$ = -316					; size = 4
_hwnd$ = -312						; size = 4
_theRect$ = -308					; size = 16
_msg$ = -292						; size = 28
_movieFile$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_filename$ = 8						; size = 4
_left$ = 12						; size = 4
_top$ = 16						; size = 4
_w$ = 20						; size = 4
_h$ = 24						; size = 4
_theSurface$ = 28					; size = 4
?PlayMovie@@YAXPADHHHHPAX@Z PROC NEAR			; PlayMovie, COMDAT

; 2429 : {

	sub	esp, 324				; 00000144H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	ebx

; 2430 : HWND hwnd;
; 2431 : int hMovie=-1, mode;
; 2432 : char movieFile[_MAX_PATH];
; 2433 : MSG               msg;
; 2434 : int stopMovie = FALSE;
; 2435 : RECT theRect;
; 2436 : POINT pt;
; 2437 : 
; 2438 :    hwnd = FalconDisplay.appWin;

	mov	ebx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ebp
	mov	ebp, DWORD PTR _theSurface$[esp+328]
	push	esi
	mov	DWORD PTR __$ArrayPad$[esp+336], eax
	mov	eax, DWORD PTR _filename$[esp+332]
	push	edi

; 2439 :    // RV - Biker - Path is in filename already
; 2440 :    sprintf(movieFile, "%s", filename);

	push	eax
	lea	eax, DWORD PTR _movieFile$[esp+344]
	push	OFFSET FLAT:??_C@_02DKCKIIND@?$CFs?$AA@
	push	eax
	or	esi, -1
	mov	DWORD PTR _stopMovie$[esp+352], 0
	mov	DWORD PTR _hwnd$[esp+352], ebx
	call	_sprintf

; 2441 :    //sprintf(movieFile, "%s\\%s", FalconMovieDirectory, filename);
; 2442 :    
; 2443 : 	if (left == -1)

	mov	edi, DWORD PTR _left$[esp+348]
	add	esp, 12					; 0000000cH
	cmp	edi, -1
	jne	SHORT $L234991

; 2444 : 	{
; 2445 : 		GetClientRect(hwnd, &theRect);

	lea	ecx, DWORD PTR _theRect$[esp+340]
	push	ecx
	push	ebx
	call	DWORD PTR __imp__GetClientRect@8

; 2446 : 		pt.x = 0;
; 2447 : 		pt.y = 0;
; 2448 : 		ClientToScreen(hwnd, &pt);

	lea	edx, DWORD PTR _pt$[esp+340]
	xor	eax, eax
	push	edx
	push	ebx
	mov	DWORD PTR _pt$[esp+348], eax
	mov	DWORD PTR _pt$[esp+352], eax
	call	DWORD PTR __imp__ClientToScreen@8

; 2449 : 		OffsetRect (&theRect, pt.x, pt.y);

	mov	eax, DWORD PTR _pt$[esp+344]
	mov	ecx, DWORD PTR _pt$[esp+340]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _theRect$[esp+348]
	push	edx
	call	DWORD PTR __imp__OffsetRect@12

; 2450 : 		left = theRect.left;
; 2451 : 		top = theRect.top;

	mov	eax, DWORD PTR _theRect$[esp+344]
	mov	ebx, DWORD PTR _theRect$[esp+340]

; 2452 : 		mode = MOVIE_MODE_INTERLACE;
; 2453 : 		if (!stricmp(FalconMovieMode,"Hurry"))

	push	OFFSET FLAT:??_C@_05PELKKPHE@Hurry?$AA@
	push	OFFSET FLAT:?FalconMovieMode@@3PADA	; FalconMovieMode
	mov	DWORD PTR _top$[esp+344], eax
	mov	edi, 2
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234993

; 2454 : 		{
; 2455 : 			mode |= MOVIE_MODE_HURRY;

	mov	edi, 65538				; 00010002H

; 2456 : 		}
; 2457 : 	}
; 2458 : 	else

	jmp	SHORT $L234993
$L234991:

; 2459 : 	{
; 2460 : 		pt.x = left;
; 2461 : 		pt.y = top;
; 2462 : 		ClientToScreen(hwnd, &pt);

	mov	edx, DWORD PTR _hwnd$[esp+340]
	mov	ebx, DWORD PTR _top$[esp+336]
	lea	ecx, DWORD PTR _pt$[esp+340]
	push	ecx
	push	edx
	mov	DWORD PTR _pt$[esp+348], edi
	mov	DWORD PTR _pt$[esp+352], ebx
	call	DWORD PTR __imp__ClientToScreen@8

; 2463 : 		SetRect(&theRect, left, top, left+w, left+h);

	mov	eax, DWORD PTR _h$[esp+336]
	mov	edx, DWORD PTR _w$[esp+336]
	lea	ecx, DWORD PTR [edi+eax]
	push	ecx
	lea	eax, DWORD PTR [edi+edx]
	push	eax
	push	ebx
	push	edi
	lea	ecx, DWORD PTR _theRect$[esp+356]
	push	ecx
	call	DWORD PTR __imp__SetRect@20

; 2464 : 		left = pt.x;
; 2465 : 		top = pt.y;

	mov	edx, DWORD PTR _pt$[esp+344]
	mov	ebx, DWORD PTR _pt$[esp+340]
	mov	DWORD PTR _top$[esp+336], edx

; 2466 : 		mode = MOVIE_MODE_NORMAL;

	xor	edi, edi
$L234993:

; 2467 : 	}
; 2468 : 
; 2469 :    F4SilenceVoices();

	call	_F4SilenceVoices

; 2470 : 
; 2471 :    MonoPrint( "stopMovie = %d.\n",stopMovie);

	push	0
	push	OFFSET FLAT:??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 2472 : 
; 2473 :    ShowCursor(FALSE);

	push	0
	call	DWORD PTR __imp__ShowCursor@4
$L234996:

; 2474 :    
; 2475 :    while (TRUE)
; 2476 :    {
; 2477 :       if ( PeekMessage ( &msg, NULL, 0 , 0, PM_NOREMOVE ) )

	push	0
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[esp+356]
	push	eax
	call	DWORD PTR __imp__PeekMessageA@20
	test	eax, eax
	je	SHORT $L235004

; 2478 :       {
; 2479 :          if ( !GetMessage ( &msg, NULL, 0, 0 ) )

	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _msg$[esp+352]
	push	ecx
	call	DWORD PTR __imp__GetMessageA@16
	test	eax, eax
	je	$L234997

; 2480 :             break;
; 2481 : 		 
; 2482 :          if (msg.message == WM_KEYUP)	// any key press will stop the movie

	mov	eax, DWORD PTR _msg$[esp+344]
	cmp	eax, 257				; 00000101H
	jne	SHORT $L235000

; 2483 :             stopMovie = TRUE;

	mov	DWORD PTR _stopMovie$[esp+340], 1

; 2484 :          else if (msg.message == WM_LBUTTONUP) // lmouse click stops it,too

	jmp	SHORT $L241817
$L235000:
	cmp	eax, 514				; 00000202H
	jne	SHORT $L235002

; 2485 :             stopMovie = TRUE;

	mov	DWORD PTR _stopMovie$[esp+340], 1

; 2486 : 			
; 2487 : 
; 2488 :          if (msg.message != WM_ACTIVATEAPP)

	jmp	SHORT $L241817
$L235002:
	cmp	eax, 28					; 0000001cH
	je	SHORT $L235003
$L241817:

; 2489 :          {
; 2490 :             TranslateMessage ( &msg );

	lea	edx, DWORD PTR _msg$[esp+340]
	push	edx
	call	DWORD PTR __imp__TranslateMessage@4

; 2491 :             DispatchMessage ( &msg );

	lea	eax, DWORD PTR _msg$[esp+340]
	push	eax
	call	DWORD PTR __imp__DispatchMessageA@4

; 2492 :          }
; 2493 :          else

	jmp	SHORT $L235004
$L235003:

; 2494 :          {
; 2495 :             Sleep(1);

	push	1
	call	DWORD PTR __imp__Sleep@4
$L235004:

; 2496 :          }
; 2497 :       }
; 2498 :       Sleep( 1 );

	push	1
	call	DWORD PTR __imp__Sleep@4

; 2499 : 
; 2500 :       if ( hMovie == -1 )

	cmp	esi, -1
	jne	SHORT $L235012

; 2501 :       {
; 2502 : 
; 2503 : 		MonoPrint( "theSurface %x\n", theSurface );

	push	ebp
	push	OFFSET FLAT:??_C@_0P@BJAHKJJN@theSurface?5?$CFx?6?$AA@
	call	_MonoPrint

; 2504 : 		MonoPrint( "movieFile  %x\n", movieFile  );

	lea	ecx, DWORD PTR _movieFile$[esp+348]
	push	ecx
	push	OFFSET FLAT:??_C@_0P@OBOANGA@movieFile?5?5?$CFx?6?$AA@
	call	_MonoPrint

; 2505 : 
; 2506 : 
; 2507 :          hMovie =  movieOpen( movieFile, NULL, ( LPVOID ) theSurface, 0, NULL, 
; 2508 :                      left, top, mode, MOVIE_USE_AUDIO );

	mov	edx, DWORD PTR _top$[esp+352]
	push	0
	push	edi
	push	edx
	push	ebx
	push	0
	push	0
	push	ebp
	lea	eax, DWORD PTR _movieFile$[esp+384]
	push	0
	push	eax
	call	_movieOpen
	mov	esi, eax

; 2509 : 
; 2510 : 		 MonoPrint( "movieOpen() returned %d\n", hMovie );

	push	esi
	push	OFFSET FLAT:??_C@_0BJ@GMJBGMKC@movieOpen?$CI?$CJ?5returned?5?$CFd?6?$AA@
	call	_MonoPrint

; 2511 : 		 MonoPrint( "stopMovie = %d.\n",stopMovie);

	mov	ecx, DWORD PTR _stopMovie$[esp+400]
	push	ecx
	push	OFFSET FLAT:??_C@_0BB@DJHBMAOP@stopMovie?5?$DN?5?$CFd?4?6?$AA@
	call	_MonoPrint
	add	esp, 68					; 00000044H

; 2512 : 
; 2513 :          if ( hMovie < 0 )

	test	esi, esi
	jl	SHORT $L241814

; 2517 : 			 }
; 2518 : 
; 2519 :          if ( movieStart( hMovie ) != MOVIE_OK )

	push	esi
	call	_movieStart
	add	esp, 4
	test	eax, eax
	jne	SHORT $L241815
$L235012:

; 2524 :          }
; 2525 :       }
; 2526 : 
; 2527 :       if (stopMovie || !movieIsPlaying( hMovie ) )

	mov	eax, DWORD PTR _stopMovie$[esp+340]
	test	eax, eax
	jne	SHORT $L241816
	push	esi
	call	_movieIsPlaying
	add	esp, 4
	test	eax, eax
	jne	$L234996
$L241816:

; 2528 :       {
; 2529 : 		MonoPrint( "Premature movie exit.\n");

	push	OFFSET FLAT:??_C@_0BH@HACDBEDG@Premature?5movie?5exit?4?6?$AA@
	call	_MonoPrint

; 2530 :          movieClose( hMovie );

	push	esi
	call	_movieClose

; 2531 :          InvalidateRect(hwnd, &theRect, FALSE);

	mov	ecx, DWORD PTR _hwnd$[esp+348]
	add	esp, 8
	push	0
	lea	eax, DWORD PTR _theRect$[esp+344]
	push	eax
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
$L234997:

; 2532 :          break;
; 2533 :       }
; 2534 :    }		// end while (1)
; 2535 :    ShowCursor(TRUE);  

	push	1
	call	DWORD PTR __imp__ShowCursor@4

; 2536 :    F4HearVoices();

	call	_F4HearVoices

; 2537 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+340]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	ret	0
$L241814:

; 2514 : 			 {
; 2515 : 			 MonoPrint ("Move file %s not found.\n", movieFile);

	lea	edx, DWORD PTR _movieFile$[esp+340]
	push	edx
	push	OFFSET FLAT:??_C@_0BJ@GPFHLBEO@Move?5file?5?$CFs?5not?5found?4?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 2516 :              break;

	jmp	SHORT $L234997
$L241815:

; 2520 :          {
; 2521 : 			MonoPrint( "error with movieStart.\n");

	push	OFFSET FLAT:??_C@_0BI@KOFCKGIE@error?5with?5movieStart?4?6?$AA@
	call	_MonoPrint

; 2522 :             movieClose( hMovie );

	push	esi
	call	_movieClose
	add	esp, 8

; 2523 :             break;

	jmp	SHORT $L234997
?PlayMovie@@YAXPADHHHHPAX@Z ENDP			; PlayMovie
_TEXT	ENDS
PUBLIC	?EnableCampaignMenus@@YAXXZ			; EnableCampaignMenus
EXTRN	__imp__GetMenu@4:NEAR
EXTRN	__imp__EnableMenuItem@12:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?EnableCampaignMenus@@YAXXZ
_TEXT	SEGMENT
?EnableCampaignMenus@@YAXXZ PROC NEAR			; EnableCampaignMenus, COMDAT

; 2557 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEAS, MF_ENABLED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	esi
	mov	esi, DWORD PTR __imp__GetMenu@4
	push	edi
	push	0
	push	40080					; 00009c90H
	push	eax
	call	esi
	mov	edi, DWORD PTR __imp__EnableMenuItem@12
	push	eax
	call	edi

; 2558 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEALLAS, MF_ENABLED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40144					; 00009cd0H
	push	ecx
	call	esi
	push	eax
	call	edi

; 2559 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEINSTANTAS, MF_ENABLED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40145					; 00009cd1H
	push	edx
	call	esi
	push	eax
	call	edi

; 2560 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_LOAD, MF_GRAYED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40077					; 00009c8dH
	push	eax
	call	esi
	push	eax
	call	edi

; 2561 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_NEW, MF_GRAYED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40076					; 00009c8cH
	push	ecx
	call	esi
	push	eax
	call	edi

; 2562 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_JOIN, MF_GRAYED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40078					; 00009c8eH
	push	edx
	call	esi
	push	eax
	call	edi

; 2563 : #ifdef CAMPTOOL
; 2564 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_DISPLAY, MF_ENABLED);
; 2565 : #endif
; 2566 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_PAUSED, MF_ENABLED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	104					; 00000068H
	push	eax
	call	esi
	push	eax
	call	edi

; 2567 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SELECTSQUADRON, MF_ENABLED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40108					; 00009cacH
	push	ecx
	call	esi
	push	eax
	call	edi

; 2568 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_FLYMISSION, MF_ENABLED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40094					; 00009c9eH
	push	edx
	call	esi
	push	eax
	call	edi

; 2569 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_EXIT, MF_ENABLED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40095					; 00009c9fH
	push	eax
	call	esi
	push	eax
	call	edi
	pop	edi
	pop	esi

; 2570 : }

	ret	0
?EnableCampaignMenus@@YAXXZ ENDP			; EnableCampaignMenus
_TEXT	ENDS
PUBLIC	?DisableCampaignMenus@@YAXXZ			; DisableCampaignMenus
EXTRN	__imp__CheckMenuItem@12:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?DisableCampaignMenus@@YAXXZ
_TEXT	SEGMENT
?DisableCampaignMenus@@YAXXZ PROC NEAR			; DisableCampaignMenus, COMDAT

; 2574 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVE, MF_GRAYED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	esi
	mov	esi, DWORD PTR __imp__GetMenu@4
	push	edi
	push	1
	push	40079					; 00009c8fH
	push	eax
	call	esi
	mov	edi, DWORD PTR __imp__EnableMenuItem@12
	push	eax
	call	edi

; 2575 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEAS, MF_GRAYED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40080					; 00009c90H
	push	ecx
	call	esi
	push	eax
	call	edi

; 2576 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEALLAS, MF_GRAYED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40144					; 00009cd0H
	push	edx
	call	esi
	push	eax
	call	edi

; 2577 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SAVEINSTANTAS, MF_GRAYED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40145					; 00009cd1H
	push	eax
	call	esi
	push	eax
	call	edi

; 2578 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_LOAD, MF_ENABLED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40077					; 00009c8dH
	push	ecx
	call	esi
	push	eax
	call	edi

; 2579 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_NEW, MF_ENABLED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40076					; 00009c8cH
	push	edx
	call	esi
	push	eax
	call	edi

; 2580 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_PAUSED, MF_GRAYED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	104					; 00000068H
	push	eax
	call	esi
	push	eax
	call	edi

; 2581 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_DISPLAY, MF_GRAYED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40093					; 00009c9dH
	push	ecx
	call	esi
	push	eax
	call	edi

; 2582 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_FLYMISSION, MF_GRAYED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40094					; 00009c9eH
	push	edx
	call	esi
	push	eax
	call	edi

; 2583 : 	EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_SELECTSQUADRON, MF_GRAYED);

	mov	eax, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	1
	push	40108					; 00009cacH
	push	eax
	call	esi
	push	eax
	call	edi

; 2584 : 	if (doNetwork)

	mov	eax, DWORD PTR ?doNetwork@@3HA		; doNetwork
	test	eax, eax
	je	SHORT $L235027

; 2585 : 		EnableMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_JOIN, MF_ENABLED);

	mov	ecx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	0
	push	40078					; 00009c8eH
	push	ecx
	call	esi
	push	eax
	call	edi
$L235027:

; 2586 : 	CheckMenuItem(GetMenu(mainMenuWnd), ID_CAMPAIGN_PAUSED, MF_CHECKED);

	mov	edx, DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A ; mainMenuWnd
	push	8
	push	104					; 00000068H
	push	edx
	call	esi
	push	eax
	call	DWORD PTR __imp__CheckMenuItem@12
	pop	edi
	pop	esi

; 2587 : }

	ret	0
?DisableCampaignMenus@@YAXXZ ENDP			; DisableCampaignMenus
_TEXT	ENDS
PUBLIC	?ConsoleWrite@@YAXPAD@Z				; ConsoleWrite
EXTRN	__imp__GetLastError@0:NEAR
EXTRN	__imp__GetStdHandle@4:NEAR
EXTRN	__imp__WriteConsoleA@20:NEAR
EXTRN	__imp__FormatMessageA@28:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?ConsoleWrite@@YAXPAD@Z
_TEXT	SEGMENT
_lpMsgBuf$ = -8						; size = 4
_num$ = -4						; size = 4
_str$ = 8						; size = 4
?ConsoleWrite@@YAXPAD@Z PROC NEAR			; ConsoleWrite, COMDAT

; 2590 : {

	sub	esp, 8
	push	esi
	push	edi

; 2591 : HANDLE hStdIn;
; 2592 : DWORD num;
; 2593 : LPVOID lpMsgBuf;
; 2594 : 
; 2595 :   hStdIn = GetStdHandle(STD_OUTPUT_HANDLE);

	push	-11					; fffffff5H
	call	DWORD PTR __imp__GetStdHandle@4
	mov	edi, eax

; 2596 : 
; 2597 :   if (hStdIn == INVALID_HANDLE_VALUE)

	cmp	edi, -1
	jne	SHORT $L235037

; 2598 :   {
; 2599 :  
; 2600 :    FormatMessage( 
; 2601 :        FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,
; 2602 :        NULL,
; 2603 :        GetLastError(),
; 2604 :        MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language
; 2605 :        (LPTSTR) &lpMsgBuf,
; 2606 :        0,
; 2607 :        NULL 
; 2608 :    );

	push	0
	push	0
	lea	eax, DWORD PTR _lpMsgBuf$[esp+24]
	push	eax
	push	1024					; 00000400H
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	0
	push	4352					; 00001100H
	call	DWORD PTR __imp__FormatMessageA@28
$L235037:

; 2609 :   }
; 2610 :   WriteConsole ( hStdIn, str, strlen(str), &num, NULL);

	mov	edx, DWORD PTR _str$[esp+12]
	mov	eax, edx
	lea	esi, DWORD PTR [eax+1]
	npad	1
$L241828:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $L241828
	push	0
	lea	ecx, DWORD PTR _num$[esp+20]
	push	ecx
	sub	eax, esi
	push	eax
	push	edx
	push	edi
	call	DWORD PTR __imp__WriteConsoleA@20
	pop	edi
	pop	esi

; 2611 : }

	add	esp, 8
	ret	0
?ConsoleWrite@@YAXPAD@Z ENDP				; ConsoleWrite
_TEXT	ENDS
EXTRN	__imp__SystemParametersInfoA@16:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?CtrlAltDelMask@@YAXH@Z
_TEXT	SEGMENT
_was$ = -4						; size = 4
?CtrlAltDelMask@@YAXH@Z PROC NEAR			; CtrlAltDelMask, COMDAT
; _state$ = eax

; 2614 : {

	push	ecx

; 2615 : 	int was;
; 2616 : 
; 2617 : 	if( state )

	test	eax, eax

; 2618 : 		SystemParametersInfo( SPI_SCREENSAVERRUNNING, TRUE, &was, 0 );

	push	0
	je	SHORT $L235045
	lea	eax, DWORD PTR _was$[esp+8]
	push	eax
	push	1

; 2619 : 	else
; 2620 : 		SystemParametersInfo( SPI_SCREENSAVERRUNNING, FALSE, &was, 0 );

	push	97					; 00000061H
	call	DWORD PTR __imp__SystemParametersInfoA@16

; 2621 : }

	pop	ecx
	ret	0
$L235045:

; 2619 : 	else
; 2620 : 		SystemParametersInfo( SPI_SCREENSAVERRUNNING, FALSE, &was, 0 );

	lea	ecx, DWORD PTR _was$[esp+8]
	push	ecx
	push	0
	push	97					; 00000061H
	call	DWORD PTR __imp__SystemParametersInfoA@16

; 2621 : }

	pop	ecx
	ret	0
?CtrlAltDelMask@@YAXH@Z ENDP				; CtrlAltDelMask
_TEXT	ENDS
PUBLIC	??_C@_0O@KNFOBEHK@Network?2Logon?$AA@		; `string'
PUBLIC	??_C@_08GBJFCIEI@Username?$AA@			; `string'
EXTRN	__imp__RegCloseKey@4:NEAR
EXTRN	__imp__RegOpenKeyExA@20:NEAR
EXTRN	__imp__RegQueryValueExA@24:NEAR
;	COMDAT ??_C@_0O@KNFOBEHK@Network?2Logon?$AA@
CONST	SEGMENT
??_C@_0O@KNFOBEHK@Network?2Logon?$AA@ DB 'Network\Logon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GBJFCIEI@Username?$AA@
CONST	SEGMENT
??_C@_08GBJFCIEI@Username?$AA@ DB 'Username', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?i_am@@YAHPAD@Z
_TEXT	SEGMENT
_key$ = -80						; size = 4
_size$ = -76						; size = 4
_type$ = -72						; size = 4
_name$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?i_am@@YAHPAD@Z PROC NEAR				; i_am, COMDAT
; _with$ = esi

; 2624 : int i_am (char *with){

	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+80], eax

; 2625 : 	DWORD type, size;
; 2626 : 	char name[64];
; 2627 : 	HKEY key;
; 2628 : 	long retval;
; 2629 : 
; 2630 : 	size = 63;
; 2631 : 	retval = RegOpenKeyEx (HKEY_LOCAL_MACHINE, "Network\\Logon", 0, KEY_ALL_ACCESS, &key);

	lea	eax, DWORD PTR _key$[esp+80]
	push	eax
	push	983103					; 000f003fH
	push	0
	push	OFFSET FLAT:??_C@_0O@KNFOBEHK@Network?2Logon?$AA@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _size$[esp+100], 63		; 0000003fH
	call	DWORD PTR __imp__RegOpenKeyExA@20

; 2632 : 
; 2633 : 	if (retval == ERROR_SUCCESS){

	test	eax, eax
	jne	SHORT $L235059

; 2634 : 		RegQueryValueEx (key, "Username", 0, &type, (uchar*)&name, &size);

	lea	ecx, DWORD PTR _size$[esp+80]
	push	ecx
	mov	ecx, DWORD PTR _key$[esp+84]
	lea	edx, DWORD PTR _name$[esp+84]
	push	edx
	lea	eax, DWORD PTR _type$[esp+88]
	push	eax
	push	0
	push	OFFSET FLAT:??_C@_08GBJFCIEI@Username?$AA@
	push	ecx
	call	DWORD PTR __imp__RegQueryValueExA@24

; 2635 : 		if (stricmp (name, with) == 0){

	lea	edx, DWORD PTR _name$[esp+80]
	push	esi
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L235062

; 2636 : 			return TRUE;

	mov	eax, 1

; 2639 : 	}
; 2640 : 
; 2641 : 	return FALSE;
; 2642 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
$L235062:

; 2637 : 		}
; 2638 : 		RegCloseKey (key);

	mov	eax, DWORD PTR _key$[esp+80]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$L235059:

; 2639 : 	}
; 2640 : 
; 2641 : 	return FALSE;
; 2642 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	xor	ecx, esp
	xor	eax, eax
	call	@__security_check_cookie@4
	add	esp, 80					; 00000050H
	ret	0
?i_am@@YAHPAD@Z ENDP					; i_am
_TEXT	ENDS
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 97   : 	{ }

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
; Function compile flags: /Ogtpy
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT
; _this$ = ecx

; 136  : 		return m_nSize;

	mov	eax, DWORD PTR [ecx+4]

; 137  : 	}

	ret	0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QBEHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
EXTRN	_free:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT
; _this$ = ecx

; 173  : 	{

	push	esi
	mov	esi, ecx

; 174  : 		if(m_aT != NULL)

	mov	eax, DWORD PTR [esi]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $L241850

; 175  : 		{
; 176  : 			for(int i = 0; i < m_nSize; i++)
; 177  : 				m_aT[i].~T();
; 178  : 			free(m_aT);

	push	eax
	call	_free
	add	esp, 4

; 179  : 			m_aT = NULL;

	mov	DWORD PTR [esi], edi
$L241850:

; 180  : 		}
; 181  : 		m_nSize = 0;

	mov	DWORD PTR [esi+4], edi

; 182  : 		m_nAllocSize = 0;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 183  : 	}

	ret	0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 195  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);
; 196  : 		if(nIndex < 0 || nIndex >= m_nSize)

	mov	eax, DWORD PTR _nIndex$[esp-4]
	test	eax, eax
	jl	SHORT $L235204
	cmp	eax, DWORD PTR [ecx+4]
	jge	SHORT $L235204

; 197  : 		{
; 198  : 			_AtlRaiseException(EXCEPTION_ARRAY_BOUNDS_EXCEEDED);					
; 199  : 		}
; 200  : 		return m_aT[nIndex];

	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+eax*2]

; 201  : 	}

	ret	4
$L235204:
	push	0
	push	0
	push	1
	push	-1073741684				; c000008cH
	call	DWORD PTR __imp__RaiseException@16
$L241858:
$L241857:
	int	3
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAEAAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC NEAR	; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 41   : 		return e != NULL;

	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	test	edx, edx
	setne	al

; 42   : 	}

	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC NEAR ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 51   : 		return e;

	mov	eax, DWORD PTR [ecx]

; 52   : 	}

	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC NEAR ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 56   : 		return e;

	mov	eax, DWORD PTR [ecx]

; 57   : 	}

	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
PUBLIC	??0?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comip.h
;	COMDAT ??0?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
??0?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >, COMDAT
; _this$ = ecx

; 131  :     {

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 132  :     }

	ret	0
??0?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >
_TEXT	ENDS
PUBLIC	??C?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBEPAUIUplink@GNETCORELib@@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator->
EXTRN	?_com_issue_error@@YGXJ@Z:NEAR			; _com_issue_error
; Function compile flags: /Ogtpy
;	COMDAT ??C?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBEPAUIUplink@GNETCORELib@@XZ
_TEXT	SEGMENT
??C?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBEPAUIUplink@GNETCORELib@@XZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator->, COMDAT
; _this$ = ecx

; 390  :     { 

	push	esi
	mov	esi, ecx

; 391  :         if (m_pInterface == NULL) {

	cmp	DWORD PTR [esi], 0
	jne	SHORT $L241874

; 392  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L241874:

; 393  :         }
; 394  : 
; 395  :         return m_pInterface; 

	mov	eax, DWORD PTR [esi]
	pop	esi

; 396  :     }

	ret	0
??C?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBEPAUIUplink@GNETCORELib@@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator->
_TEXT	ENDS
PUBLIC	??B?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBE_NXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator bool
; Function compile flags: /Ogtpy
;	COMDAT ??B?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBE_NXZ
_TEXT	SEGMENT
??B?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBE_NXZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator bool, COMDAT
; _this$ = ecx

; 404  :         return m_pInterface != NULL; 

	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	test	edx, edx
	setne	al

; 405  :     }

	ret	0
??B?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QBE_NXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::operator bool
_TEXT	ENDS
PUBLIC	?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::Release
; Function compile flags: /Ogtpy
;	COMDAT ?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ
_TEXT	SEGMENT
?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::Release, COMDAT
; _this$ = ecx

; 577  :     {

	push	esi
	mov	esi, ecx

; 578  :         if (m_pInterface == NULL) {

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $L236406

; 579  :             _com_issue_error(E_POINTER);

	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
	pop	esi

; 584  :         }
; 585  :     }

	ret	0
$L236406:

; 580  :         }
; 581  :         else {
; 582  :             m_pInterface->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]

; 583  :             m_pInterface = NULL;

	mov	DWORD PTR [esi], 0
	pop	esi

; 584  :         }
; 585  :     }

	ret	0
?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::Release
_TEXT	ENDS
PUBLIC	?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ
_TEXT	SEGMENT
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ PROC NEAR ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId, COMDAT

; 2870 : 	}

	ret	0
?InitLibId@?$CAtlModuleT@VCComModule@ATL@@@ATL@@SAXXZ ENDP ; ATL::CAtlModuleT<ATL::CComModule>::InitLibId
_TEXT	ENDS
PUBLIC	?_Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@AAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_Release
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comip.h
;	COMDAT ?_Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@AAEXXZ
_TEXT	SEGMENT
?_Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@AAEXXZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_Release, COMDAT
; _this$ = ecx

; 821  :         if (m_pInterface != NULL) {

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $L237109

; 822  :             m_pInterface->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L237109:

; 823  :         }
; 824  :     }

	ret	0
?_Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@AAEXXZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::_Release
_TEXT	ENDS
PUBLIC	??0CAtlModule@ATL@@QAE@XZ			; ATL::CAtlModule::CAtlModule
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CAtlModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlModule::CAtlModule, COMDAT
; _this$ = ecx

; 2615 : 	CAtlModule() throw()

	push	esi
	mov	esi, ecx
	xor	eax, eax
	lea	ecx, DWORD PTR [esi+16]
	mov	edx, ecx
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR [edx+20], eax
	push	edi

; 2616 : 	{
; 2617 : 		// Should have only one instance of a class 
; 2618 : 		// derived from CAtlModule in a project.
; 2619 : 		ATLASSERT(_pAtlModule == NULL);
; 2620 : 		cbSize = sizeof(_ATL_MODULE);
; 2621 : 		m_pTermFuncs = NULL;

	xor	edi, edi
	mov	DWORD PTR [esi+4], 36			; 00000024H
	mov	DWORD PTR [esi+12], edi

; 2622 : 
; 2623 : 		m_nLockCnt = 0;

	mov	DWORD PTR [esi+8], edi

; 2624 : 		_pAtlModule = this;

	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule

; 2625 : 		if (FAILED(m_csStaticDataInitAndTypeInfo.Init()))

	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax

; 2633 : 	}

	mov	eax, esi
	jge	SHORT $L241900

; 2626 : 		{
; 2627 : 			ATLTRACE(atlTraceGeneral, 0, _T("ERROR : Unable to initialize critical section in CAtlModule\n"));
; 2628 : 			ATLASSERT(0);
; 2629 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L241900:

; 2630 : 		}
; 2631 : 
; 2632 : 		m_pGIT = NULL;

	mov	DWORD PTR [esi+40], edi
	pop	edi
	pop	esi

; 2633 : 	}

	ret	0
??0CAtlModule@ATL@@QAE@XZ ENDP				; ATL::CAtlModule::CAtlModule
_TEXT	ENDS
PUBLIC	?Term@CAtlModule@ATL@@QAEXXZ			; ATL::CAtlModule::Term
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlModule@ATL@@QAEXXZ PROC NEAR			; ATL::CAtlModule::Term, COMDAT
; _this$ = ecx

; 2636 : 	{

	push	esi
	mov	esi, ecx

; 2637 : 		// cbSize == 0 indicates that Term has already been called
; 2638 : 		if (cbSize == 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $L68525

; 2639 : 			return;
; 2640 : 
; 2641 : 		// Call term functions
; 2642 : 		if (m_pTermFuncs != NULL)

	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $L68527

; 2643 : 		{
; 2644 : 			AtlCallTermFunc(this);

	push	edi
	call	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ; ATL::AtlCallTermFunc

; 2645 : 			m_pTermFuncs = NULL;

	mov	DWORD PTR [esi+12], 0
$L68527:

; 2646 : 		}
; 2647 : 
; 2648 : 		if (m_pGIT != NULL)

	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $L68528

; 2649 : 			m_pGIT->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L68528:

; 2650 : 
; 2651 : 		m_csStaticDataInitAndTypeInfo.Term();

	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 2652 : 
; 2653 : 		cbSize = 0;

	mov	DWORD PTR [edi], 0
$L68525:
	pop	edi
	pop	esi

; 2654 : 	}

	ret	0
?Term@CAtlModule@ATL@@QAEXXZ ENDP			; ATL::CAtlModule::Term
_TEXT	ENDS
PUBLIC	??1CAtlModule@ATL@@UAE@XZ			; ATL::CAtlModule::~CAtlModule
; Function compile flags: /Ogtpy
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CAtlModule@ATL@@UAE@XZ PROC NEAR			; ATL::CAtlModule::~CAtlModule, COMDAT
; _this$ = ecx

; 2657 : 	{

	push	esi
	mov	esi, ecx

; 2658 : 		Term();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $L241923
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $L241925
	push	edi
	call	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ; ATL::AtlCallTermFunc
	mov	DWORD PTR [esi+12], 0
$L241925:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $L241926
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L241926:
	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$L241923:
	pop	edi
	pop	esi

; 2659 : 	}

	ret	0
??1CAtlModule@ATL@@UAE@XZ ENDP				; ATL::CAtlModule::~CAtlModule
_TEXT	ENDS
PUBLIC	??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
_TEXT	SEGMENT
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ PROC NEAR ; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	push	edi
	lea	edi, DWORD PTR [esi+4]
	je	SHORT $L241952
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $L241954
	push	edi
	call	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ; ATL::AtlCallTermFunc
	mov	DWORD PTR [esi+12], 0
$L241954:
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $L241955
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L241955:
	add	esi, 16					; 00000010H
	push	esi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [edi], 0
$L241952:
	pop	edi
	pop	esi
	ret	0
??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::~CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
PUBLIC	??1CComModule@ATL@@UAE@XZ			; ATL::CComModule::~CComModule
; Function compile flags: /Ogtpy
;	COMDAT ??1CComModule@ATL@@UAE@XZ
_TEXT	SEGMENT
??1CComModule@ATL@@UAE@XZ PROC NEAR			; ATL::CComModule::~CComModule, COMDAT
; _this$ = ecx
	jmp	??1?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAE@XZ
??1CComModule@ATL@@UAE@XZ ENDP				; ATL::CComModule::~CComModule
_TEXT	ENDS
PUBLIC	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
EXTRN	__imp__UnregisterClassA@8:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_pWinModule$ = 8					; size = 4
_hInst$ = 12						; size = 4
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z PROC NEAR ; ATL::AtlWinModuleTerm, COMDAT

; 6215 : {

	push	esi

; 6216 : 	if (pWinModule == NULL)

	mov	esi, DWORD PTR _pWinModule$[esp]
	push	edi
	xor	edi, edi
	cmp	esi, edi

; 6217 : 		return E_INVALIDARG;

	je	SHORT $L242001

; 6218 : 	if (pWinModule->cbSize == 0)

	mov	eax, DWORD PTR [esi]
	cmp	eax, edi

; 6219 : 		return S_OK;

	je	SHORT $L242000

; 6220 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

	cmp	eax, 44					; 0000002cH
	je	SHORT $L71726
$L242001:
	pop	edi

; 6221 : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
	pop	esi

; 6229 : }

	ret	8
$L71726:

; 6222 : 
; 6223 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

	cmp	DWORD PTR [esi+36], edi
	push	ebx
	push	ebp
	jle	SHORT $L71731

; 6224 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

	mov	ebx, DWORD PTR _hInst$[esp+12]
	mov	ebp, DWORD PTR __imp__UnregisterClassA@8
$L71729:
	test	edi, edi
	jl	SHORT $L241994
	cmp	edi, DWORD PTR [esi+36]
	jge	SHORT $L241994
	mov	eax, DWORD PTR [esi+32]
	movzx	ecx, WORD PTR [eax+edi*2]
	push	ebx
	push	ecx
	call	ebp
	mov	eax, DWORD PTR [esi+36]
	inc	edi
	cmp	edi, eax
	jl	SHORT $L71729
	xor	edi, edi
$L71731:

; 6225 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

	mov	eax, DWORD PTR [esi+32]
	cmp	eax, edi
	je	SHORT $L241983
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+32], edi
$L241983:

; 6226 : 	pWinModule->m_csWindowCreate.Term();

	lea	edx, DWORD PTR [esi+4]
	push	edx
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	pop	ebp

; 6227 : 	pWinModule->cbSize = 0;

	mov	DWORD PTR [esi], edi
	pop	ebx
$L242000:
	pop	edi

; 6228 : 	return S_OK;

	xor	eax, eax
	pop	esi

; 6229 : }

	ret	8
$L241994:
	push	0
	push	0
	push	1
	push	-1073741684				; c000008cH
	call	DWORD PTR __imp__RaiseException@16
$L242002:
$L241999:
	int	3
?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
PUBLIC	?Term@CComModule@ATL@@QAEXXZ			; ATL::CComModule::Term
; Function compile flags: /Ogtpy
;	COMDAT ?Term@CComModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CComModule@ATL@@QAEXXZ PROC NEAR			; ATL::CComModule::Term, COMDAT
; _this$ = ecx

; 6501 : {

	push	esi
	push	edi
	mov	edi, ecx

; 6502 : 	_ATL_OBJMAP_ENTRY* pEntry;
; 6503 : 	if (m_pObjMap != NULL)

	mov	esi, DWORD PTR [edi+44]
	test	esi, esi
	je	SHORT $L71891

; 6504 : 	{
; 6505 : 		pEntry = m_pObjMap;
; 6506 : 		while (pEntry->pclsid != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $L71891
$L71890:

; 6507 : 		{
; 6508 : 			if (pEntry->pCF != NULL)

	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $L71892

; 6509 : 				pEntry->pCF->Release();

	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L71892:

; 6510 : 			pEntry->pCF = NULL;
; 6511 : 			pEntry->pfnObjectMain(false); //cleanup class resources

	push	0
	mov	DWORD PTR [esi+16], 0
	call	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi+36]

; 6512 : 			pEntry++;

	add	esi, 36					; 00000024H
	test	eax, eax
	jne	SHORT $L71890
$L71891:

; 6513 : 		}
; 6514 : 	}
; 6515 : 	for (_ATL_OBJMAP_ENTRY** ppEntry = _AtlComModule.m_ppAutoObjMapFirst; ppEntry < _AtlComModule.m_ppAutoObjMapLast; ppEntry++)

	mov	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+8
	cmp	esi, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	jae	SHORT $L71896
$L71894:

; 6516 : 	{
; 6517 : 		if (*ppEntry != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L71895

; 6518 : 			(*ppEntry)->pfnObjectMain(false); //cleanup class resources

	push	0
	call	DWORD PTR [eax+32]
$L71895:
	mov	eax, DWORD PTR ?_AtlComModule@ATL@@3VCAtlComModule@1@A+12
	add	esi, 4
	cmp	esi, eax
	jb	SHORT $L71894
$L71896:

; 6519 : 	}
; 6520 : #ifdef _DEBUG
; 6521 : 	// Prevent false memory leak reporting. ~CAtlWinModule may be too late.
; 6522 : 	_AtlWinModule.Term();		
; 6523 : #endif	// _DEBUG
; 6524 : 
; 6525 : 	CAtlModuleT<CComModule>::Term();

	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	lea	esi, DWORD PTR [edi+4]
	je	SHORT $L242017
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $L242019
	push	esi
	call	?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z ; ATL::AtlCallTermFunc
	mov	DWORD PTR [edi+12], 0
$L242019:
	mov	eax, DWORD PTR [edi+40]
	test	eax, eax
	je	SHORT $L242020
	mov	edx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [edx+8]
$L242020:
	add	edi, 16					; 00000010H
	push	edi
	call	DWORD PTR __imp__DeleteCriticalSection@4
	mov	DWORD PTR [esi], 0
$L242017:
	pop	edi
	pop	esi

; 6526 : }

	ret	0
?Term@CComModule@ATL@@QAEXXZ ENDP			; ATL::CComModule::Term
_TEXT	ENDS
PUBLIC	??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:NEAR			; `eh vector destructor iterator'
; Function compile flags: /Ogtpy
;	COMDAT ??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z PROC NEAR ; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebx
	mov	bl, BYTE PTR ___flags$[esp]
	test	bl, 2
	push	esi
	mov	esi, ecx
	je	SHORT $L74525
	mov	eax, DWORD PTR [esi-4]
	push	edi
	push	OFFSET FLAT:??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	lea	edi, DWORD PTR [esi-4]
	push	eax
	push	12					; 0000000cH
	push	esi
	call	??_M@YGXPAXIHP6EX0@Z@Z
	test	bl, 1
	je	SHORT $L74526
	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L74526:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	ret	4
$L74525:
	mov	ecx, esi
	call	??1stringdispid@CComTypeInfoHolder@ATL@@QAE@XZ
	test	bl, 1
	je	SHORT $L74528
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L74528:
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??_Estringdispid@CComTypeInfoHolder@ATL@@QAEPAXI@Z ENDP	; ATL::CComTypeInfoHolder::stringdispid::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??0_bstr_t@@QAE@PBD@Z				; _bstr_t::_bstr_t
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242048 DD	0ffffffffH
	DD	FLAT:$L242035
$T242045 DD	019930520H
	DD	01H
	DD	FLAT:$T242048
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0_bstr_t@@QAE@PBD@Z
_TEXT	SEGMENT
$T242032 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0_bstr_t@@QAE@PBD@Z PROC NEAR				; _bstr_t::_bstr_t, COMDAT
; _this$ = ecx

; 251  : {

	push	-1
	push	__ehhandler$??0_bstr_t@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	push	esi
	push	edi
	push	12					; 0000000cH
	mov	edi, ecx
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T242032[esp+24], esi
	test	esi, esi
	mov	DWORD PTR __$EHRec$[esp+32], 0
	je	SHORT $L242033
	mov	eax, DWORD PTR _s$[esp+20]
	push	eax
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 1
	call	?ConvertStringToBSTR@_com_util@@YGPAGPBD@Z ; _com_util::ConvertStringToBSTR
	mov	DWORD PTR [esi], eax
	jmp	SHORT $L242034
$L242033:
	xor	esi, esi
$L242034:

; 252  :     if (m_Data == NULL) {

	test	esi, esi
	mov	DWORD PTR __$EHRec$[esp+32], -1
	mov	DWORD PTR [edi], esi
	jne	SHORT $L242046

; 253  :         _com_issue_error(E_OUTOFMEMORY);

	push	-2147024882				; 8007000eH
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L242046:

; 254  :     }
; 255  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242035:
	mov	eax, DWORD PTR $T242032[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0_bstr_t@@QAE@PBD@Z:
	mov	eax, OFFSET FLAT:$T242045
	jmp	___CxxFrameHandler
text$x	ENDS
??0_bstr_t@@QAE@PBD@Z ENDP				; _bstr_t::_bstr_t
PUBLIC	??B_bstr_t@@QBEPAGXZ				; _bstr_t::operator unsigned short *
; Function compile flags: /Ogtpy
;	COMDAT ??B_bstr_t@@QBEPAGXZ
_TEXT	SEGMENT
??B_bstr_t@@QBEPAGXZ PROC NEAR				; _bstr_t::operator unsigned short *, COMDAT
; _this$ = ecx

; 412  :     return const_cast<wchar_t*>((m_Data != NULL) ? m_Data->GetWString() : NULL);

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $L242055
	mov	eax, DWORD PTR [eax]

; 413  : }

	ret	0
$L242055:

; 412  :     return const_cast<wchar_t*>((m_Data != NULL) ? m_Data->GetWString() : NULL);

	xor	eax, eax

; 413  : }

	ret	0
??B_bstr_t@@QBEPAGXZ ENDP				; _bstr_t::operator unsigned short *
_TEXT	ENDS
PUBLIC	??1Data_t@_bstr_t@@AAE@XZ			; _bstr_t::Data_t::~Data_t
; Function compile flags: /Ogtpy
;	COMDAT ??1Data_t@_bstr_t@@AAE@XZ
_TEXT	SEGMENT
??1Data_t@_bstr_t@@AAE@XZ PROC NEAR			; _bstr_t::Data_t::~Data_t, COMDAT
; _this$ = ecx

; 835  : {

	push	esi
	mov	esi, ecx

; 836  :     _Free();

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L242068
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
$L242068:
	mov	esi, DWORD PTR [esi+4]
	test	esi, esi
	je	SHORT $L242069
	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L242069:
	pop	esi

; 837  : }

	ret	0
??1Data_t@_bstr_t@@AAE@XZ ENDP				; _bstr_t::Data_t::~Data_t
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_G_com_error@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_com_error@@UAEPAXI@Z PROC NEAR			; _com_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	mov	DWORD PTR [esi], OFFSET FLAT:??_7_com_error@@6B@
	je	SHORT $L242076
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L242076:
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $L242077
	push	eax
	call	DWORD PTR __imp__LocalFree@4
$L242077:
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L242078
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242078:
	mov	eax, esi
	pop	esi
	ret	4
??_G_com_error@@UAEPAXI@Z ENDP				; _com_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@		; `string'
PUBLIC	??_C@_0BI@IHMKMHN@Falcon?54?40?5Debug?5Window?$AA@ ; `string'
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	__imp__GetStockObject@4:NEAR
EXTRN	__imp__LoadAcceleratorsA@8:NEAR
EXTRN	__imp__RegisterClassA@4:NEAR
EXTRN	__imp__CreateWindowExA@48:NEAR
_BSS	SEGMENT
_hAccel	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@
; File f:\projects\freefalcon\ui\src\winmain.cpp
CONST	SEGMENT
??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@ DB 'Falcon4Class', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IHMKMHN@Falcon?54?40?5Debug?5Window?$AA@
CONST	SEGMENT
??_C@_0BI@IHMKMHN@Falcon?54?40?5Debug?5Window?$AA@ DB 'Falcon 4.0 Debug W'
	DB	'indow', 00H					; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?initApplication@@YAEPAUHINSTANCE__@@0H@Z
_TEXT	SEGMENT
_wc$ = -40						; size = 40
?initApplication@@YAEPAUHINSTANCE__@@0H@Z PROC NEAR	; initApplication, COMDAT
; _hInstance$ = esi
; _hPrevInstance$ = eax

; 417  : {

	sub	esp, 40					; 00000028H

; 418  :    WNDCLASS    wc;
; 419  : 	BOOL rc;
; 420  : #ifdef _USE_SECRET_CODE_
; 421  :     struct tm expirationDate = { 0, 0, 0, 16, 7, 97 };
; 422  :     time_t expirationTime = mktime(&expirationDate);
; 423  :     time_t curTime = time(NULL);
; 424  :     if (curTime > expirationTime)
; 425  :        return FALSE;
; 426  : #endif //_USE_SECRET_CODE_
; 427  : 
; 428  :    if (!hPrevInstance)

	test	eax, eax
	jne	SHORT $L234158

; 429  :    {
; 430  :       wc.style = CS_HREDRAW | CS_VREDRAW;
; 431  :       wc.lpfnWndProc = (WNDPROC)SimWndProc; // The client window procedure.
; 432  :       wc.cbClsExtra = 0;                     // No room reserved for extra data.
; 433  :       wc.cbWndExtra = sizeof(DWORD);
; 434  :       wc.hInstance = hInstance;
; 435  : //      wc.hIcon = LoadIcon (hInstance, "ICON1.ICO");
; 436  :       wc.hIcon = LoadIcon (hInstance, MAKEINTRESOURCE(IDI_ICON1));	// OW BC

	push	228					; 000000e4H
	push	esi
	mov	DWORD PTR _wc$[esp+48], 3
	mov	DWORD PTR _wc$[esp+52], OFFSET FLAT:?SimWndProc@@YGJPAUHWND__@@IIJ@Z ; SimWndProc
	mov	DWORD PTR _wc$[esp+56], 0
	mov	DWORD PTR _wc$[esp+60], 4
	mov	DWORD PTR _wc$[esp+64], esi
	call	DWORD PTR __imp__LoadIconA@8

; 437  :       wc.hCursor = NULL;
; 438  :       wc.hbrBackground = (HBRUSH)GetStockObject (WHITE_BRUSH);

	push	0
	mov	DWORD PTR _wc$[esp+64], eax
	mov	DWORD PTR _wc$[esp+68], 0
	call	DWORD PTR __imp__GetStockObject@4
	mov	DWORD PTR _wc$[esp+68], eax

; 439  :       wc.lpszMenuName = MAKEINTRESOURCE(F4_DEMO_MENU);
; 440  :       wc.lpszClassName = "Falcon4Class";
; 441  :       rc = RegisterClass( &wc );

	lea	eax, DWORD PTR _wc$[esp+40]
	push	eax
	mov	DWORD PTR _wc$[esp+76], 127		; 0000007fH
	mov	DWORD PTR _wc$[esp+80], OFFSET FLAT:??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@
	call	DWORD PTR __imp__RegisterClassA@4

; 442  :       if( !rc )

	test	ax, ax
	jne	SHORT $L234158

; 443  :       {
; 444  :         return FALSE;

	xor	al, al

; 480  : 
; 481  : } /* initApplication */

	add	esp, 40					; 00000028H
	ret	0
$L234158:

; 445  :       }
; 446  :    }
; 447  : 
; 448  :    mainMenuWnd= CreateWindow ("Falcon4Class",
; 449  :                         "Falcon 4.0 Debug Window",
; 450  :                         WS_OVERLAPPEDWINDOW,
; 451  :                         720,
; 452  :                         100,
; 453  :                         240,
; 454  :                         100,
; 455  :                         NULL,
; 456  :                         NULL,
; 457  :                         hInstance,
; 458  :                         NULL);

	push	0
	push	esi
	push	0
	push	0
	push	100					; 00000064H
	push	240					; 000000f0H
	push	100					; 00000064H
	push	720					; 000002d0H
	push	13565952				; 00cf0000H
	push	OFFSET FLAT:??_C@_0BI@IHMKMHN@Falcon?54?40?5Debug?5Window?$AA@
	push	OFFSET FLAT:??_C@_0N@CAKMJPIJ@Falcon4Class?$AA@
	push	0
	call	DWORD PTR __imp__CreateWindowExA@48

; 459  : 
; 460  : #ifndef NDEBUG
; 461  :    ShowWindow (mainMenuWnd, SW_SHOW);
; 462  : 	if (auto_start)
; 463  : 	{
; 464  : // OW this causes some strange behaviour when the escape key is pressed for the first time
; 465  : //	   ShowWindow (mainMenuWnd, SW_MINIMIZE);
; 466  : 	}
; 467  : #endif
; 468  : 
; 469  :    hAccel = LoadAccelerators (hInstance, MAKEINTRESOURCE (IDR_FALCON4_ACC1));

	push	103					; 00000067H
	push	esi
	mov	DWORD PTR ?mainMenuWnd@@3PAUHWND__@@A, eax ; mainMenuWnd
	call	DWORD PTR __imp__LoadAcceleratorsA@8
	mov	DWORD PTR _hAccel, eax

; 470  : 
; 471  : /*
; 472  : 	// OW
; 473  : 	if(FAILED(CoInitialize(NULL))
; 474  : 		return FALSE;
; 475  : 
; 476  : 	_Module.Init(ObjectMap, hInstance);
; 477  : 	_Module.dwThreadID = GetCurrentThreadId();
; 478  : */
; 479  :   return TRUE;

	mov	al, 1

; 480  : 
; 481  : } /* initApplication */

	add	esp, 40					; 00000028H
	ret	0
?initApplication@@YAEPAUHINSTANCE__@@0H@Z ENDP		; initApplication
_TEXT	ENDS
PUBLIC	??_C@_02OLHPOPJI@?9C?$AA@			; `string'
PUBLIC	??_C@_03PPGMFBP@?9UA?$AA@			; `string'
PUBLIC	??_C@_02BKJHAODO@?9g?$AA@			; `string'
PUBLIC	??_C@_05DHBJIMBI@?9full?$AA@			; `string'
PUBLIC	??_C@_07EPCJCNHC@?9window?$AA@			; `string'
PUBLIC	??_C@_06DHEEKLDP@?9hires?$AA@			; `string'
PUBLIC	??_C@_08NPLKDBJI@?9version?$AA@			; `string'
PUBLIC	??_C@_09JAEHAJNO@?9norudder?$AA@		; `string'
PUBLIC	??_C@_0N@NFNLEJPF@?9nosmoothing?$AA@		; `string'
PUBLIC	??_C@_08NICBJJHH@?9numhats?$AA@			; `string'
PUBLIC	??_C@_08FLDKIHPE@?9nosound?$AA@			; `string'
PUBLIC	??_C@_07GENNGFLG@?9nopete?$AA@			; `string'
PUBLIC	??_C@_08IDAPPFO@?9tacedit?$AA@			; `string'
PUBLIC	??_C@_06DMDEHABB@?9norsc?$AA@			; `string'
PUBLIC	??_C@_07EDMLKJLF@?9usersc?$AA@			; `string'
PUBLIC	??_C@_05LMCBPBAD@?9auto?$AA@			; `string'
PUBLIC	??_C@_08GMAHGMDF@?9nomovie?$AA@			; `string'
PUBLIC	??_C@_0L@EBICPLIN@?9noUIcomms?$AA@		; `string'
PUBLIC	??_C@_05OHPGHBKD@?9time?$AA@			; `string'
PUBLIC	??_C@_06HCCJBEMI@?9movie?$AA@			; `string'
PUBLIC	??_C@_09MNALEAMA@?9noloader?$AA@		; `string'
PUBLIC	??_C@_0L@DFHPHOCE@?9bandwidth?$AA@		; `string'
PUBLIC	??_C@_09HDOOMJGP@?9bandwith?$AA@		; `string'
PUBLIC	??_C@_03KHMOKHHP@?9bw?$AA@			; `string'
PUBLIC	??_C@_07BOMKEPEL@?9urview?$AA@			; `string'
PUBLIC	??_C@_08GODJPMBM@?9latency?$AA@			; `string'
PUBLIC	??_C@_05DEDPAEMF@?9drop?$AA@			; `string'
PUBLIC	??_C@_08FMAGOMFJ@?9session?$AA@			; `string'
PUBLIC	??_C@_08HLEKBIEM@?9hostidx?$AA@			; `string'
PUBLIC	??_C@_07KFONBLME@?9hostid?$AA@			; `string'
PUBLIC	??_C@_06FNELANOH@?9alive?$AA@			; `string'
PUBLIC	??_C@_05FHMEINFP@?9mono?$AA@			; `string'
PUBLIC	??_C@_07HIEOBIMN@?9nomono?$AA@			; `string'
PUBLIC	??_C@_05BIDBHMLN@?9head?$AA@			; `string'
PUBLIC	??_C@_05NLLPJCGP@?9swap?$AA@			; `string'
PUBLIC	??_C@_04MIHAIBLG@?9mtu?$AA@			; `string'
PUBLIC	??_C@_03PBFIJCOK@?9ef?$AA@			; `string'
PUBLIC	??_C@_03OENKNOFJ@?9ip?$AA@			; `string'
PUBLIC	??_C@_0BK@IJKKJKCI@Force?5IP?5Address?5to?5?$CF08x?6?$AA@ ; `string'
PUBLIC	??_C@_05HDLOEPOC@?9port?$AA@			; `string'
PUBLIC	??_C@_06IKDJADCB@?9notnl?$AA@			; `string'
PUBLIC	??_C@_05MCGGLAGA@?9lgbk?$AA@			; `string'
PUBLIC	??_C@_05JCDAFC@?$CF?419s?$AA@			; `string'
PUBLIC	??_C@_06BPKAOIDI@?9smoke?$AA@			; `string'
PUBLIC	??_C@_0L@DBLHFPEP@?9enumswdev?$AA@		; `string'
PUBLIC	??_C@_0BB@KJDCEAMO@?9cockpitverifier?$AA@	; `string'
PUBLIC	??_C@_0N@PHJHLDM@?9writesndtbl?$AA@		; `string'
PUBLIC	??_C@_0BB@JEPECOMF@?9writemissiontbl?$AA@	; `string'
PUBLIC	??_C@_07LHMPGDOC@baseDir?$AA@			; `string'
PUBLIC	??_C@_0BG@BGENKKMB@No?5Registry?5Variable?6?$AA@ ; `string'
PUBLIC	??_C@_02CEGDFPFP@?4?2?$AA@			; `string'
PUBLIC	??_C@_0L@JPHDLCOH@theaterDir?$AA@		; `string'
PUBLIC	??_C@_09BKOCKBCN@objectDir?$AA@			; `string'
PUBLIC	??_C@_09DOMNOEH@movieMode?$AA@			; `string'
PUBLIC	??_C@_08IKNLGGOC@uiArtDir?$AA@			; `string'
PUBLIC	??_C@_0L@NKIODECG@uiSoundDir?$AA@		; `string'
PUBLIC	??_C@_07BNHBBHGA@?2sounds?$AA@			; `string'
PUBLIC	__real@42480000
PUBLIC	__real@43200000
PUBLIC	??_C@_07GMLLACMO@rheydon?$AA@			; `string'
PUBLIC	??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@ ; `string'
PUBLIC	??_C@_07HPFCBJFF@HostIDX?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_05PMBENPHG@?9file?$AA@			; `string'
PUBLIC	??_C@_06OHLAKOLC@?9event?$AA@			; `string'
PUBLIC	??_C@_07PLCHJDII@?9repair?$AA@			; `string'
PUBLIC	??_C@_0M@KGBEKOGC@?9armageddon?$AA@		; `string'
PUBLIC	??_C@_04BIELNKJB@?9log?$AA@			; `string'
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?FalconTerrainDataDir@@3PADA:BYTE		; FalconTerrainDataDir
EXTRN	?FalconObjectDataDir@@3PADA:BYTE		; FalconObjectDataDir
EXTRN	?Falcon3DDataDir@@3PADA:BYTE			; Falcon3DDataDir
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?SimLibPrintMessage@@YAHPADZZ:NEAR		; SimLibPrintMessage
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	_strtok:NEAR
EXTRN	?log_frame_rate@@3HA:DWORD			; log_frame_rate
EXTRN	_strnicmp:NEAR
EXTRN	_InitDebug:NEAR
EXTRN	?GraphicSettingMult@@3HA:DWORD			; GraphicSettingMult
EXTRN	?gTacticalFullEdit@@3HA:DWORD			; gTacticalFullEdit
EXTRN	_ComIPGetHostIDIndex:DWORD
EXTRN	_force_ip_address:DWORD
EXTRN	_force_port:WORD
EXTRN	?flag_keep_smoke_trails@@3HA:DWORD		; flag_keep_smoke_trails
EXTRN	?gUnlimitedAmmo@@3HA:DWORD			; gUnlimitedAmmo
EXTRN	?UR_HEAD_VIEW@@3MA:DWORD			; UR_HEAD_VIEW
EXTRN	_gSoundFlags:DWORD
EXTRN	?F4CommsBandwidth@@3HA:DWORD			; F4CommsBandwidth
EXTRN	?F4CommsLatency@@3HA:DWORD			; F4CommsLatency
EXTRN	?g_bEnumSoftwareDevices@@3_NA:BYTE		; g_bEnumSoftwareDevices
EXTRN	?F4CommsDropInterval@@3HA:DWORD			; F4CommsDropInterval
EXTRN	?F4CommsSwapInterval@@3HA:DWORD			; F4CommsSwapInterval
EXTRN	?F4SessionUpdateTime@@3HA:DWORD			; F4SessionUpdateTime
EXTRN	?F4SessionAliveTimeout@@3HA:DWORD		; F4SessionAliveTimeout
EXTRN	?F4CommsMTU@@3HA:DWORD				; F4CommsMTU
EXTRN	?gTimeModeServer@@3HA:DWORD			; gTimeModeServer
EXTRN	?SetDevCaps@DisplayOptionsClass@@SAXI@Z:NEAR	; DisplayOptionsClass::SetDevCaps
EXTRN	?SimDriver@@3VSimulationDriver@@A:BYTE		; SimDriver
EXTRN	?HighResolutionHackFlag@@3HA:DWORD		; HighResolutionHackFlag
;	COMDAT ??_C@_07GMLLACMO@rheydon?$AA@
; File f:\projects\freefalcon\sim\include\otwdrive.h
CONST	SEGMENT
??_C@_07GMLLACMO@rheydon?$AA@ DB 'rheydon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@
CONST	SEGMENT
??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@ DB 'Software\M'
	DB	'icroProse\Falcon\4.0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HPFCBJFF@HostIDX?$AA@
CONST	SEGMENT
??_C@_07HPFCBJFF@HostIDX?$AA@ DB 'HostIDX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PMBENPHG@?9file?$AA@
CONST	SEGMENT
??_C@_05PMBENPHG@?9file?$AA@ DB '-file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHLAKOLC@?9event?$AA@
CONST	SEGMENT
??_C@_06OHLAKOLC@?9event?$AA@ DB '-event', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PLCHJDII@?9repair?$AA@
CONST	SEGMENT
??_C@_07PLCHJDII@?9repair?$AA@ DB '-repair', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KGBEKOGC@?9armageddon?$AA@
CONST	SEGMENT
??_C@_0M@KGBEKOGC@?9armageddon?$AA@ DB '-armageddon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BIELNKJB@?9log?$AA@
CONST	SEGMENT
??_C@_04BIELNKJB@?9log?$AA@ DB '-log', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02OLHPOPJI@?9C?$AA@
CONST	SEGMENT
??_C@_02OLHPOPJI@?9C?$AA@ DB '-C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PPGMFBP@?9UA?$AA@
CONST	SEGMENT
??_C@_03PPGMFBP@?9UA?$AA@ DB '-UA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BKJHAODO@?9g?$AA@
CONST	SEGMENT
??_C@_02BKJHAODO@?9g?$AA@ DB '-g', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DHBJIMBI@?9full?$AA@
CONST	SEGMENT
??_C@_05DHBJIMBI@?9full?$AA@ DB '-full', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EPCJCNHC@?9window?$AA@
CONST	SEGMENT
??_C@_07EPCJCNHC@?9window?$AA@ DB '-window', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DHEEKLDP@?9hires?$AA@
CONST	SEGMENT
??_C@_06DHEEKLDP@?9hires?$AA@ DB '-hires', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NPLKDBJI@?9version?$AA@
CONST	SEGMENT
??_C@_08NPLKDBJI@?9version?$AA@ DB '-version', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JAEHAJNO@?9norudder?$AA@
CONST	SEGMENT
??_C@_09JAEHAJNO@?9norudder?$AA@ DB '-norudder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NFNLEJPF@?9nosmoothing?$AA@
CONST	SEGMENT
??_C@_0N@NFNLEJPF@?9nosmoothing?$AA@ DB '-nosmoothing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NICBJJHH@?9numhats?$AA@
CONST	SEGMENT
??_C@_08NICBJJHH@?9numhats?$AA@ DB '-numhats', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLDKIHPE@?9nosound?$AA@
CONST	SEGMENT
??_C@_08FLDKIHPE@?9nosound?$AA@ DB '-nosound', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GENNGFLG@?9nopete?$AA@
CONST	SEGMENT
??_C@_07GENNGFLG@?9nopete?$AA@ DB '-nopete', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IDAPPFO@?9tacedit?$AA@
CONST	SEGMENT
??_C@_08IDAPPFO@?9tacedit?$AA@ DB '-tacedit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DMDEHABB@?9norsc?$AA@
CONST	SEGMENT
??_C@_06DMDEHABB@?9norsc?$AA@ DB '-norsc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDMLKJLF@?9usersc?$AA@
CONST	SEGMENT
??_C@_07EDMLKJLF@?9usersc?$AA@ DB '-usersc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LMCBPBAD@?9auto?$AA@
CONST	SEGMENT
??_C@_05LMCBPBAD@?9auto?$AA@ DB '-auto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMAHGMDF@?9nomovie?$AA@
CONST	SEGMENT
??_C@_08GMAHGMDF@?9nomovie?$AA@ DB '-nomovie', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EBICPLIN@?9noUIcomms?$AA@
CONST	SEGMENT
??_C@_0L@EBICPLIN@?9noUIcomms?$AA@ DB '-noUIcomms', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OHPGHBKD@?9time?$AA@
CONST	SEGMENT
??_C@_05OHPGHBKD@?9time?$AA@ DB '-time', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HCCJBEMI@?9movie?$AA@
CONST	SEGMENT
??_C@_06HCCJBEMI@?9movie?$AA@ DB '-movie', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNALEAMA@?9noloader?$AA@
CONST	SEGMENT
??_C@_09MNALEAMA@?9noloader?$AA@ DB '-noloader', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DFHPHOCE@?9bandwidth?$AA@
CONST	SEGMENT
??_C@_0L@DFHPHOCE@?9bandwidth?$AA@ DB '-bandwidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HDOOMJGP@?9bandwith?$AA@
CONST	SEGMENT
??_C@_09HDOOMJGP@?9bandwith?$AA@ DB '-bandwith', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHMOKHHP@?9bw?$AA@
CONST	SEGMENT
??_C@_03KHMOKHHP@?9bw?$AA@ DB '-bw', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BOMKEPEL@?9urview?$AA@
CONST	SEGMENT
??_C@_07BOMKEPEL@?9urview?$AA@ DB '-urview', 00H	; `string'
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@43200000
CONST	SEGMENT
__real@43200000 DD 043200000r			; 160
CONST	ENDS
;	COMDAT ??_C@_08GODJPMBM@?9latency?$AA@
CONST	SEGMENT
??_C@_08GODJPMBM@?9latency?$AA@ DB '-latency', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DEDPAEMF@?9drop?$AA@
CONST	SEGMENT
??_C@_05DEDPAEMF@?9drop?$AA@ DB '-drop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FMAGOMFJ@?9session?$AA@
CONST	SEGMENT
??_C@_08FMAGOMFJ@?9session?$AA@ DB '-session', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HLEKBIEM@?9hostidx?$AA@
CONST	SEGMENT
??_C@_08HLEKBIEM@?9hostidx?$AA@ DB '-hostidx', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFONBLME@?9hostid?$AA@
CONST	SEGMENT
??_C@_07KFONBLME@?9hostid?$AA@ DB '-hostid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNELANOH@?9alive?$AA@
CONST	SEGMENT
??_C@_06FNELANOH@?9alive?$AA@ DB '-alive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FHMEINFP@?9mono?$AA@
CONST	SEGMENT
??_C@_05FHMEINFP@?9mono?$AA@ DB '-mono', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIEOBIMN@?9nomono?$AA@
CONST	SEGMENT
??_C@_07HIEOBIMN@?9nomono?$AA@ DB '-nomono', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BIDBHMLN@?9head?$AA@
CONST	SEGMENT
??_C@_05BIDBHMLN@?9head?$AA@ DB '-head', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NLLPJCGP@?9swap?$AA@
CONST	SEGMENT
??_C@_05NLLPJCGP@?9swap?$AA@ DB '-swap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MIHAIBLG@?9mtu?$AA@
CONST	SEGMENT
??_C@_04MIHAIBLG@?9mtu?$AA@ DB '-mtu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PBFIJCOK@?9ef?$AA@
CONST	SEGMENT
??_C@_03PBFIJCOK@?9ef?$AA@ DB '-ef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OENKNOFJ@?9ip?$AA@
CONST	SEGMENT
??_C@_03OENKNOFJ@?9ip?$AA@ DB '-ip', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IJKKJKCI@Force?5IP?5Address?5to?5?$CF08x?6?$AA@
CONST	SEGMENT
??_C@_0BK@IJKKJKCI@Force?5IP?5Address?5to?5?$CF08x?6?$AA@ DB 'Force IP Ad'
	DB	'dress to %08x', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDLOEPOC@?9port?$AA@
CONST	SEGMENT
??_C@_05HDLOEPOC@?9port?$AA@ DB '-port', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IKDJADCB@?9notnl?$AA@
CONST	SEGMENT
??_C@_06IKDJADCB@?9notnl?$AA@ DB '-notnl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MCGGLAGA@?9lgbk?$AA@
CONST	SEGMENT
??_C@_05MCGGLAGA@?9lgbk?$AA@ DB '-lgbk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCDAFC@?$CF?419s?$AA@
CONST	SEGMENT
??_C@_05JCDAFC@?$CF?419s?$AA@ DB '%.19s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPKAOIDI@?9smoke?$AA@
CONST	SEGMENT
??_C@_06BPKAOIDI@?9smoke?$AA@ DB '-smoke', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBLHFPEP@?9enumswdev?$AA@
CONST	SEGMENT
??_C@_0L@DBLHFPEP@?9enumswdev?$AA@ DB '-enumswdev', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KJDCEAMO@?9cockpitverifier?$AA@
CONST	SEGMENT
??_C@_0BB@KJDCEAMO@?9cockpitverifier?$AA@ DB '-cockpitverifier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PHJHLDM@?9writesndtbl?$AA@
CONST	SEGMENT
??_C@_0N@PHJHLDM@?9writesndtbl?$AA@ DB '-writesndtbl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEPECOMF@?9writemissiontbl?$AA@
CONST	SEGMENT
??_C@_0BB@JEPECOMF@?9writemissiontbl?$AA@ DB '-writemissiontbl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LHMPGDOC@baseDir?$AA@
CONST	SEGMENT
??_C@_07LHMPGDOC@baseDir?$AA@ DB 'baseDir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BGENKKMB@No?5Registry?5Variable?6?$AA@
CONST	SEGMENT
??_C@_0BG@BGENKKMB@No?5Registry?5Variable?6?$AA@ DB 'No Registry Variable'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02CEGDFPFP@?4?2?$AA@
CONST	SEGMENT
??_C@_02CEGDFPFP@?4?2?$AA@ DB '.\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JPHDLCOH@theaterDir?$AA@
CONST	SEGMENT
??_C@_0L@JPHDLCOH@theaterDir?$AA@ DB 'theaterDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BKOCKBCN@objectDir?$AA@
CONST	SEGMENT
??_C@_09BKOCKBCN@objectDir?$AA@ DB 'objectDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOMNOEH@movieMode?$AA@
CONST	SEGMENT
??_C@_09DOMNOEH@movieMode?$AA@ DB 'movieMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IKNLGGOC@uiArtDir?$AA@
CONST	SEGMENT
??_C@_08IKNLGGOC@uiArtDir?$AA@ DB 'uiArtDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKIODECG@uiSoundDir?$AA@
CONST	SEGMENT
??_C@_0L@NKIODECG@uiSoundDir?$AA@ DB 'uiSoundDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BNHBBHGA@?2sounds?$AA@
CONST	SEGMENT
??_C@_07BNHBBHGA@?2sounds?$AA@ DB '\sounds', 00H	; `string'
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
CONST	ENDS
;	COMDAT ?ParseCommandLine@@YAXPAD@Z
_TEXT	SEGMENT
_size$ = -20						; size = 4
_theKey$ = -16						; size = 4
_type$ = -12						; size = 4
_value$ = -8						; size = 4
tv1056 = -4						; size = 4
_cmdLine$ = 8						; size = 4
?ParseCommandLine@@YAXPAD@Z PROC NEAR			; ParseCommandLine, COMDAT

; 1026 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 1027 : 	char* arg;
; 1028 : 	LONG retval = ERROR_SUCCESS;
; 1029 : 	DWORD value;
; 1030 : 	DWORD type, size;
; 1031 : 	HKEY theKey;
; 1032 : 
; 1033 : 	if (i_am ("rheydon"))

	mov	esi, OFFSET FLAT:??_C@_07GMLLACMO@rheydon?$AA@
	call	?i_am@@YAHPAD@Z				; i_am
	xor	ebx, ebx
	test	eax, eax
	je	SHORT $L242105

; 1034 : 	{
; 1035 : 		InitDebug (DEBUGGER_TEXT_MODE);

	push	ebx
	call	_InitDebug

; 1036 : //		gSoundFlags = 0;
; 1037 : 		FalconDisplay.displayFullScreen = FALSE;
; 1038 : //		wait_for_loaded = FALSE;
; 1039 : 		auto_start = TRUE;

	mov	edi, 1
	add	esp, 4
	mov	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, ebx
	mov	DWORD PTR ?auto_start@@3HA, edi		; auto_start
	jmp	SHORT $L234471
$L242105:
	mov	edi, 1
$L234471:

; 1040 : 		F4SetAsserts(TRUE);
; 1041 : //		F4SetHardCrash(TRUE);
; 1042 : //		ShiSetHardCrash(TRUE);
; 1043 : 		ShiSetAsserts(TRUE);
; 1044 : 	}
; 1045 : #ifdef DEBUG
; 1046 : 	else if (i_am ("mmortime"))
; 1047 : 	{
; 1048 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1049 : 		FalconDisplay.displayFullScreen = FALSE;
; 1050 : 		RepairObjective = 1;
; 1051 : 		intro_movie = FALSE;
; 1052 : 		eyeFlyEnabled = TRUE;
; 1053 : 		ShiSetAsserts(TRUE);
; 1054 : 		F4SetAsserts(TRUE);
; 1055 : 	}
; 1056 : 	else if (i_am ("kklemmic"))
; 1057 : 	{
; 1058 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1059 : 		auto_start = TRUE;
; 1060 : 		wait_for_loaded = FALSE;
; 1061 : 		FalconDisplay.displayFullScreen = FALSE;
; 1062 : 		F4SetAsserts(TRUE);
; 1063 : 		F4SetHardCrash(TRUE);
; 1064 : 		ShiSetHardCrash(TRUE);
; 1065 : 		ShiSetAsserts(TRUE);
; 1066 : 	}
; 1067 : 	else if (i_am ("dpower"))
; 1068 : 	{
; 1069 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1070 : 		//auto_start = TRUE;
; 1071 : 		FalconDisplay.displayFullScreen = FALSE;
; 1072 : 		RepairObjective = 1;
; 1073 : 		intro_movie = FALSE;
; 1074 : 		eyeFlyEnabled = TRUE;
; 1075 : 		ShiSetAsserts(TRUE);
; 1076 : 		F4SetAsserts(TRUE);
; 1077 : 		//wait_for_loaded = FALSE;
; 1078 : 	}
; 1079 : 	else if (i_am ("ericg") || i_am ("chrisw"))
; 1080 : 	{
; 1081 : 		eyeFlyEnabled = TRUE;
; 1082 : 	}
; 1083 : 	else if (i_am ("lrosensh"))
; 1084 : 	{
; 1085 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1086 : 		auto_start = TRUE;
; 1087 : 		FalconDisplay.displayFullScreen = FALSE;
; 1088 :       intro_movie = TRUE;
; 1089 : //      gUnlimitedAmmo = 3;
; 1090 : 	}
; 1091 : 	else if (i_am ("vincentf"))
; 1092 : 	{
; 1093 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1094 : 		gSoundFlags = 0;
; 1095 : 		FalconDisplay.displayFullScreen = FALSE;
; 1096 : 		wait_for_loaded = FALSE;
; 1097 : 		auto_start = TRUE;
; 1098 : 	}
; 1099 : 
; 1100 : 	else
; 1101 : 	{
; 1102 : 		InitDebug (DEBUGGER_TEXT_MODE);
; 1103 : 		auto_start = TRUE;
; 1104 : 	}
; 1105 : #endif 
; 1106 : 
; 1107 : 	// HACK HACK HACK - stuff
; 1108 : //	F4SetAsserts(FALSE);
; 1109 : //	ShiSetAsserts(FALSE);
; 1110 : 
; 1111 :    size = sizeof (FalconDataDirectory);
; 1112 :    retval = RegOpenKeyEx(HKEY_LOCAL_MACHINE, FALCON_REGISTRY_KEY,
; 1113 :       0, KEY_ALL_ACCESS, &theKey);

	lea	eax, DWORD PTR _theKey$[esp+32]
	push	eax
	push	983103					; 000f003fH
	push	ebx
	push	OFFSET FLAT:??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@
	push	-2147483646				; 80000002H
	mov	DWORD PTR _size$[esp+52], 260		; 00000104H
	call	DWORD PTR __imp__RegOpenKeyExA@20

; 1114 : 
; 1115 : 	size = sizeof (ComIPGetHostIDIndex);
; 1116 : 	retval = RegQueryValueEx(theKey, "HostIDX", 0, &type, (LPBYTE)&value, &size);

	lea	ecx, DWORD PTR _size$[esp+32]
	push	ecx
	mov	ecx, DWORD PTR _theKey$[esp+36]
	lea	edx, DWORD PTR _value$[esp+36]
	push	edx
	lea	eax, DWORD PTR _type$[esp+40]
	push	eax
	push	ebx
	push	OFFSET FLAT:??_C@_07HPFCBJFF@HostIDX?$AA@
	push	ecx
	mov	DWORD PTR _size$[esp+56], 4
	call	DWORD PTR __imp__RegQueryValueExA@24

; 1117 : 	if (retval == ERROR_SUCCESS)

	test	eax, eax
	jne	SHORT $L234479

; 1118 : 	{
; 1119 : 		ComIPGetHostIDIndex = value;

	mov	edx, DWORD PTR _value$[esp+32]
	mov	DWORD PTR _ComIPGetHostIDIndex, edx
$L234479:

; 1120 : 	}
; 1121 : 
; 1122 :    retval = RegCloseKey(theKey);

	mov	eax, DWORD PTR _theKey$[esp+32]
	push	ebp
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 1123 : 
; 1124 : 	// Parse Command Line
; 1125 : 	arg = strtok (cmdLine, " ");

	mov	ecx, DWORD PTR _cmdLine$[esp+32]
	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ecx
	call	_strtok

; 1126 : 
; 1127 : 	//sfr: zero lgbk
; 1128 : 	memset(g_strLgbk, 0, 20);

	xor	edx, edx
	mov	DWORD PTR _g_strLgbk, edx
	mov	DWORD PTR _g_strLgbk+4, edx
	mov	DWORD PTR _g_strLgbk+8, edx
	mov	esi, eax
	add	esp, 8

; 1129 : 
; 1130 :    if (arg != NULL)

	cmp	esi, ebx
	mov	DWORD PTR _g_strLgbk+12, edx
	mov	DWORD PTR _g_strLgbk+16, edx
	je	$L234484
	mov	ebp, 500				; 000001f4H
	npad	3
$L234482:

; 1131 :    {
; 1132 :       do
; 1133 :    	{
; 1134 : 		if (!stricmp (arg, "-file"))

	push	OFFSET FLAT:??_C@_05PMBENPHG@?9file?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234485

; 1135 :             SimDriver.doFile = 1 - SimDriver.doFile;

	mov	ecx, DWORD PTR ?SimDriver@@3VSimulationDriver@@A+40
	mov	eax, edi
	sub	eax, ecx
	mov	DWORD PTR ?SimDriver@@3VSimulationDriver@@A+40, eax
$L234485:

; 1136 : 
; 1137 :          if (!stricmp (arg, "-event"))

	push	OFFSET FLAT:??_C@_06OHLAKOLC@?9event?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234487

; 1138 :             SimDriver.doEvent = TRUE;

	mov	DWORD PTR ?SimDriver@@3VSimulationDriver@@A+44, edi
$L234487:

; 1139 : 
; 1140 :          if (strnicmp (arg, "-repair", 2) == 0)

	push	2
	push	OFFSET FLAT:??_C@_07PLCHJDII@?9repair?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234489

; 1141 :             RepairObjective = 1;

	mov	DWORD PTR ?RepairObjective@@3HA, edi	; RepairObjective
$L234489:

; 1142 : 
; 1143 : 		 if (stricmp (arg, "-armageddon") == 0)

	push	OFFSET FLAT:??_C@_0M@KGBEKOGC@?9armageddon?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234491

; 1144 :             DestroyObjective = 1;

	mov	DWORD PTR ?DestroyObjective@@3HA, edi	; DestroyObjective
$L234491:

; 1145 : 
; 1146 :          if (stricmp (arg, "-log") == 0)

	push	OFFSET FLAT:??_C@_04BIELNKJB@?9log?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234493

; 1147 :             log_frame_rate = TRUE;

	mov	DWORD PTR ?log_frame_rate@@3HA, edi	; log_frame_rate
$L234493:

; 1148 : 
; 1149 : 
; 1150 :          if (strnicmp (arg, "-C", 2) == 0)

	push	2
	push	OFFSET FLAT:??_C@_02OLHPOPJI@?9C?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234495

; 1151 :             ClearObjManualFlags = 1;

	mov	DWORD PTR ?ClearObjManualFlags@@3HA, edi ; ClearObjManualFlags
$L234495:

; 1152 : 
; 1153 : 
; 1154 :          if (strnicmp (arg, "-UA", 3) == 0)

	push	3
	push	OFFSET FLAT:??_C@_03PPGMFBP@?9UA?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234497

; 1155 :             gUnlimitedAmmo ++;

	inc	DWORD PTR ?gUnlimitedAmmo@@3HA		; gUnlimitedAmmo
$L234497:

; 1156 : 		          
; 1157 :          //if (!strncmp (arg, "-g", 2))
; 1158 :          //   FalconDisplay.deviceNumber = 1 - FalconDisplay.deviceNumber;
; 1159 : 
; 1160 : 		 if (!strnicmp (arg, "-g", 2))

	push	2
	push	OFFSET FLAT:??_C@_02BKJHAODO@?9g?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234503

; 1161 : 		 {
; 1162 : 			 ///if(sscanf(arg,"-g%d",GraphicSettingMult) != 1)
; 1163 : 			//	GraphicSettingMult = 1;
; 1164 : 			 int temp = atoi(&arg[2]);

	lea	ecx, DWORD PTR [esi+2]
	push	ecx
	call	_atoi
	add	esp, 4

; 1165 : 			 if(temp >= 1)

	cmp	eax, edi

; 1166 : 				GraphicSettingMult = temp;

	mov	DWORD PTR ?GraphicSettingMult@@3HA, eax	; GraphicSettingMult
	jge	SHORT $L234503

; 1167 : 			 else
; 1168 : 				 GraphicSettingMult = 1;

	mov	DWORD PTR ?GraphicSettingMult@@3HA, edi	; GraphicSettingMult
$L234503:

; 1169 : 		 }
; 1170 : 
; 1171 :          if (!stricmp (arg, "-full"))

	push	OFFSET FLAT:??_C@_05DHBJIMBI@?9full?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234504

; 1172 :             FalconDisplay.displayFullScreen = TRUE;

	mov	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, edi

; 1173 :          else if (!stricmp (arg, "-window"))

	jmp	SHORT $L234507
$L234504:
	push	OFFSET FLAT:??_C@_07EPCJCNHC@?9window?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234507

; 1174 :             FalconDisplay.displayFullScreen = FALSE;

	mov	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, ebx
$L234507:

; 1175 : 
; 1176 :          if (stricmp (arg, "-hires") == 0)

	push	OFFSET FLAT:??_C@_06DHEEKLDP@?9hires?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234509

; 1177 :             HighResolutionHackFlag = TRUE;

	mov	DWORD PTR ?HighResolutionHackFlag@@3HA, edi ; HighResolutionHackFlag
$L234509:

; 1178 : 
; 1179 : 		 if(!stricmp(arg,"-version"))

	push	OFFSET FLAT:??_C@_08NPLKDBJI@?9version?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234511

; 1180 : 			VersionInfo=TRUE;

	mov	DWORD PTR ?VersionInfo@@3HA, edi	; VersionInfo
$L234511:

; 1181 : 
; 1182 : 		 if(!stricmp(arg,"-norudder"))

	push	OFFSET FLAT:??_C@_09JAEHAJNO@?9norudder?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234513

; 1183 : 			NoRudder=TRUE;

	mov	DWORD PTR ?NoRudder@@3HA, edi		; NoRudder
$L234513:

; 1184 : 
; 1185 : 		 if(!stricmp(arg,"-nosmoothing"))

	push	OFFSET FLAT:??_C@_0N@NFNLEJPF@?9nosmoothing?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234515

; 1186 : 			DisableSmoothing=TRUE;		 

	mov	DWORD PTR ?DisableSmoothing@@3HA, edi	; DisableSmoothing
$L234515:

; 1187 : 
; 1188 : 		 if (!stricmp (arg, "-numhats"))

	push	OFFSET FLAT:??_C@_08NICBJJHH@?9numhats?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234519

; 1189 :         {
; 1190 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234519

; 1191 : 			{
; 1192 : 				NumHats = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	DWORD PTR ?NumHats@@3HA, eax		; NumHats
$L234519:

; 1193 : 			}
; 1194 :         }
; 1195 : 
; 1196 : 		 if(strnicmp(arg,"-nosound", 8) == 0)

	push	8
	push	OFFSET FLAT:??_C@_08FLDKIHPE@?9nosound?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234520

; 1197 : 			gSoundFlags &= (0xffffffff ^ FSND_SOUND);

	and	DWORD PTR _gSoundFlags, -2		; fffffffeH
$L234520:

; 1198 : 
; 1199 : 		 if(strnicmp(arg,"-nopete", 7) == 0)

	push	7
	push	OFFSET FLAT:??_C@_07GENNGFLG@?9nopete?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234522

; 1200 : 			gSoundFlags &=(0xffffffff ^ FSND_REPETE);

	and	DWORD PTR _gSoundFlags, -3		; fffffffdH
$L234522:

; 1201 : 
; 1202 : #ifdef DEBUG
; 1203 : 		 if(strnicmp(arg,"-noassert", 9) == 0)
; 1204 :             {
; 1205 : 			F4SetAsserts(FALSE);
; 1206 : 			// KCK: If this line is causing your compile to fail, update
; 1207 : 			// codelib, don't comment it out.
; 1208 : 			ShiSetAsserts(FALSE);
; 1209 :             }
; 1210 : 
; 1211 : 		 // JB 010325
; 1212 : 		 if(strnicmp(arg,"-nowarning", 10) == 0)
; 1213 : 			ShiSetWarnings(FALSE);
; 1214 : 
; 1215 : 		 if(strnicmp(arg,"-hardcrash", 9) == 0)
; 1216 : 		    {
; 1217 : 			F4SetAsserts(TRUE);
; 1218 : 			F4SetHardCrash(TRUE);
; 1219 : 			// KCK: If this line is causing your compile to fail, update
; 1220 : 			// codelib, don't comment it out.
; 1221 : 			ShiSetHardCrash(TRUE);
; 1222 : 			ShiSetAsserts(TRUE);
; 1223 : 			}
; 1224 : 
; 1225 : 		 if(stricmp(arg,"-resetpilots") == 0)
; 1226 : 			gClearPilotInfo = 1;
; 1227 : #endif
; 1228 : 
; 1229 : 		 if(stricmp(arg,"-tacedit") == 0)

	push	OFFSET FLAT:??_C@_08IDAPPFO@?9tacedit?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234524

; 1230 : 			gTacticalFullEdit = 1;

	mov	DWORD PTR ?gTacticalFullEdit@@3HA, edi	; gTacticalFullEdit
$L234524:

; 1231 : 
; 1232 : 		 if(stricmp(arg,"-norsc") == 0)

	push	OFFSET FLAT:??_C@_06DMDEHABB@?9norsc?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234526

; 1233 : 			 _LOAD_ART_RESOURCES_=0;

	mov	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, ebx ; _LOAD_ART_RESOURCES_
$L234526:

; 1234 : 		 if(stricmp(arg,"-usersc") == 0)

	push	OFFSET FLAT:??_C@_07EDMLKJLF@?9usersc?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234528

; 1235 : 			 _LOAD_ART_RESOURCES_=1;

	mov	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, edi ; _LOAD_ART_RESOURCES_
$L234528:

; 1236 : 
; 1237 : 		if (strnicmp (arg, "-auto", 5) == 0)

	push	5
	push	OFFSET FLAT:??_C@_05LMCBPBAD@?9auto?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234530

; 1238 : 		{
; 1239 : 			auto_start = TRUE;

	mov	DWORD PTR ?auto_start@@3HA, edi		; auto_start
$L234530:

; 1240 : 		}
; 1241 : 
; 1242 : 		if (strnicmp (arg, "-nomovie", 8) == 0)

	push	8
	push	OFFSET FLAT:??_C@_08GMAHGMDF@?9nomovie?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234532

; 1243 : 		{
; 1244 : 			intro_movie = FALSE;

	mov	DWORD PTR ?intro_movie@@3HA, ebx	; intro_movie
$L234532:

; 1245 : 		}
; 1246 : 
; 1247 : 		if (strnicmp (arg, "-noUIcomms", 8) == 0)

	push	8
	push	OFFSET FLAT:??_C@_0L@EBICPLIN@?9noUIcomms?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234534

; 1248 : 		{
; 1249 : 			noUIcomms = TRUE;

	mov	DWORD PTR ?noUIcomms@@3HA, edi		; noUIcomms
$L234534:

; 1250 : 		}
; 1251 : 
; 1252 : /* MN 020104 always allow UI screenshots
; 1253 : 		if (strnicmp (arg, "-screen", 8) == 0)
; 1254 : 		{
; 1255 : 			gScreenShotEnabled = 1;
; 1256 : 		}*/
; 1257 : 
; 1258 : 		if (strnicmp (arg, "-time", 5) == 0)

	push	5
	push	OFFSET FLAT:??_C@_05OHPGHBKD@?9time?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234536

; 1259 : 		{
; 1260 : 			gTimeModeServer = 1;

	mov	DWORD PTR ?gTimeModeServer@@3HA, edi	; gTimeModeServer
$L234536:

; 1261 : 		}
; 1262 : 
; 1263 : 		if (strnicmp (arg, "-movie", 6) == 0)

	push	6
	push	OFFSET FLAT:??_C@_06HCCJBEMI@?9movie?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234538

; 1264 : 		{
; 1265 : 			intro_movie = TRUE;

	mov	DWORD PTR ?intro_movie@@3HA, edi	; intro_movie
$L234538:

; 1266 : 		}
; 1267 : 
; 1268 : 		if (strnicmp (arg, "-noloader", 9) == 0)

	push	9
	push	OFFSET FLAT:??_C@_09MNALEAMA@?9noloader?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234540

; 1269 : 		{
; 1270 : 			wait_for_loaded = FALSE;

	mov	DWORD PTR ?wait_for_loaded@@3HA, ebx	; wait_for_loaded
$L234540:

; 1271 : 		}
; 1272 : 
; 1273 : #ifdef DEBUG
; 1274 : 		if(strnicmp(arg,"-campinput", 10) == 0)
; 1275 : 			gCampPlayerInput = atoi(arg+10);
; 1276 : #endif
; 1277 : 
; 1278 :         if (!stricmp (arg, "-bandwidth") || !stricmp (arg, "-bandwith") ||!stricmp (arg, "-bw") )

	push	OFFSET FLAT:??_C@_0L@DFHPHOCE@?9bandwidth?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $L234543
	push	OFFSET FLAT:??_C@_09HDOOMJGP@?9bandwith?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $L234543
	push	OFFSET FLAT:??_C@_03KHMOKHHP@?9bw?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234548
$L234543:

; 1279 :         {
; 1280 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234548

; 1281 :             {
; 1282 :                 F4CommsBandwidth = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4

; 1283 :                 if (F4CommsBandwidth < -1)

	cmp	eax, -1
	mov	DWORD PTR ?F4CommsBandwidth@@3HA, eax	; F4CommsBandwidth
	jge	SHORT $L234548

; 1284 :                     F4CommsBandwidth *= -1;

	neg	eax
	mov	DWORD PTR ?F4CommsBandwidth@@3HA, eax	; F4CommsBandwidth
$L234548:

; 1285 :             }
; 1286 :         }
; 1287 :  
; 1288 :         if (!stricmp (arg, "-urview"))

	push	OFFSET FLAT:??_C@_07BOMKEPEL@?9urview?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234554

; 1289 :         {
; 1290 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234554

; 1291 :             {
; 1292 :                 UR_HEAD_VIEW = (float)atoi(arg);

	push	esi
	call	_atoi
	mov	DWORD PTR tv1056[esp+40], eax
	fild	DWORD PTR tv1056[esp+40]
	add	esp, 4
	fstp	DWORD PTR ?UR_HEAD_VIEW@@3MA		; UR_HEAD_VIEW

; 1293 : 				if(UR_HEAD_VIEW < 50) UR_HEAD_VIEW=50;

	fld	DWORD PTR ?UR_HEAD_VIEW@@3MA		; UR_HEAD_VIEW
	fcomp	DWORD PTR __real@42480000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $L234553
	mov	DWORD PTR ?UR_HEAD_VIEW@@3MA, 1112014848 ; 42480000H

; 1294 : 				if(UR_HEAD_VIEW > 160) UR_HEAD_VIEW=160;

	jmp	SHORT $L234554
$L234553:
	fld	DWORD PTR ?UR_HEAD_VIEW@@3MA		; UR_HEAD_VIEW
	fcomp	DWORD PTR __real@43200000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $L234554
	mov	DWORD PTR ?UR_HEAD_VIEW@@3MA, 1126170624 ; 43200000H
$L234554:

; 1295 :             }
; 1296 :         }
; 1297 :  
; 1298 :         if (!stricmp (arg, "-latency"))

	push	OFFSET FLAT:??_C@_08GODJPMBM@?9latency?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234558

; 1299 :         {
; 1300 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234558

; 1301 : 			{
; 1302 : 				F4CommsLatency = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4

; 1303 : 				if (F4CommsLatency < 0)

	cmp	eax, ebx
	mov	DWORD PTR ?F4CommsLatency@@3HA, eax	; F4CommsLatency
	jge	SHORT $L234558

; 1304 : 					F4CommsLatency *= -1;

	neg	eax
	mov	DWORD PTR ?F4CommsLatency@@3HA, eax	; F4CommsLatency
$L234558:

; 1305 : 			}
; 1306 :         }
; 1307 : 
; 1308 :         if (!stricmp (arg, "-drop"))

	push	OFFSET FLAT:??_C@_05DEDPAEMF@?9drop?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234562

; 1309 :         {
; 1310 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234562

; 1311 : 			{
; 1312 : 				F4CommsDropInterval = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4

; 1313 : 				if (F4CommsDropInterval < 0)

	cmp	eax, ebx
	mov	DWORD PTR ?F4CommsDropInterval@@3HA, eax ; F4CommsDropInterval
	jge	SHORT $L234562

; 1314 : 					F4CommsDropInterval*= -1;

	neg	eax
	mov	DWORD PTR ?F4CommsDropInterval@@3HA, eax ; F4CommsDropInterval
$L234562:

; 1315 : 			}
; 1316 :         }
; 1317 : 
; 1318 : 		if (!stricmp (arg, "-session"))

	push	OFFSET FLAT:??_C@_08FMAGOMFJ@?9session?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234565

; 1319 : 		{
; 1320 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234565

; 1321 : 			{
; 1322 : 				F4SessionUpdateTime = atoi (arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	DWORD PTR ?F4SessionUpdateTime@@3HA, eax ; F4SessionUpdateTime
$L234565:

; 1323 : 			}
; 1324 : 		}
; 1325 : 
; 1326 : 		if ((!stricmp (arg, "-hostidx")) || (!stricmp (arg, "-hostid")))

	push	OFFSET FLAT:??_C@_08HLEKBIEM@?9hostidx?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $L234567
	push	OFFSET FLAT:??_C@_07KFONBLME@?9hostid?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234570
$L234567:

; 1327 : 		{
; 1328 : 			if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234570

; 1329 : 			{
; 1330 : 				ComIPGetHostIDIndex = atoi (arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _ComIPGetHostIDIndex, eax
$L234570:

; 1331 : 			}
; 1332 : 		}
; 1333 : 
; 1334 : 		if (!stricmp (arg, "-alive"))

	push	OFFSET FLAT:??_C@_06FNELANOH@?9alive?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234573

; 1335 : 		{
; 1336 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234573

; 1337 : 			{
; 1338 : 				F4SessionAliveTimeout = atoi (arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	DWORD PTR ?F4SessionAliveTimeout@@3HA, eax ; F4SessionAliveTimeout
$L234573:

; 1339 : 			}
; 1340 : 		}
; 1341 : 
; 1342 : 		if (!stricmp(arg, "-mono")) // turn on MONOCHROME support

	push	OFFSET FLAT:??_C@_05FHMEINFP@?9mono?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234574

; 1343 : 		{
; 1344 : 		   InitDebug (DEBUGGER_TEXT_MODE);

	push	ebx
	call	_InitDebug
	add	esp, 4
$L234574:

; 1345 : 		}
; 1346 : 
; 1347 : 		if (!stricmp(arg, "-nomono")) // turn off MONOCHROME support

	push	OFFSET FLAT:??_C@_07HIEOBIMN@?9nomono?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234576

; 1348 : 		{
; 1349 : 		   InitDebug (-1);

	push	-1
	call	_InitDebug
	add	esp, 4
$L234576:

; 1350 : 		}
; 1351 : 
; 1352 : 		if (!stricmp(arg, "-head")) // turn on head tracking support

	push	OFFSET FLAT:??_C@_05BIDBHMLN@?9head?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L242091

; 1353 : 		{
; 1354 :          OTWDriver.SetHeadTracking(TRUE);

	mov	DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+34016, edi
$L242091:

; 1355 : 		}
; 1356 : 
; 1357 :         if (!stricmp (arg, "-swap"))

	push	OFFSET FLAT:??_C@_05NLLPJCGP@?9swap?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234583

; 1358 :         {
; 1359 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234583

; 1360 : 			{
; 1361 : 				F4CommsLatency = atoi(arg);

	push	esi
	call	_atoi
	mov	DWORD PTR ?F4CommsLatency@@3HA, eax	; F4CommsLatency

; 1362 : 				if (F4CommsSwapInterval < 0)

	mov	eax, DWORD PTR ?F4CommsSwapInterval@@3HA ; F4CommsSwapInterval
	add	esp, 4
	cmp	eax, ebx
	jge	SHORT $L234583

; 1363 : 					F4CommsSwapInterval*= -1;

	neg	eax
	mov	DWORD PTR ?F4CommsSwapInterval@@3HA, eax ; F4CommsSwapInterval
$L234583:

; 1364 : 			}
; 1365 :         }
; 1366 : 
; 1367 : 		if (!stricmp (arg, "-mtu")) // Booster and Unz At work

	push	OFFSET FLAT:??_C@_04MIHAIBLG@?9mtu?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234584

; 1368 :         {
; 1369 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234588

; 1370 : 			{
; 1371 : 				F4CommsMTU = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4

; 1372 : 				if (F4CommsMTU <0)

	cmp	eax, ebx
	mov	DWORD PTR ?F4CommsMTU@@3HA, eax		; F4CommsMTU
	jge	SHORT $L234588

; 1373 : 					F4CommsMTU *= -1;

	neg	eax
	mov	DWORD PTR ?F4CommsMTU@@3HA, eax		; F4CommsMTU

; 1374 : 				
; 1375 : 			}
; 1376 :         }    
; 1377 : 			else

	jmp	SHORT $L234588
$L234584:

; 1378 : 				F4CommsMTU=500; // Unz Ugly...but it works

	mov	DWORD PTR ?F4CommsMTU@@3HA, ebp		; F4CommsMTU
$L234588:

; 1379 : 
; 1380 :         
; 1381 : 
; 1382 :         if (!stricmp (arg, "-ef")){

	push	OFFSET FLAT:??_C@_03PBFIJCOK@?9ef?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234589

; 1383 :            eyeFlyEnabled = 1 - eyeFlyEnabled;

	mov	eax, DWORD PTR ?eyeFlyEnabled@@3HA	; eyeFlyEnabled
	mov	edx, edi
	sub	edx, eax
	mov	DWORD PTR ?eyeFlyEnabled@@3HA, edx	; eyeFlyEnabled
$L234589:

; 1384 :         }
; 1385 : 
; 1386 : 		if (!stricmp (arg, "-ip")){

	push	OFFSET FLAT:??_C@_03OENKNOFJ@?9ip?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234591

; 1387 :             if ((arg = strtok (NULL, " ")) != NULL)

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L242104

; 1388 : 			{
; 1389 : 				force_ip_address = atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _force_ip_address, eax
$L242104:

; 1390 : 			}
; 1391 : 
; 1392 :             MonoPrint ("Force IP Address to %08x\n", force_ip_address);

	mov	eax, DWORD PTR _force_ip_address
	push	eax
	push	OFFSET FLAT:??_C@_0BK@IJKKJKCI@Force?5IP?5Address?5to?5?$CF08x?6?$AA@
	call	_MonoPrint
	add	esp, 8
$L234591:

; 1393 : 		}
; 1394 : 
; 1395 : 		//sfr converts
; 1396 : 		// added for ports
; 1397 : 		if (!strnicmp (arg, "-port", 5)) {

	push	5
	push	OFFSET FLAT:??_C@_05HDLOEPOC@?9port?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234597

; 1398 :             if ((arg = strtok (NULL, " ")) != NULL) {

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234597

; 1399 : 				force_port = (unsigned short)atoi(arg);

	push	esi
	call	_atoi
	add	esp, 4
	mov	WORD PTR _force_port, ax
$L234597:

; 1400 : 			}
; 1401 : 		}
; 1402 : 
; 1403 : 		// sfr: no T&L checks
; 1404 : 		// added for server and notebooks 
; 1405 : 		if (!stricmp(arg, "-notnl")) {

	push	OFFSET FLAT:??_C@_06IKDJADCB@?9notnl?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234599

; 1406 : 			// exclude emulation devices drivers
; 1407 : 			DisplayOptionsClass::SetDevCaps(D3DDEVCAPS_HWRASTERIZATION);

	push	524288					; 00080000H
	call	?SetDevCaps@DisplayOptionsClass@@SAXI@Z	; DisplayOptionsClass::SetDevCaps
	add	esp, 4
$L234599:

; 1408 : 		}
; 1409 : 
; 1410 : 		// force logbook
; 1411 : 		if (!strnicmp (arg, "-lgbk", 5)) {

	push	5
	push	OFFSET FLAT:??_C@_05MCGGLAGA@?9lgbk?$AA@
	push	esi
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234603

; 1412 :             if ((arg = strtok (NULL, " ")) != NULL){

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	je	SHORT $L234603

; 1413 : 				// select a given logbook if it exists
; 1414 : 				sprintf(g_strLgbk, "%.19s", arg);

	push	esi
	push	OFFSET FLAT:??_C@_05JCDAFC@?$CF?419s?$AA@
	push	OFFSET FLAT:_g_strLgbk
	call	_sprintf
	add	esp, 12					; 0000000cH
$L234603:

; 1415 : 
; 1416 : 			}
; 1417 : 		}
; 1418 : 
; 1419 : 
; 1420 : 		if (!stricmp (arg, "-smoke")){

	push	OFFSET FLAT:??_C@_06BPKAOIDI@?9smoke?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234605

; 1421 : 			flag_keep_smoke_trails = TRUE;

	mov	DWORD PTR ?flag_keep_smoke_trails@@3HA, edi ; flag_keep_smoke_trails
$L234605:

; 1422 : 		}
; 1423 : 
; 1424 : #ifdef _USE_SECRET_CODE_
; 1425 : 		 if(!stricmp(arg,"-versiondata"))
; 1426 : 			 VersionData=TRUE;
; 1427 : #endif // _USE_SECRET_CODE_
; 1428 : 
; 1429 : 		// OW
; 1430 : 		if (!stricmp (arg, "-enumswdev"))

	push	OFFSET FLAT:??_C@_0L@DBLHFPEP@?9enumswdev?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234607

; 1431 : 			g_bEnumSoftwareDevices = true;

	mov	BYTE PTR ?g_bEnumSoftwareDevices@@3_NA, 1 ; g_bEnumSoftwareDevices
$L234607:

; 1432 : 
; 1433 : 		if (!stricmp (arg, "-cockpitverifier"))

	push	OFFSET FLAT:??_C@_0BB@KJDCEAMO@?9cockpitverifier?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234609

; 1434 : 			g_bEnableCockpitVerifier = true;

	mov	BYTE PTR ?g_bEnableCockpitVerifier@@3_NA, 1 ; g_bEnableCockpitVerifier
$L234609:

; 1435 : 		if (!stricmp (arg, "-writesndtbl"))

	push	OFFSET FLAT:??_C@_0N@PHJHLDM@?9writesndtbl?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234611

; 1436 : 		    g_writeSndTbl = true;

	mov	BYTE PTR ?g_writeSndTbl@@3_NA, 1	; g_writeSndTbl
$L234611:

; 1437 : 		if (!stricmp (arg, "-writemissiontbl"))

	push	OFFSET FLAT:??_C@_0BB@JEPECOMF@?9writemissiontbl?$AA@
	push	esi
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234483

; 1438 : 		    g_writeMissionTbl = true;

	mov	BYTE PTR ?g_writeMissionTbl@@3_NA, 1	; g_writeMissionTbl
$L234483:

; 1439 : 
; 1440 :    	}
; 1441 : 		while ((arg = strtok (NULL, " ")) != NULL);

	push	OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	push	ebx
	call	_strtok
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebx
	jne	$L234482
$L234484:

; 1442 : 	}
; 1443 :    
; 1444 : 	size = sizeof (FalconDataDirectory);
; 1445 : 	retval = RegOpenKeyEx(HKEY_LOCAL_MACHINE, FALCON_REGISTRY_KEY,
; 1446 : 		0, KEY_ALL_ACCESS, &theKey);

	lea	ecx, DWORD PTR _theKey$[esp+36]
	push	ecx
	push	983103					; 000f003fH
	push	ebx
	push	OFFSET FLAT:??_C@_0BP@KOIEKLOO@Software?2MicroProse?2Falcon?24?40?$AA@
	mov	ebp, 260				; 00000104H
	push	-2147483646				; 80000002H
	mov	DWORD PTR _size$[esp+56], ebp
	call	DWORD PTR __imp__RegOpenKeyExA@20

; 1447 : 	retval = RegQueryValueEx(theKey, "baseDir", 0, &type, (LPBYTE)&FalconDataDirectory, &size);

	mov	ecx, DWORD PTR _theKey$[esp+36]
	mov	esi, DWORD PTR __imp__RegQueryValueExA@24
	lea	edx, DWORD PTR _size$[esp+36]
	push	edx
	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	eax, DWORD PTR _type$[esp+44]
	push	eax
	push	ebx
	push	OFFSET FLAT:??_C@_07LHMPGDOC@baseDir?$AA@
	push	ecx
	call	esi

; 1448 : 	if (retval != ERROR_SUCCESS){

	test	eax, eax
	je	SHORT $L234620

; 1449 : 		SimLibPrintMessage ("No Registry Variable\n");

	push	OFFSET FLAT:??_C@_0BG@BGENKKMB@No?5Registry?5Variable?6?$AA@
	call	?SimLibPrintMessage@@YAHPADZZ		; SimLibPrintMessage

; 1450 : 		strcpy (FalconDataDirectory, ".\\");

	mov	dx, WORD PTR ??_C@_02CEGDFPFP@?4?2?$AA@
	mov	al, BYTE PTR ??_C@_02CEGDFPFP@?4?2?$AA@+2
	add	esp, 4
	mov	WORD PTR ?FalconDataDirectory@@3PADA, dx
	mov	BYTE PTR ?FalconDataDirectory@@3PADA+2, al
$L234620:

; 1451 : 	}
; 1452 : 	size = sizeof (FalconTerrainDataDir);
; 1453 : 	RegQueryValueEx(theKey, "theaterDir", 0, &type, (LPBYTE)FalconTerrainDataDir, &size);

	mov	eax, DWORD PTR _theKey$[esp+36]
	lea	ecx, DWORD PTR _size$[esp+36]
	push	ecx
	push	OFFSET FLAT:?FalconTerrainDataDir@@3PADA ; FalconTerrainDataDir
	lea	edx, DWORD PTR _type$[esp+44]
	push	edx
	push	ebx
	push	OFFSET FLAT:??_C@_0L@JPHDLCOH@theaterDir?$AA@
	push	eax
	mov	DWORD PTR _size$[esp+60], ebp
	call	esi

; 1454 : 	size = sizeof (FalconObjectDataDir);
; 1455 : 	RegQueryValueEx(theKey, "objectDir", 0, &type, (LPBYTE)FalconObjectDataDir, &size);

	mov	eax, DWORD PTR _theKey$[esp+36]
	lea	ecx, DWORD PTR _size$[esp+36]
	push	ecx
	push	OFFSET FLAT:?FalconObjectDataDir@@3PADA	; FalconObjectDataDir
	lea	edx, DWORD PTR _type$[esp+44]
	push	edx
	push	ebx
	push	OFFSET FLAT:??_C@_09BKOCKBCN@objectDir?$AA@
	push	eax
	mov	DWORD PTR _size$[esp+60], ebp
	call	esi

; 1456 : 	strcpy(Falcon3DDataDir, FalconObjectDataDir);

	xor	eax, eax
	npad	9
$L242085:
	mov	cl, BYTE PTR ?FalconObjectDataDir@@3PADA[eax]
	mov	BYTE PTR ?Falcon3DDataDir@@3PADA[eax], cl
	inc	eax
	cmp	cl, bl
	jne	SHORT $L242085

; 1457 : 	size = sizeof (FalconMiscTexDataDir);
; 1458 :    
; 1459 : 	// RV - Biker - Don't read movies from registry
; 1460 : 	//size = sizeof (FalconMovieDirectory);
; 1461 : 	//retval = RegQueryValueEx(theKey, "movieDir", 0, &type, (LPBYTE)FalconMovieDirectory, &size);
; 1462 : 	//if(retval != ERROR_SUCCESS)
; 1463 : 	//{
; 1464 : 	//	   strcpy(FalconMovieDirectory,FalconDataDirectory);
; 1465 : 	//}
; 1466 :    
; 1467 : 	size = sizeof (FalconMovieMode);
; 1468 : 	retval = RegQueryValueEx(theKey, "movieMode", 0, &type, (LPBYTE)FalconMovieMode, &size);

	mov	eax, DWORD PTR _theKey$[esp+36]
	lea	ecx, DWORD PTR _size$[esp+36]
	push	ecx
	push	OFFSET FLAT:?FalconMovieMode@@3PADA	; FalconMovieMode
	lea	edx, DWORD PTR _type$[esp+44]
	push	edx
	push	ebx
	push	OFFSET FLAT:??_C@_09DOMNOEH@movieMode?$AA@
	push	eax
	mov	DWORD PTR _size$[esp+60], ebp
	call	esi

; 1469 : 	if(retval != ERROR_SUCCESS)

	test	eax, eax
	je	SHORT $L234629

; 1470 : 		strcpy(FalconMovieMode,"Hurry");

	mov	ecx, DWORD PTR ??_C@_05PELKKPHE@Hurry?$AA@
	mov	dx, WORD PTR ??_C@_05PELKKPHE@Hurry?$AA@+4
	mov	DWORD PTR ?FalconMovieMode@@3PADA, ecx
	mov	WORD PTR ?FalconMovieMode@@3PADA+4, dx

; 1471 : 	else if (size <= 1)

	jmp	SHORT $L234632
$L234629:
	cmp	DWORD PTR _size$[esp+36], edi
	ja	SHORT $L234632

; 1472 : 		strcpy(FalconMovieMode,"Hurry");

	mov	eax, DWORD PTR ??_C@_05PELKKPHE@Hurry?$AA@
	mov	cx, WORD PTR ??_C@_05PELKKPHE@Hurry?$AA@+4
	mov	DWORD PTR ?FalconMovieMode@@3PADA, eax
	mov	WORD PTR ?FalconMovieMode@@3PADA+4, cx
$L234632:

; 1473 : 
; 1474 : 	size = sizeof (FalconUIArtDirectory);
; 1475 : 	retval = RegQueryValueEx(theKey, "uiArtDir", 0, &type, (LPBYTE)FalconUIArtDirectory, &size);

	mov	ecx, DWORD PTR _theKey$[esp+36]
	lea	edx, DWORD PTR _size$[esp+36]
	push	edx
	push	OFFSET FLAT:?FalconUIArtDirectory@@3PADA ; FalconUIArtDirectory
	lea	eax, DWORD PTR _type$[esp+44]
	push	eax
	push	ebx
	push	OFFSET FLAT:??_C@_08IKNLGGOC@uiArtDir?$AA@
	push	ecx
	mov	DWORD PTR _size$[esp+60], ebp
	call	esi

; 1476 : 	if(retval != ERROR_SUCCESS){

	test	eax, eax
	je	SHORT $L234635

; 1477 : 		strcpy(FalconUIArtDirectory,FalconDataDirectory);

	xor	eax, eax
	npad	11
$L242086:
	mov	cl, BYTE PTR ?FalconDataDirectory@@3PADA[eax]
	mov	BYTE PTR ?FalconUIArtDirectory@@3PADA[eax], cl
	inc	eax
	cmp	cl, bl
	jne	SHORT $L242086

; 1478 : 		strcpy(FalconUIArtThrDirectory,FalconDataDirectory);

	xor	eax, eax
$L242087:
	mov	cl, BYTE PTR ?FalconDataDirectory@@3PADA[eax]
	mov	BYTE PTR ?FalconUIArtThrDirectory@@3PADA[eax], cl
	inc	eax
	cmp	cl, bl
	jne	SHORT $L242087
$L234635:

; 1479 : 	}
; 1480 : 	size = sizeof (FalconUISoundDirectory);
; 1481 : 	retval = RegQueryValueEx(theKey, "uiSoundDir", 0, &type, (LPBYTE)FalconUISoundDirectory, &size);

	mov	ecx, DWORD PTR _theKey$[esp+36]
	lea	edx, DWORD PTR _size$[esp+36]
	push	edx
	push	OFFSET FLAT:?FalconUISoundDirectory@@3PADA ; FalconUISoundDirectory
	lea	eax, DWORD PTR _type$[esp+44]
	push	eax
	push	ebx
	push	OFFSET FLAT:??_C@_0L@NKIODECG@uiSoundDir?$AA@
	push	ecx
	mov	DWORD PTR _size$[esp+60], ebp
	call	esi

; 1482 : 	if(retval != ERROR_SUCCESS){

	test	eax, eax
	pop	ebp
	je	SHORT $L234638

; 1483 : 		strcpy(FalconUISoundDirectory,FalconDataDirectory);

	xor	eax, eax
	npad	5
$L242088:
	mov	cl, BYTE PTR ?FalconDataDirectory@@3PADA[eax]
	mov	BYTE PTR ?FalconUISoundDirectory@@3PADA[eax], cl
	inc	eax
	cmp	cl, bl
	jne	SHORT $L242088
$L234638:

; 1484 : 	}
; 1485 : 	strcpy(FalconSoundThrDirectory, FalconDataDirectory);

	xor	eax, eax
$L242089:
	mov	cl, BYTE PTR ?FalconDataDirectory@@3PADA[eax]
	mov	BYTE PTR ?FalconSoundThrDirectory@@3PADA[eax], cl
	inc	eax
	cmp	cl, bl
	jne	SHORT $L242089

; 1486 : 	strcat(FalconSoundThrDirectory, "\\sounds");

	mov	edi, OFFSET FLAT:?FalconSoundThrDirectory@@3PADA ; FalconSoundThrDirectory
	dec	edi
	npad	6
$L242099:
	mov	al, BYTE PTR [edi+1]
	inc	edi
	cmp	al, bl
	jne	SHORT $L242099
	mov	edx, DWORD PTR ??_C@_07BNHBBHGA@?2sounds?$AA@

; 1487 : 	retval = RegCloseKey(theKey);

	mov	ecx, DWORD PTR _theKey$[esp+32]
	mov	eax, DWORD PTR ??_C@_07BNHBBHGA@?2sounds?$AA@+4
	mov	DWORD PTR [edi], edx
	push	ecx
	mov	DWORD PTR [edi+4], eax
	call	DWORD PTR __imp__RegCloseKey@4
	pop	edi
	pop	esi
	pop	ebx

; 1488 : }

	add	esp, 20					; 00000014H
	ret	0
?ParseCommandLine@@YAXPAD@Z ENDP			; ParseCommandLine
_TEXT	ENDS
PUBLIC	??_C@_05MDAMHPFF@Korea?$AA@			; `string'
PUBLIC	??_C@_07LKIMHNID@Eurowar?$AA@			; `string'
PUBLIC	??_C@_06GBJMIBCI@?$CFs?2sim?$AA@		; `string'
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0BE@CCLCELMH@No?5Entities?5Loaded?4?$AA@	; `string'
PUBLIC	??_C@_0BD@KJHMKFEB@No?5Tactics?5Loaded?4?$AA@	; `string'
PUBLIC	??_R0?AUInit_Error@RadioSubTitle@@@8		; RadioSubTitle::Init_Error `RTTI Type Descriptor'
PUBLIC	??_C@_07GDGMJMJJ@Falcon4?$AA@			; `string'
EXTRN	?LoadClassTable@@YAHPAD@Z:NEAR			; LoadClassTable
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?UI_logbk@@3VLogBookData@@A:BYTE		; UI_logbk
EXTRN	_exit:NEAR
EXTRN	?g_nNumberOfSubTitles@@3HA:DWORD		; g_nNumberOfSubTitles
EXTRN	?g_nSubTitleTTL@@3HA:DWORD			; g_nSubTitleTTL
EXTRN	?g_strRadioflightCol@@3PADA:BYTE		; g_strRadioflightCol
EXTRN	?g_strRadiotoPackageCol@@3PADA:BYTE		; g_strRadiotoPackageCol
EXTRN	?g_strRadioToFromPackageCol@@3PADA:BYTE		; g_strRadioToFromPackageCol
EXTRN	?g_strRadioTeamCol@@3PADA:BYTE			; g_strRadioTeamCol
EXTRN	?g_strRadioProximityCol@@3PADA:BYTE		; g_strRadioProximityCol
EXTRN	?g_strRadioWorldCol@@3PADA:BYTE			; g_strRadioWorldCol
EXTRN	?g_strRadioTowerCol@@3PADA:BYTE			; g_strRadioTowerCol
EXTRN	?g_strRadioStandardCol@@3PADA:BYTE		; g_strRadioStandardCol
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	_time:NEAR
EXTRN	_srand:NEAR
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?StartSim@SimulationLoopControl@@SAXXZ:NEAR	; SimulationLoopControl::StartSim
EXTRN	?InitVU@@YAXXZ:NEAR				; InitVU
EXTRN	??0UIComms@@QAE@XZ:NEAR				; UIComms::UIComms
EXTRN	_ResSetDirectory:NEAR
EXTRN	?Setup@UIComms@@QAEHPAUHWND__@@@Z:NEAR		; UIComms::Setup
EXTRN	_ResAddPath:NEAR
EXTRN	?InitTrackIR@TrackIR@@QAEXPAUHWND__@@@Z:NEAR	; TrackIR::InitTrackIR
EXTRN	?LoadParameters@DrawableParticleSys@@SA_NXZ:NEAR ; DrawableParticleSys::LoadParameters
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	??0AS_DataClass@@QAE@XZ:NEAR			; AS_DataClass::AS_DataClass
EXTRN	?LoadTrails@@YAXXZ:NEAR				; LoadTrails
EXTRN	?ASD@@3PAVAS_DataClass@@A:DWORD			; ASD
EXTRN	_F4SoundStart:NEAR
EXTRN	?LoadTheaterList@@YAXXZ:NEAR			; LoadTheaterList
EXTRN	__imp__MessageBoxA@16:NEAR
EXTRN	??0WinAmpFrontEnd@@QAE@XZ:NEAR			; WinAmpFrontEnd::WinAmpFrontEnd
EXTRN	?SetupDIJoystick@@YAHPAUHINSTANCE__@@PAUHWND__@@@Z:NEAR ; SetupDIJoystick
EXTRN	?g_bPilotEntertainment@@3_NA:BYTE		; g_bPilotEntertainment
EXTRN	?InitializeSimMemoryPools@SimulationDriver@@QAEXXZ:NEAR ; SimulationDriver::InitializeSimMemoryPools
EXTRN	?Camp_Init@@YAXH@Z:NEAR				; Camp_Init
EXTRN	__imp__SetCursor@4:NEAR
EXTRN	?LoadTactics@@YAHPAD@Z:NEAR			; LoadTactics
EXTRN	?setup@ThreadManager@@SAXXZ:NEAR		; ThreadManager::setup
EXTRN	??0RadioSubTitle@@QAE@HK@Z:NEAR			; RadioSubTitle::RadioSubTitle
EXTRN	?SetChannelColours@RadioSubTitle@@QAEXPAD0000000@Z:NEAR ; RadioSubTitle::SetChannelColours
EXTRN	?GetCurrentTheater@TheaterList@@QAEPAUTheaterDef@@XZ:NEAR ; TheaterList::GetCurrentTheater
EXTRN	?SetNewTheater@TheaterList@@QAE_NPAUTheaterDef@@@Z:NEAR ; TheaterList::SetNewTheater
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?DoSoundSetup@TheaterList@@QAEXXZ:NEAR		; TheaterList::DoSoundSetup
EXTRN	?g_theaters@@3VTheaterList@@A:QWORD		; g_theaters
EXTRN	?ReadCampAIInputs@@YAXPAD@Z:NEAR		; ReadCampAIInputs
EXTRN	?Load@LogBookData@@QAEHXZ:NEAR			; LogBookData::Load
EXTRN	?LoadData@LogBookData@@QAEHPAUPilot@@@Z:NEAR	; LogBookData::LoadData
EXTRN	?LoadFunctionTables@@YAXPAD@Z:NEAR		; LoadFunctionTables
EXTRN	_F4GetNumProcessors:NEAR
_BSS	SEGMENT
_numProcessors DD 01H DUP (?)
_BSS	ENDS
;	COMDAT xdata$x
; File f:\projects\freefalcon\falclib\include\playerop.h
xdata$x	SEGMENT
$T242167 DD	0ffffffffH
	DD	FLAT:$L242132
	DD	0ffffffffH
	DD	FLAT:$L242133
	DD	0ffffffffH
	DD	00H
	DD	02H
	DD	FLAT:$L242134
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:$L242135
$T242169 DD	00H
	DD	FLAT:??_R0?AUInit_Error@RadioSubTitle@@@8
	DD	00H
	DD	FLAT:$L242131
$T242168 DD	02H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:$T242169
$T242158 DD	019930520H
	DD	06H
	DD	FLAT:$T242167
	DD	01H
	DD	FLAT:$T242168
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_05MDAMHPFF@Korea?$AA@
CONST	SEGMENT
??_C@_05MDAMHPFF@Korea?$AA@ DB 'Korea', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKIMHNID@Eurowar?$AA@
CONST	SEGMENT
??_C@_07LKIMHNID@Eurowar?$AA@ DB 'Eurowar', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GBJMIBCI@?$CFs?2sim?$AA@
CONST	SEGMENT
??_C@_06GBJMIBCI@?$CFs?2sim?$AA@ DB '%s\sim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDGMJMJJ@Falcon4?$AA@
CONST	SEGMENT
??_C@_07GDGMJMJJ@Falcon4?$AA@ DB 'Falcon4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CCLCELMH@No?5Entities?5Loaded?4?$AA@
CONST	SEGMENT
??_C@_0BE@CCLCELMH@No?5Entities?5Loaded?4?$AA@ DB 'No Entities Loaded.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJHMKFEB@No?5Tactics?5Loaded?4?$AA@
CONST	SEGMENT
??_C@_0BD@KJHMKFEB@No?5Tactics?5Loaded?4?$AA@ DB 'No Tactics Loaded.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AUInit_Error@RadioSubTitle@@@8
_DATA	SEGMENT
??_R0?AUInit_Error@RadioSubTitle@@@8 DD FLAT:??_7type_info@@6B@ ; RadioSubTitle::Init_Error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUInit_Error@RadioSubTitle@@', 00H
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
_DATA	ENDS
;	COMDAT ?SystemLevelInit@@YAXXZ
_TEXT	SEGMENT
$T242127 = -792						; size = 4
$T242119 = -792						; size = 4
$T242115 = -792						; size = 4
$T242111 = -792						; size = 4
_tmpPath$ = -788					; size = 512
_tmpPath$234654 = -276					; size = 256
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
?SystemLevelInit@@YAXXZ PROC NEAR			; SystemLevelInit, COMDAT

; 1490 : void SystemLevelInit(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SystemLevelInit@@YAXXZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 780				; 0000030cH
	mov	eax, DWORD PTR ___security_cookie
	push	ebx
	push	esi
	xor	eax, ebp
	push	edi

; 1491 : 
; 1492 : 
; 1493 : 
; 1494 : 	SimDriver.InitializeSimMemoryPools();

	mov	ecx, OFFSET FLAT:?SimDriver@@3VSimulationDriver@@A
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	call	?InitializeSimMemoryPools@SimulationDriver@@QAEXXZ ; SimulationDriver::InitializeSimMemoryPools

; 1495 : 
; 1496 : 	ASD = new AS_DataClass();

	push	632					; 00000278H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T242111[ebp], eax
	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	je	SHORT $L242112
	mov	ecx, eax
	call	??0AS_DataClass@@QAE@XZ			; AS_DataClass::AS_DataClass
	jmp	SHORT $L242113
$L242112:
	xor	eax, eax
$L242113:
	or	ebx, -1

; 1497 : 	srand ((unsigned int) time (NULL));

	push	0
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	DWORD PTR ?ASD@@3PAVAS_DataClass@@A, eax ; ASD
	call	_time
	push	eax
	call	_srand

; 1498 : 
; 1499 : 	// This SHOULD NOT BE REQUIRED -- IT IS _VERY_ EASY TO BREAK CODE THAT DEPENDS ON THIS
; 1500 : 	// I'd like to make it go away soon....
; 1501 : 	ResSetDirectory (FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	call	_ResSetDirectory
	add	esp, 12					; 0000000cH

; 1502 : 
; 1503 : 	DrawableParticleSys::LoadParameters(); // MLR 1/31/2004 - 

	call	?LoadParameters@DrawableParticleSys@@SA_NXZ ; DrawableParticleSys::LoadParameters

; 1504 : 
; 1505 : 
; 1506 : 
; 1507 : 	 // FRB - Restore access to \sim folder files before \zips\Simdata.zip
; 1508 : 	 char tmpPath[512];
; 1509 :    LoadTheaterList();

	call	?LoadTheaterList@@YAXXZ			; LoadTheaterList

; 1510 :    TheaterDef *td;
; 1511 :    if ((td = g_theaters.GetCurrentTheater())) 

	mov	ecx, OFFSET FLAT:?g_theaters@@3VTheaterList@@A
	call	?GetCurrentTheater@TheaterList@@QAEPAUTheaterDef@@XZ ; TheaterList::GetCurrentTheater
	mov	esi, eax
	test	esi, esi
	je	$L234649

; 1512 : 	 {
; 1513 : 			SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A+76
	mov	edi, DWORD PTR __imp__SetCursor@4
	push	eax
	call	edi

; 1514 : 			g_theaters.SetNewTheater(td);

	push	esi
	mov	ecx, OFFSET FLAT:?g_theaters@@3VTheaterList@@A
	call	?SetNewTheater@TheaterList@@QAE_NPAUTheaterDef@@@Z ; TheaterList::SetNewTheater

; 1515 : 			if (((!strnicmp(td->m_name, "Korea", 5)) || (!strnicmp(td->m_name, "Eurowar", 7))) && (SimPathHandle == -1))

	mov	ecx, DWORD PTR [esi]
	push	5
	push	OFFSET FLAT:??_C@_05MDAMHPFF@Korea?$AA@
	push	ecx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $L234651
	mov	edx, DWORD PTR [esi]
	push	7
	push	OFFSET FLAT:??_C@_07LKIMHNID@Eurowar?$AA@
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $L234650
$L234651:
	cmp	DWORD PTR ?SimPathHandle@@3HA, ebx	; SimPathHandle
	jne	SHORT $L234650

; 1516 : 			{
; 1517 : 				char	tmpPath[256];
; 1518 : 					sprintf (tmpPath, "%s\\sim", FalconDataDirectory);	// JPO - so we can find raw sim files

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	eax, DWORD PTR _tmpPath$234654[ebp]
	push	OFFSET FLAT:??_C@_06GBJMIBCI@?$CFs?2sim?$AA@
	push	eax
	call	_sprintf

; 1519 : 					SimPathHandle = ResAddPath (tmpPath, TRUE);

	lea	ecx, DWORD PTR _tmpPath$234654[ebp]
	push	1
	push	ecx
	call	_ResAddPath
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?SimPathHandle@@3HA, eax	; SimPathHandle
$L234650:

; 1520 : 			}
; 1521 : 			g_theaters.DoSoundSetup();

	mov	ecx, OFFSET FLAT:?g_theaters@@3VTheaterList@@A
	call	?DoSoundSetup@TheaterList@@QAEXXZ	; TheaterList::DoSoundSetup

; 1522 : 			InitVU();

	call	?InitVU@@YAXXZ				; InitVU

; 1523 : 			SetCursor(gCursors[CRSR_F16]);

	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A+4
	push	edx
	call	edi

; 1524 :    }
; 1525 :    else 

	jmp	$L234656
$L234649:

; 1526 : 	 {
; 1527 : 			sprintf (tmpPath, "%s\\sim", FalconDataDirectory);	// JPO - so we can find raw sim files

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	eax, DWORD PTR _tmpPath$[ebp]
	push	OFFSET FLAT:??_C@_06GBJMIBCI@?$CFs?2sim?$AA@
	push	eax
	call	_sprintf

; 1528 : 			if (SimPathHandle == -1)

	mov	eax, DWORD PTR ?SimPathHandle@@3HA	; SimPathHandle
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	jne	SHORT $L234657

; 1529 : 				SimPathHandle = ResAddPath (tmpPath, TRUE);

	lea	ecx, DWORD PTR _tmpPath$[ebp]
	push	1
	push	ecx
	call	_ResAddPath
	add	esp, 8
	mov	DWORD PTR ?SimPathHandle@@3HA, eax	; SimPathHandle
$L234657:

; 1530 : 
; 1531 : 			ReadCampAIInputs ("Falcon4");

	push	OFFSET FLAT:??_C@_07GDGMJMJJ@Falcon4?$AA@
	call	?ReadCampAIInputs@@YAXPAD@Z		; ReadCampAIInputs

; 1532 : 			numProcessors = F4GetNumProcessors();

	call	_F4GetNumProcessors

; 1533 : 
; 1534 : 			if (!LoadClassTable("Falcon4"))

	push	OFFSET FLAT:??_C@_07GDGMJMJJ@Falcon4?$AA@
	mov	DWORD PTR _numProcessors, eax
	call	?LoadClassTable@@YAHPAD@Z		; LoadClassTable
	add	esp, 8
	test	eax, eax
	jne	SHORT $L234658

; 1535 : 			{
; 1536 : 				MessageBox( NULL,"No Entities Loaded.","Error", MB_OK | MB_ICONSTOP | MB_SETFOREGROUND );

	push	65552					; 00010010H
	push	OFFSET FLAT:??_C@_05NAOIJFC@Error?$AA@
	push	OFFSET FLAT:??_C@_0BE@CCLCELMH@No?5Entities?5Loaded?4?$AA@
	push	eax
	call	DWORD PTR __imp__MessageBoxA@16

; 1537 : 				exit(0);

	push	0
	call	_exit
$L242170:
$L234658:

; 1538 : 			}
; 1539 : 			InitVU();

	call	?InitVU@@YAXXZ				; InitVU

; 1540 : 			if (!LoadTactics("Falcon4"))

	push	OFFSET FLAT:??_C@_07GDGMJMJJ@Falcon4?$AA@
	call	?LoadTactics@@YAHPAD@Z			; LoadTactics
	add	esp, 4
	test	eax, eax
	jne	SHORT $L234661

; 1541 : 			{
; 1542 : 				MessageBox( NULL,"No Tactics Loaded.","Error", MB_OK | MB_ICONSTOP | MB_SETFOREGROUND );

	push	65552					; 00010010H
	push	OFFSET FLAT:??_C@_05NAOIJFC@Error?$AA@
	push	OFFSET FLAT:??_C@_0BD@KJHMKFEB@No?5Tactics?5Loaded?4?$AA@
	push	eax
	call	DWORD PTR __imp__MessageBoxA@16

; 1543 : 				exit(0);

	push	0
	call	_exit
$L242171:
$L234661:

; 1544 : 			}
; 1545 : 			LoadTrails ();

	call	?LoadTrails@@YAXXZ			; LoadTrails
$L234656:

; 1546 :    }
; 1547 : 
; 1548 : #ifndef		NO_TIMER_THREAD
; 1549 : 	beginTimer();
; 1550 : #endif
; 1551 : 
; 1552 : #define NEW_SOUND_STARTUP_ORDER 1
; 1553 : #if NEW_SOUND_STARTUP_ORDER
; 1554 : 	F4SoundStart();

	call	_F4SoundStart

; 1555 : #endif
; 1556 : 
; 1557 : 	ThreadManager::setup();

	call	?setup@ThreadManager@@SAXXZ		; ThreadManager::setup

; 1558 : 	// sfr: simloop must begin before campaign
; 1559 : 	SimulationLoopControl::StartSim();

	call	?StartSim@SimulationLoopControl@@SAXXZ	; SimulationLoopControl::StartSim

; 1560 : 	Camp_Init(1);

	push	1
	call	?Camp_Init@@YAXH@Z			; Camp_Init

; 1561 : 	
; 1562 : 
; 1563 : 	BuildAscii();

	call	?BuildAscii@@YAXXZ			; BuildAscii

; 1564 : 
; 1565 : 	gCommsMgr=new UIComms;

	push	116					; 00000074H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T242115[ebp], eax
	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	je	SHORT $L242116
	mov	ecx, eax
	call	??0UIComms@@QAE@XZ			; UIComms::UIComms
	jmp	SHORT $L242117
$L242116:
	xor	eax, eax
$L242117:

; 1566 : 	gCommsMgr->Setup(FalconDisplay.appWin);

	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, eax ; gCommsMgr
	call	?Setup@UIComms@@QAEHPAUHWND__@@@Z	; UIComms::Setup

; 1567 : 	
; 1568 : 	if(UI_logbk.Load()){

	mov	ecx, OFFSET FLAT:?UI_logbk@@3VLogBookData@@A
	call	?Load@LogBookData@@QAEHXZ		; LogBookData::Load
	test	eax, eax
	je	SHORT $L234668

; 1569 : 		LogBook.LoadData(&UI_logbk.Pilot);

	push	OFFSET FLAT:?UI_logbk@@3VLogBookData@@A	; UI_logbk
	mov	ecx, OFFSET FLAT:?LogBook@@3VLogBookData@@A
	call	?LoadData@LogBookData@@QAEHPAUPilot@@@Z	; LogBookData::LoadData
$L234668:

; 1570 : 	}
; 1571 : 
; 1572 : 	SetupDIJoystick(hInst, FalconDisplay.appWin);

	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	eax
	push	ecx
	call	?SetupDIJoystick@@YAHPAUHINSTANCE__@@PAUHWND__@@@Z ; SetupDIJoystick

; 1573 : 
; 1574 : 	// Retro 20Dec2003
; 1575 : 	extern int g_nNumberOfSubTitles;
; 1576 : 	extern int g_nSubTitleTTL;
; 1577 : 	extern char g_strRadioflightCol[0x40];			// Retro 27Dec2003
; 1578 : 	extern char g_strRadiotoPackageCol[0x40];		// Retro 27Dec2003
; 1579 : 	extern char g_strRadioToFromPackageCol[0x40];	// Retro 27Dec2003
; 1580 : 	extern char g_strRadioTeamCol[0x40];			// Retro 27Dec2003
; 1581 : 	extern char g_strRadioProximityCol[0x40];		// Retro 27Dec2003
; 1582 : 	extern char g_strRadioWorldCol[0x40];			// Retro 27Dec2003
; 1583 : 	extern char g_strRadioTowerCol[0x40];			// Retro 27Dec2003
; 1584 : 	extern char g_strRadioStandardCol[0x40];		// Retro 27Dec2003
; 1585 : 
; 1586 : 	if (PlayerOptions.getSubtitles()){

	mov	al, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+204
	add	esp, 8
	test	al, al
	je	SHORT $L234680

; 1587 : 		try {

	mov	ebx, 2

; 1588 : 			radioLabel = new RadioSubTitle(g_nNumberOfSubTitles,g_nSubTitleTTL);

	push	60					; 0000003cH
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR $T242119[ebp], ecx
	test	ecx, ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	je	SHORT $L242120
	mov	edx, DWORD PTR ?g_nSubTitleTTL@@3HA	; g_nSubTitleTTL
	mov	eax, DWORD PTR ?g_nNumberOfSubTitles@@3HA ; g_nNumberOfSubTitles
	push	edx
	push	eax
	call	??0RadioSubTitle@@QAE@HK@Z		; RadioSubTitle::RadioSubTitle
	mov	ecx, eax
	jmp	SHORT $L242121
$L242120:
	xor	ecx, ecx
$L242121:

; 1589 : 			radioLabel->SetChannelColours(	
; 1590 : 				g_strRadioflightCol, g_strRadiotoPackageCol, g_strRadioToFromPackageCol,
; 1591 : 				g_strRadioTeamCol, g_strRadioProximityCol, g_strRadioWorldCol,
; 1592 : 				g_strRadioTowerCol, g_strRadioStandardCol
; 1593 : 			);

	push	OFFSET FLAT:?g_strRadioStandardCol@@3PADA ; g_strRadioStandardCol
	push	OFFSET FLAT:?g_strRadioTowerCol@@3PADA	; g_strRadioTowerCol
	push	OFFSET FLAT:?g_strRadioWorldCol@@3PADA	; g_strRadioWorldCol
	push	OFFSET FLAT:?g_strRadioProximityCol@@3PADA ; g_strRadioProximityCol
	push	OFFSET FLAT:?g_strRadioTeamCol@@3PADA	; g_strRadioTeamCol
	push	OFFSET FLAT:?g_strRadioToFromPackageCol@@3PADA ; g_strRadioToFromPackageCol
	push	OFFSET FLAT:?g_strRadiotoPackageCol@@3PADA ; g_strRadiotoPackageCol
	push	OFFSET FLAT:?g_strRadioflightCol@@3PADA	; g_strRadioflightCol
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR ?radioLabel@@3PAVRadioSubTitle@@A, ecx ; radioLabel
	call	?SetChannelColours@RadioSubTitle@@QAEXPAD0000000@Z ; RadioSubTitle::SetChannelColours
$L242161:

; 1600 : 		}

	or	ebx, -1
$L234680:

; 1601 : 	}
; 1602 : 	// Retro 20Dec2003 ends
; 1603 : 
; 1604 : 	theTrackIRObject.InitTrackIR(mainAppWnd);	// Retro 26/09/03

	mov	ecx, DWORD PTR ?mainAppWnd@@3PAUHWND__@@A ; mainAppWnd
	push	ecx
	mov	ecx, OFFSET FLAT:?theTrackIRObject@@3VTrackIR@@A
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	call	?InitTrackIR@TrackIR@@QAEXPAUHWND__@@@Z	; TrackIR::InitTrackIR

; 1605 : 	if (PlayerOptions.Get3dTrackIR() == false)

	mov	al, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+206
	test	al, al
	jne	SHORT $L242152

; 1606 : 		OTWDriver.SetHeadTracking(FALSE); // Cobra - Make 3D pit mouselook work when TIR is user-selected "off".

	mov	DWORD PTR ?OTWDriver@@3VOTWDriverClass@@A+34016, 0
$L242152:

; 1607 : 
; 1608 : 	// Retro 3Jan2004 - starting up the winamp frontend class, the winamp win need not be active at this point
; 1609 : 	if (g_bPilotEntertainment == true){

	cmp	BYTE PTR ?g_bPilotEntertainment@@3_NA, 1 ; g_bPilotEntertainment
	jne	SHORT $L234695

; 1610 : 		winamp = new WinAmpFrontEnd();

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T242127[ebp], eax
	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	je	SHORT $L242128
	mov	ecx, eax
	call	??0WinAmpFrontEnd@@QAE@XZ		; WinAmpFrontEnd::WinAmpFrontEnd
	jmp	SHORT $L242129
$L242131:

; 1594 : 		}
; 1595 : 		catch (RadioSubTitle::Init_Error){
; 1596 : 			delete(radioLabel);

	mov	ecx, DWORD PTR ?radioLabel@@3PAVRadioSubTitle@@A ; radioLabel
	test	ecx, ecx
	mov	esi, ecx
	je	SHORT $L242124
	call	??1RadioSubTitle@@QAE@XZ		; RadioSubTitle::~RadioSubTitle
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242124:

; 1597 : 			radioLabel = 0;

	mov	DWORD PTR ?radioLabel@@3PAVRadioSubTitle@@A, 0 ; radioLabel

; 1598 : 			// Retro: hrmmm.. might want to consider telling the user about this somehow..
; 1599 : 			PlayerOptions.SetSubtitles(false);	

	mov	BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+204, 0

; 1600 : 		}

	mov	eax, $L242161
	ret	0
$L242128:

; 1610 : 		winamp = new WinAmpFrontEnd();

	xor	eax, eax
$L242129:

; 1611 : 		if (!winamp){

	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	DWORD PTR ?winamp@@3PAVWinAmpFrontEnd@@A, eax ; winamp
	jne	SHORT $L234695

; 1612 : 			g_bPilotEntertainment = false;

	mov	BYTE PTR ?g_bPilotEntertainment@@3_NA, al ; g_bPilotEntertainment
$L234695:

; 1613 : 		}
; 1614 : 	}
; 1615 : 	// ..ends
; 1616 : 
; 1617 : 	// sfr: SimLoop must begin before campaign
; 1618 : 	//SimulationLoopControl::StartSim();
; 1619 : 
; 1620 : #if !NEW_SOUND_STARTUP_ORDER
; 1621 : 	F4SoundStart();
; 1622 : #endif
; 1623 : 
; 1624 : 	LoadFunctionTables();

	push	OFFSET FLAT:?PlayerOptions@@3VPlayerOptionsClass@@A+164
	call	?LoadFunctionTables@@YAXPAD@Z		; LoadFunctionTables
	add	esp, 4

; 1625 : 
; 1626 : #ifdef NDEBUG
; 1627 : 	ShowCursor(FALSE);

	push	0
	call	DWORD PTR __imp__ShowCursor@4

; 1628 : #endif
; 1629 : 
; 1630 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$L242166:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242132:
	mov	eax, DWORD PTR $T242111[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
$L242133:
	mov	eax, DWORD PTR $T242115[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
$L242134:
	mov	eax, DWORD PTR $T242119[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
$L242135:
	mov	eax, DWORD PTR $T242127[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SystemLevelInit@@YAXXZ:
	mov	eax, OFFSET FLAT:$T242158
	jmp	___CxxFrameHandler
text$x	ENDS
?SystemLevelInit@@YAXXZ ENDP				; SystemLevelInit
EXTRN	?UnloadClassTable@@YAHXZ:NEAR			; UnloadClassTable
EXTRN	_ResExit:NEAR
EXTRN	_ResDetach:NEAR
EXTRN	?StopSim@SimulationLoopControl@@SAXXZ:NEAR	; SimulationLoopControl::StopSim
EXTRN	?ExitVU@@YAXXZ:NEAR				; ExitVU
EXTRN	?Cleanup@UIComms@@QAEXXZ:NEAR			; UIComms::Cleanup
EXTRN	?ExitTrackIR@TrackIR@@QAEXXZ:NEAR		; TrackIR::ExitTrackIR
EXTRN	?UnloadParameters@DrawableParticleSys@@SAXXZ:NEAR ; DrawableParticleSys::UnloadParameters
EXTRN	?Cleanup@FalconDisplayConfiguration@@QAEXXZ:NEAR ; FalconDisplayConfiguration::Cleanup
EXTRN	?ServerBrowserExit@@YAXXZ:NEAR			; ServerBrowserExit
EXTRN	_ExitSoundManager:NEAR
EXTRN	?ReleaseSimMemoryPools@SimulationDriver@@QAEXXZ:NEAR ; SimulationDriver::ReleaseSimMemoryPools
EXTRN	?Camp_Exit@@YAXXZ:NEAR				; Camp_Exit
EXTRN	?CleanupDIAll@@YAXXZ:NEAR			; CleanupDIAll
EXTRN	?StopVoice@@YAXXZ:NEAR				; StopVoice
EXTRN	?Camp_FreeMemory@@YAXXZ:NEAR			; Camp_FreeMemory
EXTRN	?FreeTactics@@YAXXZ:NEAR			; FreeTactics
EXTRN	?ClearTable@InputFunctionHashTable@@QAEXXZ:NEAR	; InputFunctionHashTable::ClearTable
EXTRN	?UserFunctionTable@@3VInputFunctionHashTable@@A:BYTE ; UserFunctionTable
; Function compile flags: /Ogtpy
;	COMDAT ?SystemLevelExit@@YAXXZ
_TEXT	SEGMENT
_was$242204 = -4					; size = 4
?SystemLevelExit@@YAXXZ PROC NEAR			; SystemLevelExit, COMDAT

; 1633 : {

	push	ecx
	push	esi

; 1634 : #ifdef NDEBUG
; 1635 : 	ShowCursor(TRUE);

	mov	esi, DWORD PTR __imp__ShowCursor@4
	push	1
	call	esi
	npad	4
$L234704:

; 1636 : #endif
; 1637 : 	while(ShowCursor(TRUE) < 0);

	push	1
	call	esi
	test	eax, eax
	jl	SHORT $L234704

; 1638 : 
; 1639 : 	ServerBrowserExit();

	call	?ServerBrowserExit@@YAXXZ		; ServerBrowserExit

; 1640 : 	StopVoice ();//me123

	call	?StopVoice@@YAXXZ			; StopVoice

; 1641 : 	CleanupDIAll();

	call	?CleanupDIAll@@YAXXZ			; CleanupDIAll

; 1642 : 	DrawableParticleSys::UnloadParameters(); // MLR 1/31/2004 - 

	call	?UnloadParameters@DrawableParticleSys@@SAXXZ ; DrawableParticleSys::UnloadParameters

; 1643 : 	theTrackIRObject.ExitTrackIR();	// Retro 26/09/03

	mov	ecx, OFFSET FLAT:?theTrackIRObject@@3VTrackIR@@A
	call	?ExitTrackIR@TrackIR@@QAEXXZ		; TrackIR::ExitTrackIR

; 1644 : 
; 1645 : 	// Retro 3Jan2004
; 1646 : 	if (winamp)	{

	mov	ecx, DWORD PTR ?winamp@@3PAVWinAmpFrontEnd@@A ; winamp
	test	ecx, ecx
	je	SHORT $L234706

; 1647 : 		delete(winamp);

	mov	esi, ecx
	call	??1WinAmpFrontEnd@@QAE@XZ		; WinAmpFrontEnd::~WinAmpFrontEnd
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1648 : 		winamp = 0;

	mov	DWORD PTR ?winamp@@3PAVWinAmpFrontEnd@@A, 0 ; winamp
$L234706:

; 1649 : 	}
; 1650 : 	// ..ends
; 1651 : 
; 1652 : 	if (radioLabel){

	mov	ecx, DWORD PTR ?radioLabel@@3PAVRadioSubTitle@@A ; radioLabel
	test	ecx, ecx
	je	SHORT $L234709

; 1653 : 		// Retro 20Dec2003 (all)
; 1654 : 		delete(radioLabel);

	mov	esi, ecx
	call	??1RadioSubTitle@@QAE@XZ		; RadioSubTitle::~RadioSubTitle
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1655 : 		radioLabel = (RadioSubTitle*)0;

	mov	DWORD PTR ?radioLabel@@3PAVRadioSubTitle@@A, 0 ; radioLabel
$L234709:

; 1656 : 	}
; 1657 : 
; 1658 : 	gCommsMgr->Cleanup();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Cleanup@UIComms@@QAEXXZ		; UIComms::Cleanup

; 1659 : 	delete gCommsMgr;

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	test	ecx, ecx
	mov	esi, ecx
	je	SHORT $L242186
	call	??1UIComms@@QAE@XZ			; UIComms::~UIComms
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242186:

; 1660 : 	gCommsMgr=NULL;
; 1661 : 
; 1662 : #if !NEW_SOUND_STARTUP_ORDER
; 1663 : 	// OW now called by Device::Cleanup
; 1664 : 	// movieUnInit();
; 1665 : 	ExitSoundManager();
; 1666 : #endif
; 1667 : 	FalconDisplay.Cleanup();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	mov	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	call	?Cleanup@FalconDisplayConfiguration@@QAEXXZ ; FalconDisplayConfiguration::Cleanup

; 1668 : 
; 1669 : 	// sfr: simloop ends after campaign
; 1670 : 	//SimulationLoopControl::StopSim();
; 1671 : 	Camp_Exit();

	call	?Camp_Exit@@YAXXZ			; Camp_Exit

; 1672 : 	Camp_FreeMemory();

	call	?Camp_FreeMemory@@YAXXZ			; Camp_FreeMemory

; 1673 : 	// do this so simthread can leave
; 1674 : 	SimulationLoopControl::StopSim();

	call	?StopSim@SimulationLoopControl@@SAXXZ	; SimulationLoopControl::StopSim

; 1675 : 
; 1676 : #if NEW_SOUND_STARTUP_ORDER
; 1677 : 	// OW now called by Device::Cleanup
; 1678 : 	// movieUnInit();
; 1679 : 	ExitSoundManager();

	call	_ExitSoundManager

; 1680 : #endif
; 1681 : 
; 1682 : 
; 1683 : 	UserFunctionTable.ClearTable();

	mov	ecx, OFFSET FLAT:?UserFunctionTable@@3VInputFunctionHashTable@@A
	call	?ClearTable@InputFunctionHashTable@@QAEXXZ ; InputFunctionHashTable::ClearTable

; 1684 : 
; 1685 : 	// ExitReal-Time Loop;
; 1686 : 	//ThreadManager::cleanup();
; 1687 : #ifndef NO_TIMER_THREAD
; 1688 : 	endTimer();
; 1689 : #endif
; 1690 : 
; 1691 : 	ExitVU();

	call	?ExitVU@@YAXXZ				; ExitVU

; 1692 : 	UnloadClassTable();

	call	?UnloadClassTable@@YAHXZ		; UnloadClassTable

; 1693 : 	FreeTactics();

	call	?FreeTactics@@YAXXZ			; FreeTactics

; 1694 : 
; 1695 : 	for (int i=0; i<numZips; i++){

	mov	eax, DWORD PTR ?numZips@@3HA		; numZips
	xor	esi, esi
	test	eax, eax
	jle	SHORT $L234718
	npad	1
$L234716:

; 1696 : 		ResDetach (resourceHandle[i]);

	mov	eax, DWORD PTR ?resourceHandle@@3PAHA	; resourceHandle
	mov	ecx, DWORD PTR [eax+esi*4]
	push	ecx
	call	_ResDetach
	mov	eax, DWORD PTR ?numZips@@3HA		; numZips
	add	esp, 4
	inc	esi
	cmp	esi, eax
	jl	SHORT $L234716
$L234718:

; 1697 : 	}
; 1698 : 	delete [] resourceHandle;

	mov	edx, DWORD PTR ?resourceHandle@@3PAHA	; resourceHandle
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1699 : 	ResExit();

	call	_ResExit

; 1700 : 
; 1701 : 	SimDriver.ReleaseSimMemoryPools();

	mov	ecx, OFFSET FLAT:?SimDriver@@3VSimulationDriver@@A
	call	?ReleaseSimMemoryPools@SimulationDriver@@QAEXXZ ; SimulationDriver::ReleaseSimMemoryPools

; 1702 : 
; 1703 : 	// Make sure there is no keytrapping
; 1704 : 	CtrlAltDelMask(FALSE);

	push	0
	lea	eax, DWORD PTR _was$242204[esp+12]
	push	eax
	push	0
	push	97					; 00000061H
	call	DWORD PTR __imp__SystemParametersInfoA@16
	pop	esi

; 1705 : 
; 1706 : 	/*
; 1707 : 	// OW
; 1708 : 	_Module.RevokeClassObjects();
; 1709 : 	_Module.Term();
; 1710 : 	CoUninitialize();
; 1711 : 	 */
; 1712 : }

	pop	ecx
	ret	0
?SystemLevelExit@@YAXXZ ENDP				; SystemLevelExit
_TEXT	ENDS
PUBLIC	?CampaignAutoSave@@YAXW4FalconGameType@@@Z	; CampaignAutoSave
EXTRN	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z:NEAR ; CampaignClass::SaveCampaign
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?IsLocal@VuEntity@@QBEEXZ:NEAR			; VuEntity::IsLocal
EXTRN	?SaveStats@UIComms@@QAEXXZ:NEAR			; UIComms::SaveStats
EXTRN	?UpdateGameIter@UIComms@@QAEXXZ:NEAR		; UIComms::UpdateGameIter
EXTRN	?gUI_AutoSaveName@@3PADA:BYTE			; gUI_AutoSaveName
EXTRN	?tactical_is_training@@YAHXZ:NEAR		; tactical_is_training
; Function compile flags: /Ogtpy
;	COMDAT ?CampaignAutoSave@@YAXW4FalconGameType@@@Z
_TEXT	SEGMENT
_gametype$ = 8						; size = 4
?CampaignAutoSave@@YAXW4FalconGameType@@@Z PROC NEAR	; CampaignAutoSave, COMDAT

; 1716 : 	if (!tactical_is_training())

	call	?tactical_is_training@@YAHXZ		; tactical_is_training
	test	eax, eax
	jne	SHORT $L234734

; 1717 : 	{
; 1718 : 		gCommsMgr->SaveStats();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SaveStats@UIComms@@QAEXXZ		; UIComms::SaveStats

; 1719 : 		if(FalconLocalGame->IsLocal())

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	test	ecx, ecx
	je	SHORT $L242213
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	jmp	SHORT $L242214
$L242213:
	xor	eax, eax
$L242214:
	mov	ecx, eax
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	test	al, al
	je	SHORT $L234734

; 1720 : 		{
; 1721 : 			TheCampaign.SetCreationIter(TheCampaign.GetCreationIter()+1);

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+352

; 1722 : 			TheCampaign.SaveCampaign(gametype,gUI_AutoSaveName,0);

	mov	eax, DWORD PTR _gametype$[esp-4]
	push	0
	inc	ecx
	push	OFFSET FLAT:?gUI_AutoSaveName@@3PADA	; gUI_AutoSaveName
	mov	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+352, ecx
	push	eax
	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 1723 : 			if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	mov	eax, DWORD PTR [ecx+64]
	test	eax, eax
	je	SHORT $L234734

; 1724 : 			{
; 1725 : 				// Send messages to remote players with new Iter Number
; 1726 : 				// So they can save their stats & update Iter in their campaign
; 1727 : 				gCommsMgr->UpdateGameIter();

	jmp	?UpdateGameIter@UIComms@@QAEXXZ		; UIComms::UpdateGameIter
$L234734:

; 1728 : 			}
; 1729 : 		}
; 1730 : 	}
; 1731 : }

	ret	0
?CampaignAutoSave@@YAXW4FalconGameType@@@Z ENDP		; CampaignAutoSave
_TEXT	ENDS
PUBLIC	?ShutdownCampaign@@YAXXZ			; ShutdownCampaign
EXTRN	?EndCampaign@CampaignClass@@QAEXXZ:NEAR		; CampaignClass::EndCampaign
EXTRN	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z:NEAR ; C_Handler::RemoveUserCallback
EXTRN	?CampaignConnectionTimer@@YAXXZ:NEAR		; CampaignConnectionTimer
EXTRN	?SetTimeCompression@@YAXH@Z:NEAR		; SetTimeCompression
EXTRN	?gCampJoinStatus@@3HA:DWORD			; gCampJoinStatus
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
; Function compile flags: /Ogtpy
;	COMDAT ?ShutdownCampaign@@YAXXZ
_TEXT	SEGMENT
?ShutdownCampaign@@YAXXZ PROC NEAR			; ShutdownCampaign, COMDAT

; 2541 : 	if (gMainHandler)

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	test	ecx, ecx
	je	SHORT $L235020

; 2542 : 		gMainHandler->RemoveUserCallback(CampaignConnectionTimer);

	push	OFFSET FLAT:?CampaignConnectionTimer@@YAXXZ ; CampaignConnectionTimer
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback
$L235020:

; 2543 : 
; 2544 : 	// Shutdown campaign stuff here
; 2545 : 	TheCampaign.EndCampaign();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?EndCampaign@CampaignClass@@QAEXXZ	; CampaignClass::EndCampaign

; 2546 : #if CAMPTOOL
; 2547 : 	if (hMainWnd)
; 2548 : 		PostMessage (hMainWnd, WM_CLOSE, 0, 0);
; 2549 : #endif
; 2550 : 	SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 2551 : 	DisableCampaignMenus();

	call	?DisableCampaignMenus@@YAXXZ		; DisableCampaignMenus

; 2552 : 	gCampJoinStatus = 0;

	mov	DWORD PTR ?gCampJoinStatus@@3HA, 0	; gCampJoinStatus

; 2553 : }

	ret	0
?ShutdownCampaign@@YAXXZ ENDP				; ShutdownCampaign
_TEXT	ENDS
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT
; _this$ = ecx

; 100  : 	{

	push	esi
	mov	esi, ecx

; 101  : 		RemoveAll();

	mov	eax, DWORD PTR [esi]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $L242252
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], edi
$L242252:
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 102  : 	}

	ret	0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
PUBLIC	??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>, COMDAT
; _this$ = ecx

; 2863 : 	CAtlModuleT() throw()

	push	esi
	mov	esi, ecx
	xor	eax, eax
	lea	ecx, DWORD PTR [esi+16]
	mov	edx, ecx
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR [edx+20], eax
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+4], 36			; 00000024H
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax

; 2864 : 	{
; 2865 : 		T::InitLibId();
; 2866 : 	}

	mov	eax, esi
	jge	SHORT $L242277

; 2863 : 	CAtlModuleT() throw()

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L242277:
	mov	DWORD PTR [esi+40], edi
	pop	edi
	pop	esi

; 2864 : 	{
; 2865 : 		T::InitLibId();
; 2866 : 	}

	ret	0
??0?$CAtlModuleT@VCComModule@ATL@@@ATL@@QAE@XZ ENDP	; ATL::CAtlModuleT<ATL::CComModule>::CAtlModuleT<ATL::CComModule>
_TEXT	ENDS
PUBLIC	??1?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::~_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comip.h
;	COMDAT ??1?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ
_TEXT	SEGMENT
??1?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ PROC NEAR ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::~_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >, COMDAT
; _this$ = ecx

; 305  :         _Release(); 

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $L242283
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L242283:

; 306  :     }

	ret	0
??1?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAE@XZ ENDP ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::~_com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >
_TEXT	ENDS
PUBLIC	?Term@CAtlWinModule@ATL@@QAEXXZ			; ATL::CAtlWinModule::Term
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QAEXXZ
_TEXT	SEGMENT
?Term@CAtlWinModule@ATL@@QAEXXZ PROC NEAR		; ATL::CAtlWinModule::Term, COMDAT
; _this$ = ecx

; 2588 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

	mov	eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	eax
	push	ecx
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2589 : 	}

	ret	0
?Term@CAtlWinModule@ATL@@QAEXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
; Function compile flags: /Ogtpy
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	lea	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx
	mov	DWORD PTR [edx+8], ecx
	mov	DWORD PTR [edx+12], ecx
	mov	DWORD PTR [edx+16], ecx
	mov	DWORD PTR [edx+20], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	ret	0
??0_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QAE@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
; Function compile flags: /Ogtpy
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QAE@XZ
_TEXT	SEGMENT
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ PROC NEAR		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+32]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $L242329
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+32], edi
$L242329:
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	pop	edi
	pop	esi
	ret	0
??1_ATL_WIN_MODULE70@ATL@@QAE@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
PUBLIC	?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
PUBLIC	??0CComModule@ATL@@QAE@XZ			; ATL::CComModule::CComModule
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceD
PUBLIC	?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceS
PUBLIC	?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceS
PUBLIC	??_7CComModule@ATL@@6B@				; ATL::CComModule::`vftable'
PUBLIC	??_GCComModule@ATL@@UAEPAXI@Z			; ATL::CComModule::`scalar deleting destructor'
PUBLIC	?Lock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Lock
PUBLIC	?Unlock@CAtlModule@ATL@@UAEJXZ			; ATL::CAtlModule::Unlock
PUBLIC	?GetLockCount@CAtlModule@ATL@@UAEJXZ		; ATL::CAtlModule::GetLockCount
PUBLIC	?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ; ATL::CAtlModule::GetGITPtr
EXTRN	??_ECComModule@ATL@@UAEPAXI@Z:NEAR		; ATL::CComModule::`vector deleting destructor'
;	COMDAT ??_7CComModule@ATL@@6B@
CONST	SEGMENT
??_7CComModule@ATL@@6B@ DD FLAT:??_ECComModule@ATL@@UAEPAXI@Z ; ATL::CComModule::`vftable'
	DD	FLAT:?Lock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?Unlock@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetLockCount@CAtlModule@ATL@@UAEJXZ
	DD	FLAT:?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
	DD	FLAT:?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
	DD	FLAT:?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CComModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComModule@ATL@@QAE@XZ PROC NEAR			; ATL::CComModule::CComModule, COMDAT
; _this$ = ecx

; 3958 : 	CComModule()

	push	esi
	mov	esi, ecx
	xor	eax, eax
	lea	ecx, DWORD PTR [esi+16]
	mov	edx, ecx
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR [edx+20], eax
	mov	DWORD PTR [esi+4], 36			; 00000024H
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR ?_pAtlModule@ATL@@3PAVCAtlModule@1@A, esi ; ATL::_pAtlModule
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init
	test	eax, eax
	jge	SHORT $L242363
	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L242363:
	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi], OFFSET FLAT:??_7CComModule@ATL@@6B@

; 3959 : 	{
; 3960 : 		// Should have only one instance of a class 
; 3961 : 		// derived from CComModule in a project.
; 3962 : 		ATLASSERT(_pModule == NULL);
; 3963 : 		_pModule = this;

	mov	DWORD PTR ?_pModule@ATL@@3PAVCComModule@1@A, esi ; ATL::_pModule

; 3964 : 	}

	mov	eax, esi
	pop	esi
	ret	0
??0CComModule@ATL@@QAE@XZ ENDP				; ATL::CComModule::CComModule
_TEXT	ENDS
EXTRN	__imp__InterlockedIncrement@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?Lock@CAtlModule@ATL@@UAEJXZ PROC NEAR			; ATL::CAtlModule::Lock, COMDAT
; _this$ = ecx

; 2663 : 		return CComGlobalsThreadModel::Increment(&m_nLockCnt);

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedIncrement@4

; 2664 : 	}

	ret	0
?Lock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Lock
_TEXT	ENDS
EXTRN	__imp__InterlockedDecrement@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?Unlock@CAtlModule@ATL@@UAEJXZ PROC NEAR		; ATL::CAtlModule::Unlock, COMDAT
; _this$ = ecx

; 2668 : 		return CComGlobalsThreadModel::Decrement(&m_nLockCnt);

	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__InterlockedDecrement@4

; 2669 : 	}

	ret	0
?Unlock@CAtlModule@ATL@@UAEJXZ ENDP			; ATL::CAtlModule::Unlock
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT
?GetLockCount@CAtlModule@ATL@@UAEJXZ PROC NEAR		; ATL::CAtlModule::GetLockCount, COMDAT
; _this$ = ecx

; 2673 : 		return m_nLockCnt;

	mov	eax, DWORD PTR [ecx+8]

; 2674 : 	}

	ret	0
?GetLockCount@CAtlModule@ATL@@UAEJXZ ENDP		; ATL::CAtlModule::GetLockCount
_TEXT	ENDS
PUBLIC	__GUID_00000146_0000_0000_c000_000000000046
EXTRN	__imp__CoCreateInstance@20:NEAR
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT
__GUID_00000146_0000_0000_c000_000000000046 DD 0146H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT
_ppGIT$ = 8						; size = 4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z PROC NEAR ; ATL::CAtlModule::GetGITPtr, COMDAT
; _this$ = ecx

; 2682 : 	{

	push	ebx

; 2683 : 		ATLASSERT(ppGIT != NULL);
; 2684 : 
; 2685 : 		if (ppGIT == NULL)

	mov	ebx, DWORD PTR _ppGIT$[esp]
	test	ebx, ebx
	jne	SHORT $L68542

; 2686 : 			return E_POINTER;

	mov	eax, -2147467261			; 80004003H
	pop	ebx

; 2702 : 	}

	ret	4
$L68542:

; 2687 : 
; 2688 : 		HRESULT hr = S_OK;
; 2689 : 		if (m_pGIT == NULL)

	mov	eax, DWORD PTR [ecx+40]
	push	esi
	lea	esi, DWORD PTR [ecx+40]
	push	edi
	xor	edi, edi
	test	eax, eax
	jne	SHORT $L242385

; 2690 : 		{
; 2691 : 			hr = ::CoCreateInstance(CLSID_StdGlobalInterfaceTable, NULL, CLSCTX_INPROC_SERVER,
; 2692 : 				__uuidof(IGlobalInterfaceTable), (void**)&m_pGIT);

	push	esi
	push	OFFSET FLAT:__GUID_00000146_0000_0000_c000_000000000046
	push	1
	push	edi
	push	OFFSET FLAT:_CLSID_StdGlobalInterfaceTable
	call	DWORD PTR __imp__CoCreateInstance@20
	mov	edi, eax

; 2693 : 		}
; 2694 : 
; 2695 : 		if (SUCCEEDED(hr))

	test	edi, edi
	jl	SHORT $L68550
$L242385:

; 2696 : 		{
; 2697 : 			ATLASSERT(m_pGIT != NULL);
; 2698 : 			*ppGIT = m_pGIT;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [ebx], eax

; 2699 : 			m_pGIT->AddRef();

	mov	esi, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi]
	push	esi
	call	DWORD PTR [ecx+4]
$L68550:

; 2700 : 		}
; 2701 : 		return hr;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2702 : 	}

	ret	4
?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z ENDP ; ATL::CAtlModule::GetGITPtr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4107 : #if defined(_ATL_STATIC_REGISTRY)
; 4108 : 		(lpszRes);
; 4109 : 		(bRegister);
; 4110 : 		(pMapEntries);
; 4111 : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H

; 4112 : #else
; 4113 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceD(lpszRes, bRegister, pMapEntries);		
; 4114 : #endif
; 4115 : 	}

	ret	16					; 00000010H
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CComModule::UpdateRegistryFromResourceD, COMDAT

; 4119 : #if defined(_ATL_STATIC_REGISTRY)
; 4120 : 		(nResID);
; 4121 : 		(bRegister);
; 4122 : 		(pMapEntries);
; 4123 : 		return E_FAIL;

	mov	eax, -2147467259			; 80004005H

; 4124 : #else
; 4125 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceD(nResID, bRegister, pMapEntries);
; 4126 : #endif
; 4127 : 	}

	ret	16					; 00000010H
?UpdateRegistryFromResourceD@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceD
_TEXT	ENDS
PUBLIC	??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@ ; `string'
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@ DB 'A', 00H, 'P', 00H
	DB	'P', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT
_pRegistrar$ = 8					; size = 4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z PROC NEAR ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements, COMDAT
; _this$ = ecx

; 2937 : 		return pRegistrar->AddReplacement(L"APPID", T::GetAppId());

	mov	eax, DWORD PTR _pRegistrar$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
	push	OFFSET FLAT:??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
	push	eax
	call	DWORD PTR [ecx+12]

; 2938 : 	}

	ret	4
?AddCommonRGSReplacements@?$CAtlModuleT@VCComModule@ATL@@@ATL@@UAEJPAUIRegistrarBase@@@Z ENDP ; ATL::CAtlModuleT<ATL::CComModule>::AddCommonRGSReplacements
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCComModule@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCComModule@ATL@@UAEPAXI@Z PROC NEAR			; ATL::CComModule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CComModule@ATL@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L242401
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242401:
	mov	eax, esi
	pop	esi
	ret	4
??_GCComModule@ATL@@UAEPAXI@Z ENDP			; ATL::CComModule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GData_t@_bstr_t@@AAEPAXI@Z			; _bstr_t::Data_t::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GData_t@_bstr_t@@AAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GData_t@_bstr_t@@AAEPAXI@Z PROC NEAR			; _bstr_t::Data_t::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L242417
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
$L242417:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L242418
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L242418:
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L242420
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242420:
	mov	eax, esi
	pop	esi
	ret	4
??_GData_t@_bstr_t@@AAEPAXI@Z ENDP			; _bstr_t::Data_t::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_07HMOCDNDG@Instant?$AA@			; `string'
PUBLIC	??_C@_0CI@PPEJILHM@Campaign?5Join?5Error?3?5Not?5a?5valid@ ; `string'
PUBLIC	??_C@_0BO@BAJMPCDG@Requesting?5campaign?5preload?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@GEFDLDAC@Requesting?5all?5campaign?5data?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@NIMMODLI@Requesting?5campaign?5data?4?6?$AA@ ; `string'
PUBLIC	??_C@_06IMIHEKN@remote?$AA@			; `string'
PUBLIC	??_C@_05IDKHKMLA@local?$AA@			; `string'
PUBLIC	??_C@_0BD@IHLFPBJB@Starting?5?$CFs?5game?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@NHCAEOMH@Failed?5to?5join?5game?4?6?$AA@ ; `string'
PUBLIC	??_C@_0O@LMMEICJG@Game?5Is?5Full?6?$AA@		; `string'
PUBLIC	??_C@_0BN@FAGEFFEP@Match?5Play?5game?5in?5progress?6?$AA@ ; `string'
PUBLIC	??_C@_0P@DDKBHCBL@Starting?4?4?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BF@KMCPKFBA@Got?5Scenario?5Stats?4?6?$AA@ ; `string'
PUBLIC	??_C@_0P@BMIBAIOI@Got?5Entities?4?6?$AA@	; `string'
PUBLIC	??_C@_0O@DIBLHBFE@Got?5weather?4?6?$AA@		; `string'
PUBLIC	??_C@_0BH@MAEHGNGC@Got?5persistant?5lists?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@MKNDGGEP@Got?5objective?5data?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@BNNEBOK@Got?5team?5data?4?6?$AA@	; `string'
PUBLIC	??_C@_0BA@KKONDOBP@Got?5unit?5data?4?6?$AA@	; `string'
PUBLIC	??_C@_0O@NDKFKLKF@Got?5VC?5data?4?6?$AA@	; `string'
PUBLIC	??_C@_0BG@NEHNADBL@Got?5Priorities?5data?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@CHDHKBAC@Player?5squadron?5recalled?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0N@HFJOAOBI@?$CFs?2intro?4avi?$AA@	; `string'
PUBLIC	?FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z	; FalconMessageHandler
EXTRN	__controlfp:NEAR
EXTRN	?GotJoinData@CampaignClass@@QAEXXZ:NEAR		; CampaignClass::GotJoinData
EXTRN	?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z:NEAR ; CampaignClass::RequestScenarioStats
EXTRN	?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z:NEAR ; CampaignClass::LoadCampaign
EXTRN	?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z:NEAR ; CampaignClass::JoinCampaign
EXTRN	?vuPlayerPoolGroup@@3PAVVuGameEntity@@A:DWORD	; vuPlayerPoolGroup
EXTRN	?vuxRealTime@@3KA:DWORD				; vuxRealTime
EXTRN	?StartGraphics@SimulationLoopControl@@SAXXZ:NEAR ; SimulationLoopControl::StartGraphics
EXTRN	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ:NEAR ; UIComms::GetTargetGame
EXTRN	__imp__SetActiveWindow@4:NEAR
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:NEAR ; FalconGameEntity::GetGameType
EXTRN	?ProcessUserCallbacks@C_Handler@@QAEXXZ:NEAR	; C_Handler::ProcessUserCallbacks
EXTRN	?EventHandler@C_Handler@@QAEJPAUHWND__@@IIJ@Z:NEAR ; C_Handler::EventHandler
EXTRN	?gUI_CampaignFile@@3PADA:BYTE			; gUI_CampaignFile
EXTRN	?EnterMode@FalconDisplayConfiguration@@QAEXW4DisplayMode@1@HH@Z:NEAR ; FalconDisplayConfiguration::EnterMode
EXTRN	?LeaveMode@FalconDisplayConfiguration@@QAEXXZ:NEAR ; FalconDisplayConfiguration::LeaveMode
EXTRN	?PlayThatFunkyMusicWhiteBoy@@YAXXZ:NEAR		; PlayThatFunkyMusicWhiteBoy
EXTRN	?DisplayJoinStatusWindow@@YAXH@Z:NEAR		; DisplayJoinStatusWindow
EXTRN	?UIScramblePlayerFlight@@YAXXZ:NEAR		; UIScramblePlayerFlight
EXTRN	?PlayUIMovieQ@@YAXXZ:NEAR			; PlayUIMovieQ
EXTRN	?ReadyToPlayMovie@@3HA:DWORD			; ReadyToPlayMovie
EXTRN	?CampEventSoundID@@3JA:DWORD			; CampEventSoundID
EXTRN	?UpdateMissionWindow@@YAXJ@Z:NEAR		; UpdateMissionWindow
EXTRN	__imp__GetWindowRect@8:NEAR
EXTRN	?CopyDFSettingsToWindow@@YAXXZ:NEAR		; CopyDFSettingsToWindow
EXTRN	?CheckCampaignFlyButton@@YAXXZ:NEAR		; CheckCampaignFlyButton
EXTRN	?GameHasStarted@@YAXXZ:NEAR			; GameHasStarted
EXTRN	?RebuildCurrentWPList@@YAXXZ:NEAR		; RebuildCurrentWPList
EXTRN	?UI_HandleAirbaseDestroyed@@YAXXZ:NEAR		; UI_HandleAirbaseDestroyed
EXTRN	?UI_HandleFlightCancel@@YAXXZ:NEAR		; UI_HandleFlightCancel
EXTRN	?UI_HandleAircraftDestroyed@@YAXXZ:NEAR		; UI_HandleAircraftDestroyed
EXTRN	?UI_UpdateOccupationMap@@YAXXZ:NEAR		; UI_UpdateOccupationMap
EXTRN	?OpenTEGameOverWindow@@YAXXZ:NEAR		; OpenTEGameOverWindow
EXTRN	?ProcessChatStr@@YAXPAVCHATSTR@@@Z:NEAR		; ProcessChatStr
EXTRN	?RebuildGameTree@@YAXXZ:NEAR			; RebuildGameTree
EXTRN	?UI_UpdateGameList@@YAXXZ:NEAR			; UI_UpdateGameList
EXTRN	?ReplayUIMovie@@YAXJ@Z:NEAR			; ReplayUIMovie
EXTRN	?move_player_flight@instant_action@@SAXXZ:NEAR	; instant_action::move_player_flight
EXTRN	?create_wave@instant_action@@SAXXZ:NEAR		; instant_action::create_wave
EXTRN	?ViewRemoteLogbook@@YAXJ@Z:NEAR			; ViewRemoteLogbook
EXTRN	?RelocateSquadron@@YAXXZ:NEAR			; RelocateSquadron
EXTRN	?tactical_restart_mission@@YAXXZ:NEAR		; tactical_restart_mission
EXTRN	?set_campaign_time@instant_action@@SAXXZ:NEAR	; instant_action::set_campaign_time
EXTRN	?gCampJoinLastData@@3KA:DWORD			; gCampJoinLastData
EXTRN	?StartCampaignGame@@YAXHH@Z:NEAR		; StartCampaignGame
EXTRN	?CampaignPreloadSuccess@@YAXH@Z:NEAR		; CampaignPreloadSuccess
EXTRN	?CampaignJoinSuccess@@YAXXZ:NEAR		; CampaignJoinSuccess
EXTRN	?CampaignJoinFail@@YAXXZ:NEAR			; CampaignJoinFail
EXTRN	?UI_Startup@@YAHXZ:NEAR				; UI_Startup
EXTRN	?UI_UpdateVU@@YAXXZ:NEAR			; UI_UpdateVU
EXTRN	?RecieveScenarioInfo@@YAXXZ:NEAR		; RecieveScenarioInfo
EXTRN	?UI_CommsErrorMessage@@YAXG@Z:NEAR		; UI_CommsErrorMessage
EXTRN	?LeaveDogfight@@YAXXZ:NEAR			; LeaveDogfight
EXTRN	?STPRender@@YAXPAVC_Base@@@Z:NEAR		; STPRender
EXTRN	?SimMouseStopProcessing@@YAXXZ:NEAR		; SimMouseStopProcessing
EXTRN	?SimMouseResumeProcessing@@YAXHH@Z:NEAR		; SimMouseResumeProcessing
EXTRN	__imp__SendMessageA@16:NEAR
EXTRN	?FinishCampaign@LogBookData@@QAEXF@Z:NEAR	; LogBookData::FinishCampaign
EXTRN	?gCampJoinTries@@3EA:BYTE			; gCampJoinTries
EXTRN	__imp__PostQuitMessage@4:NEAR
EXTRN	?SetFlyState@FalconSessionEntity@@QAEXE@Z:NEAR	; FalconSessionEntity::SetFlyState
;	COMDAT ?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA
; File f:\projects\freefalcon\graphics\include\imagebuf.h
_BSS	SEGMENT
?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `FalconMessageHandler'::`2'::InTimer
_BSS	ENDS
;	COMDAT ?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA
_BSS	SEGMENT
?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA DB 01H DUP (?) ; `FalconMessageHandler'[::K]::mouseIn
_BSS	ENDS
;	COMDAT ??_C@_0P@DDKBHCBL@Starting?4?4?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0P@DDKBHCBL@Starting?4?4?5?$CFd?6?$AA@ DB 'Starting.. %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMOCDNDG@Instant?$AA@
CONST	SEGMENT
??_C@_07HMOCDNDG@Instant?$AA@ DB 'Instant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NIMMODLI@Requesting?5campaign?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BL@NIMMODLI@Requesting?5campaign?5data?4?6?$AA@ DB 'Requesting cam'
	DB	'paign data.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GEFDLDAC@Requesting?5all?5campaign?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BP@GEFDLDAC@Requesting?5all?5campaign?5data?4?6?$AA@ DB 'Requestin'
	DB	'g all campaign data.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BAJMPCDG@Requesting?5campaign?5preload?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@BAJMPCDG@Requesting?5campaign?5preload?4?6?$AA@ DB 'Requesting '
	DB	'campaign preload.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PPEJILHM@Campaign?5Join?5Error?3?5Not?5a?5valid@
CONST	SEGMENT
??_C@_0CI@PPEJILHM@Campaign?5Join?5Error?3?5Not?5a?5valid@ DB 'Campaign J'
	DB	'oin Error: Not a valid game.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IMIHEKN@remote?$AA@
CONST	SEGMENT
??_C@_06IMIHEKN@remote?$AA@ DB 'remote', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IDKHKMLA@local?$AA@
CONST	SEGMENT
??_C@_05IDKHKMLA@local?$AA@ DB 'local', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IHLFPBJB@Starting?5?$CFs?5game?4?6?$AA@
CONST	SEGMENT
??_C@_0BD@IHLFPBJB@Starting?5?$CFs?5game?4?6?$AA@ DB 'Starting %s game.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NHCAEOMH@Failed?5to?5join?5game?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@NHCAEOMH@Failed?5to?5join?5game?4?6?$AA@ DB 'Failed to join gam'
	DB	'e.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DIBLHBFE@Got?5weather?4?6?$AA@
CONST	SEGMENT
??_C@_0O@DIBLHBFE@Got?5weather?4?6?$AA@ DB 'Got weather.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BMIBAIOI@Got?5Entities?4?6?$AA@
CONST	SEGMENT
??_C@_0P@BMIBAIOI@Got?5Entities?4?6?$AA@ DB 'Got Entities.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MAEHGNGC@Got?5persistant?5lists?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@MAEHGNGC@Got?5persistant?5lists?4?6?$AA@ DB 'Got persistant lis'
	DB	'ts.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MKNDGGEP@Got?5objective?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BF@MKNDGGEP@Got?5objective?5data?4?6?$AA@ DB 'Got objective data.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KMCPKFBA@Got?5Scenario?5Stats?4?6?$AA@
CONST	SEGMENT
??_C@_0BF@KMCPKFBA@Got?5Scenario?5Stats?4?6?$AA@ DB 'Got Scenario Stats.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KKONDOBP@Got?5unit?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BA@KKONDOBP@Got?5unit?5data?4?6?$AA@ DB 'Got unit data.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BNNEBOK@Got?5team?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BA@BNNEBOK@Got?5team?5data?4?6?$AA@ DB 'Got team data.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDKFKLKF@Got?5VC?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0O@NDKFKLKF@Got?5VC?5data?4?6?$AA@ DB 'Got VC data.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEHNADBL@Got?5Priorities?5data?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@NEHNADBL@Got?5Priorities?5data?4?6?$AA@ DB 'Got Priorities data'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LMMEICJG@Game?5Is?5Full?6?$AA@
CONST	SEGMENT
??_C@_0O@LMMEICJG@Game?5Is?5Full?6?$AA@ DB 'Game Is Full', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FAGEFFEP@Match?5Play?5game?5in?5progress?6?$AA@
CONST	SEGMENT
??_C@_0BN@FAGEFFEP@Match?5Play?5game?5in?5progress?6?$AA@ DB 'Match Play '
	DB	'game in progress', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CHDHKBAC@Player?5squadron?5recalled?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BL@CHDHKBAC@Player?5squadron?5recalled?$CB?6?$AA@ DB 'Player squad'
	DB	'ron recalled!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFJOAOBI@?$CFs?2intro?4avi?$AA@
CONST	SEGMENT
??_C@_0N@HFJOAOBI@?$CFs?2intro?4avi?$AA@ DB '%s\intro.avi', 00H ; `string'
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
CONST	ENDS
;	COMDAT ?FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_retval$ = -284						; size = 4
_rect$234753 = -280					; size = 16
_tmpPath$234937 = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z PROC NEAR	; FalconMessageHandler, COMDAT

; 1738 : {

	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	ebx
	mov	ebx, DWORD PTR _hwnd$[esp+284]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _lParam$[esp+296]

; 1739 : 	LRESULT retval = 0;
; 1740 : 	static int InTimer=0;
; 1741 : 
; 1742 : 
; 1743 : 	// Looking for multiplayer stomp...
; 1744 : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 1745 : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 1746 : 
; 1747 : #ifdef _MSC_VER
; 1748 : 	// Set the FPU to Truncate
; 1749 : 	_controlfp(_RC_CHOP,MCW_RC);

	push	768					; 00000300H
	xor	ebp, ebp
	push	768					; 00000300H
	mov	DWORD PTR __$ArrayPad$[esp+308], eax
	mov	DWORD PTR _retval$[esp+308], ebp
	call	__controlfp

; 1750 : 
; 1751 : 	// Set the FPU to 24bit precision
; 1752 : 	_controlfp(_PC_24,MCW_PC);

	push	196608					; 00030000H
	push	131072					; 00020000H
	call	__controlfp

; 1753 : #endif
; 1754 : 
; 1755 : #ifdef DEBUG
; 1756 : 	//static int in = 0;
; 1757 : 	//static UINT lastFive[5];
; 1758 : 	//gDispatchThreadID = (HANDLE)GetCurrentThreadId();
; 1759 : 	//for (int i=0; i<4; i++)
; 1760 : 	//	lastFive[i] = lastFive[i+1];
; 1761 : 	//if (campCritical && campCritical->owningThread == (HANDLE)GetCurrentThreadId() && campCritical->count)
; 1762 : 	//	MonoPrint("We got game.\n");
; 1763 : 	//lastFive[4] = message;
; 1764 : 	//in ++;
; 1765 : #endif
; 1766 : 
; 1767 : 	switch (message)

	mov	esi, DWORD PTR _message$[esp+312]
	add	esp, 16					; 00000010H
	cmp	esi, 1047				; 00000417H
	ja	$L242469
	je	$L234920
	cmp	esi, 1033				; 00000409H
	ja	$L242470
	je	$L234849
	cmp	esi, 1025				; 00000401H
	ja	$L242471
	je	$L234761
	cmp	esi, 8
	ja	$L242472
	je	SHORT $L234755
	mov	eax, esi
	dec	eax
	je	SHORT $L234757
	dec	eax
	je	$L242662
	sub	eax, 4
	je	$L234751
$L234952:

; 2335 : 		}
; 2336 : 
; 2337 : 		default:
; 2338 : 		{
; 2339 : 			if(gMainHandler != NULL)

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	cmp	ecx, ebp
	je	$L234953

; 2340 : 			{
; 2341 : 				if(gMainHandler->EventHandler(hwnd,message,wParam,lParam)){

	mov	ebp, DWORD PTR _wParam$[esp+296]
	push	edi
	push	ebp
	push	esi
	push	ebx
	call	?EventHandler@C_Handler@@QAEJPAUHWND__@@IIJ@Z ; C_Handler::EventHandler
	test	eax, eax
	je	$L234954

; 2342 : 					retval = DefWindowProc (hwnd, message, wParam, lParam);

	push	edi
	push	ebp

; 2343 : 				}
; 2344 : 				else{

	jmp	$L242666
$L234757:

; 1797 : 
; 1798 : 		case WM_CREATE :
; 1799 : 			PostMessage(hwnd,FM_START_GAME,0,0);

	push	ebp
	push	ebp
	push	1025					; 00000401H
	push	ebx
	call	DWORD PTR __imp__PostMessageA@16

; 1800 : 			break;

	jmp	$L242662
$L234755:

; 1793 : 		case WM_KILLFOCUS:
; 1794 : 			if(KeepFocus && FalconDisplay.displayFullScreen)

	cmp	DWORD PTR _KeepFocus, ebp
	je	$L242662
	cmp	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, ebp
	je	$L242662

; 1795 : 				PostMessage(hwnd,FM_GIVE_FOCUS,0,0);

	push	ebp
	push	ebp
	push	1060					; 00000424H
	push	ebx
	call	DWORD PTR __imp__PostMessageA@16

; 1796 : 			break;

	jmp	$L242662
$L242472:

; 1753 : #endif
; 1754 : 
; 1755 : #ifdef DEBUG
; 1756 : 	//static int in = 0;
; 1757 : 	//static UINT lastFive[5];
; 1758 : 	//gDispatchThreadID = (HANDLE)GetCurrentThreadId();
; 1759 : 	//for (int i=0; i<4; i++)
; 1760 : 	//	lastFive[i] = lastFive[i+1];
; 1761 : 	//if (campCritical && campCritical->owningThread == (HANDLE)GetCurrentThreadId() && campCritical->count)
; 1762 : 	//	MonoPrint("We got game.\n");
; 1763 : 	//lastFive[4] = message;
; 1764 : 	//in ++;
; 1765 : #endif
; 1766 : 
; 1767 : 	switch (message)

	mov	eax, esi
	sub	eax, 28					; 0000001cH
	je	SHORT $L234751
	sub	eax, 106				; 0000006aH
	je	SHORT $L234748
	sub	eax, 890				; 0000037aH
	je	$L242662
	jmp	$L234952
$L234748:

; 1768 : 	{
; 1769 : 
; 1770 : #ifdef NDEBUG
; 1771 : 		case WM_NCACTIVATE:
; 1772 :         if (FalconDisplay.displayFullScreen){

	cmp	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, ebp
	je	$L242662

; 1773 :             if (!wParam)

	cmp	DWORD PTR _wParam$[esp+296], ebp
	jne	$L242662

; 1774 :                return 0L;

	xor	eax, eax
	jmp	$L234740
$L234751:

; 1775 :         }
; 1776 :         break; 
; 1777 : #endif
; 1778 : 		
; 1779 : 		// Scott OR someone competent needs to trap for surface lost
; 1780 : 		// until then UI is only thing that can handle surface lost
; 1781 : 		case WM_ACTIVATEAPP:
; 1782 : 		case WM_ACTIVATE:
; 1783 : 			if(doUI && FalconDisplay.displayFullScreen)

	cmp	DWORD PTR ?doUI@@3HA, ebp		; doUI
	je	$L242662
	cmp	DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+508, ebp
	je	$L242662

; 1784 : 			{
; 1785 : 				RECT rect;
; 1786 : 				// restore surfaces
; 1787 : 				if(gMainHandler){

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662

; 1788 : 					GetWindowRect(FalconDisplay.appWin,&rect);

	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	lea	eax, DWORD PTR _rect$234753[esp+300]
	push	eax
	push	ecx
	call	DWORD PTR __imp__GetWindowRect@8

; 1789 : 					InvalidateRect(FalconDisplay.appWin,&rect,FALSE);

	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ebp
	lea	edx, DWORD PTR _rect$234753[esp+304]
	push	edx
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12

; 1790 : 				}
; 1791 : 			}
; 1792 : 			break;

	jmp	$L242662
$L234761:

; 1807 : 
; 1808 : 		case FM_UPDATE_RULES:
; 1809 : 			//UpdateRules();
; 1810 : 			break;
; 1811 : 
; 1812 : 		case FM_START_GAME:
; 1813 : 			// RV - Biker - Start intro movie after we know which theater we are on
; 1814 : 			//if (intro_movie)
; 1815 : 			//	SendMessage(hwnd,FM_PLAY_INTRO_MOVIE,0,0); // Play Movie
; 1816 : 			SystemLevelInit();

	call	?SystemLevelInit@@YAXXZ			; SystemLevelInit

; 1817 : 
; 1818 : 			if (intro_movie){

	cmp	DWORD PTR ?intro_movie@@3HA, ebp	; intro_movie
	je	SHORT $L234762

; 1819 : 				SendMessage(hwnd,FM_PLAY_INTRO_MOVIE,0,0); // Play Movie

	push	ebp
	push	ebp
	push	1052					; 0000041cH
	push	ebx
	call	DWORD PTR __imp__SendMessageA@16
$L234762:

; 1820 : 			}
; 1821 : 
; 1822 : 			if (auto_start){

	cmp	DWORD PTR ?auto_start@@3HA, ebp		; auto_start
	je	$L242662

; 1823 : 				PostMessage(hwnd,FM_START_UI,0,0); // Start UI

	push	ebp
	push	ebp
	push	1027					; 00000403H
	push	ebx
	call	DWORD PTR __imp__PostMessageA@16

; 1824 : 			}
; 1825 : 			break;

	jmp	$L242662
$L242471:

; 1753 : #endif
; 1754 : 
; 1755 : #ifdef DEBUG
; 1756 : 	//static int in = 0;
; 1757 : 	//static UINT lastFive[5];
; 1758 : 	//gDispatchThreadID = (HANDLE)GetCurrentThreadId();
; 1759 : 	//for (int i=0; i<4; i++)
; 1760 : 	//	lastFive[i] = lastFive[i+1];
; 1761 : 	//if (campCritical && campCritical->owningThread == (HANDLE)GetCurrentThreadId() && campCritical->count)
; 1762 : 	//	MonoPrint("We got game.\n");
; 1763 : 	//lastFive[4] = message;
; 1764 : 	//in ++;
; 1765 : #endif
; 1766 : 
; 1767 : 	switch (message)

	lea	eax, DWORD PTR [esi-1026]
	cmp	eax, 5
	ja	$L234952
	jmp	DWORD PTR $L242667[eax*4]
$L234764:

; 1826 : 
; 1827 : 		case FM_START_UI:
; 1828 : 			KeepFocus=0;
; 1829 : 			TheCampaign.Suspend();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	DWORD PTR _KeepFocus, ebp
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 1830 : 			if (wParam)

	cmp	DWORD PTR _wParam$[esp+296], ebp
	je	SHORT $L234765

; 1831 : 				g_theaters.DoSoundSetup();

	mov	ecx, OFFSET FLAT:?g_theaters@@3VTheaterList@@A
	call	?DoSoundSetup@TheaterList@@QAEXXZ	; TheaterList::DoSoundSetup
$L234765:

; 1832 : 
; 1833 : 			FalconLocalSession->SetFlyState(FLYSTATE_IN_UI);

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	push	ebp
	call	?SetFlyState@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetFlyState

; 1834 : #ifdef DEBUG
; 1835 : 			gPlayerPilotLock = 0;
; 1836 : #endif
; 1837 : 			doUI=TRUE;

	mov	DWORD PTR ?doUI@@3HA, 1			; doUI

; 1838 : 
; 1839 : 			UI_Startup();

	call	?UI_Startup@@YAHXZ			; UI_Startup

; 1840 : 			TheCampaign.Resume();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 1841 : 			break;

	jmp	$L242662
$L234767:

; 1842 : 
; 1843 : 		case FM_END_UI:
; 1844 : 			//edg : as far as i can tell this is never called
; 1845 : 			EndUI();

	call	?EndUI@@YAXXZ				; EndUI

; 1846 : 			break;

	jmp	$L242662
$L234839:

; 2031 : 
; 2032 : 		// ==========================================================
; 2033 : 		// KCK: These are for sim entry/exit from the varios sections
; 2034 : 		// ==========================================================
; 2035 : 
; 2036 : 		case FM_START_INSTANTACTION:
; 2037 : 			// Mark us as loading
; 2038 : 			FalconLocalSession->SetFlyState(FLYSTATE_LOADING);

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	push	1
	call	?SetFlyState@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetFlyState

; 2039 : 
; 2040 : 
; 2041 : 
; 2042 : 			//InstantAction.SetAgBiasFlag(InstantActionSettings.MissionType); // 0=A-A,1=A-G
; 2043 : 			//InstantAction.SetSamFlag(InstantActionSettings.SamSites);
; 2044 : 			//InstantAction.SetAAAFlag(InstantActionSettings.AAASites);
; 2045 : 
; 2046 : 			instant_action::set_campaign_time ();

	call	?set_campaign_time@instant_action@@SAXXZ ; instant_action::set_campaign_time

; 2047 : 			instant_action::move_player_flight ();

	call	?move_player_flight@instant_action@@SAXXZ ; instant_action::move_player_flight

; 2048 : 			instant_action::create_wave ();

	call	?create_wave@instant_action@@SAXXZ	; instant_action::create_wave

; 2049 : 
; 2050 : 			MonoPrint("Starting.. %d\n",vuxRealTime);

	mov	ecx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	ecx
	push	OFFSET FLAT:??_C@_0P@DDKBHCBL@Starting?4?4?5?$CFd?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 2051 : 
; 2052 : 			SimulationLoopControl::StartGraphics();

	call	?StartGraphics@SimulationLoopControl@@SAXXZ ; SimulationLoopControl::StartGraphics

; 2053 : 			EndUI();

	call	?EndUI@@YAXXZ				; EndUI

; 2054 : 			KeepFocus=1;

	mov	DWORD PTR _KeepFocus, 1

; 2055 : 			break;

	jmp	$L242662
$L234939:

; 2296 : 
; 2297 : 		case FM_EXIT_GAME:
; 2298 : 			EndUI();

	call	?EndUI@@YAXXZ				; EndUI

; 2299 : 			if (auto_start)

	cmp	DWORD PTR ?auto_start@@3HA, ebp		; auto_start
	je	$L242662

; 2300 : 			{
; 2301 : 				PostQuitMessage (0);

	push	ebp
	call	DWORD PTR __imp__PostQuitMessage@4

; 2302 : 				retval = 0;

	mov	DWORD PTR _retval$[esp+300], ebp

; 2303 : 			}
; 2304 : 			break;

	jmp	$L242662
$L234849:

; 2056 : 
; 2057 : 		case FM_END_INSTANTACTION:
; 2058 : /*
; 2059 : 			SendMessage(hwnd,FM_SHUTDOWN_CAMPAIGN,wParam,lParam);
; 2060 : 			PostMessage(hwnd,FM_START_UI,0,0);
; 2061 : */
; 2062 : 			break;
; 2063 : 
; 2064 : 		case FM_START_DOGFIGHT:
; 2065 : 			if (lTestVar){
; 2066 : 				// Mark us as loading
; 2067 : 				FalconLocalSession->SetFlyState(FLYSTATE_LOADING);
; 2068 : 				SimulationLoopControl::StartGraphics();
; 2069 : 				EndUI();
; 2070 : 				KeepFocus=1;
; 2071 : 			}
; 2072 : 		break;
; 2073 : 
; 2074 : 		case FM_START_CAMPAIGN:
; 2075 : 			if (lTestVar){
; 2076 : 				// Mark us as loading
; 2077 : 				FalconLocalSession->SetFlyState(FLYSTATE_LOADING);
; 2078 : 				SimulationLoopControl::StartGraphics();
; 2079 : 				EndUI();
; 2080 : 				KeepFocus=1;
; 2081 : 			}
; 2082 : 			break;
; 2083 : 
; 2084 : 		case FM_START_TACTICAL:
; 2085 :          if (lTestVar)

	cmp	DWORD PTR _lTestVar, ebp
	je	$L242662

; 2086 :          {
; 2087 : 			// Mark us as loading
; 2088 : 			FalconLocalSession->SetFlyState(FLYSTATE_LOADING);

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	push	1
	call	?SetFlyState@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetFlyState

; 2089 : 			   SimulationLoopControl::StartGraphics();

	call	?StartGraphics@SimulationLoopControl@@SAXXZ ; SimulationLoopControl::StartGraphics

; 2090 : 			   EndUI();

	call	?EndUI@@YAXXZ				; EndUI

; 2091 : 			KeepFocus=1;

	mov	DWORD PTR _KeepFocus, 1

; 2092 :          }
; 2093 : 			break;

	jmp	$L242662
$L242470:

; 1753 : #endif
; 1754 : 
; 1755 : #ifdef DEBUG
; 1756 : 	//static int in = 0;
; 1757 : 	//static UINT lastFive[5];
; 1758 : 	//gDispatchThreadID = (HANDLE)GetCurrentThreadId();
; 1759 : 	//for (int i=0; i<4; i++)
; 1760 : 	//	lastFive[i] = lastFive[i+1];
; 1761 : 	//if (campCritical && campCritical->owningThread == (HANDLE)GetCurrentThreadId() && campCritical->count)
; 1762 : 	//	MonoPrint("We got game.\n");
; 1763 : 	//lastFive[4] = message;
; 1764 : 	//in ++;
; 1765 : #endif
; 1766 : 
; 1767 : 	switch (message)

	lea	eax, DWORD PTR [esi-1034]
	cmp	eax, 12					; 0000000cH
	ja	$L234952
	jmp	DWORD PTR $L242668[eax*4]
$L234785:

; 1895 : 
; 1896 : 		case FM_TACREF_BUTTON_HANDLER:
; 1897 : //			if(gMainHandler != NULL)
; 1898 : //			{
; 1899 : //				TAC_REF_XrefCB2(lParam);
; 1900 : //	  		}
; 1901 : 			
; 1902 : 			break;
; 1903 : 		// =========================================================
; 1904 : 		// KCK: These are used for loading/joining/ending a campaign
; 1905 : 		// and are called under all four game sections.
; 1906 : 		// =========================================================
; 1907 : 
; 1908 : 		case FM_LOAD_CAMPAIGN:
; 1909 : 			if (lTestVar)

	cmp	DWORD PTR _lTestVar, ebp
	je	$L242662

; 1910 : 			{
; 1911 : 				// Load a campaign here (this should allow tactical engagements too, so we
; 1912 : 				// So we can eliminate the LOAD_TACTICAL case.
; 1913 : 				if (
; 1914 : 					(FalconGameType)lParam != game_Campaign && 
; 1915 : 					(FalconGameType)lParam != game_TacticalEngagement
; 1916 : 				){

	cmp	edi, 4
	je	SHORT $L234789
	cmp	edi, 3
	je	SHORT $L234789

; 1917 : 					strcpy(gUI_CampaignFile,"Instant");

	mov	edx, DWORD PTR ??_C@_07HMOCDNDG@Instant?$AA@
	mov	eax, DWORD PTR ??_C@_07HMOCDNDG@Instant?$AA@+4
	mov	DWORD PTR ?gUI_CampaignFile@@3PADA, edx
	mov	DWORD PTR ?gUI_CampaignFile@@3PADA+4, eax
$L234789:

; 1918 : 				}
; 1919 : 
; 1920 : 				retval = TheCampaign.LoadCampaign((FalconGameType)lParam, gUI_CampaignFile);

	push	OFFSET FLAT:?gUI_CampaignFile@@3PADA	; gUI_CampaignFile
	push	edi
	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?LoadCampaign@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadCampaign

; 1921 : 
; 1922 : 				// Notify UI of our success
; 1923 : 				if (retval){

	cmp	eax, ebp

; 1924 : 					PostMessage(FalconDisplay.appWin,FM_JOIN_SUCCEEDED,0,0);

	push	ebp
	mov	DWORD PTR _retval$[esp+304], eax
	push	ebp
	je	SHORT $L234792
	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	1040					; 00000410H
	push	ecx
	call	DWORD PTR __imp__PostMessageA@16

; 1925 : 				}
; 1926 : 				else {

	jmp	$L242662
$L234792:

; 1927 : 					PostMessage(FalconDisplay.appWin,FM_JOIN_FAILED,0,0);

	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	1041					; 00000411H
	push	edx
	call	DWORD PTR __imp__PostMessageA@16

; 1928 : 				}
; 1929 : 			}
; 1930 : 		break;

	jmp	$L242662
$L234794:

; 1931 : 
; 1932 : 		case FM_REVERT_CAMPAIGN:
; 1933 : 		{
; 1934 : 			int gametype = FalconLocalGame->GetGameType();

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	SHORT $L242425
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	jmp	SHORT $L242426
$L242425:
	xor	eax, eax
$L242426:
	mov	ecx, eax
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	mov	esi, eax

; 1935 : 
; 1936 : 			// Game aborted - reload current campaign
; 1937 : 			strcpy(gUI_CampaignFile,TheCampaign.SaveFile);

	mov	eax, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A+182
	mov	edx, OFFSET FLAT:?gUI_CampaignFile@@3PADA ; gUI_CampaignFile
	sub	edx, eax
$L242427:
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [eax+edx], cl
	inc	eax
	test	cl, cl
	jne	SHORT $L242427

; 1938 : 			SendMessage(hwnd,FM_SHUTDOWN_CAMPAIGN,0,0);

	push	ebp
	push	ebp
	push	1042					; 00000412H
	push	ebx
	call	DWORD PTR __imp__SendMessageA@16

; 1939 : 
; 1940 : 			// KCK: This is well and truely stupid
; 1941 : 			if (gametype == game_Campaign)

	cmp	esi, 4
	jne	SHORT $L234797

; 1942 : 			{
; 1943 : 				StartCampaignGame(1,gametype);

	push	esi
	push	1
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8

; 1944 : 			}
; 1945 : 			else if (gametype == game_TacticalEngagement)

	jmp	$L242662
$L234797:
	cmp	esi, 3
	jne	$L242662

; 1946 : 			{
; 1947 : 				tactical_restart_mission();

	call	?tactical_restart_mission@@YAXXZ	; tactical_restart_mission

; 1948 : 			}
; 1949 : 			break;

	jmp	$L242662
$L234800:

; 1950 : 		}
; 1951 : 
; 1952 : 		case FM_AUTOSAVE_CAMPAIGN:
; 1953 : 			CampaignAutoSave((FalconGameType)lParam);

	push	edi
	call	?CampaignAutoSave@@YAXW4FalconGameType@@@Z ; CampaignAutoSave
	add	esp, 4

; 1954 : 			break;

	jmp	$L242662
$L234802:

; 1955 : 
; 1956 : 		case FM_JOIN_CAMPAIGN:
; 1957 : 			if (lTestVar){

	cmp	DWORD PTR _lTestVar, ebp
	je	$L242662

; 1958 : 			   // Join a campaign here
; 1959 : 			   if (gCommsMgr)

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	cmp	ecx, ebp
	je	SHORT $L242661

; 1960 : 				   {
; 1961 : 				   FalconGameEntity	*game = (FalconGameEntity*)gCommsMgr->GetTargetGame();

	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	esi, eax

; 1962 : 				   if (!game || (VuGameEntity*)game == vuPlayerPoolGroup)

	cmp	esi, ebp
	je	SHORT $L234809
	cmp	esi, DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A ; vuPlayerPoolGroup
	je	SHORT $L234809

; 1967 : 					   }
; 1968 : 
; 1969 : 
; 1970 : 				   // wParam determines phase of loading we'd like to perform:
; 1971 : 				   switch (wParam)

	mov	eax, DWORD PTR _wParam$[esp+296]
	dec	eax
	je	SHORT $L234815
	dec	eax
	je	SHORT $L234817
	dec	eax
	jne	SHORT $L242661

; 1981 : 					   case JOIN_CAMP_DATA_ONLY:		// Request only non-preload data (Called by Campaign only)
; 1982 : 						   MonoPrint("Requesting campaign data.\n");

	push	OFFSET FLAT:??_C@_0BL@NIMMODLI@Requesting?5campaign?5data?4?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 1983 : 						   retval = TheCampaign.JoinCampaign((FalconGameType)lParam, game);

	push	esi
	push	edi
	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?JoinCampaign@CampaignClass@@QAEHW4FalconGameType@@PAVFalconGameEntity@@@Z ; CampaignClass::JoinCampaign
$L242665:

; 1984 : 						   break;
; 1985 : 					   }
; 1986 : 				   }
; 1987 : 			   if (!retval)

	cmp	eax, ebp
	mov	DWORD PTR _retval$[esp+300], eax
	jne	$L242662
$L242661:

; 1988 : 				   PostMessage(FalconDisplay.appWin,FM_JOIN_FAILED,0,0);

	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ebp
	push	ebp
	push	1041					; 00000411H
	push	ecx
	call	DWORD PTR __imp__PostMessageA@16

; 1989 : 			}
; 1990 : 		break;

	jmp	$L242662
$L234817:

; 1977 : 					   case JOIN_REQUEST_ALL_DATA:		// Request all game data
; 1978 : 						   MonoPrint("Requesting all campaign data.\n");

	push	OFFSET FLAT:??_C@_0BP@GEFDLDAC@Requesting?5all?5campaign?5data?4?6?$AA@
$L242664:
	call	_MonoPrint
	add	esp, 4

; 1979 : 						   retval = TheCampaign.RequestScenarioStats(game);

	push	esi
	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?RequestScenarioStats@CampaignClass@@QAEHPAVFalconGameEntity@@@Z ; CampaignClass::RequestScenarioStats

; 1980 : 						   break;

	jmp	SHORT $L242665
$L234815:

; 1972 : 					   {
; 1973 : 					   case JOIN_PRELOAD_ONLY:			// Preload only
; 1974 : 						   MonoPrint("Requesting campaign preload.\n");

	push	OFFSET FLAT:??_C@_0BO@BAJMPCDG@Requesting?5campaign?5preload?4?6?$AA@

; 1975 : 						   retval = TheCampaign.RequestScenarioStats(game);
; 1976 : 						   break;

	jmp	SHORT $L242664
$L234809:

; 1963 : 					   {
; 1964 : 					   MonoPrint("Campaign Join Error: Not a valid game.\n");

	push	OFFSET FLAT:??_C@_0CI@PPEJILHM@Campaign?5Join?5Error?3?5Not?5a?5valid@
	call	_MonoPrint

; 1965 : 					   PostMessage(FalconDisplay.appWin,FM_JOIN_FAILED,0,0);

	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	add	esp, 4
	push	ebp
	push	ebp
	push	1041					; 00000411H
	push	eax
	call	DWORD PTR __imp__PostMessageA@16

; 1966 : 					   return 0;

	xor	eax, eax
	jmp	$L234740
$L234823:

; 1991 : 
; 1992 : 		case FM_JOIN_SUCCEEDED:
; 1993 : 			MonoPrint("Starting %s game.\n",(wParam)? "remote":"local");

	cmp	DWORD PTR _wParam$[esp+296], ebp
	mov	eax, OFFSET FLAT:??_C@_06IMIHEKN@remote?$AA@
	jne	SHORT $L242429
	mov	eax, OFFSET FLAT:??_C@_05IDKHKMLA@local?$AA@
$L242429:
	push	eax
	push	OFFSET FLAT:??_C@_0BD@IHLFPBJB@Starting?5?$CFs?5game?4?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 1994 : 			CampaignJoinSuccess();

	call	?CampaignJoinSuccess@@YAXXZ		; CampaignJoinSuccess

; 1995 : 			if (!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	jne	$L242662

; 1996 : 				SendMessage(hwnd,FM_START_UI,0,0);

	push	ebp
	push	ebp
	push	1027					; 00000403H
	push	ebx
	call	DWORD PTR __imp__SendMessageA@16

; 1997 : 		break;

	jmp	$L242662
$L234828:

; 1998 : 
; 1999 : 		case FM_JOIN_FAILED:
; 2000 : 			// Theoretically, the error code should be in wParam
; 2001 : 			// PETER TODO: Pop up a dialog explaining reason for failure
; 2002 : 			MonoPrint("Failed to join game.\n");

	push	OFFSET FLAT:??_C@_0BG@NHCAEOMH@Failed?5to?5join?5game?4?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2003 : 			CampaignJoinFail();

	call	?CampaignJoinFail@@YAXXZ		; CampaignJoinFail

; 2004 : 		break;

	jmp	$L242662
$L234838:

; 2026 : 
; 2027 : 		case FM_SHUTDOWN_CAMPAIGN:
; 2028 : 			// Remove any connection callbacks we might have had running
; 2029 : 			ShutdownCampaign();

	call	?ShutdownCampaign@@YAXXZ		; ShutdownCampaign

; 2030 : 			break;

	jmp	$L242662
$L234852:

; 2094 : 
; 2095 : 		case FM_GOT_CAMPAIGN_DATA:
; 2096 : 			switch(wParam)

	mov	eax, DWORD PTR _wParam$[esp+296]
	cmp	eax, 16777216				; 01000000H
	ja	$L242466
	je	$L234857
	cmp	eax, 4194304				; 00400000H
	ja	$L242467
	je	$L234873
	cmp	eax, 1048576				; 00100000H
	je	$L234863
	cmp	eax, 2097152				; 00200000H
	jne	$L242662

; 2119 : 				case CAMP_NEED_WEATHER:
; 2120 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242440
	xor	eax, eax
	jmp	SHORT $L242441
$L242440:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242441:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2121 : 						break;
; 2122 : 					gCampJoinLastData=vuxRealTime;

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2123 : 					MonoPrint("Got weather.\n");

	push	OFFSET FLAT:??_C@_0O@DIBLHBFE@Got?5weather?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, edx	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2124 : 					gCampJoinTries = 0;
; 2125 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2126 : 					DisplayJoinStatusWindow (wParam);

	push	2097152					; 00200000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2127 : 					break;

	jmp	$L242662
$L234863:

; 2110 : 				case CAMP_NEED_ENTITIES:
; 2111 : 					if(!FalconLocalGame || vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242436
	xor	eax, eax
	jmp	SHORT $L242437
$L242436:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242437:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2112 : 						break;
; 2113 : 					gCampJoinLastData=vuxRealTime;

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2114 : 					MonoPrint("Got Entities.\n");

	push	OFFSET FLAT:??_C@_0P@BMIBAIOI@Got?5Entities?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, eax	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2115 : 					gCampJoinTries = 0;
; 2116 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2117 : 					DisplayJoinStatusWindow (wParam);

	push	1048576					; 00100000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2118 : 					break;

	jmp	$L242662
$L234873:

; 2128 : 
; 2129 : 				case CAMP_NEED_PERSIST:
; 2130 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242444
	xor	eax, eax
	jmp	SHORT $L242445
$L242444:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242445:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2131 : 						break;
; 2132 : 					gCampJoinLastData=vuxRealTime;

	mov	ecx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2133 : 					MonoPrint("Got persistant lists.\n");

	push	OFFSET FLAT:??_C@_0BH@MAEHGNGC@Got?5persistant?5lists?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, ecx	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2134 : 					gCampJoinTries = 0;
; 2135 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2136 : 					DisplayJoinStatusWindow (wParam);

	push	4194304					; 00400000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2137 : 					break;

	jmp	$L242662
$L242467:

; 2094 : 
; 2095 : 		case FM_GOT_CAMPAIGN_DATA:
; 2096 : 			switch(wParam)

	cmp	eax, 8388608				; 00800000H
	jne	$L242662

; 2138 : 				case CAMP_NEED_OBJ_DELTAS:
; 2139 : 					if( !FalconLocalGame || vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242448
	xor	eax, eax
	jmp	SHORT $L242449
$L242448:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242449:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2140 : 						break;
; 2141 : 					gCampJoinLastData=vuxRealTime;

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2142 : 					gCampJoinTries = 0;
; 2143 : 					MonoPrint("Got objective data.\n");

	push	OFFSET FLAT:??_C@_0BF@MKNDGGEP@Got?5objective?5data?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, edx	; gCampJoinLastData
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	_MonoPrint
	add	esp, 4

; 2144 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2145 : 					DisplayJoinStatusWindow (wParam);

	push	8388608					; 00800000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2146 : 					break;

	jmp	$L242662
$L234857:

; 2097 : 				{
; 2098 : 				// KCK: This is the data we just got - In case Peter wants to check off the
; 2099 : 				// data in some sort of "Getting campaign data" dialog or otherwise do something
; 2100 : 				// with it.
; 2101 : 				case CAMP_NEED_PRELOAD:
; 2102 : 					MonoPrint("Got Scenario Stats.\n");

	push	OFFSET FLAT:??_C@_0BF@KMCPKFBA@Got?5Scenario?5Stats?4?6?$AA@
	call	_MonoPrint

; 2103 : 					gCampJoinTries = 0;
; 2104 : 					if(FalconLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	add	esp, 4
	cmp	ecx, ebp
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	je	SHORT $L234860
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	SHORT $L234860

; 2105 : 						CampaignPreloadSuccess(!FalconLocalGame->IsLocal());

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	SHORT $L242432
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	jmp	SHORT $L242433
$L242432:
	xor	eax, eax
$L242433:
	mov	ecx, eax
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	neg	al
	sbb	eax, eax
	inc	eax
	push	eax
	call	?CampaignPreloadSuccess@@YAXH@Z		; CampaignPreloadSuccess
	add	esp, 4
$L234860:

; 2106 : 					if (gMainHandler) // Removed GameType check - RH

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	SHORT $L234862

; 2107 : 						RecieveScenarioInfo();

	call	?RecieveScenarioInfo@@YAXXZ		; RecieveScenarioInfo
$L234862:

; 2108 : 					SetCursor(gCursors[CRSR_F16]);

	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A+4
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 2109 : 					break;

	jmp	$L242662
$L242466:

; 2094 : 
; 2095 : 		case FM_GOT_CAMPAIGN_DATA:
; 2096 : 			switch(wParam)

	cmp	eax, 134217728				; 08000000H
	ja	$L242468
	je	$L234893
	cmp	eax, 33554432				; 02000000H
	je	$L234883
	cmp	eax, 67108864				; 04000000H
	jne	$L242662

; 2156 : 				case CAMP_NEED_UNIT_DATA:
; 2157 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242456
	xor	eax, eax
	jmp	SHORT $L242457
$L242456:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242457:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2158 : 						break;
; 2159 : 					gCampJoinLastData=vuxRealTime;

	mov	ecx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2160 : 					MonoPrint("Got unit data.\n");

	push	OFFSET FLAT:??_C@_0BA@KKONDOBP@Got?5unit?5data?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, ecx	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2161 : 					gCampJoinTries = 0;
; 2162 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2163 : 					DisplayJoinStatusWindow (wParam);

	push	67108864				; 04000000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2164 : 					break;

	jmp	$L242662
$L234883:

; 2147 : 				case CAMP_NEED_TEAM_DATA:
; 2148 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242452
	xor	eax, eax
	jmp	SHORT $L242453
$L242452:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242453:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2149 : 						break;
; 2150 : 					gCampJoinLastData=vuxRealTime;

	mov	edx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2151 : 					gCampJoinTries = 0;
; 2152 : 					MonoPrint("Got team data.\n");

	push	OFFSET FLAT:??_C@_0BA@BNNEBOK@Got?5team?5data?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, edx	; gCampJoinLastData
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	_MonoPrint
	add	esp, 4

; 2153 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2154 : 					DisplayJoinStatusWindow (wParam);

	push	33554432				; 02000000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2155 : 					break;

	jmp	$L242662
$L234893:

; 2165 : 				case CAMP_NEED_VC:
; 2166 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242460
	xor	eax, eax
	jmp	SHORT $L242461
$L242460:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242461:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2167 : 						break;
; 2168 : 					gCampJoinLastData=vuxRealTime;

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2169 : 					MonoPrint("Got VC data.\n");

	push	OFFSET FLAT:??_C@_0O@NDKFKLKF@Got?5VC?5data?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, eax	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2170 : 					gCampJoinTries = 0;
; 2171 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2172 : 					DisplayJoinStatusWindow (wParam);

	push	134217728				; 08000000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2173 : 					break;

	jmp	$L242662
$L242468:

; 2094 : 
; 2095 : 		case FM_GOT_CAMPAIGN_DATA:
; 2096 : 			switch(wParam)

	cmp	eax, 268435456				; 10000000H
	jne	$L242662

; 2174 : 				case CAMP_NEED_PRIORITIES:
; 2175 : 					if( !FalconLocalGame ||  vuPlayerPoolGroup == vuLocalGame)

	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	je	$L242662
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, ebp
	je	$L242662
	mov	ecx, DWORD PTR ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	cmp	ecx, ebp
	jne	SHORT $L242464
	xor	eax, eax
	jmp	SHORT $L242465
$L242464:
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
$L242465:
	cmp	DWORD PTR ?vuPlayerPoolGroup@@3PAVVuGameEntity@@A, eax ; vuPlayerPoolGroup
	je	$L242662

; 2176 : 						break;
; 2177 : 					gCampJoinLastData=vuxRealTime;

	mov	ecx, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime

; 2178 : 					MonoPrint("Got Priorities data.\n");

	push	OFFSET FLAT:??_C@_0BG@NEHNADBL@Got?5Priorities?5data?4?6?$AA@
	mov	DWORD PTR ?gCampJoinLastData@@3KA, ecx	; gCampJoinLastData
	call	_MonoPrint
	add	esp, 4

; 2179 : 					gCampJoinTries = 0;
; 2180 : 					TheCampaign.GotJoinData();

	mov	ecx, OFFSET FLAT:?TheCampaign@@3VCampaignClass@@A
	mov	BYTE PTR ?gCampJoinTries@@3EA, 0	; gCampJoinTries
	call	?GotJoinData@CampaignClass@@QAEXXZ	; CampaignClass::GotJoinData

; 2181 : 					DisplayJoinStatusWindow (wParam);

	push	268435456				; 10000000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 2182 : 					break;
; 2183 : 				}
; 2184 : 			break;

	jmp	$L242662
$L234903:

; 2185 : 
; 2186 : 		// =========================================================
; 2187 : 		// KCK: Campaign triggered events
; 2188 : 		// =========================================================
; 2189 : 
; 2190 : 		case FM_CAMPAIGN_OVER:
; 2191 : 			// This is called when the campaign is over (endgame triggered)
; 2192 : 			// wParam is the win result (win/lose/draw)
; 2193 : 			// lParam is TRUE if this is our first attempt at calling this
; 2194 : 			if (lParam)

	cmp	edi, ebp
	mov	ebx, DWORD PTR _wParam$[esp+296]
	je	SHORT $L234904

; 2195 : 				LogBook.FinishCampaign(static_cast<short>(wParam));

	push	ebx
	mov	ecx, OFFSET FLAT:?LogBook@@3VLogBookData@@A
	call	?FinishCampaign@LogBookData@@QAEXF@Z	; LogBookData::FinishCampaign
$L234904:

; 2196 : 			// KCK: If UI is running, pause the Campaign
; 2197 : 			if (gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	SHORT $L234906

; 2198 : 				SetTimeCompression(0);

	push	ebp
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4
$L234906:

; 2199 : 			TheCampaign.EndgameResult = static_cast<uchar>(wParam);

	mov	BYTE PTR ?TheCampaign@@3VCampaignClass@@A+93, bl

; 2200 : 			// KCK: We should make sure the fly button and time compression check 
; 2201 : 			// "TheCampaign.EndgameResult". If it's non zero, the player shouldn't be
; 2202 : 			// able to perform these actions.
; 2203 : 			break;

	jmp	$L242662
$L234918:

; 2219 : 
; 2220 : 		case FM_CAMPAIGN_EVENT:
; 2221 : 			// Currently unused
; 2222 : 			break;
; 2223 : 
; 2224 : 		case FM_ATTACK_WARNING:
; 2225 : 			// Basically let the UI know to let the player know we're about to be attacked
; 2226 : 			// and what interceptors to take (if any)
; 2227 : 			UIScramblePlayerFlight();

	call	?UIScramblePlayerFlight@@YAXXZ		; UIScramblePlayerFlight

; 2228 : 			break;

	jmp	$L242662
$L234919:

; 2229 : 
; 2230 : 		case FM_AIRBASE_ATTACK:
; 2231 : 			CampEventSoundID = 500005;

	mov	DWORD PTR ?CampEventSoundID@@3JA, 500005 ; CampEventSoundID, 0007a125H

; 2232 : 			break;

	jmp	$L242662
$L234920:

; 2233 : 
; 2234 : 		case FM_AIRBASE_DISABLED:
; 2235 : 			// NOTE: this will be accompanied by a squadron rebase/recall.
; 2236 : 			UI_HandleAirbaseDestroyed();

	call	?UI_HandleAirbaseDestroyed@@YAXXZ	; UI_HandleAirbaseDestroyed

; 2237 : 			break;

	jmp	$L242662
$L242469:

; 1753 : #endif
; 1754 : 
; 1755 : #ifdef DEBUG
; 1756 : 	//static int in = 0;
; 1757 : 	//static UINT lastFive[5];
; 1758 : 	//gDispatchThreadID = (HANDLE)GetCurrentThreadId();
; 1759 : 	//for (int i=0; i<4; i++)
; 1760 : 	//	lastFive[i] = lastFive[i+1];
; 1761 : 	//if (campCritical && campCritical->owningThread == (HANDLE)GetCurrentThreadId() && campCritical->count)
; 1762 : 	//	MonoPrint("We got game.\n");
; 1763 : 	//lastFive[4] = message;
; 1764 : 	//in ++;
; 1765 : #endif
; 1766 : 
; 1767 : 	switch (message)

	lea	eax, DWORD PTR [esi-1048]
	cmp	eax, 29					; 0000001dH
	ja	$L234952
	jmp	DWORD PTR $L242669[eax*4]
$L234758:

; 1801 : 
; 1802 : 		case FM_STP_START_RENDER:
; 1803 : 			//this allows the UI to refresh the controls BEFORE it enters this function
; 1804 : 			Sleep(100);

	push	100					; 00000064H
	call	DWORD PTR __imp__Sleep@4

; 1805 : 			STPRender((C_Base *)lParam);

	push	edi
	call	?STPRender@@YAXPAVC_Base@@@Z		; STPRender
	add	esp, 4

; 1806 : 			break;

	jmp	$L242662
$L234768:

; 1847 : 
; 1848 : 		case FM_UI_UPDATE_GAMELIST: // I Use this to update my trees which display who is playing
; 1849 : 			UI_UpdateGameList();

	call	?UI_UpdateGameList@@YAXXZ		; UI_UpdateGameList

; 1850 : 			break;

	jmp	$L242662
$L234769:

; 1851 : 
; 1852 : 		case FM_REFRESH_DOGFIGHT:
; 1853 : 			CopyDFSettingsToWindow();

	call	?CopyDFSettingsToWindow@@YAXXZ		; CopyDFSettingsToWindow

; 1854 : 			break;

	jmp	$L242662
$L234770:

; 1855 : 
; 1856 : 		case FM_REFRESH_TACTICAL:
; 1857 : 			if (gMainHandler != NULL)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662

; 1858 : 			{
; 1859 : 				UpdateMissionWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 1860 : 				CheckCampaignFlyButton();

	call	?CheckCampaignFlyButton@@YAXXZ		; CheckCampaignFlyButton

; 1861 : 			}
; 1862 : 			break;

	jmp	$L242662
$L234772:

; 1863 : 
; 1864 : 		case FM_REFRESH_CAMPAIGN:
; 1865 : 			if (gMainHandler != NULL)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662

; 1866 : 			{
; 1867 : 				UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 1868 : 				CheckCampaignFlyButton();

	call	?CheckCampaignFlyButton@@YAXXZ		; CheckCampaignFlyButton

; 1869 : 			}
; 1870 : 			break;

	jmp	$L242662
$L234774:

; 1871 : 
; 1872 : 		case FM_TIMER_UPDATE:
; 1873 : 			if(gMainHandler != NULL)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662

; 1874 : 			{
; 1875 : 				if(InTimer)

	cmp	DWORD PTR ?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA, ebp
	jne	$L242662

; 1876 : 					break;
; 1877 : 				InTimer=1;

	mov	DWORD PTR ?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA, 1

; 1878 : 				PlayThatFunkyMusicWhiteBoy();

	call	?PlayThatFunkyMusicWhiteBoy@@YAXXZ	; PlayThatFunkyMusicWhiteBoy

; 1879 : 				UI_UpdateVU();

	call	?UI_UpdateVU@@YAXXZ			; UI_UpdateVU

; 1880 : 				if(gCommsMgr)

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, ebp ; gCommsMgr
	je	SHORT $L234777

; 1881 : 					RebuildGameTree();

	call	?RebuildGameTree@@YAXXZ			; RebuildGameTree
$L234777:

; 1882 : 				gMainHandler->ProcessUserCallbacks();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ProcessUserCallbacks@C_Handler@@QAEXXZ	; C_Handler::ProcessUserCallbacks

; 1883 : 				InTimer=0;

	mov	DWORD PTR ?InTimer@?1??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4HA, ebp

; 1884 : 			}
; 1885 : 			break;

	jmp	$L242662
$L234778:

; 1886 : 
; 1887 : 		case FM_BOOT_PLAYER:
; 1888 : 			switch(wParam)

	mov	eax, DWORD PTR _wParam$[esp+296]
	sub	eax, 2
	jne	$L242662

; 1889 : 			{
; 1890 : 				case game_Dogfight:
; 1891 : 					LeaveDogfight();

	call	?LeaveDogfight@@YAXXZ			; LeaveDogfight

; 1892 : 					break;
; 1893 : 			}
; 1894 : 			break;

	jmp	$L242662
$L234830:

; 2005 : 
; 2006 : 		case FM_GAME_FULL:
; 2007 : 			MonoPrint ("Game Is Full\n");

	push	OFFSET FLAT:??_C@_0O@LMMEICJG@Game?5Is?5Full?6?$AA@
	call	_MonoPrint

; 2008 : 			DisplayJoinStatusWindow (CAMP_GAME_FULL);

	push	65536					; 00010000H
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 8

; 2009 : 			CampaignJoinFail ();

	call	?CampaignJoinFail@@YAXXZ		; CampaignJoinFail

; 2010 : 		break;

	jmp	$L242662
$L234832:

; 2011 : 
; 2012 : 		case FM_MATCH_IN_PROGRESS:
; 2013 : 			MonoPrint ("Match Play game in progress\n");

	push	OFFSET FLAT:??_C@_0BN@FAGEFFEP@Match?5Play?5game?5in?5progress?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2014 : 			GameHasStarted();

	call	?GameHasStarted@@YAXXZ			; GameHasStarted

; 2015 : 			CampaignJoinFail ();

	call	?CampaignJoinFail@@YAXXZ		; CampaignJoinFail

; 2016 : 		break;

	jmp	$L242662
$L234834:

; 2017 : 
; 2018 : 		case FM_ONLINE_STATUS:
; 2019 : 			if(!doUI)

	cmp	DWORD PTR ?doUI@@3HA, ebp		; doUI
	je	$L242662

; 2020 : 				break;
; 2021 : 			if(!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662

; 2022 : 				break;
; 2023 : 
; 2024 : 			UI_CommsErrorMessage(static_cast<WORD>(wParam));

	mov	edx, DWORD PTR _wParam$[esp+296]
	push	edx
	call	?UI_CommsErrorMessage@@YAXG@Z		; UI_CommsErrorMessage
	add	esp, 4

; 2025 : 			break;

	jmp	$L242662
$L234908:

; 2204 : 
; 2205 : 		case FM_OPEN_GAME_OVER_WIN:
; 2206 : 			switch(wParam)

	cmp	DWORD PTR _wParam$[esp+296], 3
	jne	$L242662

; 2207 : 			{
; 2208 : 				case game_InstantAction:
; 2209 : 					break;
; 2210 : 				case game_Dogfight:
; 2211 : 					break;
; 2212 : 				case game_Campaign:
; 2213 : 					break;
; 2214 : 				case game_TacticalEngagement:
; 2215 : 					OpenTEGameOverWindow();

	call	?OpenTEGameOverWindow@@YAXXZ		; OpenTEGameOverWindow

; 2216 : 					break;
; 2217 : 			}
; 2218 : 			break;

	jmp	$L242662
$L234921:

; 2238 : 
; 2239 : 		case FM_SQUADRON_RECALLED:
; 2240 : 			MonoPrint("Player squadron recalled!\n");

	push	OFFSET FLAT:??_C@_0BL@CHDHKBAC@Player?5squadron?5recalled?$CB?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 2241 : 			break;

	jmp	$L242662
$L234923:

; 2242 : 
; 2243 : 		case FM_SQUADRON_REBASED:
; 2244 : 			RelocateSquadron();

	call	?RelocateSquadron@@YAXXZ		; RelocateSquadron

; 2245 : 			break;

	jmp	$L242662
$L234924:

; 2246 : 
; 2247 : 		case FM_REFRESH_CAMPMAP:
; 2248 : 			UI_UpdateOccupationMap();

	call	?UI_UpdateOccupationMap@@YAXXZ		; UI_UpdateOccupationMap

; 2249 : 			break;

	jmp	$L242662
$L234925:

; 2250 : 
; 2251 : 		case FM_REBUILD_WP_LIST:
; 2252 : 			RebuildCurrentWPList();

	call	?RebuildCurrentWPList@@YAXXZ		; RebuildCurrentWPList

; 2253 : 			break;

	jmp	$L242662
$L234926:

; 2254 : 
; 2255 : 		case FM_PLAYER_FLIGHT_CANCELED:
; 2256 : 			UI_HandleFlightCancel();

	call	?UI_HandleFlightCancel@@YAXXZ		; UI_HandleFlightCancel

; 2257 : 			break;

	jmp	$L242662
$L234927:

; 2258 : 
; 2259 : 		case FM_PLAYER_AIRCRAFT_DESTROYED:
; 2260 : 			// PETER TODO: 
; 2261 : 			// Post message saying player aircraft destroyed 
; 2262 : 			// (while waiting for takeoff) and go back to mission screen
; 2263 : 			UI_HandleAircraftDestroyed();

	call	?UI_HandleAircraftDestroyed@@YAXXZ	; UI_HandleAircraftDestroyed

; 2264 : 			break;

	jmp	$L242662
$L234928:

; 2265 : 
; 2266 : 		case FM_RECEIVE_CHAT:
; 2267 : 			ProcessChatStr((CHATSTR*)lParam);

	push	edi
	call	?ProcessChatStr@@YAXPAVCHATSTR@@@Z	; ProcessChatStr
	add	esp, 4

; 2268 : 			break;

	jmp	$L242662
$L234930:

; 2269 : 
; 2270 : 
; 2271 : 		case FM_PLAY_UI_MOVIE:
; 2272 : 			if(gMainHandler && ReadyToPlayMovie)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, ebp	; ReadyToPlayMovie
	je	$L242662

; 2273 : 				PlayUIMovieQ();

	call	?PlayUIMovieQ@@YAXXZ			; PlayUIMovieQ

; 2274 : 			break;

	jmp	$L242662
$L234932:

; 2275 : 
; 2276 : 		case FM_REPLAY_UI_MOVIE:
; 2277 : 			if(gMainHandler && ReadyToPlayMovie)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, ebp	; ReadyToPlayMovie
	je	$L242662

; 2278 : 				ReplayUIMovie(lParam);

	push	edi
	call	?ReplayUIMovie@@YAXJ@Z			; ReplayUIMovie
	add	esp, 4

; 2279 : 			break;

	jmp	$L242662
$L234934:

; 2280 : 
; 2281 : 		case FM_REMOTE_LOGBOOK:
; 2282 : 			if(gMainHandler && gCommsMgr)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, ebp ; gMainHandler
	je	$L242662
	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, ebp ; gCommsMgr
	je	$L242662

; 2283 : 				ViewRemoteLogbook(lParam);

	push	edi
	call	?ViewRemoteLogbook@@YAXJ@Z		; ViewRemoteLogbook
	add	esp, 4

; 2284 : 			break;

	jmp	$L242662
$L234936:

; 2285 : 
; 2286 : 		case FM_PLAY_INTRO_MOVIE:
; 2287 : 			FalconDisplay.EnterMode(FalconDisplayConfiguration::Movie);

	push	ebp
	push	ebp
	push	ebp
	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?EnterMode@FalconDisplayConfiguration@@QAEXW4DisplayMode@1@HH@Z ; FalconDisplayConfiguration::EnterMode

; 2288 : 			SetFocus(hwnd);

	push	ebx
	call	DWORD PTR __imp__SetFocus@4

; 2289 : 
; 2290 : 			// RV - Biker - Add theater switching for into movie
; 2291 : 			char tmpPath[MAX_PATH];
; 2292 : 			sprintf(tmpPath, "%s\\intro.avi", FalconMovieDirectory);

	push	OFFSET FLAT:?FalconMovieDirectory@@3PADA ; FalconMovieDirectory
	lea	eax, DWORD PTR _tmpPath$234937[esp+304]
	push	OFFSET FLAT:??_C@_0N@HFJOAOBI@?$CFs?2intro?4avi?$AA@
	push	eax
	call	_sprintf

; 2293 : 			PlayMovie(tmpPath, -1, -1, 0, 0, FalconDisplay.GetImageBuffer()->frontSurface());

	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+160
	push	ecx
	push	ebp
	push	ebp
	push	-1
	lea	edx, DWORD PTR _tmpPath$234937[esp+328]
	push	-1
	push	edx
	call	?PlayMovie@@YAXPADHHHHPAX@Z		; PlayMovie
	add	esp, 36					; 00000024H

; 2294 : 			FalconDisplay.LeaveMode();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?LeaveMode@FalconDisplayConfiguration@@QAEXXZ ; FalconDisplayConfiguration::LeaveMode

; 2295 : 			break;

	jmp	$L242662
$L234941:

; 2305 : 
; 2306 : 		case FM_GIVE_FOCUS:
; 2307 : 			SetActiveWindow(FalconDisplay.appWin);

	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	eax
	call	DWORD PTR __imp__SetActiveWindow@4

; 2308 : 			SetFocus(FalconDisplay.appWin);

	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	ecx
	call	DWORD PTR __imp__SetFocus@4

; 2309 : 			break;

	jmp	$L242662
$L234944:

; 2310 : 
; 2311 : 		case WM_DESTROY :                    
; 2312 : 			break;
; 2313 : 
; 2314 : 		case WM_USER:
; 2315 : 			break;
; 2316 : 
; 2317 : 
; 2318 : 		// OW
; 2319 : 		case FM_DISP_ENTER_MODE:
; 2320 : 		{
; 2321 : 			FalconDisplay._EnterMode((FalconDisplayConfiguration::DisplayMode) wParam, LOWORD(lParam), HIWORD(lParam));

	mov	ecx, DWORD PTR _wParam$[esp+296]
	mov	edx, edi
	shr	edx, 16					; 00000010H
	movzx	eax, di
	push	edx
	push	eax
	push	ecx
	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_EnterMode@FalconDisplayConfiguration@@IAEXW4DisplayMode@1@HH@Z ; FalconDisplayConfiguration::_EnterMode

; 2322 : 			break;

	jmp	SHORT $L242662
$L234950:

; 2323 : 		}
; 2324 : 
; 2325 : 		case FM_DISP_LEAVE_MODE:
; 2326 : 		{
; 2327 : 			FalconDisplay._LeaveMode();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_LeaveMode@FalconDisplayConfiguration@@IAEXXZ ; FalconDisplayConfiguration::_LeaveMode

; 2328 : 			break;

	jmp	SHORT $L242662
$L234951:

; 2329 : 		}
; 2330 : 
; 2331 : 		case FM_DISP_TOGGLE_FULLSCREEN:
; 2332 : 		{
; 2333 : 			FalconDisplay._ToggleFullScreen();

	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?_ToggleFullScreen@FalconDisplayConfiguration@@IAEXXZ ; FalconDisplayConfiguration::_ToggleFullScreen

; 2334 : 			break;

	jmp	SHORT $L242662
$L234954:

; 2345 : 					retval=0;

	mov	DWORD PTR _retval$[esp+300], 0

; 2346 : 				}
; 2347 : 			}
; 2348 : 			else{

	jmp	SHORT $L242662
$L234953:

; 2349 : 				// sfr: touchbhuddy support
; 2350 : 				// we let the message pass through to be processed by other handlers
; 2351 : 				static bool mouseIn = false;
; 2352 : 				switch (message){

	cmp	esi, 512				; 00000200H
	je	SHORT $L234964
	cmp	esi, 675				; 000002a3H
	jne	SHORT $L234965

; 2353 : 					// indicates mouse inside area falcon window area
; 2354 : 					case WM_MOUSELEAVE:
; 2355 : 					{
; 2356 : 						mouseIn = false;

	mov	BYTE PTR ?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA, 0

; 2357 : 						SimMouseStopProcessing();

	call	?SimMouseStopProcessing@@YAXXZ		; SimMouseStopProcessing

; 2358 : 					}
; 2359 : 					break;

	jmp	SHORT $L234965
$L234964:

; 2360 : 					case WM_MOUSEMOVE:
; 2361 : 					{
; 2362 : 						// we want to be notified when mouse leaves again
; 2363 : 						if (!mouseIn){

	mov	al, BYTE PTR ?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA
	test	al, al
	jne	SHORT $L234965

; 2364 : 							// sfr: track mouseleave
; 2365 : 							TRACKMOUSEEVENT tme;
; 2366 : 							tme.cbSize = sizeof(tme);
; 2367 : 							tme.dwFlags = TME_LEAVE;
; 2368 : 							tme.hwndTrack = hwnd;
; 2369 : 							//TrackMouseEvent(&tme);
; 2370 : 							// mouse cursor position
; 2371 : 							SimMouseResumeProcessing(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam));

	mov	edx, edi
	shr	edx, 16					; 00000010H
	movsx	eax, dx
	movsx	ecx, di
	push	eax
	push	ecx
	call	?SimMouseResumeProcessing@@YAXHH@Z	; SimMouseResumeProcessing
	add	esp, 8

; 2372 : 							mouseIn = true;

	mov	BYTE PTR ?mouseIn@?IK@??FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z@4_NA, 1
$L234965:

; 2373 : 						}
; 2374 : 					}
; 2375 : 					break;
; 2376 : 				}
; 2377 : 				// process event
; 2378 : 				retval = DefWindowProc (hwnd, message, wParam, lParam);

	mov	edx, DWORD PTR _wParam$[esp+296]
	push	edi
	push	edx
$L242666:
	push	esi
	push	ebx
	call	DWORD PTR __imp__DefWindowProcA@16
	mov	DWORD PTR _retval$[esp+300], eax
$L242662:

; 2379 : 			}
; 2380 : 		}
; 2381 : 		// end default
; 2382 : 		break;
; 2383 : 	}
; 2384 : 
; 2385 : 
; 2386 : 	// Looking for multiplayer stomp...
; 2387 : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 2388 : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 2389 : 
; 2390 : 
; 2391 : #ifndef DAVE_DBG
; 2392 : //#ifdef DEBUG
; 2393 : //	if (campCritical) 
; 2394 : //	{
; 2395 : //		if ((campCritical->owningThread == (HANDLE)GetCurrentThreadId()) && (campCritical->count) && (in == 1))
; 2396 : //		{
; 2397 : //			// OW
; 2398 : //			// *((unsigned int *) 0x00) = 0;
; 2399 : //
; 2400 : //		//	MonoPrint ("FATAL - Campaign Critical Section Still Held - Place a BREAKPOINT here - Msg %08x %d - Robin\n", GetCurrentThreadId (), campCritical->count);
; 2401 : //		}
; 2402 : //	}
; 2403 : //	if (vuCritical) 
; 2404 : //	{
; 2405 : //		if ((vuCritical->owningThread == (HANDLE)GetCurrentThreadId()) && (vuCritical->count) && (in == 1))
; 2406 : //		{
; 2407 : //			// OW
; 2408 : //			// *((unsigned int *) 0x00) = 0;
; 2409 : //
; 2410 : //			/*MonoPrint ("FATAL - Vu Critical Section Still Held - Place a BREAKPOINT here - Msg %08x %d - Robin\n", GetCurrentThreadId (), vuCritical->count);*/
; 2411 : //		}
; 2412 : //	}
; 2413 : //
; 2414 : //	in --;
; 2415 : //#endif
; 2416 : #endif
; 2417 : 
; 2418 : 
; 2419 : 	// Looking for multiplayer stomp...
; 2420 : 	ShiAssert( TeamInfo[1]==NULL || TeamInfo[1]->cteam != 0xFC );
; 2421 : 	ShiAssert( TeamInfo[2]==NULL || TeamInfo[2]->cteam != 0xFC );
; 2422 : 
; 2423 : 
; 2424 : 	return retval;

	mov	eax, DWORD PTR _retval$[esp+300]
$L234740:

; 2425 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+300]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	ret	16					; 00000010H
	npad	1
$L242667:
	DD	$L234939
	DD	$L234764
	DD	$L234767
	DD	$L234839
	DD	$L242662
	DD	$L234849
$L242668:
	DD	$L234849
	DD	$L234785
	DD	$L234802
	DD	$L234794
	DD	$L234800
	DD	$L234852
	DD	$L234823
	DD	$L234828
	DD	$L234838
	DD	$L234903
	DD	$L242662
	DD	$L234918
	DD	$L234919
$L242669:
	DD	$L234921
	DD	$L234923
	DD	$L234926
	DD	$L234927
	DD	$L234936
	DD	$L234930
	DD	$L234774
	DD	$L234768
	DD	$L234758
	DD	$L234952
	DD	$L242662
	DD	$L242662
	DD	$L234941
	DD	$L234834
	DD	$L234778
	DD	$L234769
	DD	$L234770
	DD	$L234772
	DD	$L234925
	DD	$L234924
	DD	$L234932
	DD	$L234934
	DD	$L234908
	DD	$L234830
	DD	$L234928
	DD	$L234832
	DD	$L234952
	DD	$L234944
	DD	$L234950
	DD	$L234951
?FalconMessageHandler@@YGJPAUHWND__@@IIJ@Z ENDP		; FalconMessageHandler
_TEXT	ENDS
PUBLIC	??0CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::CAtlWinModule
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::CAtlWinModule, COMDAT
; _this$ = ecx

; 2573 : 	CAtlWinModule()

	push	esi
	mov	esi, ecx
	xor	eax, eax
	lea	ecx, DWORD PTR [esi+4]
	mov	edx, ecx
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], eax
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR [edx+20], eax
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi

; 2574 : 	{
; 2575 : 		cbSize = sizeof(_ATL_WIN_MODULE);

	mov	DWORD PTR [esi], 44			; 0000002cH

; 2576 : 		HRESULT hr = AtlWinModuleInit(this);

	mov	DWORD PTR [esi+28], edi
	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init

; 2577 : 		if (FAILED(hr))

	cmp	eax, edi

; 2579 : 	}

	mov	eax, esi
	jge	SHORT $L68444

; 2578 : 			CAtlBaseModule::m_bInitFailed = true;

	mov	BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed
$L68444:
	pop	edi
	pop	esi

; 2579 : 	}

	ret	0
??0CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
PUBLIC	??1CAtlWinModule@ATL@@QAE@XZ			; ATL::CAtlWinModule::~CAtlWinModule
; Function compile flags: /Ogtpy
;	COMDAT ??1CAtlWinModule@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CAtlWinModule@ATL@@QAE@XZ PROC NEAR			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT
; _this$ = ecx

; 2583 : 		Term();

	mov	eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	esi
	push	edi
	mov	esi, ecx
	push	eax
	push	esi
	call	?AtlWinModuleTerm@ATL@@YGJPAU_ATL_WIN_MODULE70@1@PAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2584 : 	}

	mov	eax, DWORD PTR [esi+32]
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $L242745
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+32], edi
$L242745:
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	pop	edi
	pop	esi
	ret	0
??1CAtlWinModule@ATL@@QAE@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
PUBLIC	?Release@Data_t@_bstr_t@@QAEKXZ			; _bstr_t::Data_t::Release
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
;	COMDAT ?Release@Data_t@_bstr_t@@QAEKXZ
_TEXT	SEGMENT
?Release@Data_t@_bstr_t@@QAEKXZ PROC NEAR		; _bstr_t::Data_t::Release, COMDAT
; _this$ = ecx

; 679  : {

	push	esi
	push	edi
	mov	esi, ecx

; 680  :     if (!InterlockedDecrement(reinterpret_cast<long*>(&m_RefCount))) {

	lea	edi, DWORD PTR [esi+8]
	push	edi
	call	DWORD PTR __imp__InterlockedDecrement@4
	test	eax, eax
	jne	SHORT $L76708

; 681  :         delete this;

	test	esi, esi
	je	SHORT $L242751
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L242774
	push	eax
	call	DWORD PTR __imp__SysFreeString@4
$L242774:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L242775
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$L242775:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L242751:
	pop	edi

; 682  :         return 0;

	xor	eax, eax
	pop	esi

; 686  : }

	ret	0
$L76708:

; 683  :     }
; 684  : 
; 685  :     return m_RefCount;

	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi

; 686  : }

	ret	0
?Release@Data_t@_bstr_t@@QAEKXZ ENDP			; _bstr_t::Data_t::Release
_TEXT	ENDS
PUBLIC	?_Free@_bstr_t@@AAEXXZ				; _bstr_t::_Free
; Function compile flags: /Ogtpy
;	COMDAT ?_Free@_bstr_t@@AAEXXZ
_TEXT	SEGMENT
?_Free@_bstr_t@@AAEXXZ PROC NEAR			; _bstr_t::_Free, COMDAT
; _this$ = ecx

; 568  : {

	push	esi
	mov	esi, ecx

; 569  :     if (m_Data != NULL) {

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $L76654

; 570  :         m_Data->Release();

	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release

; 571  :         m_Data = NULL;

	mov	DWORD PTR [esi], 0
$L76654:
	pop	esi

; 572  :     }
; 573  : }

	ret	0
?_Free@_bstr_t@@AAEXXZ ENDP				; _bstr_t::_Free
_TEXT	ENDS
PUBLIC	??1_bstr_t@@QAE@XZ				; _bstr_t::~_bstr_t
; Function compile flags: /Ogtpy
;	COMDAT ??1_bstr_t@@QAE@XZ
_TEXT	SEGMENT
??1_bstr_t@@QAE@XZ PROC NEAR				; _bstr_t::~_bstr_t, COMDAT
; _this$ = ecx

; 281  : {

	push	esi
	mov	esi, ecx

; 282  :     _Free();

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $L242788
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
	mov	DWORD PTR [esi], 0
$L242788:
	pop	esi

; 283  : }

	ret	0
??1_bstr_t@@QAE@XZ ENDP					; _bstr_t::~_bstr_t
_TEXT	ENDS
PUBLIC	?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutMasterServerName
;	COMDAT xdata$x
xdata$x	SEGMENT
$T242818 DD	0ffffffffH
	DD	FLAT:$L242792
$T242816 DD	019930520H
	DD	01H
	DD	FLAT:$T242818
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutMasterServerName, COMDAT
; _this$ = ecx

; 669  : inline void IUplink::PutMasterServerName ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 670  :     HRESULT _hr = put_MasterServerName(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242800
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242801
$L242800:
	xor	eax, eax
$L242801:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+24]

; 671  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232151
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232151:

; 672  : }

	test	edi, edi
	je	SHORT $L242813
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242813:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242792:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242816
	jmp	___CxxFrameHandler
text$x	ENDS
?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IUplink::PutMasterServerName
PUBLIC	?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerName
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242850 DD	0ffffffffH
	DD	FLAT:$L242824
$T242848 DD	019930520H
	DD	01H
	DD	FLAT:$T242850
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutServerName, COMDAT
; _this$ = ecx

; 705  : inline void IUplink::PutServerName ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 706  :     HRESULT _hr = put_ServerName(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242832
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242833
$L242832:
	xor	eax, eax
$L242833:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+48]

; 707  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232197
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232197:

; 708  : }

	test	edi, edi
	je	SHORT $L242845
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242845:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242824:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242848
	jmp	___CxxFrameHandler
text$x	ENDS
?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IUplink::PutServerName
PUBLIC	?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerLocation
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242882 DD	0ffffffffH
	DD	FLAT:$L242856
$T242880 DD	019930520H
	DD	01H
	DD	FLAT:$T242882
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutServerLocation, COMDAT
; _this$ = ecx

; 717  : inline void IUplink::PutServerLocation ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 718  :     HRESULT _hr = put_ServerLocation(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242864
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242865
$L242864:
	xor	eax, eax
$L242865:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+56]

; 719  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232213
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232213:

; 720  : }

	test	edi, edi
	je	SHORT $L242877
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242877:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242856:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242880
	jmp	___CxxFrameHandler
text$x	ENDS
?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IUplink::PutServerLocation
PUBLIC	?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerVersion
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242914 DD	0ffffffffH
	DD	FLAT:$L242888
$T242912 DD	019930520H
	DD	01H
	DD	FLAT:$T242914
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutServerVersion, COMDAT
; _this$ = ecx

; 729  : inline void IUplink::PutServerVersion ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 730  :     HRESULT _hr = put_ServerVersion(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242896
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242897
$L242896:
	xor	eax, eax
$L242897:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+64]

; 731  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232229
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232229:

; 732  : }

	test	edi, edi
	je	SHORT $L242909
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242909:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242888:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242912
	jmp	___CxxFrameHandler
text$x	ENDS
?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IUplink::PutServerVersion
PUBLIC	?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutGameName
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242946 DD	0ffffffffH
	DD	FLAT:$L242920
$T242944 DD	019930520H
	DD	01H
	DD	FLAT:$T242946
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutGameName, COMDAT
; _this$ = ecx

; 765  : inline void IUplink::PutGameName ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 766  :     HRESULT _hr = put_GameName(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242928
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242929
$L242928:
	xor	eax, eax
$L242929:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+88]

; 767  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232273
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232273:

; 768  : }

	test	edi, edi
	je	SHORT $L242941
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242941:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242920:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242944
	jmp	___CxxFrameHandler
text$x	ENDS
?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP	; GNETCORELib::IUplink::PutGameName
PUBLIC	?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutGameMode
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T242978 DD	0ffffffffH
	DD	FLAT:$L242952
$T242976 DD	019930520H
	DD	01H
	DD	FLAT:$T242978
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutGameMode, COMDAT
; _this$ = ecx

; 789  : inline void IUplink::PutGameMode ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 790  :     HRESULT _hr = put_GameMode(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242960
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242961
$L242960:
	xor	eax, eax
$L242961:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+104]

; 791  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232303
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232303:

; 792  : }

	test	edi, edi
	je	SHORT $L242973
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L242973:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242952:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T242976
	jmp	___CxxFrameHandler
text$x	ENDS
?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP	; GNETCORELib::IUplink::PutGameMode
PUBLIC	?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerVersionMin
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comutil.h
xdata$x	SEGMENT
$T243010 DD	0ffffffffH
	DD	FLAT:$L242984
$T243008 DD	019930520H
	DD	01H
	DD	FLAT:$T243010
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\build\release_win32\core.tli
xdata$x	ENDS
;	COMDAT ?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pVal$ = 8						; size = 4
?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z PROC NEAR ; GNETCORELib::IUplink::PutServerVersionMin, COMDAT
; _this$ = ecx

; 801  : inline void IUplink::PutServerVersionMin ( _bstr_t pVal ) {

	mov	eax, DWORD PTR fs:__except_list
	push	-1
	push	__ehhandler$?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	esi
	push	edi
	mov	esi, ecx

; 802  :     HRESULT _hr = put_ServerVersionMin(pVal);

	mov	edi, DWORD PTR _pVal$[esp+16]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	je	SHORT $L242992
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $L242993
$L242992:
	xor	eax, eax
$L242993:
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	esi
	call	DWORD PTR [ecx+112]

; 803  :     if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));

	test	eax, eax
	jge	SHORT $L232319
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	esi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L232319:

; 804  : }

	test	edi, edi
	je	SHORT $L243005
	mov	ecx, edi
	call	?Release@Data_t@_bstr_t@@QAEKXZ		; _bstr_t::Data_t::Release
$L243005:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:__except_list, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L242984:
	lea	ecx, DWORD PTR _pVal$[ebp-4]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
__ehhandler$?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z:
	mov	eax, OFFSET FLAT:$T243008
	jmp	___CxxFrameHandler
text$x	ENDS
?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ENDP ; GNETCORELib::IUplink::PutServerVersionMin
PUBLIC	??_R0?AV_com_error@@@8				; _com_error `RTTI Type Descriptor'
PUBLIC	?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z	; HandleWinMain
PUBLIC	??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@ ; `string'
PUBLIC	??_C@_0DN@LDDOKEGO@HandleWinMain?3?5Error?50x?$CFX?5occure@ ; `string'
PUBLIC	??_C@_0O@PDMLIFGH@GNGameSpy?4dll?$AA@		; `string'
PUBLIC	??_C@_0N@CLMAFLMP@GNCorePS?4dll?$AA@		; `string'
PUBLIC	??_C@_0N@GHPNHPBL@GNShared?4dll?$AA@		; `string'
PUBLIC	??_C@_0M@HKFGEHJL@openplaying?$AA@		; `string'
PUBLIC	??_C@_0EA@DECDCGCI@HandleWinMain?3?5Error?50x?$CFX?5occure@ ; `string'
PUBLIC	??_C@_0O@HAIHPOAG@JustForGilman?$AA@		; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0CG@ILCLOB@Falcon?54?40?5?9?5Version?5?$CF1d?4?$CF02d?4?$CF1@ ; `string'
PUBLIC	??_C@_0N@GHDLAJMH@Release?5Mode?$AA@		; `string'
PUBLIC	??_C@_06KCIFIIHN@?$CFs?3?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@	; `string'
PUBLIC	??_C@_0BE@LBCKFMNB@?$CFs?2terrdata?2misctex?$AA@ ; `string'
PUBLIC	??_C@_0M@ONEBAAFD@?$CFs?2Pictures?$AA@		; `string'
PUBLIC	??_C@_0BH@EGKPCFAN@?$CFs?2terrain?2theater?4map?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0P@ONFAGCKK@?$CFs?2falcon4?4ini?$AA@	; `string'
PUBLIC	??_C@_09KHBCPIND@?$CFs?2Config?$AA@		; `string'
PUBLIC	??_C@_06LAMNFEIL@?$CFs?2Art?$AA@		; `string'
PUBLIC	??_C@_09KADMDAPI@?$CFs?2?$CFs?4ini?$AA@		; `string'
PUBLIC	??_C@_02HOGEDOAB@Id?$AA@			; `string'
PUBLIC	??_C@_04EPLBDGIG@Lang?$AA@			; `string'
PUBLIC	??_C@_07GCCODDFC@display?$AA@			; `string'
EXTRN	?FalconMiscTexDataDir@@3PADA:BYTE		; FalconMiscTexDataDir
EXTRN	?FalconCampaignSaveDirectory@@3PADA:BYTE	; FalconCampaignSaveDirectory
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?LoadVoices@VoiceMapper@@QAEXXZ:NEAR		; VoiceMapper::LoadVoices
EXTRN	_ResInit:NEAR
EXTRN	?g_voicemap@@3VVoiceMapper@@A:QWORD		; g_voicemap
EXTRN	_strncmp:NEAR
EXTRN	__chdir:NEAR
EXTRN	__mkdir:NEAR
EXTRN	_ResCreatePath:NEAR
EXTRN	_has3DNow:NEAR
EXTRN	__imp__AllocConsole@0:NEAR
EXTRN	__imp__GetPrivateProfileIntA@16:NEAR
EXTRN	?Setup@FalconDisplayConfiguration@@QAEXH@Z:NEAR	; FalconDisplayConfiguration::Setup
EXTRN	?FileVerify@@YAHXZ:NEAR				; FileVerify
EXTRN	__imp__SetCurrentDirectoryA@4:NEAR
EXTRN	__open_osfhandle:NEAR
EXTRN	?FalconPictureDirectory@@3PADA:BYTE		; FalconPictureDirectory
EXTRN	??0WeatherClass@@QAE@XZ:NEAR			; WeatherClass::WeatherClass
EXTRN	?UI_LoadSkyWeatherData@@YAXXZ:NEAR		; UI_LoadSkyWeatherData
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?ReadFalcon4Config@@YAXXZ:NEAR			; ReadFalcon4Config
EXTRN	?SaveSFXTable@@YAHXZ:NEAR			; SaveSFXTable
EXTRN	?WriteMissionData@@YAHXZ:NEAR			; WriteMissionData
EXTRN	?LoadOptions@DisplayOptionsClass@@QAEHPAD@Z:NEAR ; DisplayOptionsClass::LoadOptions
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?EnableOpenTest@@YAXXZ:NEAR			; EnableOpenTest
EXTRN	?DisableOpenTest@@YAXXZ:NEAR			; DisableOpenTest
EXTRN	?FILE_Open@@YAPAU_iobuf@@PAD0@Z:NEAR		; FILE_Open
EXTRN	__imp__CoInitialize@4:NEAR
EXTRN	__imp__CoUninitialize@0:NEAR
EXTRN	__iob:BYTE
EXTRN	?InitSoundManager@@YAHPAUHWND__@@HPAD@Z:NEAR	; InitSoundManager
EXTRN	_fclose:NEAR
EXTRN	__fdopen:NEAR
EXTRN	_printf:NEAR
EXTRN	_setvbuf:NEAR
EXTRN	_InitWS2:NEAR
EXTRN	?g_bEnableUplink@@3_NA:BYTE			; g_bEnableUplink
EXTRN	?g_strMasterServerName@@3PADA:BYTE		; g_strMasterServerName
EXTRN	?g_nMasterServerPort@@3HA:DWORD			; g_nMasterServerPort
EXTRN	?g_strServerName@@3PADA:BYTE			; g_strServerName
EXTRN	?g_strServerLocation@@3PADA:BYTE		; g_strServerLocation
EXTRN	__imp__ExitProcess@4:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\include\comip.h
xdata$x	SEGMENT
$T243136 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L243034
	DD	00H
	DD	FLAT:$L243035
	DD	00H
	DD	FLAT:$L243036
	DD	00H
	DD	FLAT:$L243037
	DD	00H
	DD	FLAT:$L243038
	DD	00H
	DD	FLAT:$L243039
	DD	00H
	DD	FLAT:$L243040
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:$L243042
$T243138 DD	00H
	DD	FLAT:??_R0?AV_com_error@@@8
	DD	0fffffc28H
	DD	FLAT:$L243033
$T243137 DD	00H
	DD	07H
	DD	08H
	DD	01H
	DD	FLAT:$T243138
$T243120 DD	019930520H
	DD	0aH
	DD	FLAT:$T243136
	DD	01H
	DD	FLAT:$T243137
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@
CONST	SEGMENT
??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@ DB '%1d.%02d.%1d.'
	DB	'%5d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LDDOKEGO@HandleWinMain?3?5Error?50x?$CFX?5occure@
CONST	SEGMENT
??_C@_0DN@LDDOKEGO@HandleWinMain?3?5Error?50x?$CFX?5occure@ DB 'HandleWin'
	DB	'Main: Error 0x%X occured during COM initialization!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PDMLIFGH@GNGameSpy?4dll?$AA@
CONST	SEGMENT
??_C@_0O@PDMLIFGH@GNGameSpy?4dll?$AA@ DB 'GNGameSpy.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CLMAFLMP@GNCorePS?4dll?$AA@
CONST	SEGMENT
??_C@_0N@CLMAFLMP@GNCorePS?4dll?$AA@ DB 'GNCorePS.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHPNHPBL@GNShared?4dll?$AA@
CONST	SEGMENT
??_C@_0N@GHPNHPBL@GNShared?4dll?$AA@ DB 'GNShared.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKFGEHJL@openplaying?$AA@
CONST	SEGMENT
??_C@_0M@HKFGEHJL@openplaying?$AA@ DB 'openplaying', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DECDCGCI@HandleWinMain?3?5Error?50x?$CFX?5occure@
CONST	SEGMENT
??_C@_0EA@DECDCGCI@HandleWinMain?3?5Error?50x?$CFX?5occure@ DB 'HandleWin'
	DB	'Main: Error 0x%X occured during JetNet initialization!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HAIHPOAG@JustForGilman?$AA@
CONST	SEGMENT
??_C@_0O@HAIHPOAG@JustForGilman?$AA@ DB 'JustForGilman', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ILCLOB@Falcon?54?40?5?9?5Version?5?$CF1d?4?$CF02d?4?$CF1@
CONST	SEGMENT
??_C@_0CG@ILCLOB@Falcon?54?40?5?9?5Version?5?$CF1d?4?$CF02d?4?$CF1@ DB 'F'
	DB	'alcon 4.0 - Version %1d.%02d.%1d.%5d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@
CONST	SEGMENT
??_C@_0N@GHDLAJMH@Release?5Mode?$AA@ DB 'Release Mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCIFIIHN@?$CFs?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_06KCIFIIHN@?$CFs?3?$CFs?6?$AA@ DB '%s:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@
CONST	SEGMENT
??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@ DB '%s\Campaign\Save', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LBCKFMNB@?$CFs?2terrdata?2misctex?$AA@
CONST	SEGMENT
??_C@_0BE@LBCKFMNB@?$CFs?2terrdata?2misctex?$AA@ DB '%s\terrdata\misctex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ONEBAAFD@?$CFs?2Pictures?$AA@
CONST	SEGMENT
??_C@_0M@ONEBAAFD@?$CFs?2Pictures?$AA@ DB '%s\Pictures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EGKPCFAN@?$CFs?2terrain?2theater?4map?$AA@
CONST	SEGMENT
??_C@_0BH@EGKPCFAN@?$CFs?2terrain?2theater?4map?$AA@ DB '%s\terrain\theat'
	DB	'er.map', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ONFAGCKK@?$CFs?2falcon4?4ini?$AA@
CONST	SEGMENT
??_C@_0P@ONFAGCKK@?$CFs?2falcon4?4ini?$AA@ DB '%s\falcon4.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KHBCPIND@?$CFs?2Config?$AA@
CONST	SEGMENT
??_C@_09KHBCPIND@?$CFs?2Config?$AA@ DB '%s\Config', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LAMNFEIL@?$CFs?2Art?$AA@
CONST	SEGMENT
??_C@_06LAMNFEIL@?$CFs?2Art?$AA@ DB '%s\Art', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KADMDAPI@?$CFs?2?$CFs?4ini?$AA@
CONST	SEGMENT
??_C@_09KADMDAPI@?$CFs?2?$CFs?4ini?$AA@ DB '%s\%s.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HOGEDOAB@Id?$AA@
CONST	SEGMENT
??_C@_02HOGEDOAB@Id?$AA@ DB 'Id', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EPLBDGIG@Lang?$AA@
CONST	SEGMENT
??_C@_04EPLBDGIG@Lang?$AA@ DB 'Lang', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCCODDFC@display?$AA@
CONST	SEGMENT
??_C@_07GCCODDFC@display?$AA@ DB 'display', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0?AV_com_error@@@8
_DATA	SEGMENT
??_R0?AV_com_error@@@8 DD FLAT:??_7type_info@@6B@	; _com_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_com_error@@', 00H
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
_DATA	ENDS
;	COMDAT ?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z
_TEXT	SEGMENT
_msg$ = -1012						; size = 28
_e$234371 = -984					; size = 16
$T243117 = -968						; size = 4
$T243118 = -964						; size = 4
$T243116 = -960						; size = 4
$T243025 = -956						; size = 4
$T243023 = -956						; size = 4
$T243022 = -956						; size = 4
$T243021 = -956						; size = 4
$T243020 = -956						; size = 4
$T243019 = -956						; size = 4
$T243018 = -956						; size = 4
$T243017 = -956						; size = 4
_fileName$ = -952					; size = 260
_buffer$234390 = -692					; size = 260
_tmpPath$ = -432					; size = 260
_title$ = -172						; size = 60
_buf$ = -112						; size = 60
_strVersion$ = -52					; size = 32
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z PROC NEAR	; HandleWinMain, COMDAT

; 497  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1000				; 000003e8H
	mov	eax, DWORD PTR ___security_cookie

; 736  : 
; 737  : 	if (!initApplication(hInstance, hPrevInstance, nCmdShow))

	mov	ecx, DWORD PTR _lpCmdLine$[ebp]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _hInstance$[ebp]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	xor	eax, ebp
	xor	ebx, ebx
	push	ebx
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	eax, DWORD PTR _hPrevInstance$[ebp]
	push	esi
	mov	DWORD PTR $T243118[ebp], ecx
	push	OFFSET FLAT:_ObjectMap
	mov	ecx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A
	mov	DWORD PTR $T243116[ebp], esi
	mov	DWORD PTR $T243117[ebp], eax
	call	?Init@CComModule@ATL@@QAEJPAU_ATL_OBJMAP_ENTRY30@2@PAUHINSTANCE__@@PBU_GUID@@@Z ; ATL::CComModule::Init
	push	OFFSET FLAT:?wsadata@@3UWSAData@@A	; wsadata
	call	_InitWS2
	mov	edx, DWORD PTR ?BuildNumber@@3HA	; BuildNumber
	mov	eax, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	mov	ecx, DWORD PTR ?MinorVersion@@3HA	; MinorVersion
	push	edx
	mov	edx, DWORD PTR ?MajorVersion@@3HA	; MajorVersion
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR _strVersion$[ebp]
	push	OFFSET FLAT:??_C@_0BB@MDFKAALD@?$CF1d?4?$CF02d?4?$CF1d?4?$CF5d?$AA@
	push	eax
	call	_sprintf
	add	esp, 28					; 0000001cH
	call	_has3DNow
	test	eax, eax
	setne	cl
	push	ebx
	mov	BYTE PTR ?g_bHas3DNow@@3_NA, cl		; g_bHas3DNow
	call	DWORD PTR __imp__CoInitialize@4
	cmp	eax, ebx
	jge	SHORT $L234355
	push	eax
	push	OFFSET FLAT:??_C@_0DN@LDDOKEGO@HandleWinMain?3?5Error?50x?$CFX?5occure@
	call	_MonoPrint
	add	esp, 8
$L234355:
	cmp	BYTE PTR ?g_bEnableUplink@@3_NA, bl	; g_bEnableUplink
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	je	$L234358
	push	OFFSET FLAT:??_C@_0O@PDMLIFGH@GNGameSpy?4dll?$AA@
	call	?RegisterServer@ComSup@@YAJPBD@Z	; ComSup::RegisterServer
	add	esp, 4
	push	OFFSET FLAT:??_C@_0N@CLMAFLMP@GNCorePS?4dll?$AA@
	call	?RegisterServer@ComSup@@YAJPBD@Z	; ComSup::RegisterServer
	add	esp, 4
	push	OFFSET FLAT:??_C@_0N@GHPNHPBL@GNShared?4dll?$AA@
	call	?RegisterServer@ComSup@@YAJPBD@Z	; ComSup::RegisterServer
	mov	ecx, esp
	mov	DWORD PTR $T243017[ebp], esp
	push	OFFSET FLAT:?g_strMasterServerName@@3PADA ; g_strMasterServerName
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	jne	SHORT $L243046
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243046:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutMasterServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutMasterServerName
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	cmp	eax, ebx
	jne	SHORT $L243051
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
$L243051:
	mov	ecx, DWORD PTR ?g_nMasterServerPort@@3HA ; g_nMasterServerPort
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	eax
	mov	edi, eax
	call	DWORD PTR [edx+32]
	cmp	eax, ebx
	jge	SHORT $L243056
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	edi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L243056:
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	cmp	eax, ebx
	jne	SHORT $L243062
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
$L243062:
	mov	edx, DWORD PTR [eax]
	push	7778					; 00001e62H
	push	eax
	mov	edi, eax
	call	DWORD PTR [edx+80]
	cmp	eax, ebx
	jge	SHORT $L243067
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	edi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L243067:
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	cmp	eax, ebx
	jne	SHORT $L243072
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
$L243072:
	mov	ecx, DWORD PTR [eax]
	push	60000					; 0000ea60H
	push	eax
	mov	edi, eax
	call	DWORD PTR [ecx+16]
	cmp	eax, ebx
	jge	SHORT $L243077
	push	OFFSET FLAT:__GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513
	push	edi
	push	eax
	call	?_com_issue_errorex@@YGXJPAUIUnknown@@ABU_GUID@@@Z ; _com_issue_errorex
$L243077:
	push	ecx
	lea	edx, DWORD PTR _strVersion$[ebp]
	mov	ecx, esp
	mov	DWORD PTR $T243018[ebp], esp
	push	edx
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	jne	SHORT $L243082
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243082:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutServerVersion@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerVersion
	push	ecx
	lea	eax, DWORD PTR _strVersion$[ebp]
	mov	ecx, esp
	mov	DWORD PTR $T243019[ebp], esp
	push	eax
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	jne	SHORT $L243087
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243087:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutServerVersionMin@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerVersionMin
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T243020[ebp], esp
	push	OFFSET FLAT:?g_strServerLocation@@3PADA	; g_strServerLocation
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	jne	SHORT $L243092
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243092:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutServerLocation@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerLocation
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T243021[ebp], esp
	push	OFFSET FLAT:?g_strServerName@@3PADA	; g_strServerName
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	jne	SHORT $L243097
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243097:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutServerName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutServerName
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T243022[ebp], esp
	push	OFFSET FLAT:??_C@_07GDGMJMJJ@Falcon4?$AA@
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	jne	SHORT $L243102
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243102:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutGameName@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutGameName
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T243023[ebp], esp
	push	OFFSET FLAT:??_C@_0M@HKFGEHJL@openplaying?$AA@
	call	??0_bstr_t@@QAE@PBD@Z			; _bstr_t::_bstr_t
	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	jne	SHORT $L243107
	push	-2147467261				; 80004003H
	call	?_com_issue_error@@YGXJ@Z		; _com_issue_error
$L243107:
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	ecx, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?PutGameMode@IUplink@GNETCORELib@@QAEXV_bstr_t@@@Z ; GNETCORELib::IUplink::PutGameMode
	jmp	SHORT $L234358
$L243033:

; 498  : 	char tmpPath[_MAX_PATH];
; 499  : 	MSG  msg;
; 500  : 	char buf[60],title[60];
; 501  : 	char fileName[_MAX_PATH];
; 502  : 	FILE *testopen;
; 503  : 
; 504  : 	#ifdef _DEBUG
; 505  : //	_CrtSetBreakAlloc(739752);
; 506  : 	// JPO in Debug - set up to check lots of memory
; 507  : 	_CrtSetDbgFlag(_CRTDBG_LEAK_CHECK_DF| // Check for memory leaks
; 508  : 	    _CRTDBG_ALLOC_MEM_DF| // debug heap allocations
; 509  : 	    // _CRTDBG_DELAY_FREE_MEM_DF| // Check for use of free memory - expensive
; 510  : 	    0 // just so it looks nice.
; 511  : 	    );
; 512  : 	#endif
; 513  : 
; 514  :     //_Module.Init(ObjectMap, hInstance, &LIBID_SIMPLECLIENTLib);
; 515  :     _Module.Init(ObjectMap, hInstance);
; 516  :     // _Module.dwThreadID = GetCurrentThreadId();
; 517  : 
; 518  : 	InitWS2(&wsadata);	// OW init Winsock now, we need it for GNet
; 519  : 
; 520  : 	char strVersion[0x20];
; 521  : 	sprintf(strVersion,"%1d.%02d.%1d.%5d",MajorVersion, MinorVersion, gLangIDNum, BuildNumber);
; 522  : 
; 523  : 	// OW
; 524  : 	g_bHas3DNow = has3DNow() ? true : false;		// detect 3dnow support
; 525  : 
; 526  : 	#ifdef _DEBUG
; 527  : 	if(g_bHas3DNow)
; 528  : 		MonoPrint("3DNow detected\n");
; 529  : 	#endif
; 530  : 
; 531  : //	ReadFalcon4Config();	// OW: read config file  // Cobra - moved further down
; 532  : 
; 533  : 	HRESULT hr = CoInitialize(NULL);
; 534  : 	if(FAILED(hr))
; 535  : 		MonoPrint("HandleWinMain: Error 0x%X occured during COM initialization!", hr);
; 536  : 
; 537  : 	// Begin - Uplink stuff
; 538  : 	try
; 539  : 	{
; 540  : 		if(g_bEnableUplink)
; 541  : 		{
; 542  : 			// Make sure all objects are registered
; 543  : 			ComSup::RegisterServer("GNGameSpy.dll");
; 544  : 			ComSup::RegisterServer("GNCorePS.dll");
; 545  : 			ComSup::RegisterServer("GNShared.dll");
; 546  : 
; 547  : 			// Create Uplink service object
; 548  : 	/*		CheckHR(m_pUplink.CreateInstance(__uuidof(GameSpyUplink)));*/
; 549  : 
; 550  : 			m_pUplink->PutMasterServerName(g_strMasterServerName);
; 551  : 			m_pUplink->PutMasterServerPort(g_nMasterServerPort);
; 552  : 			m_pUplink->PutQueryPort(7778);
; 553  : 			m_pUplink->PutHeartbeatInterval(60000);
; 554  : 			m_pUplink->PutServerVersion(strVersion);
; 555  : 			m_pUplink->PutServerVersionMin(strVersion);
; 556  : 			m_pUplink->PutServerLocation(g_strServerLocation);
; 557  : 			m_pUplink->PutServerName(g_strServerName);
; 558  : 			m_pUplink->PutGameName("Falcon4");
; 559  : 			m_pUplink->PutGameMode("openplaying");
; 560  : 		}
; 561  : 	}
; 562  : 
; 563  : 	catch(_com_error e)
; 564  : 	{
; 565  : 		MonoPrint("HandleWinMain: Error 0x%X occured during JetNet initialization!", e.Error());

	mov	ecx, DWORD PTR _e$234371[ebp+4]
	push	ecx
	push	OFFSET FLAT:??_C@_0EA@DECDCGCI@HandleWinMain?3?5Error?50x?$CFX?5occure@
	call	_MonoPrint
	add	esp, 8

; 566  : 	}

	lea	ecx, DWORD PTR _e$234371[ebp]
	call	??1_com_error@@UAE@XZ			; _com_error::~_com_error
	mov	eax, $L243126
	ret	0
$L243126:
	mov	esi, DWORD PTR $T243116[ebp]
	xor	ebx, ebx
$L234358:

; 567  : 	// End - Uplink stuff
; 568  : 
; 569  : 	/*
; 570  : 	* set up data associated with this window
; 571  : 	*/
; 572  : 	
; 573  : #ifdef USE_SMART_HEAP
; 574  : 	MemRegisterTask();
; 575  : #endif
; 576  : 
; 577  : #ifdef _MSC_VER
; 578  : 	// Set the FPU to Truncate
; 579  : 	_controlfp(_RC_CHOP,MCW_RC);

	push	768					; 00000300H
	or	edi, -1
	push	768					; 00000300H
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	call	__controlfp

; 580  : 	
; 581  : 	// Set the FPU to 24bit precision
; 582  : 	_controlfp(_PC_24,MCW_PC);

	push	196608					; 00030000H
	push	131072					; 00020000H
	call	__controlfp

; 583  : #endif
; 584  : 
; 585  : /* OW	
; 586  : 	// Kus Kludge...
; 587  : 	
; 588  : 	HINSTANCE	gr3dfx, mprp2, mprd3d, gen;
; 589  : 	
; 590  : 	gr3dfx = LoadLibrary( "gr3dfx.mpr" );
; 591  : 	gen = LoadLibrary( "gen.mpr" );
; 592  : 	mprd3d = LoadLibrary( "mprd3d.mpr" );
; 593  : 	mprp2 = LoadLibrary( "mprp2.mpr" );
; 594  : */
; 595  : 	
; 596  : 	hInst = hInstance;
; 597  : //!	int Done=0;
; 598  : 	
; 599  : 
; 600  : 	ParseCommandLine (lpCmdLine);

	mov	edx, DWORD PTR $T243118[ebp]
	push	edx
	mov	DWORD PTR ?hInst@@3PAUHINSTANCE__@@A, esi ; hInst
	call	?ParseCommandLine@@YAXPAD@Z		; ParseCommandLine

; 601  : 	
; 602  : 	ReadFalcon4Config();	// OW: read config file

	call	?ReadFalcon4Config@@YAXXZ		; ReadFalcon4Config

; 603  : 
; 604  : 	lTestVar = !strncmp (lTestVarString, "JustForGilman", 13);

	push	13					; 0000000dH
	push	OFFSET FLAT:??_C@_0O@HAIHPOAG@JustForGilman?$AA@
	push	OFFSET FLAT:?lTestVarString@@3PADA	; lTestVarString
	call	_strncmp
	add	esp, 32					; 00000020H
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR _lTestVar, eax

; 605  : 	// PW Kludge
; 606  : 	if(VersionInfo)

	cmp	DWORD PTR ?VersionInfo@@3HA, ebx	; VersionInfo
	je	$L234374

; 607  : 	{
; 608  : 		int hCrt;
; 609  : 		FILE *hf;
; 610  : 		
; 611  : 		// Hack to make printf work
; 612  : 		AllocConsole();

	call	DWORD PTR __imp__AllocConsole@0

; 613  : 		hCrt = _open_osfhandle(
; 614  : 			(long) GetStdHandle(STD_OUTPUT_HANDLE),
; 615  : 			_O_TEXT
; 616  : 			);

	push	16384					; 00004000H
	push	-11					; fffffff5H
	call	DWORD PTR __imp__GetStdHandle@4
	push	eax
	call	__open_osfhandle

; 617  : 		hf = _fdopen( hCrt, "w" );

	push	OFFSET FLAT:??_C@_01NOFIACDB@w?$AA@
	push	eax
	call	__fdopen

; 618  : 		*stdout = *hf;
; 619  : 		setvbuf( stdout, NULL, _IONBF, 0 );

	push	ebx
	push	4
	mov	esi, eax
	push	ebx
	mov	ecx, 8
	mov	edi, OFFSET FLAT:__iob+32
	push	OFFSET FLAT:__iob+32
	rep movsd
	call	_setvbuf

; 620  : 		
; 621  : 		
; 622  : 		sprintf(title,"Falcon 4.0 - Version %1d.%02d.%1d.%5d",MajorVersion,MinorVersion,gLangIDNum,BuildNumber);

	mov	eax, DWORD PTR ?BuildNumber@@3HA	; BuildNumber
	mov	ecx, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	mov	edx, DWORD PTR ?MinorVersion@@3HA	; MinorVersion
	push	eax
	mov	eax, DWORD PTR ?MajorVersion@@3HA	; MajorVersion
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR _title$[ebp]
	push	OFFSET FLAT:??_C@_0CG@ILCLOB@Falcon?54?40?5?9?5Version?5?$CF1d?4?$CF02d?4?$CF1@
	push	ecx
	call	_sprintf

; 623  : 		
; 624  : #ifdef NDEBUG
; 625  : 		strcpy(buf,"Release Mode");

	mov	eax, DWORD PTR ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@+4
	mov	ecx, DWORD PTR ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@+8
	mov	edx, DWORD PTR ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@
	mov	DWORD PTR _buf$[ebp+4], eax

; 626  : #else
; 627  : 		strcpy(buf,"Debug Mode");
; 628  : #endif // NDEBUG
; 629  : 		
; 630  : #ifdef _USE_SECRET_CODE_
; 631  : 		if(VersionData)
; 632  : 		{
; 633  : 			int i;
; 634  : 			for(i=0;i<18;i++)
; 635  : 				sprintf(&buf[i*2],"%02x\n",SecretCode[i]);
; 636  : 		}
; 637  : #endif // _USE_SECRET_CODE_
; 638  : 		printf ("%s:%s\n", title, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _buf$[ebp+8], ecx
	push	eax
	lea	ecx, DWORD PTR _title$[ebp]
	mov	DWORD PTR _buf$[ebp], edx
	mov	dl, BYTE PTR ??_C@_0N@GHDLAJMH@Release?5Mode?$AA@+12
	push	ecx
	push	OFFSET FLAT:??_C@_06KCIFIIHN@?$CFs?3?$CFs?6?$AA@
	mov	BYTE PTR _buf$[ebp+12], dl
	call	_printf
	add	esp, 68					; 00000044H
$L243135:

; 761  : 
; 762  : 	//return (msg.wParam);      // Returns value from PostQuitMessage.
; 763  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	xor	eax, eax
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$L234374:

; 639  : 		return(FALSE);
; 640  : 	}
; 641  : 
; 642  : 	realWeather = new WeatherClass();

	push	16092					; 00003edcH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T243025[ebp], eax
	cmp	eax, ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 9
	je	SHORT $L243026
	mov	ecx, eax
	call	??0WeatherClass@@QAE@XZ			; WeatherClass::WeatherClass
	jmp	SHORT $L243027
$L243026:
	xor	eax, eax
$L243027:

; 643  : 
; 644  : 	// This SHOULD NOT BE REQUIRED -- IT IS _VERY_ EASY TO BREAK CODE THAT DEPENDS ON THIS
; 645  : 	// I'd like to make it go away soon....
; 646  : 	SetCurrentDirectory(FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	mov	DWORD PTR ?realWeather@@3PAVRealWeather@@A, eax ; realWeather
	call	DWORD PTR __imp__SetCurrentDirectoryA@4

; 647  : 
; 648  : 	FileVerify();

	call	?FileVerify@@YAHXZ			; FileVerify

; 649  : 	
; 650  : 	sprintf (FalconCampaignSaveDirectory, "%s\\Campaign\\Save", FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET FLAT:??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@
	push	OFFSET FLAT:?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	call	_sprintf

; 651  : 	sprintf (FalconCampUserSaveDirectory, "%s\\Campaign\\Save", FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET FLAT:??_C@_0BB@HHGMNELH@?$CFs?2Campaign?2Save?$AA@
	push	OFFSET FLAT:?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	call	_sprintf

; 652  : 
; 653  : 	// RV - Biker - Initialize this
; 654  : 	sprintf (FalconMiscTexDataDir, "%s\\terrdata\\misctex", FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET FLAT:??_C@_0BE@LBCKFMNB@?$CFs?2terrdata?2misctex?$AA@
	push	OFFSET FLAT:?FalconMiscTexDataDir@@3PADA ; FalconMiscTexDataDir
	call	_sprintf

; 655  : 	
; 656  : 	sprintf (FalconPictureDirectory, "%s\\Pictures", FalconDataDirectory); // JB 010623

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET FLAT:??_C@_0M@ONEBAAFD@?$CFs?2Pictures?$AA@
	push	OFFSET FLAT:?FalconPictureDirectory@@3PADA ; FalconPictureDirectory
	call	_sprintf

; 657  : 
; 658  : 	// MN Create PictureDir if not present
; 659  : 	_mkdir(FalconPictureDirectory);

	push	OFFSET FLAT:?FalconPictureDirectory@@3PADA ; FalconPictureDirectory
	call	__mkdir

; 660  : 
; 661  : 	// Test for CD stuff
; 662  : 	{
; 663  : 		char buffer[MAX_PATH];
; 664  : 
; 665  : 		EnableOpenTest();

	call	?EnableOpenTest@@YAXXZ			; EnableOpenTest

; 666  : 		sprintf(buffer,"%s\\terrain\\theater.map",FalconTerrainDataDir);

	push	OFFSET FLAT:?FalconTerrainDataDir@@3PADA ; FalconTerrainDataDir
	lea	edx, DWORD PTR _buffer$234390[ebp]
	push	OFFSET FLAT:??_C@_0BH@EGKPCFAN@?$CFs?2terrain?2theater?4map?$AA@
	push	edx
	call	_sprintf
	add	esp, 64					; 00000040H

; 667  : 		testopen=FILE_Open(buffer,"r");

	lea	eax, DWORD PTR _buffer$234390[ebp]
	push	OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
	push	eax
	call	?FILE_Open@@YAPAU_iobuf@@PAD0@Z		; FILE_Open
	add	esp, 8

; 668  : 		if(!testopen)

	cmp	eax, ebx
	jne	SHORT $L234393

; 669  : 			exit(-1);

	push	edi
	call	_exit
$L243139:
$L234393:

; 670  : 		fclose(testopen);

	push	eax
	call	_fclose

; 671  : 		sprintf(buffer,"%s\\falcon4.ini",FalconObjectDataDir);

	push	OFFSET FLAT:?FalconObjectDataDir@@3PADA	; FalconObjectDataDir
	lea	ecx, DWORD PTR _buffer$234390[ebp]
	push	OFFSET FLAT:??_C@_0P@ONFAGCKK@?$CFs?2falcon4?4ini?$AA@
	push	ecx
	call	_sprintf

; 672  : 		testopen=FILE_Open(buffer,"r");

	lea	edx, DWORD PTR _buffer$234390[ebp]
	push	OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
	push	edx
	call	?FILE_Open@@YAPAU_iobuf@@PAD0@Z		; FILE_Open
	add	esp, 24					; 00000018H

; 673  : 		if(!testopen)

	cmp	eax, ebx
	jne	SHORT $L234395

; 674  : 			exit(-1);

	push	edi
	call	_exit
$L243140:
$L234395:

; 675  : 		fclose(testopen);

	push	eax
	call	_fclose

; 676  : /*		sprintf(buffer,"%s\\smoketrail.gif",FalconMiscTexDataDir);
; 677  : 		testopen=FILE_Open(buffer,"r");
; 678  : 		if(!testopen)
; 679  : 			exit(-1);
; 680  : 		fclose(testopen);
; 681  : */		DisableOpenTest();

	call	?DisableOpenTest@@YAXXZ			; DisableOpenTest

; 682  : 	}
; 683  : 
; 684  :    ResInit(NULL);

	push	ebx
	call	_ResInit

; 685  :    ResCreatePath (FalconDataDirectory, FALSE);

	push	ebx
	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	call	_ResCreatePath

; 686  :    ResAddPath (FalconCampaignSaveDirectory, FALSE);

	push	ebx
	push	OFFSET FLAT:?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	call	_ResAddPath

; 687  :    //sprintf (tmpPath, "%s\\Zips", FalconDataDirectory);
; 688  :    //ResAddPath (tmpPath, FALSE);
; 689  :    sprintf (tmpPath, "%s\\Config", FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	eax, DWORD PTR _tmpPath$[ebp]
	push	OFFSET FLAT:??_C@_09KHBCPIND@?$CFs?2Config?$AA@
	push	eax
	call	_sprintf

; 690  :    ResAddPath (tmpPath, FALSE);

	lea	ecx, DWORD PTR _tmpPath$[ebp]
	push	ebx
	push	ecx
	call	_ResAddPath

; 691  :    sprintf (tmpPath, "%s\\Art", FalconDataDirectory);	// This one can go if zips are always used

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	edx, DWORD PTR _tmpPath$[ebp]
	push	OFFSET FLAT:??_C@_06LAMNFEIL@?$CFs?2Art?$AA@
	push	edx
	call	_sprintf

; 692  :    ResAddPath (tmpPath, TRUE);

	lea	eax, DWORD PTR _tmpPath$[ebp]
	push	1
	push	eax
	call	_ResAddPath
	add	esp, 64					; 00000040H

; 693  :    sprintf (tmpPath, "%s", FalconPictureDirectory); // JB 010623

	push	OFFSET FLAT:?FalconPictureDirectory@@3PADA ; FalconPictureDirectory
	lea	ecx, DWORD PTR _tmpPath$[ebp]
	push	OFFSET FLAT:??_C@_02DKCKIIND@?$CFs?$AA@
	push	ecx
	call	_sprintf

; 694  :    ResAddPath (tmpPath, TRUE); // JB 010623

	lea	edx, DWORD PTR _tmpPath$[ebp]
	push	1
	push	edx
	call	_ResAddPath

; 695  :    // RV - Biker
; 696  :    //sprintf (tmpPath, "%s\\sim", FalconDataDirectory);	// JPO - so we can find raw sim files
; 697  :    //ResAddPath (tmpPath, TRUE);
; 698  : 
; 699  : 	// This SHOULD NOT BE REQUIRED -- IT IS _VERY_ EASY TO BREAK CODE THAT DEPENDS ON THIS
; 700  : 	// I'd like to make it go away soon....
; 701  : 	ResSetDirectory (FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	call	_ResSetDirectory

; 702  : 
; 703  : #ifdef __WATCOMC__
; 704  : 	chdir(FalconDataDirectory);
; 705  : #else
; 706  : 	_chdir(FalconDataDirectory);

	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	call	__chdir

; 707  : #endif
; 708  : 	sprintf(fileName, "%s\\%s.ini", FalconObjectDataDir, "Falcon4");

	push	OFFSET FLAT:??_C@_07GDGMJMJJ@Falcon4?$AA@
	push	OFFSET FLAT:?FalconObjectDataDir@@3PADA	; FalconObjectDataDir
	lea	eax, DWORD PTR _fileName$[ebp]
	push	OFFSET FLAT:??_C@_09KADMDAPI@?$CFs?2?$CFs?4ini?$AA@
	push	eax
	call	_sprintf
	add	esp, 44					; 0000002cH

; 709  : 
; 710  : 	gLangIDNum = GetPrivateProfileInt("Lang", "Id", 0, fileName);

	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	push	ebx
	push	OFFSET FLAT:??_C@_02HOGEDOAB@Id?$AA@
	push	OFFSET FLAT:??_C@_04EPLBDGIG@Lang?$AA@
	call	DWORD PTR __imp__GetPrivateProfileIntA@16
	mov	DWORD PTR ?gLangIDNum@@3HA, eax		; gLangIDNum

; 711  : 
; 712  : 	// Init movie player before the windows
; 713  : 	// OW now called by Device::Setup
; 714  : 	//	movieInit(2, NULL);
; 715  : 
; 716  : 	UI_LoadSkyWeatherData();

	call	?UI_LoadSkyWeatherData@@YAXXZ		; UI_LoadSkyWeatherData

; 717  : 
; 718  : 	//JAM 30Sep03
; 719  : 	DisplayOptions.LoadOptions("display");

	push	OFFSET FLAT:??_C@_07GCCODDFC@display?$AA@
	mov	ecx, OFFSET FLAT:?DisplayOptions@@3VDisplayOptionsClass@@A
	call	?LoadOptions@DisplayOptionsClass@@QAEHPAD@Z ; DisplayOptionsClass::LoadOptions

; 720  : 
; 721  : 	FalconDisplay.Setup(gLangIDNum);

	mov	edx, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	push	edx
	mov	ecx, OFFSET FLAT:?FalconDisplay@@3VFalconDisplayConfiguration@@A
	call	?Setup@FalconDisplayConfiguration@@QAEXH@Z ; FalconDisplayConfiguration::Setup

; 722  : 
; 723  : 	mainAppWnd = FalconDisplay.appWin;

	mov	eax, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	mov	DWORD PTR ?mainAppWnd@@3PAUHWND__@@A, eax ; mainAppWnd

; 724  : 
; 725  : 	if (g_writeSndTbl){

	cmp	BYTE PTR ?g_writeSndTbl@@3_NA, bl	; g_writeSndTbl
	je	SHORT $L234403

; 726  : 	    SaveSFXTable();

	call	?SaveSFXTable@@YAHXZ			; SaveSFXTable
$L234403:

; 727  : 	}
; 728  : 	if (g_writeMissionTbl){

	cmp	BYTE PTR ?g_writeMissionTbl@@3_NA, bl	; g_writeMissionTbl
	je	SHORT $L234404

; 729  : 	    WriteMissionData();

	call	?WriteMissionData@@YAHXZ		; WriteMissionData
$L234404:

; 730  : 	}
; 731  : 	if(gSoundFlags & FSND_SOUND){

	test	BYTE PTR _gSoundFlags, 1
	je	SHORT $L234405

; 732  : 		// switch for turning on/off sound stuff
; 733  : 		InitSoundManager(FalconDisplay.appWin, 0, FalconDataDirectory);

	mov	ecx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	OFFSET FLAT:?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	ebx
	push	ecx
	call	?InitSoundManager@@YAHPAUHWND__@@HPAD@Z	; InitSoundManager
	add	esp, 12					; 0000000cH
$L234405:

; 734  : 	}
; 735  : 	g_voicemap.LoadVoices();

	mov	ecx, OFFSET FLAT:?g_voicemap@@3VVoiceMapper@@A
	call	?LoadVoices@VoiceMapper@@QAEXXZ		; VoiceMapper::LoadVoices

; 736  : 
; 737  : 	if (!initApplication(hInstance, hPrevInstance, nCmdShow))

	mov	eax, DWORD PTR $T243117[ebp]
	call	?initApplication@@YAEPAUHINSTANCE__@@0H@Z ; initApplication
	test	al, al

; 738  : 		return FALSE;

	je	$L243135

; 739  : 
; 740  : 	while (GetMessage(&msg, NULL, 0, 0) != 0){

	mov	esi, DWORD PTR __imp__GetMessageA@16
	push	ebx
	push	ebx
	push	ebx
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	esi
	test	eax, eax
	je	SHORT $L234409
	mov	edi, DWORD PTR __imp__DispatchMessageA@4
	npad	5
$L234408:

; 741  : 		//if (!TranslateAccelerator (msg.hwnd, hAccel, &msg))
; 742  : 		//TranslateMessage(&msg);
; 743  : 		DispatchMessage (&msg);   // Dispatch message to window.

	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	edi
	push	ebx
	push	ebx
	push	ebx
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	esi
	test	eax, eax
	jne	SHORT $L234408
$L234409:

; 744  : 	}
; 745  : 
; 746  : 	SystemLevelExit();

	call	?SystemLevelExit@@YAXXZ			; SystemLevelExit

; 747  : 
; 748  : 	// sfr: since its initialized here, finalize here
; 749  : 	delete realWeather;

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	ecx, ebx
	je	SHORT $L243030
	mov	edx, DWORD PTR [ecx]
	push	1
	call	DWORD PTR [edx]
$L243030:

; 750  : 
; 751  :     _Module.Term();

	mov	ecx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A
	call	?Term@CComModule@ATL@@QAEXXZ		; ATL::CComModule::Term

; 752  : 
; 753  : 
; 754  : 	if(m_pUplink){

	cmp	DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A, ebx ; m_pUplink
	je	SHORT $L234412

; 755  : 		m_pUplink.Release();

	mov	ecx, OFFSET FLAT:?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	call	?Release@?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@QAEXXZ ; _com_ptr_t<_com_IIID<GNETCORELib::IUplink,&_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513> >::Release
$L234412:

; 756  : 	}
; 757  : 
; 758  : 	CoUninitialize();

	call	DWORD PTR __imp__CoUninitialize@0

; 759  : 
; 760  : 	ExitProcess (0);

	push	ebx
	call	DWORD PTR __imp__ExitProcess@4
$L243141:
$L243134:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243034:
	mov	ecx, DWORD PTR $T243017[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243035:
	mov	ecx, DWORD PTR $T243018[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243036:
	mov	ecx, DWORD PTR $T243019[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243037:
	mov	ecx, DWORD PTR $T243020[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243038:
	mov	ecx, DWORD PTR $T243021[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243039:
	mov	ecx, DWORD PTR $T243022[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243040:
	mov	ecx, DWORD PTR $T243023[ebp]
	jmp	??1_bstr_t@@QAE@XZ			; _bstr_t::~_bstr_t
$L243042:
	mov	eax, DWORD PTR $T243025[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z:
	mov	eax, OFFSET FLAT:$T243120
	jmp	___CxxFrameHandler
text$x	ENDS
?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z ENDP		; HandleWinMain
PUBLIC	_WinMain@16
PUBLIC	??_C@_0P@GAMKKCDC@WinMain?5Thread?$AA@		; `string'
EXTRN	?RecordExceptionInfo@@YAHPAU_EXCEPTION_POINTERS@@PBD@Z:NEAR ; RecordExceptionInfo
;	COMDAT CONST
CONST	SEGMENT
$T243151 DD	0ffffffffH
	DD	FLAT:$L243147
	DD	FLAT:$L243148
CONST	ENDS
;	COMDAT ??_C@_0P@GAMKKCDC@WinMain?5Thread?$AA@
CONST	SEGMENT
??_C@_0P@GAMKKCDC@WinMain?5Thread?$AA@ DB 'WinMain Thread', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_Result$ = -28						; size = 4
__$SEHRec$ = -24					; size = 24
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC NEAR					; COMDAT

; 768  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET FLAT:$T243151
	push	OFFSET FLAT:__except_handler3
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 769  : 	int Result = -1;

	or	esi, -1
	mov	DWORD PTR _Result$[ebp], esi

; 770  : 	__try {

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 771  : 		Result = HandleWinMain ( hInstance, hPrevInstance, lpCmdLine, nCmdShow);

	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpCmdLine$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hPrevInstance$[ebp]
	push	edx
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	?HandleWinMain@@YGHPAUHINSTANCE__@@0PADH@Z ; HandleWinMain
	mov	DWORD PTR _Result$[ebp], eax
	mov	DWORD PTR __$SEHRec$[ebp+20], esi
	jmp	SHORT $L243150
$L243147:
$L243154:

; 772  : 	}
; 773  : 	__except(RecordExceptionInfo(GetExceptionInformation(), "WinMain Thread"))

	push	OFFSET FLAT:??_C@_0P@GAMKKCDC@WinMain?5Thread?$AA@
	mov	ecx, DWORD PTR __$SEHRec$[ebp+4]
	push	ecx
	call	?RecordExceptionInfo@@YAHPAU_EXCEPTION_POINTERS@@PBD@Z ; RecordExceptionInfo
	add	esp, 8
$L243153:
$L243149:
	ret	0
$L243148:
	mov	esp, DWORD PTR __$SEHRec$[ebp]
	mov	DWORD PTR __$SEHRec$[ebp+20], -1
$L243150:

; 774  : 	{
; 775  : 		// Do nothing here - RecordExceptionInfo() has already done
; 776  : 		// everything that is needed. Actually this code won't even
; 777  : 		// get called unless you return EXCEPTION_EXECUTE_HANDLER from
; 778  : 		// the __except clause.
; 779  : 	}
; 780  : 	return Result;

	mov	eax, DWORD PTR _Result$[ebp]

; 781  : }

	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
PUBLIC	?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceS
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_lpszRes$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CComModule::UpdateRegistryFromResourceS, COMDAT

; 4134 : #ifdef _ATL_STATIC_REGISTRY
; 4135 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceS(lpszRes, bRegister, pMapEntries);

	jmp	?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceS
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceS
_TEXT	ENDS
PUBLIC	??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@ ; `string'
PUBLIC	??1CRegObject@ATL@@UAE@XZ			; ATL::CRegObject::~CRegObject
PUBLIC	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z	; ATL::CRegObject::AddReplacement
PUBLIC	?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z	; ATL::CRegObject::ResourceRegisterSz
PUBLIC	?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z ; ATL::CRegObject::ResourceUnregisterSz
PUBLIC	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
PUBLIC	??0CRegObject@ATL@@QAE@XZ			; ATL::CRegObject::CRegObject
PUBLIC	?AtlHresultFromLastError@ATL@@YAJXZ		; ATL::AtlHresultFromLastError
EXTRN	__imp__GetModuleFileNameA@12:NEAR
EXTRN	__imp__GetModuleHandleA@4:NEAR
EXTRN	_malloc:NEAR
EXTRN	__imp__MultiByteToWideChar@24:NEAR
EXTRN	__alloca_probe:NEAR
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	__imp__lstrlenW@4:NEAR
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@ DB 'M', 00H, 'o'
	DB	00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@ DB 'M'
	DB	00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	'R', 00H, 'a', 00H, 'w', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@ DB 'R'
	DB	00H, 'E', 00H, 'G', 00H, 'I', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'Y', 00H, 00H, 00H				; `string'
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CONST	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_ro$ = -128						; size = 40
_hInst$ = -88						; size = 4
$T243333 = -84						; size = 4
__acp_ex$ = -80						; size = 4
tv150 = -76						; size = 4
_pszModuleUnquoted$ = -72				; size = 1040
_pszModuleQuote$71098 = 968				; size = 1048
_szModule$ = 2016					; size = 260
__$ArrayPad$ = 2276					; size = 4
__$ReturnAddr$ = 2284					; size = 4
_this$ = 2288						; size = 4
_lpszRes$ = 2292					; size = 4
_bRegister$ = 2296					; size = 4
_pMapEntries$ = 2300					; size = 4
?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CAtlModule::UpdateRegistryFromResourceS, COMDAT

; 5431 : {

	push	ebp
	lea	ebp, DWORD PTR [esp-2280]
	sub	esp, 2408				; 00000968H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	ebx
	push	esi
	mov	esi, DWORD PTR _pMapEntries$[ebp]
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5502 : 	return hr;

	mov	eax, DWORD PTR _lpszRes$[ebp]
	push	edi
	mov	edi, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR _ro$[ebp]
	mov	DWORD PTR $T243333[ebp], eax
	call	??0CRegObject@ATL@@QAE@XZ
	test	esi, esi
	je	SHORT $L71063
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L71063
$L71062:

; 5432 : 	CRegObject ro;
; 5433 : 
; 5434 : 	if (pMapEntries != NULL)
; 5435 : 	{
; 5436 : 		while (pMapEntries->szKey != NULL)
; 5437 : 		{
; 5438 : 			ATLASSERT(NULL != pMapEntries->szData);
; 5439 : 			ro.AddReplacement(pMapEntries->szKey, pMapEntries->szData);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	push	eax
	lea	edx, DWORD PTR _ro$[ebp]
	push	edx
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	eax, DWORD PTR [esi+8]

; 5440 : 			pMapEntries++;

	add	esi, 8
	test	eax, eax
	jne	SHORT $L71062
$L71063:

; 5441 : 		}
; 5442 : 	}
; 5443 : 
; 5444 : 	HRESULT hr = AddCommonRGSReplacements(&ro);

	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR [eax+20]
	mov	esi, eax

; 5445 : 	if (FAILED(hr))

	test	esi, esi

; 5446 : 		return hr;

	jl	$L243327

; 5447 : 
; 5448 : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 5449 : 	TCHAR szModule[MAX_PATH];
; 5450 : 	HINSTANCE hInst = _AtlBaseModule.GetModuleInstance();
; 5451 : 	DWORD dwFLen = GetModuleFileName(hInst, szModule, MAX_PATH);

	push	260					; 00000104H
	lea	edx, DWORD PTR _szModule$[ebp]
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	edx
	push	eax
	xor	ebx, ebx
	mov	DWORD PTR _hInst$[ebp], eax
	call	DWORD PTR __imp__GetModuleFileNameA@12

; 5452 : 	if( dwFLen == 0 )

	test	eax, eax
	jne	SHORT $L71077

; 5453 : 		return AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	esi, eax
	jmp	$L243327
$L71077:

; 5454 : 	else if( dwFLen == MAX_PATH )

	cmp	eax, 260				; 00000104H
	jne	SHORT $L71080

; 5455 : 		return HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER);

	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, -2147024774			; 8007007aH
	jmp	$L71058
$L71080:

; 5456 : 
; 5457 : 	LPOLESTR pszModule;
; 5458 : 	pszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	lea	eax, DWORD PTR _szModule$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	mov	esi, eax
	inc	esi
	lea	edi, DWORD PTR [esi+esi]
	cmp	edi, 1024				; 00000400H
	ja	SHORT $L243167
	push	edi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243167
	mov	eax, edi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L243225
$L243167:
	lea	ecx, DWORD PTR [esi+esi+8]
	push	ecx
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L243233
	mov	DWORD PTR [eax], 0
	mov	ebx, eax
	lea	edi, DWORD PTR [eax+8]
$L243225:
	test	edi, edi
	je	SHORT $L243233
	mov	eax, DWORD PTR __acp_ex$[ebp]
	push	esi
	push	edi
	push	-1
	lea	edx, DWORD PTR _szModule$[ebp]
	push	edx
	push	0
	push	eax
	mov	WORD PTR [edi], 0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, edi
	mov	DWORD PTR tv150[ebp], esi
	jmp	SHORT $L243231
$L243233:
	mov	DWORD PTR tv150[ebp], 0
	mov	esi, DWORD PTR tv150[ebp]
$L243231:

; 5459 : #ifndef _UNICODE
; 5460 : 	if(pszModule == NULL) 

	test	esi, esi
	jne	SHORT $L71091

; 5461 : 		return E_OUTOFMEMORY;

	test	ebx, ebx
	je	SHORT $L243247
$L243246:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243246
$L243247:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, -2147024882			; 8007000eH
	jmp	$L71058
$L71091:

; 5462 : #endif
; 5463 : 
; 5464 : 	OLECHAR pszModuleUnquoted[_MAX_PATH * 2];
; 5465 : 	EscapeSingleQuote(pszModuleUnquoted, pszModule);

	cmp	WORD PTR [esi], 0
	mov	ecx, esi
	lea	eax, DWORD PTR _pszModuleUnquoted$[ebp]
	je	SHORT $L243253
$L243252:
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	add	eax, 2
	cmp	WORD PTR [ecx], 39			; 00000027H
	jne	SHORT $L243254
	mov	WORD PTR [eax], 39			; 00000027H
	add	eax, 2
$L243254:
	add	ecx, 2
	cmp	WORD PTR [ecx], 0
	jne	SHORT $L243252
$L243253:

; 5466 : 	
; 5467 : 	HRESULT hRes;
; 5468 : 	if ((hInst == NULL) || (hInst == GetModuleHandle(NULL))) // register as EXE

	mov	edi, DWORD PTR _hInst$[ebp]
	test	edi, edi
	mov	WORD PTR [eax], 0
	je	SHORT $L71097
	push	0
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, eax
	je	SHORT $L71097

; 5481 : 	}
; 5482 : 	else
; 5483 : 	{
; 5484 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleUnquoted);

	lea	eax, DWORD PTR _pszModuleUnquoted$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	jmp	SHORT $L243352
$L71097:

; 5469 : 	{
; 5470 : 		// If Registering as an EXE, then we quote the resultant path.
; 5471 : 		// We don't do it for a DLL, because LoadLibrary fails if the path is
; 5472 : 		// quoted
; 5473 : 		OLECHAR pszModuleQuote[(_MAX_PATH + _ATL_QUOTES_SPACE)*2]; 		
; 5474 : 		pszModuleQuote[0] = OLESTR('\"');
; 5475 : 		ocscpy(pszModuleQuote + 1, pszModuleUnquoted);

	lea	edx, DWORD PTR _pszModuleUnquoted$[ebp]
	push	edx
	mov	WORD PTR _pszModuleQuote$71098[ebp], 34	; 00000022H
	call	DWORD PTR __imp__lstrlenW@4
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	eax, ecx
	shr	ecx, 2
	lea	esi, DWORD PTR _pszModuleUnquoted$[ebp]
	lea	edi, DWORD PTR _pszModuleQuote$71098[ebp+2]
	rep movsd
	mov	ecx, eax
	and	ecx, 3
	rep movsb

; 5476 : 		int nLen = ocslen(pszModuleQuote);

	lea	ecx, DWORD PTR _pszModuleQuote$71098[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4

; 5477 : 		pszModuleQuote[nLen] = OLESTR('\"');
; 5478 : 		pszModuleQuote[nLen + 1] = 0;
; 5479 : 
; 5480 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleQuote);

	lea	edx, DWORD PTR _pszModuleQuote$71098[ebp]
	push	edx
	mov	WORD PTR _pszModuleQuote$71098[ebp+eax*2], 34 ; 00000022H
	mov	WORD PTR _pszModuleQuote$71098[ebp+eax*2+2], 0
	push	OFFSET FLAT:??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
	lea	eax, DWORD PTR _ro$[ebp]
	push	eax
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	esi, DWORD PTR tv150[ebp]
$L243352:
	mov	edi, eax

; 5485 : 	}	
; 5486 : 	
; 5487 : 	if(FAILED(hRes))

	test	edi, edi
	jge	SHORT $L71103

; 5488 : 		return hRes;

	test	ebx, ebx
	je	SHORT $L243272
$L243271:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243271
$L243272:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, edi
	jmp	$L71058
$L71103:

; 5489 : 		
; 5490 : 	hRes = ro.AddReplacement(OLESTR("Module_Raw"), pszModuleUnquoted);

	lea	ecx, DWORD PTR _pszModuleUnquoted$[ebp]
	push	ecx
	push	OFFSET FLAT:??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
	lea	edx, DWORD PTR _ro$[ebp]
	push	edx
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	edi, eax

; 5491 : 	if(FAILED(hRes))

	test	edi, edi
	jge	SHORT $L71107

; 5492 : 		return hRes;

	test	ebx, ebx
	je	SHORT $L243282
	npad	4
$L243280:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243280
$L243282:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, edi
	jmp	$L71058
$L71107:

; 5493 : 
; 5494 : 	LPCOLESTR szType = OLESTR("REGISTRY");
; 5495 : 	LPCOLESTR pszRes = T2COLE_EX(lpszRes, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR $T243333[ebp]
	test	eax, eax
	je	$L243305
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	mov	edi, eax
	inc	edi
	lea	eax, DWORD PTR [edi+edi]
	cmp	eax, 1024				; 00000400H
	ja	SHORT $L243174
	push	eax
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243174
	lea	eax, DWORD PTR [edi+edi]
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	esi, esp
	jmp	SHORT $L243292
$L243174:
	lea	eax, DWORD PTR [edi+edi+8]
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L243305
	mov	DWORD PTR [eax], ebx
	mov	ebx, eax
	lea	esi, DWORD PTR [eax+8]
$L243292:
	test	esi, esi
	je	SHORT $L243350
	mov	ecx, DWORD PTR $T243333[ebp]
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	edi
	push	esi
	push	-1
	push	ecx
	push	0
	push	edx
	mov	WORD PTR [esi], 0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	neg	eax
	sbb	eax, eax
	and	eax, esi
	mov	esi, DWORD PTR tv150[ebp]
	jmp	SHORT $L243303
$L243350:
	mov	esi, DWORD PTR tv150[ebp]
$L243305:
	xor	eax, eax
$L243303:

; 5496 : #ifndef _UNICODE	
; 5497 : 	if(pszRes == NULL) 

	test	eax, eax
	jne	SHORT $L71118

; 5498 : 		return E_OUTOFMEMORY;

	test	ebx, ebx
	je	SHORT $L243316
	npad	5
$L243315:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243315
$L243316:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L71058
$L71118:

; 5499 : #endif	
; 5500 : 	hr = (bRegister) ? ro.ResourceRegisterSz(pszModule, pszRes, szType) :
; 5501 : 		ro.ResourceUnregisterSz(pszModule, pszRes, szType);

	mov	ecx, DWORD PTR _bRegister$[ebp]
	test	ecx, ecx
	push	OFFSET FLAT:??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
	push	eax
	push	esi
	je	SHORT $L243179
	lea	eax, DWORD PTR _ro$[ebp]
	push	eax
	call	?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z ; ATL::CRegObject::ResourceRegisterSz
	jmp	SHORT $L243353
$L243179:
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	call	?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z ; ATL::CRegObject::ResourceUnregisterSz
$L243353:

; 5502 : 	return hr;

	test	ebx, ebx
	mov	esi, eax
	je	SHORT $L243327
	npad	5
$L243326:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243326
$L243327:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, esi
$L71058:

; 5503 : }

	lea	esp, DWORD PTR [ebp-140]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	ebp, 2280				; 000008e8H
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJPBDHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResourceS
_TEXT	ENDS
EXTRN	__resetstkoflw:NEAR
;	COMDAT CONST
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
CONST	SEGMENT
$T243363 DD	0ffffffffH
	DD	FLAT:$L243358
	DD	FLAT:$L243359
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT
_p$32290 = -28						; size = 4
__$SEHRec$ = -24					; size = 24
_Size$ = 8						; size = 4
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable, COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	OFFSET FLAT:$T243363
	push	OFFSET FLAT:__except_handler3
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$SEHRec$[ebp], esp

; 332  :     bool bStackAvailable = true;

	mov	bl, 1

; 333  : 
; 334  :     __try

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 335  :     {
; 336  :         PVOID p = _alloca(Size + _ATL_STACK_MARGIN);

	mov	eax, DWORD PTR _Size$[ebp]
	add	eax, 8195				; 00002003H
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR __$SEHRec$[ebp], esp
	mov	eax, esp
	mov	DWORD PTR _p$32290[ebp], eax
	jmp	SHORT $L243366
$L243358:
$L243367:

; 337  :         (p);
; 338  :     }
; 339  :     __except ((EXCEPTION_STACK_OVERFLOW == GetExceptionCode()) ?
; 340  :                    EXCEPTION_EXECUTE_HANDLER :
; 341  :                    EXCEPTION_CONTINUE_SEARCH)

	mov	eax, DWORD PTR __$SEHRec$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	xor	edx, edx
	cmp	eax, -1073741571			; c00000fdH
	sete	dl
	mov	eax, edx
$L243365:
$L243360:
	ret	0
$L243359:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 342  :     {
; 343  :         bStackAvailable = false;

	xor	bl, bl

; 344  :         _resetstkoflw();

	call	__resetstkoflw
$L243366:
	mov	DWORD PTR __$SEHRec$[ebp+20], -1

; 345  :     }
; 346  :     return bStackAvailable;

	mov	al, bl

; 347  : }

	lea	esp, DWORD PTR [ebp-40]
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT
?AtlHresultFromLastError@ATL@@YAJXZ PROC NEAR		; ATL::AtlHresultFromLastError, COMDAT

; 27   : 	DWORD dwErr = ::GetLastError();

	call	DWORD PTR __imp__GetLastError@0

; 28   : 	return HRESULT_FROM_WIN32(dwErr);

	test	eax, eax
	jle	SHORT $L243373
	and	eax, 65535				; 0000ffffH
	or	eax, -2147024896			; 80070000H
$L243373:

; 29   : }

	ret	0
?AtlHresultFromLastError@ATL@@YAJXZ ENDP		; ATL::AtlHresultFromLastError
_TEXT	ENDS
PUBLIC	??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>
PUBLIC	?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::RemoveAll
PUBLIC	??1CExpansionVector@ATL@@QAE@XZ			; ATL::CExpansionVector::~CExpansionVector
PUBLIC	?ClearReplacements@CExpansionVector@ATL@@QAEJXZ	; ATL::CExpansionVector::ClearReplacements
PUBLIC	??1CComAutoCriticalSection@ATL@@QAE@XZ		; ATL::CComAutoCriticalSection::~CComAutoCriticalSection
PUBLIC	?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CRegObject::QueryInterface
PUBLIC	?AddRef@CRegObject@ATL@@UAGKXZ			; ATL::CRegObject::AddRef
PUBLIC	?Release@CRegObject@ATL@@UAGKXZ			; ATL::CRegObject::Release
PUBLIC	?ClearReplacements@CRegObject@ATL@@UAGJXZ	; ATL::CRegObject::ClearReplacements
PUBLIC	??_7CRegObject@ATL@@6B@				; ATL::CRegObject::`vftable'
PUBLIC	??_GCRegObject@ATL@@UAEPAXI@Z			; ATL::CRegObject::`scalar deleting destructor'
EXTRN	??_ECRegObject@ATL@@UAEPAXI@Z:NEAR		; ATL::CRegObject::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
xdata$x	SEGMENT
$T243467 DD	0ffffffffH
	DD	FLAT:$L243377
	DD	00H
	DD	FLAT:$L243378
	DD	0ffffffffH
	DD	FLAT:$L243424
$T243465 DD	019930520H
	DD	03H
	DD	FLAT:$T243467
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT
??_7CRegObject@ATL@@6B@ DD FLAT:?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CRegObject::`vftable'
	DD	FLAT:?AddRef@CRegObject@ATL@@UAGKXZ
	DD	FLAT:?Release@CRegObject@ATL@@UAGKXZ
	DD	FLAT:?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
	DD	FLAT:?ClearReplacements@CRegObject@ATL@@UAGJXZ
	DD	FLAT:??_ECRegObject@ATL@@UAEPAXI@Z
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
CONST	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT
$T243463 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CRegObject@ATL@@UAE@XZ PROC NEAR			; ATL::CRegObject::~CRegObject, COMDAT
; _this$ = ecx

; 276  : 	virtual ~CRegObject(){ClearReplacements();}

	push	-1
	push	__ehhandler$??1CRegObject@ATL@@UAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	mov	DWORD PTR [esi], OFFSET FLAT:??_7CRegObject@ATL@@6B@
	push	esi
	mov	DWORD PTR __$EHRec$[esp+32], 1
	call	?ClearReplacements@CRegObject@ATL@@UAGJXZ ; ATL::CRegObject::ClearReplacements
	lea	eax, DWORD PTR [esi+16]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	add	esi, 4
	mov	DWORD PTR $T243463[esp+20], esi
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+28], 2
	call	?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::RemoveAll
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243377:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CExpansionVector@ATL@@QAE@XZ		; ATL::CExpansionVector::~CExpansionVector
$L243378:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CComAutoCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoCriticalSection::~CComAutoCriticalSection
$L243424:
	mov	ecx, DWORD PTR $T243463[ebp]
	jmp	??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>
__ehhandler$??1CRegObject@ATL@@UAE@XZ:
	mov	eax, OFFSET FLAT:$T243465
	jmp	___CxxFrameHandler
text$x	ENDS
??1CRegObject@ATL@@UAE@XZ ENDP				; ATL::CRegObject::~CRegObject
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ??1CComAutoCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComAutoCriticalSection@ATL@@QAE@XZ PROC NEAR	; ATL::CComAutoCriticalSection::~CComAutoCriticalSection, COMDAT
; _this$ = ecx

; 165  : 		CComCriticalSection::Term();

	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4

; 166  : 	}

	ret	0
??1CComAutoCriticalSection@ATL@@QAE@XZ ENDP		; ATL::CComAutoCriticalSection::~CComAutoCriticalSection
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
_TEXT	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z PROC NEAR ; ATL::CRegObject::QueryInterface, COMDAT

; 261  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));
; 262  : 		return E_NOTIMPL;

	mov	eax, -2147467263			; 80004001H

; 263  : 	}

	ret	12					; 0000000cH
?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z ENDP ; ATL::CRegObject::QueryInterface
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CRegObject@ATL@@UAGKXZ PROC NEAR		; ATL::CRegObject::AddRef, COMDAT

; 267  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));
; 268  : 		return 1;

	mov	eax, 1

; 269  : 	}

	ret	4
?AddRef@CRegObject@ATL@@UAGKXZ ENDP			; ATL::CRegObject::AddRef
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CRegObject@ATL@@UAGKXZ PROC NEAR		; ATL::CRegObject::Release, COMDAT

; 272  : 		ATLASSERT(_T("statically linked in CRegObject is not a com object. Do not callthis function"));
; 273  : 		return 0;

	xor	eax, eax

; 274  : 	}

	ret	4
?Release@CRegObject@ATL@@UAGKXZ ENDP			; ATL::CRegObject::Release
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::RemoveAll, COMDAT
; _this$ = ecx

; 332  : 	{

	push	esi
	mov	esi, ecx

; 333  : 		if(m_aKey != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L235279

; 334  : 		{
; 335  : 			for(int i = 0; i < m_nSize; i++)
; 336  : 			{
; 337  : 				m_aKey[i].~TKey();
; 338  : 				m_aVal[i].~TVal();
; 339  : 			}
; 340  : 			free(m_aKey);

	push	eax
	call	_free
	add	esp, 4

; 341  : 			m_aKey = NULL;

	mov	DWORD PTR [esi], 0
$L235279:

; 342  : 		}
; 343  : 		if(m_aVal != NULL)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L243490

; 344  : 		{
; 345  : 			free(m_aVal);

	push	eax
	call	_free
	add	esp, 4

; 346  : 			m_aVal = NULL;

	mov	DWORD PTR [esi+4], 0
$L243490:

; 347  : 		}
; 348  : 
; 349  : 		m_nSize = 0;

	mov	DWORD PTR [esi+8], 0
	pop	esi

; 350  : 	}

	ret	0
?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::RemoveAll
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT
?ClearReplacements@CExpansionVector@ATL@@QAEJXZ PROC NEAR ; ATL::CExpansionVector::ClearReplacements, COMDAT
; _this$ = ecx

; 126  : 	{

	push	esi
	mov	esi, ecx

; 127  : 		for (int i = 0; i < GetSize(); i++)

	mov	eax, DWORD PTR [esi+8]
	push	edi
	xor	edi, edi
	test	eax, eax
	jle	SHORT $L70005
	npad	3
$L70003:

; 128  : 		{
; 129  : 			delete []GetKeyAt(i);

	test	edi, edi
	jl	SHORT $L243506
	cmp	edi, DWORD PTR [esi+8]
	jge	SHORT $L243506
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+edi*4]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]

; 130  : 			delete []GetValueAt(i);

	mov	eax, DWORD PTR [esi+8]
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $L243506
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx+edi*4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	eax, DWORD PTR [esi+8]
	add	esp, 4
	inc	edi
	cmp	edi, eax
	jl	SHORT $L70003
$L70005:

; 131  : 		}
; 132  : 		RemoveAll();

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L243525
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], 0
$L243525:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L243530
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
$L243530:
	pop	edi
	mov	DWORD PTR [esi+8], 0

; 133  : 		return S_OK;

	xor	eax, eax
	pop	esi

; 134  : 	}

	ret	0
$L243506:
	push	0
	push	0
	push	1
	push	-1073741684				; c000008cH
	call	DWORD PTR __imp__RaiseException@16
$L243539:
$L243538:
	int	3
?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ENDP	; ATL::CExpansionVector::ClearReplacements
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:NEAR
EXTRN	__imp__LeaveCriticalSection@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ClearReplacements@CRegObject@ATL@@UAGJXZ PROC NEAR	; ATL::CRegObject::ClearReplacements, COMDAT

; 510  : {

	push	esi
	push	edi

; 511  : 	m_csMap.Lock();

	mov	edi, DWORD PTR _this$[esp+4]
	lea	esi, DWORD PTR [edi+16]
	push	esi
	call	DWORD PTR __imp__EnterCriticalSection@4

; 512  : 	HRESULT hr = m_RepMap.ClearReplacements();

	lea	ecx, DWORD PTR [edi+4]
	call	?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements

; 513  : 	m_csMap.Unlock();

	push	esi
	mov	edi, eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 514  : 	return hr;

	mov	eax, edi
	pop	edi
	pop	esi

; 515  : }

	ret	4
?ClearReplacements@CRegObject@ATL@@UAGJXZ ENDP		; ATL::CRegObject::ClearReplacements
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>, COMDAT
; _this$ = ecx

; 276  : 	{

	push	esi
	mov	esi, ecx

; 277  : 		RemoveAll();

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L243554
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], 0
$L243554:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L243563
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
$L243563:
	mov	DWORD PTR [esi+8], 0
	pop	esi

; 278  : 	}

	ret	0
??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::~CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CExpansionVector@ATL@@QAE@XZ PROC NEAR		; ATL::CExpansionVector::~CExpansionVector, COMDAT
; _this$ = ecx

; 88   : 	{

	push	esi
	mov	esi, ecx

; 89   : 		 ClearReplacements();

	call	?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements

; 90   : 	}

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L243581
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi], 0
$L243581:
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $L243590
	push	eax
	call	_free
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
$L243590:
	mov	DWORD PTR [esi+8], 0
	pop	esi
	ret	0
??1CExpansionVector@ATL@@QAE@XZ ENDP			; ATL::CExpansionVector::~CExpansionVector
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRegObject@ATL@@UAEPAXI@Z PROC NEAR			; ATL::CRegObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $L243594
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$L243594:
	mov	eax, esi
	pop	esi
	ret	4
??_GCRegObject@ATL@@UAEPAXI@Z ENDP			; ATL::CRegObject::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z		; ATL::CExpansionVector::Add
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
EXTRN	__imp__WideCharToMultiByte@32:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
xdata$x	SEGMENT
$T243670 DD	0ffffffffH
	DD	FLAT:$L243604
$T243665 DD	019930520H
	DD	01H
	DD	FLAT:$T243670
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT
tv194 = -24						; size = 4
__acp_ex$ = -20						; size = 4
__AtlSafeAllocaManager$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszKey$ = 12						; size = 4
_lpszItem$ = 16						; size = 4
?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z PROC NEAR	; ATL::CRegObject::AddReplacement, COMDAT

; 324  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi

; 325  : 	if (lpszKey == NULL || lpszItem == NULL)

	mov	edi, DWORD PTR _lpszKey$[ebp]
	xor	esi, esi
	cmp	edi, esi
	je	$L70243
	cmp	DWORD PTR _lpszItem$[ebp], esi
	je	$L70243

; 327  : 	m_csMap.Lock();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	DWORD PTR tv194[ebp], eax
	call	DWORD PTR __imp__EnterCriticalSection@4

; 328  : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi

; 329  : 	
; 330  : 	LPCTSTR lpszT = OLE2CT_EX(lpszKey, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	push	edi
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, 1024				; 00000400H
	jg	SHORT $L243598
	push	ebx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243598
	mov	eax, ebx
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L243621
$L243598:
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L243633
	mov	esi, eax
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi
	lea	edi, DWORD PTR [eax+8]
$L243621:
	test	edi, edi
	je	SHORT $L243633
	mov	ecx, DWORD PTR _lpszKey$[ebp]
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	ebx
	push	edi
	push	-1
	push	ecx
	push	0
	push	edx
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, edi
	jmp	SHORT $L243631
$L243633:
	xor	eax, eax
$L243631:

; 331  : 
; 332  : #ifndef _UNICODE
; 333  : 	if(lpszT == NULL)

	test	eax, eax
	jne	SHORT $L70254

; 334  : 		return E_OUTOFMEMORY;

	test	esi, esi
	je	SHORT $L243645
$L243644:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L243644
$L243645:
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L70241
$L70254:

; 335  : #endif
; 336  : 	
; 337  : 	BOOL bRet = m_RepMap.Add(lpszT, lpszItem);

	mov	ecx, DWORD PTR _lpszItem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	push	eax
	add	ecx, 4
	call	?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z	; ATL::CExpansionVector::Add

; 338  : 	m_csMap.Unlock();

	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	mov	edi, eax
	call	DWORD PTR __imp__LeaveCriticalSection@4

; 339  : 	return bRet ? S_OK : E_OUTOFMEMORY;

	xor	eax, eax
	test	edi, edi
	setne	al
	dec	eax
	and	eax, -2147024882			; 8007000eH
	test	esi, esi
	mov	edi, eax
	je	SHORT $L243659
	npad	6
$L243658:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L243658
$L243659:
	mov	eax, edi
	jmp	SHORT $L70241
$L70243:

; 326  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
$L70241:

; 340  : }

	lea	esp, DWORD PTR [ebp-36]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243604:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z:
	mov	eax, OFFSET FLAT:$T243665
	jmp	___CxxFrameHandler
text$x	ENDS
?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ENDP		; ATL::CRegObject::AddReplacement
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC NEAR ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 387  : 	{

	push	esi
	mov	esi, ecx

; 388  : 		// Walk the list and free the buffers
; 389  : 		while (m_pHead != NULL)

	cmp	DWORD PTR [esi], 0
	je	SHORT $L235084
$L235083:

; 390  : 		{
; 391  : 			CAtlSafeAllocBufferNode* p = m_pHead;

	mov	eax, DWORD PTR [esi]

; 392  : 			m_pHead = m_pHead->m_pNext;

	mov	ecx, DWORD PTR [eax]

; 393  : 			Allocator::Free(p);

	push	eax
	mov	DWORD PTR [esi], ecx
	call	_free
	mov	eax, DWORD PTR [esi]
	add	esp, 4
	test	eax, eax
	jne	SHORT $L235083
$L235084:
	pop	esi

; 394  : 		}
; 395  : 	}

	ret	0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Add
EXTRN	??_U@YAPAXI@Z:NEAR				; operator new[]
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
xdata$x	SEGMENT
$T243743 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T243745 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L243687
$T243746 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L243689
$T243744 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T243745
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T243746
$T243737 DD	019930520H
	DD	04H
	DD	FLAT:$T243743
	DD	02H
	DD	FLAT:$T243744
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
_cbValue$ = -36						; size = 4
_cbKey$ = -32						; size = 4
_hRes$ = -28						; size = 4
_szKey$ = -24						; size = 4
_szValue$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_lpszKey$ = 8						; size = 4
_lpszValue$ = 12					; size = 4
?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z PROC NEAR	; ATL::CExpansionVector::Add, COMDAT
; _this$ = ecx

; 93   : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 28					; 0000001cH

; 94   : 		ATLASSERT(lpszKey != NULL && lpszValue != NULL);
; 95   : 		if (lpszKey == NULL || lpszValue == NULL)

	mov	eax, DWORD PTR _lpszKey$[ebp]
	push	ebx
	push	esi
	push	edi
	xor	edi, edi
	cmp	eax, edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	je	$L69974
	cmp	DWORD PTR _lpszValue$[ebp], edi
	je	$L69974

; 96   : 			return FALSE;
; 97   : 
; 98   : 		HRESULT hRes = S_OK;
; 99   : 
; 100  : 		size_t cbKey = (lstrlen(lpszKey)+1)*sizeof(TCHAR);

	push	eax
	mov	DWORD PTR _hRes$[ebp], edi
	call	DWORD PTR __imp__lstrlenA@4
	mov	esi, eax
	inc	esi

; 101  : 		TCHAR* szKey = NULL;
; 102  : 
; 103  : 		ATLTRY(szKey = new TCHAR[cbKey];)

	push	esi
	mov	DWORD PTR _cbKey$[ebp], esi
	mov	DWORD PTR _szKey$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR _szKey$[ebp], eax
	jmp	SHORT $L69980
$L243687:
	mov	eax, $L243739
	ret	0
$L243739:
	mov	esi, DWORD PTR _cbKey$[ebp]
	xor	edi, edi
$L69980:

; 104  : 
; 105  : 		size_t cbValue = (ocslen(lpszValue)+1)*sizeof(OLECHAR);

	mov	eax, DWORD PTR _lpszValue$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]

; 106  : 		LPOLESTR szValue = NULL;
; 107  : 		ATLTRY(szValue = new OLECHAR[cbValue];)

	lea	ecx, DWORD PTR [ebx+ebx]
	push	ecx
	mov	DWORD PTR _cbValue$[ebp], ebx
	mov	DWORD PTR _szValue$[ebp], edi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR _szValue$[ebp], eax
	jmp	SHORT $L69986
$L243689:
	mov	eax, $L243740
	ret	0
$L243740:
	mov	esi, DWORD PTR _cbKey$[ebp]
	mov	ebx, DWORD PTR _cbValue$[ebp]
$L69986:

; 108  : 
; 109  : 		if (szKey == NULL || szValue == NULL)

	mov	edi, DWORD PTR _szKey$[ebp]
	test	edi, edi
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	je	SHORT $L69990
	mov	eax, DWORD PTR _szValue$[ebp]
	test	eax, eax
	je	SHORT $L69990

; 110  : 			hRes = E_OUTOFMEMORY;
; 111  : 		else
; 112  : 		{
; 113  : 			memcpy(szKey, lpszKey, cbKey);

	mov	ecx, esi
	mov	esi, DWORD PTR _lpszKey$[ebp]
	mov	edx, ecx
	shr	ecx, 2
	rep movsd
	mov	ecx, edx
	and	ecx, 3
	rep movsb

; 114  : 			memcpy(szValue, lpszValue, cbValue);

	mov	edi, DWORD PTR _szValue$[ebp]
	mov	esi, DWORD PTR _lpszValue$[ebp]
	mov	ecx, ebx
	mov	eax, ecx
	shr	ecx, 2
	rep movsd
	mov	ecx, eax
	and	ecx, 3
	rep movsb

; 115  : 			if (!CSimpleMap<LPTSTR, LPOLESTR, CExpansionVectorEqualHelper>::Add(szKey, szValue))

	lea	ecx, DWORD PTR _szValue$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR _szKey$[ebp]
	push	edx
	call	?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Add
	test	eax, eax
	jne	SHORT $L69996

; 116  : 				hRes = E_OUTOFMEMORY;

	mov	edi, DWORD PTR _szKey$[ebp]
$L69990:

; 117  : 		}
; 118  : 		if (FAILED(hRes))
; 119  : 		{
; 120  : 			delete []szKey;

	push	edi
	mov	DWORD PTR _hRes$[ebp], -2147024882	; 8007000eH
	call	??_V@YAXPAX@Z				; operator delete[]

; 121  : 			delete []szValue;

	mov	eax, DWORD PTR _szValue$[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 8
$L69996:

; 122  : 		}
; 123  : 		return SUCCEEDED(hRes);

	mov	ecx, DWORD PTR _hRes$[ebp]
	xor	eax, eax
	test	ecx, ecx
	setge	al

; 124  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$L69974:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	xor	eax, eax
	mov	DWORD PTR fs:__except_list, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z:
	mov	eax, OFFSET FLAT:$T243737
	jmp	___CxxFrameHandler
text$x	ENDS
?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z ENDP		; ATL::CExpansionVector::Add
PUBLIC	?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex
EXTRN	_realloc:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
_val$ = 12						; size = 4
?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Add, COMDAT
; _this$ = ecx

; 286  : 	{

	push	esi
	mov	esi, ecx

; 287  : 		TKey* pKey;
; 288  : 		pKey = (TKey*)realloc(m_aKey, (m_nSize + 1) * sizeof(TKey));

	mov	eax, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [esi]
	lea	ecx, DWORD PTR [eax*4+4]
	push	ecx
	push	edx
	call	_realloc
	add	esp, 8

; 289  : 		if(pKey == NULL)

	test	eax, eax

; 290  : 			return FALSE;

	je	SHORT $L243751

; 291  : 		m_aKey = pKey;
; 292  : 		TVal* pVal;
; 293  : 		pVal = (TVal*)realloc(m_aVal, (m_nSize + 1) * sizeof(TVal));

	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax*4+4]
	push	ecx
	push	edx
	call	_realloc
	add	esp, 8

; 294  : 		if(pVal == NULL)

	test	eax, eax
	jne	SHORT $L235276
$L243751:

; 295  : 			return FALSE;

	xor	eax, eax
	pop	esi

; 300  : 	}

	ret	8
$L235276:

; 296  : 		m_aVal = pVal;
; 297  : 		InternalSetAtIndex(m_nSize, key, val);

	mov	ecx, DWORD PTR _key$[esp]
	mov	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR _val$[esp]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex

; 298  : 		m_nSize++;

	inc	DWORD PTR [esi+8]

; 299  : 		return TRUE;

	mov	eax, 1
	pop	esi

; 300  : 	}

	ret	8
?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Add
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
_key$ = 12						; size = 4
_val$ = 16						; size = 4
?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex, COMDAT
; _this$ = ecx

; 443  : 		new(m_aKey + nIndex) Wrapper<TKey>(key);

	mov	edx, DWORD PTR _nIndex$[esp-4]
	mov	eax, DWORD PTR [ecx]
	shl	edx, 2
	add	eax, edx
	je	SHORT $L243757
	push	esi
	mov	esi, DWORD PTR _key$[esp]
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	pop	esi
$L243757:

; 444  : 		new(m_aVal + nIndex) Wrapper<TVal>(val);

	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, edx
	je	SHORT $L243761
	mov	eax, DWORD PTR _val$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$L243761:

; 445  : 	}

	ret	12					; 0000000cH
?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::InternalSetAtIndex
_TEXT	ENDS
PUBLIC	??0CComAutoCriticalSection@ATL@@QAE@XZ		; ATL::CComAutoCriticalSection::CComAutoCriticalSection
;	COMDAT xdata$x
xdata$x	SEGMENT
$T243807 DD	0ffffffffH
	DD	FLAT:$L243780
$T243805 DD	019930520H
	DD	01H
	DD	FLAT:$T243807
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CRegObject@ATL@@QAE@XZ PROC NEAR			; ATL::CRegObject::CRegObject, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0CRegObject@ATL@@QAE@XZ
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	push	esi
	mov	esi, ecx
	xor	eax, eax
	mov	DWORD PTR [esi], OFFSET FLAT:??_7CRegObject@ATL@@6B@
	mov	DWORD PTR _this$[esp+20], esi
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR __$EHRec$[esp+28], eax
	call	??0CComAutoCriticalSection@ATL@@QAE@XZ	; ATL::CComAutoCriticalSection::CComAutoCriticalSection
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:__except_list, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243780:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CExpansionVector@ATL@@QAE@XZ		; ATL::CExpansionVector::~CExpansionVector
__ehhandler$??0CRegObject@ATL@@QAE@XZ:
	mov	eax, OFFSET FLAT:$T243805
	jmp	___CxxFrameHandler
text$x	ENDS
??0CRegObject@ATL@@QAE@XZ ENDP				; ATL::CRegObject::CRegObject
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ??0CComAutoCriticalSection@ATL@@QAE@XZ
_TEXT	SEGMENT
??0CComAutoCriticalSection@ATL@@QAE@XZ PROC NEAR	; ATL::CComAutoCriticalSection::CComAutoCriticalSection, COMDAT
; _this$ = ecx

; 157  : 	CComAutoCriticalSection()

	xor	eax, eax
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax

; 158  : 	{
; 159  : 		HRESULT hr = CComCriticalSection::Init();

	call	?Init@CComCriticalSection@ATL@@QAEJXZ	; ATL::CComCriticalSection::Init

; 160  : 		if (FAILED(hr))

	test	eax, eax
	jge	SHORT $L33174

; 161  : 			AtlThrow(hr);

	push	eax
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L243817:
$L33174:

; 162  : 	}

	mov	eax, esi
	pop	esi
	ret	0
$L243816:
??0CComAutoCriticalSection@ATL@@QAE@XZ ENDP		; ATL::CComAutoCriticalSection::CComAutoCriticalSection
_TEXT	ENDS
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT __TI1?AVCAtlException@ATL@@
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Ogtpy
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T243821 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

	mov	eax, DWORD PTR _hr$[esp-4]
	push	OFFSET FLAT:__TI1?AVCAtlException@ATL@@
	lea	ecx, DWORD PTR $T243821[esp]
	push	ecx
	mov	DWORD PTR $T243821[esp+4], eax
	call	__CxxThrowException@8
$L243828:
$L243827:
	int	3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ; ATL::CRegObject::RegisterFromResource
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T243916 DD	0ffffffffH
	DD	FLAT:$L243843
$T243912 DD	019930520H
	DD	01H
	DD	FLAT:$T243916
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z
_TEXT	SEGMENT
__acp_ex$ = -20						; size = 4
__AtlSafeAllocaManager$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_szID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z PROC NEAR ; ATL::CRegObject::ResourceRegisterSz, COMDAT

; 443  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 444  : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	edi, edi
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], edi

; 445  : 	if (szID == NULL || szType == NULL)

	mov	ebx, DWORD PTR _szID$[ebp]
	cmp	ebx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	je	$L70375
	cmp	DWORD PTR _szType$[ebp], edi
	je	$L70375

; 447  : 	
; 448  : 	LPCTSTR lpszID = OLE2CT_EX(szID, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	push	ebx
	call	DWORD PTR __imp__lstrlenW@4
	lea	esi, DWORD PTR [eax+eax+2]
	cmp	esi, 1024				; 00000400H
	jg	SHORT $L243833
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243833
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L243873
$L243833:
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_malloc
	add	esp, 4
	cmp	eax, edi
	je	SHORT $L243881
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], eax
	lea	edi, DWORD PTR [eax+8]
$L243873:
	test	edi, edi
	je	SHORT $L243881
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	esi
	push	edi
	push	-1
	push	ebx
	push	0
	push	ecx
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, edi
	jmp	SHORT $L243879
$L243881:
	xor	esi, esi
$L243879:

; 449  : 	LPCTSTR lpszType = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	edx, DWORD PTR _szType$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, 1024				; 00000400H
	jg	SHORT $L243837
	push	ebx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243837
	mov	eax, ebx
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L243898
$L243837:
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L243906
	mov	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], eax
	lea	edi, DWORD PTR [eax+8]
$L243898:
	test	edi, edi
	je	SHORT $L243906
	mov	edx, DWORD PTR _szType$[ebp]
	mov	eax, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	ebx
	push	edi
	push	-1
	push	edx
	push	0
	push	eax
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, edi
	jmp	SHORT $L243904
$L243906:
	xor	eax, eax
$L243904:

; 450  : #ifndef _UNICODE
; 451  : 	if (lpszID == NULL || lpszType == NULL)

	test	esi, esi
	je	SHORT $L70387
	test	eax, eax
	je	SHORT $L70387

; 454  : 	}
; 455  : #endif // _UNICODE
; 456  : 	return RegisterFromResource(szFileName, lpszID, lpszType, TRUE);

	mov	ecx, DWORD PTR _szFileName$[ebp]
	push	1
	push	eax
	push	esi
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ; ATL::CRegObject::RegisterFromResource
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	mov	esi, eax
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, esi
	jmp	SHORT $L70368
$L70387:

; 452  : 	{
; 453  : 		return E_OUTOFMEMORY;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L70368
$L70375:

; 446  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
$L70368:

; 457  : }

	lea	esp, DWORD PTR [ebp-32]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243843:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z:
	mov	eax, OFFSET FLAT:$T243912
	jmp	___CxxFrameHandler
text$x	ENDS
?ResourceRegisterSz@CRegObject@ATL@@QAGJPBG00@Z ENDP	; ATL::CRegObject::ResourceRegisterSz
PUBLIC	?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z	; ATL::CRegParser::RegisterBuffer
PUBLIC	??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::~CTempBuffer<char,1024,ATL::CCRTAllocator>
PUBLIC	?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap
EXTRN	__imp__LoadLibraryExA@12:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
EXTRN	__imp__FindResourceA@12:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
xdata$x	SEGMENT
$T244051 DD	0ffffffffH
	DD	FLAT:$L243930
	DD	00H
	DD	FLAT:$L243931
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T244053 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L243929
$T244052 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T244053
$T244042 DD	019930520H
	DD	04H
	DD	FLAT:$T244051
	DD	01H
	DD	FLAT:$T244052
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT
_parser$ = -1076					; size = 8
$T244040 = -1068					; size = 4
__AtlSafeAllocaManager$ = -1064				; size = 4
$T244039 = -1060					; size = 4
_hReg$ = -1060						; size = 4
_dwSize$ = -1056					; size = 4
__acp_ex$ = -1056					; size = 4
_hInstResDll$ = -1052					; size = 4
__convert_ex$ = -1052					; size = 4
_szReg$ = -1048						; size = 1028
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
_bstrFileName$ = 8					; size = 4
_szID$ = 12						; size = 4
_szType$ = 16						; size = 4
_bRegister$ = 20					; size = 4
?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z PROC NEAR ; ATL::CRegObject::RegisterFromResource, COMDAT
; _this$ = ecx

; 344  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 1064				; 00000428H
	mov	eax, DWORD PTR ___security_cookie
	push	ebx
	xor	eax, ebp
	push	esi
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 424  : 	return hr;

	mov	eax, DWORD PTR _szID$[ebp]
	push	edi
	mov	edi, DWORD PTR _bstrFileName$[ebp]
	mov	esi, ecx
	mov	ecx, DWORD PTR _szType$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR $T244039[ebp], eax
	mov	DWORD PTR $T244040[ebp], ecx
	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	ebx, ebx
	mov	DWORD PTR __acp_ex$[ebp], eax
	xor	eax, eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], ebx
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	mov	DWORD PTR _parser$[ebp+4], esi
	mov	DWORD PTR _parser$[ebp], eax
	mov	DWORD PTR _szReg$[ebp], eax
	cmp	edi, eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	je	$L243962
	push	edi
	call	DWORD PTR __imp__lstrlenW@4
	lea	esi, DWORD PTR [eax+eax+2]
	cmp	esi, 1024				; 00000400H
	mov	DWORD PTR __convert_ex$[ebp], esi
	jg	SHORT $L243922
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L243922
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, esp
	jmp	SHORT $L243956
$L243922:

; 345  : 	USES_CONVERSION_EX;
; 346  : 
; 347  : 	HRESULT     hr;
; 348  : 	CRegParser  parser(this);
; 349  : 	HINSTANCE   hInstResDll;
; 350  : 	HRSRC       hrscReg;
; 351  : 	HGLOBAL     hReg;
; 352  : 	DWORD       dwSize;
; 353  : 	LPSTR       szRegA;
; 354  : 	CTempBuffer<TCHAR, 1024> szReg;	
; 355  : 
; 356  : 	LPCTSTR lpszBSTRFileName = OLE2CT_EX(bstrFileName, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	add	esi, 8
	push	esi
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L243964
	mov	ebx, eax
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], ebx
	lea	esi, DWORD PTR [eax+8]
$L243956:
	test	esi, esi
	je	SHORT $L243964
	mov	edx, DWORD PTR __convert_ex$[ebp]
	mov	eax, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	edx
	push	esi
	push	-1
	push	edi
	push	0
	push	eax
	mov	BYTE PTR [esi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, esi
	jmp	SHORT $L243962
$L243964:
	xor	eax, eax
$L243962:

; 357  : #ifndef _UNICODE
; 358  : 	if (lpszBSTRFileName == NULL)

	test	eax, eax
	jne	SHORT $L70318

; 359  : 	{
; 360  : 		return E_OUTOFMEMORY;

	mov	eax, DWORD PTR _szReg$[ebp]
	lea	ecx, DWORD PTR _szReg$[ebp+4]
	cmp	eax, ecx
	je	SHORT $L243972
	lea	ecx, DWORD PTR _szReg$[ebp]
	call	?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap
$L243972:
	test	ebx, ebx
	je	SHORT $L243982
	npad	7
$L243981:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L243981
$L243982:
	mov	eax, -2147024882			; 8007000eH
	jmp	$L70267
$L70318:

; 361  : 	}
; 362  : #endif // _UNICODE
; 363  : 
; 364  : 	hInstResDll = LoadLibraryEx(lpszBSTRFileName, NULL, LOAD_LIBRARY_AS_DATAFILE);

	push	2
	push	0
	push	eax
	call	DWORD PTR __imp__LoadLibraryExA@12
	mov	esi, eax

; 365  : 
; 366  : 	if (NULL == hInstResDll)

	test	esi, esi
	mov	DWORD PTR _hInstResDll$[ebp], esi
	jne	SHORT $L70321

; 367  : 	{
; 368  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Failed to LoadLibrary on %s\n"), bstrFileName);
; 369  : 		hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	edi, eax

; 370  : 		goto ReturnHR;

	jmp	$L70338
$L70321:

; 371  : 	}
; 372  : 
; 373  : 	hrscReg = FindResource((HMODULE)hInstResDll, szID, szType);

	mov	edx, DWORD PTR $T244040[ebp]
	mov	eax, DWORD PTR $T244039[ebp]
	push	edx
	push	eax
	push	esi
	call	DWORD PTR __imp__FindResourceA@12
	mov	edi, eax

; 374  : 
; 375  : 	if (NULL == hrscReg)

	test	edi, edi
	jne	SHORT $L70325

; 376  : 	{
; 377  : 		ATLTRACE(atlTraceRegistrar, 0, (HIWORD(szID) == NULL) ? 
; 378  : 			_T("Failed to FindResource on ID:%d TYPE:%s\n") : 
; 379  : 			_T("Failed to FindResource on ID:%s TYPE:%s\n"), 
; 380  : 			szID, szType);
; 381  : 		hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError

; 382  : 		goto ReturnHR;

	jmp	$L244050
$L70325:

; 383  : 	}
; 384  : 
; 385  : 	hReg = LoadResource((HMODULE)hInstResDll, hrscReg);

	push	edi
	push	esi
	call	DWORD PTR __imp__LoadResource@8

; 386  : 
; 387  : 	if (NULL == hReg)

	test	eax, eax
	mov	DWORD PTR _hReg$[ebp], eax
	jne	SHORT $L70330

; 388  : 	{
; 389  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Failed to LoadResource\n"));
; 390  : 		hr = AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError

; 391  : 		goto ReturnHR;

	jmp	$L244050
$L70330:

; 392  : 	}
; 393  : 
; 394  : 	dwSize = SizeofResource((HMODULE)hInstResDll, hrscReg);

	push	edi
	push	esi
	call	DWORD PTR __imp__SizeofResource@8
	mov	edi, eax

; 395  : 	szRegA = (LPSTR)hReg;
; 396  : 
; 397  : 	// Allocate extra space for NULL.
; 398  : 	ATLTRY(szReg.Allocate(dwSize + 1));

	lea	eax, DWORD PTR [edi+1]
	cmp	eax, 1024				; 00000400H
	mov	DWORD PTR _dwSize$[ebp], edi
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	jbe	SHORT $L243992
	push	eax
	lea	ecx, DWORD PTR _szReg$[ebp]
	call	?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::AllocateHeap
	jmp	SHORT $L243993
$L243929:
	mov	eax, $L244046
	ret	0
$L243992:
	lea	ecx, DWORD PTR _szReg$[ebp+4]
	mov	DWORD PTR _szReg$[ebp], ecx
	jmp	SHORT $L243993
$L244046:
	mov	ebx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	mov	esi, DWORD PTR _hInstResDll$[ebp]
	mov	edi, DWORD PTR _dwSize$[ebp]
$L243993:

; 399  : 	if (szReg == NULL)

	mov	eax, DWORD PTR _szReg$[ebp]
	test	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jne	SHORT $L70335

; 400  : 	{
; 401  : 		hr = E_OUTOFMEMORY;

	mov	edi, -2147024882			; 8007000eH

; 402  : 		goto ReturnHR;

	jmp	SHORT $ReturnHR$70322
$L70335:

; 403  : 	}
; 404  : 
; 405  : #ifdef _UNICODE
; 406  : 	if (::MultiByteToWideChar(_AtlGetConversionACP(), 0, szRegA, dwSize, szReg, dwSize) == 0)
; 407  : 	{
; 408  : 		hr = AtlHresultFromLastError();
; 409  : 		goto ReturnHR;
; 410  : 	}
; 411  : #else
; 412  : 	memcpy(szReg, szRegA, dwSize);

	mov	esi, DWORD PTR _hReg$[ebp]
	mov	ecx, edi
	mov	edx, ecx
	shr	ecx, 2
	mov	edi, eax
	rep movsd
	mov	ecx, edx

; 413  : #endif
; 414  : 
; 415  : 	// Append a NULL at the end.
; 416  : 	szReg[dwSize] = NULL;
; 417  : 
; 418  : 	hr = parser.RegisterBuffer(szReg, bRegister);

	mov	edx, DWORD PTR _bRegister$[ebp]
	and	ecx, 3
	rep movsb
	mov	eax, DWORD PTR _szReg$[ebp]
	mov	ecx, DWORD PTR _dwSize$[ebp]
	mov	BYTE PTR [ecx+eax], 0
	mov	eax, DWORD PTR _szReg$[ebp]
	push	edx
	push	eax
	lea	ecx, DWORD PTR _parser$[ebp]
	call	?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z ; ATL::CRegParser::RegisterBuffer
	mov	esi, DWORD PTR _hInstResDll$[ebp]
$L244050:
	mov	edi, eax
$ReturnHR$70322:

; 419  : 
; 420  : ReturnHR:
; 421  : 
; 422  : 	if (NULL != hInstResDll)
; 423  : 		FreeLibrary((HMODULE)hInstResDll);

	push	esi
	call	DWORD PTR __imp__FreeLibrary@4
$L70338:

; 424  : 	return hr;

	mov	eax, DWORD PTR _szReg$[ebp]
	lea	ecx, DWORD PTR _szReg$[ebp+4]
	cmp	eax, ecx
	je	SHORT $L244026
	lea	ecx, DWORD PTR _szReg$[ebp]
	call	?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap
$L244026:
	test	ebx, ebx
	je	SHORT $L244036
$L244035:
	mov	eax, ebx
	mov	ebx, DWORD PTR [ebx]
	push	eax
	call	_free
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $L244035
$L244036:
	mov	eax, edi
$L70267:

; 425  : }

	lea	esp, DWORD PTR [ebp-1088]
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L243930:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L243931:
	lea	ecx, DWORD PTR _szReg$[ebp]
	jmp	??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::~CTempBuffer<char,1024,ATL::CCRTAllocator>
__ehhandler$?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z:
	mov	eax, OFFSET FLAT:$T244042
	jmp	___CxxFrameHandler
text$x	ENDS
?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ENDP ; ATL::CRegObject::RegisterFromResource
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 313  : 		Allocator::Free( m_p );

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	_free
	pop	ecx

; 314  : 	}

	ret	0
?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

	mov	eax, DWORD PTR _nBytes$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	_malloc
	add	esp, 4

; 294  : 		if( p == NULL )

	test	eax, eax
	jne	SHORT $L237188

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L244069:
$L237188:

; 297  : 		}
; 298  : 		m_p = p;

	mov	DWORD PTR [esi], eax
	pop	esi

; 299  : 	}

	ret	4
$L244068:
?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::AllocateHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::~CTempBuffer<char,1024,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+4]
	cmp	edx, eax
	je	SHORT $L235306

; 227  : 		{
; 228  : 			FreeHeap();

	jmp	?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::FreeHeap
$L235306:

; 229  : 		}
; 230  : 	}

	ret	0
??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,1024,ATL::CCRTAllocator>::~CTempBuffer<char,1024,ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z ; ATL::CRegParser::PreProcessBuffer
PUBLIC	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ		; ATL::CRegParser::SkipWhiteSpace
PUBLIC	?NextToken@CRegParser@ATL@@IAEJPAD@Z		; ATL::CRegParser::NextToken
PUBLIC	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
PUBLIC	?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z ; ATL::CRegParser::HKeyFromString
EXTRN	__chkstk:NEAR
EXTRN	__imp__CoTaskMemFree@4:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT
_szReg$ = -4104						; size = 4
_szToken$ = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_szBuffer$ = 8						; size = 4
_bRegister$ = 12					; size = 4
?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z PROC NEAR	; ATL::CRegParser::RegisterBuffer, COMDAT
; _this$ = ecx

; 1092 : {

	mov	eax, 4104				; 00001008H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	esi
	push	edi
	mov	edi, ecx

; 1093 : 	TCHAR   szToken[MAX_VALUE];
; 1094 : 	HRESULT hr = S_OK;
; 1095 : 
; 1096 : 	LPTSTR szReg = NULL;
; 1097 : 	hr = PreProcessBuffer(szBuffer, &szReg);

	lea	ecx, DWORD PTR _szReg$[esp+4112]
	mov	DWORD PTR __$ArrayPad$[esp+4112], eax
	mov	eax, DWORD PTR _szBuffer$[esp+4108]
	push	ecx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _szReg$[esp+4120], 0
	call	?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z ; ATL::CRegParser::PreProcessBuffer
	mov	esi, eax

; 1098 : 	if (FAILED(hr))

	test	esi, esi

; 1099 : 		return hr;

	jl	$L244165

; 1100 : 
; 1101 : 	ATLTRACE(atlTraceRegistrar, 0, szReg);
; 1102 : 	ATLTRACE(atlTraceRegistrar, 0, _T("\n"));
; 1103 : 
; 1104 : 	m_pchCur = szReg;

	mov	eax, DWORD PTR _szReg$[esp+4112]
	mov	DWORD PTR [edi], eax

; 1105 : 
; 1106 : 	// Preprocess szReg
; 1107 : 
; 1108 : 	while (NULL != *m_pchCur)

	cmp	BYTE PTR [eax], 0
	je	$L244159
	push	ebx
	push	ebp
$L70932:

; 1109 : 	{
; 1110 : 		if (FAILED(hr = NextToken(szToken)))

	lea	edx, DWORD PTR _szToken$[esp+4120]
	push	edx
	mov	ecx, edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	test	esi, esi
	jl	SHORT $L244163

; 1111 : 			break;
; 1112 : 		HKEY hkBase;
; 1113 : 		if ((hkBase = HKeyFromString(szToken)) == NULL)

	lea	eax, DWORD PTR _szToken$[esp+4120]
	push	eax
	call	?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z ; ATL::CRegParser::HKeyFromString
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	je	$L244155

; 1114 : 		{
; 1115 : 			ATLTRACE(atlTraceRegistrar, 0, _T("HKeyFromString failed on %s\n"), szToken);
; 1116 : 			hr = GenerateError(E_ATL_BAD_HKEY);
; 1117 : 			break;
; 1118 : 		}
; 1119 : 
; 1120 : 		if (FAILED(hr = NextToken(szToken)))

	lea	ecx, DWORD PTR _szToken$[esp+4120]
	push	ecx
	mov	ecx, edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	test	esi, esi
	jl	SHORT $L244163

; 1121 : 			break;
; 1122 : 
; 1123 : 		if (chLeftBracket != *szToken)

	cmp	BYTE PTR _szToken$[esp+4120], 123	; 0000007bH
	jne	$L244155

; 1128 : 		}
; 1129 : 		if (bRegister)

	mov	eax, DWORD PTR _bRegister$[esp+4116]
	test	eax, eax

; 1130 : 		{
; 1131 : 			LPTSTR szRegAtRegister = m_pchCur;
; 1132 : 			hr = RegisterSubkeys(szToken, hkBase, bRegister);

	mov	ecx, edi
	push	0
	je	SHORT $L70941
	mov	ebx, DWORD PTR [edi]
	push	eax
	push	ebp
	lea	edx, DWORD PTR _szToken$[esp+4132]
	push	edx
	call	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
	mov	esi, eax

; 1133 : 			if (FAILED(hr))

	test	esi, esi
	jge	SHORT $L70947

; 1134 : 			{
; 1135 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Failed to register, cleaning up!\n"));
; 1136 : 				m_pchCur = szRegAtRegister;
; 1137 : 				RegisterSubkeys(szToken, hkBase, FALSE);

	push	0
	push	0
	push	ebp
	lea	edx, DWORD PTR _szToken$[esp+4132]
	push	edx
	mov	ecx, edi
	mov	DWORD PTR [edi], ebx
	call	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
$L244163:
	pop	ebp
	pop	ebx
$L244159:

; 1148 : 	}
; 1149 : 	CoTaskMemFree(szReg);

	mov	eax, DWORD PTR _szReg$[esp+4112]
	push	eax
	call	DWORD PTR __imp__CoTaskMemFree@4
$L244165:

; 1150 : 	return hr;
; 1151 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+4112]
	pop	edi
	mov	eax, esi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4104				; 00001008H
	ret	8
$L70941:

; 1138 : 				break;
; 1139 : 			}
; 1140 : 		}
; 1141 : 		else
; 1142 : 		{
; 1143 : 			if (FAILED(hr = RegisterSubkeys(szToken, hkBase, bRegister)))

	push	0
	push	ebp
	lea	eax, DWORD PTR _szToken$[esp+4132]
	push	eax
	call	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
	mov	esi, eax
	test	esi, esi
	jl	SHORT $L244163
$L70947:

; 1144 : 				break;
; 1145 : 		}
; 1146 : 
; 1147 : 		SkipWhiteSpace();

	mov	ecx, edi
	call	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::SkipWhiteSpace
	mov	ecx, DWORD PTR [edi]
	cmp	BYTE PTR [ecx], 0
	jne	$L70932

; 1138 : 				break;
; 1139 : 			}
; 1140 : 		}
; 1141 : 		else
; 1142 : 		{
; 1143 : 			if (FAILED(hr = RegisterSubkeys(szToken, hkBase, bRegister)))

	jmp	SHORT $L244163
$L244155:

; 1124 : 		{
; 1125 : 			ATLTRACE(atlTraceRegistrar, 0, _T("Syntax error, expecting a {, found a %s\n"), szToken);
; 1126 : 			hr = GenerateError(E_ATL_MISSING_OPENKEY_TOKEN);

	mov	esi, -2147352567			; 80020009H

; 1127 : 			break;

	jmp	SHORT $L244163
?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z ENDP		; ATL::CRegParser::RegisterBuffer
_TEXT	ENDS
PUBLIC	?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B ; `ATL::CRegParser::HKeyFromString'::`3'::map
PUBLIC	??_C@_04OHBKMIBJ@HKCR?$AA@			; `string'
PUBLIC	??_C@_04KIFLFONO@HKCU?$AA@			; `string'
PUBLIC	??_C@_04CBBMIBLK@HKLM?$AA@			; `string'
PUBLIC	??_C@_03DLBIJLAB@HKU?$AA@			; `string'
PUBLIC	??_C@_04OFOCGAOH@HKPD?$AA@			; `string'
PUBLIC	??_C@_04POMNGLEL@HKDD?$AA@			; `string'
PUBLIC	??_C@_04LEMDOLAJ@HKCC?$AA@			; `string'
PUBLIC	??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@	; `string'
PUBLIC	??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@	; `string'
PUBLIC	??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@	; `string'
PUBLIC	??_C@_0L@OEMMANAM@HKEY_USERS?$AA@		; `string'
PUBLIC	??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@	; `string'
PUBLIC	??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@		; `string'
PUBLIC	??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@	; `string'
EXTRN	__imp__lstrcmpiA@8:NEAR
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT
?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B DD FLAT:??_C@_04OHBKMIBJ@HKCR?$AA@ ; `ATL::CRegParser::HKeyFromString'::`3'::map
	DD	080000000H
	DD	FLAT:??_C@_04KIFLFONO@HKCU?$AA@
	DD	080000001H
	DD	FLAT:??_C@_04CBBMIBLK@HKLM?$AA@
	DD	080000002H
	DD	FLAT:??_C@_03DLBIJLAB@HKU?$AA@
	DD	080000003H
	DD	FLAT:??_C@_04OFOCGAOH@HKPD?$AA@
	DD	080000004H
	DD	FLAT:??_C@_04POMNGLEL@HKDD?$AA@
	DD	080000006H
	DD	FLAT:??_C@_04LEMDOLAJ@HKCC?$AA@
	DD	080000005H
	DD	FLAT:??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
	DD	080000000H
	DD	FLAT:??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
	DD	080000001H
	DD	FLAT:??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
	DD	080000002H
	DD	FLAT:??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
	DD	080000003H
	DD	FLAT:??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
	DD	080000004H
	DD	FLAT:??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
	DD	080000006H
	DD	FLAT:??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
	DD	080000005H
CONST	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT
??_C@_04OHBKMIBJ@HKCR?$AA@ DB 'HKCR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT
??_C@_04KIFLFONO@HKCU?$AA@ DB 'HKCU', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT
??_C@_04CBBMIBLK@HKLM?$AA@ DB 'HKLM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT
??_C@_03DLBIJLAB@HKU?$AA@ DB 'HKU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT
??_C@_04OFOCGAOH@HKPD?$AA@ DB 'HKPD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT
??_C@_04POMNGLEL@HKDD?$AA@ DB 'HKDD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT
??_C@_04LEMDOLAJ@HKCC?$AA@ DB 'HKCC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT
??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@ DB 'HKEY_CLASSES_ROOT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT
??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@ DB 'HKEY_CURRENT_USER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT
??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@ DB 'HKEY_LOCAL_MACHINE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT
??_C@_0L@OEMMANAM@HKEY_USERS?$AA@ DB 'HKEY_USERS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT
??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@ DB 'HKEY_PERFORMANCE_DATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT
??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@ DB 'HKEY_DYN_DATA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT
??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@ DB 'HKEY_CURRENT_CONFIG', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT
_szToken$ = 8						; size = 4
?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z PROC NEAR ; ATL::CRegParser::HKeyFromString, COMDAT

; 686  : {

	push	ebx

; 687  : 	struct keymap
; 688  : 	{
; 689  : 		LPCTSTR lpsz;
; 690  : 		HKEY hkey;
; 691  : 	};
; 692  : 	static const keymap map[] = {
; 693  : 		{_T("HKCR"), HKEY_CLASSES_ROOT},
; 694  : 		{_T("HKCU"), HKEY_CURRENT_USER},
; 695  : 		{_T("HKLM"), HKEY_LOCAL_MACHINE},
; 696  : 		{_T("HKU"),  HKEY_USERS},
; 697  : 		{_T("HKPD"), HKEY_PERFORMANCE_DATA},
; 698  : 		{_T("HKDD"), HKEY_DYN_DATA},
; 699  : 		{_T("HKCC"), HKEY_CURRENT_CONFIG},
; 700  : 		{_T("HKEY_CLASSES_ROOT"), HKEY_CLASSES_ROOT},
; 701  : 		{_T("HKEY_CURRENT_USER"), HKEY_CURRENT_USER},
; 702  : 		{_T("HKEY_LOCAL_MACHINE"), HKEY_LOCAL_MACHINE},
; 703  : 		{_T("HKEY_USERS"), HKEY_USERS},
; 704  : 		{_T("HKEY_PERFORMANCE_DATA"), HKEY_PERFORMANCE_DATA},
; 705  : 		{_T("HKEY_DYN_DATA"), HKEY_DYN_DATA},
; 706  : 		{_T("HKEY_CURRENT_CONFIG"), HKEY_CURRENT_CONFIG}
; 707  : 	};
; 708  : 
; 709  : 	for (int i=0;i<sizeof(map)/sizeof(keymap);i++)

	mov	ebx, DWORD PTR __imp__lstrcmpiA@8
	push	esi
	push	edi
	mov	edi, DWORD PTR _szToken$[esp+8]
	xor	esi, esi
	npad	1
$L70634:

; 710  : 	{
; 711  : 		if (!lstrcmpi(szToken, map[i].lpsz))

	mov	eax, DWORD PTR ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B[esi*8]
	push	eax
	push	edi
	call	ebx
	test	eax, eax
	je	SHORT $L244170
	inc	esi
	cmp	esi, 14					; 0000000eH
	jb	SHORT $L70634
	pop	edi
	pop	esi

; 713  : 	}
; 714  : 	return NULL;

	xor	eax, eax
	pop	ebx

; 715  : }

	ret	0
$L244170:

; 712  : 			return map[i].hkey;

	mov	eax, DWORD PTR ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B[esi*8+4]
	pop	edi
	pop	esi
	pop	ebx

; 715  : }

	ret	0
?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z ENDP	; ATL::CRegParser::HKeyFromString
_TEXT	ENDS
EXTRN	__imp__CharNextA@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT
?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ PROC NEAR	; ATL::CRegParser::SkipWhiteSpace, COMDAT
; _this$ = ecx

; 757  : {

	push	esi
	push	edi
	mov	edi, DWORD PTR __imp__CharNextA@4
	mov	esi, ecx
	npad	6
$L70665:

; 758  : 	while(IsSpace(*m_pchCur))

	mov	eax, DWORD PTR [esi]
	movsx	ecx, BYTE PTR [eax]
	add	ecx, -9					; fffffff7H
	cmp	ecx, 23					; 00000017H
	ja	SHORT $L244177
	movzx	ecx, BYTE PTR $L244184[ecx]
	jmp	DWORD PTR $L244185[ecx*4]
$L244178:

; 759  : 		m_pchCur = CharNext(m_pchCur);

	push	eax
	call	edi
	mov	DWORD PTR [esi], eax
	jmp	SHORT $L70665

; 758  : 	while(IsSpace(*m_pchCur))

$L244177:
	pop	edi
	pop	esi

; 760  : }

	ret	0
	npad	3
$L244185:
	DD	$L244178
	DD	$L244177
$L244184:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ENDP		; ATL::CRegParser::SkipWhiteSpace
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT
_szOrig$ = 8						; size = 4
_szToken$ = 8						; size = 4
?NextToken@CRegParser@ATL@@IAEJPAD@Z PROC NEAR		; ATL::CRegParser::NextToken, COMDAT
; _this$ = ecx

; 763  : {

	push	esi
	mov	esi, ecx

; 764  : 	SkipWhiteSpace();

	call	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::SkipWhiteSpace

; 765  : 
; 766  : 	// NextToken cannot be called at EOS
; 767  : 	if (NULL == *m_pchCur)

	mov	ecx, DWORD PTR [esi]
	mov	al, BYTE PTR [ecx]
	test	al, al
	jne	SHORT $L70671

; 768  : 		return GenerateError(E_ATL_UNEXPECTED_EOS);

	mov	eax, -2147352567			; 80020009H
	pop	esi

; 816  : }

	ret	4
$L70671:

; 769  : 
; 770  : 	LPCTSTR szOrig = szToken;
; 771  : 	// handle quoted value / key
; 772  : 	if (chQuote == *m_pchCur)

	cmp	al, 39					; 00000027H
	push	ebx
	push	ebp

; 773  : 	{
; 774  : 		m_pchCur = CharNext(m_pchCur);

	mov	ebp, DWORD PTR __imp__CharNextA@4
	push	edi
	mov	edi, DWORD PTR _szToken$[esp+12]
	mov	DWORD PTR _szOrig$[esp+12], edi
	jne	$L70688
	push	ecx
	call	ebp
	mov	DWORD PTR [esi], eax

; 775  : 
; 776  : 		while (NULL != *m_pchCur && !EndOfVar())

	cmp	BYTE PTR [eax], 0
	je	SHORT $L70676
	npad	4
$L70675:
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 39			; 00000027H
	jne	SHORT $L244197
	push	eax
	call	ebp
	cmp	BYTE PTR [eax], 39			; 00000027H
	jne	SHORT $L70676
$L244197:

; 777  : 		{
; 778  : 			if (chQuote == *m_pchCur) // If it is a quote that means we must skip it

	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 39			; 00000027H
	jne	SHORT $L70677

; 779  : 				m_pchCur = CharNext(m_pchCur);

	push	eax
	call	ebp
	mov	DWORD PTR [esi], eax
$L70677:

; 780  : 
; 781  : 			LPTSTR pchPrev = m_pchCur;

	mov	ebx, DWORD PTR [esi]

; 782  : 			m_pchCur = CharNext(m_pchCur);

	push	ebx
	call	ebp

; 783  : 
; 784  : 			if (szToken + sizeof(WORD) >= MAX_VALUE + szOrig)

	mov	ecx, DWORD PTR _szOrig$[esp+12]
	add	ecx, 4096				; 00001000H
	lea	edx, DWORD PTR [edi+2]
	cmp	edx, ecx
	mov	DWORD PTR [esi], eax
	jae	SHORT $L244219

; 786  : 			for (int i = 0; pchPrev+i < m_pchCur; i++, szToken++)

	cmp	ebx, eax
	jae	SHORT $L70684
	mov	eax, ebx
	npad	7
$L70682:

; 787  : 				*szToken = *(pchPrev+i);

	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edi], cl
	mov	ecx, DWORD PTR [esi]
	inc	eax
	inc	edi
	cmp	eax, ecx
	jb	SHORT $L70682
$L70684:

; 775  : 
; 776  : 		while (NULL != *m_pchCur && !EndOfVar())

	mov	edx, DWORD PTR [esi]
	cmp	BYTE PTR [edx], 0
	jne	SHORT $L70675
$L70676:

; 788  : 		}
; 789  : 
; 790  : 		if (NULL == *m_pchCur)

	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 0

; 791  : 		{
; 792  : 			ATLTRACE(atlTraceRegistrar, 0, _T("NextToken : Unexpected End of File\n"));
; 793  : 			return GenerateError(E_ATL_UNEXPECTED_EOS);

	je	SHORT $L244219

; 794  : 		}
; 795  : 
; 796  : 		*szToken = NULL;

	mov	BYTE PTR [edi], 0

; 797  : 		m_pchCur = CharNext(m_pchCur);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	ebp
	pop	edi
	pop	ebp
	mov	DWORD PTR [esi], eax
	pop	ebx

; 814  : 	}
; 815  : 	return S_OK;

	xor	eax, eax
	pop	esi

; 816  : }

	ret	4
$L244219:
	pop	edi
	pop	ebp
	pop	ebx

; 785  : 				return GenerateError(E_ATL_VALUE_TOO_LARGE);

	mov	eax, -2147352567			; 80020009H
	pop	esi

; 816  : }

	ret	4
	npad	7
$L70688:

; 798  : 	}
; 799  : 
; 800  : 	else
; 801  : 	{   
; 802  : 		// Handle non-quoted ie parse up till first "White Space"
; 803  : 		while (NULL != *m_pchCur && !IsSpace(*m_pchCur))

	mov	ebx, DWORD PTR [esi]
	movsx	eax, BYTE PTR [ebx]
	add	eax, -9					; fffffff7H
	cmp	eax, 23					; 00000017H
	ja	SHORT $L244207
	movzx	edx, BYTE PTR $L244228[eax]
	jmp	DWORD PTR $L244234[edx*4]
$L244207:

; 804  : 		{
; 805  : 			LPTSTR pchPrev = m_pchCur;
; 806  : 			m_pchCur = CharNext(m_pchCur);

	push	ebx
	call	ebp

; 807  : 			if (szToken + sizeof(WORD) >= MAX_VALUE + szOrig)

	mov	ecx, DWORD PTR _szOrig$[esp+12]
	add	ecx, 4096				; 00001000H
	lea	edx, DWORD PTR [edi+2]
	cmp	edx, ecx
	mov	DWORD PTR [esi], eax
	jae	SHORT $L244219

; 808  : 				return GenerateError(E_ATL_VALUE_TOO_LARGE);
; 809  : 			for (int i = 0; pchPrev+i < m_pchCur; i++, szToken++)

	cmp	ebx, eax
	jae	SHORT $L70696
	mov	eax, ebx
$L70694:

; 810  : 				*szToken = *(pchPrev+i);

	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edi], cl
	mov	ecx, DWORD PTR [esi]
	inc	eax
	inc	edi
	cmp	eax, ecx
	jb	SHORT $L70694
$L70696:

; 798  : 	}
; 799  : 
; 800  : 	else
; 801  : 	{   
; 802  : 		// Handle non-quoted ie parse up till first "White Space"
; 803  : 		while (NULL != *m_pchCur && !IsSpace(*m_pchCur))

	mov	edx, DWORD PTR [esi]
	cmp	BYTE PTR [edx], 0
	jne	SHORT $L70688
$L70689:

; 811  : 		}
; 812  : 
; 813  : 		*szToken = NULL;

	mov	BYTE PTR [edi], 0
	pop	edi
	pop	ebp
	pop	ebx

; 814  : 	}
; 815  : 	return S_OK;

	xor	eax, eax
	pop	esi

; 816  : }

	ret	4
	npad	2
$L244234:
	DD	$L70689
	DD	$L244207
$L244228:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?NextToken@CRegParser@ATL@@IAEJPAD@Z ENDP		; ATL::CRegParser::NextToken
_TEXT	ENDS
PUBLIC	??0CParseBuffer@CRegParser@ATL@@QAE@H@Z		; ATL::CRegParser::CParseBuffer::CParseBuffer
PUBLIC	??1CParseBuffer@CRegParser@ATL@@QAE@XZ		; ATL::CRegParser::CParseBuffer::~CParseBuffer
PUBLIC	?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z	; ATL::CRegParser::CParseBuffer::Append
PUBLIC	?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z ; ATL::CRegParser::CParseBuffer::AddString
PUBLIC	?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z		; ATL::CRegObject::StrFromMap
EXTRN	__imp__lstrcpynA@12:NEAR
;	COMDAT xdata$x
xdata$x	SEGMENT
$T244356 DD	0ffffffffH
	DD	FLAT:$L244241
$T244334 DD	019930520H
	DD	01H
	DD	FLAT:$T244356
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT
_pb$ = -68						; size = 12
$T244332 = -56						; size = 4
_hr$ = -52						; size = 4
_buf$70906 = -48					; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_lpszReg$ = 8						; size = 4
_ppszReg$ = 12						; size = 4
?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z PROC NEAR ; ATL::CRegParser::PreProcessBuffer, COMDAT
; _this$ = ecx

; 1014 : {

	push	-1
	push	__ehhandler$?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	ebx
	push	esi
	mov	esi, DWORD PTR _lpszReg$[esp+72]
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
	mov	eax, DWORD PTR _ppszReg$[esp+72]

; 1015 : 	ATLASSERT(lpszReg != NULL);
; 1016 : 	ATLASSERT(ppszReg != NULL);
; 1017 : 
; 1018 : 	if (lpszReg == NULL || ppszReg == NULL)

	xor	ebx, ebx
	cmp	esi, ebx
	push	edi
	mov	edi, ecx

; 1087 : 		*ppszReg = pb.Detach();

	mov	DWORD PTR $T244332[esp+80], eax
	je	$L70884

; 1015 : 	ATLASSERT(lpszReg != NULL);
; 1016 : 	ATLASSERT(ppszReg != NULL);
; 1017 : 
; 1018 : 	if (lpszReg == NULL || ppszReg == NULL)

	cmp	eax, ebx
	je	$L70884

; 1020 : 	
; 1021 : 	*ppszReg = NULL;
; 1022 : 	int nSize = lstrlen(lpszReg)*2;

	push	esi
	mov	DWORD PTR [eax], ebx
	call	DWORD PTR __imp__lstrlenA@4
	shl	eax, 1

; 1023 : 	CParseBuffer pb(nSize);

	push	eax
	lea	ecx, DWORD PTR _pb$[esp+84]
	call	??0CParseBuffer@CRegParser@ATL@@QAE@H@Z	; ATL::CRegParser::CParseBuffer::CParseBuffer

; 1024 : 	if (pb.p == NULL)

	cmp	DWORD PTR _pb$[esp+88], ebx
	mov	DWORD PTR __$EHRec$[esp+88], ebx
	jne	SHORT $L70888

; 1025 : 		return E_OUTOFMEMORY;

	push	ebx
	call	DWORD PTR __imp__CoTaskMemFree@4
	mov	eax, -2147024882			; 8007000eH
	jmp	$L70880
$L70888:

; 1026 : 	m_pchCur = lpszReg;

	mov	DWORD PTR [edi], esi

; 1027 : 	HRESULT hr = S_OK;
; 1028 : 
; 1029 : 	while (*m_pchCur != NULL) // look for end

	mov	al, BYTE PTR [esi]
	push	ebp
	xor	ebp, ebp
	cmp	al, bl
	mov	DWORD PTR _hr$[esp+84], ebp
	je	SHORT $L244348
	mov	ebp, DWORD PTR __imp__CharNextA@4
	npad	5
$L70894:

; 1030 : 	{
; 1031 : 		if (*m_pchCur == _T('%'))

	mov	esi, DWORD PTR [edi]
	cmp	BYTE PTR [esi], 37			; 00000025H

; 1032 : 		{
; 1033 : 			m_pchCur = CharNext(m_pchCur);

	push	esi
	jne	SHORT $L70896
	call	ebp
	mov	esi, eax
	mov	DWORD PTR [edi], esi

; 1034 : 			if (*m_pchCur == _T('%'))

	cmp	BYTE PTR [esi], 37			; 00000025H
	jne	SHORT $L70897

; 1035 : 			{
; 1036 : 				if (!pb.AddChar(m_pchCur))

	push	esi
$L70896:

; 1076 : 		{
; 1077 : 			if (!pb.AddChar(m_pchCur))

	call	ebp
	sub	eax, esi
	push	eax
	lea	ecx, DWORD PTR _pb$[esp+88]
	push	esi
	call	?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z ; ATL::CRegParser::CParseBuffer::Append
	test	eax, eax
	je	$L244344
$L70915:

; 1078 : 			{
; 1079 : 				hr = E_OUTOFMEMORY;
; 1080 : 				break;
; 1081 : 			}
; 1082 : 		}
; 1083 : 
; 1084 : 		m_pchCur = CharNext(m_pchCur);

	mov	eax, DWORD PTR [edi]
	push	eax
	call	ebp
	mov	ecx, eax
	mov	DWORD PTR [edi], eax
	cmp	BYTE PTR [ecx], bl
	jne	SHORT $L70894

; 1085 : 	}
; 1086 : 	if (SUCCEEDED(hr))

	mov	ebp, DWORD PTR _hr$[esp+84]
$L244348:

; 1087 : 		*ppszReg = pb.Detach();

	mov	eax, DWORD PTR _pb$[esp+92]
	mov	edx, DWORD PTR $T244332[esp+84]
	mov	DWORD PTR [edx], eax

; 1088 : 	return hr;

	mov	eax, ebx
	push	eax
	mov	DWORD PTR _pb$[esp+96], ebx
	mov	DWORD PTR _pb$[esp+88], ebx
	mov	DWORD PTR _pb$[esp+92], ebx
	call	DWORD PTR __imp__CoTaskMemFree@4
	mov	eax, ebp
	pop	ebp
	jmp	$L70880
$L70897:

; 1037 : 				{
; 1038 : 					hr = E_OUTOFMEMORY;
; 1039 : 					break;
; 1040 : 				}
; 1041 : 			}
; 1042 : 			else
; 1043 : 			{
; 1044 : 				LPTSTR lpszNext = StrChr(m_pchCur, _T('%'));

	cmp	esi, ebx
	je	SHORT $L244342
	mov	al, BYTE PTR [esi]
	cmp	al, bl
	je	SHORT $L244342
	npad	3
$L244256:
	cmp	al, 37					; 00000025H
	je	SHORT $L244338
	push	esi
	call	ebp
	mov	esi, eax
	mov	al, BYTE PTR [esi]
	cmp	al, bl
	jne	SHORT $L244256
$L244342:

; 1088 : 	return hr;

	mov	eax, DWORD PTR _pb$[esp+92]
	push	eax
	mov	ebp, -2147352567			; 80020009H
	call	DWORD PTR __imp__CoTaskMemFree@4
	mov	eax, ebp
	pop	ebp
	jmp	$L70880
$L244338:

; 1045 : 				if (lpszNext == NULL)

	cmp	esi, ebx
	je	SHORT $L244342

; 1046 : 				{
; 1047 : 					ATLTRACE(atlTraceRegistrar, 0, _T("Error no closing % found\n"));
; 1048 : 					hr = GenerateError(E_ATL_UNEXPECTED_EOS);
; 1049 : 					break;
; 1050 : 				}
; 1051 : 				if ((lpszNext-m_pchCur) > 31)

	mov	ecx, DWORD PTR [edi]
	mov	eax, esi
	sub	eax, ecx
	cmp	eax, 31					; 0000001fH
	jg	SHORT $L244341

; 1052 : 				{
; 1053 : 					hr = E_FAIL;
; 1054 : 					break;
; 1055 : 				}
; 1056 : 				int nLength = int(lpszNext - m_pchCur);
; 1057 : 				TCHAR buf[32];
; 1058 : 				lstrcpyn(buf, m_pchCur, nLength+1);

	inc	eax
	push	eax
	push	ecx
	lea	eax, DWORD PTR _buf$70906[esp+92]
	push	eax
	call	DWORD PTR __imp__lstrcpynA@12

; 1059 : 				LPCOLESTR lpszVar = m_pRegObj->StrFromMap(buf);

	lea	ecx, DWORD PTR _buf$70906[esp+84]
	push	ecx
	mov	ecx, DWORD PTR [edi+4]
	call	?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z	; ATL::CRegObject::StrFromMap

; 1060 : 				if (lpszVar == NULL)

	cmp	eax, ebx
	je	SHORT $L244342

; 1061 : 				{
; 1062 : 					hr = GenerateError(E_ATL_NOT_IN_MAP);
; 1063 : 					break;
; 1064 : 				}
; 1065 : 				if (!pb.AddString(lpszVar))

	push	eax
	lea	ecx, DWORD PTR _pb$[esp+88]
	call	?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z ; ATL::CRegParser::CParseBuffer::AddString
	test	eax, eax
	je	SHORT $L244344

; 1066 : 				{
; 1067 : 					hr = E_OUTOFMEMORY;
; 1068 : 					break;
; 1069 : 				}
; 1070 : 
; 1071 : 				while (m_pchCur != lpszNext)

	cmp	DWORD PTR [edi], esi
	je	$L70915
	npad	5
$L70912:

; 1072 : 					m_pchCur = CharNext(m_pchCur);

	mov	edx, DWORD PTR [edi]
	push	edx
	call	ebp
	cmp	eax, esi
	mov	DWORD PTR [edi], eax
	jne	SHORT $L70912

; 1073 : 			}
; 1074 : 		}
; 1075 : 		else

	jmp	$L70915
$L244341:

; 1088 : 	return hr;

	mov	eax, DWORD PTR _pb$[esp+92]
	push	eax
	mov	ebp, -2147467259			; 80004005H
	call	DWORD PTR __imp__CoTaskMemFree@4
	mov	eax, ebp
	pop	ebp
	jmp	SHORT $L70880
$L244344:
	mov	eax, DWORD PTR _pb$[esp+92]
	push	eax
	mov	ebp, -2147024882			; 8007000eH
	call	DWORD PTR __imp__CoTaskMemFree@4
	mov	eax, ebp
	pop	ebp
	jmp	SHORT $L70880
$L70884:

; 1019 : 		return E_POINTER;

	mov	eax, -2147467261			; 80004003H
$L70880:

; 1089 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L244241:
	lea	ecx, DWORD PTR _pb$[ebp]
	jmp	??1CParseBuffer@CRegParser@ATL@@QAE@XZ	; ATL::CRegParser::CParseBuffer::~CParseBuffer
__ehhandler$?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z:
	mov	eax, OFFSET FLAT:$T244334
	jmp	___CxxFrameHandler
text$x	ENDS
?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z ENDP	; ATL::CRegParser::PreProcessBuffer
EXTRN	__imp__CoTaskMemAlloc@4:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT
_nInitial$ = 8						; size = 4
??0CParseBuffer@CRegParser@ATL@@QAE@H@Z PROC NEAR	; ATL::CRegParser::CParseBuffer::CParseBuffer, COMDAT
; _this$ = ecx

; 183  : 		{
; 184  : 			if (nInitial < 100)

	mov	eax, DWORD PTR _nInitial$[esp-4]
	cmp	eax, 100				; 00000064H
	push	esi
	mov	esi, ecx
	jge	SHORT $L70101

; 185  : 				nInitial = 1000;

	mov	eax, 1000				; 000003e8H
$L70101:

; 186  : 			nPos = 0;
; 187  : 			nSize = nInitial;
; 188  : 			p = (LPTSTR) CoTaskMemAlloc(nSize*sizeof(TCHAR));

	push	eax
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], eax
	call	DWORD PTR __imp__CoTaskMemAlloc@4

; 189  : 			if (p != NULL)

	test	eax, eax
	mov	DWORD PTR [esi+8], eax
	je	SHORT $L244362

; 190  : 				*p = NULL;

	mov	BYTE PTR [eax], 0
$L244362:

; 191  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0CParseBuffer@CRegParser@ATL@@QAE@H@Z ENDP		; ATL::CRegParser::CParseBuffer::CParseBuffer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CParseBuffer@CRegParser@ATL@@QAE@XZ PROC NEAR	; ATL::CRegParser::CParseBuffer::~CParseBuffer, COMDAT
; _this$ = ecx

; 194  : 			CoTaskMemFree(p);

	mov	eax, DWORD PTR [ecx+8]
	push	eax
	call	DWORD PTR __imp__CoTaskMemFree@4

; 195  : 		}

	ret	0
??1CParseBuffer@CRegParser@ATL@@QAE@XZ ENDP		; ATL::CRegParser::CParseBuffer::~CParseBuffer
_TEXT	ENDS
EXTRN	__imp__CoTaskMemRealloc@8:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT
_pch$ = 8						; size = 4
_nChars$ = 12						; size = 4
?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z PROC NEAR ; ATL::CRegParser::CParseBuffer::Append, COMDAT
; _this$ = ecx

; 197  : 		{

	push	ebx
	mov	ebx, ecx

; 198  : 			ATLASSERT(p != NULL);
; 199  : 			if ((nPos + nChars + 1) >= nSize)

	mov	eax, DWORD PTR [ebx]
	push	ebp
	mov	ebp, DWORD PTR _nChars$[esp+4]
	lea	ecx, DWORD PTR [eax+ebp+1]
	cmp	ecx, DWORD PTR [ebx+4]
	jl	SHORT $L70110
$L70112:

; 200  : 			{
; 201  : 				while ((nPos + nChars + 1) >= nSize)
; 202  : 					nSize *=2;

	mov	eax, DWORD PTR [ebx+4]
	shl	eax, 1
	mov	DWORD PTR [ebx+4], eax
	mov	edx, DWORD PTR [ebx]
	lea	ecx, DWORD PTR [edx+ebp+1]
	mov	edx, eax
	cmp	ecx, edx
	jge	SHORT $L70112

; 203  : 				LPTSTR pTemp = (LPTSTR) CoTaskMemRealloc(p, nSize*sizeof(TCHAR));

	mov	edx, DWORD PTR [ebx+8]
	push	eax
	push	edx
	call	DWORD PTR __imp__CoTaskMemRealloc@8

; 204  : 				if (pTemp == NULL)

	test	eax, eax
	jne	SHORT $L70117
	pop	ebp
	pop	ebx

; 212  : 		}

	ret	8
$L70117:

; 205  : 					return FALSE;
; 206  : 				p = pTemp;

	mov	DWORD PTR [ebx+8], eax
$L70110:

; 207  : 			}
; 208  : 			memcpy(p + nPos, pch, int(nChars * sizeof(TCHAR)));

	mov	eax, DWORD PTR [ebx+8]
	push	esi
	mov	esi, DWORD PTR _pch$[esp+8]
	push	edi
	mov	edi, DWORD PTR [ebx]
	add	edi, eax
	mov	ecx, ebp
	mov	eax, ecx
	shr	ecx, 2
	rep movsd
	mov	ecx, eax
	and	ecx, 3
	rep movsb

; 209  : 			nPos += nChars;

	mov	eax, DWORD PTR [ebx]

; 210  : 			*(p + nPos) = NULL;

	mov	ecx, DWORD PTR [ebx+8]
	pop	edi
	add	eax, ebp
	pop	esi
	mov	DWORD PTR [ebx], eax
	pop	ebp
	mov	BYTE PTR [eax+ecx], 0

; 211  : 			return TRUE;			

	mov	eax, 1
	pop	ebx

; 212  : 		}

	ret	8
?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z ENDP	; ATL::CRegParser::CParseBuffer::Append
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__acp_ex$ = -4						; size = 4
_lpsz$ = 8						; size = 4
?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z PROC NEAR ; ATL::CRegParser::CParseBuffer::AddString, COMDAT
; _this$ = ecx

; 225  : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
	push	esi

; 226  : 			if (lpsz == NULL)

	mov	esi, DWORD PTR _lpsz$[ebp]
	test	esi, esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	jne	SHORT $L70124

; 227  : 				return FALSE;

	xor	eax, eax

; 235  : 		}

	lea	esp, DWORD PTR [ebp-20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$L70124:

; 228  : 			USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 229  : 			LPCTSTR lpszT = OLE2CT_EX(lpsz, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	push	esi
	mov	DWORD PTR __acp_ex$[ebp], eax
	xor	edi, edi
	call	DWORD PTR __imp__lstrlenW@4
	lea	esi, DWORD PTR [eax+eax+2]
	cmp	esi, 1024				; 00000400H
	jg	SHORT $L244374
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L244374
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	ebx, esp
	jmp	SHORT $L244393
$L244374:
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L244406
	mov	DWORD PTR [eax], 0
	mov	edi, eax
	lea	ebx, DWORD PTR [eax+8]
$L244393:
	test	ebx, ebx
	je	SHORT $L244406
	mov	ecx, DWORD PTR _lpsz$[ebp]
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	esi
	push	ebx
	push	-1
	push	ecx
	push	0
	push	edx
	mov	BYTE PTR [ebx], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, ebx
	jmp	SHORT $L244404
$L244406:
	xor	esi, esi
$L244404:

; 230  : #ifdef _UNICODE
; 231  : 			if (lpszT == NULL)
; 232  : 				return FALSE;
; 233  : #endif
; 234  : 			return Append(lpszT, (int)lstrlen(lpszT));

	push	esi
	call	DWORD PTR __imp__lstrlenA@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	eax
	push	esi
	call	?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z ; ATL::CRegParser::CParseBuffer::Append
	test	edi, edi
	mov	esi, eax
	je	SHORT $L244417
	npad	6
$L244416:
	mov	eax, edi
	mov	edi, DWORD PTR [edi]
	push	eax
	call	_free
	add	esp, 4
	test	edi, edi
	jne	SHORT $L244416
$L244417:
	mov	eax, esi

; 235  : 		}

	lea	esp, DWORD PTR [ebp-20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z ENDP	; ATL::CRegParser::CParseBuffer::AddString
_TEXT	ENDS
PUBLIC	?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Lookup
; Function compile flags: /Ogtpy
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT
_lpszKey$ = 8						; size = 4
?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z PROC NEAR	; ATL::CRegObject::StrFromMap, COMDAT
; _this$ = ecx

; 519  : {

	push	esi
	push	edi
	mov	esi, ecx

; 520  : 	m_csMap.Lock();

	lea	edi, DWORD PTR [esi+16]
	push	edi
	call	DWORD PTR __imp__EnterCriticalSection@4

; 521  : 	LPCOLESTR lpsz = m_RepMap.Lookup(lpszKey);

	lea	eax, DWORD PTR _lpszKey$[esp+4]
	push	eax
	lea	ecx, DWORD PTR [esi+4]
	call	?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Lookup

; 522  : 	if (lpsz == NULL) // not found!!
; 523  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Map Entry not found\n"));
; 524  : 	m_csMap.Unlock();

	push	edi
	mov	esi, eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	edi

; 525  : 	return lpsz;

	mov	eax, esi
	pop	esi

; 526  : }

	ret	4
?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z ENDP		; ATL::CRegObject::StrFromMap
_TEXT	ENDS
PUBLIC	?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::FindKey
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpcoll.h
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Lookup, COMDAT
; _this$ = ecx

; 364  : 		int nIndex = FindKey(key);

	mov	eax, DWORD PTR _key$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::FindKey

; 365  : 		if(nIndex == -1)

	cmp	eax, -1
	jne	SHORT $L235288

; 366  : 			return NULL;    // must be able to convert

	xor	eax, eax
	pop	esi

; 368  : 	}

	ret	4
$L235288:

; 367  : 		return GetValueAt(nIndex);

	test	eax, eax
	jl	SHORT $L244472
	cmp	eax, DWORD PTR [esi+8]
	jge	SHORT $L244472
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+eax*4]
	pop	esi

; 368  : 	}

	ret	4
$L244472:
	push	0
	push	0
	push	1
	push	-1073741684				; c000008cH
	call	DWORD PTR __imp__RaiseException@16
$L244476:
$L244475:
	int	3
?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::Lookup
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT
_key$ = 8						; size = 4
?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z PROC NEAR ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::FindKey, COMDAT
; _this$ = ecx

; 394  : 	{

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 395  : 		for(int i = 0; i < m_nSize; i++)

	mov	eax, DWORD PTR [edi+8]
	xor	esi, esi
	test	eax, eax
	jle	SHORT $L236558
	mov	ebx, DWORD PTR _key$[esp+12]
	mov	ebp, DWORD PTR __imp__lstrcmpiA@8
	npad	7
$L236556:

; 396  : 		{
; 397  : 			if(TEqual::IsEqualKey(m_aKey[i], key))

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+esi*4]
	push	eax
	push	ecx
	call	ebp
	test	eax, eax
	je	SHORT $L244488
	mov	eax, DWORD PTR [edi+8]
	inc	esi
	cmp	esi, eax
	jl	SHORT $L236556
$L236558:
	pop	edi
	pop	esi
	pop	ebp

; 399  : 		}
; 400  : 		return -1;  // not found

	or	eax, -1
	pop	ebx

; 401  : 	}

	ret	4
$L244488:
	pop	edi

; 398  : 				return i;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 401  : 	}

	ret	4
?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z ENDP ; ATL::CSimpleMap<char *,unsigned short *,ATL::CExpansionVectorEqualHelper>::FindKey
_TEXT	ENDS
PUBLIC	?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z ; ATL::CRegParser::AddValue
PUBLIC	?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z	; ATL::CRegParser::HasSubKeys
PUBLIC	?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::SkipAssignment
PUBLIC	??1CRegKey@ATL@@QAE@XZ				; ATL::CRegKey::~CRegKey
PUBLIC	?Close@CRegKey@ATL@@QAEJXZ			; ATL::CRegKey::Close
PUBLIC	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z	; ATL::CRegKey::RecurseDeleteKey
PUBLIC	?AtlHresultFromWin32@ATL@@YAJK@Z		; ATL::AtlHresultFromWin32
EXTRN	__imp__RegCreateKeyExA@36:NEAR
EXTRN	__imp__RegDeleteKeyA@8:NEAR
EXTRN	__imp__RegDeleteValueA@8:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
xdata$x	SEGMENT
$T245011 DD	0ffffffffH
	DD	FLAT:$L244505
	DD	00H
	DD	FLAT:$L244506
	DD	00H
	DD	FLAT:$L244507
$T244945 DD	019930520H
	DD	03H
	DD	FLAT:$T245011
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT
_keyCur$ = -564						; size = 4
_hKey$244803 = -560					; size = 4
_hKey$244787 = -560					; size = 4
_hKey$244772 = -560					; size = 4
_hKey$244686 = -560					; size = 4
_rk$70997 = -560					; size = 4
_bDelete$ = -560					; size = 4
$T244941 = -556						; size = 4
_hKey$244832 = -552					; size = 4
_rkForceRemove$70974 = -552				; size = 4
$T244943 = -548						; size = 4
_bInRecovery$ = -544					; size = 4
_dw$244802 = -540					; size = 4
_szKey$ = -536						; size = 260
_szValueName$70989 = -276				; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_szToken$ = 8						; size = 4
_hkParent$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_bRecover$ = 20						; size = 4
?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z PROC NEAR ; ATL::CRegParser::RegisterSubkeys, COMDAT
; _this$ = ecx

; 1154 : {

	push	-1
	push	__ehhandler$?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 552				; 00000228H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	ebx
	mov	DWORD PTR __$ArrayPad$[esp+568], eax
	mov	eax, DWORD PTR _hkParent$[esp+564]
	push	esi

; 1155 : 	CRegKey keyCur;

	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR _szToken$[esp+572]

; 1156 : 	LONG    lRes;
; 1157 : 	TCHAR  szKey[_MAX_PATH];
; 1158 : 	BOOL    bDelete = TRUE;
; 1159 : 	BOOL    bInRecovery = bRecover;

	mov	DWORD PTR $T244941[esp+576], ecx
	mov	DWORD PTR $T244943[esp+576], eax
	mov	DWORD PTR _keyCur$[esp+576], ebx
	mov	edx, DWORD PTR _bRecover$[esp+572]

; 1160 : 	HRESULT hr = S_OK;
; 1161 : 
; 1162 : 	ATLTRACE(atlTraceRegistrar, 2, _T("Num Els = %d\n"), cbNeverDelete);
; 1163 : 	if (FAILED(hr = NextToken(szToken)))

	push	edi
	mov	DWORD PTR __$EHRec$[esp+588], ebx
	mov	DWORD PTR _bInRecovery$[esp+580], edx
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jge	SHORT $L244950

; 1164 : 		return hr;

	lea	ecx, DWORD PTR _keyCur$[esp+576]
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close
	mov	eax, esi
	jmp	$L70954
$L244950:

; 1165 : 
; 1166 : 
; 1167 : 	while (*szToken != chRightBracket) // Continue till we see a }

	cmp	BYTE PTR [edi], 125			; 0000007dH
	push	ebp
	je	$L244997
$L70966:

; 1168 : 	{
; 1169 : 		bDelete = TRUE;
; 1170 : 		BOOL bTokenDelete = !lstrcmpi(szToken, szDelete);

	mov	esi, DWORD PTR __imp__lstrcmpiA@8
	push	OFFSET FLAT:??_C@_06JBKGCNBB@Delete?$AA@
	push	edi
	mov	DWORD PTR _bDelete$[esp+588], 1
	call	esi
	mov	ebp, eax
	neg	ebp

; 1171 : 
; 1172 : 		if (!lstrcmpi(szToken, szForceRemove) || bTokenDelete)

	push	OFFSET FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
	sbb	ebp, ebp
	push	edi
	inc	ebp
	call	esi
	test	eax, eax
	je	SHORT $L70970
	cmp	ebp, ebx
	je	$L244613
$L70970:

; 1173 : 		{
; 1174 : 			if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1175 : 				break;
; 1176 : 
; 1177 : 			if (bRegister)

	cmp	DWORD PTR _bRegister$[esp+576], ebx
	je	$L244613

; 1178 : 			{
; 1179 : 				CRegKey rkForceRemove;

	mov	DWORD PTR _rkForceRemove$70974[esp+580], ebx

; 1180 : 
; 1181 : 				if (StrChr(szToken, chDirSep) != NULL)

	mov	cl, BYTE PTR [edi]
	cmp	cl, bl
	mov	BYTE PTR __$EHRec$[esp+588], 1
	mov	eax, edi
	je	SHORT $L244991
	mov	esi, DWORD PTR __imp__CharNextA@4
	npad	4
$L244524:
	cmp	cl, 92					; 0000005cH
	je	SHORT $L244955
	push	eax
	call	esi
	mov	cl, BYTE PTR [eax]
	cmp	cl, bl
	jne	SHORT $L244524

; 1396 : 					break;
; 1397 : 				if (FAILED(hr = NextToken(szToken)))

	jmp	SHORT $L244991
$L244955:

; 1180 : 
; 1181 : 				if (StrChr(szToken, chDirSep) != NULL)

	cmp	eax, ebx
	jne	$L244960
$L244991:

; 1183 : 
; 1184 : 				if (CanForceRemoveKey(szToken))

	mov	esi, OFFSET FLAT:?rgszNeverDelete@CRegParser@ATL@@1QBQBDB ; ATL::CRegParser::rgszNeverDelete
	npad	3
$L244550:
	mov	eax, DWORD PTR [esi]
	push	eax
	push	edi
	call	DWORD PTR __imp__lstrcmpiA@8
	test	eax, eax
	je	SHORT $L244995
	add	esi, 4
	cmp	esi, OFFSET FLAT:?rgszNeverDelete@CRegParser@ATL@@1QBQBDB+48
	jl	SHORT $L244550

; 1185 : 				{
; 1186 : 					rkForceRemove.Attach(hkParent);

	mov	ecx, DWORD PTR $T244943[esp+580]
	mov	DWORD PTR _rkForceRemove$70974[esp+580], ecx

; 1187 : 					// Error not returned. We will overwrite the values any way.
; 1188 : 					rkForceRemove.RecurseDeleteKey(szToken);

	push	edi
	lea	ecx, DWORD PTR _rkForceRemove$70974[esp+584]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey

; 1189 : 					rkForceRemove.Detach();

	xor	eax, eax
	mov	DWORD PTR _rkForceRemove$70974[esp+580], eax
	jmp	SHORT $L244580
$L244995:
	mov	eax, DWORD PTR _rkForceRemove$70974[esp+580]
$L244580:

; 1190 : 				}
; 1191 : 				if (bTokenDelete)

	cmp	ebp, ebx
	je	$L70978

; 1192 : 				{
; 1193 : 					if (FAILED(hr = NextToken(szToken)))

	mov	ebp, DWORD PTR $T244941[esp+580]
	push	edi
	mov	ecx, ebp
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244961

; 1195 : 					if (FAILED(hr = SkipAssignment(szToken)))

	push	edi
	mov	ecx, ebp
	call	?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z ; ATL::CRegParser::SkipAssignment
	mov	esi, eax
	cmp	esi, ebx

; 1384 : 					break;
; 1385 : 				}
; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : EndCheck:

	lea	ecx, DWORD PTR _rkForceRemove$70974[esp+580]
	jl	$L244962
	mov	BYTE PTR __$EHRec$[esp+588], bl
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close
$EndCheck$70983:

; 1390 : 
; 1391 : 		if (bRegister)
; 1392 : 		{
; 1393 : 			if (*szToken == chLeftBracket && lstrlen(szToken) == 1)

	cmp	BYTE PTR [edi], 123			; 0000007bH
	jne	SHORT $L244996
	push	edi
	call	DWORD PTR __imp__lstrlenA@4
	cmp	eax, 1
	jne	SHORT $L244996

; 1394 : 			{
; 1395 : 				if (FAILED(hr = RegisterSubkeys(szToken, keyCur.m_hKey, bRegister, FALSE)))

	mov	ecx, DWORD PTR _bRegister$[esp+576]
	mov	edx, DWORD PTR _keyCur$[esp+580]
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR $T244941[esp+588]
	push	edx
	push	edi
	call	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1396 : 					break;
; 1397 : 				if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
$L245006:
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997
$L244996:

; 1165 : 
; 1166 : 
; 1167 : 	while (*szToken != chRightBracket) // Continue till we see a }

	cmp	BYTE PTR [edi], 125			; 0000007dH
	jne	$L70966

; 1396 : 					break;
; 1397 : 				if (FAILED(hr = NextToken(szToken)))

	jmp	$L244997
$L70978:

; 1197 : 					goto EndCheck;
; 1198 : 				}
; 1199 : 			}

	cmp	eax, ebx
	mov	BYTE PTR __$EHRec$[esp+588], bl
	je	SHORT $L244613
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$L244613:

; 1200 : 
; 1201 : 		}
; 1202 : 
; 1203 : 		if (!lstrcmpi(szToken, szNoRemove))

	push	OFFSET FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
	push	edi
	call	DWORD PTR __imp__lstrcmpiA@8
	test	eax, eax
	jne	SHORT $L70987

; 1204 : 		{
; 1205 : 			bDelete = FALSE;    // set even for register
; 1206 : 			if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	mov	DWORD PTR _bDelete$[esp+584], ebx
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997
$L70987:

; 1207 : 				break;
; 1208 : 		}
; 1209 : 
; 1210 : 		if (!lstrcmpi(szToken, szValToken)) // need to add a value to hkParent

	push	OFFSET FLAT:??_C@_03LAIAPFCB@Val?$AA@
	push	edi
	call	DWORD PTR __imp__lstrcmpiA@8
	test	eax, eax
	jne	$L71002

; 1211 : 		{
; 1212 : 			TCHAR  szValueName[_MAX_PATH];
; 1213 : 
; 1214 : 			if (FAILED(hr = NextToken(szValueName)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	lea	edx, DWORD PTR _szValueName$70989[esp+580]
	push	edx
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1215 : 				break;
; 1216 : 			if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1217 : 				break;
; 1218 : 
; 1219 : 
; 1220 : 			if (*szToken != chEquals)

	cmp	BYTE PTR [edi], 61			; 0000003dH
	jne	$L244970

; 1221 : 				return GenerateError(E_ATL_EXPECTING_EQUAL);
; 1222 : 
; 1223 : 			if (bRegister)

	cmp	DWORD PTR _bRegister$[esp+576], ebx
	je	SHORT $L70996

; 1224 : 			{
; 1225 : 				CRegKey rk;
; 1226 : 
; 1227 : 				rk.Attach(hkParent);

	mov	eax, DWORD PTR $T244943[esp+580]

; 1228 : 				hr = AddValue(rk, szValueName, szToken);

	push	edi
	lea	ecx, DWORD PTR _szValueName$70989[esp+584]
	push	ecx
	mov	ecx, DWORD PTR $T244941[esp+588]
	lea	edx, DWORD PTR _rk$70997[esp+588]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+600], 2
	mov	DWORD PTR _rk$70997[esp+592], eax
	call	?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z ; ATL::CRegParser::AddValue
	mov	esi, eax

; 1229 : 				rk.Detach();
; 1230 : 
; 1231 : 				if (FAILED(hr))

	cmp	esi, ebx
	mov	DWORD PTR _rk$70997[esp+580], ebx
	jl	$L244997

; 1384 : 					break;
; 1385 : 				}
; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : EndCheck:

	mov	BYTE PTR __$EHRec$[esp+588], bl

; 1232 : 					return hr;
; 1233 : 
; 1234 : 				goto EndCheck;

	jmp	$EndCheck$70983
$L70996:

; 1235 : 			}
; 1236 : 			else
; 1237 : 			{
; 1238 : 				if (!bRecover && bDelete)

	cmp	DWORD PTR _bRecover$[esp+576], ebx
	jne	SHORT $L244731
	cmp	DWORD PTR _bDelete$[esp+580], ebx
	je	SHORT $L244731

; 1239 : 				{
; 1240 : 					ATLTRACE(atlTraceRegistrar, 1, _T("Deleting %s\n"), szValueName);
; 1241 : 					// We have to open the key for write to be able to delete.
; 1242 : 					CRegKey rkParent;
; 1243 : 					lRes = rkParent.Open(hkParent, NULL, KEY_WRITE);

	mov	ecx, DWORD PTR $T244943[esp+580]
	lea	eax, DWORD PTR _hKey$244686[esp+580]
	push	eax
	push	131078					; 00020006H
	push	ebx
	push	ebx
	push	ecx
	mov	DWORD PTR _hKey$244686[esp+600], ebx
	call	DWORD PTR __imp__RegOpenKeyExA@20
	cmp	eax, ebx
	jne	$L244979

; 1244 : 					if (lRes == ERROR_SUCCESS)
; 1245 : 					{
; 1246 : 						lRes = rkParent.DeleteValue(szValueName);

	mov	ebp, DWORD PTR _hKey$244686[esp+580]
	lea	edx, DWORD PTR _szValueName$70989[esp+580]
	push	edx
	push	ebp
	call	DWORD PTR __imp__RegDeleteValueA@8

; 1247 : 						if (lRes != ERROR_SUCCESS && lRes != ERROR_FILE_NOT_FOUND)

	cmp	eax, ebx
	je	SHORT $L71006
	cmp	eax, 2
	jne	$L244968
$L71006:

; 1252 : 						}
; 1253 : 					}
; 1254 : 					else
; 1255 : 					{
; 1256 : 						hr = AtlHresultFromWin32(lRes);
; 1257 : 						break;
; 1258 : 					}
; 1259 : 				}

	cmp	ebp, ebx
	je	SHORT $L244731
	push	ebp
	call	DWORD PTR __imp__RegCloseKey@4
$L244731:

; 1260 : 				if (FAILED(hr = SkipAssignment(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z ; ATL::CRegParser::SkipAssignment

; 1261 : 					break;
; 1262 : 				continue;  // can never have a subkey

	jmp	$L245006
$L71002:

; 1263 : 			}
; 1264 : 		}
; 1265 : 
; 1266 : 		if (StrChr(szToken, chDirSep) != NULL)

	mov	cl, BYTE PTR [edi]
	cmp	cl, bl
	mov	eax, edi
	je	SHORT $L244993
	mov	esi, DWORD PTR __imp__CharNextA@4
$L244739:
	cmp	cl, 92					; 0000005cH
	je	SHORT $L244957
	push	eax
	call	esi
	mov	cl, BYTE PTR [eax]
	cmp	cl, bl
	jne	SHORT $L244739

; 1396 : 					break;
; 1397 : 				if (FAILED(hr = NextToken(szToken)))

	jmp	SHORT $L244993
$L244957:

; 1263 : 			}
; 1264 : 		}
; 1265 : 
; 1266 : 		if (StrChr(szToken, chDirSep) != NULL)

	cmp	eax, ebx
	jne	$L244970
$L244993:

; 1268 : 
; 1269 : 		if (bRegister)

	cmp	DWORD PTR _bRegister$[esp+576], ebx
	je	$L71012

; 1270 : 		{
; 1271 : 			lRes = keyCur.Open(hkParent, szToken, KEY_READ | KEY_WRITE);

	mov	esi, DWORD PTR $T244943[esp+580]
	mov	ebp, DWORD PTR __imp__RegOpenKeyExA@20
	lea	eax, DWORD PTR _hKey$244772[esp+580]
	push	eax
	push	131103					; 0002001fH
	push	ebx
	push	edi
	push	esi
	mov	DWORD PTR _hKey$244772[esp+600], ebx
	call	ebp
	cmp	eax, ebx
	jne	SHORT $L244999
	mov	ecx, DWORD PTR _keyCur$[esp+580]
	xor	eax, eax
	cmp	ecx, ebx
	je	SHORT $L244998
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
$L244998:

; 1272 : 			if (ERROR_SUCCESS != lRes)

	cmp	eax, ebx
	mov	ecx, DWORD PTR _hKey$244772[esp+580]
	mov	DWORD PTR _keyCur$[esp+580], ecx
	je	SHORT $L71015
$L244999:

; 1273 : 			{
; 1274 : 				// Failed all access try read only
; 1275 : 				lRes = keyCur.Open(hkParent, szToken, KEY_READ);

	lea	edx, DWORD PTR _hKey$244787[esp+580]
	push	edx
	push	131097					; 00020019H
	push	ebx
	push	edi
	push	esi
	mov	DWORD PTR _hKey$244787[esp+600], ebx
	call	ebp
	cmp	eax, ebx
	jne	SHORT $L245001
	mov	ecx, DWORD PTR _keyCur$[esp+580]
	xor	eax, eax
	cmp	ecx, ebx
	je	SHORT $L245000
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
$L245000:

; 1276 : 				if (ERROR_SUCCESS != lRes)

	cmp	eax, ebx
	mov	ecx, DWORD PTR _hKey$244787[esp+580]
	mov	DWORD PTR _keyCur$[esp+580], ecx
	je	SHORT $L71015
$L245001:

; 1277 : 				{
; 1278 : 					// Finally try creating it
; 1279 : 					ATLTRACE(atlTraceRegistrar, 2, _T("Creating key %s\n"), szToken);
; 1280 : 					lRes = keyCur.Create(hkParent, szToken, REG_NONE, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE);

	lea	edx, DWORD PTR _dw$244802[esp+580]
	push	edx
	lea	eax, DWORD PTR _hKey$244803[esp+584]
	push	eax
	push	ebx
	push	131103					; 0002001fH
	push	ebx
	push	ebx
	push	ebx
	push	edi
	push	esi
	mov	DWORD PTR _hKey$244803[esp+616], ebx
	call	DWORD PTR __imp__RegCreateKeyExA@36
	cmp	eax, ebx
	jne	$L244979
	mov	ecx, DWORD PTR _keyCur$[esp+580]
	xor	eax, eax
	cmp	ecx, ebx
	je	SHORT $L244800
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
$L244800:

; 1281 : 					if (lRes != ERROR_SUCCESS)

	cmp	eax, ebx
	mov	ecx, DWORD PTR _hKey$244803[esp+580]
	mov	DWORD PTR _keyCur$[esp+580], ecx
	jne	$L244979
$L71015:

; 1282 : 						return AtlHresultFromWin32(lRes);
; 1283 : 				}
; 1284 : 			}
; 1285 : 
; 1286 : 			if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1287 : 				break;
; 1288 : 
; 1289 : 
; 1290 : 			if (*szToken == chEquals)

	cmp	BYTE PTR [edi], 61			; 0000003dH
	jne	$EndCheck$70983

; 1291 : 			{
; 1292 : 				if (FAILED(hr = AddValue(keyCur, NULL, szToken))) // NULL == default

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	push	ebx
	lea	edx, DWORD PTR _keyCur$[esp+588]
	push	edx
	call	?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z ; ATL::CRegParser::AddValue
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1293 : 					break;
; 1294 : 			}
; 1295 : 		}
; 1296 : 		else

	jmp	$EndCheck$70983
$L71012:

; 1297 : 		{
; 1298 : 			if (!bRecover)

	cmp	DWORD PTR _bRecover$[esp+576], ebx
	jne	$L71023

; 1299 : 				lRes = keyCur.Open(hkParent, szToken, KEY_READ);

	mov	ecx, DWORD PTR $T244943[esp+580]
	lea	eax, DWORD PTR _hKey$244832[esp+580]
	push	eax
	push	131097					; 00020019H
	push	ebx
	push	edi
	push	ecx
	mov	DWORD PTR _hKey$244832[esp+600], ebx
	call	DWORD PTR __imp__RegOpenKeyExA@20
	cmp	eax, ebx
	jne	SHORT $L244834
	mov	ecx, DWORD PTR _keyCur$[esp+580]
	xor	eax, eax
	cmp	ecx, ebx
	je	SHORT $L244830
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
$L244830:
	mov	edx, DWORD PTR _hKey$244832[esp+580]
	mov	DWORD PTR _keyCur$[esp+580], edx
$L244834:

; 1302 : 
; 1303 : 
; 1304 : 			// Open failed set recovery mode
; 1305 : 			if (lRes != ERROR_SUCCESS)

	cmp	eax, ebx
	mov	ebp, eax
	je	SHORT $L71025
$L244989:

; 1306 : 				bRecover = true;

	mov	DWORD PTR _bRecover$[esp+576], 1
$L71025:

; 1307 : 
; 1308 : 			// TRACE out Key open status and if in recovery mode
; 1309 : #ifdef _DEBUG
; 1310 : 			if (!bRecover)
; 1311 : 				ATLTRACE(atlTraceRegistrar, 1, _T("Opened Key %s\n"), szToken);
; 1312 : 			else
; 1313 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Ignoring Open key on %s : In Recovery mode\n"), szToken);
; 1314 : #endif //_DEBUG
; 1315 : 
; 1316 : 			// Remember Subkey
; 1317 : 			lstrcpyn(szKey, szToken, _MAX_PATH);

	push	260					; 00000104H
	push	edi
	lea	eax, DWORD PTR _szKey$[esp+588]
	push	eax
	call	DWORD PTR __imp__lstrcpynA@12

; 1318 : 
; 1319 : 			if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1320 : 				break;
; 1321 : 			if (FAILED(hr = SkipAssignment(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z ; ATL::CRegParser::SkipAssignment
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997

; 1322 : 				break;
; 1323 : 
; 1324 : 			if (*szToken == chLeftBracket)

	cmp	BYTE PTR [edi], 123			; 0000007bH
	jne	SHORT $L71034

; 1325 : 			{
; 1326 : 				hr = RegisterSubkeys(szToken, keyCur.m_hKey, bRegister, bRecover);

	mov	ecx, DWORD PTR _bRecover$[esp+576]
	mov	edx, DWORD PTR _keyCur$[esp+580]
	push	ecx
	mov	ecx, DWORD PTR $T244941[esp+584]
	push	ebx
	push	edx
	push	edi
	call	?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys
	mov	esi, eax

; 1327 : 				// In recover mode ignore error
; 1328 : 				if (FAILED(hr) && !bRecover)

	cmp	esi, ebx
	jge	SHORT $L71032
	cmp	DWORD PTR _bRecover$[esp+576], ebx
	je	$L244997
$L71032:

; 1329 : 					break;
; 1330 : 				// Skip the }
; 1331 : 				if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T244941[esp+580]
	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	mov	esi, eax
	cmp	esi, ebx
	jl	$L244997
$L71034:

; 1332 : 					break;
; 1333 : 			}
; 1334 : 
; 1335 : #ifdef _DEBUG
; 1336 : 			if (bRecover != bInRecovery)
; 1337 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Ending Recovery Mode\n"));
; 1338 : #endif
; 1339 : 			bRecover = bInRecovery;
; 1340 : 
; 1341 : 			if (lRes == ERROR_FILE_NOT_FOUND)

	cmp	ebp, 2
	mov	eax, DWORD PTR _bInRecovery$[esp+580]
	mov	DWORD PTR _bRecover$[esp+576], eax
	je	$L244996

; 1342 : 				// Key already not present so not an error.
; 1343 : 				continue;
; 1344 : 
; 1345 : 			if (lRes != ERROR_SUCCESS)

	cmp	ebp, ebx
	je	SHORT $L71038

; 1346 : 			{
; 1347 : 				// We are recovery mode continue on errors else break
; 1348 : 				if (bRecover)

	cmp	eax, ebx
	jne	$L244996

; 1349 : 					continue;
; 1350 : 				else
; 1351 : 				{
; 1352 : 					hr = AtlHresultFromWin32(lRes);

	push	ebp

; 1353 : 					break;

	jmp	$L245010
$L71023:

; 1300 : 			else
; 1301 : 				lRes = ERROR_FILE_NOT_FOUND;

	mov	ebp, 2

; 1302 : 
; 1303 : 
; 1304 : 			// Open failed set recovery mode
; 1305 : 			if (lRes != ERROR_SUCCESS)

	jmp	$L244989
$L71038:

; 1354 : 				}
; 1355 : 			}
; 1356 : 
; 1357 : 			// If in recovery mode
; 1358 : 			if (bRecover && HasSubKeys(keyCur))

	cmp	eax, ebx
	je	SHORT $L71039
	mov	ecx, DWORD PTR _keyCur$[esp+580]
	push	ecx
	mov	ecx, DWORD PTR $T244941[esp+584]
	call	?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasSubKeys
	test	eax, eax
	je	SHORT $L71039

; 1359 : 			{
; 1360 : 				// See if the KEY is in the NeverDelete list and if so, don't
; 1361 : 				if (CanForceRemoveKey(szKey) && bDelete)

	mov	ebp, OFFSET FLAT:?rgszNeverDelete@CRegParser@ATL@@1QBQBDB ; ATL::CRegParser::rgszNeverDelete
	npad	1
$L244845:
	mov	edx, DWORD PTR [ebp]
	push	edx
	lea	eax, DWORD PTR _szKey$[esp+584]
	push	eax
	call	DWORD PTR __imp__lstrcmpiA@8
	test	eax, eax
	je	$L244996
	add	ebp, 4
	cmp	ebp, OFFSET FLAT:?rgszNeverDelete@CRegParser@ATL@@1QBQBDB+48
	jl	SHORT $L244845
	cmp	DWORD PTR _bDelete$[esp+580], ebx
	je	$L244996

; 1362 : 				{
; 1363 : 					ATLTRACE(atlTraceRegistrar, 0, _T("Deleting non-empty subkey %s by force\n"), szKey);
; 1364 : 					// Error not returned since we are in recovery mode. The error that caused recovery mode is returned
; 1365 : 					keyCur.RecurseDeleteKey(szKey);

	lea	ecx, DWORD PTR _szKey$[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _keyCur$[esp+584]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey

; 1366 : 				}
; 1367 : 				continue;

	jmp	$L244996
$L71039:

; 1368 : 			}
; 1369 : 
; 1370 : 			lRes = keyCur.Close();

	mov	eax, DWORD PTR _keyCur$[esp+580]
	cmp	eax, ebx
	je	SHORT $L244994
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 1371 : 			if (lRes != ERROR_SUCCESS)

	cmp	eax, ebx
	mov	DWORD PTR _keyCur$[esp+580], ebx
	jne	SHORT $L244979
$L244994:

; 1372 : 			   return AtlHresultFromWin32(lRes);
; 1373 : 
; 1374 : 			if (bDelete)

	cmp	DWORD PTR _bDelete$[esp+580], ebx
	je	$L244996

; 1375 : 			{
; 1376 : 				ATLTRACE(atlTraceRegistrar, 0, _T("Deleting Key %s\n"), szKey);
; 1377 : 				CRegKey rkParent;
; 1378 : 				rkParent.Attach(hkParent);
; 1379 : 				lRes = rkParent.DeleteSubKey(szKey);

	mov	eax, DWORD PTR $T244943[esp+580]
	lea	edx, DWORD PTR _szKey$[esp+580]
	push	edx
	push	eax
	call	DWORD PTR __imp__RegDeleteKeyA@8

; 1380 : 				rkParent.Detach();
; 1381 : 				if (lRes != ERROR_SUCCESS)

	cmp	eax, ebx
	je	$L244996
$L244979:

; 1382 : 				{
; 1383 : 					hr = AtlHresultFromWin32(lRes);

	push	eax
$L245010:
	call	?AtlHresultFromWin32@ATL@@YAJK@Z	; ATL::AtlHresultFromWin32
	add	esp, 4
	mov	esi, eax
$L244997:

; 1398 : 					break;
; 1399 : 			}
; 1400 : 		}
; 1401 : 	}
; 1402 : 
; 1403 : 	return hr;

	mov	eax, DWORD PTR _keyCur$[esp+580]
	cmp	eax, ebx
	je	SHORT $L244939
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$L244939:
	mov	eax, esi
$L245004:
	pop	ebp
$L70954:

; 1404 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+576]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:__except_list, ecx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+568]
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 564				; 00000234H
	ret	16					; 00000010H
$L244960:

; 1182 : 					return GenerateError(E_ATL_COMPOUND_KEY);

	lea	ecx, DWORD PTR _rkForceRemove$70974[esp+580]
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close
$L244970:
	mov	eax, DWORD PTR _keyCur$[esp+580]
	cmp	eax, ebx
	je	SHORT $L244758
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4

; 1267 : 			return GenerateError(E_ATL_COMPOUND_KEY);

$L244758:

; 1182 : 					return GenerateError(E_ATL_COMPOUND_KEY);

	mov	eax, -2147352567			; 80020009H
	jmp	SHORT $L245004
$L244961:

; 1194 : 						break;

	mov	eax, DWORD PTR _rkForceRemove$70974[esp+580]
	cmp	eax, ebx
	je	SHORT $L244997
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	jmp	SHORT $L244997
$L244962:

; 1196 : 						break;

	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close
	jmp	SHORT $L244997
$L244968:

; 1248 : 						{
; 1249 : 							// Key not present is not an error
; 1250 : 							hr = AtlHresultFromWin32(lRes);

	push	eax
	call	?AtlHresultFromWin32@ATL@@YAJK@Z	; ATL::AtlHresultFromWin32
	add	esp, 4

; 1251 : 							break;

	cmp	ebp, ebx
	mov	esi, eax
	je	SHORT $L244997
	push	ebp
	call	DWORD PTR __imp__RegCloseKey@4
	jmp	$L244997
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L244505:
	lea	ecx, DWORD PTR _keyCur$[ebp]
	jmp	??1CRegKey@ATL@@QAE@XZ			; ATL::CRegKey::~CRegKey
$L244506:
	lea	ecx, DWORD PTR _rkForceRemove$70974[ebp]
	jmp	??1CRegKey@ATL@@QAE@XZ			; ATL::CRegKey::~CRegKey
$L244507:
	lea	ecx, DWORD PTR _rk$70997[ebp]
	jmp	??1CRegKey@ATL@@QAE@XZ			; ATL::CRegKey::~CRegKey
__ehhandler$?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z:
	mov	eax, OFFSET FLAT:$T244945
	jmp	___CxxFrameHandler
text$x	ENDS
?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z ENDP ; ATL::CRegParser::RegisterSubkeys
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcomcli.h
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT
_nError$ = 8						; size = 4
?AtlHresultFromWin32@ATL@@YAJK@Z PROC NEAR		; ATL::AtlHresultFromWin32, COMDAT

; 33   : 	return( HRESULT_FROM_WIN32( nError ) );

	mov	eax, DWORD PTR _nError$[esp-4]
	test	eax, eax
	jle	SHORT $L245018
	and	eax, 65535				; 0000ffffH
	or	eax, -2147024896			; 80070000H
$L245018:

; 34   : }

	ret	0
?AtlHresultFromWin32@ATL@@YAJK@Z ENDP			; ATL::AtlHresultFromWin32
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT
?Close@CRegKey@ATL@@QAEJXZ PROC NEAR			; ATL::CRegKey::Close, COMDAT
; _this$ = ecx

; 4842 : {

	push	esi
	mov	esi, ecx

; 4843 : 	LONG lRes = ERROR_SUCCESS;
; 4844 : 	if (m_hKey != NULL)

	mov	ecx, DWORD PTR [esi]
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $L69380

; 4845 : 	{
; 4846 : 		lRes = RegCloseKey(m_hKey);

	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4

; 4847 : 		m_hKey = NULL;

	mov	DWORD PTR [esi], 0
$L69380:
	pop	esi

; 4848 : 	}
; 4849 : 	return lRes;
; 4850 : }

	ret	0
?Close@CRegKey@ATL@@QAEJXZ ENDP				; ATL::CRegKey::Close
_TEXT	ENDS
EXTRN	__imp__RegQueryInfoKeyA@48:NEAR
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT
_cbSubKeys$ = -4					; size = 4
_hkey$ = 8						; size = 4
?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z PROC NEAR	; ATL::CRegParser::HasSubKeys, COMDAT
; _this$ = ecx

; 950  : {

	push	ecx

; 951  : 	DWORD       cbSubKeys = 0;
; 952  : 
; 953  : 	if (RegQueryInfoKey(hkey, NULL, NULL, NULL,
; 954  : 							   &cbSubKeys, NULL, NULL,
; 955  : 							   NULL, NULL, NULL, NULL, NULL) != ERROR_SUCCESS)

	mov	ecx, DWORD PTR _hkey$[esp]
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _cbSubKeys$[esp+32]
	push	eax
	push	0
	push	0
	push	0
	push	ecx
	mov	DWORD PTR _cbSubKeys$[esp+52], 0
	call	DWORD PTR __imp__RegQueryInfoKeyA@48
	test	eax, eax
	je	SHORT $L70848

; 956  : 	{
; 957  : 		ATLTRACE(atlTraceRegistrar, 0, _T("Should not be here!!\n"));
; 958  : 		ATLASSERT(FALSE);
; 959  : 		return FALSE;

	xor	eax, eax

; 963  : }

	pop	ecx
	ret	4
$L70848:

; 960  : 	}
; 961  : 
; 962  : 	return cbSubKeys > 0;

	mov	eax, DWORD PTR _cbSubKeys$[esp+4]
	xor	edx, edx
	cmp	edx, eax
	sbb	eax, eax
	neg	eax

; 963  : }

	pop	ecx
	ret	4
?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ENDP	; ATL::CRegParser::HasSubKeys
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT
_szValue$ = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_szToken$ = 8						; size = 4
?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z PROC NEAR	; ATL::CRegParser::SkipAssignment, COMDAT
; _this$ = ecx

; 994  : {

	mov	eax, 4100				; 00001004H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR _szToken$[esp+4104]
	mov	DWORD PTR __$ArrayPad$[esp+4108], eax

; 995  : 	HRESULT hr;
; 996  : 	TCHAR szValue[MAX_VALUE];
; 997  : 
; 998  : 	if (*szToken == chEquals)

	cmp	BYTE PTR [edi], 61			; 0000003dH
	mov	esi, ecx
	jne	SHORT $L70874

; 999  : 	{
; 1000 : 		if (FAILED(hr = NextToken(szToken)))

	push	edi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	test	eax, eax

; 1001 : 			return hr;

	jl	SHORT $L70865

; 1002 : 		// Skip assignment
; 1003 : 		SkipWhiteSpace();

	mov	ecx, esi
	call	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::SkipWhiteSpace

; 1004 : 		if (FAILED(hr = NextToken(szValue)))

	lea	eax, DWORD PTR _szValue$[esp+4108]
	push	eax
	mov	ecx, esi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	test	eax, eax

; 1005 : 			return hr;

	jl	SHORT $L70865

; 1006 : 		if (FAILED(hr = NextToken(szToken)))

	push	edi
	mov	ecx, esi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	test	eax, eax

; 1007 : 			return hr;

	jl	SHORT $L70865
$L70874:

; 1008 : 	}
; 1009 : 
; 1010 : 	return S_OK;

	xor	eax, eax
$L70865:

; 1011 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+4108]
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4100				; 00001004H
	ret	4
?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z ENDP		; ATL::CRegParser::SkipAssignment
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CRegKey@ATL@@QAE@XZ PROC NEAR			; ATL::CRegKey::~CRegKey, COMDAT
; _this$ = ecx

; 4803 : {Close();}

	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L245040
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR [esi], 0
$L245040:
	pop	esi
	ret	0
??1CRegKey@ATL@@QAE@XZ ENDP				; ATL::CRegKey::~CRegKey
_TEXT	ENDS
EXTRN	__imp__RegEnumKeyExA@32:NEAR
; Function compile flags: /Ogtpy
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT
_key$ = -284						; size = 4
_dwSize$ = -280						; size = 4
_hKey$245054 = -276					; size = 4
$T245103 = -272						; size = 4
_time$ = -268						; size = 8
_szBuffer$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_lpszKey$ = 8						; size = 4
?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z PROC NEAR	; ATL::CRegKey::RecurseDeleteKey, COMDAT
; _this$ = ecx

; 5246 : {

	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _lpszKey$[esp+292]
	mov	ebp, ecx

; 5247 : 	CRegKey key;
; 5248 : 	LONG lRes = key.Open(m_hKey, lpszKey, KEY_READ | KEY_WRITE);

	lea	ecx, DWORD PTR _hKey$245054[esp+296]
	push	ecx
	push	131103					; 0002001fH
	push	0
	mov	DWORD PTR __$ArrayPad$[esp+308], eax
	mov	eax, DWORD PTR [ebp]
	push	edi
	push	eax

; 5269 : 	return DeleteSubKey(lpszKey);

	mov	DWORD PTR $T245103[esp+316], edi
	mov	DWORD PTR _key$[esp+316], 0
	mov	DWORD PTR _hKey$245054[esp+316], 0
	call	DWORD PTR __imp__RegOpenKeyExA@20
	mov	esi, eax
	test	esi, esi
	jne	$L245108
	lea	ecx, DWORD PTR _key$[esp+296]
	call	?Close@CRegKey@ATL@@QAEJXZ		; ATL::CRegKey::Close
	mov	esi, eax
	test	esi, esi
	mov	eax, DWORD PTR _hKey$245054[esp+296]
	mov	DWORD PTR _key$[esp+296], eax
	jne	$L245107
	lea	edx, DWORD PTR _time$[esp+296]
	push	edx
	push	esi
	push	esi
	push	esi
	lea	ecx, DWORD PTR _dwSize$[esp+312]
	push	ecx
	lea	edx, DWORD PTR _szBuffer$[esp+316]
	push	edx
	push	esi
	mov	esi, DWORD PTR __imp__RegEnumKeyExA@32
	push	eax
	mov	DWORD PTR _dwSize$[esp+328], 256	; 00000100H
	call	esi
	test	eax, eax
	jne	SHORT $L69744
	npad	8
$L69743:

; 5249 : 	if (lRes != ERROR_SUCCESS)
; 5250 : 	{
; 5251 : 		if (lRes != ERROR_FILE_NOT_FOUND && lRes != ERROR_PATH_NOT_FOUND)
; 5252 : 		{
; 5253 : 			ATLTRACE(atlTraceCOM, 0, _T("CRegKey::RecurseDeleteKey : Failed to Open Key %s(Error = %d)\n"), lpszKey, lRes);
; 5254 : 		}
; 5255 : 		return lRes;
; 5256 : 	}
; 5257 : 	FILETIME time;
; 5258 : 	DWORD dwSize = 256;
; 5259 : 	TCHAR szBuffer[256];
; 5260 : 	while (RegEnumKeyEx(key.m_hKey, 0, szBuffer, &dwSize, NULL, NULL, NULL,
; 5261 : 		&time)==ERROR_SUCCESS)
; 5262 : 	{
; 5263 : 		lRes = key.RecurseDeleteKey(szBuffer);

	lea	eax, DWORD PTR _szBuffer$[esp+296]
	push	eax
	lea	ecx, DWORD PTR _key$[esp+300]
	call	?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ; ATL::CRegKey::RecurseDeleteKey
	mov	edi, eax

; 5264 : 		if (lRes != ERROR_SUCCESS)

	test	edi, edi
	jne	SHORT $L245105
	lea	ecx, DWORD PTR _time$[esp+296]
	push	ecx
	mov	ecx, DWORD PTR _key$[esp+300]
	push	eax
	push	eax
	push	eax
	lea	edx, DWORD PTR _dwSize$[esp+312]
	push	edx
	lea	eax, DWORD PTR _szBuffer$[esp+316]
	push	eax
	push	edi
	push	ecx

; 5266 : 		dwSize = 256;

	mov	DWORD PTR _dwSize$[esp+328], 256	; 00000100H
	call	esi
	test	eax, eax
	je	SHORT $L69743

; 5264 : 		if (lRes != ERROR_SUCCESS)

	mov	edi, DWORD PTR $T245103[esp+296]
$L69744:

; 5267 : 	}
; 5268 : 	key.Close();

	mov	eax, DWORD PTR _key$[esp+296]
	test	eax, eax
	je	SHORT $L245086
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	mov	DWORD PTR _key$[esp+296], 0
$L245086:

; 5269 : 	return DeleteSubKey(lpszKey);

	mov	edx, DWORD PTR [ebp]
	push	edi
	push	edx
	call	DWORD PTR __imp__RegDeleteKeyA@8
	mov	esi, eax
$L245108:
	mov	eax, DWORD PTR _key$[esp+296]
$L245107:
	test	eax, eax
	je	SHORT $L245100
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$L245100:
	mov	eax, esi
$L69733:

; 5270 : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+296]
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	ret	4
$L245105:

; 5265 : 			return lRes;

	mov	eax, DWORD PTR _key$[esp+296]
	test	eax, eax
	je	SHORT $L245080
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
$L245080:
	mov	eax, edi
	jmp	SHORT $L69733
?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z ENDP		; ATL::CRegKey::RecurseDeleteKey
_TEXT	ENDS
PUBLIC	??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::~CTempBuffer<char,256,ATL::CCRTAllocator>
PUBLIC	?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::FreeHeap
PUBLIC	??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
PUBLIC	?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap
PUBLIC	?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
PUBLIC	?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z	; ATL::CRegParser::VTFromRegType
PUBLIC	?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z	; ATL::CRegKey::SetMultiStringValue
EXTRN	__imp__VarUI4FromStr@16:NEAR
EXTRN	__imp__IsDBCSLeadByte@4:NEAR
EXTRN	__imp__RegSetValueExA@24:NEAR
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
xdata$x	SEGMENT
$T245274 DD	0ffffffffH
	DD	FLAT:$L245127
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:$L245129
	DD	03H
	DD	00H
	DD	03H
	DD	00H
$T245276 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L245124
$T245277 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L245126
$T245275 DD	01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T245276
	DD	04H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:$T245277
$T245257 DD	019930520H
	DD	06H
	DD	FLAT:$T245274
	DD	02H
	DD	FLAT:$T245275
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT
$T245255 = -4408					; size = 4
$T245201 = -4404					; size = 4
$T245252 = -4400					; size = 4
_vt$ = -4396						; size = 2
$T245253 = -4392					; size = 4
$T245254 = -4388					; size = 4
_cbValDiv2$70787 = -4384				; size = 4
_ulVal$70768 = -4384					; size = 4
_cbValue$70784 = -4380					; size = 4
__AtlSafeAllocaManager$70773 = -4380			; size = 4
_rgBinary$70821 = -4376					; size = 260
_pszDestValue$70754 = -4376				; size = 260
_szValue$ = -4116					; size = 4096
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__$ReturnAddr$ = 4					; size = 4
_rkParent$ = 8						; size = 4
_szValueName$ = 12					; size = 4
_szToken$ = 16						; size = 4
?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z PROC NEAR ; ATL::CRegParser::AddValue, COMDAT
; _this$ = ecx

; 819  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	eax, 4392				; 00001128H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	push	ebx
	mov	ebx, DWORD PTR _szValueName$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _rkParent$[ebp]
	mov	esi, ecx
	xor	eax, ebp

; 820  : 	HRESULT hr;
; 821  : 
; 822  : 	TCHAR		szValue[MAX_VALUE];
; 823  : 	VARTYPE     vt = VT_EMPTY;
; 824  : 	LONG        lRes = ERROR_SUCCESS;
; 825  : 	UINT        nIDRes = 0;
; 826  : 
; 827  : 	if (FAILED(hr = NextToken(szValue)))

	lea	ecx, DWORD PTR _szValue$[ebp]
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 932  : 	}
; 933  : 
; 934  : 	if (FAILED(hr = NextToken(szToken)))

	mov	eax, DWORD PTR _szToken$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T245252[ebp], esi
	mov	DWORD PTR $T245253[ebp], edi
	mov	DWORD PTR $T245254[ebp], ebx
	mov	DWORD PTR $T245255[ebp], eax
	mov	DWORD PTR _vt$[ebp], 0
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	test	eax, eax
	jl	$L70832
	lea	edx, DWORD PTR _vt$[ebp]
	push	edx
	lea	eax, DWORD PTR _szValue$[ebp]
	push	eax
	call	?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z ; ATL::CRegParser::VTFromRegType
	add	esp, 8
	test	eax, eax
	jne	SHORT $L70711

; 828  : 		return hr;
; 829  : 	if (!VTFromRegType(szValue, vt))
; 830  : 	{
; 831  : 		ATLTRACE(atlTraceRegistrar, 0, _T("%s Type not supported\n"), szValue);
; 832  : 		return GenerateError(E_ATL_TYPE_NOT_SUPPORTED);

	mov	eax, -2147352567			; 80020009H
	jmp	$L70832
$L70711:

; 833  : 	}
; 834  : 
; 835  : 	SkipWhiteSpace();

	mov	ecx, esi
	call	?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::SkipWhiteSpace

; 836  : 	if (FAILED(hr = NextToken(szValue)))

	lea	ecx, DWORD PTR _szValue$[ebp]
	push	ecx
	mov	ecx, esi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	test	eax, eax

; 837  : 		return hr;

	jl	$L70832

; 838  : 
; 839  : 	switch (vt)

	movzx	eax, WORD PTR _vt$[ebp]
	cmp	eax, 19					; 00000013H
	jg	$L245122
	je	$L70767
	cmp	eax, 8
	je	$L70718
	cmp	eax, 17					; 00000011H
	jne	$L70830

; 906  : 		}
; 907  : 	case VT_UI1:
; 908  : 		{
; 909  : 			int cbValue = lstrlen(szValue);

	lea	edx, DWORD PTR _szValue$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenA@4

; 910  : 			if (cbValue & 0x00000001)

	test	al, 1
	mov	DWORD PTR _cbValue$70784[ebp], eax

; 911  : 			{
; 912  : 				ATLTRACE(atlTraceRegistrar, 0, _T("Binary Data does not fall on BYTE boundries\n"));
; 913  : 				return E_FAIL;

	jne	$L245223

; 914  : 			}
; 915  : 			int cbValDiv2 = cbValue/2;

	cdq
	sub	eax, edx
	mov	ebx, eax
	sar	ebx, 1
	mov	DWORD PTR _cbValDiv2$70787[ebp], ebx

; 916  : 			CTempBuffer<BYTE, 256> rgBinary;

	mov	DWORD PTR _rgBinary$70821[ebp], 0

; 917  : 			ATLTRY(rgBinary.Allocate(cbValDiv2));			

	cmp	ebx, 256				; 00000100H
	mov	DWORD PTR __$EHRec$[ebp+12], 3
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	jbe	SHORT $L245213
	push	ebx
	lea	ecx, DWORD PTR _rgBinary$70821[ebp]
	call	?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap
	jmp	SHORT $L245214
$L245126:
	mov	eax, $L245265
	ret	0
$L245213:
	lea	edi, DWORD PTR _rgBinary$70821[ebp+4]
	mov	DWORD PTR _rgBinary$70821[ebp], edi
$L70823:

; 920  : 			memset(rgBinary, 0, cbValDiv2);				

	mov	ecx, ebx
	mov	edx, ecx
	shr	ecx, 2
	xor	eax, eax
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	rep stosb

; 921  : 			for (int irg = 0; irg < cbValue; irg++)

	mov	eax, DWORD PTR _cbValue$70784[ebp]
	xor	esi, esi
	test	eax, eax
	jle	$L70829
$L70827:

; 922  : 				rgBinary[(irg/2)] |= (ChToByte(szValue[irg])) << (4*(1 - (irg & 0x00000001)));

	mov	eax, DWORD PTR _rgBinary$70821[ebp]
	mov	edx, esi
	shr	edx, 1
	add	edx, eax
	mov	al, BYTE PTR _szValue$[ebp+esi]
	movsx	ecx, al
	add	ecx, -48				; ffffffd0H
	cmp	ecx, 54					; 00000036H
	ja	SHORT $L245238
	movzx	ecx, BYTE PTR $L245264[ecx]
	jmp	DWORD PTR $L245273[ecx*4]
$L245265:

; 918  : 			if (rgBinary == NULL)

	mov	ebx, DWORD PTR _cbValDiv2$70787[ebp]

; 917  : 			ATLTRY(rgBinary.Allocate(cbValDiv2));			

$L245214:

; 918  : 			if (rgBinary == NULL)

	mov	edi, DWORD PTR _rgBinary$70821[ebp]
	test	edi, edi
	jne	SHORT $L70823

; 919  : 				return E_FAIL;

	lea	eax, DWORD PTR _rgBinary$70821[ebp+4]
	test	eax, eax
	je	SHORT $L245223
	lea	ecx, DWORD PTR _rgBinary$70821[ebp]
	call	?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
$L245223:
	mov	eax, -2147467259			; 80004005H
	jmp	$L70832

; 922  : 				rgBinary[(irg/2)] |= (ChToByte(szValue[irg])) << (4*(1 - (irg & 0x00000001)));

$L245235:
	sub	al, 48					; 00000030H
	jmp	SHORT $L245234
$L245236:
	sub	al, 55					; 00000037H
	jmp	SHORT $L245234
$L245237:
	sub	al, 87					; 00000057H
	jmp	SHORT $L245234
$L245238:
	xor	al, al
$L245234:
	mov	ecx, esi
	and	ecx, 1
	shl	ecx, 2
	mov	edi, ecx
	mov	ecx, 4
	sub	ecx, edi
	shl	al, cl
	mov	cl, BYTE PTR [edx]
	or	cl, al
	mov	eax, DWORD PTR _cbValue$70784[ebp]
	inc	esi
	cmp	esi, eax
	mov	BYTE PTR [edx], cl
	jl	$L70827
$L70829:

; 923  : 			lRes = RegSetValueEx(rkParent, szValueName, 0, REG_BINARY, rgBinary, cbValDiv2);

	mov	ecx, DWORD PTR _rgBinary$70821[ebp]
	mov	edx, DWORD PTR $T245253[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR $T245254[ebp]
	push	ebx
	push	ecx
	push	3
	push	0
	push	edx
	push	eax
	call	DWORD PTR __imp__RegSetValueExA@24

; 924  : 			break;

	mov	ecx, DWORD PTR _rgBinary$70821[ebp]
	mov	esi, eax
	lea	eax, DWORD PTR _rgBinary$70821[ebp+4]
	cmp	ecx, eax
	je	$L245166
	lea	ecx, DWORD PTR _rgBinary$70821[ebp]
	call	?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
	jmp	$L245166
$L70718:

; 840  : 	{
; 841  : 	case VT_BSTR:
; 842  : 		{
; 843  : 			lRes = rkParent.SetStringValue(szValueName, szValue);

	lea	ecx, DWORD PTR _szValue$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4
	inc	eax
	push	eax
	mov	eax, DWORD PTR [edi]
	lea	edx, DWORD PTR _szValue$[ebp]
	push	edx
	push	1
	push	0
	push	ebx
	push	eax
	call	DWORD PTR __imp__RegSetValueExA@24
	mov	esi, eax

; 844  : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %s at %s\n"), szValue, !szValueName ? _T("default") : szValueName);
; 845  : 			break;

	jmp	$L245166
$L70767:

; 890  : 		break;
; 891  : 	case VT_UI4:
; 892  : 		{
; 893  : 			ULONG ulVal;
; 894  : 			USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 895  : 
; 896  : 			LPOLESTR lpszV = T2OLE_EX(szValue, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	lea	ecx, DWORD PTR _szValue$[ebp]
	push	ecx
	mov	ebx, eax
	mov	DWORD PTR __AtlSafeAllocaManager$70773[ebp], 0
	call	DWORD PTR __imp__lstrlenA@4
	mov	edi, eax
	inc	edi
	lea	esi, DWORD PTR [edi+edi]
	cmp	esi, 1024				; 00000400H
	ja	SHORT $L245116
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245116
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, esp
	jmp	SHORT $L245185
$L245116:
	lea	edx, DWORD PTR [edi+edi+8]
	push	edx
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L245193
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __AtlSafeAllocaManager$70773[ebp], eax
	lea	esi, DWORD PTR [eax+8]
$L245185:
	test	esi, esi
	je	SHORT $L245193
	push	edi
	push	esi
	push	-1
	lea	eax, DWORD PTR _szValue$[ebp]
	push	eax
	push	0
	push	ebx
	mov	WORD PTR [esi], 0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	neg	eax
	sbb	eax, eax
	and	eax, esi
	jmp	SHORT $L245191
$L245193:
	xor	eax, eax
$L245191:

; 897  : 	#ifndef _UNICODE
; 898  : 			if(lpszV == NULL) 

	test	eax, eax
	jne	SHORT $L70780

; 899  : 				return E_OUTOFMEMORY;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$70773[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, -2147024882			; 8007000eH
	jmp	$L70832
$L70780:

; 900  : 	#endif	
; 901  : 			VarUI4FromStr(lpszV, 0, 0, &ulVal);

	lea	ecx, DWORD PTR _ulVal$70768[ebp]
	push	ecx
	push	0
	push	0
	push	eax
	call	DWORD PTR __imp__VarUI4FromStr@16

; 902  : 			
; 903  : 			lRes = rkParent.SetDWORDValue(szValueName, ulVal);

	mov	edx, DWORD PTR _ulVal$70768[ebp]
	mov	ecx, DWORD PTR $T245254[ebp]
	push	4
	lea	eax, DWORD PTR $T245201[ebp]
	push	eax
	push	4
	mov	DWORD PTR $T245201[ebp], edx
	mov	edx, DWORD PTR $T245253[ebp]
	mov	eax, DWORD PTR [edx]
	push	0
	push	ecx
	push	eax
	call	DWORD PTR __imp__RegSetValueExA@24

; 904  : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %d at %s\n"), ulVal, !szValueName ? _T("default") : szValueName);
; 905  : 			break;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$70773[ebp]
	mov	esi, eax
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	jmp	$L245166
$L245122:

; 838  : 
; 839  : 	switch (vt)

	cmp	eax, 16392				; 00004008H
	jne	$L70830

; 846  : 		}
; 847  : 	case VT_BSTR | VT_BYREF:
; 848  : 		{
; 849  : 			ATLTRACE(atlTraceRegistrar, 2, _T("Setting Value %s at %s\n"), szValue, !szValueName ? _T("default") : szValueName);
; 850  : 			int nLen = lstrlen(szValue) + 1;

	lea	ecx, DWORD PTR _szValue$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenA@4

; 851  : 			CTempBuffer<TCHAR, 256> pszDestValue;

	xor	ecx, ecx
	inc	eax
	mov	DWORD PTR _pszDestValue$70754[ebp], ecx

; 852  : 			ATLTRY(pszDestValue.Allocate(nLen));

	cmp	eax, 256				; 00000100H
	mov	DWORD PTR __$EHRec$[ebp+12], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	jbe	SHORT $L245149
	push	eax
	lea	ecx, DWORD PTR _pszDestValue$70754[ebp]
	call	?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::AllocateHeap
$L245150:

; 853  : 			if (pszDestValue != NULL)

	mov	edi, DWORD PTR _pszDestValue$70754[ebp]
	test	edi, edi
	je	$L70756
$L245263:

; 854  : 			{
; 855  : 				TCHAR* p = pszDestValue;
; 856  : 				TCHAR* q = szValue;
; 857  : 				nLen = 0;
; 858  : 				while (*q != NULL)

	mov	al, BYTE PTR _szValue$[ebp]
	test	al, al
	lea	esi, DWORD PTR _szValue$[ebp]
	je	SHORT $L70761
	mov	ebx, DWORD PTR __imp__CharNextA@4
	npad	6
$L70760:

; 859  : 				{
; 860  : 					TCHAR* r = CharNext(q);

	push	esi
	call	ebx

; 861  : 					if (*q == '\\' && *r == '0')

	mov	cl, BYTE PTR [esi]
	cmp	cl, 92					; 0000005cH
	jne	SHORT $L70763
	cmp	BYTE PTR [eax], 48			; 00000030H
	jne	SHORT $L70763

; 862  : 					{
; 863  : 						*p++ = NULL;

	mov	BYTE PTR [edi], 0

; 864  : 						q = CharNext(r);

	push	eax
	inc	edi
	call	ebx
	mov	esi, eax

; 865  : 					}
; 866  : 					else

	jmp	SHORT $L70764
$L245124:

; 852  : 			ATLTRY(pszDestValue.Allocate(nLen));

	mov	eax, $L245150
	ret	0
$L245149:
	lea	edi, DWORD PTR _pszDestValue$70754[ebp+4]
	mov	DWORD PTR _pszDestValue$70754[ebp], edi

; 853  : 			if (pszDestValue != NULL)

	jmp	SHORT $L245263
$L70763:

; 867  : 					{
; 868  : 						*p = *q;
; 869  : #ifndef _UNICODE
; 870  : 						if (IsDBCSLeadByte(*q))

	xor	edx, edx
	mov	BYTE PTR [edi], cl
	mov	dl, BYTE PTR [esi]
	push	edx
	call	DWORD PTR __imp__IsDBCSLeadByte@4
	test	eax, eax
	je	SHORT $L70765

; 871  : 						{
; 872  : 							p++;
; 873  : 							q++;
; 874  : 							*p = *q;

	mov	al, BYTE PTR [esi+1]
	inc	edi
	inc	esi
	mov	BYTE PTR [edi], al
$L70765:

; 875  : 						}
; 876  : #endif
; 877  : 						p++;

	inc	edi

; 878  : 						q++;

	inc	esi
$L70764:
	cmp	BYTE PTR [esi], 0
	jne	SHORT $L70760
$L70761:

; 879  : 					}
; 880  : 					nLen ++;
; 881  : 				}
; 882  : 				*p = NULL;
; 883  : 				lRes = rkParent.SetMultiStringValue(szValueName, pszDestValue);

	mov	edx, DWORD PTR $T245254[ebp]
	mov	BYTE PTR [edi], 0
	mov	ecx, DWORD PTR _pszDestValue$70754[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T245253[ebp]
	push	edx
	call	?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z ; ATL::CRegKey::SetMultiStringValue

; 884  : 			}
; 885  : 			else

	mov	edi, DWORD PTR _pszDestValue$70754[ebp]
	mov	esi, eax
	jmp	SHORT $L70766
$L70756:

; 886  : 			{
; 887  : 				lRes = ERROR_OUTOFMEMORY;

	mov	esi, 14					; 0000000eH
$L70766:

; 888  : 			}
; 889  : 		}

	lea	eax, DWORD PTR _pszDestValue$70754[ebp+4]
	cmp	edi, eax
	je	SHORT $L245166
	lea	ecx, DWORD PTR _pszDestValue$70754[ebp]
	call	?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::FreeHeap
$L245166:

; 925  : 		}
; 926  : 	}
; 927  : 
; 928  : 	if (ERROR_SUCCESS != lRes)

	test	esi, esi
	je	SHORT $L245269

; 929  : 	{
; 930  : 		nIDRes = E_ATL_VALUE_SET_FAILED;
; 931  : 		return AtlHresultFromWin32(lRes);

	push	esi
	call	?AtlHresultFromWin32@ATL@@YAJK@Z	; ATL::AtlHresultFromWin32
	add	esp, 4
	jmp	SHORT $L70832
$L245269:

; 925  : 		}
; 926  : 	}
; 927  : 
; 928  : 	if (ERROR_SUCCESS != lRes)

	mov	esi, DWORD PTR $T245252[ebp]
$L70830:

; 932  : 	}
; 933  : 
; 934  : 	if (FAILED(hr = NextToken(szToken)))

	mov	ecx, DWORD PTR $T245255[ebp]
	push	ecx
	mov	ecx, esi
	call	?NextToken@CRegParser@ATL@@IAEJPAD@Z	; ATL::CRegParser::NextToken
	xor	edx, edx
	test	eax, eax
	setge	dl
	dec	edx
	and	eax, edx
$L70832:

; 935  : 		return hr;
; 936  : 
; 937  : 	return S_OK;
; 938  : }

	lea	esp, DWORD PTR [ebp-4420]
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$L245273:
	DD	$L245235
	DD	$L245236
	DD	$L245237
	DD	$L245238
$L245264:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L245129:
	lea	ecx, DWORD PTR _rgBinary$70821[ebp]
	jmp	??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
$L245127:
	lea	ecx, DWORD PTR _pszDestValue$70754[ebp]
	jmp	??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::~CTempBuffer<char,256,ATL::CCRTAllocator>
__ehhandler$?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z:
	mov	eax, OFFSET FLAT:$T245257
	jmp	___CxxFrameHandler
text$x	ENDS
?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z ENDP ; ATL::CRegParser::AddValue
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT
_pszValueName$ = 8					; size = 4
_pszValue$ = 12						; size = 4
?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z PROC NEAR	; ATL::CRegKey::SetMultiStringValue, COMDAT
; _this$ = ecx

; 5188 : {

	push	ebx

; 5189 : 	LPCTSTR pszTemp;
; 5190 : 	ULONG nBytes;
; 5191 : 	ULONG nLength;
; 5192 : 
; 5193 : 	ATLASSERT(m_hKey != NULL);
; 5194 : 	ATLASSERT(pszValue != NULL);
; 5195 : 
; 5196 : 	// Find the total length (in bytes) of all of the strings, including the
; 5197 : 	// terminating '\0' of each string, and the second '\0' that terminates
; 5198 : 	// the list.
; 5199 : 	nBytes = 0;
; 5200 : 	pszTemp = pszValue;

	mov	ebx, DWORD PTR __imp__lstrlenA@4
	push	ebp
	push	esi
	mov	esi, DWORD PTR _pszValue$[esp+8]
	push	edi
	mov	ebp, ecx
	xor	edi, edi
$L69690:

; 5201 : 	do
; 5202 : 	{
; 5203 : 		nLength = lstrlen(pszTemp)+1;

	push	esi
	call	ebx
	inc	eax

; 5204 : 		pszTemp += nLength;

	add	esi, eax

; 5205 : 		nBytes += nLength*sizeof(TCHAR);

	add	edi, eax

; 5206 : 	} while (nLength != 1);

	cmp	eax, 1
	jne	SHORT $L69690

; 5207 : 
; 5208 : 	return ::RegSetValueEx(m_hKey, pszValueName, NULL, REG_MULTI_SZ, reinterpret_cast<const BYTE*>(pszValue),
; 5209 : 		nBytes);

	mov	eax, DWORD PTR _pszValue$[esp+12]
	mov	ecx, DWORD PTR _pszValueName$[esp+12]
	mov	edx, DWORD PTR [ebp]
	push	edi
	push	eax
	push	7
	push	0
	push	ecx
	push	edx
	call	DWORD PTR __imp__RegSetValueExA@24
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 5210 : }

	ret	8
?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z ENDP	; ATL::CRegKey::SetMultiStringValue
_TEXT	ENDS
PUBLIC	?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B ; `ATL::CRegParser::VTFromRegType'::`3'::map
PUBLIC	?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA ; `ATL::CRegParser::VTFromRegType'::`3'::$S4
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
_BSS	SEGMENT
?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B DQ 04H DUP (?) ; `ATL::CRegParser::VTFromRegType'::`3'::map
_BSS	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT
?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA DD 01H DUP (?) ; `ATL::CRegParser::VTFromRegType'::`3'::$S4
; Function compile flags: /Ogtpy
_BSS	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT
_szValueType$ = 8					; size = 4
_vt$ = 12						; size = 4
?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z PROC NEAR	; ATL::CRegParser::VTFromRegType, COMDAT

; 619  : 	struct typemap
; 620  : 	{
; 621  : 		LPCTSTR lpsz;
; 622  : 		VARTYPE vt;
; 623  : 	};
; 624  : #pragma warning (push)
; 625  : #pragma warning (disable : 4640)	// construction of local static object is not thread-safe
; 626  : 
; 627  : 	static const typemap map[] = {
; 628  : 		{szStringVal, VT_BSTR},

	test	BYTE PTR ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA, 1
	jne	SHORT $L245290
	or	DWORD PTR ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA, 1
	mov	DWORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B, OFFSET FLAT:??_C@_01CPLAODJH@S?$AA@
	mov	WORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+4, 8

; 629  : 		{multiszStringVal, VT_BSTR | VT_BYREF},

	mov	DWORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+8, OFFSET FLAT:??_C@_01PLPBNMEI@M?$AA@
	mov	WORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+12, 16392 ; 00004008H

; 630  : 		{szDwordVal,  VT_UI4},

	mov	DWORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+16, OFFSET FLAT:??_C@_01CKDDGHAB@D?$AA@
	mov	WORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+20, 19 ; 00000013H

; 631  : 		{szBinaryVal, VT_UI1}

	mov	DWORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+24, OFFSET FLAT:??_C@_01HMGJMAIH@B?$AA@
	mov	WORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B+28, 17 ; 00000011H
$L245290:
	push	ebx

; 632  : 	};
; 633  : 
; 634  : #pragma warning (pop)
; 635  : 
; 636  : 	for (int i=0;i<sizeof(map)/sizeof(typemap);i++)

	mov	ebx, DWORD PTR __imp__lstrcmpiA@8
	push	esi
	push	edi
	mov	edi, DWORD PTR _szValueType$[esp+8]
	xor	esi, esi
	npad	5
$L70543:

; 637  : 	{
; 638  : 		if (!lstrcmpi(szValueType, map[i].lpsz))

	mov	eax, DWORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B[esi*8]
	push	eax
	push	edi
	call	ebx
	test	eax, eax
	je	SHORT $L245288
	inc	esi
	cmp	esi, 4
	jb	SHORT $L70543
	pop	edi
	pop	esi

; 642  : 		}
; 643  : 	}
; 644  : 
; 645  : 	return FALSE;

	xor	eax, eax
	pop	ebx

; 646  : 
; 647  : }

	ret	0
$L245288:

; 639  : 		{
; 640  : 			vt = map[i].vt;

	mov	cx, WORD PTR ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B[esi*8+4]
	mov	edx, DWORD PTR _vt$[esp+8]
	pop	edi
	pop	esi
	mov	WORD PTR [edx], cx

; 641  : 			return TRUE;

	mov	eax, 1
	pop	ebx

; 646  : 
; 647  : }

	ret	0
?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z ENDP		; ATL::CRegParser::VTFromRegType
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 313  : 		Allocator::Free( m_p );

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	_free
	pop	ecx

; 314  : 	}

	ret	0
?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT
?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ PROC NEAR ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap, COMDAT
; _this$ = ecx

; 313  : 		Allocator::Free( m_p );

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	_free
	pop	ecx

; 314  : 	}

	ret	0
?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

	mov	eax, DWORD PTR _nBytes$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	_malloc
	add	esp, 4

; 294  : 		if( p == NULL )

	test	eax, eax
	jne	SHORT $L237194

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L245313:
$L237194:

; 297  : 		}
; 298  : 		m_p = p;

	mov	DWORD PTR [esi], eax
	pop	esi

; 299  : 	}

	ret	4
$L245312:
?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::AllocateHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z PROC NEAR ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap, COMDAT
; _this$ = ecx

; 293  : 		T* p = static_cast< T* >( Allocator::Allocate( nBytes ) );

	mov	eax, DWORD PTR _nBytes$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	_malloc
	add	esp, 4

; 294  : 		if( p == NULL )

	test	eax, eax
	jne	SHORT $L237200

; 295  : 		{
; 296  : 			AtlThrow( E_OUTOFMEMORY );

	push	-2147024882				; 8007000eH
	call	?AtlThrow@ATL@@YGXJ@Z			; ATL::AtlThrow
$L245321:
$L237200:

; 297  : 		}
; 298  : 		m_p = p;

	mov	DWORD PTR [esi], eax
	pop	esi

; 299  : 	}

	ret	4
$L245320:
?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::AllocateHeap
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::~CTempBuffer<char,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+4]
	cmp	edx, eax
	je	SHORT $L235317

; 227  : 		{
; 228  : 			FreeHeap();

	jmp	?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::FreeHeap
$L235317:

; 229  : 		}
; 230  : 	}

	ret	0
??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<char,256,ATL::CCRTAllocator>::~CTempBuffer<char,256,ATL::CCRTAllocator>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 226  : 		if( m_p != reinterpret_cast< T* >( m_abFixedBuffer ) )

	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+4]
	cmp	edx, eax
	je	SHORT $L235328

; 227  : 		{
; 228  : 			FreeHeap();

	jmp	?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::FreeHeap
$L235328:

; 229  : 		}
; 230  : 	}

	ret	0
??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CTempBuffer<unsigned char,256,ATL::CCRTAllocator>::~CTempBuffer<unsigned char,256,ATL::CCRTAllocator>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
xdata$x	SEGMENT
$T245415 DD	0ffffffffH
	DD	FLAT:$L245342
$T245411 DD	019930520H
	DD	01H
	DD	FLAT:$T245415
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z
_TEXT	SEGMENT
__acp_ex$ = -20						; size = 4
__AtlSafeAllocaManager$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_szID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z PROC NEAR ; ATL::CRegObject::ResourceUnregisterSz, COMDAT

; 474  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 475  : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	edi, edi
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], edi

; 476  : 	if (szID == NULL || szType == NULL)

	mov	ebx, DWORD PTR _szID$[ebp]
	cmp	ebx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	je	$L70425
	cmp	DWORD PTR _szType$[ebp], edi
	je	$L70425

; 478  : 
; 479  : 	LPCTSTR lpszID = OLE2CT_EX(szID, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	push	ebx
	call	DWORD PTR __imp__lstrlenW@4
	lea	esi, DWORD PTR [eax+eax+2]
	cmp	esi, 1024				; 00000400H
	jg	SHORT $L245332
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245332
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L245367
$L245332:
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_malloc
	add	esp, 4
	cmp	eax, edi
	je	SHORT $L245380
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], eax
	lea	edi, DWORD PTR [eax+8]
$L245367:
	test	edi, edi
	je	SHORT $L245380
	mov	ecx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	esi
	push	edi
	push	-1
	push	ebx
	push	0
	push	ecx
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, edi
	jmp	SHORT $L245378
$L245380:
	xor	esi, esi
$L245378:

; 480  : 	LPCTSTR lpszType = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	edx, DWORD PTR _szType$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, 1024				; 00000400H
	jg	SHORT $L245336
	push	ebx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245336
	mov	eax, ebx
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L245392
$L245336:
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L245405
	mov	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], eax
	lea	edi, DWORD PTR [eax+8]
$L245392:
	test	edi, edi
	je	SHORT $L245405
	mov	edx, DWORD PTR _szType$[ebp]
	mov	eax, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	ebx
	push	edi
	push	-1
	push	edx
	push	0
	push	eax
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, edi
	jmp	SHORT $L245403
$L245405:
	xor	eax, eax
$L245403:

; 481  : #ifndef _UNICODE
; 482  : 	if (lpszID == NULL || lpszType == NULL)

	test	esi, esi
	je	SHORT $L70437
	test	eax, eax
	je	SHORT $L70437

; 485  : 	}
; 486  : #endif // _UNICODE
; 487  : 
; 488  : 	return RegisterFromResource(szFileName, lpszID, lpszType, FALSE);

	mov	ecx, DWORD PTR _szFileName$[ebp]
	push	0
	push	eax
	push	esi
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ; ATL::CRegObject::RegisterFromResource
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	mov	esi, eax
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, esi
	jmp	SHORT $L70418
$L70437:

; 483  : 	{
; 484  : 		return E_OUTOFMEMORY;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L70418
$L70425:

; 477  : 		return E_INVALIDARG;

	mov	eax, -2147024809			; 80070057H
$L70418:

; 489  : }

	lea	esp, DWORD PTR [ebp-32]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L245342:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z:
	mov	eax, OFFSET FLAT:$T245411
	jmp	___CxxFrameHandler
text$x	ENDS
?ResourceUnregisterSz@CRegObject@ATL@@QAGJPBG00@Z ENDP	; ATL::CRegObject::ResourceUnregisterSz
PUBLIC	?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceS
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
;	COMDAT ?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_nResID$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_pMapEntries$ = 20					; size = 4
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CComModule::UpdateRegistryFromResourceS, COMDAT

; 4146 : #ifdef _ATL_STATIC_REGISTRY
; 4147 : 		return CAtlModuleT<CComModule>::UpdateRegistryFromResourceS(nResID, bRegister, pMapEntries);

	jmp	?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CAtlModule::UpdateRegistryFromResourceS
?UpdateRegistryFromResourceS@CComModule@ATL@@UAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CComModule::UpdateRegistryFromResourceS
_TEXT	ENDS
PUBLIC	?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z	; ATL::CRegObject::ResourceRegister
PUBLIC	?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z	; ATL::CRegObject::ResourceUnregister
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT
_ro$ = -128						; size = 40
_hInst$ = -88						; size = 4
__AtlSafeAllocaManager$ = -84				; size = 4
_pszModuleUnquoted$ = -80				; size = 1040
_pszModuleQuote$71175 = 960				; size = 1048
_szModule$ = 2008					; size = 260
__$ArrayPad$ = 2268					; size = 4
__$ReturnAddr$ = 2276					; size = 4
_this$ = 2280						; size = 4
_nResID$ = 2284						; size = 4
_bRegister$ = 2288					; size = 4
_pMapEntries$ = 2292					; size = 4
?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z PROC NEAR ; ATL::CAtlModule::UpdateRegistryFromResourceS, COMDAT

; 5506 : {

	push	ebp
	lea	ebp, DWORD PTR [esp-2272]
	sub	esp, 2400				; 00000960H
	mov	eax, DWORD PTR ___security_cookie
	push	ebx
	push	esi
	mov	esi, DWORD PTR _pMapEntries$[ebp]
	xor	eax, ebp
	push	edi
	mov	edi, DWORD PTR _this$[ebp]

; 5507 : 	CRegObject ro;

	lea	ecx, DWORD PTR _ro$[ebp]
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	call	??0CRegObject@ATL@@QAE@XZ

; 5508 : 
; 5509 : 	if (pMapEntries != NULL)

	test	esi, esi
	je	SHORT $L71140

; 5510 : 	{
; 5511 : 		while (pMapEntries->szKey != NULL)

	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $L71140
	npad	4
$L71139:

; 5512 : 		{
; 5513 : 			ATLASSERT(NULL != pMapEntries->szData);
; 5514 : 			ro.AddReplacement(pMapEntries->szKey, pMapEntries->szData);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	push	eax
	lea	edx, DWORD PTR _ro$[ebp]
	push	edx
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	eax, DWORD PTR [esi+8]

; 5515 : 			pMapEntries++;

	add	esi, 8
	test	eax, eax
	jne	SHORT $L71139
$L71140:

; 5516 : 		}
; 5517 : 	}
; 5518 : 
; 5519 : 	HRESULT hr = AddCommonRGSReplacements(&ro);

	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR [eax+20]
	mov	esi, eax

; 5520 : 	if (FAILED(hr))

	test	esi, esi

; 5521 : 		return hr;

	jl	$L245506

; 5522 : 
; 5523 : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 5524 : 	TCHAR szModule[MAX_PATH];
; 5525 : 	HINSTANCE hInst = _AtlBaseModule.GetModuleInstance();
; 5526 : 	DWORD dwFLen = GetModuleFileName(hInst, szModule, MAX_PATH);

	push	260					; 00000104H
	lea	edx, DWORD PTR _szModule$[ebp]
	mov	edi, eax
	mov	eax, DWORD PTR ?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A+4
	push	edx
	push	eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], 0
	mov	DWORD PTR _hInst$[ebp], eax
	call	DWORD PTR __imp__GetModuleFileNameA@12

; 5527 : 	if( dwFLen == 0 )

	test	eax, eax
	jne	SHORT $L71154

; 5528 : 		return AtlHresultFromLastError();

	call	?AtlHresultFromLastError@ATL@@YAJXZ	; ATL::AtlHresultFromLastError
	mov	esi, eax
	jmp	$L245506
$L71154:

; 5529 : 	else if( dwFLen == MAX_PATH )

	cmp	eax, 260				; 00000104H
	jne	SHORT $L71157

; 5530 : 		return HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER);

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, -2147024774			; 8007007aH
	jmp	$L71135
$L71157:

; 5531 : 
; 5532 : 	LPOLESTR pszModule;
; 5533 : 	pszModule = T2OLE_EX(szModule, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	lea	eax, DWORD PTR _szModule$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	mov	ebx, eax
	inc	ebx
	lea	esi, DWORD PTR [ebx+ebx]
	cmp	esi, 1024				; 00000400H
	ja	SHORT $L245428
	push	esi
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245428
	mov	eax, esi
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	esi, esp
	jmp	SHORT $L245465
$L245428:
	lea	ecx, DWORD PTR [ebx+ebx+8]
	push	ecx
	call	_malloc
	add	esp, 4
	test	eax, eax
	je	SHORT $L245478
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], eax
	lea	esi, DWORD PTR [eax+8]
$L245465:
	test	esi, esi
	je	SHORT $L245478
	push	ebx
	push	esi
	push	-1
	lea	edx, DWORD PTR _szModule$[ebp]
	push	edx
	push	0
	push	edi
	mov	WORD PTR [esi], 0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	mov	ebx, eax
	neg	ebx
	sbb	ebx, ebx
	and	ebx, esi
	jmp	SHORT $L245476
$L245478:
	xor	ebx, ebx
$L245476:

; 5534 : #ifndef _UNICODE
; 5535 : 	if(pszModule == NULL) 

	test	ebx, ebx
	jne	SHORT $L71168

; 5536 : 		return E_OUTOFMEMORY;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, -2147024882			; 8007000eH
	jmp	$L71135
$L71168:

; 5537 : #endif
; 5538 : 
; 5539 : 	OLECHAR pszModuleUnquoted[_MAX_PATH * 2];
; 5540 : 	EscapeSingleQuote(pszModuleUnquoted, pszModule);

	cmp	WORD PTR [ebx], 0
	mov	ecx, ebx
	lea	eax, DWORD PTR _pszModuleUnquoted$[ebp]
	je	SHORT $L245487
$L245486:
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	add	eax, 2
	cmp	WORD PTR [ecx], 39			; 00000027H
	jne	SHORT $L245488
	mov	WORD PTR [eax], 39			; 00000027H
	add	eax, 2
$L245488:
	add	ecx, 2
	cmp	WORD PTR [ecx], 0
	jne	SHORT $L245486
$L245487:

; 5541 : 	
; 5542 : 	HRESULT hRes;
; 5543 : 	if ((hInst == NULL) || (hInst == GetModuleHandle(NULL))) // register as EXE

	mov	esi, DWORD PTR _hInst$[ebp]
	test	esi, esi
	mov	WORD PTR [eax], 0
	je	SHORT $L71174
	push	0
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	esi, eax
	je	SHORT $L71174

; 5556 : 	}
; 5557 : 	else
; 5558 : 	{
; 5559 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleUnquoted);

	lea	eax, DWORD PTR _pszModuleUnquoted$[ebp]
	push	eax
	push	OFFSET FLAT:??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	jmp	SHORT $L245507
$L71174:

; 5544 : 	{
; 5545 : 		// If Registering as an EXE, then we quote the resultant path.
; 5546 : 		// We don't do it for a DLL, because LoadLibrary fails if the path is
; 5547 : 		// quoted
; 5548 : 		OLECHAR pszModuleQuote[(_MAX_PATH + _ATL_QUOTES_SPACE)*2]; 		
; 5549 : 		pszModuleQuote[0] = OLESTR('\"');
; 5550 : 		ocscpy(pszModuleQuote + 1, pszModuleUnquoted);

	lea	edx, DWORD PTR _pszModuleUnquoted$[ebp]
	push	edx
	mov	WORD PTR _pszModuleQuote$71175[ebp], 34	; 00000022H
	call	DWORD PTR __imp__lstrlenW@4
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	eax, ecx
	shr	ecx, 2
	lea	esi, DWORD PTR _pszModuleUnquoted$[ebp]
	lea	edi, DWORD PTR _pszModuleQuote$71175[ebp+2]
	rep movsd
	mov	ecx, eax
	and	ecx, 3
	rep movsb

; 5551 : 		int nLen = ocslen(pszModuleQuote);

	lea	ecx, DWORD PTR _pszModuleQuote$71175[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4

; 5552 : 		pszModuleQuote[nLen] = OLESTR('\"');
; 5553 : 		pszModuleQuote[nLen + 1] = 0;
; 5554 : 
; 5555 : 		hRes = ro.AddReplacement(OLESTR("Module"), pszModuleQuote);

	lea	edx, DWORD PTR _pszModuleQuote$71175[ebp]
	push	edx
	mov	WORD PTR _pszModuleQuote$71175[ebp+eax*2], 34 ; 00000022H
	mov	WORD PTR _pszModuleQuote$71175[ebp+eax*2+2], 0
	push	OFFSET FLAT:??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
	lea	eax, DWORD PTR _ro$[ebp]
	push	eax
$L245507:
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	esi, eax

; 5560 : 	}	
; 5561 : 
; 5562 : 	if(FAILED(hRes))

	test	esi, esi

; 5563 : 		return hRes;

	jl	SHORT $L245436

; 5564 : 		
; 5565 : 	hRes = ro.AddReplacement(OLESTR("Module_Raw"), pszModuleUnquoted);

	lea	ecx, DWORD PTR _pszModuleUnquoted$[ebp]
	push	ecx
	push	OFFSET FLAT:??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
	lea	edx, DWORD PTR _ro$[ebp]
	push	edx
	call	?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z ; ATL::CRegObject::AddReplacement
	mov	esi, eax

; 5566 : 	if(FAILED(hRes))

	test	esi, esi

; 5567 : 		return hRes;

	jl	SHORT $L245436

; 5568 : 
; 5569 : 	LPCOLESTR szType = OLESTR("REGISTRY");
; 5570 : 	hr = (bRegister) ? ro.ResourceRegister(pszModule, nResID, szType) :
; 5571 : 		ro.ResourceUnregister(pszModule, nResID, szType);

	mov	eax, DWORD PTR _bRegister$[ebp]
	test	eax, eax
	push	OFFSET FLAT:??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
	je	SHORT $L245435
	mov	eax, DWORD PTR _nResID$[ebp]
	push	eax
	push	ebx
	lea	ecx, DWORD PTR _ro$[ebp]
	push	ecx
	call	?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z ; ATL::CRegObject::ResourceRegister
	jmp	SHORT $L245508
$L245435:
	mov	edx, DWORD PTR _nResID$[ebp]
	push	edx
	push	ebx
	lea	eax, DWORD PTR _ro$[ebp]
	push	eax
	call	?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z ; ATL::CRegObject::ResourceUnregister
$L245508:
	mov	esi, eax
$L245436:

; 5572 : 	return hr;

	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	call	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$L245506:
	lea	ecx, DWORD PTR _ro$[ebp]
	call	??1CRegObject@ATL@@UAE@XZ		; ATL::CRegObject::~CRegObject
	mov	eax, esi
$L71135:

; 5573 : }

	lea	esp, DWORD PTR [ebp-140]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	ebp, 2272				; 000008e0H
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ENDP ; ATL::CAtlModule::UpdateRegistryFromResourceS
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
xdata$x	SEGMENT
$T245578 DD	0ffffffffH
	DD	FLAT:$L245518
$T245573 DD	019930520H
	DD	01H
	DD	FLAT:$T245578
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT
__acp_ex$ = -20						; size = 4
__AtlSafeAllocaManager$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_nID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z PROC NEAR	; ATL::CRegObject::ResourceRegister, COMDAT

; 428  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 429  : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	esi, esi
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi

; 430  : 
; 431  : 	LPCTSTR lpszT = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _szType$[ebp]
	cmp	eax, esi
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	je	SHORT $L245544
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, 1024				; 00000400H
	jg	SHORT $L245512
	push	ebx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245512
	mov	eax, ebx
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L245532
$L245512:
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	call	_malloc
	add	esp, 4
	cmp	eax, esi
	je	SHORT $L245544
	mov	DWORD PTR [eax], esi
	mov	esi, eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi
	lea	edi, DWORD PTR [eax+8]
$L245532:
	test	edi, edi
	je	SHORT $L245544
	mov	ecx, DWORD PTR _szType$[ebp]
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	ebx
	push	edi
	push	-1
	push	ecx
	push	0
	push	edx
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, edi
	jmp	SHORT $L245542
$L245544:
	xor	eax, eax
$L245542:

; 432  : #ifndef _UNICODE
; 433  : 	if (lpszT == NULL)

	test	eax, eax
	jne	SHORT $L70356

; 434  : 	{
; 435  : 		return E_OUTOFMEMORY;

	test	esi, esi
	je	SHORT $L245556
$L245555:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L245555
$L245556:
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L70346
$L70356:

; 436  : 	}
; 437  : #endif // _UNICODE
; 438  : 
; 439  : 	return RegisterFromResource(szFileName, MAKEINTRESOURCE(nID), lpszT, TRUE);

	mov	ecx, DWORD PTR _szFileName$[ebp]
	push	1
	push	eax
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ; ATL::CRegObject::RegisterFromResource
	test	esi, esi
	mov	edi, eax
	je	SHORT $L245567
$L245566:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L245566
$L245567:
	mov	eax, edi
$L70346:

; 440  : }

	lea	esp, DWORD PTR [ebp-32]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L245518:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z:
	mov	eax, OFFSET FLAT:$T245573
	jmp	___CxxFrameHandler
text$x	ENDS
?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z ENDP	; ATL::CRegObject::ResourceRegister
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlalloc.h
xdata$x	SEGMENT
$T245649 DD	0ffffffffH
	DD	FLAT:$L245589
$T245644 DD	019930520H
	DD	01H
	DD	FLAT:$T245649
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\statreg.h
xdata$x	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT
__acp_ex$ = -20						; size = 4
__AtlSafeAllocaManager$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_nID$ = 16						; size = 4
_szType$ = 20						; size = 4
?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z PROC NEAR ; ATL::CRegObject::ResourceUnregister, COMDAT

; 460  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi

; 461  : 	USES_CONVERSION_EX;

	call	DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
	xor	esi, esi
	mov	DWORD PTR __acp_ex$[ebp], eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi

; 462  : 
; 463  : 	LPCTSTR lpszT = OLE2CT_EX(szType, _ATL_SAFE_ALLOCA_DEF_THRESHOLD);

	mov	eax, DWORD PTR _szType$[ebp]
	cmp	eax, esi
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	je	SHORT $L245615
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, 1024				; 00000400H
	jg	SHORT $L245583
	push	ebx
	call	?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z ; ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable
	add	esp, 4
	test	al, al
	je	SHORT $L245583
	mov	eax, ebx
	add	eax, 3
	and	eax, -4					; fffffffcH
	call	__alloca_probe
	mov	edi, esp
	jmp	SHORT $L245603
$L245583:
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	call	_malloc
	add	esp, 4
	cmp	eax, esi
	je	SHORT $L245615
	mov	DWORD PTR [eax], esi
	mov	esi, eax
	mov	DWORD PTR __AtlSafeAllocaManager$[ebp], esi
	lea	edi, DWORD PTR [eax+8]
$L245603:
	test	edi, edi
	je	SHORT $L245615
	mov	ecx, DWORD PTR _szType$[ebp]
	mov	edx, DWORD PTR __acp_ex$[ebp]
	push	0
	push	0
	push	ebx
	push	edi
	push	-1
	push	ecx
	push	0
	push	edx
	mov	BYTE PTR [edi], 0
	call	DWORD PTR __imp__WideCharToMultiByte@32
	neg	eax
	sbb	eax, eax
	and	eax, edi
	jmp	SHORT $L245613
$L245615:
	xor	eax, eax
$L245613:

; 464  : #ifndef _UNICODE
; 465  : 	if (lpszT == NULL)

	test	eax, eax
	jne	SHORT $L70406

; 466  : 	{
; 467  : 		return E_OUTOFMEMORY;

	test	esi, esi
	je	SHORT $L245627
$L245626:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L245626
$L245627:
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $L70396
$L70406:

; 468  : 	}
; 469  : #endif // _UNICODE
; 470  : 	return RegisterFromResource(szFileName, MAKEINTRESOURCE(nID), lpszT, FALSE);

	mov	ecx, DWORD PTR _szFileName$[ebp]
	push	0
	push	eax
	movzx	eax, WORD PTR _nID$[ebp]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z ; ATL::CRegObject::RegisterFromResource
	test	esi, esi
	mov	edi, eax
	je	SHORT $L245638
$L245637:
	mov	eax, esi
	mov	esi, DWORD PTR [esi]
	push	eax
	call	_free
	add	esp, 4
	test	esi, esi
	jne	SHORT $L245637
$L245638:
	mov	eax, edi
$L70396:

; 471  : }

	lea	esp, DWORD PTR [ebp-32]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L245589:
	lea	ecx, DWORD PTR __AtlSafeAllocaManager$[ebp]
	jmp	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
__ehhandler$?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z:
	mov	eax, OFFSET FLAT:$T245644
	jmp	___CxxFrameHandler
text$x	ENDS
?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z ENDP	; ATL::CRegObject::ResourceUnregister
EXTRN	_atexit:NEAR
;	COMDAT CRT$XCU
; File c:\program files\microsoft visual studio .net 2003\vc7\atlmfc\include\atlbase.h
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E1
; Function compile flags: /Ogtpy
CRT$XCU	ENDS
;	COMDAT _$E1
text$yc	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 2602 : __declspec(selectany) CAtlWinModule _AtlWinModule;

	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	call	??0CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::CAtlWinModule
	push	OFFSET FLAT:_$E2
	call	_atexit
	pop	ecx
	ret	0
_$E1	ENDP
text$yc	ENDS
PUBLIC	?theTrackIRObject@@3VTrackIR@@A			; theTrackIRObject
CRT$XCU	SEGMENT
_$S7	DD	FLAT:_$E5
CRT$XCU	ENDS
_DATA	SEGMENT
?theTrackIRObject@@3VTrackIR@@A DB 08H DUP (?)
	DB	01H					; theTrackIRObject
	DB	01H
	DB	10 DUP(00H)
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
; Function compile flags: /Ogtpy
; File f:\projects\freefalcon\ui\src\winmain.cpp
_DATA	ENDS
;	COMDAT _$E5
text$yc	SEGMENT
_$E5	PROC NEAR					; COMDAT

; 92   : TrackIR theTrackIRObject;		// Retro 27/09/03

	push	OFFSET FLAT:_$E6
	call	_atexit
	pop	ecx
	ret	0
_$E5	ENDP
text$yc	ENDS
CRT$XCU	SEGMENT
_$S10	DD	FLAT:_$E8
; Function compile flags: /Ogtpy
CRT$XCU	ENDS
;	COMDAT _$E8
text$yc	SEGMENT
_$E8	PROC NEAR					; COMDAT

; 123  : CComModule _Module;

	mov	ecx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A
	call	??0CComModule@ATL@@QAE@XZ		; ATL::CComModule::CComModule
	push	OFFSET FLAT:_$E9
	call	_atexit
	pop	ecx
	ret	0
_$E8	ENDP
text$yc	ENDS
CRT$XCU	SEGMENT
_$S13	DD	FLAT:_$E11
; Function compile flags: /Ogtpy
CRT$XCU	ENDS
;	COMDAT _$E11
text$yc	SEGMENT
_$E11	PROC NEAR					; COMDAT

; 130  : GNETCORELib::IUplinkPtr m_pUplink;

	push	OFFSET FLAT:_$E12
	call	_atexit
	pop	ecx
	ret	0
_$E11	ENDP
text$yc	ENDS
EXTRN	??0falcon4LeakCheck@@QAE@XZ:NEAR		; falcon4LeakCheck::falcon4LeakCheck
CRT$XCU	SEGMENT
_$S16	DD	FLAT:_$E14
; Function compile flags: /Ogtpy
CRT$XCU	ENDS
;	COMDAT _$E14
text$yc	SEGMENT
_$E14	PROC NEAR					; COMDAT

; 385  : falcon4LeakCheck flc;

	mov	ecx, OFFSET FLAT:?flc@@3Vfalcon4LeakCheck@@A ; flc
	call	??0falcon4LeakCheck@@QAE@XZ		; falcon4LeakCheck::falcon4LeakCheck
	push	OFFSET FLAT:_$E15
	call	_atexit
	pop	ecx
	ret	0
_$E14	ENDP
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT _$E6
text$yd	SEGMENT
_$E6	PROC NEAR					; COMDAT
	ret	0
_$E6	ENDP
text$yd	ENDS
EXTRN	??1falcon4LeakCheck@@UAE@XZ:NEAR		; falcon4LeakCheck::~falcon4LeakCheck
; Function compile flags: /Ogtpy
;	COMDAT _$E15
text$yd	SEGMENT
_$E15	PROC NEAR					; COMDAT
	mov	ecx, OFFSET FLAT:?flc@@3Vfalcon4LeakCheck@@A ; flc
	jmp	??1falcon4LeakCheck@@UAE@XZ		; falcon4LeakCheck::~falcon4LeakCheck
_$E15	ENDP
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT _$E9
text$yd	SEGMENT
_$E9	PROC NEAR					; COMDAT
	mov	ecx, OFFSET FLAT:?_Module@@3VCComModule@ATL@@A
	jmp	??1CComModule@ATL@@UAE@XZ
_$E9	ENDP
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT _$E12
text$yd	SEGMENT
_$E12	PROC NEAR					; COMDAT
	mov	eax, DWORD PTR ?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
	test	eax, eax
	je	SHORT $L245695
	mov	ecx, DWORD PTR [eax]
	push	eax
	call	DWORD PTR [ecx+8]
$L245695:
	ret	0
_$E12	ENDP
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT _$E2
text$yd	SEGMENT
_$E2	PROC NEAR					; COMDAT
	mov	ecx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
	jmp	??1CAtlWinModule@ATL@@QAE@XZ		; ATL::CAtlWinModule::~CAtlWinModule
_$E2	ENDP
text$yd	ENDS
PUBLIC	?flc@@3Vfalcon4LeakCheck@@A			; flc
PUBLIC	?_Module@@3VCComModule@ATL@@A			; _Module
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A ; m_pUplink
_BSS	SEGMENT
?flc@@3Vfalcon4LeakCheck@@A DD 01H DUP (?)		; flc
?_Module@@3VCComModule@ATL@@A DB 030H DUP (?)		; _Module
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 02cH DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
_BSS	SEGMENT
?m_pUplink@@3V?$_com_ptr_t@V?$_com_IIID@UIUplink@GNETCORELib@@$1?_GUID_5ff85b6b_de05_42b9_831f_dc6a4e30a513@@3U__s_GUID@@B@@@@A DD 01H DUP (?) ; m_pUplink
_BSS	ENDS
END
