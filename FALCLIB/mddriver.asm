; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\mddriver.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	??_C@_0DO@ILOFNKMH@$A?2campaign?2save?2Element?4b?5?$DN?5c3a@ ; `string'
PUBLIC	??_C@_0DK@CPOGJCJD@$A?2campaign?2save?2END?4B?5?$DN?55580c35@ ; `string'
PUBLIC	??_C@_0DP@KHHIGDGG@$A?2campaign?2save?2Element?4db?5?$DN?58c@ ; `string'
PUBLIC	??_C@_0EA@HDAFPPDP@$A?2campaign?2save?2Element2?4db?5?$DN?5f@ ; `string'
PUBLIC	??_C@_0DP@FPMJGPFN@$A?2campaign?2save?2Emerganc?4b?5?$DN?5b4@ ; `string'
PUBLIC	??_C@_0DP@LDLMILLE@$A?2campaign?2save?2FALCON4?4RT?5?$DN?574@ ; `string'
PUBLIC	??_C@_0DO@MHFLPGNO@$A?2campaign?2save?2FEATURE?4B?5?$DN?59bb@ ; `string'
PUBLIC	??_C@_0DP@HIEDLFJP@$A?2campaign?2save?2FLEVENT?4DB?5?$DN?5c7@ ; `string'
PUBLIC	??_C@_0DP@KOONMMND@$A?2campaign?2save?2FORDEND?4DB?5?$DN?506@ ; `string'
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	??_C@_0DP@GDPDICAL@$A?2campaign?2save?2FORDEVT?4DB?5?$DN?512@ ; `string'
PUBLIC	??_C@_0EA@OPAJGKPP@$A?2campaign?2save?2FORDWEAP?4DB?5?$DN?56@ ; `string'
PUBLIC	??_C@_0EA@LPENJPLJ@$A?2campaign?2save?2Furball?4dfs?5?$DN?57@ ; `string'
PUBLIC	??_C@_0DN@IBEEGFKK@$A?2campaign?2save?2Korea?4tc?5?$DN?54b03@ ; `string'
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	??_C@_0DN@BHKKKAKN@$A?2campaign?2save?2Korea?4tm?5?$DN?57986@ ; `string'
PUBLIC	??_C@_0DO@JALEFLJG@$A?2campaign?2save?2Loadout?4b?5?$DN?525d@ ; `string'
PUBLIC	??_C@_0DP@MOJLPDLI@$A?2campaign?2save?2LOADOUTH?4B?5?$DN?58a@ ; `string'
PUBLIC	??_C@_0DO@ODAGECJH@$A?2campaign?2save?2NoSquad?4b?5?$DN?59fb@ ; `string'
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	??_C@_0DP@BENFLGJE@$A?2campaign?2save?2OBJECTIV?4B?5?$DN?5e7@ ; `string'
PUBLIC	??_C@_0DP@KKDNIBAG@$A?2campaign?2save?2PackHead?4b?5?$DN?591@ ; `string'
PUBLIC	??_C@_0EA@LJEAIPPA@$A?2campaign?2save?2PElement?4db?5?$DN?56@ ; `string'
PUBLIC	??_C@_0DN@DFKENHGA@$A?2campaign?2save?2Pilot?4db?5?$DN?5a116@ ; `string'
PUBLIC	??_C@_0DK@CJBOGKBD@$A?2campaign?2save?2RoE?4b?5?$DN?57fe7f49@ ; `string'
PUBLIC	??_C@_0DM@HKNJHBMG@$A?2campaign?2save?2SQUAD?4B?5?$DN?5e2b9e@ ; `string'
PUBLIC	??_C@_0DO@BJMAHKEF@$A?2campaign?2save?2STEERPT?4B?5?$DN?5174@ ; `string'
PUBLIC	??_C@_0DP@JDNNBLGI@$A?2campaign?2save?2STEERPTH?4B?5?$DN?5c3@ ; `string'
PUBLIC	??_C@_0DN@DHHGNEGJ@$A?2campaign?2save?2TASK?4GBD?5?$DN?54113@ ; `string'
PUBLIC	??_C@_0DO@OBLHILOL@$A?2campaign?2save?2Threats?4b?5?$DN?57d3@ ; `string'
PUBLIC	??_C@_0EA@FDFGOGLP@$A?2campaign?2save?2VALIDAC?4ACT?5?$DN?50@ ; `string'
PUBLIC	??_C@_0DO@CFCDDOD@$A?2campaign?2save?2Weather?4b?5?$DN?5dc5@ ; `string'
PUBLIC	??_C@_0DK@JMBMIKF@$A?2campaign?2save?2f0?4ia?5?$DN?567c64b4@ ; `string'
PUBLIC	??_C@_0DK@FGOFACJI@$A?2campaign?2save?2f1?4ia?5?$DN?529b4ea1@ ; `string'
PUBLIC	??_C@_0DK@HFCJMLDH@$A?2campaign?2save?2f2?4ia?5?$DN?5a9fff7c@ ; `string'
PUBLIC	??_C@_0DK@OODHMEKJ@$A?2campaign?2save?2f3?4ia?5?$DN?557fb129@ ; `string'
PUBLIC	??_C@_0DK@JCLNCBDH@$A?2campaign?2save?2f4?4ia?5?$DN?503cac70@ ; `string'
PUBLIC	??_C@_0DL@IGCCGCLH@$A?2campaign?2save?2f10?4ia?5?$DN?586c3ad@ ; `string'
PUBLIC	??_C@_0DL@DBOEKBEJ@$A?2campaign?2save?2f11?4ia?5?$DN?5e69922@ ; `string'
PUBLIC	??_C@_0DL@DFFCHMGB@$A?2campaign?2save?2f12?4ia?5?$DN?56cd34b@ ; `string'
PUBLIC	??_C@_0DL@EHHAHIGF@$A?2campaign?2save?2f13?4ia?5?$DN?5398e41@ ; `string'
PUBLIC	??_C@_0DK@BAPLKHBA@$A?2campaign?2save?2f5?4ia?5?$DN?54bb677c@ ; `string'
PUBLIC	??_C@_0DK@FNLMKKLD@$A?2campaign?2save?2f6?4ia?5?$DN?52f8eac7@ ; `string'
PUBLIC	??_C@_0DK@GBLPLPNO@$A?2campaign?2save?2f7?4ia?5?$DN?5a51f637@ ; `string'
PUBLIC	??_C@_0DK@FFKOBJFK@$A?2campaign?2save?2f8?4ia?5?$DN?5cde066a@ ; `string'
PUBLIC	??_C@_0DK@BGPPMMID@$A?2campaign?2save?2f9?4ia?5?$DN?5d779f3a@ ; `string'
PUBLIC	??_C@_0DK@NFHCMKKG@$A?2campaign?2save?2m0?4ia?5?$DN?59664fb9@ ; `string'
PUBLIC	??_C@_0DK@ECEIHGMI@$A?2campaign?2save?2m1?4ia?5?$DN?5e73decf@ ; `string'
PUBLIC	??_C@_0DK@GIPEMGEA@$A?2campaign?2save?2m2?4ia?5?$DN?5e73decf@ ; `string'
PUBLIC	??_C@_0DK@MHLAFEAH@$A?2campaign?2save?2m3?4ia?5?$DN?5e73decf@ ; `string'
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	??_C@_0DK@DNINKHFA@$A?2campaign?2save?2m4?4ia?5?$DN?5e73decf@ ; `string'
PUBLIC	??_C@_0DP@IAFIGHPD@$A?2campaign?2save?2related?4db?5?$DN?5a8@ ; `string'
PUBLIC	??_C@_0DO@KCBBLPIB@$A?2campaign?2save?2taceng?4db?5?$DN?5b93@ ; `string'
PUBLIC	??_C@_0DP@EAFJGBLG@$A?2campaign?2save?2FALCON4?4TT?5?$DN?5e0@ ; `string'
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	??_C@_0DO@PKBCMDGN@$A?2campaign?2save?2Support?4b?5?$DN?5521@ ; `string'
PUBLIC	??_C@_0DP@EDCDDANB@$A?2campaign?2save?2PHEADER?4DB?5?$DN?517@ ; `string'
PUBLIC	??_C@_0DO@OGPANHIK@$A?2campaign?2save?2SITUATE?4B?5?$DN?5bd2@ ; `string'
PUBLIC	??_C@_0DN@PDIMJMFL@$A?2campaign?2save?2THREAT?4B?5?$DN?59fa9@ ; `string'
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	??_C@_0DP@ILHMOIGB@$A?2campaign?2save?2FORDNCE?4DB?5?$DN?568@ ; `string'
PUBLIC	??_C@_0EC@JPIONKBG@$A?2campaign?2save?2doctrine0?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@JLDIDGGA@$A?2campaign?2save?2doctrine1?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@BBHECGMI@$A?2campaign?2save?2doctrine2?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@MOHLILGP@$A?2campaign?2save?2doctrine3?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@BMKCMOIL@$A?2campaign?2save?2doctrine4?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@OFCMDJDB@$A?2campaign?2save?2doctrine5?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@PMELPJPB@$A?2campaign?2save?2doctrine6?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0EC@JDBAJCBP@$A?2campaign?2save?2doctrine7?4txt?5?$DN@ ; `string'
PUBLIC	??_C@_0DM@CGHCNHDN@$A?2campaign?2save?2atc?4ini?5?$DN?52ee82@ ; `string'
PUBLIC	??_C@_0DO@OPEAIHAB@$A?2campaign?2save?2Flight?4db?5?$DN?5dcf@ ; `string'
PUBLIC	??_C@_0DN@LGJACHCA@$A?2campaign?2save?2Header?4b?5?$DN?5324d@ ; `string'
PUBLIC	??_C@_0EA@LBDBCDMB@$A?2campaign?2save?2MISSION?4GBD?5?$DN?56@ ; `string'
PUBLIC	??_C@_0EA@JMLHODNG@$A?2campaign?2save?2Defense?4pri?5?$DN?5e@ ; `string'
PUBLIC	??_C@_0EA@NKKOPMOF@$A?2campaign?2save?2Intdict?4pri?5?$DN?51@ ; `string'
PUBLIC	??_C@_0EA@BKCMCNOC@$A?2campaign?2save?2OFFENSE?4PRI?5?$DN?57@ ; `string'
PUBLIC	??_C@_0DP@HGEIKMLM@$A?2campaign?2save?2attrit?4pri?5?$DN?539@ ; `string'
PUBLIC	??_C@_0DM@BPMFAMHM@$A?2campaign?2save?2cas?4pri?5?$DN?55e1d8@ ; `string'
PUBLIC	??_C@_0DP@CMIDMPPB@$A?2campaign?2save?2Results?4db?5?$DN?5cc@ ; `string'
PUBLIC	??_C@_0EA@NFPMMLLK@$A?2campaign?2save?2Falcon4?4AII?5?$DN?55@ ; `string'
PUBLIC	??_C@_0DH@OCAEKCOG@$A?2Zips?2simdata?4zip?5?$DN?5cbf1e58d74@ ; `string'
PUBLIC	??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@	; `string'
PUBLIC	??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@ ; `string'
PUBLIC	??_C@_0DB@GEBKDNDL@$B?2FALCON4?4CT?5?$DN?5d7a33b0de1edb00a@ ; `string'
PUBLIC	??_C@_0DC@IJJEGLNA@$B?2FALCON4?4FCD?5?$DN?5c66eef16386224e@ ; `string'
PUBLIC	??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@ ; `string'
PUBLIC	??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@ ; `string'
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	??_C@_0DC@HCJKECFH@$B?2FALCON4?4INI?5?$DN?515be069a9464b08@ ; `string'
PUBLIC	??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@ ; `string'
PUBLIC	??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@ ; `string'
PUBLIC	??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@ ; `string'
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@ ; `string'
PUBLIC	??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@ ; `string'
PUBLIC	??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@ ; `string'
PUBLIC	??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@ ; `string'
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	??_C@_0DC@MMINLHOH@$B?2FALCON4?4UCD?5?$DN?5561ff8503f3b29c@ ; `string'
PUBLIC	??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@ ; `string'
PUBLIC	??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@ ; `string'
PUBLIC	??_C@_0DC@FJHPFLMB@$B?2FALCON4?4WCD?5?$DN?5b28af89f3c40c3d@ ; `string'
PUBLIC	??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@ ; `string'
PUBLIC	??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@ ; `string'
PUBLIC	??_C@_0DC@CACAPDAK@$B?2FALCON4?4FCD?5?$DN?51d8a5988ae32e9e@ ; `string'
PUBLIC	??_C@_0DC@DIGFLCHB@$B?2FALCON4?4ini?5?$DN?58dfa0703952358c@ ; `string'
PUBLIC	??_C@_0DC@MIPPPJHG@$B?2FALCON4?4UCD?5?$DN?5d5bf866da777add@ ; `string'
PUBLIC	??_C@_0DC@FEGEOCME@$B?2FALCON4?4WCD?5?$DN?59b927a627da7faa@ ; `string'
PUBLIC	??_C@_0DC@IHELFICN@$B?2FALCON4?4FCD?5?$DN?5345a4ea2d6fe25e@ ; `string'
PUBLIC	??_C@_0DC@EKMPBFDF@$B?2FALCON4?4ini?5?$DN?5ebcc603e532e970@ ; `string'
PUBLIC	??_C@_0DC@HIMJJAFI@$B?2FALCON4?4UCD?5?$DN?5c04ab0706960d99@ ; `string'
PUBLIC	??_C@_0DC@OBOBCMMM@$B?2FALCON4?4WCD?5?$DN?5220f69aa1a27388@ ; `string'
PUBLIC	??_C@_0DC@IKLOGKMK@$B?2FALCON4?4FCD?5?$DN?57de5019a5f8c97c@ ; `string'
PUBLIC	??_C@_0DC@OMNGCFIH@$B?2FALCON4?4ini?5?$DN?5c58c1713d14cb84@ ; `string'
PUBLIC	??_C@_0DC@DGLHPNGA@$B?2FALCON4?4UCD?5?$DN?58af25e6c6cc4ac7@ ; `string'
PUBLIC	??_C@_0DC@COFHOOKO@$B?2FALCON4?4WCD?5?$DN?5b9f444c6d868cd4@ ; `string'
PUBLIC	??_C@_0DC@ENKHKKJE@$B?2FALCON4?4FCD?5?$DN?53cbeca2644beff9@ ; `string'
PUBLIC	??_C@_0DC@FLCIFMHG@$B?2FALCON4?4ini?5?$DN?53b9dd56b72d0262@ ; `string'
PUBLIC	??_C@_0DC@IGHCFDKO@$B?2FALCON4?4UCD?5?$DN?5d52f4b95d3146fd@ ; `string'
PUBLIC	??_C@_0DC@NIPKILID@$B?2FALCON4?4WCD?5?$DN?53bf78e9fee153be@ ; `string'
PUBLIC	??_C@_0DC@LEKAEIBC@$B?2FALCON4?4FCD?5?$DN?58332f7a5def374a@ ; `string'
PUBLIC	??_C@_0DC@BNDMIKC@$B?2FALCON4?4INI?5?$DN?5c5f448b812a3239@ ; `string'
PUBLIC	??_C@_0DC@MGKLEDOF@$B?2FALCON4?4UCD?5?$DN?530dfe0d7c5b3918@ ; `string'
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	??_C@_0DC@BEKLMHIN@$B?2FALCON4?4WCD?5?$DN?5f8a2635b93e08b6@ ; `string'
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@ ; `string'
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
_BSS	SEGMENT
_LocalizedInvalidDataStr DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
CONST	SEGMENT
??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@ DB 'Invalid Dat'
	DB	'a files, Please Reinstall Falcon 4.0', 00H	; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ??_C@_0DC@BEKLMHIN@$B?2FALCON4?4WCD?5?$DN?5f8a2635b93e08b6@
CONST	SEGMENT
??_C@_0DC@BEKLMHIN@$B?2FALCON4?4WCD?5?$DN?5f8a2635b93e08b6@ DB '$B\FALCON'
	DB	'4.WCD = f8a2635b93e08b68adab3168c36b0785', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ??_C@_0DC@MGKLEDOF@$B?2FALCON4?4UCD?5?$DN?530dfe0d7c5b3918@
CONST	SEGMENT
??_C@_0DC@MGKLEDOF@$B?2FALCON4?4UCD?5?$DN?530dfe0d7c5b3918@ DB '$B\FALCON'
	DB	'4.UCD = 30dfe0d7c5b39185fa62a2c860a005d5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BNDMIKC@$B?2FALCON4?4INI?5?$DN?5c5f448b812a3239@
CONST	SEGMENT
??_C@_0DC@BNDMIKC@$B?2FALCON4?4INI?5?$DN?5c5f448b812a3239@ DB '$B\FALCON4'
	DB	'.INI = c5f448b812a3239f7fd33ee95ea18063', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@LEKAEIBC@$B?2FALCON4?4FCD?5?$DN?58332f7a5def374a@
CONST	SEGMENT
??_C@_0DC@LEKAEIBC@$B?2FALCON4?4FCD?5?$DN?58332f7a5def374a@ DB '$B\FALCON'
	DB	'4.FCD = 8332f7a5def374aea30494faac564174', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NIPKILID@$B?2FALCON4?4WCD?5?$DN?53bf78e9fee153be@
CONST	SEGMENT
??_C@_0DC@NIPKILID@$B?2FALCON4?4WCD?5?$DN?53bf78e9fee153be@ DB '$B\FALCON'
	DB	'4.WCD = 3bf78e9fee153be51246f54c90e80380', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IGHCFDKO@$B?2FALCON4?4UCD?5?$DN?5d52f4b95d3146fd@
CONST	SEGMENT
??_C@_0DC@IGHCFDKO@$B?2FALCON4?4UCD?5?$DN?5d52f4b95d3146fd@ DB '$B\FALCON'
	DB	'4.UCD = d52f4b95d3146fd1d53ec86bcd2df721', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FLCIFMHG@$B?2FALCON4?4ini?5?$DN?53b9dd56b72d0262@
CONST	SEGMENT
??_C@_0DC@FLCIFMHG@$B?2FALCON4?4ini?5?$DN?53b9dd56b72d0262@ DB '$B\FALCON'
	DB	'4.ini = 3b9dd56b72d026281fa5fc68c3f93968', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@ENKHKKJE@$B?2FALCON4?4FCD?5?$DN?53cbeca2644beff9@
CONST	SEGMENT
??_C@_0DC@ENKHKKJE@$B?2FALCON4?4FCD?5?$DN?53cbeca2644beff9@ DB '$B\FALCON'
	DB	'4.FCD = 3cbeca2644beff9c50190dfca9906a8b', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@COFHOOKO@$B?2FALCON4?4WCD?5?$DN?5b9f444c6d868cd4@
CONST	SEGMENT
??_C@_0DC@COFHOOKO@$B?2FALCON4?4WCD?5?$DN?5b9f444c6d868cd4@ DB '$B\FALCON'
	DB	'4.WCD = b9f444c6d868cd4213f16aef71cd9b52', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DGLHPNGA@$B?2FALCON4?4UCD?5?$DN?58af25e6c6cc4ac7@
CONST	SEGMENT
??_C@_0DC@DGLHPNGA@$B?2FALCON4?4UCD?5?$DN?58af25e6c6cc4ac7@ DB '$B\FALCON'
	DB	'4.UCD = 8af25e6c6cc4ac7dede481086ce8546d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OMNGCFIH@$B?2FALCON4?4ini?5?$DN?5c58c1713d14cb84@
CONST	SEGMENT
??_C@_0DC@OMNGCFIH@$B?2FALCON4?4ini?5?$DN?5c58c1713d14cb84@ DB '$B\FALCON'
	DB	'4.ini = c58c1713d14cb84d0e0b639667eb3a74', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IKLOGKMK@$B?2FALCON4?4FCD?5?$DN?57de5019a5f8c97c@
CONST	SEGMENT
??_C@_0DC@IKLOGKMK@$B?2FALCON4?4FCD?5?$DN?57de5019a5f8c97c@ DB '$B\FALCON'
	DB	'4.FCD = 7de5019a5f8c97cd7b27a8873a573052', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OBOBCMMM@$B?2FALCON4?4WCD?5?$DN?5220f69aa1a27388@
CONST	SEGMENT
??_C@_0DC@OBOBCMMM@$B?2FALCON4?4WCD?5?$DN?5220f69aa1a27388@ DB '$B\FALCON'
	DB	'4.WCD = 220f69aa1a27388d32a9bd915fa09a9e', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HIMJJAFI@$B?2FALCON4?4UCD?5?$DN?5c04ab0706960d99@
CONST	SEGMENT
??_C@_0DC@HIMJJAFI@$B?2FALCON4?4UCD?5?$DN?5c04ab0706960d99@ DB '$B\FALCON'
	DB	'4.UCD = c04ab0706960d99e7df7909fa03d0fcd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EKMPBFDF@$B?2FALCON4?4ini?5?$DN?5ebcc603e532e970@
CONST	SEGMENT
??_C@_0DC@EKMPBFDF@$B?2FALCON4?4ini?5?$DN?5ebcc603e532e970@ DB '$B\FALCON'
	DB	'4.ini = ebcc603e532e97097208ebb30a9dee7f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IHELFICN@$B?2FALCON4?4FCD?5?$DN?5345a4ea2d6fe25e@
CONST	SEGMENT
??_C@_0DC@IHELFICN@$B?2FALCON4?4FCD?5?$DN?5345a4ea2d6fe25e@ DB '$B\FALCON'
	DB	'4.FCD = 345a4ea2d6fe25e215ee350bef6872b8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FEGEOCME@$B?2FALCON4?4WCD?5?$DN?59b927a627da7faa@
CONST	SEGMENT
??_C@_0DC@FEGEOCME@$B?2FALCON4?4WCD?5?$DN?59b927a627da7faa@ DB '$B\FALCON'
	DB	'4.WCD = 9b927a627da7faa9595865c3c025a655', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MIPPPJHG@$B?2FALCON4?4UCD?5?$DN?5d5bf866da777add@
CONST	SEGMENT
??_C@_0DC@MIPPPJHG@$B?2FALCON4?4UCD?5?$DN?5d5bf866da777add@ DB '$B\FALCON'
	DB	'4.UCD = d5bf866da777addf3b738a70013c5b75', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DIGFLCHB@$B?2FALCON4?4ini?5?$DN?58dfa0703952358c@
CONST	SEGMENT
??_C@_0DC@DIGFLCHB@$B?2FALCON4?4ini?5?$DN?58dfa0703952358c@ DB '$B\FALCON'
	DB	'4.ini = 8dfa0703952358ce7f63b77733399dbc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@CACAPDAK@$B?2FALCON4?4FCD?5?$DN?51d8a5988ae32e9e@
CONST	SEGMENT
??_C@_0DC@CACAPDAK@$B?2FALCON4?4FCD?5?$DN?51d8a5988ae32e9e@ DB '$B\FALCON'
	DB	'4.FCD = 1d8a5988ae32e9e59d7d0463411bdae6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@
CONST	SEGMENT
??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@ DB '$B\FALCON'
	DB	'4.ct = d7a33b0de1edb00ab78e35ee03808ee6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
CONST	SEGMENT
??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@ DB '$B\FALCON'
	DB	'4.WLD = 1263dea15a092a1b3aa0d00d7c0f0898', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FJHPFLMB@$B?2FALCON4?4WCD?5?$DN?5b28af89f3c40c3d@
CONST	SEGMENT
??_C@_0DC@FJHPFLMB@$B?2FALCON4?4WCD?5?$DN?5b28af89f3c40c3d@ DB '$B\FALCON'
	DB	'4.WCD = b28af89f3c40c3d626abfd6e478bb076', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
CONST	SEGMENT
??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@ DB '$B\FALCON'
	DB	'4.VSD = f3630334dd8e8641f9f568271b2cfba4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
CONST	SEGMENT
??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@ DB '$B\FALCON'
	DB	'4.VCD = c8c8f61d5ccf548ba4b3f43d432d7db5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MMINLHOH@$B?2FALCON4?4UCD?5?$DN?5561ff8503f3b29c@
CONST	SEGMENT
??_C@_0DC@MMINLHOH@$B?2FALCON4?4UCD?5?$DN?5561ff8503f3b29c@ DB '$B\FALCON'
	DB	'4.UCD = 561ff8503f3b29c468f55a2ae7e19807', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
CONST	SEGMENT
??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@ DB '$B\FALCON'
	DB	'4.SWD = 285d1f36b67f611e5d861e3b15054264', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
CONST	SEGMENT
??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@ DB '$B\FALCON'
	DB	'4.SSD = 634b6de1e32885c88ed14ee48f94ff10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
CONST	SEGMENT
??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@ DB '$B\FALCON'
	DB	'4.RWD = 8230111d0c1404524c9e1f5e60fc5ecf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
CONST	SEGMENT
??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@ DB '$B\FALCON'
	DB	'4.RCD = b8614faf00feb2227aee91ac80ee7e3e', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
CONST	SEGMENT
??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@ DB '$B\FALCON'
	DB	'4.PHD = 03d269ef08f11a987653a95358cf4047', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
CONST	SEGMENT
??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@ DB '$B\FALCON'
	DB	'4.PD = 40a85b59537d42f660d03e610320abdf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
CONST	SEGMENT
??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@ DB '$B\FALCON'
	DB	'4.OCD = 1340efd7b8d7765a76d55c7ae63e6595', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HCJKECFH@$B?2FALCON4?4INI?5?$DN?515be069a9464b08@
CONST	SEGMENT
??_C@_0DC@HCJKECFH@$B?2FALCON4?4INI?5?$DN?515be069a9464b08@ DB '$B\FALCON'
	DB	'4.INI = 15be069a9464b0871eb98c976afcfe72', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
CONST	SEGMENT
??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@ DB '$B\FALCON'
	DB	'4.ICD = f3c945b3ed086e6d9de69226c1a2ebb6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
CONST	SEGMENT
??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@ DB '$B\FALCON'
	DB	'4.FED = 7640e4f088da7924e55a44a87e328cef', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IJJEGLNA@$B?2FALCON4?4FCD?5?$DN?5c66eef16386224e@
CONST	SEGMENT
??_C@_0DC@IJJEGLNA@$B?2FALCON4?4FCD?5?$DN?5c66eef16386224e@ DB '$B\FALCON'
	DB	'4.FCD = c66eef16386224ee21d0464897f9cbb4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GEBKDNDL@$B?2FALCON4?4CT?5?$DN?5d7a33b0de1edb00a@
CONST	SEGMENT
??_C@_0DB@GEBKDNDL@$B?2FALCON4?4CT?5?$DN?5d7a33b0de1edb00a@ DB '$B\FALCON'
	DB	'4.CT = d7a33b0de1edb00ab78e35ee03808ee6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
CONST	SEGMENT
??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@ DB '$B\FALCON'
	DB	'4.ACD = 915068ffa6cf2e17ae294f5abceff370', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
CONST	SEGMENT
??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@ DB 'LASTFILE = 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@OCAEKCOG@$A?2Zips?2simdata?4zip?5?$DN?5cbf1e58d74@
CONST	SEGMENT
??_C@_0DH@OCAEKCOG@$A?2Zips?2simdata?4zip?5?$DN?5cbf1e58d74@ DB '$A\Zips\'
	DB	'simdata.zip = cbf1e58d74f047ce09c4633a70dcce8e', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@NFPMMLLK@$A?2campaign?2save?2Falcon4?4AII?5?$DN?55@
CONST	SEGMENT
??_C@_0EA@NFPMMLLK@$A?2campaign?2save?2Falcon4?4AII?5?$DN?55@ DB '$A\camp'
	DB	'aign\save\Falcon4.AII = 571befcfd724492d4e1921ba7ed8d445', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@CMIDMPPB@$A?2campaign?2save?2Results?4db?5?$DN?5cc@
CONST	SEGMENT
??_C@_0DP@CMIDMPPB@$A?2campaign?2save?2Results?4db?5?$DN?5cc@ DB '$A\camp'
	DB	'aign\save\Results.db = ccfbb1e2ae6058b2e1d6a1631844c985', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@BPMFAMHM@$A?2campaign?2save?2cas?4pri?5?$DN?55e1d8@
CONST	SEGMENT
??_C@_0DM@BPMFAMHM@$A?2campaign?2save?2cas?4pri?5?$DN?55e1d8@ DB '$A\camp'
	DB	'aign\save\cas.pri = 5e1d86c6a918218104e33324b015eb50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@HGEIKMLM@$A?2campaign?2save?2attrit?4pri?5?$DN?539@
CONST	SEGMENT
??_C@_0DP@HGEIKMLM@$A?2campaign?2save?2attrit?4pri?5?$DN?539@ DB '$A\camp'
	DB	'aign\save\attrit.pri = 3973524aa88e93e5fdba0a61a1756df2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BKCMCNOC@$A?2campaign?2save?2OFFENSE?4PRI?5?$DN?57@
CONST	SEGMENT
??_C@_0EA@BKCMCNOC@$A?2campaign?2save?2OFFENSE?4PRI?5?$DN?57@ DB '$A\camp'
	DB	'aign\save\OFFENSE.PRI = 7f11a6682173ab123cdc24641991b0b4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@NKKOPMOF@$A?2campaign?2save?2Intdict?4pri?5?$DN?51@
CONST	SEGMENT
??_C@_0EA@NKKOPMOF@$A?2campaign?2save?2Intdict?4pri?5?$DN?51@ DB '$A\camp'
	DB	'aign\save\Intdict.pri = 119e7730b318dd8e650734a43d1bd61a', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@JMLHODNG@$A?2campaign?2save?2Defense?4pri?5?$DN?5e@
CONST	SEGMENT
??_C@_0EA@JMLHODNG@$A?2campaign?2save?2Defense?4pri?5?$DN?5e@ DB '$A\camp'
	DB	'aign\save\Defense.pri = e3b8c827031165cc1f6837df129fb8dd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LBDBCDMB@$A?2campaign?2save?2MISSION?4GBD?5?$DN?56@
CONST	SEGMENT
??_C@_0EA@LBDBCDMB@$A?2campaign?2save?2MISSION?4GBD?5?$DN?56@ DB '$A\camp'
	DB	'aign\save\MISSION.GBD = 62b1d9fe4f64d3b135c1c8e8ff56dda6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LGJACHCA@$A?2campaign?2save?2Header?4b?5?$DN?5324d@
CONST	SEGMENT
??_C@_0DN@LGJACHCA@$A?2campaign?2save?2Header?4b?5?$DN?5324d@ DB '$A\camp'
	DB	'aign\save\Header.b = 324dcac379540f96bd829ebb18998436', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OPEAIHAB@$A?2campaign?2save?2Flight?4db?5?$DN?5dcf@
CONST	SEGMENT
??_C@_0DO@OPEAIHAB@$A?2campaign?2save?2Flight?4db?5?$DN?5dcf@ DB '$A\camp'
	DB	'aign\save\Flight.db = dcfb77277d03dc08c92fe691ad02a28c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CGHCNHDN@$A?2campaign?2save?2atc?4ini?5?$DN?52ee82@
CONST	SEGMENT
??_C@_0DM@CGHCNHDN@$A?2campaign?2save?2atc?4ini?5?$DN?52ee82@ DB '$A\camp'
	DB	'aign\save\atc.ini = 2ee82a5d43652fb057c984b562cd7827', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JDBAJCBP@$A?2campaign?2save?2doctrine7?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@JDBAJCBP@$A?2campaign?2save?2doctrine7?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine7.txt = d6e06881394eeef4f9b327d016b734ee', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@PMELPJPB@$A?2campaign?2save?2doctrine6?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@PMELPJPB@$A?2campaign?2save?2doctrine6?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine6.txt = 035302c876f8490dfc196d6f26418544', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@OFCMDJDB@$A?2campaign?2save?2doctrine5?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@OFCMDJDB@$A?2campaign?2save?2doctrine5?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine5.txt = 22b0fdf5ba3fd26db9a9f22dab48a464', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@BMKCMOIL@$A?2campaign?2save?2doctrine4?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@BMKCMOIL@$A?2campaign?2save?2doctrine4?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine4.txt = 7bd43c590a3b0a48f1b75694822a77a3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@MOHLILGP@$A?2campaign?2save?2doctrine3?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@MOHLILGP@$A?2campaign?2save?2doctrine3?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine3.txt = 7a0f349bfbcedbeb92bd9b250912cd11', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@BBHECGMI@$A?2campaign?2save?2doctrine2?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@BBHECGMI@$A?2campaign?2save?2doctrine2?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine2.txt = 32ebf8920fb39278de84196cdcbf90e6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JLDIDGGA@$A?2campaign?2save?2doctrine1?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@JLDIDGGA@$A?2campaign?2save?2doctrine1?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine1.txt = 583c998da5556953c33178cab2fe365e', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JPIONKBG@$A?2campaign?2save?2doctrine0?4txt?5?$DN@
CONST	SEGMENT
??_C@_0EC@JPIONKBG@$A?2campaign?2save?2doctrine0?4txt?5?$DN@ DB '$A\campa'
	DB	'ign\save\doctrine0.txt = 3062e50a2242da6b5b03f19aecb9f9ed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@ILHMOIGB@$A?2campaign?2save?2FORDNCE?4DB?5?$DN?568@
CONST	SEGMENT
??_C@_0DP@ILHMOIGB@$A?2campaign?2save?2FORDNCE?4DB?5?$DN?568@ DB '$A\camp'
	DB	'aign\save\FORDNCE.DB = 687b4173fad27ac1e421e0c29c4b933d', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ??_C@_0DN@PDIMJMFL@$A?2campaign?2save?2THREAT?4B?5?$DN?59fa9@
CONST	SEGMENT
??_C@_0DN@PDIMJMFL@$A?2campaign?2save?2THREAT?4B?5?$DN?59fa9@ DB '$A\camp'
	DB	'aign\save\THREAT.B = 9fa99831f1211d96f71dbebdf4bb9b64', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OGPANHIK@$A?2campaign?2save?2SITUATE?4B?5?$DN?5bd2@
CONST	SEGMENT
??_C@_0DO@OGPANHIK@$A?2campaign?2save?2SITUATE?4B?5?$DN?5bd2@ DB '$A\camp'
	DB	'aign\save\SITUATE.B = bd2ed906fa75eb3ac91b55481ddb4d02', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@EDCDDANB@$A?2campaign?2save?2PHEADER?4DB?5?$DN?517@
CONST	SEGMENT
??_C@_0DP@EDCDDANB@$A?2campaign?2save?2PHEADER?4DB?5?$DN?517@ DB '$A\camp'
	DB	'aign\save\PHEADER.DB = 17155985171738d15ccb0893f100d530', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@PKBCMDGN@$A?2campaign?2save?2Support?4b?5?$DN?5521@
CONST	SEGMENT
??_C@_0DO@PKBCMDGN@$A?2campaign?2save?2Support?4b?5?$DN?5521@ DB '$A\camp'
	DB	'aign\save\Support.b = 5217c7b38b05818c6ca8c7c9211261dd', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ??_C@_0DP@EAFJGBLG@$A?2campaign?2save?2FALCON4?4TT?5?$DN?5e0@
CONST	SEGMENT
??_C@_0DP@EAFJGBLG@$A?2campaign?2save?2FALCON4?4TT?5?$DN?5e0@ DB '$A\camp'
	DB	'aign\save\FALCON4.TT = e0dbc658f5b0a95182b47ba5a8cf5eb3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@KCBBLPIB@$A?2campaign?2save?2taceng?4db?5?$DN?5b93@
CONST	SEGMENT
??_C@_0DO@KCBBLPIB@$A?2campaign?2save?2taceng?4db?5?$DN?5b93@ DB '$A\camp'
	DB	'aign\save\taceng.db = b934573361ea317fe63bf1bb06595471', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@IAFIGHPD@$A?2campaign?2save?2related?4db?5?$DN?5a8@
CONST	SEGMENT
??_C@_0DP@IAFIGHPD@$A?2campaign?2save?2related?4db?5?$DN?5a8@ DB '$A\camp'
	DB	'aign\save\related.db = a8339fa83593def393890a57289e9d32', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DNINKHFA@$A?2campaign?2save?2m4?4ia?5?$DN?5e73decf@
CONST	SEGMENT
??_C@_0DK@DNINKHFA@$A?2campaign?2save?2m4?4ia?5?$DN?5e73decf@ DB '$A\camp'
	DB	'aign\save\m4.ia = e73decfccab03e2321a2d6239cf77d3d', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0DK@MHLAFEAH@$A?2campaign?2save?2m3?4ia?5?$DN?5e73decf@
CONST	SEGMENT
??_C@_0DK@MHLAFEAH@$A?2campaign?2save?2m3?4ia?5?$DN?5e73decf@ DB '$A\camp'
	DB	'aign\save\m3.ia = e73decfccab03e2321a2d6239cf77d3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GIPEMGEA@$A?2campaign?2save?2m2?4ia?5?$DN?5e73decf@
CONST	SEGMENT
??_C@_0DK@GIPEMGEA@$A?2campaign?2save?2m2?4ia?5?$DN?5e73decf@ DB '$A\camp'
	DB	'aign\save\m2.ia = e73decfccab03e2321a2d6239cf77d3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@ECEIHGMI@$A?2campaign?2save?2m1?4ia?5?$DN?5e73decf@
CONST	SEGMENT
??_C@_0DK@ECEIHGMI@$A?2campaign?2save?2m1?4ia?5?$DN?5e73decf@ DB '$A\camp'
	DB	'aign\save\m1.ia = e73decfccab03e2321a2d6239cf77d3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NFHCMKKG@$A?2campaign?2save?2m0?4ia?5?$DN?59664fb9@
CONST	SEGMENT
??_C@_0DK@NFHCMKKG@$A?2campaign?2save?2m0?4ia?5?$DN?59664fb9@ DB '$A\camp'
	DB	'aign\save\m0.ia = 9664fb9185f98f7842bd106dd8fc5559', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BGPPMMID@$A?2campaign?2save?2f9?4ia?5?$DN?5d779f3a@
CONST	SEGMENT
??_C@_0DK@BGPPMMID@$A?2campaign?2save?2f9?4ia?5?$DN?5d779f3a@ DB '$A\camp'
	DB	'aign\save\f9.ia = d779f3aa447bdc46256ebfd90f5a16df', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@FFKOBJFK@$A?2campaign?2save?2f8?4ia?5?$DN?5cde066a@
CONST	SEGMENT
??_C@_0DK@FFKOBJFK@$A?2campaign?2save?2f8?4ia?5?$DN?5cde066a@ DB '$A\camp'
	DB	'aign\save\f8.ia = cde066afca5dd77200cc67585b03e6c0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GBLPLPNO@$A?2campaign?2save?2f7?4ia?5?$DN?5a51f637@
CONST	SEGMENT
??_C@_0DK@GBLPLPNO@$A?2campaign?2save?2f7?4ia?5?$DN?5a51f637@ DB '$A\camp'
	DB	'aign\save\f7.ia = a51f63758239d7cda06f767254793528', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@FNLMKKLD@$A?2campaign?2save?2f6?4ia?5?$DN?52f8eac7@
CONST	SEGMENT
??_C@_0DK@FNLMKKLD@$A?2campaign?2save?2f6?4ia?5?$DN?52f8eac7@ DB '$A\camp'
	DB	'aign\save\f6.ia = 2f8eac77ad9871803290efab2af32ac0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BAPLKHBA@$A?2campaign?2save?2f5?4ia?5?$DN?54bb677c@
CONST	SEGMENT
??_C@_0DK@BAPLKHBA@$A?2campaign?2save?2f5?4ia?5?$DN?54bb677c@ DB '$A\camp'
	DB	'aign\save\f5.ia = 4bb677c6fe21b7d367169e1c9e3f0242', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EHHAHIGF@$A?2campaign?2save?2f13?4ia?5?$DN?5398e41@
CONST	SEGMENT
??_C@_0DL@EHHAHIGF@$A?2campaign?2save?2f13?4ia?5?$DN?5398e41@ DB '$A\camp'
	DB	'aign\save\f13.ia = 398e4130c0cc8eb78461f59c0488986c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DFFCHMGB@$A?2campaign?2save?2f12?4ia?5?$DN?56cd34b@
CONST	SEGMENT
??_C@_0DL@DFFCHMGB@$A?2campaign?2save?2f12?4ia?5?$DN?56cd34b@ DB '$A\camp'
	DB	'aign\save\f12.ia = 6cd34b7af2e092cdf2ac4b287a2f17c9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DBOEKBEJ@$A?2campaign?2save?2f11?4ia?5?$DN?5e69922@
CONST	SEGMENT
??_C@_0DL@DBOEKBEJ@$A?2campaign?2save?2f11?4ia?5?$DN?5e69922@ DB '$A\camp'
	DB	'aign\save\f11.ia = e699220cacaed5d4a63d3a36cc2fb1ae', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@IGCCGCLH@$A?2campaign?2save?2f10?4ia?5?$DN?586c3ad@
CONST	SEGMENT
??_C@_0DL@IGCCGCLH@$A?2campaign?2save?2f10?4ia?5?$DN?586c3ad@ DB '$A\camp'
	DB	'aign\save\f10.ia = 86c3adf3973a04b56e4049ecc5f46a8a', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@JCLNCBDH@$A?2campaign?2save?2f4?4ia?5?$DN?503cac70@
CONST	SEGMENT
??_C@_0DK@JCLNCBDH@$A?2campaign?2save?2f4?4ia?5?$DN?503cac70@ DB '$A\camp'
	DB	'aign\save\f4.ia = 03cac704cf4236e3804a210876c394ab', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@OODHMEKJ@$A?2campaign?2save?2f3?4ia?5?$DN?557fb129@
CONST	SEGMENT
??_C@_0DK@OODHMEKJ@$A?2campaign?2save?2f3?4ia?5?$DN?557fb129@ DB '$A\camp'
	DB	'aign\save\f3.ia = 57fb129242472fd8997c22b1508ea400', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@HFCJMLDH@$A?2campaign?2save?2f2?4ia?5?$DN?5a9fff7c@
CONST	SEGMENT
??_C@_0DK@HFCJMLDH@$A?2campaign?2save?2f2?4ia?5?$DN?5a9fff7c@ DB '$A\camp'
	DB	'aign\save\f2.ia = a9fff7caa3a339226738a6338487a139', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@FGOFACJI@$A?2campaign?2save?2f1?4ia?5?$DN?529b4ea1@
CONST	SEGMENT
??_C@_0DK@FGOFACJI@$A?2campaign?2save?2f1?4ia?5?$DN?529b4ea1@ DB '$A\camp'
	DB	'aign\save\f1.ia = 29b4ea15c1e2f673c741c1f6b8fc54e4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@JMBMIKF@$A?2campaign?2save?2f0?4ia?5?$DN?567c64b4@
CONST	SEGMENT
??_C@_0DK@JMBMIKF@$A?2campaign?2save?2f0?4ia?5?$DN?567c64b4@ DB '$A\campa'
	DB	'ign\save\f0.ia = 67c64b4dca759fda1c554d84364e6bd5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@CFCDDOD@$A?2campaign?2save?2Weather?4b?5?$DN?5dc5@
CONST	SEGMENT
??_C@_0DO@CFCDDOD@$A?2campaign?2save?2Weather?4b?5?$DN?5dc5@ DB '$A\campa'
	DB	'ign\save\Weather.b = dc541d28fe05d576aa21d52db296c4f0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@FDFGOGLP@$A?2campaign?2save?2VALIDAC?4ACT?5?$DN?50@
CONST	SEGMENT
??_C@_0EA@FDFGOGLP@$A?2campaign?2save?2VALIDAC?4ACT?5?$DN?50@ DB '$A\camp'
	DB	'aign\save\VALIDAC.ACT = 07ab55b0caac1a4f39abc1e4a9b694ff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OBLHILOL@$A?2campaign?2save?2Threats?4b?5?$DN?57d3@
CONST	SEGMENT
??_C@_0DO@OBLHILOL@$A?2campaign?2save?2Threats?4b?5?$DN?57d3@ DB '$A\camp'
	DB	'aign\save\Threats.b = 7d375c75bda0f6f01bc4bd32e213a7a2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DHHGNEGJ@$A?2campaign?2save?2TASK?4GBD?5?$DN?54113@
CONST	SEGMENT
??_C@_0DN@DHHGNEGJ@$A?2campaign?2save?2TASK?4GBD?5?$DN?54113@ DB '$A\camp'
	DB	'aign\save\TASK.GBD = 41135abdddbb5f1090bde06f8fbb0d1d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@JDNNBLGI@$A?2campaign?2save?2STEERPTH?4B?5?$DN?5c3@
CONST	SEGMENT
??_C@_0DP@JDNNBLGI@$A?2campaign?2save?2STEERPTH?4B?5?$DN?5c3@ DB '$A\camp'
	DB	'aign\save\STEERPTH.B = c3f251eec320d66a299f5dc8ce29cd84', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@BJMAHKEF@$A?2campaign?2save?2STEERPT?4B?5?$DN?5174@
CONST	SEGMENT
??_C@_0DO@BJMAHKEF@$A?2campaign?2save?2STEERPT?4B?5?$DN?5174@ DB '$A\camp'
	DB	'aign\save\STEERPT.B = 17453ea54fe9a477f5b85573dc9fad25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HKNJHBMG@$A?2campaign?2save?2SQUAD?4B?5?$DN?5e2b9e@
CONST	SEGMENT
??_C@_0DM@HKNJHBMG@$A?2campaign?2save?2SQUAD?4B?5?$DN?5e2b9e@ DB '$A\camp'
	DB	'aign\save\SQUAD.B = e2b9ea24aa82d0e263eab7d261480758', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CJBOGKBD@$A?2campaign?2save?2RoE?4b?5?$DN?57fe7f49@
CONST	SEGMENT
??_C@_0DK@CJBOGKBD@$A?2campaign?2save?2RoE?4b?5?$DN?57fe7f49@ DB '$A\camp'
	DB	'aign\save\RoE.b = 7fe7f49d4382a04ddd9f41cfbe3f1d78', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DFKENHGA@$A?2campaign?2save?2Pilot?4db?5?$DN?5a116@
CONST	SEGMENT
??_C@_0DN@DFKENHGA@$A?2campaign?2save?2Pilot?4db?5?$DN?5a116@ DB '$A\camp'
	DB	'aign\save\Pilot.db = a11661a18d0a9dd94db292baec2b3b17', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LJEAIPPA@$A?2campaign?2save?2PElement?4db?5?$DN?56@
CONST	SEGMENT
??_C@_0EA@LJEAIPPA@$A?2campaign?2save?2PElement?4db?5?$DN?56@ DB '$A\camp'
	DB	'aign\save\PElement.db = 6954127c9b0aae8c42a7a1bff2b38eba', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KKDNIBAG@$A?2campaign?2save?2PackHead?4b?5?$DN?591@
CONST	SEGMENT
??_C@_0DP@KKDNIBAG@$A?2campaign?2save?2PackHead?4b?5?$DN?591@ DB '$A\camp'
	DB	'aign\save\PackHead.b = 9101ce9967c7059fafc45064a5080f17', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@BENFLGJE@$A?2campaign?2save?2OBJECTIV?4B?5?$DN?5e7@
CONST	SEGMENT
??_C@_0DP@BENFLGJE@$A?2campaign?2save?2OBJECTIV?4B?5?$DN?5e7@ DB '$A\camp'
	DB	'aign\save\OBJECTIV.B = e73ba83d2f0cbdbb14d03ac29243d7f3', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ??_C@_0DO@ODAGECJH@$A?2campaign?2save?2NoSquad?4b?5?$DN?59fb@
CONST	SEGMENT
??_C@_0DO@ODAGECJH@$A?2campaign?2save?2NoSquad?4b?5?$DN?59fb@ DB '$A\camp'
	DB	'aign\save\NoSquad.b = 9fb8c922b7c9ae61e18692fd61b68cc1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@MOJLPDLI@$A?2campaign?2save?2LOADOUTH?4B?5?$DN?58a@
CONST	SEGMENT
??_C@_0DP@MOJLPDLI@$A?2campaign?2save?2LOADOUTH?4B?5?$DN?58a@ DB '$A\camp'
	DB	'aign\save\LOADOUTH.B = 8afae51e046ca787a4085ff1ecbfa00d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@JALEFLJG@$A?2campaign?2save?2Loadout?4b?5?$DN?525d@
CONST	SEGMENT
??_C@_0DO@JALEFLJG@$A?2campaign?2save?2Loadout?4b?5?$DN?525d@ DB '$A\camp'
	DB	'aign\save\Loadout.b = 25d4fa436356237732689df6d190c777', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BHKKKAKN@$A?2campaign?2save?2Korea?4tm?5?$DN?57986@
CONST	SEGMENT
??_C@_0DN@BHKKKAKN@$A?2campaign?2save?2Korea?4tm?5?$DN?57986@ DB '$A\camp'
	DB	'aign\save\Korea.tm = 798645a619e02528e07d7c485397c6c3', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ??_C@_0DN@IBEEGFKK@$A?2campaign?2save?2Korea?4tc?5?$DN?54b03@
CONST	SEGMENT
??_C@_0DN@IBEEGFKK@$A?2campaign?2save?2Korea?4tc?5?$DN?54b03@ DB '$A\camp'
	DB	'aign\save\Korea.tc = 4b03518e2d8e46c2534fa9803e3ea5c4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LPENJPLJ@$A?2campaign?2save?2Furball?4dfs?5?$DN?57@
CONST	SEGMENT
??_C@_0EA@LPENJPLJ@$A?2campaign?2save?2Furball?4dfs?5?$DN?57@ DB '$A\camp'
	DB	'aign\save\Furball.dfs = 71ced2db88a9838218c4981e9c3dd816', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OPAJGKPP@$A?2campaign?2save?2FORDWEAP?4DB?5?$DN?56@
CONST	SEGMENT
??_C@_0EA@OPAJGKPP@$A?2campaign?2save?2FORDWEAP?4DB?5?$DN?56@ DB '$A\camp'
	DB	'aign\save\FORDWEAP.DB = 697b85394cfe2808039d8c73e1dad248', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@GDPDICAL@$A?2campaign?2save?2FORDEVT?4DB?5?$DN?512@
CONST	SEGMENT
??_C@_0DP@GDPDICAL@$A?2campaign?2save?2FORDEVT?4DB?5?$DN?512@ DB '$A\camp'
	DB	'aign\save\FORDEVT.DB = 128814eacd8fbfc38e43bb5359c45ebc', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0DP@KOONMMND@$A?2campaign?2save?2FORDEND?4DB?5?$DN?506@
CONST	SEGMENT
??_C@_0DP@KOONMMND@$A?2campaign?2save?2FORDEND?4DB?5?$DN?506@ DB '$A\camp'
	DB	'aign\save\FORDEND.DB = 06f86488b76a1fb4efea55d76712ef3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@HIEDLFJP@$A?2campaign?2save?2FLEVENT?4DB?5?$DN?5c7@
CONST	SEGMENT
??_C@_0DP@HIEDLFJP@$A?2campaign?2save?2FLEVENT?4DB?5?$DN?5c7@ DB '$A\camp'
	DB	'aign\save\FLEVENT.DB = c7eb316fcae0297aa37b8f12ffeaefe2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MHFLPGNO@$A?2campaign?2save?2FEATURE?4B?5?$DN?59bb@
CONST	SEGMENT
??_C@_0DO@MHFLPGNO@$A?2campaign?2save?2FEATURE?4B?5?$DN?59bb@ DB '$A\camp'
	DB	'aign\save\FEATURE.B = 9bba5e38da4f92e2f0390b0fbed6a9a8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@LDLMILLE@$A?2campaign?2save?2FALCON4?4RT?5?$DN?574@
CONST	SEGMENT
??_C@_0DP@LDLMILLE@$A?2campaign?2save?2FALCON4?4RT?5?$DN?574@ DB '$A\camp'
	DB	'aign\save\FALCON4.RT = 74fedbea9fe1a7f077f0f450b58215a1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@FPMJGPFN@$A?2campaign?2save?2Emerganc?4b?5?$DN?5b4@
CONST	SEGMENT
??_C@_0DP@FPMJGPFN@$A?2campaign?2save?2Emerganc?4b?5?$DN?5b4@ DB '$A\camp'
	DB	'aign\save\Emerganc.b = b4b8abc4bdd83bd978e60ce3f21c24c9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@HDAFPPDP@$A?2campaign?2save?2Element2?4db?5?$DN?5f@
CONST	SEGMENT
??_C@_0EA@HDAFPPDP@$A?2campaign?2save?2Element2?4db?5?$DN?5f@ DB '$A\camp'
	DB	'aign\save\Element2.db = f6193021e65af5356a163e8ccdc4ac1a', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KHHIGDGG@$A?2campaign?2save?2Element?4db?5?$DN?58c@
CONST	SEGMENT
??_C@_0DP@KHHIGDGG@$A?2campaign?2save?2Element?4db?5?$DN?58c@ DB '$A\camp'
	DB	'aign\save\Element.db = 8c52161887317df56990286258555d8a', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CPOGJCJD@$A?2campaign?2save?2END?4B?5?$DN?55580c35@
CONST	SEGMENT
??_C@_0DK@CPOGJCJD@$A?2campaign?2save?2END?4B?5?$DN?55580c35@ DB '$A\camp'
	DB	'aign\save\END.B = 5580c356c2c455d5f6cf08f87e0ccb1b', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@ILOFNKMH@$A?2campaign?2save?2Element?4b?5?$DN?5c3a@
CONST	SEGMENT
??_C@_0DO@ILOFNKMH@$A?2campaign?2save?2Element?4b?5?$DN?5c3a@ DB '$A\camp'
	DB	'aign\save\Element.b = c3affb536e3e7b9c83bac3d83e90bb8b', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_commonFileList DD FLAT:??_C@_0DO@ILOFNKMH@$A?2campaign?2save?2Element?4b?5?$DN?5c3a@
	DD	FLAT:??_C@_0DK@CPOGJCJD@$A?2campaign?2save?2END?4B?5?$DN?55580c35@
	DD	FLAT:??_C@_0DP@KHHIGDGG@$A?2campaign?2save?2Element?4db?5?$DN?58c@
	DD	FLAT:??_C@_0EA@HDAFPPDP@$A?2campaign?2save?2Element2?4db?5?$DN?5f@
	DD	FLAT:??_C@_0DP@FPMJGPFN@$A?2campaign?2save?2Emerganc?4b?5?$DN?5b4@
	DD	FLAT:??_C@_0DP@LDLMILLE@$A?2campaign?2save?2FALCON4?4RT?5?$DN?574@
	DD	FLAT:??_C@_0DO@MHFLPGNO@$A?2campaign?2save?2FEATURE?4B?5?$DN?59bb@
	DD	FLAT:??_C@_0DP@HIEDLFJP@$A?2campaign?2save?2FLEVENT?4DB?5?$DN?5c7@
	DD	FLAT:??_C@_0DP@KOONMMND@$A?2campaign?2save?2FORDEND?4DB?5?$DN?506@
	DD	FLAT:??_C@_0DP@GDPDICAL@$A?2campaign?2save?2FORDEVT?4DB?5?$DN?512@
	DD	FLAT:??_C@_0EA@OPAJGKPP@$A?2campaign?2save?2FORDWEAP?4DB?5?$DN?56@
	DD	FLAT:??_C@_0EA@LPENJPLJ@$A?2campaign?2save?2Furball?4dfs?5?$DN?57@
	DD	FLAT:??_C@_0DN@IBEEGFKK@$A?2campaign?2save?2Korea?4tc?5?$DN?54b03@
	DD	FLAT:??_C@_0DN@BHKKKAKN@$A?2campaign?2save?2Korea?4tm?5?$DN?57986@
	DD	FLAT:??_C@_0DO@JALEFLJG@$A?2campaign?2save?2Loadout?4b?5?$DN?525d@
	DD	FLAT:??_C@_0DP@MOJLPDLI@$A?2campaign?2save?2LOADOUTH?4B?5?$DN?58a@
	DD	FLAT:??_C@_0DO@ODAGECJH@$A?2campaign?2save?2NoSquad?4b?5?$DN?59fb@
	DD	FLAT:??_C@_0DP@BENFLGJE@$A?2campaign?2save?2OBJECTIV?4B?5?$DN?5e7@
	DD	FLAT:??_C@_0DP@KKDNIBAG@$A?2campaign?2save?2PackHead?4b?5?$DN?591@
	DD	FLAT:??_C@_0EA@LJEAIPPA@$A?2campaign?2save?2PElement?4db?5?$DN?56@
	DD	FLAT:??_C@_0DN@DFKENHGA@$A?2campaign?2save?2Pilot?4db?5?$DN?5a116@
	DD	FLAT:??_C@_0DK@CJBOGKBD@$A?2campaign?2save?2RoE?4b?5?$DN?57fe7f49@
	DD	FLAT:??_C@_0DM@HKNJHBMG@$A?2campaign?2save?2SQUAD?4B?5?$DN?5e2b9e@
	DD	FLAT:??_C@_0DO@BJMAHKEF@$A?2campaign?2save?2STEERPT?4B?5?$DN?5174@
	DD	FLAT:??_C@_0DP@JDNNBLGI@$A?2campaign?2save?2STEERPTH?4B?5?$DN?5c3@
	DD	FLAT:??_C@_0DN@DHHGNEGJ@$A?2campaign?2save?2TASK?4GBD?5?$DN?54113@
	DD	FLAT:??_C@_0DO@OBLHILOL@$A?2campaign?2save?2Threats?4b?5?$DN?57d3@
	DD	FLAT:??_C@_0EA@FDFGOGLP@$A?2campaign?2save?2VALIDAC?4ACT?5?$DN?50@
	DD	FLAT:??_C@_0DO@CFCDDOD@$A?2campaign?2save?2Weather?4b?5?$DN?5dc5@
	DD	FLAT:??_C@_0DK@JMBMIKF@$A?2campaign?2save?2f0?4ia?5?$DN?567c64b4@
	DD	FLAT:??_C@_0DK@FGOFACJI@$A?2campaign?2save?2f1?4ia?5?$DN?529b4ea1@
	DD	FLAT:??_C@_0DK@HFCJMLDH@$A?2campaign?2save?2f2?4ia?5?$DN?5a9fff7c@
	DD	FLAT:??_C@_0DK@OODHMEKJ@$A?2campaign?2save?2f3?4ia?5?$DN?557fb129@
	DD	FLAT:??_C@_0DK@JCLNCBDH@$A?2campaign?2save?2f4?4ia?5?$DN?503cac70@
	DD	FLAT:??_C@_0DL@IGCCGCLH@$A?2campaign?2save?2f10?4ia?5?$DN?586c3ad@
	DD	FLAT:??_C@_0DL@DBOEKBEJ@$A?2campaign?2save?2f11?4ia?5?$DN?5e69922@
	DD	FLAT:??_C@_0DL@DFFCHMGB@$A?2campaign?2save?2f12?4ia?5?$DN?56cd34b@
	DD	FLAT:??_C@_0DL@EHHAHIGF@$A?2campaign?2save?2f13?4ia?5?$DN?5398e41@
	DD	FLAT:??_C@_0DK@BAPLKHBA@$A?2campaign?2save?2f5?4ia?5?$DN?54bb677c@
	DD	FLAT:??_C@_0DK@FNLMKKLD@$A?2campaign?2save?2f6?4ia?5?$DN?52f8eac7@
	DD	FLAT:??_C@_0DK@GBLPLPNO@$A?2campaign?2save?2f7?4ia?5?$DN?5a51f637@
	DD	FLAT:??_C@_0DK@FFKOBJFK@$A?2campaign?2save?2f8?4ia?5?$DN?5cde066a@
	DD	FLAT:??_C@_0DK@BGPPMMID@$A?2campaign?2save?2f9?4ia?5?$DN?5d779f3a@
	DD	FLAT:??_C@_0DK@NFHCMKKG@$A?2campaign?2save?2m0?4ia?5?$DN?59664fb9@
	DD	FLAT:??_C@_0DK@ECEIHGMI@$A?2campaign?2save?2m1?4ia?5?$DN?5e73decf@
	DD	FLAT:??_C@_0DK@GIPEMGEA@$A?2campaign?2save?2m2?4ia?5?$DN?5e73decf@
	DD	FLAT:??_C@_0DK@MHLAFEAH@$A?2campaign?2save?2m3?4ia?5?$DN?5e73decf@
	DD	FLAT:??_C@_0DK@DNINKHFA@$A?2campaign?2save?2m4?4ia?5?$DN?5e73decf@
	DD	FLAT:??_C@_0DP@IAFIGHPD@$A?2campaign?2save?2related?4db?5?$DN?5a8@
	DD	FLAT:??_C@_0DO@KCBBLPIB@$A?2campaign?2save?2taceng?4db?5?$DN?5b93@
	DD	FLAT:??_C@_0DP@EAFJGBLG@$A?2campaign?2save?2FALCON4?4TT?5?$DN?5e0@
	DD	FLAT:??_C@_0DO@PKBCMDGN@$A?2campaign?2save?2Support?4b?5?$DN?5521@
	DD	FLAT:??_C@_0DP@EDCDDANB@$A?2campaign?2save?2PHEADER?4DB?5?$DN?517@
	DD	FLAT:??_C@_0DO@OGPANHIK@$A?2campaign?2save?2SITUATE?4B?5?$DN?5bd2@
	DD	FLAT:??_C@_0DN@PDIMJMFL@$A?2campaign?2save?2THREAT?4B?5?$DN?59fa9@
	DD	FLAT:??_C@_0DP@ILHMOIGB@$A?2campaign?2save?2FORDNCE?4DB?5?$DN?568@
	DD	FLAT:??_C@_0EC@JPIONKBG@$A?2campaign?2save?2doctrine0?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@JLDIDGGA@$A?2campaign?2save?2doctrine1?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@BBHECGMI@$A?2campaign?2save?2doctrine2?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@MOHLILGP@$A?2campaign?2save?2doctrine3?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@BMKCMOIL@$A?2campaign?2save?2doctrine4?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@OFCMDJDB@$A?2campaign?2save?2doctrine5?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@PMELPJPB@$A?2campaign?2save?2doctrine6?4txt?5?$DN@
	DD	FLAT:??_C@_0EC@JDBAJCBP@$A?2campaign?2save?2doctrine7?4txt?5?$DN@
	DD	FLAT:??_C@_0DM@CGHCNHDN@$A?2campaign?2save?2atc?4ini?5?$DN?52ee82@
	DD	FLAT:??_C@_0DO@OPEAIHAB@$A?2campaign?2save?2Flight?4db?5?$DN?5dcf@
	DD	FLAT:??_C@_0DN@LGJACHCA@$A?2campaign?2save?2Header?4b?5?$DN?5324d@
	DD	FLAT:??_C@_0EA@LBDBCDMB@$A?2campaign?2save?2MISSION?4GBD?5?$DN?56@
	DD	FLAT:??_C@_0EA@JMLHODNG@$A?2campaign?2save?2Defense?4pri?5?$DN?5e@
	DD	FLAT:??_C@_0EA@NKKOPMOF@$A?2campaign?2save?2Intdict?4pri?5?$DN?51@
	DD	FLAT:??_C@_0EA@BKCMCNOC@$A?2campaign?2save?2OFFENSE?4PRI?5?$DN?57@
	DD	FLAT:??_C@_0DP@HGEIKMLM@$A?2campaign?2save?2attrit?4pri?5?$DN?539@
	DD	FLAT:??_C@_0DM@BPMFAMHM@$A?2campaign?2save?2cas?4pri?5?$DN?55e1d8@
	DD	FLAT:??_C@_0DP@CMIDMPPB@$A?2campaign?2save?2Results?4db?5?$DN?5cc@
	DD	FLAT:??_C@_0EA@NFPMMLLK@$A?2campaign?2save?2Falcon4?4AII?5?$DN?55@
	DD	FLAT:??_C@_0DH@OCAEKCOG@$A?2Zips?2simdata?4zip?5?$DN?5cbf1e58d74@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_englishFiles DD FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@GEBKDNDL@$B?2FALCON4?4CT?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@IJJEGLNA@$B?2FALCON4?4FCD?5?$DN?5c66eef16386224e@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@HCJKECFH@$B?2FALCON4?4INI?5?$DN?515be069a9464b08@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@MMINLHOH@$B?2FALCON4?4UCD?5?$DN?5561ff8503f3b29c@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@FJHPFLMB@$B?2FALCON4?4WCD?5?$DN?5b28af89f3c40c3d@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_germanFiles DD	FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@CACAPDAK@$B?2FALCON4?4FCD?5?$DN?51d8a5988ae32e9e@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@DIGFLCHB@$B?2FALCON4?4ini?5?$DN?58dfa0703952358c@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@MIPPPJHG@$B?2FALCON4?4UCD?5?$DN?5d5bf866da777add@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@FEGEOCME@$B?2FALCON4?4WCD?5?$DN?59b927a627da7faa@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_frenchFiles DD	FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@IHELFICN@$B?2FALCON4?4FCD?5?$DN?5345a4ea2d6fe25e@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@EKMPBFDF@$B?2FALCON4?4ini?5?$DN?5ebcc603e532e970@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@HIMJJAFI@$B?2FALCON4?4UCD?5?$DN?5c04ab0706960d99@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@OBOBCMMM@$B?2FALCON4?4WCD?5?$DN?5220f69aa1a27388@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_spanishFiles DD FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@IKLOGKMK@$B?2FALCON4?4FCD?5?$DN?57de5019a5f8c97c@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@OMNGCFIH@$B?2FALCON4?4ini?5?$DN?5c58c1713d14cb84@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@DGLHPNGA@$B?2FALCON4?4UCD?5?$DN?58af25e6c6cc4ac7@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@COFHOOKO@$B?2FALCON4?4WCD?5?$DN?5b9f444c6d868cd4@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_italianFiles DD FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@BAHGGENK@$B?2FALCON4?4ct?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@ENKHKKJE@$B?2FALCON4?4FCD?5?$DN?53cbeca2644beff9@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@FLCIFMHG@$B?2FALCON4?4ini?5?$DN?53b9dd56b72d0262@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@IGHCFDKO@$B?2FALCON4?4UCD?5?$DN?5d52f4b95d3146fd@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@NIPKILID@$B?2FALCON4?4WCD?5?$DN?53bf78e9fee153be@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	ORG $+4
_brazilianFiles DD FLAT:??_C@_0DC@BHLDFNKO@$B?2FALCON4?4ACD?5?$DN?5915068ffa6cf2e1@
	DD	FLAT:??_C@_0DB@GEBKDNDL@$B?2FALCON4?4CT?5?$DN?5d7a33b0de1edb00a@
	DD	FLAT:??_C@_0DC@LEKAEIBC@$B?2FALCON4?4FCD?5?$DN?58332f7a5def374a@
	DD	FLAT:??_C@_0DC@ILDINPGC@$B?2FALCON4?4FED?5?$DN?57640e4f088da792@
	DD	FLAT:??_C@_0DC@LIOPJGJN@$B?2FALCON4?4ICD?5?$DN?5f3c945b3ed086e6@
	DD	FLAT:??_C@_0DC@BNDMIKC@$B?2FALCON4?4INI?5?$DN?5c5f448b812a3239@
	DD	FLAT:??_C@_0DC@MEIGLCGB@$B?2FALCON4?4OCD?5?$DN?51340efd7b8d7765@
	DD	FLAT:??_C@_0DB@MKNHCAJM@$B?2FALCON4?4PD?5?$DN?540a85b59537d42f6@
	DD	FLAT:??_C@_0DC@GGLEMCIB@$B?2FALCON4?4PHD?5?$DN?503d269ef08f11a9@
	DD	FLAT:??_C@_0DC@HELGNMGE@$B?2FALCON4?4RCD?5?$DN?5b8614faf00feb22@
	DD	FLAT:??_C@_0DC@KGKNJILF@$B?2FALCON4?4RWD?5?$DN?58230111d0c14045@
	DD	FLAT:??_C@_0DC@EEHELDOP@$B?2FALCON4?4SSD?5?$DN?5634b6de1e32885c@
	DD	FLAT:??_C@_0DC@KAOGEOEF@$B?2FALCON4?4SWD?5?$DN?5285d1f36b67f611@
	DD	FLAT:??_C@_0DC@MGKLEDOF@$B?2FALCON4?4UCD?5?$DN?530dfe0d7c5b3918@
	DD	FLAT:??_C@_0DC@NJLAGNAA@$B?2FALCON4?4VCD?5?$DN?5c8c8f61d5ccf548@
	DD	FLAT:??_C@_0DC@CHEJKGNL@$B?2FALCON4?4VSD?5?$DN?5f3630334dd8e864@
	DD	FLAT:??_C@_0DC@BEKLMHIN@$B?2FALCON4?4WCD?5?$DN?5f8a2635b93e08b6@
	DD	FLAT:??_C@_0DC@HLEFDLAC@$B?2FALCON4?4WLD?5?$DN?51263dea15a092a1@
	DD	FLAT:??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
_localizedFiles DD FLAT:_englishFiles
	DD	FLAT:_englishFiles
	DD	FLAT:_englishFiles
	DD	FLAT:_germanFiles
	DD	FLAT:_frenchFiles
	DD	FLAT:_spanishFiles
	DD	FLAT:_italianFiles
	DD	FLAT:_brazilianFiles
_InvalidDataStr DD FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	DD	FLAT:??_C@_0DA@BJGGFLIN@Invalid?5Data?5files?0?5Please?5Reins@
	ORG $+4
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	?MD5Init@@YAXPAUMD5Context@@@Z			; MD5Init
PUBLIC	?MD5Update@@YAXPAUMD5Context@@PBEI@Z		; MD5Update
PUBLIC	?MD5Final@@YAXQAEPAUMD5Context@@@Z		; MD5Final
PUBLIC	?MD5End@@YAPADPAUMD5Context@@PAD@Z		; MD5End
PUBLIC	?MD5File@@YAPADPBDPAD@Z				; MD5File
PUBLIC	?MD5Data@@YAPADPBEIPAD@Z			; MD5Data
PUBLIC	?FileVerify@@YAHXZ				; FileVerify
PUBLIC	??_C@_0O@KAPL@FileVerify?5?9?6?$AA@		; `string'
PUBLIC	??_C@_0BJ@CEGFMJLK@?$CFd?5Error?$CIs?$CJ?5found?5?$CB?$CB?$CB?$CB?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@EDHJBMFL@No?5Errors?5found?5?3?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_02NGJILGJF@$A?$AA@			; `string'
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@		; `string'
PUBLIC	??_C@_02PNLFOFFG@$B?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0N@CKKMKJFJ@?$CFs?5?9?5FAILED?6?$AA@	; `string'
PUBLIC	??_C@_0BA@KKNCGMIO@?$CFs?5?9?5NOT?5FOUND?6?$AA@	; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_strchr:PROC
EXTRN	_strncmp:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_sprintf:PROC
EXTRN	__errno:PROC
EXTRN	_malloc:PROC
EXTRN	_close:PROC
EXTRN	_open:PROC
EXTRN	_read:PROC
EXTRN	_MonoPrint:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?FalconObjectDataDir@@3PADA:BYTE		; FalconObjectDataDir
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ?hex@?1??MD5End@@YAPADPAUMD5Context@@PAD@Z@4QBDB
CONST	SEGMENT
?hex@?1??MD5End@@YAPADPAUMD5Context@@PAD@Z@4QBDB DB '0123456789abcdef', 00H ; `MD5End'::`2'::hex
CONST	ENDS
;	COMDAT ??_C@_0BA@KKNCGMIO@?$CFs?5?9?5NOT?5FOUND?6?$AA@
CONST	SEGMENT
??_C@_0BA@KKNCGMIO@?$CFs?5?9?5NOT?5FOUND?6?$AA@ DB '%s - NOT FOUND', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKKMKJFJ@?$CFs?5?9?5FAILED?6?$AA@
CONST	SEGMENT
??_C@_0N@CKKMKJFJ@?$CFs?5?9?5FAILED?6?$AA@ DB '%s - FAILED', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PNLFOFFG@$B?$AA@
CONST	SEGMENT
??_C@_02PNLFOFFG@$B?$AA@ DB '$B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NGJILGJF@$A?$AA@
CONST	SEGMENT
??_C@_02NGJILGJF@$A?$AA@ DB '$A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EDHJBMFL@No?5Errors?5found?5?3?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BE@EDHJBMFL@No?5Errors?5found?5?3?$CJ?6?$AA@ DB 'No Errors found :'
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CEGFMJLK@?$CFd?5Error?$CIs?$CJ?5found?5?$CB?$CB?$CB?$CB?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BJ@CEGFMJLK@?$CFd?5Error?$CIs?$CJ?5found?5?$CB?$CB?$CB?$CB?$CB?6?$AA@ DB '%'
	DB	'd Error(s) found !!!!!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAPL@FileVerify?5?9?6?$AA@
CONST	SEGMENT
??_C@_0O@KAPL@FileVerify?5?9?6?$AA@ DB 'FileVerify -', 0aH, 00H ; `string'
CONST	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_i$ = -8						; size = 4
_j$ = -4						; size = 4
_output$ = 8						; size = 4
_input$ = 12						; size = 4
_len$ = 16						; size = 4
?Decode@@YAXPAIPBEI@Z PROC				; Decode

; 420  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 421  : 	unsigned int i, j;
; 422  : 
; 423  : 	for (i = 0, j = 0; j < len; i++, j += 4)

	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@Decode
$LN2@Decode:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 4
	mov	DWORD PTR _j$[ebp], ecx
$LN3@Decode:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jae	SHORT $LN4@Decode

; 424  : 		output[i] = ((u_int32_t)input[j]) | (((u_int32_t)input[j+1]) << 8) |
; 425  : 		    (((u_int32_t)input[j+2]) << 16) | (((u_int32_t)input[j+3]) << 24);

	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _input$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _output$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
	jmp	SHORT $LN2@Decode
$LN4@Decode:

; 426  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Decode@@YAXPAIPBEI@Z ENDP				; Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_i$ = -8						; size = 4
_j$ = -4						; size = 4
_output$ = 8						; size = 4
_input$ = 12						; size = 4
_len$ = 16						; size = 4
?Encode@@YAXPAEPAII@Z PROC				; Encode

; 402  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 403  : 	unsigned int i, j;
; 404  : 
; 405  : 	for (i = 0, j = 0; j < len; i++, j += 4) {

	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@Encode
$LN2@Encode:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 4
	mov	DWORD PTR _j$[ebp], ecx
$LN3@Encode:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jae	SHORT $LN4@Encode

; 406  : 		output[j] = (unsigned char)(input[i] & 0xff);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax], dl

; 407  : 		output[j+1] = (unsigned char)((input[i] >> 8) & 0xff);

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _output$[ebp]
	add	ecx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [ecx+1], al

; 408  : 		output[j+2] = (unsigned char)((input[i] >> 16) & 0xff);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _output$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	mov	BYTE PTR [edx+2], cl

; 409  : 		output[j+3] = (unsigned char)((input[i] >> 24) & 0xff);

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 24					; 00000018H
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _output$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax+3], dl

; 410  : 	}

	jmp	$LN2@Encode
$LN4@Encode:

; 411  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Encode@@YAXPAEPAII@Z ENDP				; Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_b$ = -84						; size = 4
_a$ = -80						; size = 4
_d$ = -76						; size = 4
_c$ = -72						; size = 4
_x$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_block$ = 12						; size = 4
?MD5Transform@@YAXQAIQBE@Z PROC				; MD5Transform

; 558  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 559  : 	u_int32_t a = state[0], b = state[1], c = state[2], d = state[3], x[16];

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _d$[ebp], edx

; 560  : 
; 561  : 	Decode (x, block, 64);

	push	64					; 00000040H
	mov	eax, DWORD PTR _block$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	?Decode@@YAXPAIPBEI@Z			; Decode
	add	esp, 12					; 0000000cH

; 562  : 
; 563  : 	/* Round 1 */
; 564  : #define S11 7
; 565  : #define S12 12
; 566  : #define S13 17
; 567  : #define S14 22
; 568  : 	FF (a, b, c, d, x[ 0], S11, 0xd76aa478); /* 1 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 0
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx-680876936]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 25					; 00000019H
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 569  : 	FF (d, a, b, c, x[ 1], S12, 0xe8c7b756); /* 2 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 0
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-389564586]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 20					; 00000014H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 570  : 	FF (c, d, a, b, x[ 2], S13, 0x242070db); /* 3 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 1
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx+606105819]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 17					; 00000011H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 15					; 0000000fH
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 571  : 	FF (b, c, d, a, x[ 3], S14, 0xc1bdceee); /* 4 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 3
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1044525330]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 22					; 00000016H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 10					; 0000000aH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 572  : 	FF (a, b, c, d, x[ 4], S11, 0xf57c0faf); /* 5 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 2
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx-176418897]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 25					; 00000019H
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 573  : 	FF (d, a, b, c, x[ 5], S12, 0x4787c62a); /* 6 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 5
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1200080426]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 20					; 00000014H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 574  : 	FF (c, d, a, b, x[ 6], S13, 0xa8304613); /* 7 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 6
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1473231341]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 17					; 00000011H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 15					; 0000000fH
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 575  : 	FF (b, c, d, a, x[ 7], S14, 0xfd469501); /* 8 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 7
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-45705983]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 22					; 00000016H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 10					; 0000000aH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 576  : 	FF (a, b, c, d, x[ 8], S11, 0x698098d8); /* 9 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 3
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1770035416]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 25					; 00000019H
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 577  : 	FF (d, a, b, c, x[ 9], S12, 0x8b44f7af); /* 10 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 9
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1958414417]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 20					; 00000014H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 578  : 	FF (c, d, a, b, x[10], S13, 0xffff5bb1); /* 11 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 10					; 0000000aH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx-42063]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 17					; 00000011H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 15					; 0000000fH
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 579  : 	FF (b, c, d, a, x[11], S14, 0x895cd7be); /* 12 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 11					; 0000000bH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1990404162]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 22					; 00000016H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 10					; 0000000aH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 580  : 	FF (a, b, c, d, x[12], S11, 0x6b901122); /* 13 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 12					; 0000000cH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1804603682]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 25					; 00000019H
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 581  : 	FF (d, a, b, c, x[13], S12, 0xfd987193); /* 14 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 13					; 0000000dH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-40341101]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 20					; 00000014H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 582  : 	FF (c, d, a, b, x[14], S13, 0xa679438e); /* 15 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 14					; 0000000eH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1502002290]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 17					; 00000011H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 15					; 0000000fH
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 583  : 	FF (b, c, d, a, x[15], S14, 0x49b40821); /* 16 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 15					; 0000000fH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1236535329]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 22					; 00000016H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 10					; 0000000aH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 584  : 
; 585  : 	/* Round 2 */
; 586  : #define S21 5
; 587  : #define S22 9
; 588  : #define S23 14
; 589  : #define S24 20
; 590  : 	GG (a, b, c, d, x[ 1], S21, 0xf61e2562); /* 17 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 0
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx-165796510]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 5
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 27					; 0000001bH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 591  : 	GG (d, a, b, c, x[ 6], S22, 0xc040b340); /* 18 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 6
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1069501632]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 9
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 23					; 00000017H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 592  : 	GG (c, d, a, b, x[11], S23, 0x265e5a51); /* 19 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 11					; 0000000bH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx+643717713]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 18					; 00000012H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 593  : 	GG (b, c, d, a, x[ 0], S24, 0xe9b6c7aa); /* 20 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 0
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-373897302]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 20					; 00000014H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 12					; 0000000cH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 594  : 	GG (a, b, c, d, x[ 5], S21, 0xd62f105d); /* 21 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 5
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx-701558691]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 5
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 27					; 0000001bH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 595  : 	GG (d, a, b, c, x[10], S22,  0x2441453); /* 22 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 10					; 0000000aH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx+38016083]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 9
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 23					; 00000017H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 596  : 	GG (c, d, a, b, x[15], S23, 0xd8a1e681); /* 23 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 15					; 0000000fH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx-660478335]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 18					; 00000012H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 597  : 	GG (b, c, d, a, x[ 4], S24, 0xe7d3fbc8); /* 24 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 2
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-405537848]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 20					; 00000014H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 12					; 0000000cH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 598  : 	GG (a, b, c, d, x[ 9], S21, 0x21e1cde6); /* 25 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 9
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx+568446438]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 5
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 27					; 0000001bH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 599  : 	GG (d, a, b, c, x[14], S22, 0xc33707d6); /* 26 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 14					; 0000000eH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1019803690]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 9
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 23					; 00000017H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 600  : 	GG (c, d, a, b, x[ 3], S23, 0xf4d50d87); /* 27 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 3
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx-187363961]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 18					; 00000012H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 601  : 	GG (b, c, d, a, x[ 8], S24, 0x455a14ed); /* 28 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 3
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1163531501]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 20					; 00000014H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 12					; 0000000cH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 602  : 	GG (a, b, c, d, x[13], S21, 0xa9e3e905); /* 29 */

	mov	edx, DWORD PTR _b$[ebp]
	and	edx, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	and	eax, DWORD PTR _c$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 13					; 0000000dH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1444681467]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 5
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 27					; 0000001bH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 603  : 	GG (d, a, b, c, x[ 2], S22, 0xfcefa3f8); /* 30 */

	mov	edx, DWORD PTR _a$[ebp]
	and	edx, DWORD PTR _c$[ebp]
	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	and	eax, DWORD PTR _b$[ebp]
	or	edx, eax
	mov	ecx, 4
	shl	ecx, 1
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+edx-51403784]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 9
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 23					; 00000017H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 604  : 	GG (c, d, a, b, x[ 7], S23, 0x676f02d9); /* 31 */

	mov	edx, DWORD PTR _d$[ebp]
	and	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	and	eax, DWORD PTR _a$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 7
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1735328473]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 18					; 00000012H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 605  : 	GG (b, c, d, a, x[12], S24, 0x8d2a4c8a); /* 32 */

	mov	edx, DWORD PTR _c$[ebp]
	and	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	and	eax, DWORD PTR _d$[ebp]
	or	edx, eax
	mov	ecx, 4
	imul	ecx, 12					; 0000000cH
	add	edx, DWORD PTR _x$[ebp+ecx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1926607734]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 20					; 00000014H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 12					; 0000000cH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 606  : 
; 607  : 	/* Round 3 */
; 608  : #define S31 4
; 609  : #define S32 11
; 610  : #define S33 16
; 611  : #define S34 23
; 612  : 	HH (a, b, c, d, x[ 5], S31, 0xfffa3942); /* 33 */

	mov	edx, DWORD PTR _b$[ebp]
	xor	edx, DWORD PTR _c$[ebp]
	xor	edx, DWORD PTR _d$[ebp]
	mov	eax, 4
	imul	eax, 5
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+edx-378558]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	edx, DWORD PTR _a$[ebp]
	add	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], edx

; 613  : 	HH (d, a, b, c, x[ 8], S32, 0x8771f681); /* 34 */

	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-2022574463]
	mov	DWORD PTR _d$[ebp], eax
	mov	ecx, DWORD PTR _d$[ebp]
	shl	ecx, 11					; 0000000bH
	mov	edx, DWORD PTR _d$[ebp]
	shr	edx, 21					; 00000015H
	or	ecx, edx
	mov	DWORD PTR _d$[ebp], ecx
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax

; 614  : 	HH (c, d, a, b, x[11], S33, 0x6d9d6122); /* 35 */

	mov	ecx, DWORD PTR _d$[ebp]
	xor	ecx, DWORD PTR _a$[ebp]
	xor	ecx, DWORD PTR _b$[ebp]
	mov	edx, 4
	imul	edx, 11					; 0000000bH
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+1839030562]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 16					; 00000010H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 615  : 	HH (b, c, d, a, x[14], S34, 0xfde5380c); /* 36 */

	mov	edx, DWORD PTR _c$[ebp]
	xor	edx, DWORD PTR _d$[ebp]
	xor	edx, DWORD PTR _a$[ebp]
	mov	eax, 4
	imul	eax, 14					; 0000000eH
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+edx-35309556]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], edx

; 616  : 	HH (a, b, c, d, x[ 1], S31, 0xa4beea44); /* 37 */

	mov	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	shl	ecx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-1530992060]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _a$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _a$[ebp]
	shr	edx, 28					; 0000001cH
	or	ecx, edx
	mov	DWORD PTR _a$[ebp], ecx
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax

; 617  : 	HH (d, a, b, c, x[ 4], S32, 0x4bdecfa9); /* 38 */

	mov	ecx, DWORD PTR _a$[ebp]
	xor	ecx, DWORD PTR _b$[ebp]
	xor	ecx, DWORD PTR _c$[ebp]
	mov	edx, 4
	shl	edx, 2
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+1272893353]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 21					; 00000015H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 618  : 	HH (c, d, a, b, x[ 7], S33, 0xf6bb4b60); /* 39 */

	mov	edx, DWORD PTR _d$[ebp]
	xor	edx, DWORD PTR _a$[ebp]
	xor	edx, DWORD PTR _b$[ebp]
	mov	eax, 4
	imul	eax, 7
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+edx-155497632]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], edx

; 619  : 	HH (b, c, d, a, x[10], S34, 0xbebfbc70); /* 40 */

	mov	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	ecx, 10					; 0000000aH
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-1094730640]
	mov	DWORD PTR _b$[ebp], eax
	mov	ecx, DWORD PTR _b$[ebp]
	shl	ecx, 23					; 00000017H
	mov	edx, DWORD PTR _b$[ebp]
	shr	edx, 9
	or	ecx, edx
	mov	DWORD PTR _b$[ebp], ecx
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax

; 620  : 	HH (a, b, c, d, x[13], S31, 0x289b7ec6); /* 41 */

	mov	ecx, DWORD PTR _b$[ebp]
	xor	ecx, DWORD PTR _c$[ebp]
	xor	ecx, DWORD PTR _d$[ebp]
	mov	edx, 4
	imul	edx, 13					; 0000000dH
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+681279174]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 28					; 0000001cH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 621  : 	HH (d, a, b, c, x[ 0], S32, 0xeaa127fa); /* 42 */

	mov	edx, DWORD PTR _a$[ebp]
	xor	edx, DWORD PTR _b$[ebp]
	xor	edx, DWORD PTR _c$[ebp]
	mov	eax, 4
	imul	eax, 0
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+edx-358537222]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 21					; 00000015H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	edx, DWORD PTR _d$[ebp]
	add	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], edx

; 622  : 	HH (c, d, a, b, x[ 3], S33, 0xd4ef3085); /* 43 */

	mov	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-722521979]
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _c$[ebp]
	shr	edx, 16					; 00000010H
	or	ecx, edx
	mov	DWORD PTR _c$[ebp], ecx
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax

; 623  : 	HH (b, c, d, a, x[ 6], S34,  0x4881d05); /* 44 */

	mov	ecx, DWORD PTR _c$[ebp]
	xor	ecx, DWORD PTR _d$[ebp]
	xor	ecx, DWORD PTR _a$[ebp]
	mov	edx, 4
	imul	edx, 6
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+76029189]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 23					; 00000017H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 9
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 624  : 	HH (a, b, c, d, x[ 9], S31, 0xd9d4d039); /* 45 */

	mov	edx, DWORD PTR _b$[ebp]
	xor	edx, DWORD PTR _c$[ebp]
	xor	edx, DWORD PTR _d$[ebp]
	mov	eax, 4
	imul	eax, 9
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+edx-640364487]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 28					; 0000001cH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	edx, DWORD PTR _a$[ebp]
	add	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], edx

; 625  : 	HH (d, a, b, c, x[12], S32, 0xe6db99e5); /* 46 */

	mov	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	ecx, 12					; 0000000cH
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-421815835]
	mov	DWORD PTR _d$[ebp], eax
	mov	ecx, DWORD PTR _d$[ebp]
	shl	ecx, 11					; 0000000bH
	mov	edx, DWORD PTR _d$[ebp]
	shr	edx, 21					; 00000015H
	or	ecx, edx
	mov	DWORD PTR _d$[ebp], ecx
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax

; 626  : 	HH (c, d, a, b, x[15], S33, 0x1fa27cf8); /* 47 */

	mov	ecx, DWORD PTR _d$[ebp]
	xor	ecx, DWORD PTR _a$[ebp]
	xor	ecx, DWORD PTR _b$[ebp]
	mov	edx, 4
	imul	edx, 15					; 0000000fH
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+530742520]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 16					; 00000010H
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 16					; 00000010H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 627  : 	HH (b, c, d, a, x[ 2], S34, 0xc4ac5665); /* 48 */

	mov	edx, DWORD PTR _c$[ebp]
	xor	edx, DWORD PTR _d$[ebp]
	xor	edx, DWORD PTR _a$[ebp]
	mov	eax, 4
	shl	eax, 1
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+edx-995338651]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 9
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], edx

; 628  : 
; 629  : 	/* Round 4 */
; 630  : #define S41 6
; 631  : #define S42 10
; 632  : #define S43 15
; 633  : #define S44 21
; 634  : 	II (a, b, c, d, x[ 0], S41, 0xf4292244); /* 49 */

	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	imul	ecx, 0
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-198630844]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _a$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _a$[ebp]
	shr	edx, 26					; 0000001aH
	or	ecx, edx
	mov	DWORD PTR _a$[ebp], ecx
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax

; 635  : 	II (d, a, b, c, x[ 7], S42, 0x432aff97); /* 50 */

	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	or	ecx, DWORD PTR _a$[ebp]
	xor	ecx, DWORD PTR _b$[ebp]
	mov	edx, 4
	imul	edx, 7
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+1126891415]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 22					; 00000016H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 636  : 	II (c, d, a, b, x[14], S43, 0xab9423a7); /* 51 */

	mov	edx, DWORD PTR _b$[ebp]
	not	edx
	or	edx, DWORD PTR _d$[ebp]
	xor	edx, DWORD PTR _a$[ebp]
	mov	eax, 4
	imul	eax, 14					; 0000000eH
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+edx-1416354905]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], edx

; 637  : 	II (b, c, d, a, x[ 5], S44, 0xfc93a039); /* 52 */

	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	ecx, 5
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-57434055]
	mov	DWORD PTR _b$[ebp], eax
	mov	ecx, DWORD PTR _b$[ebp]
	shl	ecx, 21					; 00000015H
	mov	edx, DWORD PTR _b$[ebp]
	shr	edx, 11					; 0000000bH
	or	ecx, edx
	mov	DWORD PTR _b$[ebp], ecx
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax

; 638  : 	II (a, b, c, d, x[12], S41, 0x655b59c3); /* 53 */

	mov	ecx, DWORD PTR _d$[ebp]
	not	ecx
	or	ecx, DWORD PTR _b$[ebp]
	xor	ecx, DWORD PTR _c$[ebp]
	mov	edx, 4
	imul	edx, 12					; 0000000cH
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _a$[ebp]
	lea	ecx, DWORD PTR [eax+ecx+1700485571]
	mov	DWORD PTR _a$[ebp], ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 6
	mov	eax, DWORD PTR _a$[ebp]
	shr	eax, 26					; 0000001aH
	or	edx, eax
	mov	DWORD PTR _a$[ebp], edx
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 639  : 	II (d, a, b, c, x[ 3], S42, 0x8f0ccc92); /* 54 */

	mov	edx, DWORD PTR _c$[ebp]
	not	edx
	or	edx, DWORD PTR _a$[ebp]
	xor	edx, DWORD PTR _b$[ebp]
	mov	eax, 4
	imul	eax, 3
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _d$[ebp]
	lea	edx, DWORD PTR [ecx+edx-1894986606]
	mov	DWORD PTR _d$[ebp], edx
	mov	eax, DWORD PTR _d$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _d$[ebp]
	shr	ecx, 22					; 00000016H
	or	eax, ecx
	mov	DWORD PTR _d$[ebp], eax
	mov	edx, DWORD PTR _d$[ebp]
	add	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], edx

; 640  : 	II (c, d, a, b, x[10], S43, 0xffeff47d); /* 55 */

	mov	eax, DWORD PTR _b$[ebp]
	not	eax
	or	eax, DWORD PTR _d$[ebp]
	xor	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	ecx, 10					; 0000000aH
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _c$[ebp]
	lea	eax, DWORD PTR [edx+eax-1051523]
	mov	DWORD PTR _c$[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	shl	ecx, 15					; 0000000fH
	mov	edx, DWORD PTR _c$[ebp]
	shr	edx, 17					; 00000011H
	or	ecx, edx
	mov	DWORD PTR _c$[ebp], ecx
	mov	eax, DWORD PTR _c$[ebp]
	add	eax, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], eax

; 641  : 	II (b, c, d, a, x[ 1], S44, 0x85845dd1); /* 56 */

	mov	ecx, DWORD PTR _a$[ebp]
	not	ecx
	or	ecx, DWORD PTR _c$[ebp]
	xor	ecx, DWORD PTR _d$[ebp]
	mov	edx, 4
	shl	edx, 0
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _b$[ebp]
	lea	ecx, DWORD PTR [eax+ecx-2054922799]
	mov	DWORD PTR _b$[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp]
	shl	edx, 21					; 00000015H
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 11					; 0000000bH
	or	edx, eax
	mov	DWORD PTR _b$[ebp], edx
	mov	ecx, DWORD PTR _b$[ebp]
	add	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], ecx

; 642  : 	II (a, b, c, d, x[ 8], S41, 0x6fa87e4f); /* 57 */

	mov	edx, DWORD PTR _d$[ebp]
	not	edx
	or	edx, DWORD PTR _b$[ebp]
	xor	edx, DWORD PTR _c$[ebp]
	mov	eax, 4
	shl	eax, 3
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _a$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1873313359]
	mov	DWORD PTR _a$[ebp], edx
	mov	eax, DWORD PTR _a$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _a$[ebp]
	shr	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	DWORD PTR _a$[ebp], eax
	mov	edx, DWORD PTR _a$[ebp]
	add	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], edx

; 643  : 	II (d, a, b, c, x[15], S42, 0xfe2ce6e0); /* 58 */

	mov	eax, DWORD PTR _c$[ebp]
	not	eax
	or	eax, DWORD PTR _a$[ebp]
	xor	eax, DWORD PTR _b$[ebp]
	mov	ecx, 4
	imul	ecx, 15					; 0000000fH
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _d$[ebp]
	lea	eax, DWORD PTR [edx+eax-30611744]
	mov	DWORD PTR _d$[ebp], eax
	mov	ecx, DWORD PTR _d$[ebp]
	shl	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _d$[ebp]
	shr	edx, 22					; 00000016H
	or	ecx, edx
	mov	DWORD PTR _d$[ebp], ecx
	mov	eax, DWORD PTR _d$[ebp]
	add	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], eax

; 644  : 	II (c, d, a, b, x[ 6], S43, 0xa3014314); /* 59 */

	mov	ecx, DWORD PTR _b$[ebp]
	not	ecx
	or	ecx, DWORD PTR _d$[ebp]
	xor	ecx, DWORD PTR _a$[ebp]
	mov	edx, 4
	imul	edx, 6
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _c$[ebp]
	lea	ecx, DWORD PTR [eax+ecx-1560198380]
	mov	DWORD PTR _c$[ebp], ecx
	mov	edx, DWORD PTR _c$[ebp]
	shl	edx, 15					; 0000000fH
	mov	eax, DWORD PTR _c$[ebp]
	shr	eax, 17					; 00000011H
	or	edx, eax
	mov	DWORD PTR _c$[ebp], edx
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], ecx

; 645  : 	II (b, c, d, a, x[13], S44, 0x4e0811a1); /* 60 */

	mov	edx, DWORD PTR _a$[ebp]
	not	edx
	or	edx, DWORD PTR _c$[ebp]
	xor	edx, DWORD PTR _d$[ebp]
	mov	eax, 4
	imul	eax, 13					; 0000000dH
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+edx+1309151649]
	mov	DWORD PTR _b$[ebp], edx
	mov	eax, DWORD PTR _b$[ebp]
	shl	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _b$[ebp]
	shr	ecx, 11					; 0000000bH
	or	eax, ecx
	mov	DWORD PTR _b$[ebp], eax
	mov	edx, DWORD PTR _b$[ebp]
	add	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], edx

; 646  : 	II (a, b, c, d, x[ 4], S41, 0xf7537e82); /* 61 */

	mov	eax, DWORD PTR _d$[ebp]
	not	eax
	or	eax, DWORD PTR _b$[ebp]
	xor	eax, DWORD PTR _c$[ebp]
	mov	ecx, 4
	shl	ecx, 2
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _a$[ebp]
	lea	eax, DWORD PTR [edx+eax-145523070]
	mov	DWORD PTR _a$[ebp], eax
	mov	ecx, DWORD PTR _a$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _a$[ebp]
	shr	edx, 26					; 0000001aH
	or	ecx, edx
	mov	DWORD PTR _a$[ebp], ecx
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _a$[ebp], eax

; 647  : 	II (d, a, b, c, x[11], S42, 0xbd3af235); /* 62 */

	mov	ecx, DWORD PTR _c$[ebp]
	not	ecx
	or	ecx, DWORD PTR _a$[ebp]
	xor	ecx, DWORD PTR _b$[ebp]
	mov	edx, 4
	imul	edx, 11					; 0000000bH
	add	ecx, DWORD PTR _x$[ebp+edx]
	mov	eax, DWORD PTR _d$[ebp]
	lea	ecx, DWORD PTR [eax+ecx-1120210379]
	mov	DWORD PTR _d$[ebp], ecx
	mov	edx, DWORD PTR _d$[ebp]
	shl	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _d$[ebp]
	shr	eax, 22					; 00000016H
	or	edx, eax
	mov	DWORD PTR _d$[ebp], edx
	mov	ecx, DWORD PTR _d$[ebp]
	add	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR _d$[ebp], ecx

; 648  : 	II (c, d, a, b, x[ 2], S43, 0x2ad7d2bb); /* 63 */

	mov	edx, DWORD PTR _b$[ebp]
	not	edx
	or	edx, DWORD PTR _d$[ebp]
	xor	edx, DWORD PTR _a$[ebp]
	mov	eax, 4
	shl	eax, 1
	add	edx, DWORD PTR _x$[ebp+eax]
	mov	ecx, DWORD PTR _c$[ebp]
	lea	edx, DWORD PTR [ecx+edx+718787259]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _c$[ebp]
	shr	ecx, 17					; 00000011H
	or	eax, ecx
	mov	DWORD PTR _c$[ebp], eax
	mov	edx, DWORD PTR _c$[ebp]
	add	edx, DWORD PTR _d$[ebp]
	mov	DWORD PTR _c$[ebp], edx

; 649  : 	II (b, c, d, a, x[ 9], S44, 0xeb86d391); /* 64 */

	mov	eax, DWORD PTR _a$[ebp]
	not	eax
	or	eax, DWORD PTR _c$[ebp]
	xor	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	ecx, 9
	add	eax, DWORD PTR _x$[ebp+ecx]
	mov	edx, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax-343485551]
	mov	DWORD PTR _b$[ebp], eax
	mov	ecx, DWORD PTR _b$[ebp]
	shl	ecx, 21					; 00000015H
	mov	edx, DWORD PTR _b$[ebp]
	shr	edx, 11					; 0000000bH
	or	ecx, edx
	mov	DWORD PTR _b$[ebp], ecx
	mov	eax, DWORD PTR _b$[ebp]
	add	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _b$[ebp], eax

; 650  : 
; 651  : 	state[0] += a;

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	add	eax, DWORD PTR _a$[ebp]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 652  : 	state[1] += b;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	add	edx, DWORD PTR _b$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+eax], edx

; 653  : 	state[2] += c;

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+edx]
	add	ecx, DWORD PTR _c$[ebp]
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+edx], ecx

; 654  : 	state[3] += d;

	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	add	eax, DWORD PTR _d$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax

; 655  : 
; 656  : 	/* Zeroize sensitive information. */
; 657  : 	memset ((void *)x, 0, sizeof (x));

	push	64					; 00000040H
	push	0
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 658  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Transform@@YAXQAIQBE@Z ENDP				; MD5Transform
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_objectFileList$ = -280					; size = 4
$T1 = -276						; size = 4
tv86 = -272						; size = 4
_retval$ = -268						; size = 4
_outStr$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
?FileVerify@@YAHXZ PROC					; FileVerify

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 289  : char** objectFileList;
; 290  : int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 291  : char outStr[_MAX_PATH];
; 292  : 
; 293  : return 1; // JPO - do reason to do all this

	mov	eax, 1
	jmp	$LN4@FileVerify

; 294  : // OW FIXME
; 295  : 	MonoPrint("FileVerify -\n");

	push	OFFSET ??_C@_0O@KAPL@FileVerify?5?9?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 296  : 
; 297  : 	LocalizedInvalidDataStr = InvalidDataStr[gLangIDNum];

	mov	eax, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	mov	ecx, DWORD PTR _InvalidDataStr[eax*4]
	mov	DWORD PTR _LocalizedInvalidDataStr, ecx

; 298  : 	objectFileList = localizedFiles[gLangIDNum];

	mov	edx, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	mov	eax, DWORD PTR _localizedFiles[edx*4]
	mov	DWORD PTR _objectFileList$[ebp], eax

; 299  : 
; 300  : 	retval = FileVerify(commonFileList);

	push	OFFSET _commonFileList
	call	?FileVerify@@YAHPAPAD@Z			; FileVerify
	add	esp, 4
	mov	DWORD PTR _retval$[ebp], eax

; 301  : 	retval += FileVerify(objectFileList);

	mov	ecx, DWORD PTR _objectFileList$[ebp]
	push	ecx
	call	?FileVerify@@YAHPAPAD@Z			; FileVerify
	add	esp, 4
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax

; 302  : 
; 303  : 	if (retval)

	je	SHORT $LN2@FileVerify

; 304  : 	{
; 305  : 		sprintf (outStr, "%d Error(s) found !!!!!\n", retval);

	mov	edx, DWORD PTR _retval$[ebp]
	push	edx
	push	OFFSET ??_C@_0BJ@CEGFMJLK@?$CFd?5Error?$CIs?$CJ?5found?5?$CB?$CB?$CB?$CB?$CB?6?$AA@
	lea	eax, DWORD PTR _outStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 306  : 		MonoPrint(outStr);

	lea	ecx, DWORD PTR _outStr$[ebp]
	push	ecx
	call	_MonoPrint
	add	esp, 4

; 307  : 		outStr[strlen(outStr)-1] = 0;

	lea	edx, DWORD PTR _outStr$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN5@FileVerify
	jmp	SHORT $LN6@FileVerify
$LN5@FileVerify:
	call	___report_rangecheckfailure
$LN6@FileVerify:
	mov	eax, DWORD PTR $T1[ebp]
	mov	BYTE PTR _outStr$[ebp+eax], 0

; 308  : 
; 309  : // OW
; 310  : #if 0
; 311  : 		retval=MessageBox(NULL, LocalizedInvalidDataStr, outStr, MB_OK);
; 312  : 
; 313  : #ifdef NDEBUG
; 314  : 		_exit (0);
; 315  : #endif
; 316  : #endif
; 317  : 	}
; 318  : 	else

	jmp	SHORT $LN1@FileVerify
$LN2@FileVerify:

; 319  : 		MonoPrint("No Errors found :)\n");

	push	OFFSET ??_C@_0BE@EDHJBMFL@No?5Errors?5found?5?3?$CJ?6?$AA@
	call	_MonoPrint
	add	esp, 4
$LN1@FileVerify:

; 320  : 
; 321  : 	return (retval == 0);

	cmp	DWORD PTR _retval$[ebp], 0
	jne	SHORT $LN7@FileVerify
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN8@FileVerify
$LN7@FileVerify:
	mov	DWORD PTR tv86[ebp], 0
$LN8@FileVerify:
	mov	eax, DWORD PTR tv86[ebp]
$LN4@FileVerify:

; 322  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?FileVerify@@YAHXZ ENDP					; FileVerify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_p$ = -872						; size = 4
_filePtr$ = -868					; size = 4
_retval$ = -864						; size = 4
_count$ = -860						; size = 4
_tmpName$ = -856					; size = 260
_outStr$ = -596						; size = 260
_buf$ = -336						; size = 33
_fileName$ = -300					; size = 260
_checksum$ = -40					; size = 33
__$ArrayPad$ = -4					; size = 4
_fileSet$ = 8						; size = 4
?FileVerify@@YAHPAPAD@Z PROC				; FileVerify

; 325  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 872				; 00000368H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 326  : FILE* filePtr;
; 327  : int retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 328  : char fileName[_MAX_PATH];
; 329  : char tmpName[_MAX_PATH];
; 330  : char outStr[_MAX_PATH];
; 331  : char buf[33];
; 332  : char checksum[33];
; 333  : char* p;
; 334  : int count = 0;

	mov	DWORD PTR _count$[ebp], 0
$LN10@FileVerify:

; 335  : 	
; 336  : 	do
; 337  : 	{
; 338  : 		strcpy (tmpName, fileSet[count]);

	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _fileSet$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	lea	eax, DWORD PTR _tmpName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 339  : 		strcpy (fileName, fileSet[count]);

	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _fileSet$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 340  : 		*(strchr (fileName, '=') - 1) = 0;

	push	61					; 0000003dH
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	BYTE PTR [eax-1], 0

; 341  : 		strcpy (checksum, strchr(fileSet[count], '=') + 2);

	push	61					; 0000003dH
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _fileSet$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	add	eax, 2
	push	eax
	lea	eax, DWORD PTR _checksum$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 342  : 
; 343  : 		if (strncmp (fileSet[count], "$A", 2) == 0)

	push	2
	push	OFFSET ??_C@_02NGJILGJF@$A?$AA@
	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _fileSet$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@FileVerify

; 344  : 		{
; 345  : 			sprintf (fileName, "%s%s", FalconDataDirectory, &tmpName[2]);

	mov	ecx, 1
	shl	ecx, 1
	lea	edx, DWORD PTR _tmpName$[ebp+ecx]
	push	edx
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN6@FileVerify
$LN7@FileVerify:

; 346  : 		}
; 347  : 		else if (strncmp (fileSet[count], "$B", 2) == 0)

	push	2
	push	OFFSET ??_C@_02PNLFOFFG@$B?$AA@
	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _fileSet$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@FileVerify

; 348  : 		{
; 349  : 			sprintf (fileName, "%s%s", FalconObjectDataDir, &tmpName[2]);

	mov	ecx, 1
	shl	ecx, 1
	lea	edx, DWORD PTR _tmpName$[ebp+ecx]
	push	edx
	push	OFFSET ?FalconObjectDataDir@@3PADA	; FalconObjectDataDir
	push	OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 350  : 		}
; 351  : 		else

	jmp	SHORT $LN6@FileVerify
$LN5@FileVerify:

; 352  : 		{
; 353  : 			strcpy (fileName, tmpName);

	lea	ecx, DWORD PTR _tmpName$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN6@FileVerify:

; 354  : 		}
; 355  : 		*(strchr (fileName, '=') - 1) = 0;

	push	61					; 0000003dH
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	BYTE PTR [eax-1], 0

; 356  : 		filePtr = fopen (fileName, "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _filePtr$[ebp], eax

; 357  : 		
; 358  : 		if (filePtr)

	cmp	DWORD PTR _filePtr$[ebp], 0
	je	SHORT $LN3@FileVerify

; 359  : 		{
; 360  : 			fclose (filePtr);

	mov	edx, DWORD PTR _filePtr$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 361  : 			p = MD5File(fileName, buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	?MD5File@@YAPADPBDPAD@Z			; MD5File
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax

; 362  : 
; 363  : 			if (strcmp (p, checksum))

	lea	edx, DWORD PTR _checksum$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@FileVerify

; 364  : 			{
; 365  : 				sprintf (outStr, "%s - FAILED\n", fileName);

	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@CKKMKJFJ@?$CFs?5?9?5FAILED?6?$AA@
	lea	edx, DWORD PTR _outStr$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 366  : 				MonoPrint(outStr);

	lea	eax, DWORD PTR _outStr$[ebp]
	push	eax
	call	_MonoPrint
	add	esp, 4

; 367  : 				retval++;

	mov	ecx, DWORD PTR _retval$[ebp]
	add	ecx, 1
	mov	DWORD PTR _retval$[ebp], ecx
$LN2@FileVerify:

; 368  : 			}
; 369  : 		}
; 370  : 		else

	jmp	SHORT $LN1@FileVerify
$LN3@FileVerify:

; 371  : 		{
; 372  : 			sprintf (outStr, "%s - NOT FOUND\n", fileName);

	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	push	OFFSET ??_C@_0BA@KKNCGMIO@?$CFs?5?9?5NOT?5FOUND?6?$AA@
	lea	eax, DWORD PTR _outStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 373  : 			MonoPrint(outStr);

	lea	ecx, DWORD PTR _outStr$[ebp]
	push	ecx
	call	_MonoPrint
	add	esp, 4

; 374  : 			retval++;

	mov	edx, DWORD PTR _retval$[ebp]
	add	edx, 1
	mov	DWORD PTR _retval$[ebp], edx
$LN1@FileVerify:

; 375  : 		}
; 376  : 		count ++;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax

; 377  : 	}
; 378  : 	while (strcmp (fileSet[count], "LASTFILE = 0"));

	push	OFFSET ??_C@_0N@EODGKPFH@LASTFILE?5?$DN?50?$AA@
	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _fileSet$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN10@FileVerify

; 379  : 
; 380  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 381  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?FileVerify@@YAHPAPAD@Z ENDP				; FileVerify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_ctx$ = -92						; size = 88
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_buf$ = 16						; size = 4
?MD5Data@@YAPADPBEIPAD@Z PROC				; MD5Data

; 701  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 702  :     MD5_CTX ctx;
; 703  : 
; 704  :     MD5Init(&ctx);

	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?MD5Init@@YAXPAUMD5Context@@@Z		; MD5Init
	add	esp, 4

; 705  :     MD5Update(&ctx,data,len);

	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?MD5Update@@YAXPAUMD5Context@@PBEI@Z	; MD5Update
	add	esp, 12					; 0000000cH

; 706  :     return MD5End(&ctx, buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	?MD5End@@YAPADPAUMD5Context@@PAD@Z	; MD5End
	add	esp, 8

; 707  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Data@@YAPADPBEIPAD@Z ENDP				; MD5Data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_j$ = -616						; size = 4
_f$ = -612						; size = 4
_i$ = -608						; size = 4
_ctx$ = -604						; size = 88
_buffer$ = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_buf$ = 12						; size = 4
?MD5File@@YAPADPBDPAD@Z PROC				; MD5File

; 681  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 616				; 00000268H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 682  :     unsigned char buffer[BUFSIZ];
; 683  :     MD5_CTX ctx;
; 684  :     int f,i,j;
; 685  : 
; 686  :     MD5Init(&ctx);

	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?MD5Init@@YAXPAUMD5Context@@@Z		; MD5Init
	add	esp, 4

; 687  :     f = open(filename,O_RDONLY);

	push	0
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_open
	add	esp, 8
	mov	DWORD PTR _f$[ebp], eax

; 688  :     if (f < 0) return 0;

	cmp	DWORD PTR _f$[ebp], 0
	jge	SHORT $LN3@MD5File
	xor	eax, eax
	jmp	$LN5@MD5File
$LN3@MD5File:

; 689  :     while ((i = read(f,buffer,sizeof buffer)) > 0) {

	push	512					; 00000200H
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$[ebp], eax
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN2@MD5File

; 690  : 	MD5Update(&ctx,buffer,i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?MD5Update@@YAXPAUMD5Context@@PBEI@Z	; MD5Update
	add	esp, 12					; 0000000cH

; 691  :     }

	jmp	SHORT $LN3@MD5File
$LN2@MD5File:

; 692  :     j = errno;

	call	__errno
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _j$[ebp], ecx

; 693  :     close(f);

	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	_close
	add	esp, 4

; 694  :     errno = j;

	call	__errno
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [eax], ecx

; 695  :     if (i < 0) return 0;

	cmp	DWORD PTR _i$[ebp], 0
	jge	SHORT $LN1@MD5File
	xor	eax, eax
	jmp	SHORT $LN5@MD5File
$LN1@MD5File:

; 696  :     return MD5End(&ctx, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?MD5End@@YAPADPAUMD5Context@@PAD@Z	; MD5End
	add	esp, 8
$LN5@MD5File:

; 697  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5File@@YAPADPBDPAD@Z ENDP				; MD5File
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_i$ = -24						; size = 4
_digest$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_buf$ = 12						; size = 4
?MD5End@@YAPADPAUMD5Context@@PAD@Z PROC			; MD5End

; 662  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 663  :     int i;
; 664  :     unsigned char digest[16];
; 665  :     static const char hex[]="0123456789abcdef";
; 666  : 
; 667  :     if (!buf)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN5@MD5End

; 668  :         buf = (char *)malloc(33);

	push	33					; 00000021H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax
$LN5@MD5End:

; 669  :     if (!buf)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN4@MD5End

; 670  : 	return 0;

	xor	eax, eax
	jmp	SHORT $LN6@MD5End
$LN4@MD5End:

; 671  :     MD5Final(digest,ctx);

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _digest$[ebp]
	push	ecx
	call	?MD5Final@@YAXQAEPAUMD5Context@@@Z	; MD5Final
	add	esp, 8

; 672  :     for (i=0;i<16;i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MD5End
$LN2@MD5End:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@MD5End:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jge	SHORT $LN1@MD5End

; 673  : 	buf[i+i] = hex[digest[i] >> 4];

	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR _digest$[ebp+eax]
	sar	ecx, 4
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	cl, BYTE PTR ?hex@?1??MD5End@@YAPADPAUMD5Context@@PAD@Z@4QBDB[ecx]
	mov	BYTE PTR [eax+edx], cl

; 674  : 	buf[i+i+1] = hex[digest[i] & 0x0f];

	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR _digest$[ebp+edx]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	al, BYTE PTR ?hex@?1??MD5End@@YAPADPAUMD5Context@@PAD@Z@4QBDB[eax]
	mov	BYTE PTR [edx+ecx+1], al

; 675  :     }

	jmp	SHORT $LN2@MD5End
$LN1@MD5End:

; 676  :     buf[i+i] = '\0';

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	BYTE PTR [edx+ecx], 0

; 677  :     return buf;

	mov	eax, DWORD PTR _buf$[ebp]
$LN6@MD5End:

; 678  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5End@@YAPADPAUMD5Context@@PAD@Z ENDP			; MD5End
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_padLen$ = -24						; size = 4
tv76 = -20						; size = 4
_index$ = -16						; size = 4
_bits$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_digest$ = 8						; size = 4
_context$ = 12						; size = 4
?MD5Final@@YAXQAEPAUMD5Context@@@Z PROC			; MD5Final

; 532  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 533  : 	unsigned char bits[8];
; 534  : 	unsigned int index, padLen;
; 535  : 
; 536  : 	/* Save number of bits */
; 537  : 	Encode (bits, context->count, 8);

	push	8
	mov	eax, DWORD PTR _context$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _bits$[ebp]
	push	ecx
	call	?Encode@@YAXPAEPAII@Z			; Encode
	add	esp, 12					; 0000000cH

; 538  : 
; 539  : 	/* Pad out to 56 mod 64. */
; 540  : 	index = (unsigned int)((context->count[0] >> 3) & 0x3f);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+edx+16]
	shr	ecx, 3
	and	ecx, 63					; 0000003fH
	mov	DWORD PTR _index$[ebp], ecx

; 541  : 	padLen = (index < 56) ? (56 - index) : (120 - index);

	cmp	DWORD PTR _index$[ebp], 56		; 00000038H
	jae	SHORT $LN3@MD5Final
	mov	edx, 56					; 00000038H
	sub	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN4@MD5Final
$LN3@MD5Final:
	mov	eax, 120				; 00000078H
	sub	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR tv76[ebp], eax
$LN4@MD5Final:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _padLen$[ebp], ecx

; 542  : 	MD5Update (context, PADDING, padLen);

	mov	edx, DWORD PTR _padLen$[ebp]
	push	edx
	push	OFFSET _PADDING
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	?MD5Update@@YAXPAUMD5Context@@PBEI@Z	; MD5Update
	add	esp, 12					; 0000000cH

; 543  : 
; 544  : 	/* Append length (before padding) */
; 545  : 	MD5Update (context, bits, 8);

	push	8
	lea	ecx, DWORD PTR _bits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	call	?MD5Update@@YAXPAUMD5Context@@PBEI@Z	; MD5Update
	add	esp, 12					; 0000000cH

; 546  : 
; 547  : 	/* Store state in digest */
; 548  : 	Encode (digest, context->state, 16);

	push	16					; 00000010H
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _digest$[ebp]
	push	ecx
	call	?Encode@@YAXPAEPAII@Z			; Encode
	add	esp, 12					; 0000000cH

; 549  : 
; 550  : 	/* Zeroize sensitive information. */
; 551  : 	memset ((void *)context, 0, sizeof (*context));

	push	88					; 00000058H
	push	0
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 552  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Final@@YAXQAEPAUMD5Context@@@Z ENDP			; MD5Final
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
tv76 = -16						; size = 4
_partLen$ = -12						; size = 4
_index$ = -8						; size = 4
_i$ = -4						; size = 4
_context$ = 8						; size = 4
_input$ = 12						; size = 4
_inputLen$ = 16						; size = 4
?MD5Update@@YAXPAUMD5Context@@PBEI@Z PROC		; MD5Update

; 492  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 493  : 	unsigned int i, index, partLen;
; 494  : 
; 495  : 	/* Compute number of bytes mod 64 */
; 496  : 	index = (unsigned int)((context->count[0] >> 3) & 0x3F);

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	edx, DWORD PTR [ecx+eax+16]
	shr	edx, 3
	and	edx, 63					; 0000003fH
	mov	DWORD PTR _index$[ebp], edx

; 497  : 
; 498  : 	/* Update number of bits */
; 499  : 	if ((context->count[0] += ((u_int32_t)inputLen << 3))
; 500  : 	    < ((u_int32_t)inputLen << 3))

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _inputLen$[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR [edx+eax+16]
	add	eax, ecx
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR [edx+ecx+16], eax
	mov	ecx, DWORD PTR _inputLen$[ebp]
	shl	ecx, 3
	cmp	DWORD PTR tv76[ebp], ecx
	jae	SHORT $LN6@MD5Update

; 501  : 		context->count[1]++;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+edx+16]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+edx+16], ecx
$LN6@MD5Update:

; 502  : 	context->count[1] += ((u_int32_t)inputLen >> 29);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _inputLen$[ebp]
	shr	edx, 29					; 0000001dH
	mov	eax, DWORD PTR _context$[ebp]
	add	edx, DWORD PTR [eax+ecx+16]
	mov	ecx, 4
	shl	ecx, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+ecx+16], edx

; 503  : 
; 504  : 	partLen = 64 - index;

	mov	ecx, 64					; 00000040H
	sub	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _partLen$[ebp], ecx

; 505  : 
; 506  : 	/* Transform as many times as possible. */
; 507  : 	if (inputLen >= partLen) {

	mov	edx, DWORD PTR _inputLen$[ebp]
	cmp	edx, DWORD PTR _partLen$[ebp]
	jb	SHORT $LN5@MD5Update

; 508  : 		memcpy((void *)&context->buffer[index], (void *)input,
; 509  : 		    partLen);

	mov	eax, DWORD PTR _partLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _context$[ebp]
	lea	ecx, DWORD PTR [eax+edx+24]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 510  : 		MD5Transform (context->state, context->buffer);

	mov	edx, DWORD PTR _context$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	?MD5Transform@@YAXQAIQBE@Z		; MD5Transform
	add	esp, 8

; 511  : 
; 512  : 		for (i = partLen; i + 63 < inputLen; i += 64)

	mov	ecx, DWORD PTR _partLen$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN4@MD5Update
$LN3@MD5Update:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 64					; 00000040H
	mov	DWORD PTR _i$[ebp], edx
$LN4@MD5Update:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 63					; 0000003fH
	cmp	eax, DWORD PTR _inputLen$[ebp]
	jae	SHORT $LN2@MD5Update

; 513  : 			MD5Transform (context->state, &input[i]);

	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	call	?MD5Transform@@YAXQAIQBE@Z		; MD5Transform
	add	esp, 8
	jmp	SHORT $LN3@MD5Update
$LN2@MD5Update:

; 514  : 
; 515  : 		index = 0;

	mov	DWORD PTR _index$[ebp], 0

; 516  : 	}
; 517  : 	else

	jmp	SHORT $LN1@MD5Update
$LN5@MD5Update:

; 518  : 		i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN1@MD5Update:

; 519  : 
; 520  : 	/* Buffer remaining input */
; 521  : 	memcpy ((void *)&context->buffer[index], (void *)&input[i],
; 522  : 	    inputLen-i);

	mov	eax, DWORD PTR _inputLen$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR _context$[ebp]
	lea	ecx, DWORD PTR [eax+edx+24]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 523  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MD5Update@@YAXPAUMD5Context@@PBEI@Z ENDP		; MD5Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\mddriver.cpp
_TEXT	SEGMENT
_context$ = 8						; size = 4
?MD5Init@@YAXPAUMD5Context@@@Z PROC			; MD5Init

; 473  : {

	push	ebp
	mov	ebp, esp

; 474  : 
; 475  : 	context->count[0] = context->count[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax+16], 0
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+edx+16], 0

; 476  : 
; 477  : 	/* Load magic initialization constants.  */
; 478  : 	context->state[0] = 0x67452301;

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+ecx], 1732584193		; 67452301H

; 479  : 	context->state[1] = 0xefcdab89;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [ecx+eax], -271733879		; efcdab89H

; 480  : 	context->state[2] = 0x98badcfe;

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR [eax+edx], -1732584194	; 98badcfeH

; 481  : 	context->state[3] = 0x10325476;

	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _context$[ebp]
	mov	DWORD PTR [edx+ecx], 271733878		; 10325476H

; 482  : }

	pop	ebp
	ret	0
?MD5Init@@YAXPAUMD5Context@@@Z ENDP			; MD5Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT

; 218  : 	{ return (char*)strchr((const char*)_Str, _Ch); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	_strchr
	add	esp, 8
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
END
