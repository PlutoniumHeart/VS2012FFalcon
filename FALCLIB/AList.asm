; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\AList.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0ANode@@QAE@XZ				; ANode::ANode
PUBLIC	?GetSucc@ANode@@QAEPAXXZ			; ANode::GetSucc
PUBLIC	?GetPred@ANode@@QAEPAXXZ			; ANode::GetPred
PUBLIC	?Remove@ANode@@QAEPAXXZ				; ANode::Remove
PUBLIC	?InsertAfter@ANode@@QAEXPAV1@@Z			; ANode::InsertAfter
PUBLIC	?InsertBefore@ANode@@QAEXPAV1@@Z		; ANode::InsertBefore
PUBLIC	?CompareWith@ANode@@UAEHPAV1@@Z			; ANode::CompareWith
PUBLIC	??1ANode@@QAE@XZ				; ANode::~ANode
PUBLIC	??0AList@@QAE@XZ				; AList::AList
PUBLIC	?Init@AList@@QAEXXZ				; AList::Init
PUBLIC	?RemHead@AList@@QAEPAXXZ			; AList::RemHead
PUBLIC	?RemTail@AList@@QAEPAXXZ			; AList::RemTail
PUBLIC	?AddHead@AList@@QAEXPAVANode@@@Z		; AList::AddHead
PUBLIC	?AddTail@AList@@QAEXPAVANode@@@Z		; AList::AddTail
PUBLIC	?GetHead@AList@@QAEPAXXZ			; AList::GetHead
PUBLIC	?GetTail@AList@@QAEPAXXZ			; AList::GetTail
PUBLIC	?AddSorted@AList@@QAEXPAVANode@@@Z		; AList::AddSorted
PUBLIC	??1AList@@QAE@XZ				; AList::~AList
PUBLIC	??0ProtectedAList@@QAE@XZ			; ProtectedAList::ProtectedAList
PUBLIC	??1ProtectedAList@@QAE@XZ			; ProtectedAList::~ProtectedAList
PUBLIC	?Lock@ProtectedAList@@QAEXXZ			; ProtectedAList::Lock
PUBLIC	?Unlock@ProtectedAList@@QAEXXZ			; ProtectedAList::Unlock
PUBLIC	??_7ANode@@6B@					; ANode::`vftable'
PUBLIC	??_C@_05IKJNMKJN@alist?$AA@			; `string'
PUBLIC	??_R4ANode@@6B@					; ANode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVANode@@@8				; ANode `RTTI Type Descriptor'
PUBLIC	??_R3ANode@@8					; ANode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ANode@@8					; ANode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ANode@@8				; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_F4CreateCriticalSection:PROC
EXTRN	_F4DestroyCriticalSection:PROC
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R1A@?0A@EA@ANode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ANode@@8 DD FLAT:??_R0?AVANode@@@8	; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ANode@@8
rdata$r	ENDS
;	COMDAT ??_R2ANode@@8
rdata$r	SEGMENT
??_R2ANode@@8 DD FLAT:??_R1A@?0A@EA@ANode@@8		; ANode::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ANode@@8
rdata$r	SEGMENT
??_R3ANode@@8 DD 00H					; ANode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ANode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVANode@@@8
_DATA	SEGMENT
??_R0?AVANode@@@8 DD FLAT:??_7type_info@@6B@		; ANode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVANode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ANode@@6B@
rdata$r	SEGMENT
??_R4ANode@@6B@ DD 00H					; ANode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVANode@@@8
	DD	FLAT:??_R3ANode@@8
rdata$r	ENDS
;	COMDAT ??_C@_05IKJNMKJN@alist?$AA@
CONST	SEGMENT
??_C@_05IKJNMKJN@alist?$AA@ DB 'alist', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7ANode@@6B@
CONST	SEGMENT
??_7ANode@@6B@ DD FLAT:??_R4ANode@@6B@			; ANode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AList@@QAE@XZ$0
__ehfuncinfo$??1AList@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??0AList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AList@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0AList@@QAE@XZ$1
__ehfuncinfo$??0AList@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0AList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@ProtectedAList@@QAEXXZ PROC			; ProtectedAList::Unlock
; _this$ = ecx

; 169  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : #ifndef F4COMPRESS
; 171  : 	F4LeaveCriticalSection(listLock);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_F4LeaveCriticalSection
	add	esp, 4

; 172  : #endif
; 173  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@ProtectedAList@@QAEXXZ ENDP			; ProtectedAList::Unlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@ProtectedAList@@QAEXXZ PROC			; ProtectedAList::Lock
; _this$ = ecx

; 162  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : #ifndef F4COMPRESS
; 164  : 	F4EnterCriticalSection(listLock);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_F4EnterCriticalSection
	add	esp, 4

; 165  : #endif
; 166  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Lock@ProtectedAList@@QAEXXZ ENDP			; ProtectedAList::Lock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ProtectedAList@@QAE@XZ PROC				; ProtectedAList::~ProtectedAList
; _this$ = ecx

; 155  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 156  : #ifndef F4COMPRESS
; 157  : 	F4DestroyCriticalSection(listLock);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_F4DestroyCriticalSection
	add	esp, 4

; 158  : #endif
; 159  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AList@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1ProtectedAList@@QAE@XZ ENDP				; ProtectedAList::~ProtectedAList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ProtectedAList@@QAE@XZ PROC				; ProtectedAList::ProtectedAList
; _this$ = ecx

; 148  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AList@@QAE@XZ			; AList::AList

; 149  : #ifndef F4COMPRESS
; 150  : 	listLock=F4CreateCriticalSection("alist");

	push	OFFSET ??_C@_05IKJNMKJN@alist?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 151  : #endif
; 152  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ProtectedAList@@QAE@XZ ENDP				; ProtectedAList::ProtectedAList
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1AList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1AList@@QAE@XZ PROC					; AList::~AList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AList@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AList@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??1AList@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AList@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AList@@QAE@XZ ENDP					; AList::~AList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_a$ = -4						; size = 4
_n$ = 8							; size = 4
?AddSorted@AList@@QAEXPAVANode@@@Z PROC			; AList::AddSorted
; _this$ = ecx

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 	ANode *a;
; 72   : 	
; 73   : 	a=(ANode *)GetHead();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _a$[ebp], eax
$LN3@AddSorted:

; 74   : 	while(a)

	cmp	DWORD PTR _a$[ebp], 0
	je	SHORT $LN2@AddSorted

; 75   : 	{
; 76   : 		if(a->CompareWith(n) > 0)

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	test	eax, eax
	jle	SHORT $LN1@AddSorted

; 77   : 		{
; 78   : 			n->InsertBefore(a);

	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _n$[ebp]
	call	?InsertBefore@ANode@@QAEXPAV1@@Z	; ANode::InsertBefore

; 79   : 			return;

	jmp	SHORT $LN4@AddSorted
$LN1@AddSorted:

; 80   : 		}
; 81   : 		a=(ANode *)a->GetSucc();

	mov	ecx, DWORD PTR _a$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _a$[ebp], eax

; 82   : 	}

	jmp	SHORT $LN3@AddSorted
$LN2@AddSorted:

; 83   : 	AddTail(n);

	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddTail@AList@@QAEXPAVANode@@@Z	; AList::AddTail
$LN4@AddSorted:

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddSorted@AList@@QAEXPAVANode@@@Z ENDP			; AList::AddSorted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTail@AList@@QAEPAXXZ PROC				; AList::GetTail
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 	if(_Tail._Pred->_Pred)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@GetTail

; 62   : 	{
; 63   : 		return((void *)_Tail._Pred);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	jmp	SHORT $LN2@GetTail
$LN1@GetTail:

; 64   : 	}
; 65   : 	return(0);

	xor	eax, eax
$LN2@GetTail:

; 66   : 
; 67   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTail@AList@@QAEPAXXZ ENDP				; AList::GetTail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHead@AList@@QAEPAXXZ PROC				; AList::GetHead
; _this$ = ecx

; 51   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 52   : 	if(_Head._Succ->_Succ)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN1@GetHead

; 53   : 	{
; 54   : 		return((void *)_Head._Succ);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	jmp	SHORT $LN2@GetHead
$LN1@GetHead:

; 55   : 	}
; 56   : 	return(0);

	xor	eax, eax
$LN2@GetHead:

; 57   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHead@AList@@QAEPAXXZ ENDP				; AList::GetHead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?AddTail@AList@@QAEXPAVANode@@@Z PROC			; AList::AddTail
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	n->InsertBefore(&_Tail);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	call	?InsertBefore@ANode@@QAEXPAV1@@Z	; ANode::InsertBefore

; 48   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddTail@AList@@QAEXPAVANode@@@Z ENDP			; AList::AddTail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?AddHead@AList@@QAEXPAVANode@@@Z PROC			; AList::AddHead
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	n->InsertAfter(&_Head);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	call	?InsertAfter@ANode@@QAEXPAV1@@Z		; ANode::InsertAfter

; 43   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddHead@AList@@QAEXPAVANode@@@Z ENDP			; AList::AddHead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_n$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemTail@AList@@QAEPAXXZ PROC				; AList::RemTail
; _this$ = ecx

; 30   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 31   : 	if(_Tail._Pred->_Pred)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@RemTail

; 32   : 	{
; 33   : 		ANode *n = _Tail._Pred;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _n$1[ebp], eax

; 34   : 
; 35   : 		return(n->Remove());

	mov	ecx, DWORD PTR _n$1[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove
	jmp	SHORT $LN2@RemTail
$LN1@RemTail:

; 36   : 	}
; 37   : 	return(0);

	xor	eax, eax
$LN2@RemTail:

; 38   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemTail@AList@@QAEPAXXZ ENDP				; AList::RemTail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_n$1 = -8						; size = 4
_this$ = -4						; size = 4
?RemHead@AList@@QAEPAXXZ PROC				; AList::RemHead
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 	if(_Head._Succ->_Succ)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN1@RemHead

; 21   : 	{
; 22   : 		ANode *n = _Head._Succ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _n$1[ebp], eax

; 23   : 
; 24   : 		return(n->Remove());

	mov	ecx, DWORD PTR _n$1[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove
	jmp	SHORT $LN2@RemHead
$LN1@RemHead:

; 25   : 	}
; 26   : 	return(0);

	xor	eax, eax
$LN2@RemHead:

; 27   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemHead@AList@@QAEPAXXZ ENDP				; AList::RemHead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@AList@@QAEXXZ PROC				; AList::Init
; _this$ = ecx

; 11   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 12   : 	_Head._Pred=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 13   : 	_Head._Succ=&_Tail;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 14   : 	_Tail._Pred=&_Head;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 15   : 	_Tail._Succ=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0

; 16   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Init@AList@@QAEXXZ ENDP				; AList::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0AList@@QAE@XZ PROC					; AList::AList
; _this$ = ecx

; 6    : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0AList@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 7    : 	Init();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@AList@@QAEXXZ			; AList::Init

; 8    : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0AList@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__unwindfunclet$??0AList@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??0AList@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0AList@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0AList@@QAE@XZ ENDP					; AList::AList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ANode@@QAE@XZ PROC					; ANode::~ANode
; _this$ = ecx

; 93   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ANode@@6B@

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1ANode@@QAE@XZ ENDP					; ANode::~ANode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\alist.h
;	COMDAT ?CompareWith@ANode@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?CompareWith@ANode@@UAEHPAV1@@Z PROC			; ANode::CompareWith, COMDAT
; _this$ = ecx

; 13   : 	virtual int CompareWith(ANode *n) {return 0;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?CompareWith@ANode@@UAEHPAV1@@Z ENDP			; ANode::CompareWith
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?InsertBefore@ANode@@QAEXPAV1@@Z PROC			; ANode::InsertBefore
; _this$ = ecx

; 137  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 138  : 	// update links in other nodes
; 139  : 	_Succ=n;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 140  : 	_Pred=n->_Pred;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 141  : 
; 142  : 	_Succ->_Pred=this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 143  : 	_Pred->_Succ=this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 144  : 
; 145  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?InsertBefore@ANode@@QAEXPAV1@@Z ENDP			; ANode::InsertBefore
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?InsertAfter@ANode@@QAEXPAV1@@Z PROC			; ANode::InsertAfter
; _this$ = ecx

; 126  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 	// update links in other nodes
; 128  : 	_Succ=n->_Succ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx

; 129  : 	_Pred=n;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 130  : 
; 131  : 	_Succ->_Pred=this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 132  : 	_Pred->_Succ=this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 133  : 
; 134  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?InsertAfter@ANode@@QAEXPAV1@@Z ENDP			; ANode::InsertAfter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Remove@ANode@@QAEPAXXZ PROC				; ANode::Remove
; _this$ = ecx

; 115  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 	// update links in other nodes
; 117  : 	_Pred->_Succ=_Succ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 118  : 	_Succ->_Pred=_Pred;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 119  : 
; 120  : 	_Pred=_Succ=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 121  : 
; 122  : 	return(this);

	mov	eax, DWORD PTR _this$[ebp]

; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Remove@ANode@@QAEPAXXZ ENDP				; ANode::Remove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPred@ANode@@QAEPAXXZ PROC				; ANode::GetPred
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 	if(_Pred->_Pred)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@GetPred

; 107  : 		return ((void *)_Pred);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	jmp	SHORT $LN2@GetPred
$LN1@GetPred:

; 108  : 	return(0);

	xor	eax, eax
$LN2@GetPred:

; 109  : 
; 110  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPred@ANode@@QAEPAXXZ ENDP				; ANode::GetPred
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSucc@ANode@@QAEPAXXZ PROC				; ANode::GetSucc
; _this$ = ecx

; 98   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 	if(_Succ->_Succ)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN1@GetSucc

; 100  : 		return ((void *)_Succ);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	jmp	SHORT $LN2@GetSucc
$LN1@GetSucc:

; 101  : 	return(0);

	xor	eax, eax
$LN2@GetSucc:

; 102  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSucc@ANode@@QAEPAXXZ ENDP				; ANode::GetSucc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\alist.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ANode@@QAE@XZ PROC					; ANode::ANode
; _this$ = ecx

; 88   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ANode@@6B@

; 89   : 	_Pred=_Succ=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 90   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ANode@@QAE@XZ ENDP					; ANode::ANode
_TEXT	ENDS
END
