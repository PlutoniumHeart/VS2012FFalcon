; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\FalcSess.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_fabsf
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	?XDelta@VuEntity@@QBEMXZ			; VuEntity::XDelta
PUBLIC	?YDelta@VuEntity@@QBEMXZ			; VuEntity::YDelta
PUBLIC	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ	; VuEntity::EntityType
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?RequestReliableTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestReliableTransmit
PUBLIC	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ	; VuBin<VuEntity>::get
PUBLIC	?CameraCount@VuSessionEntity@@QBEHXZ		; VuSessionEntity::CameraCount
PUBLIC	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?AceFactor@LogBookData@@QAEMXZ			; LogBookData::AceFactor
PUBLIC	??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z ; VuBin<SquadronClass>::VuBin<SquadronClass>
PUBLIC	??1?$VuBin@VSquadronClass@@@@QAE@XZ		; VuBin<SquadronClass>::~VuBin<SquadronClass>
PUBLIC	??8?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z	; VuBin<SquadronClass>::operator==
PUBLIC	??9?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z	; VuBin<SquadronClass>::operator!=
PUBLIC	??B?$VuBin@VSquadronClass@@@@QBE_NXZ		; VuBin<SquadronClass>::operator bool
PUBLIC	??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::operator->
PUBLIC	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
PUBLIC	?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ; VuBin<SquadronClass>::reset
PUBLIC	??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z ; VuBin<FlightClass>::VuBin<FlightClass>
PUBLIC	??1?$VuBin@VFlightClass@@@@QAE@XZ		; VuBin<FlightClass>::~VuBin<FlightClass>
PUBLIC	??8?$VuBin@VFlightClass@@@@QBE_NABV0@@Z		; VuBin<FlightClass>::operator==
PUBLIC	??9?$VuBin@VFlightClass@@@@QBE_NABV0@@Z		; VuBin<FlightClass>::operator!=
PUBLIC	??B?$VuBin@VFlightClass@@@@QBE_NXZ		; VuBin<FlightClass>::operator bool
PUBLIC	??C?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::operator->
PUBLIC	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
PUBLIC	?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ; VuBin<FlightClass>::reset
PUBLIC	??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ; VuBin<FalconEntity>::VuBin<FalconEntity>
PUBLIC	??0?$VuBin@VFalconEntity@@@@QAE@ABV0@@Z		; VuBin<FalconEntity>::VuBin<FalconEntity>
PUBLIC	??1?$VuBin@VFalconEntity@@@@QAE@XZ		; VuBin<FalconEntity>::~VuBin<FalconEntity>
PUBLIC	??8?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z	; VuBin<FalconEntity>::operator==
PUBLIC	??9?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z	; VuBin<FalconEntity>::operator!=
PUBLIC	??B?$VuBin@VFalconEntity@@@@QBE_NXZ		; VuBin<FalconEntity>::operator bool
PUBLIC	??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::operator->
PUBLIC	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
PUBLIC	?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ; VuBin<FalconEntity>::reset
PUBLIC	??_G?$VuBin@VFalconEntity@@@@QAEPAXI@Z		; VuBin<FalconEntity>::`scalar deleting destructor'
PUBLIC	??0?$allocator@V?$VuBin@VFalconEntity@@@@@std@@QAE@XZ ; std::allocator<VuBin<FalconEntity> >::allocator<VuBin<FalconEntity> >
PUBLIC	??0?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocator<std::_List_node<VuBin<FalconEntity>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size
PUBLIC	??0?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
PUBLIC	??0?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >
PUBLIC	??1?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::~_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >
PUBLIC	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
PUBLIC	??0?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
PUBLIC	?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Freenode
PUBLIC	??1?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
PUBLIC	??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
PUBLIC	?push_back@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEX$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::push_back
PUBLIC	??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
PUBLIC	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
PUBLIC	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
PUBLIC	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
PUBLIC	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
PUBLIC	?_Unchecked_end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Make_iter
PUBLIC	?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size
PUBLIC	?max_size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::max_size
PUBLIC	?erase@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::erase
PUBLIC	?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear
PUBLIC	?_Tidy@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Tidy
PUBLIC	?_Incsize@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXI@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Incsize
PUBLIC	??0FalconSessionEntity@@QAE@KPAD@Z		; FalconSessionEntity::FalconSessionEntity
PUBLIC	??0FalconSessionEntity@@QAE@PAPAEPAJ@Z		; FalconSessionEntity::FalconSessionEntity
PUBLIC	??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z	; FalconSessionEntity::FalconSessionEntity
PUBLIC	?InsertionCallback@FalconSessionEntity@@UAEHXZ	; FalconSessionEntity::InsertionCallback
PUBLIC	??1FalconSessionEntity@@UAE@XZ			; FalconSessionEntity::~FalconSessionEntity
PUBLIC	?SaveSize@FalconSessionEntity@@UAEHXZ		; FalconSessionEntity::SaveSize
PUBLIC	?Save@FalconSessionEntity@@UAEHPAPAE@Z		; FalconSessionEntity::Save
PUBLIC	?Save@FalconSessionEntity@@UAEHPAU_iobuf@@@Z	; FalconSessionEntity::Save
PUBLIC	?DoFullUpdate@FalconSessionEntity@@QAEXXZ	; FalconSessionEntity::DoFullUpdate
PUBLIC	?GetTeam@FalconSessionEntity@@QAEEXZ		; FalconSessionEntity::GetTeam
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?SetPlayerName@FalconSessionEntity@@QAEXPAD@Z	; FalconSessionEntity::SetPlayerName
PUBLIC	?SetPlayerCallsign@FalconSessionEntity@@QAEXPAD@Z ; FalconSessionEntity::SetPlayerCallsign
PUBLIC	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron
PUBLIC	?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerSquadronID
PUBLIC	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight
PUBLIC	?SetPlayerFlightID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerFlightID
PUBLIC	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity
PUBLIC	?SetPlayerEntityID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerEntityID
PUBLIC	?UpdatePlayer@FalconSessionEntity@@QAEXXZ	; FalconSessionEntity::UpdatePlayer
PUBLIC	?SetAceFactor@FalconSessionEntity@@QAEXM@Z	; FalconSessionEntity::SetAceFactor
PUBLIC	?SetInitAceFactor@FalconSessionEntity@@QAEXM@Z	; FalconSessionEntity::SetInitAceFactor
PUBLIC	?SetCountry@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetCountry
PUBLIC	?SetAircraftNum@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetAircraftNum
PUBLIC	?SetPilotSlot@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetPilotSlot
PUBLIC	?SetFlyState@FalconSessionEntity@@QAEXE@Z	; FalconSessionEntity::SetFlyState
PUBLIC	?SetReqCompression@FalconSessionEntity@@QAEXF@Z	; FalconSessionEntity::SetReqCompression
PUBLIC	?SetAssignedAircraftNum@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetAssignedAircraftNum
PUBLIC	?SetAssignedPilotSlot@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetAssignedPilotSlot
PUBLIC	?SetAssignedPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetAssignedPlayerFlight
PUBLIC	?SetAceFactorKill@FalconSessionEntity@@QAEXM@Z	; FalconSessionEntity::SetAceFactorKill
PUBLIC	?SetAceFactorDeath@FalconSessionEntity@@QAEXM@Z	; FalconSessionEntity::SetAceFactorDeath
PUBLIC	?InSessionBubble@FalconSessionEntity@@QAEHPAVFalconEntity@@M@Z ; FalconSessionEntity::InSessionBubble
PUBLIC	?Handle@FalconSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; FalconSessionEntity::Handle
PUBLIC	?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z ; FalconSessionEntity::AddToFineInterest
PUBLIC	?RemoveFromFineInterest@FalconSessionEntity@@QAE_NPBVFalconEntity@@_N@Z ; FalconSessionEntity::RemoveFromFineInterest
PUBLIC	?ClearFineInterest@FalconSessionEntity@@QAEX_N@Z ; FalconSessionEntity::ClearFineInterest
PUBLIC	?HasFineInterest@FalconSessionEntity@@QBE_NPBVFalconEntity@@@Z ; FalconSessionEntity::HasFineInterest
PUBLIC	??_GFalconSessionEntity@@UAEPAXI@Z		; FalconSessionEntity::`scalar deleting destructor'
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	?GetOwner@CampBaseClass@@QAEEXZ			; CampBaseClass::GetOwner
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator*
PUBLIC	??C?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBV?$VuBin@VFalconEntity@@@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator->
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
PUBLIC	??$?8VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ; operator==<FalconEntity>
PUBLIC	??$?9VSquadronClass@@@@YA_NPBXABV?$VuBin@VSquadronClass@@@@@Z ; operator!=<SquadronClass>
PUBLIC	??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z ; operator!=<FlightClass>
PUBLIC	??$?9VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ; operator!=<FalconEntity>
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
PUBLIC	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
PUBLIC	??$_Insert@V?$VuBin@VFalconEntity@@@@@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Insert<VuBin<FalconEntity> >
PUBLIC	?pointer_to@?$pointer_traits@PAV?$VuBin@VFalconEntity@@@@@std@@SAPAV?$VuBin@VFalconEntity@@@@AAV3@@Z ; std::pointer_traits<VuBin<FalconEntity> *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PBV?$VuBin@VFalconEntity@@@@@std@@SAPBV?$VuBin@VFalconEntity@@@@ABV3@@Z ; std::pointer_traits<VuBin<FalconEntity> const *>::pointer_to
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
PUBLIC	??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::addressof<VuBin<FalconEntity> >
PUBLIC	??$destroy@V?$VuBin@VFalconEntity@@@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >
PUBLIC	??$addressof@$$CBV?$VuBin@VFalconEntity@@@@@std@@YAPBV?$VuBin@VFalconEntity@@@@ABV1@@Z ; std::addressof<VuBin<FalconEntity> const >
PUBLIC	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Allocate@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<VuBin<FalconEntity>,void *> >
PUBLIC	??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Buynode<VuBin<FalconEntity> >
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
PUBLIC	??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >
PUBLIC	??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
PUBLIC	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
PUBLIC	??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<VuBin<FalconEntity> >
PUBLIC	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
PUBLIC	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@$$QAV3@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
PUBLIC	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7FalconSessionEntity@@6B@			; FalconSessionEntity::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0DG@OLKGBOGL@FalconSessionEntity?3?5This?5functi@ ; `string'
PUBLIC	??_C@_0CM@MMKBEKHO@Invalid?5Session?5Info?5?$CFd?3?$CFd?5?$CFd?3?$CFd@ ; `string'
PUBLIC	??_C@_0CA@NCOMDAPC@Flight?5is?5not?5found?5?3?5?$CF08x?$CF08x?6?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FalconSessionEntity@@6B@			; FalconSessionEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFalconSessionEntity@@@8			; FalconSessionEntity `RTTI Type Descriptor'
PUBLIC	??_R3FalconSessionEntity@@8			; FalconSessionEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FalconSessionEntity@@8			; FalconSessionEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FalconSessionEntity@@8		; FalconSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@VuSessionEntity@@8		; VuSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuSessionEntity@@@8			; VuSessionEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuSessionEntity@@8				; VuSessionEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuSessionEntity@@8				; VuSessionEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuTargetEntity@@8			; VuTargetEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuTargetEntity@@@8			; VuTargetEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuTargetEntity@@8				; VuTargetEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuTargetEntity@@8				; VuTargetEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuEntity@@8			; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuEntity@@@8				; VuEntity `RTTI Type Descriptor'
PUBLIC	??_R3VuEntity@@8				; VuEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuEntity@@8				; VuEntity::`RTTI Base Class Array'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_exp:PROC
EXTRN	_fabs:PROC
EXTRN	_log:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	_sprintf:PROC
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	?SetEntityType@VuEntity@@QAEXG@Z:PROC		; VuEntity::SetEntityType
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z:PROC ; VuEntity::CustomCollisionCheck
EXTRN	?TerrainCollisionCheck@VuEntity@@UAEEXZ:PROC	; VuEntity::TerrainCollisionCheck
EXTRN	?IsGroup@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGroup
EXTRN	?IsGame@VuEntity@@UAEEXZ:PROC			; VuEntity::IsGame
EXTRN	?IsCamera@VuEntity@@UBEEXZ:PROC			; VuEntity::IsCamera
EXTRN	?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z:PROC	; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z:PROC ; VuEntity::Handle
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z:PROC ; VuGetRequest::VuGetRequest
EXTRN	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z:PROC ; VuFullUpdateEvent::VuFullUpdateEvent
EXTRN	?IsTarget@VuTargetEntity@@UAEEXZ:PROC		; VuTargetEntity::IsTarget
EXTRN	?SetDirty@VuTargetEntity@@QAEXXZ:PROC		; VuTargetEntity::SetDirty
EXTRN	?ClearDirty@VuTargetEntity@@QAEXXZ:PROC		; VuTargetEntity::ClearDirty
EXTRN	??0VuSessionEntity@@QAE@KPBD@Z:PROC		; VuSessionEntity::VuSessionEntity
EXTRN	??0VuSessionEntity@@QAE@PAPAEPAJ@Z:PROC		; VuSessionEntity::VuSessionEntity
EXTRN	??0VuSessionEntity@@QAE@PAU_iobuf@@@Z:PROC	; VuSessionEntity::VuSessionEntity
EXTRN	??1VuSessionEntity@@UAE@XZ:PROC			; VuSessionEntity::~VuSessionEntity
EXTRN	?SaveSize@VuSessionEntity@@UAEHXZ:PROC		; VuSessionEntity::SaveSize
EXTRN	?Save@VuSessionEntity@@UAEHPAPAE@Z:PROC		; VuSessionEntity::Save
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z:PROC ; VuSessionEntity::JoinGame
EXTRN	?IsSession@VuSessionEntity@@UAEEXZ:PROC		; VuSessionEntity::IsSession
EXTRN	?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z:PROC	; VuSessionEntity::HasTarget
EXTRN	?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z:PROC	; VuSessionEntity::InTarget
EXTRN	?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z:PROC ; VuSessionEntity::ForwardingTarget
EXTRN	?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z:PROC ; VuSessionEntity::GetCameraEntity
EXTRN	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z:PROC ; VuSessionEntity::AttachCamera
EXTRN	?ClearCameras@VuSessionEntity@@QAEX_N@Z:PROC	; VuSessionEntity::ClearCameras
EXTRN	?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z:PROC ; VuSessionEntity::Handle
EXTRN	?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z:PROC ; VuSessionEntity::Handle
EXTRN	?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z:PROC ; VuSessionEntity::Handle
EXTRN	?InsertionCallback@VuSessionEntity@@MAEHXZ:PROC	; VuSessionEntity::InsertionCallback
EXTRN	?RemovalCallback@VuSessionEntity@@MAEHXZ:PROC	; VuSessionEntity::RemovalCallback
EXTRN	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z:PROC ; VuMessageQueue::PostVuMessage
EXTRN	?NameWRank@LogBookData@@QAEPADXZ:PROC		; LogBookData::NameWRank
EXTRN	?GetTeam@@YAEE@Z:PROC				; GetTeam
EXTRN	??_EFalconSessionEntity@@UAEPAXI@Z:PROC		; FalconSessionEntity::`vector deleting destructor'
EXTRN	_MonoPrint:PROC
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	?ResyncTimes@@YAXXZ:PROC			; ResyncTimes
EXTRN	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z:PROC		; CommsQueue::Add
EXTRN	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z:PROC ; GameManagerClass::CheckPlayerStatus
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SetTimeCompression@@YAXH@Z:PROC		; SetTimeCompression
EXTRN	?SetLabel@@YAXPAVSimBaseClass@@@Z:PROC		; SetLabel
EXTRN	?CheckForNewPlayer@@YAXPAVFalconSessionEntity@@@Z:PROC ; CheckForNewPlayer
EXTRN	?UI_Refresh@@YAXXZ:PROC				; UI_Refresh
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuGlobalGroup@@3PAVVuGlobalGroup@@A:DWORD	; vuGlobalGroup
EXTRN	?vuNullId@@3VVU_ID@@A:QWORD			; vuNullId
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?gUICommsQ@@3PAVCommsQueue@@A:DWORD		; gUICommsQ
EXTRN	?GameManager@@3VGameManagerClass@@A:BYTE	; GameManager
EXTRN	?gCompressTillTime@@3KA:DWORD			; gCompressTillTime
EXTRN	?F4SessionType@@3HA:DWORD			; F4SessionType
EXTRN	?gGameType@@3HA:DWORD				; gGameType
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?now@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA
_BSS	SEGMENT
?now@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA DD 01H DUP (?) ; `FalconSessionEntity::UpdatePlayer'::`5'::now
_BSS	ENDS
;	COMDAT ?last_time@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA
_BSS	SEGMENT
?last_time@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA DD 01H DUP (?) ; `FalconSessionEntity::UpdatePlayer'::`5'::last_time
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2VuEntity@@8
rdata$r	SEGMENT
??_R2VuEntity@@8 DD FLAT:??_R1A@?0A@EA@VuEntity@@8	; VuEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuEntity@@8
rdata$r	SEGMENT
??_R3VuEntity@@8 DD 00H					; VuEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuEntity@@@8
_DATA	SEGMENT
??_R0?AVVuEntity@@@8 DD FLAT:??_7type_info@@6B@		; VuEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuEntity@@8 DD FLAT:??_R0?AVVuEntity@@@8	; VuEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuTargetEntity@@8
rdata$r	SEGMENT
??_R2VuTargetEntity@@8 DD FLAT:??_R1A@?0A@EA@VuTargetEntity@@8 ; VuTargetEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuTargetEntity@@8
rdata$r	SEGMENT
??_R3VuTargetEntity@@8 DD 00H				; VuTargetEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2VuTargetEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuTargetEntity@@@8
_DATA	SEGMENT
??_R0?AVVuTargetEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuTargetEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuTargetEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuTargetEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuTargetEntity@@8 DD FLAT:??_R0?AVVuTargetEntity@@@8 ; VuTargetEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuTargetEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2VuSessionEntity@@8
rdata$r	SEGMENT
??_R2VuSessionEntity@@8 DD FLAT:??_R1A@?0A@EA@VuSessionEntity@@8 ; VuSessionEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3VuSessionEntity@@8
rdata$r	SEGMENT
??_R3VuSessionEntity@@8 DD 00H				; VuSessionEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2VuSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuSessionEntity@@@8
_DATA	SEGMENT
??_R0?AVVuSessionEntity@@@8 DD FLAT:??_7type_info@@6B@	; VuSessionEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuSessionEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuSessionEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuSessionEntity@@8 DD FLAT:??_R0?AVVuSessionEntity@@@8 ; VuSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FalconSessionEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FalconSessionEntity@@8 DD FLAT:??_R0?AVFalconSessionEntity@@@8 ; FalconSessionEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FalconSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2FalconSessionEntity@@8
rdata$r	SEGMENT
??_R2FalconSessionEntity@@8 DD FLAT:??_R1A@?0A@EA@FalconSessionEntity@@8 ; FalconSessionEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuSessionEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuTargetEntity@@8
	DD	FLAT:??_R1A@?0A@EA@VuEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3FalconSessionEntity@@8
rdata$r	SEGMENT
??_R3FalconSessionEntity@@8 DD 00H			; FalconSessionEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2FalconSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFalconSessionEntity@@@8
_DATA	SEGMENT
??_R0?AVFalconSessionEntity@@@8 DD FLAT:??_7type_info@@6B@ ; FalconSessionEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFalconSessionEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FalconSessionEntity@@6B@
rdata$r	SEGMENT
??_R4FalconSessionEntity@@6B@ DD 00H			; FalconSessionEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFalconSessionEntity@@@8
	DD	FLAT:??_R3FalconSessionEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NCOMDAPC@Flight?5is?5not?5found?5?3?5?$CF08x?$CF08x?6?$AA@
CONST	SEGMENT
??_C@_0CA@NCOMDAPC@Flight?5is?5not?5found?5?3?5?$CF08x?$CF08x?6?$AA@ DB 'F'
	DB	'light is not found : %08x%08x', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MMKBEKHO@Invalid?5Session?5Info?5?$CFd?3?$CFd?5?$CFd?3?$CFd@
CONST	SEGMENT
??_C@_0CM@MMKBEKHO@Invalid?5Session?5Info?5?$CFd?3?$CFd?5?$CFd?3?$CFd@ DB 'I'
	DB	'nvalid Session Info %d:%d %d:%d %08x:%08x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OLKGBOGL@FalconSessionEntity?3?5This?5functi@
CONST	SEGMENT
??_C@_0DG@OLKGBOGL@FalconSessionEntity?3?5This?5functi@ DB 'FalconSession'
	DB	'Entity: This function is not supported!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7FalconSessionEntity@@6B@
CONST	SEGMENT
??_7FalconSessionEntity@@6B@ DD FLAT:??_R4FalconSessionEntity@@6B@ ; FalconSessionEntity::`vftable'
	DD	FLAT:?CustomCollisionCheck@VuEntity@@UAEEPAV1@M@Z
	DD	FLAT:?TerrainCollisionCheck@VuEntity@@UAEEXZ
	DD	FLAT:?IsTarget@VuTargetEntity@@UAEEXZ
	DD	FLAT:?IsSession@VuSessionEntity@@UAEEXZ
	DD	FLAT:?IsGroup@VuEntity@@UAEEXZ
	DD	FLAT:?IsGame@VuEntity@@UAEEXZ
	DD	FLAT:?IsCamera@VuEntity@@UBEEXZ
	DD	FLAT:?SaveSize@FalconSessionEntity@@UAEHXZ
	DD	FLAT:?Save@FalconSessionEntity@@UAEHPAU_iobuf@@@Z
	DD	FLAT:?Save@FalconSessionEntity@@UAEHPAPAE@Z
	DD	FLAT:?Handle@VuSessionEntity@@UAEHPAVVuSessionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuTransferEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuEntityCollisionEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPositionUpdateEvent@@@Z
	DD	FLAT:?Handle@FalconSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z
	DD	FLAT:?Handle@VuSessionEntity@@UAEHPAVVuEvent@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPullRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuPushRequest@@@Z
	DD	FLAT:?Handle@VuEntity@@UAEHPAVVuErrorMessage@@@Z
	DD	FLAT:??_EFalconSessionEntity@@UAEPAXI@Z
	DD	FLAT:?InsertionCallback@FalconSessionEntity@@UAEHXZ
	DD	FLAT:?RemovalCallback@VuSessionEntity@@MAEHXZ
	DD	FLAT:?HasTarget@VuSessionEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?InTarget@VuSessionEntity@@UAEEVVU_ID@@@Z
	DD	FLAT:?ForwardingTarget@VuSessionEntity@@UAEPAVVuTargetEntity@@PAVVuMessage@@@Z
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z$0
__ehfuncinfo$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z$0
__ehfuncinfo$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$0
__unwindtable$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$2
__ehfuncinfo$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z$0
__unwindtable$?UpdatePlayer@FalconSessionEntity@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdatePlayer@FalconSessionEntity@@QAEXXZ$0
__unwindtable$?DoFullUpdate@FalconSessionEntity@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFullUpdate@FalconSessionEntity@@QAEXXZ$0
__unwindtable$?Save@FalconSessionEntity@@UAEHPAPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Save@FalconSessionEntity@@UAEHPAPAE@Z$0
__unwindtable$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$3
__ehfuncinfo$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?UpdatePlayer@FalconSessionEntity@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UpdatePlayer@FalconSessionEntity@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DoFullUpdate@FalconSessionEntity@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoFullUpdate@FalconSessionEntity@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Save@FalconSessionEntity@@UAEHPAPAE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Save@FalconSessionEntity@@UAEHPAPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1FalconSessionEntity@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1FalconSessionEntity@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FalconSessionEntity@@QAE@KPAD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0FalconSessionEntity@@QAE@KPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1FalconSessionEntity@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$4
__unwindtable$??0FalconSessionEntity@@QAE@KPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$4
__unwindtable$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$0
__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$2
__ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0?$VuBin@VFalconEntity@@@@QAE@ABV0@@Z	; VuBin<FalconEntity>::VuBin<FalconEntity>
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
	pop	ebp
	ret	0
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$VuBin@VFalconEntity@@@@QAEPAXI@Z

; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@$$QAV3@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
	pop	ebp
	ret	0
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<VuBin<FalconEntity> >

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
tv135 = -40						; size = 4
tv134 = -36						; size = 4
tv133 = -32						; size = 4
__Pnode$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
$T3 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__V0$ = 16						; size = 4
??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Buynode<VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 850  : _VARIADIC_EXPAND_0X(_LIST_BUYNODE, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buynode0
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR __V0$[ebp]
	push	edx
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR tv133[ebp]
	push	edx
	mov	eax, DWORD PTR tv134[ebp]
	push	eax
	call	??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::addressof<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@V?$VuBin@VFalconEntity@@@@V1@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<VuBin<FalconEntity>,VuBin<FalconEntity> >
	jmp	SHORT $LN4@Buynode
__catch$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$0:
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate
	push	0
	push	0
	call	__CxxThrowException@8
	mov	eax, $LN7@Buynode
	ret	0
$LN4@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$1
$LN7@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z$1:
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Buynode<VuBin<FalconEntity> >
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@IPAU10@@Z PROC ; std::_Allocate<std::_List_node<VuBin<FalconEntity>,void *> >, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 12					; 0000000cH
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@IPAU10@@Z ENDP ; std::_Allocate<std::_List_node<VuBin<FalconEntity>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<VuBin<FalconEntity>,void *> * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$VuBin@VFalconEntity@@@@@std@@YAPBV?$VuBin@VFalconEntity@@@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$VuBin@VFalconEntity@@@@@std@@YAPBV?$VuBin@VFalconEntity@@@@ABV1@@Z PROC ; std::addressof<VuBin<FalconEntity> const >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@$$CBV?$VuBin@VFalconEntity@@@@@std@@YAPBV?$VuBin@VFalconEntity@@@@ABV1@@Z ENDP ; std::addressof<VuBin<FalconEntity> const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$VuBin@VFalconEntity@@@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$VuBin@VFalconEntity@@@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$VuBin@VFalconEntity@@@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAV?$VuBin@VFalconEntity@@@@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$VuBin@VFalconEntity@@@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z PROC ; std::addressof<VuBin<FalconEntity> >, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z ENDP ; std::addressof<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@1@PAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PBV?$VuBin@VFalconEntity@@@@@std@@SAPBV?$VuBin@VFalconEntity@@@@ABV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBV?$VuBin@VFalconEntity@@@@@std@@SAPBV?$VuBin@VFalconEntity@@@@ABV3@@Z PROC ; std::pointer_traits<VuBin<FalconEntity> const *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$VuBin@VFalconEntity@@@@@std@@YAPBV?$VuBin@VFalconEntity@@@@ABV1@@Z ; std::addressof<VuBin<FalconEntity> const >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBV?$VuBin@VFalconEntity@@@@@std@@SAPBV?$VuBin@VFalconEntity@@@@ABV3@@Z ENDP ; std::pointer_traits<VuBin<FalconEntity> const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PAV?$VuBin@VFalconEntity@@@@@std@@SAPAV?$VuBin@VFalconEntity@@@@AAV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAV?$VuBin@VFalconEntity@@@@@std@@SAPAV?$VuBin@VFalconEntity@@@@AAV3@@Z PROC ; std::pointer_traits<VuBin<FalconEntity> *>::pointer_to, COMDAT

; 232  : 		{	// convert raw reference to pointer

	push	ebp
	mov	ebp, esp

; 233  : 		return (_STD addressof(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::addressof<VuBin<FalconEntity> >
	add	esp, 4

; 234  : 		}

	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAV?$VuBin@VFalconEntity@@@@@std@@SAPAV?$VuBin@VFalconEntity@@@@AAV3@@Z ENDP ; std::pointer_traits<VuBin<FalconEntity> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??$_Insert@V?$VuBin@VFalconEntity@@@@@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__V0$ = 12						; size = 4
??$_Insert@V?$VuBin@VFalconEntity@@@@@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Insert<VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 1086 : _VARIADIC_EXPAND_0X(_LIST_EMPLACE_INSERT, , , , )

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Buynode@V?$VuBin@VFalconEntity@@@@@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PAU21@0$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Buynode<VuBin<FalconEntity> >
	mov	DWORD PTR __Newnode$[ebp], eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXI@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Incsize
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Insert@V?$VuBin@VFalconEntity@@@@@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Insert<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z PROC ; std::forward<VuBin<FalconEntity> >, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ENDP ; std::forward<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 124  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>

; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z PROC ; operator!=<FalconEntity>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ENDP ; operator!=<FalconEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z PROC ; operator!=<FlightClass>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z ENDP ; operator!=<FlightClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?9VSquadronClass@@@@YA_NPBXABV?$VuBin@VSquadronClass@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?9VSquadronClass@@@@YA_NPBXABV?$VuBin@VSquadronClass@@@@@Z PROC ; operator!=<SquadronClass>, COMDAT

; 74   : template <class E> bool operator!=(const void* le, const VuBin<E> &re){ return ((void*)re.get()) != le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	cmp	eax, DWORD PTR _le$[ebp]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9VSquadronClass@@@@YA_NPBXABV?$VuBin@VSquadronClass@@@@@Z ENDP ; operator!=<SquadronClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??$?8VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_le$ = 8						; size = 4
_re$ = 12						; size = 4
??$?8VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z PROC ; operator==<FalconEntity>, COMDAT

; 72   : template <class E> bool operator==(const void* le, const VuBin<E> &re){ return ((void*)re.get()) == le; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	ecx, DWORD PTR _re$[ebp]
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	cmp	eax, DWORD PTR _le$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ENDP ; operator==<FalconEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++, COMDAT
; _this$ = ecx

; 372  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 373  : 		++(*(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++

; 374  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 375  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->, COMDAT
; _this$ = ecx

; 367  : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 368  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAV?$VuBin@VFalconEntity@@@@@std@@SAPAV?$VuBin@VFalconEntity@@@@AAV3@@Z ; std::pointer_traits<VuBin<FalconEntity> *>::pointer_to
	add	esp, 4

; 369  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VFalconEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VFalconEntity@@@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 362  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 		return ((reference)**(_Mybase *)this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*

; 364  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEAAV?$VuBin@VFalconEntity@@@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 345  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >

; 346  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 339  : 	_List_iterator()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >

; 340  : 		{	// construct with null node
; 341  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=, COMDAT
; _this$ = ecx

; 302  : 		{	// test for iterator inequality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 303  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 304  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv75 = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator==, COMDAT
; _this$ = ecx

; 284  : 		{	// test for iterator equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 285  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 286  : 		if (this->_Getcont() == 0
; 287  : 			|| this->_Getcont() != _Right._Getcont())
; 288  : 			{	// report error
; 289  : 			_DEBUG_ERROR("list iterators incompatible");
; 290  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 291  : 			}
; 292  : 
; 293  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 294  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 295  : 			&& this->_Getcont() == _Right._Getcont());
; 296  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 297  : 
; 298  : 		return (this->_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv75[ebp]

; 299  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++, COMDAT
; _this$ = ecx

; 245  : 		{	// postincrement

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 		_Myiter _Tmp = *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 247  : 		++*this;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++

; 248  : 		return (_Tmp);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 249  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++, COMDAT
; _this$ = ecx

; 224  : 		{	// preincrement

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 226  : 		if (this->_Getcont() == 0
; 227  : 			|| this->_Ptr == 0
; 228  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 229  : 			{	// report error
; 230  : 			_DEBUG_ERROR("list iterator not incrementable");
; 231  : 			_SCL_SECURE_OUT_OF_RANGE;
; 232  : 			}
; 233  : 
; 234  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 235  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 236  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 237  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 238  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 239  : 
; 240  : 		this->_Ptr = _Mylist::_Nextnode(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 241  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 242  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*, COMDAT
; _this$ = ecx

; 204  : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 205  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 206  : 		if (this->_Getcont() == 0
; 207  : 			|| this->_Ptr == 0
; 208  : 			|| this->_Ptr == ((_Mylist *)this->_Getcont())->_Myhead)
; 209  : 			{	// report error
; 210  : 			_DEBUG_ERROR("list iterator not dereferencable");
; 211  : 			_SCL_SECURE_OUT_OF_RANGE;
; 212  : 			}
; 213  : 
; 214  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 215  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 216  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 217  : 			((_Mylist *)this->_Getcont())->_Myhead);
; 218  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 219  : 
; 220  : 		return (_Mylist::_Myval(this->_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
	add	esp, 4

; 221  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 187  : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>

; 188  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 182  : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>

; 183  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 95   : 		{	// return node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 		return (_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 97   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??C?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBV?$VuBin@VFalconEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBV?$VuBin@VFalconEntity@@@@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator->, COMDAT
; _this$ = ecx

; 54   : 		{	// return pointer to class object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PBV?$VuBin@VFalconEntity@@@@@std@@SAPBV?$VuBin@VFalconEntity@@@@ABV3@@Z ; std::pointer_traits<VuBin<FalconEntity> const *>::pointer_to
	add	esp, 4

; 56   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBV?$VuBin@VFalconEntity@@@@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 49   : 		{	// return designated value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 		return (_Mylist::_Myval(_Ptr));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
	add	esp, 4

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABV?$VuBin@VFalconEntity@@@@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 45   : 		this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 46   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetOwner@CampBaseClass@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CampBaseClass@@QAEEXZ PROC			; CampBaseClass::GetOwner, COMDAT
; _this$ = ecx

; 241  : 	Control GetOwner (void)										{	return owner; }			// Old form

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+154]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CampBaseClass@@QAEEXZ ENDP			; CampBaseClass::GetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFalconSessionEntity@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFalconSessionEntity@@UAEPAXI@Z PROC			; FalconSessionEntity::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FalconSessionEntity@@UAE@XZ		; FalconSessionEntity::~FalconSessionEntity
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFalconSessionEntity@@UAEPAXI@Z ENDP			; FalconSessionEntity::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 4
_e$4 = -12						; size = 4
_this$ = -8						; size = 4
_it$5 = -4						; size = 4
_entity$ = 8						; size = 4
?HasFineInterest@FalconSessionEntity@@QBE_NPBVFalconEntity@@@Z PROC ; FalconSessionEntity::HasFineInterest
; _this$ = ecx

; 906  : bool FalconSessionEntity::HasFineInterest(const FalconEntity *entity) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 907  : 	for (FalconEntityList::const_iterator it = fineInterestList.begin();it!=fineInterestList.end();++it){

	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
	jmp	SHORT $LN4@HasFineInt
$LN3@HasFineInt:
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
$LN4@HasFineInt:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HasFineInt

; 908  : 		FalconEntity *e = it->get();

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??C?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPBV?$VuBin@VFalconEntity@@@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	DWORD PTR _e$4[ebp], eax

; 909  : 		if (entity->Id() == e->Id()){

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$4[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@HasFineInt

; 910  : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@HasFineInt
$LN1@HasFineInt:

; 911  : 		}
; 912  : 	}

	jmp	SHORT $LN3@HasFineInt
$LN2@HasFineInt:

; 913  : 	return false;

	xor	al, al
$LN5@HasFineInt:

; 914  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasFineInterest@FalconSessionEntity@@QBE_NPBVFalconEntity@@@Z ENDP ; FalconSessionEntity::HasFineInterest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_silent$ = 8						; size = 1
?ClearFineInterest@FalconSessionEntity@@QAEX_N@Z PROC	; FalconSessionEntity::ClearFineInterest
; _this$ = ecx

; 899  : void FalconSessionEntity::ClearFineInterest(bool silent){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 900  : 	fineInterestList.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear

; 901  : 	if (!silent){ SetDirty(); }

	movzx	eax, BYTE PTR _silent$[ebp]
	test	eax, eax
	jne	SHORT $LN2@ClearFineI
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN2@ClearFineI:

; 902  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ClearFineInterest@FalconSessionEntity@@QAEX_N@Z ENDP	; FalconSessionEntity::ClearFineInterest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -40						; size = 8
$T2 = -32						; size = 8
$T3 = -24						; size = 4
$T4 = -20						; size = 4
$T5 = -16						; size = 4
_e$6 = -12						; size = 4
_this$ = -8						; size = 4
_it$7 = -4						; size = 4
_entity$ = 8						; size = 4
_silent$ = 12						; size = 1
?RemoveFromFineInterest@FalconSessionEntity@@QAE_NPBVFalconEntity@@_N@Z PROC ; FalconSessionEntity::RemoveFromFineInterest
; _this$ = ecx

; 886  : bool FalconSessionEntity::RemoveFromFineInterest(const FalconEntity *entity, bool silent){

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 	for (FalconEntityList::iterator it = fineInterestList.begin();it!=fineInterestList.end();++it){

	lea	eax, DWORD PTR _it$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
	jmp	SHORT $LN5@RemoveFrom
$LN4@RemoveFrom:
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
$LN5@RemoveFrom:
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$7[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@RemoveFrom

; 888  : 		FalconEntity *e = it->get();

	lea	ecx, DWORD PTR _it$7[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	DWORD PTR _e$6[ebp], eax

; 889  : 		if (entity->Id() == e->Id()){

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _e$6[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _entity$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@RemoveFrom

; 890  : 			fineInterestList.erase(it);

	mov	eax, DWORD PTR _it$7[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?erase@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::erase

; 891  : 			if (!silent){ SetDirty(); }

	movzx	eax, BYTE PTR _silent$[ebp]
	test	eax, eax
	jne	SHORT $LN1@RemoveFrom
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN1@RemoveFrom:

; 892  : 			return true;

	mov	al, 1
	jmp	SHORT $LN6@RemoveFrom
$LN2@RemoveFrom:

; 893  : 		}
; 894  : 	}

	jmp	$LN4@RemoveFrom
$LN3@RemoveFrom:

; 895  : 	return false;

	xor	al, al
$LN6@RemoveFrom:

; 896  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveFromFineInterest@FalconSessionEntity@@QAE_NPBVFalconEntity@@_N@Z ENDP ; FalconSessionEntity::RemoveFromFineInterest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv85 = -24						; size = 4
tv86 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entity$ = 8						; size = 4
_silent$ = 12						; size = 1
?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z PROC ; FalconSessionEntity::AddToFineInterest
; _this$ = ecx

; 876  : bool FalconSessionEntity::AddToFineInterest(FalconEntity *entity, bool silent){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 877  : 	if ((entity == NULL) || (fineInterestList.size() == FALCSESS_MAX_FINE_INTEREST)){

	cmp	DWORD PTR _entity$[ebp], 0
	je	SHORT $LN2@AddToFineI
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size
	cmp	eax, 5
	jne	SHORT $LN3@AddToFineI
$LN2@AddToFineI:

; 878  : 		return false;

	xor	al, al
	jmp	SHORT $LN4@AddToFineI
$LN3@AddToFineI:

; 879  : 	}
; 880  : 	fineInterestList.push_back(FalconEntityBin(entity));

	mov	eax, DWORD PTR _entity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ; VuBin<FalconEntity>::VuBin<FalconEntity>
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?push_back@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEX$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>

; 881  : 	if (!silent){ SetDirty(); }

	movzx	eax, BYTE PTR _silent$[ebp]
	test	eax, eax
	jne	SHORT $LN1@AddToFineI
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty
$LN1@AddToFineI:

; 882  : 	return true;

	mov	al, 1
$LN4@AddToFineI:

; 883  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
__ehhandler$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z ENDP ; FalconSessionEntity::AddToFineInterest
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -56						; size = 8
$T2 = -48						; size = 8
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv444 = -32						; size = 4
tv426 = -28						; size = 4
tv403 = -24						; size = 4
_it$ = -20						; size = 4
_size$ = -16						; size = 4
_tmpSess$ = -12						; size = 4
_this$ = -8						; size = 4
_dirty$ = -4						; size = 2
_event$ = 8						; size = 4
?Handle@FalconSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z PROC ; FalconSessionEntity::Handle
; _this$ = ecx

; 680  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 681  : 	FalconSessionEntity* tmpSess = (FalconSessionEntity*)(event->expandedData_.get());

	mov	ecx, DWORD PTR _event$[ebp]
	add	ecx, 48					; 00000030H
	call	?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ; VuBin<VuEntity>::get
	mov	DWORD PTR _tmpSess$[ebp], eax

; 682  : 	short	dirty=0;

	xor	eax, eax
	mov	WORD PTR _dirty$[ebp], ax

; 683  : 	unsigned int size;
; 684  : 
; 685  : 	if (IsLocal()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@Handle

; 686  : 		return 0;

	xor	eax, eax
	jmp	$LN21@Handle
$LN20@Handle:

; 687  : 	}
; 688  : 
; 689  : 	// Copy in new data
; 690  : 	if (!name || strcmp(name,tmpSess->name) != 0){

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 416				; 000001a0H
	je	SHORT $LN18@Handle
	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@Handle
$LN18@Handle:

; 691  : 		dirty |= 0x0001;

	movsx	edx, WORD PTR _dirty$[ebp]
	or	edx, 1
	mov	WORD PTR _dirty$[ebp], dx

; 692  : 		size = _tcslen(tmpSess->name);

	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax

; 693  : 		/*if (name)
; 694  : 		  delete name;
; 695  : 		  name = new _TCHAR[size+1];*/
; 696  : 		memcpy (name, tmpSess->name, size);

	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tmpSess$[ebp]
	add	edx, 416				; 000001a0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 697  : 		name[size]=name[_NAME_LEN_] = 0;

	mov	ecx, 1
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+416], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	BYTE PTR [eax+416], 0
$LN19@Handle:

; 698  : 	}
; 699  : 	if (!callSign || strcmp(callSign,tmpSess->callSign) != 0){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 437				; 000001b5H
	je	SHORT $LN16@Handle
	mov	edx, DWORD PTR _tmpSess$[ebp]
	add	edx, 437				; 000001b5H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN17@Handle
$LN16@Handle:

; 700  : 		dirty |= 0x0002;

	movsx	ecx, WORD PTR _dirty$[ebp]
	or	ecx, 2
	mov	WORD PTR _dirty$[ebp], cx

; 701  : 		size = _tcslen(tmpSess->callSign);

	mov	edx, DWORD PTR _tmpSess$[ebp]
	add	edx, 437				; 000001b5H
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax

; 702  : 		/*if (callSign)
; 703  : 		  delete callSign;
; 704  : 		  callSign = new _TCHAR[size+1];*/
; 705  : 		memcpy (callSign, tmpSess->callSign, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 437				; 000001b5H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 437				; 000001b5H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 706  : 		callSign[_CALLSIGN_LEN_] = callSign[size]=0;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	BYTE PTR [eax+437], 0
	mov	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+437], 0
$LN17@Handle:

; 707  : 	}
; 708  : 
; 709  : 	AceFactor = tmpSess->AceFactor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	mov	edx, DWORD PTR [ecx+488]
	mov	DWORD PTR [eax+488], edx

; 710  : 	initAceFactor = tmpSess->initAceFactor;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	mov	edx, DWORD PTR [ecx+492]
	mov	DWORD PTR [eax+492], edx

; 711  : 	voiceID = tmpSess->voiceID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	mov	dl, BYTE PTR [ecx+522]
	mov	BYTE PTR [eax+522], dl

; 712  : 	rating = tmpSess->rating;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	mov	dl, BYTE PTR [ecx+521]
	mov	BYTE PTR [eax+521], dl

; 713  : 
; 714  : 	// KCK: This will ALWAYS dirty the session if the player is in
; 715  : 	// a flight in another game.. Probably not good. If he's in 
; 716  : 	// a flight in this game, the playerFlightPtr should dirty the
; 717  : 	// session just dandily..
; 718  : 	//	if(playerFlight != tmpSess->playerFlight)
; 719  : 	//		dirty |= 0x0004;
; 720  : 	if(country != tmpSess->country){

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+510]
	mov	edx, DWORD PTR _tmpSess$[ebp]
	movzx	eax, BYTE PTR [edx+510]
	cmp	ecx, eax
	je	SHORT $LN15@Handle

; 721  : 		dirty |= 0x0008;

	movsx	ecx, WORD PTR _dirty$[ebp]
	or	ecx, 8
	mov	WORD PTR _dirty$[ebp], cx
$LN15@Handle:

; 722  : 	}
; 723  : 	if(aircraftNum != tmpSess->aircraftNum){

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+511]
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	movzx	edx, BYTE PTR [ecx+511]
	cmp	eax, edx
	je	SHORT $LN14@Handle

; 724  : 		dirty |= 0x0010; 

	movsx	eax, WORD PTR _dirty$[ebp]
	or	eax, 16					; 00000010H
	mov	WORD PTR _dirty$[ebp], ax
$LN14@Handle:

; 725  : 	}
; 726  : 	if(pilotSlot != tmpSess->pilotSlot){

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+512]
	mov	eax, DWORD PTR _tmpSess$[ebp]
	movzx	ecx, BYTE PTR [eax+512]
	cmp	edx, ecx
	je	SHORT $LN13@Handle

; 727  : 		dirty |= 0x0020;

	movsx	edx, WORD PTR _dirty$[ebp]
	or	edx, 32					; 00000020H
	mov	WORD PTR _dirty$[ebp], dx
$LN13@Handle:

; 728  : 	}
; 729  : 
; 730  : 	tmpSess->playerSquadronPtr.reset((Squadron) vuDatabase->Find(tmpSess->playerSquadron));

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR [eax+452]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	push	eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 476				; 000001dcH
	call	?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ; VuBin<SquadronClass>::reset

; 731  : 	tmpSess->playerFlightPtr.reset((Flight) vuDatabase->Find(tmpSess->playerFlight));

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	push	eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 480				; 000001e0H
	call	?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ; VuBin<FlightClass>::reset

; 732  : 	tmpSess->playerEntityPtr.reset(static_cast<FalconEntity*>(vuDatabase->Find(tmpSess->playerEntity)));

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+472]
	push	ecx
	mov	edx, DWORD PTR [eax+468]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	push	eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 484				; 000001e4H
	call	?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ; VuBin<FalconEntity>::reset

; 733  : 
; 734  : 	if(playerSquadronPtr != tmpSess->playerSquadronPtr){

	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 476				; 000001dcH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??9?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z ; VuBin<SquadronClass>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Handle

; 735  : 		dirty |= 0x0040;

	movsx	edx, WORD PTR _dirty$[ebp]
	or	edx, 64					; 00000040H
	mov	WORD PTR _dirty$[ebp], dx

; 736  : 		SetPlayerSquadron(tmpSess->playerSquadronPtr.get());

	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron
$LN12@Handle:

; 737  : 	}
; 738  : 
; 739  : 	if (playerFlightPtr != tmpSess->playerFlightPtr){

	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 480				; 000001e0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??9?$VuBin@VFlightClass@@@@QBE_NABV0@@Z	; VuBin<FlightClass>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Handle

; 740  : 		dirty |= 0x0080;

	movsx	edx, WORD PTR _dirty$[ebp]
	or	edx, 128				; 00000080H
	mov	WORD PTR _dirty$[ebp], dx

; 741  : 		SetPlayerFlight(tmpSess->playerFlightPtr.get());

	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight
$LN11@Handle:

; 742  : 	}
; 743  : 
; 744  : 	if (playerEntityPtr != tmpSess->playerEntityPtr){

	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 484				; 000001e4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??9?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z ; VuBin<FalconEntity>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@Handle

; 745  : 		dirty |= 0x0100;

	movsx	edx, WORD PTR _dirty$[ebp]
	or	edx, 256				; 00000100H
	mov	WORD PTR _dirty$[ebp], dx

; 746  : 		SetPlayerEntity(tmpSess->playerEntityPtr.get());

	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 484				; 000001e4H
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity
$LN10@Handle:

; 747  : 	}
; 748  : 
; 749  : 	SetPlayerSquadronID(tmpSess->playerSquadron);

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR [eax+452]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerSquadronID

; 750  : 	SetPlayerFlightID(tmpSess->playerFlight);

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlightID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerFlightID

; 751  : 	SetPlayerEntityID(tmpSess->playerEntity);

	mov	eax, DWORD PTR _tmpSess$[ebp]
	mov	ecx, DWORD PTR [eax+472]
	push	ecx
	mov	edx, DWORD PTR [eax+468]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntityID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerEntityID

; 752  : 
; 753  : 	tmpSess->playerSquadronPtr.reset();// = NULL;				// Clear temporary pointers

	push	0
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 476				; 000001dcH
	call	?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ; VuBin<SquadronClass>::reset

; 754  : 	tmpSess->playerFlightPtr.reset();// = NULL;

	push	0
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 480				; 000001e0H
	call	?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ; VuBin<FlightClass>::reset

; 755  : 	tmpSess->playerEntityPtr.reset();// = NULL;

	push	0
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 484				; 000001e4H
	call	?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ; VuBin<FalconEntity>::reset

; 756  : 
; 757  : 	memcpy(&country, &tmpSess->country, sizeof (uchar));		

	push	1
	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 510				; 000001feH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 510				; 000001feH
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 758  : 	memcpy(&aircraftNum, &tmpSess->aircraftNum, sizeof (uchar));	

	push	1
	mov	edx, DWORD PTR _tmpSess$[ebp]
	add	edx, 511				; 000001ffH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 511				; 000001ffH
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 759  : 	memcpy(&pilotSlot, &tmpSess->pilotSlot, sizeof (uchar));

	push	1
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 512				; 00000200H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 512				; 00000200H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 760  : 	memcpy(&flyState, &tmpSess->flyState, sizeof (uchar));

	push	1
	mov	eax, DWORD PTR _tmpSess$[ebp]
	add	eax, 513				; 00000201H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 513				; 00000201H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 761  : 	memcpy(kills,tmpSess->kills,sizeof(kills));

	push	8
	mov	edx, DWORD PTR _tmpSess$[ebp]
	add	edx, 500				; 000001f4H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 500				; 000001f4H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 762  : 
; 763  : 	// Tell the flight to hold short if this guy is coming into the sim.
; 764  : 	// sfr: taking this out. This prevents flights from taking off
; 765  : 	//if (flyState == FLYSTATE_LOADING && playerFlightPtr && playerFlightPtr->IsLocal())
; 766  : 	//	playerFlightPtr->SetFalcFlag(FEC_HOLDSHORT);
; 767  : 
; 768  : 	memcpy(&reqCompression, &tmpSess->reqCompression, sizeof (short));

	push	2
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 514				; 00000202H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 514				; 00000202H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 769  : 	if (tmpSess->Game() && (Game() != tmpSess->Game())){

	mov	ecx, DWORD PTR _tmpSess$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN9@Handle
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esi, eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	esi, eax
	je	SHORT $LN9@Handle

; 770  : 		JoinGame(tmpSess->Game());

	mov	ecx, DWORD PTR _tmpSess$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?JoinGame@VuSessionEntity@@QAEHPAVVuGameEntity@@@Z ; VuSessionEntity::JoinGame
$LN9@Handle:

; 771  : 	}
; 772  : 
; 773  : 	//	MonoPrint("Got info for session: %s - team %d - #%d\n", name, country, reqCompression);
; 774  : 
; 775  : 	if (gUICommsQ && (dirty & 0x00ff) && Game()) {

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN8@Handle
	movsx	eax, WORD PTR _dirty$[ebp]
	and	eax, 255				; 000000ffH
	je	SHORT $LN8@Handle
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN8@Handle

; 776  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 777  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh

; 778  : 	}
; 779  : 	else {

	jmp	SHORT $LN7@Handle
$LN8@Handle:

; 780  : 		CheckForNewPlayer(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?CheckForNewPlayer@@YAXPAVFalconSessionEntity@@@Z ; CheckForNewPlayer
	add	esp, 4
$LN7@Handle:

; 781  : 	}
; 782  : 
; 783  : 	// KCK: if we're the host, check to see if Assigned aircraft is different than the one
; 784  : 	// the session thinks it has and correct any errors by sending an SendAircraftSlot message
; 785  : 	if (FalconLocalGame && Game() == FalconLocalGame && FalconLocalGame->IsLocal()){

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN23@Handle
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv403[ebp], eax
	jmp	SHORT $LN24@Handle
$LN23@Handle:
	mov	DWORD PTR tv403[ebp], 0
$LN24@Handle:
	cmp	DWORD PTR tv403[ebp], 0
	je	$LN5@Handle
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@Handle
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv426[ebp], eax
	jmp	SHORT $LN26@Handle
$LN25@Handle:
	mov	DWORD PTR tv426[ebp], 0
$LN26@Handle:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	cmp	eax, DWORD PTR tv426[ebp]
	jne	$LN5@Handle
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN27@Handle
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv444[ebp], eax
	jmp	SHORT $LN28@Handle
$LN27@Handle:
	mov	DWORD PTR tv444[ebp], 0
$LN28@Handle:
	mov	ecx, DWORD PTR tv444[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	$LN5@Handle

; 786  : 		if (
; 787  : 			assignedAircraftNum != aircraftNum || 
; 788  : 			assignedPilotSlot != pilotSlot || 
; 789  : 			assignedPlayerFlightPtr != playerFlightPtr
; 790  : 		){

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+523]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+511]
	cmp	ecx, eax
	jne	SHORT $LN4@Handle
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+524]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+512]
	cmp	edx, ecx
	jne	SHORT $LN4@Handle
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 480				; 000001e0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	push	ecx
	call	??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z ; operator!=<FlightClass>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@Handle
$LN4@Handle:

; 791  : 			//Flight					flight = GetAssignedPlayerFlight();
; 792  : 			MonoPrint ("Invalid Session Info %d:%d %d:%d %08x:%08x\n",
; 793  : 						assignedAircraftNum, aircraftNum,
; 794  : 						assignedPilotSlot, pilotSlot,
; 795  : 						assignedPlayerFlightPtr, playerFlightPtr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+480]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+528]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+512]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+524]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+511]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+523]
	push	edx
	push	OFFSET ??_C@_0CM@MMKBEKHO@Invalid?5Session?5Info?5?$CFd?3?$CFd?5?$CFd?3?$CFd@
	call	_MonoPrint
	add	esp, 28					; 0000001cH
$LN5@Handle:

; 796  : 			/*			
; 797  : 						if (flight)
; 798  : 						{
; 799  : 						msg = new UI_SendAircraftSlot(flight->Id(), FalconLocalGame);
; 800  : 						msg->dataBlock.team = flight->GetTeam();
; 801  : 						}
; 802  : 						else
; 803  : 						{
; 804  : 						msg = new UI_SendAircraftSlot(FalconNullId, FalconLocalGame);
; 805  : 						msg->dataBlock.team = 255;
; 806  : 						}
; 807  : 						msg->dataBlock.requesting_session = Id();
; 808  : 						msg->dataBlock.host_id = FalconLocalSession->Id();
; 809  : 						msg->dataBlock.game_id = FalconLocalGame->Id();
; 810  : 						msg->dataBlock.game_type = FalconLocalGame->GetGameType();
; 811  : 						msg->dataBlock.got_pilot_slot = assignedPilotSlot;
; 812  : 						msg->dataBlock.got_slot = assignedAircraftNum;
; 813  : 						msg->dataBlock.got_pilot_skill = 0;
; 814  : 						if (msg->dataBlock.got_pilot_slot != NO_PILOT)
; 815  : 						msg->dataBlock.result = REQUEST_RESULT_SUCCESS;
; 816  : 						else
; 817  : 						msg->dataBlock.result = REQUEST_RESULT_DENIED;
; 818  : 			//FalconSendMessage(msg,TRUE); - may be causing a drop to flyby cam - RH
; 819  : 			 */
; 820  : 		}
; 821  : 	}	
; 822  : 
; 823  : #if FINE_INT
; 824  : 	// insert each entity in ours
; 825  : 	fineInterestList.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear

; 826  : 	FalconEntityList::iterator it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >

; 827  : 	for (it = tmpSess->fineInterestList.begin(); it != tmpSess->fineInterestList.end(); ++it){

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 532				; 00000214H
	call	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN3@Handle
$LN2@Handle:
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
$LN3@Handle:
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _tmpSess$[ebp]
	add	ecx, 532				; 00000214H
	call	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Handle

; 828  : 		AddToFineInterest(it->get());

	push	1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z ; FalconSessionEntity::AddToFineInterest

; 829  : 	}

	jmp	SHORT $LN2@Handle
$LN1@Handle:

; 830  : #endif
; 831  : 
; 832  : 
; 833  : 	return (VuSessionEntity::Handle(event));

	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Handle@VuSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z ; VuSessionEntity::Handle
$LN21@Handle:

; 834  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?Handle@FalconSessionEntity@@UAEHPAVVuFullUpdateEvent@@@Z ENDP ; FalconSessionEntity::Handle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_dsqu$1 = -108						; size = 4
_rsqu$2 = -104						; size = 4
tv292 = -100						; size = 4
tv308 = -96						; size = 4
tv287 = -92						; size = 4
tv310 = -88						; size = 4
tv283 = -84						; size = 4
tv279 = -80						; size = 4
tv274 = -76						; size = 4
tv306 = -72						; size = 4
tv270 = -68						; size = 4
tv266 = -64						; size = 4
tv302 = -60						; size = 4
tv261 = -56						; size = 4
tv304 = -52						; size = 4
tv257 = -48						; size = 4
tv253 = -44						; size = 4
tv248 = -40						; size = 4
tv300 = -36						; size = 4
tv244 = -32						; size = 4
_ydist$3 = -28						; size = 4
_xdist$4 = -24						; size = 4
_range$5 = -20						; size = 4
_ent_bubble_range$ = -16				; size = 4
_this$ = -12						; size = 4
_i$ = -8						; size = 4
_camera$6 = -4						; size = 4
_ent$ = 8						; size = 4
_bubble_multiplier$ = 12				; size = 4
?InSessionBubble@FalconSessionEntity@@QAEHPAVFalconEntity@@M@Z PROC ; FalconSessionEntity::InSessionBubble
; _this$ = ecx

; 630  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	DWORD PTR _this$[ebp], ecx

; 631  : 	float	ent_bubble_range;
; 632  : 	int		i;
; 633  : 
; 634  : 	if (CameraCount() == 0 || bubble_multiplier < 0.01F){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CameraCount@VuSessionEntity@@QBEHXZ	; VuSessionEntity::CameraCount
	test	eax, eax
	je	SHORT $LN10@InSessionB
	movss	xmm0, DWORD PTR __real@3c23d70a
	comiss	xmm0, DWORD PTR _bubble_multiplier$[ebp]
	jbe	SHORT $LN11@InSessionB
$LN10@InSessionB:

; 635  : 		// No camera - so we have no bubble, or a rediculously small multiplier
; 636  : 		return FALSE;

	xor	eax, eax
	jmp	$LN12@InSessionB
$LN11@InSessionB:

; 637  : 	}
; 638  : 
; 639  : 	// Get the entity's bubble range
; 640  : 	if (ent->IsObjective()){

	mov	eax, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN9@InSessionB

; 641  : 		ent_bubble_range = ent->EntityType()->bubbleRange_;			// We don't adjust objective's bubble

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR _ent_bubble_range$[ebp], xmm0
	jmp	SHORT $LN6@InSessionB
$LN9@InSessionB:

; 642  : 	}
; 643  : 	else if (ent->IsFlight() && gGameType == game_Dogfight){

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	je	SHORT $LN7@InSessionB
	cmp	DWORD PTR ?gGameType@@3HA, 2		; gGameType
	jne	SHORT $LN7@InSessionB

; 644  : 		// KCK HACK: Basically, we want to always keep flights in our bubble in dogfight
; 645  : 		// sfr: is this necessary??
; 646  : 		return TRUE;

	mov	eax, 1
	jmp	$LN12@InSessionB

; 647  : 	}
; 648  : 	else {

	jmp	SHORT $LN6@InSessionB
$LN7@InSessionB:

; 649  : 		ent_bubble_range = ent->EntityType()->bubbleRange_ * bubbleRatio;

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	mulss	xmm0, DWORD PTR [ecx+496]
	movss	DWORD PTR _ent_bubble_range$[ebp], xmm0
$LN6@InSessionB:

; 650  : 	}
; 651  : 
; 652  : 	for (i=0; i < CameraCount(); i++){

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@InSessionB
$LN4@InSessionB:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@InSessionB:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CameraCount@VuSessionEntity@@QBEHXZ	; VuSessionEntity::CameraCount
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN3@InSessionB

; 653  : 		VuEntity *camera = GetCameraEntity(i);

	movzx	eax, BYTE PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCameraEntity@VuSessionEntity@@QBEPAVVuEntity@@E@Z ; VuSessionEntity::GetCameraEntity
	mov	DWORD PTR _camera$6[ebp], eax

; 654  : 		if (camera){

	cmp	DWORD PTR _camera$6[ebp], 0
	je	$LN1@InSessionB

; 655  : 			float xdist,ydist,dsqu;
; 656  : 			float rsqu, range = ent_bubble_range * camera->EntityType()->fineUpdateMultiplier_ * bubble_multiplier;

	mov	ecx, DWORD PTR _camera$6[ebp]
	call	?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ; VuEntity::EntityType
	movss	xmm0, DWORD PTR _ent_bubble_range$[ebp]
	mulss	xmm0, DWORD PTR [eax+32]
	mulss	xmm0, DWORD PTR _bubble_multiplier$[ebp]
	movss	DWORD PTR _range$5[ebp], xmm0

; 657  : 			rsqu = range*range;

	movss	xmm0, DWORD PTR _range$5[ebp]
	mulss	xmm0, DWORD PTR _range$5[ebp]
	movss	DWORD PTR _rsqu$2[ebp], xmm0

; 658  : 			// KCK NOTE: Estimate distances in one second's time - Opposite vectors assume convergence
; 659  : 			xdist = (float)fabs(ent->XPos() - camera->XPos()) - (float)fabs(ent->XDelta() - camera->XDelta());

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv244[ebp]
	movss	xmm0, DWORD PTR tv244[ebp]
	mov	ecx, DWORD PTR _camera$6[ebp]
	movss	DWORD PTR tv300[ebp], xmm0
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv248[ebp]
	movss	xmm0, DWORD PTR tv300[ebp]
	subss	xmm0, DWORD PTR tv248[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv253[ebp]
	movss	xmm0, DWORD PTR tv253[ebp]
	mov	ecx, DWORD PTR _ent$[ebp]
	movss	DWORD PTR tv302[ebp], xmm0
	call	?XDelta@VuEntity@@QBEMXZ		; VuEntity::XDelta
	fstp	DWORD PTR tv257[ebp]
	movss	xmm0, DWORD PTR tv257[ebp]
	mov	ecx, DWORD PTR _camera$6[ebp]
	movss	DWORD PTR tv304[ebp], xmm0
	call	?XDelta@VuEntity@@QBEMXZ		; VuEntity::XDelta
	fstp	DWORD PTR tv261[ebp]
	movss	xmm0, DWORD PTR tv304[ebp]
	subss	xmm0, DWORD PTR tv261[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv266[ebp]
	movss	xmm0, DWORD PTR tv302[ebp]
	subss	xmm0, DWORD PTR tv266[ebp]
	movss	DWORD PTR _xdist$4[ebp], xmm0

; 660  : 			ydist = (float)fabs(ent->YPos() - camera->YPos()) - (float)fabs(ent->YDelta() - camera->YDelta());

	mov	ecx, DWORD PTR _ent$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv270[ebp]
	movss	xmm0, DWORD PTR tv270[ebp]
	mov	ecx, DWORD PTR _camera$6[ebp]
	movss	DWORD PTR tv306[ebp], xmm0
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv274[ebp]
	movss	xmm0, DWORD PTR tv306[ebp]
	subss	xmm0, DWORD PTR tv274[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv279[ebp]
	movss	xmm0, DWORD PTR tv279[ebp]
	mov	ecx, DWORD PTR _ent$[ebp]
	movss	DWORD PTR tv308[ebp], xmm0
	call	?YDelta@VuEntity@@QBEMXZ		; VuEntity::YDelta
	fstp	DWORD PTR tv283[ebp]
	movss	xmm0, DWORD PTR tv283[ebp]
	mov	ecx, DWORD PTR _camera$6[ebp]
	movss	DWORD PTR tv310[ebp], xmm0
	call	?YDelta@VuEntity@@QBEMXZ		; VuEntity::YDelta
	fstp	DWORD PTR tv287[ebp]
	movss	xmm0, DWORD PTR tv310[ebp]
	subss	xmm0, DWORD PTR tv287[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv292[ebp]
	movss	xmm0, DWORD PTR tv308[ebp]
	subss	xmm0, DWORD PTR tv292[ebp]
	movss	DWORD PTR _ydist$3[ebp], xmm0

; 661  : 			dsqu = (xdist*xdist) + (ydist*ydist);

	movss	xmm0, DWORD PTR _xdist$4[ebp]
	mulss	xmm0, DWORD PTR _xdist$4[ebp]
	movss	xmm1, DWORD PTR _ydist$3[ebp]
	mulss	xmm1, DWORD PTR _ydist$3[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _dsqu$1[ebp], xmm0

; 662  : 			if (dsqu < rsqu){

	movss	xmm0, DWORD PTR _rsqu$2[ebp]
	comiss	xmm0, DWORD PTR _dsqu$1[ebp]
	jbe	SHORT $LN1@InSessionB

; 663  : 				return TRUE;

	mov	eax, 1
	jmp	SHORT $LN12@InSessionB
$LN1@InSessionB:

; 664  : 			}
; 665  : 		}
; 666  : 	}

	jmp	$LN4@InSessionB
$LN3@InSessionB:

; 667  : 	return FALSE;

	xor	eax, eax
$LN12@InSessionB:

; 668  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?InSessionBubble@FalconSessionEntity@@QAEHPAVFalconEntity@@M@Z ENDP ; FalconSessionEntity::InSessionBubble
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
tv207 = -84						; size = 8
tv224 = -76						; size = 8
tv200 = -68						; size = 8
tv226 = -60						; size = 8
tv193 = -52						; size = 8
tv220 = -44						; size = 8
tv185 = -36						; size = 8
tv222 = -28						; size = 8
tv178 = -20						; size = 8
tv159 = -12						; size = 8
_this$ = -4						; size = 4
_opponent$ = 8						; size = 4
?SetAceFactorDeath@FalconSessionEntity@@QAEXM@Z PROC	; FalconSessionEntity::SetAceFactorDeath
; _this$ = ecx

; 560  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 561  : 	//	MonoPrint ("SetAceFactorDeath\n");
; 562  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 563  : 	/*	double Raw,temp;
; 564  : 		Raw = exp((double)AceFactor);
; 565  : 
; 566  : 		temp = AceFactor * (AceFactor - opponent);
; 567  : 
; 568  : 		Raw = Raw - ((temp>AceFactor)?temp:AceFactor);
; 569  : 		AceFactor = log(Raw);
; 570  : 
; 571  : #define ACE_DEATH(x,y) (log(exp(x) - (((x * (x - y))>x*0.5F)?(x * (x - y)):x*0.5F)))
; 572  : 	 */
; 573  : 
; 574  : 	//AceFactor = ACE_DEATH(((double)AceFactor),((double)opponent));
; 575  : 	AceFactor = (float)ACE_DEATH(((double)AceFactor), ACE_KILL(((double)opponent),((double)initAceFactor)));

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+488]
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm1, DWORD PTR [ecx+488]
	cvtss2sd xmm2, DWORD PTR _opponent$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm2
	movsd	QWORD PTR tv220[ebp], xmm0
	movsd	QWORD PTR tv222[ebp], xmm1
	call	_exp
	add	esp, 8
	fstp	QWORD PTR tv178[ebp]
	movsd	xmm0, QWORD PTR tv178[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm1, DWORD PTR [edx+492]
	addsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_log
	add	esp, 8
	fstp	QWORD PTR tv185[ebp]
	movsd	xmm0, QWORD PTR tv222[ebp]
	subsd	xmm0, QWORD PTR tv185[ebp]
	movsd	xmm1, QWORD PTR tv220[ebp]
	mulsd	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+488]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN4@SetAceFact
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+488]
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm1, DWORD PTR [edx+488]
	cvtss2sd xmm2, DWORD PTR _opponent$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm2
	movsd	QWORD PTR tv224[ebp], xmm0
	movsd	QWORD PTR tv226[ebp], xmm1
	call	_exp
	add	esp, 8
	fstp	QWORD PTR tv193[ebp]
	movsd	xmm0, QWORD PTR tv193[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm1, DWORD PTR [eax+492]
	addsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_log
	add	esp, 8
	fstp	QWORD PTR tv200[ebp]
	movsd	xmm0, QWORD PTR tv226[ebp]
	subsd	xmm0, QWORD PTR tv200[ebp]
	movsd	xmm1, QWORD PTR tv224[ebp]
	mulsd	xmm1, xmm0
	movsd	QWORD PTR tv159[ebp], xmm1
	jmp	SHORT $LN5@SetAceFact
$LN4@SetAceFact:
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+488]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	movsd	QWORD PTR tv159[ebp], xmm0
$LN5@SetAceFact:
	mov	edx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+488]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_exp
	add	esp, 8
	fstp	QWORD PTR tv207[ebp]
	movsd	xmm0, QWORD PTR tv207[ebp]
	subsd	xmm0, QWORD PTR tv159[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_log
	add	esp, 8
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+488]

; 576  : 
; 577  : 	if(AceFactor < 1.0f)

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [ecx+488]
	jbe	SHORT $LN1@SetAceFact

; 578  : 		AceFactor=1.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+488], xmm0
$LN1@SetAceFact:

; 579  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAceFactorDeath@FalconSessionEntity@@QAEXM@Z ENDP	; FalconSessionEntity::SetAceFactorDeath
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
tv90 = -12						; size = 8
_this$ = -4						; size = 4
_opponent$ = 8						; size = 4
?SetAceFactorKill@FalconSessionEntity@@QAEXM@Z PROC	; FalconSessionEntity::SetAceFactorKill
; _this$ = ecx

; 541  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 542  : 	//	MonoPrint ("SetAceFactorKill\n");
; 543  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 544  : 	/*	double Raw;
; 545  : 
; 546  : 		Raw = exp((double)AceFactor) + opponent;
; 547  : 
; 548  : 		AceFactor = log(Raw);
; 549  : 
; 550  : #define ACE_KILL(x,y) (log(exp(x) + y))
; 551  : 	 */
; 552  : 
; 553  : 	AceFactor = (float)ACE_KILL(((double)AceFactor),((double)opponent));

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+488]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_exp
	add	esp, 8
	fstp	QWORD PTR tv90[ebp]
	movsd	xmm0, QWORD PTR tv90[ebp]
	cvtss2sd xmm1, DWORD PTR _opponent$[ebp]
	addsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_log
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+488]

; 554  : 
; 555  : 	if(AceFactor < 1.0f)

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [edx+488]
	jbe	SHORT $LN1@SetAceFact

; 556  : 		AceFactor=1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+488], xmm0
$LN1@SetAceFact:

; 557  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAceFactorKill@FalconSessionEntity@@QAEXM@Z ENDP	; FalconSessionEntity::SetAceFactorKill
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_oldPlayerPtr$ = -8					; size = 4
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?SetAssignedPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z PROC ; FalconSessionEntity::SetAssignedPlayerFlight
; _this$ = ecx

; 428  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 429  : 	FlightClass *oldPlayerPtr;
; 430  : 
; 431  : 	if (assignedPlayerFlightPtr == ent)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+528]
	cmp	ecx, DWORD PTR _ent$[ebp]
	jne	SHORT $LN3@SetAssigne

; 432  : 	{
; 433  : 		return;

	jmp	SHORT $LN4@SetAssigne
$LN3@SetAssigne:

; 434  : 	}
; 435  : 
; 436  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 437  : 	//	MonoPrint ("SetAssignedPlayerFlight\n");
; 438  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 439  : 
; 440  : 	oldPlayerPtr = assignedPlayerFlightPtr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+528]
	mov	DWORD PTR _oldPlayerPtr$[ebp], eax

; 441  : 
; 442  : 	assignedPlayerFlightPtr = ent;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ent$[ebp]
	mov	DWORD PTR [ecx+528], edx

; 443  : 
; 444  : 	if (oldPlayerPtr)

	cmp	DWORD PTR _oldPlayerPtr$[ebp], 0
	je	SHORT $LN2@SetAssigne

; 445  : 	{
; 446  : 		VuDeReferenceEntity(oldPlayerPtr);

	mov	eax, DWORD PTR _oldPlayerPtr$[ebp]
	push	eax
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4
$LN2@SetAssigne:

; 447  : 	}
; 448  : 
; 449  : 	if (assignedPlayerFlightPtr)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+528], 0
	je	SHORT $LN1@SetAssigne

; 450  : 	{
; 451  : 		VuReferenceEntity(assignedPlayerFlightPtr);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+528]
	push	eax
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4
$LN1@SetAssigne:

; 452  : 	}
; 453  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN4@SetAssigne:

; 454  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAssignedPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ENDP ; FalconSessionEntity::SetAssignedPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ps$ = 8						; size = 1
?SetAssignedPilotSlot@FalconSessionEntity@@QAEXE@Z PROC	; FalconSessionEntity::SetAssignedPilotSlot
; _this$ = ecx

; 604  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 605  : 	//	MonoPrint ("SetAssignedPilotSlot\n");
; 606  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 607  : 	assignedPilotSlot = ps;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _ps$[ebp]
	mov	BYTE PTR [eax+524], cl

; 608  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAssignedPilotSlot@FalconSessionEntity@@QAEXE@Z ENDP	; FalconSessionEntity::SetAssignedPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_an$ = 8						; size = 1
?SetAssignedAircraftNum@FalconSessionEntity@@QAEXE@Z PROC ; FalconSessionEntity::SetAssignedAircraftNum
; _this$ = ecx

; 597  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 598  : 	//	MonoPrint ("SetAssignedAircraftNum\n");
; 599  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 600  : 	assignedAircraftNum = an;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _an$[ebp]
	mov	BYTE PTR [eax+523], cl

; 601  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAssignedAircraftNum@FalconSessionEntity@@QAEXE@Z ENDP ; FalconSessionEntity::SetAssignedAircraftNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 2
?SetReqCompression@FalconSessionEntity@@QAEXF@Z PROC	; FalconSessionEntity::SetReqCompression
; _this$ = ecx

; 616  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 617  : 	if (reqCompression != rc)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+514]
	movsx	edx, WORD PTR _rc$[ebp]
	cmp	ecx, edx
	je	SHORT $LN2@SetReqComp

; 618  : 	{
; 619  : 		reqCompression = rc; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _rc$[ebp]
	mov	WORD PTR [eax+514], cx

; 620  : 		DoFullUpdate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFullUpdate@FalconSessionEntity@@QAEXXZ ; FalconSessionEntity::DoFullUpdate

; 621  : 		ResyncTimes();

	call	?ResyncTimes@@YAXXZ			; ResyncTimes
$LN2@SetReqComp:

; 622  : 	}
; 623  : }	

	mov	esp, ebp
	pop	ebp
	ret	4
?SetReqCompression@FalconSessionEntity@@QAEXF@Z ENDP	; FalconSessionEntity::SetReqCompression
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fs$ = 8						; size = 1
?SetFlyState@FalconSessionEntity@@QAEXE@Z PROC		; FalconSessionEntity::SetFlyState
; _this$ = ecx

; 610  : void FalconSessionEntity::SetFlyState(uchar fs){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 611  : 	flyState = fs;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _fs$[ebp]
	mov	BYTE PTR [eax+513], cl

; 612  : 	SetDirty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 613  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlyState@FalconSessionEntity@@QAEXE@Z ENDP		; FalconSessionEntity::SetFlyState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ps$ = 8						; size = 1
?SetPilotSlot@FalconSessionEntity@@QAEXE@Z PROC		; FalconSessionEntity::SetPilotSlot
; _this$ = ecx

; 589  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 590  : 	//	MonoPrint ("SetPilotSlot\n");
; 591  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 592  : 	pilotSlot = ps;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _ps$[ebp]
	mov	BYTE PTR [eax+512], cl

; 593  : 
; 594  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPilotSlot@FalconSessionEntity@@QAEXE@Z ENDP		; FalconSessionEntity::SetPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_an$ = 8						; size = 1
?SetAircraftNum@FalconSessionEntity@@QAEXE@Z PROC	; FalconSessionEntity::SetAircraftNum
; _this$ = ecx

; 582  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 583  : 	//	MonoPrint ("SetAircraftNum\n");
; 584  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 585  : 	aircraftNum = an;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _an$[ebp]
	mov	BYTE PTR [eax+511], cl

; 586  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAircraftNum@FalconSessionEntity@@QAEXE@Z ENDP	; FalconSessionEntity::SetAircraftNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
$T2 = -12						; size = 8
_this$ = -4						; size = 4
_c$ = 8							; size = 1
?SetCountry@FalconSessionEntity@@QAEXE@Z PROC		; FalconSessionEntity::SetCountry
; _this$ = ecx

; 514  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 	//	MonoPrint ("SetCountry\n");
; 516  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 517  : 	country = c;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax+510], cl

; 518  : 	ShiAssert(country > 0);
; 519  : 	if (gUICommsQ && Game())

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN2@SetCountry
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN2@SetCountry

; 520  : 	{
; 521  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 522  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh
$LN2@SetCountry:

; 523  : 	}
; 524  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetCountry@FalconSessionEntity@@QAEXE@Z ENDP		; FalconSessionEntity::SetCountry
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_af$ = 8						; size = 4
?SetInitAceFactor@FalconSessionEntity@@QAEXM@Z PROC	; FalconSessionEntity::SetInitAceFactor
; _this$ = ecx

; 534  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 535  : 	//	MonoPrint ("SetInitAceFactor\n");
; 536  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 537  : 	initAceFactor = af;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _af$[ebp]
	movss	DWORD PTR [eax+492], xmm0

; 538  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetInitAceFactor@FalconSessionEntity@@QAEXM@Z ENDP	; FalconSessionEntity::SetInitAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_af$ = 8						; size = 4
?SetAceFactor@FalconSessionEntity@@QAEXM@Z PROC		; FalconSessionEntity::SetAceFactor
; _this$ = ecx

; 527  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 528  : 	//	MonoPrint ("SetAceFactor\n");
; 529  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 530  : 	AceFactor = af;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _af$[ebp]
	movss	DWORD PTR [eax+488], xmm0

; 531  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAceFactor@FalconSessionEntity@@QAEXM@Z ENDP		; FalconSessionEntity::SetAceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_msg$2 = -44						; size = 4
$T3 = -40						; size = 4
_squadron_ptr$ = -36					; size = 4
tv139 = -32						; size = 4
$T4 = -28						; size = 4
_flight_ptr$ = -24					; size = 4
_entity_ptr$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?UpdatePlayer@FalconSessionEntity@@QAEXXZ PROC		; FalconSessionEntity::UpdatePlayer
; _this$ = ecx

; 837  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdatePlayer@FalconSessionEntity@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 838  : 	SquadronClass *squadron_ptr;
; 839  : 	FlightClass *flight_ptr;
; 840  : 	FalconEntity *entity_ptr;
; 841  : 	squadron_ptr = (Squadron) vuDatabase->Find(playerSquadron);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR [eax+452]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _squadron_ptr$[ebp], eax

; 842  : 	flight_ptr = (Flight) vuDatabase->Find(playerFlight);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight_ptr$[ebp], eax

; 843  : 
; 844  : 	if ((!flight_ptr) && (playerFlight != vuNullId)){

	cmp	DWORD PTR _flight_ptr$[ebp], 0
	jne	$LN6@UpdatePlay
	push	OFFSET ?vuNullId@@3VVU_ID@@A		; vuNullId
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN6@UpdatePlay

; 845  : 		static int now, last_time;
; 846  : 		now = GetTickCount ();

	call	DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR ?now@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA, eax

; 847  : 		if (now - last_time > 5000)	{

	mov	ecx, DWORD PTR ?now@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA
	sub	ecx, DWORD PTR ?last_time@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA
	cmp	ecx, 5000				; 00001388H
	jle	$LN6@UpdatePlay

; 848  : 			last_time = now;

	mov	edx, DWORD PTR ?now@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA
	mov	DWORD PTR ?last_time@?4??UpdatePlayer@FalconSessionEntity@@QAEXXZ@4HA, edx

; 849  : 			MonoPrint ("Flight is not found : %08x%08x\n", playerFlight);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	push	OFFSET ??_C@_0CA@NCOMDAPC@Flight?5is?5not?5found?5?3?5?$CF08x?$CF08x?6?$AA@
	call	_MonoPrint
	add	esp, 12					; 0000000cH

; 850  : 			VuGetRequest *msg = new VuGetRequest(playerFlight, this);

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN9@UpdatePlay
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+464]
	push	edx
	mov	eax, DWORD PTR [ecx+460]
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuGetRequest@@QAE@VVU_ID@@PAVVuTargetEntity@@@Z ; VuGetRequest::VuGetRequest
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN10@UpdatePlay
$LN9@UpdatePlay:
	mov	DWORD PTR tv139[ebp], 0
$LN10@UpdatePlay:
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _msg$2[ebp], edx

; 851  : 			FalconSendMessage(msg);

	push	0
	mov	eax, DWORD PTR _msg$2[ebp]
	push	eax
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN6@UpdatePlay:

; 852  : 		}
; 853  : 	}
; 854  : 
; 855  : 	entity_ptr = static_cast<FalconEntity*>(vuDatabase->Find(playerEntity));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+472]
	push	edx
	mov	eax, DWORD PTR [ecx+468]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _entity_ptr$[ebp], eax

; 856  : 
; 857  : 	if (squadron_ptr != playerSquadronPtr){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	push	ecx
	mov	edx, DWORD PTR _squadron_ptr$[ebp]
	push	edx
	call	??$?9VSquadronClass@@@@YA_NPBXABV?$VuBin@VSquadronClass@@@@@Z ; operator!=<SquadronClass>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@UpdatePlay

; 858  : 		SetPlayerSquadron(squadron_ptr);

	mov	ecx, DWORD PTR _squadron_ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron
$LN4@UpdatePlay:

; 859  : 	}
; 860  : 
; 861  : 	if (flight_ptr != playerFlightPtr){

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 480				; 000001e0H
	push	edx
	mov	eax, DWORD PTR _flight_ptr$[ebp]
	push	eax
	call	??$?9VFlightClass@@@@YA_NPBXABV?$VuBin@VFlightClass@@@@@Z ; operator!=<FlightClass>
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@UpdatePlay

; 862  : 		SetPlayerFlight(flight_ptr);

	mov	edx, DWORD PTR _flight_ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight
$LN3@UpdatePlay:

; 863  : 	}
; 864  : 
; 865  : 	if (entity_ptr != playerEntityPtr){

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 484				; 000001e4H
	push	eax
	mov	ecx, DWORD PTR _entity_ptr$[ebp]
	push	ecx
	call	??$?9VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ; operator!=<FalconEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@UpdatePlay

; 866  : 		SetPlayerEntity(entity_ptr);

	mov	eax, DWORD PTR _entity_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity

; 867  : 		if (entity_ptr){

	cmp	DWORD PTR _entity_ptr$[ebp], 0
	je	SHORT $LN7@UpdatePlay

; 868  : 			SetLabel((SimBaseClass*)entity_ptr);

	mov	ecx, DWORD PTR _entity_ptr$[ebp]
	push	ecx
	call	?SetLabel@@YAXPAVSimBaseClass@@@Z	; SetLabel
	add	esp, 4
$LN7@UpdatePlay:

; 869  : 		}
; 870  : 	}
; 871  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdatePlayer@FalconSessionEntity@@QAEXXZ$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?UpdatePlayer@FalconSessionEntity@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdatePlayer@FalconSessionEntity@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdatePlayer@FalconSessionEntity@@QAEXXZ ENDP		; FalconSessionEntity::UpdatePlayer
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetPlayerEntityID@FalconSessionEntity@@QAEXVVU_ID@@@Z PROC ; FalconSessionEntity::SetPlayerEntityID
; _this$ = ecx

; 354  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 356  : 	playerEntity = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+468], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+472], edx

; 357  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 358  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetPlayerEntityID@FalconSessionEntity@@QAEXVVU_ID@@@Z ENDP ; FalconSessionEntity::SetPlayerEntityID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
tv171 = -16						; size = 4
_oldPlayerPtr$ = -12					; size = 4
_newcountry$2 = -8					; size = 4
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z PROC ; FalconSessionEntity::SetPlayerEntity
; _this$ = ecx

; 457  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 458  : 	if (ent == playerEntityPtr){

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 484				; 000001e4H
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	call	??$?8VFalconEntity@@@@YA_NPBXABV?$VuBin@VFalconEntity@@@@@Z ; operator==<FalconEntity>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@SetPlayerE

; 459  : 		return; 

	jmp	$LN7@SetPlayerE
$LN6@SetPlayerE:

; 460  : 	}
; 461  : 
; 462  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 463  : 
; 464  : 	// Update cameras if local (remote cameras are sent to us via the update/create event)
; 465  : 	if (IsLocal() && ent){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@SetPlayerE
	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN5@SetPlayerE

; 466  : 		// KCK: Clear any previous camera and snap to this new entity.
; 467  : 		ClearCameras();	

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearCameras@VuSessionEntity@@QAEX_N@Z	; VuSessionEntity::ClearCameras

; 468  : 		AttachCamera(ent);

	push	0
	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AttachCamera@VuSessionEntity@@QAEHPAVVuEntity@@_N@Z ; VuSessionEntity::AttachCamera
$LN5@SetPlayerE:

; 469  : 	}
; 470  : 
; 471  : 	VuEntity *oldPlayerPtr = playerEntityPtr.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	DWORD PTR _oldPlayerPtr$[ebp], eax

; 472  : 	// sfr: we must reset player entity here, otherwise the CheckPlayerStatus below will fail
; 473  : 	// since it checks the playerEntityPtr
; 474  : 	playerEntityPtr.reset(ent);

	mov	edx, DWORD PTR _ent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ; VuBin<FalconEntity>::reset

; 475  : 
; 476  : 	if (oldPlayerPtr){

	cmp	DWORD PTR _oldPlayerPtr$[ebp], 0
	je	SHORT $LN4@SetPlayerE

; 477  : 		GameManager.CheckPlayerStatus((FalconEntity*)oldPlayerPtr);

	mov	eax, DWORD PTR _oldPlayerPtr$[ebp]
	push	eax
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus
$LN4@SetPlayerE:

; 478  : 		//VuDeReferenceEntity(oldPlayerPtr);
; 479  : #if 0//NEW_SERVER_VIEWPOINT
; 480  : 		if (!IsLocal() && Game()->IsLocal()){
; 481  : 			// viewpoint for the session if remote
; 482  : 			OTWDriver.RemoveViewpoint(this);
; 483  : 		}
; 484  : #endif
; 485  : 	}
; 486  : 
; 487  : 	if (playerEntityPtr){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??B?$VuBin@VFalconEntity@@@@QBE_NXZ	; VuBin<FalconEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@SetPlayerE

; 488  : 		playerEntity = playerEntityPtr->Id();

	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+468], ecx
	mov	DWORD PTR [eax+472], edx

; 489  : 		GameManager.CheckPlayerStatus(playerEntityPtr.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	push	eax
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus

; 490  : 		//VuReferenceEntity(playerEntityPtr);
; 491  : 		int newcountry = playerEntityPtr->GetCountry();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::operator->
	mov	DWORD PTR tv171[ebp], eax
	mov	ecx, DWORD PTR tv171[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv171[ebp]
	mov	eax, DWORD PTR [edx+120]
	call	eax
	movzx	ecx, al
	mov	DWORD PTR _newcountry$2[ebp], ecx

; 492  : 		ShiAssert(newcountry > 0 && newcountry < 255);
; 493  : 		if (newcountry > 0 && newcountry < 255){

	cmp	DWORD PTR _newcountry$2[ebp], 0
	jle	SHORT $LN2@SetPlayerE
	cmp	DWORD PTR _newcountry$2[ebp], 255	; 000000ffH
	jge	SHORT $LN2@SetPlayerE

; 494  : 			country = (uchar)newcountry;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _newcountry$2[ebp]
	mov	BYTE PTR [edx+510], al
$LN2@SetPlayerE:

; 495  : 		}
; 496  : #if 0//NEW_SERVER_VIEWPOINT
; 497  : 		if (!IsLocal() && Game()->IsLocal()){
; 498  : 			// viewpoint for the session if remote
; 499  : 			OTWDriver.AddViewpoint(this);
; 500  : 		}
; 501  : #endif
; 502  : 	}
; 503  : 	else{

	jmp	SHORT $LN1@SetPlayerE
$LN3@SetPlayerE:

; 504  : 		playerEntity = FalconNullId;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [ecx+468], edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [ecx+472], eax

; 505  : 		flyState = FLYSTATE_DEAD;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+513], 4
$LN1@SetPlayerE:

; 506  : 	}
; 507  : 
; 508  : 	SetDirty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 509  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN7@SetPlayerE:

; 510  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ENDP ; FalconSessionEntity::SetPlayerEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetPlayerFlightID@FalconSessionEntity@@QAEXVVU_ID@@@Z PROC ; FalconSessionEntity::SetPlayerFlightID
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 349  : 	playerFlight = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+460], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+464], edx

; 350  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 351  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetPlayerFlightID@FalconSessionEntity@@QAEXVVU_ID@@@Z ENDP ; FalconSessionEntity::SetPlayerFlightID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 8
_oldPlayerPtr$ = -8					; size = 4
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z PROC ; FalconSessionEntity::SetPlayerFlight
; _this$ = ecx

; 394  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 395  : 	if (playerFlightPtr.get() == ent){ return; }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	cmp	eax, DWORD PTR _ent$[ebp]
	jne	SHORT $LN6@SetPlayerF
	jmp	$LN7@SetPlayerF
$LN6@SetPlayerF:

; 396  : 
; 397  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 398  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 399  : 	if (gCompressTillTime && IsLocal())

	cmp	DWORD PTR ?gCompressTillTime@@3KA, 0	; gCompressTillTime
	je	SHORT $LN5@SetPlayerF
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@SetPlayerF

; 400  : 	{
; 401  : 		gCompressTillTime = 0;		// Cancle our current takeoff flight.

	mov	DWORD PTR ?gCompressTillTime@@3KA, 0	; gCompressTillTime

; 402  : 		SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4
$LN5@SetPlayerF:

; 403  : 	}
; 404  : 	FlightClass *oldPlayerPtr = playerFlightPtr.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	mov	DWORD PTR _oldPlayerPtr$[ebp], eax

; 405  : 	if (oldPlayerPtr){

	cmp	DWORD PTR _oldPlayerPtr$[ebp], 0
	je	SHORT $LN4@SetPlayerF

; 406  : 		GameManager.CheckPlayerStatus(oldPlayerPtr);

	mov	ecx, DWORD PTR _oldPlayerPtr$[ebp]
	push	ecx
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus
$LN4@SetPlayerF:

; 407  : 		//VuDeReferenceEntity(oldPlayerPtr);
; 408  : 	}
; 409  : 	// sfr: smartpointer ref/deref
; 410  : 	playerFlightPtr.reset(ent);

	mov	edx, DWORD PTR _ent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ; VuBin<FlightClass>::reset

; 411  : 	if (playerFlightPtr){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??B?$VuBin@VFlightClass@@@@QBE_NXZ	; VuBin<FlightClass>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@SetPlayerF

; 412  : 		playerFlight=playerFlightPtr->Id();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??C?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+460], edx
	mov	DWORD PTR [ecx+464], eax

; 413  : 		GameManager.CheckPlayerStatus(playerFlightPtr.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	push	eax
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus

; 414  : 		//VuReferenceEntity(playerFlightPtr);
; 415  : 	}
; 416  : 	else {

	jmp	SHORT $LN2@SetPlayerF
$LN3@SetPlayerF:

; 417  : 		playerFlight=FalconNullId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+460], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+464], ecx
$LN2@SetPlayerF:

; 418  : 	}
; 419  : 
; 420  : 	if (gUICommsQ && Game()){

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN1@SetPlayerF
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN1@SetPlayerF

; 421  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 422  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh
$LN1@SetPlayerF:

; 423  : 	}
; 424  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN7@SetPlayerF:

; 425  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ENDP ; FalconSessionEntity::SetPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 8
?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z PROC ; FalconSessionEntity::SetPlayerSquadronID
; _this$ = ecx

; 340  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 341  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 342  : 	playerSquadron = id;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+452], ecx
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	DWORD PTR [eax+456], edx

; 343  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 344  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z ENDP ; FalconSessionEntity::SetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 8
$T2 = -24						; size = 8
$T3 = -16						; size = 8
_oldPlayerPtr$ = -8					; size = 4
_this$ = -4						; size = 4
_ent$ = 8						; size = 4
?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z PROC ; FalconSessionEntity::SetPlayerSquadron
; _this$ = ecx

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 362  : 	if (playerSquadronPtr.get() == ent){ return; }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	cmp	eax, DWORD PTR _ent$[ebp]
	jne	SHORT $LN5@SetPlayerS
	jmp	$LN6@SetPlayerS
$LN5@SetPlayerS:

; 363  : 	CampEnterCriticalSection ();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 364  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 365  : 
; 366  : 	SquadronClass *oldPlayerPtr = playerSquadronPtr.get();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	mov	DWORD PTR _oldPlayerPtr$[ebp], eax

; 367  : 	if (oldPlayerPtr){

	cmp	DWORD PTR _oldPlayerPtr$[ebp], 0
	je	SHORT $LN4@SetPlayerS

; 368  : 		GameManager.CheckPlayerStatus(oldPlayerPtr);

	mov	eax, DWORD PTR _oldPlayerPtr$[ebp]
	push	eax
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus
$LN4@SetPlayerS:

; 369  : 		//VuDeReferenceEntity(oldPlayerPtr);
; 370  : 	}
; 371  : 	// sfr: smartpointer ref/deref
; 372  : 	playerSquadronPtr.reset(ent);

	mov	ecx, DWORD PTR _ent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ; VuBin<SquadronClass>::reset

; 373  : 	if (playerSquadronPtr)

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??B?$VuBin@VSquadronClass@@@@QBE_NXZ	; VuBin<SquadronClass>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@SetPlayerS

; 374  : 	{
; 375  : 		playerSquadron = playerSquadronPtr->Id();

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::operator->
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+452], ecx
	mov	DWORD PTR [eax+456], edx

; 376  : 		country = playerSquadronPtr->GetOwner();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::operator->
	mov	ecx, eax
	call	?GetOwner@CampBaseClass@@QAEEXZ		; CampBaseClass::GetOwner
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+510], al

; 377  : 		ShiAssert(country > 0 && country < 255);
; 378  : 		GameManager.CheckPlayerStatus(playerSquadronPtr.get());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	push	eax
	mov	ecx, OFFSET ?GameManager@@3VGameManagerClass@@A ; GameManager
	call	?CheckPlayerStatus@GameManagerClass@@QAEHPAVFalconEntity@@@Z ; GameManagerClass::CheckPlayerStatus

; 379  : 		//VuReferenceEntity(playerSquadronPtr);
; 380  : 	}
; 381  : 	else {

	jmp	SHORT $LN2@SetPlayerS
$LN3@SetPlayerS:

; 382  : 		playerSquadron = FalconNullId;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [edx+452], eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [edx+456], ecx
$LN2@SetPlayerS:

; 383  : 	}
; 384  : 
; 385  : 	if (gUICommsQ && Game())

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN1@SetPlayerS
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN1@SetPlayerS

; 386  : 	{
; 387  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 388  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh
$LN1@SetPlayerS:

; 389  : 	}
; 390  : 	CampLeaveCriticalSection ();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection
$LN6@SetPlayerS:

; 391  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ENDP ; FalconSessionEntity::SetPlayerSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
$T2 = -12						; size = 8
_this$ = -4						; size = 4
_pcallsign$ = 8						; size = 4
?SetPlayerCallsign@FalconSessionEntity@@QAEXPAD@Z PROC	; FalconSessionEntity::SetPlayerCallsign
; _this$ = ecx

; 319  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 	//	MonoPrint ("SetPlayerCallsign\n");
; 321  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 322  : 	//if (callSign)
; 323  : 	//	delete callSign;
; 324  : 	//callSign = new _TCHAR[_tcslen(pcallsign)+1];
; 325  : 	_tcscpy(callSign,pcallsign);

	mov	eax, DWORD PTR _pcallsign$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 437				; 000001b5H
	push	ecx
	call	_strcpy
	add	esp, 8

; 326  : 	callSign[_CALLSIGN_LEN_] = 0;

	mov	edx, 1
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+edx+437], 0

; 327  : 	if (gUICommsQ && Game())

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN2@SetPlayerC
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN2@SetPlayerC

; 328  : 	{
; 329  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 330  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh
$LN2@SetPlayerC:

; 331  : 	}
; 332  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayerCallsign@FalconSessionEntity@@QAEXPAD@Z ENDP	; FalconSessionEntity::SetPlayerCallsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 8
$T2 = -12						; size = 8
_this$ = -4						; size = 4
_pname$ = 8						; size = 4
?SetPlayerName@FalconSessionEntity@@QAEXPAD@Z PROC	; FalconSessionEntity::SetPlayerName
; _this$ = ecx

; 303  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 304  : 	//	MonoPrint ("SetPlayerName\n");
; 305  : 	SetDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::SetDirty

; 306  : 	/*if (name)
; 307  : 	  delete name;
; 308  : 	  name = new _TCHAR[_tcslen(pname)+1];*/
; 309  : 	_tcscpy(name,pname);

	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	push	ecx
	call	_strcpy
	add	esp, 8

; 310  : 	name[_NAME_LEN_] = 0;

	mov	edx, 1
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+edx+416], 0

; 311  : 	if (gUICommsQ && Game())

	cmp	DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A, 0 ; gUICommsQ
	je	SHORT $LN2@SetPlayerN
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	test	eax, eax
	je	SHORT $LN2@SetPlayerN

; 312  : 	{
; 313  : 		gUICommsQ->Add(_Q_SESSION_UPDATE_,Id(),Game()->Id());

	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	push	3
	mov	ecx, DWORD PTR ?gUICommsQ@@3PAVCommsQueue@@A ; gUICommsQ
	call	?Add@CommsQueue@@QAEXFVVU_ID@@0@Z	; CommsQueue::Add

; 314  : 		UI_Refresh();

	call	?UI_Refresh@@YAXXZ			; UI_Refresh
$LN2@SetPlayerN:

; 315  : 	}
; 316  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPlayerName@FalconSessionEntity@@QAEXPAD@Z ENDP	; FalconSessionEntity::SetPlayerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTeam@FalconSessionEntity@@QAEEXZ PROC		; FalconSessionEntity::GetTeam
; _this$ = ecx

; 297  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 298  : 	return ::GetTeam(country);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+510]
	push	ecx
	call	?GetTeam@@YAEE@Z			; GetTeam
	add	esp, 4

; 299  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeam@FalconSessionEntity@@QAEEXZ ENDP		; FalconSessionEntity::GetTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
_this$ = -28						; size = 4
_event$ = -24						; size = 4
tv85 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DoFullUpdate@FalconSessionEntity@@QAEXXZ PROC		; FalconSessionEntity::DoFullUpdate
; _this$ = ecx

; 671  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFullUpdate@FalconSessionEntity@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 672  : 	//	MonoPrint ("FalconSessionEntity::DoFullUpdate\n");
; 673  : 	VuEvent *event = new VuFullUpdateEvent(this, vuGlobalGroup);

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@DoFullUpda
	push	0
	mov	eax, DWORD PTR ?vuGlobalGroup@@3PAVVuGlobalGroup@@A ; vuGlobalGroup
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0VuFullUpdateEvent@@QAE@PAVVuEntity@@PAVVuTargetEntity@@E@Z ; VuFullUpdateEvent::VuFullUpdateEvent
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@DoFullUpda
$LN3@DoFullUpda:
	mov	DWORD PTR tv85[ebp], 0
$LN4@DoFullUpda:
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _event$[ebp], eax

; 674  : 	event->RequestReliableTransmit ();

	mov	ecx, DWORD PTR _event$[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 675  : 	VuMessageQueue::PostVuMessage(event);

	mov	ecx, DWORD PTR _event$[ebp]
	push	ecx
	call	?PostVuMessage@VuMessageQueue@@SAHPAVVuMessage@@@Z ; VuMessageQueue::PostVuMessage
	add	esp, 4

; 676  : 	ClearDirty ();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearDirty@VuTargetEntity@@QAEXXZ	; VuTargetEntity::ClearDirty

; 677  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DoFullUpdate@FalconSessionEntity@@QAEXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?DoFullUpdate@FalconSessionEntity@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFullUpdate@FalconSessionEntity@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFullUpdate@FalconSessionEntity@@QAEXXZ ENDP		; FalconSessionEntity::DoFullUpdate
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filePtr$ = 8						; size = 4
?Save@FalconSessionEntity@@UAEHPAU_iobuf@@@Z PROC	; FalconSessionEntity::Save
; _this$ = ecx

; 256  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 	MonoPrint ("FalconSessionEntity: This function is not supported!\n");

	push	OFFSET ??_C@_0DG@OLKGBOGL@FalconSessionEntity?3?5This?5functi@
	call	_MonoPrint
	add	esp, 4

; 258  : 	ShiWarning("FalconSessionEntity: This function is not supported!\n");
; 259  : 	return 0;

	xor	eax, eax

; 260  : 	filePtr;
; 261  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Save@FalconSessionEntity@@UAEHPAU_iobuf@@@Z ENDP	; FalconSessionEntity::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T2 = -72						; size = 8
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 4
_idsize$7 = -48						; size = 4
tv232 = -44						; size = 4
$T8 = -40						; size = 4
_ids$9 = -36						; size = 4
_i$10 = -32						; size = 4
$T11 = -28						; size = 4
_it$12 = -24						; size = 4
_this$ = -20						; size = 4
_fc$ = -14						; size = 1
_size$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
?Save@FalconSessionEntity@@UAEHPAPAE@Z PROC		; FalconSessionEntity::Save
; _this$ = ecx

; 205  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Save@FalconSessionEntity@@UAEHPAPAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 206  : 	uchar		size;
; 207  : 
; 208  : 	VuSessionEntity::Save (stream);

	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Save@VuSessionEntity@@UAEHPAPAE@Z	; VuSessionEntity::Save

; 209  : 	size = (uchar) _tcslen(name);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	push	ecx
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _size$[ebp], al

; 210  : 	memcpy (*stream, &size, sizeof (uchar));				*stream += sizeof (uchar);			

	push	1
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 211  : 	memcpy (*stream, name, sizeof (_TCHAR)*size);			*stream += sizeof (_TCHAR)*size;	

	movzx	edx, BYTE PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	eax, BYTE PTR _size$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx], eax

; 212  : 	size = (uchar)_tcslen(callSign);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	push	eax
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _size$[ebp], al

; 213  : 	memcpy (*stream, &size, sizeof (uchar));				*stream += sizeof (uchar);			

	push	1
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 214  : 	memcpy (*stream, callSign, sizeof (_TCHAR)*size);		*stream += sizeof (_TCHAR)*size;	

	movzx	ecx, BYTE PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 437				; 000001b5H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR _size$[ebp]
	mov	eax, DWORD PTR _stream$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], edx

; 215  : 	memcpy (*stream, &playerSquadron, sizeof (VU_ID));		*stream += sizeof (VU_ID);			

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 452				; 000001c4H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 216  : 	memcpy (*stream, &playerFlight, sizeof (VU_ID));		*stream += sizeof (VU_ID);			

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 460				; 000001ccH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 217  : 	memcpy (*stream, &playerEntity, sizeof (VU_ID));		*stream += sizeof (VU_ID);			

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 468				; 000001d4H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 218  : 	memcpy (*stream, &AceFactor, sizeof(float));			*stream += sizeof (float);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 488				; 000001e8H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 219  : 	memcpy (*stream, &initAceFactor, sizeof(float));		*stream += sizeof (float);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 492				; 000001ecH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 220  : 	memcpy (*stream, &bubbleRatio, sizeof (float));			*stream += sizeof (float);

	push	4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 496				; 000001f0H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 221  : 	memcpy (*stream, &country, sizeof (uchar));				*stream += sizeof (uchar);			

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 510				; 000001feH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 222  : 	memcpy (*stream, &aircraftNum, sizeof (uchar));			*stream += sizeof (uchar);			

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 511				; 000001ffH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 223  : 	memcpy (*stream, &pilotSlot, sizeof (uchar));			*stream += sizeof (uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 512				; 00000200H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 224  : 	memcpy (*stream, &flyState, sizeof (uchar));			*stream += sizeof (uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 513				; 00000201H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 225  : 	memcpy (*stream, &reqCompression, sizeof (short));		*stream += sizeof (short);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 514				; 00000202H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 226  : 	memcpy (*stream, kills, sizeof(kills));					*stream += sizeof (kills);

	push	8
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 500				; 000001f4H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 227  : 	memcpy (*stream, &rating, sizeof(uchar));				*stream += sizeof (uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 521				; 00000209H
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 228  : 	memcpy (*stream, &voiceID, sizeof(uchar));				*stream += sizeof (uchar);

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 522				; 0000020aH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 229  : 	memcpy (*stream, &missions, sizeof(ushort));			*stream += sizeof (ushort);

	push	2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 508				; 000001fcH
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 2
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 230  : #if FINE_INT
; 231  : 	// fine interest
; 232  : 	unsigned char fc = static_cast<unsigned char>(fineInterestList.size());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size
	mov	BYTE PTR _fc$[ebp], al

; 233  : 	memcpy(*stream, &fc, sizeof(fc)); 

	push	1
	lea	edx, DWORD PTR _fc$[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 234  : 	*stream += sizeof(fc);

	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], eax

; 235  : 	if (fc > 0){

	movzx	edx, BYTE PTR _fc$[ebp]
	test	edx, edx
	jle	$LN4@Save

; 236  : 		// get ids from list
; 237  : 		VU_ID *ids = new VU_ID[fc];

	movzx	eax, BYTE PTR _fc$[ebp]
	mov	DWORD PTR $T8[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T8[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN7@Save
	push	OFFSET ??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR $T11[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T11[ebp]
	mov	DWORD PTR tv232[ebp], edx
	jmp	SHORT $LN8@Save
$LN7@Save:
	mov	DWORD PTR tv232[ebp], 0
$LN8@Save:
	mov	eax, DWORD PTR tv232[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _ids$9[ebp], ecx

; 238  : 		FalconEntityList::iterator it;

	lea	ecx, DWORD PTR _it$12[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >

; 239  : 		unsigned int i=0;

	mov	DWORD PTR _i$10[ebp], 0

; 240  : 		for (it=fineInterestList.begin();it!=fineInterestList.end();++it){

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$12[ebp], eax
	jmp	SHORT $LN3@Save
$LN2@Save:
	lea	ecx, DWORD PTR _it$12[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
$LN3@Save:
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
	push	eax
	lea	ecx, DWORD PTR _it$12[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Save

; 241  : 			ids[i++] = it->get()->Id();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$12[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBEPAV?$VuBin@VFalconEntity@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator->
	mov	ecx, eax
	call	?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ; VuBin<FalconEntity>::get
	mov	ecx, eax
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _i$10[ebp]
	mov	esi, DWORD PTR _ids$9[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR _i$10[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$10[ebp], ecx

; 242  : 		}

	jmp	SHORT $LN2@Save
$LN1@Save:

; 243  : 		unsigned int idsize = sizeof(VU_ID)*fc; 

	movzx	edx, BYTE PTR _fc$[ebp]
	shl	edx, 3
	mov	DWORD PTR _idsize$7[ebp], edx

; 244  : 		memcpy(*stream, ids, idsize);

	mov	eax, DWORD PTR _idsize$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _ids$9[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 245  : 		*stream += idsize;

	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _idsize$7[ebp]
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], edx

; 246  : 		delete [] ids;

	mov	ecx, DWORD PTR _ids$9[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN4@Save:

; 247  : 	}
; 248  : #endif
; 249  : 
; 250  : 	//reqCompression++;
; 251  : 	//MonoPrint("Sending info for session: %s - team %d - #%d\n", name, country,reqCompression);
; 252  : 	return SaveSize();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 253  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Save@FalconSessionEntity@@UAEHPAPAE@Z$0:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$?Save@FalconSessionEntity@@UAEHPAPAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Save@FalconSessionEntity@@UAEHPAPAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Save@FalconSessionEntity@@UAEHPAPAE@Z ENDP		; FalconSessionEntity::Save
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_size$ = -12						; size = 4
_this$ = -8						; size = 4
_saveSize$ = -4						; size = 4
?SaveSize@FalconSessionEntity@@UAEHXZ PROC		; FalconSessionEntity::SaveSize
; _this$ = ecx

; 264  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 265  : 	int size,saveSize = VuSessionEntity::SaveSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveSize@VuSessionEntity@@UAEHXZ	; VuSessionEntity::SaveSize
	mov	DWORD PTR _saveSize$[ebp], eax

; 266  : 
; 267  : 	size = _tcslen(name); 

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax

; 268  : 	saveSize += sizeof (uchar);			// name size

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _saveSize$[ebp], ecx

; 269  : 	saveSize += sizeof (_TCHAR)*size;	// name

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _saveSize$[ebp], edx

; 270  : 	size = _tcslen(callSign);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax

; 271  : 	saveSize += sizeof (uchar);			// callsign size

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _saveSize$[ebp], ecx

; 272  : 	saveSize += sizeof (_TCHAR)*size;	// callsign

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _saveSize$[ebp], edx

; 273  : 	saveSize += sizeof (VU_ID);			// playerSquadron

	mov	eax, DWORD PTR _saveSize$[ebp]
	add	eax, 8
	mov	DWORD PTR _saveSize$[ebp], eax

; 274  : 	saveSize += sizeof (VU_ID);			// playerFlight

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 8
	mov	DWORD PTR _saveSize$[ebp], ecx

; 275  : 	saveSize += sizeof (VU_ID);			// playerEntity

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, 8
	mov	DWORD PTR _saveSize$[ebp], edx

; 276  : 	saveSize += sizeof (float);			// AceFactor

	mov	eax, DWORD PTR _saveSize$[ebp]
	add	eax, 4
	mov	DWORD PTR _saveSize$[ebp], eax

; 277  : 	saveSize += sizeof (float);			// initAceFactor

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 4
	mov	DWORD PTR _saveSize$[ebp], ecx

; 278  : 	saveSize += sizeof (float);			// bubbleRatio

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, 4
	mov	DWORD PTR _saveSize$[ebp], edx

; 279  : 	saveSize += sizeof (uchar);			// country

	mov	eax, DWORD PTR _saveSize$[ebp]
	add	eax, 1
	mov	DWORD PTR _saveSize$[ebp], eax

; 280  : 	saveSize += sizeof (uchar);			// aircraftNum

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _saveSize$[ebp], ecx

; 281  : 	saveSize += sizeof (uchar);			// pilotSlot

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, 1
	mov	DWORD PTR _saveSize$[ebp], edx

; 282  : 	saveSize += sizeof (uchar);			// flyState

	mov	eax, DWORD PTR _saveSize$[ebp]
	add	eax, 1
	mov	DWORD PTR _saveSize$[ebp], eax

; 283  : 	saveSize += sizeof (short);			// reqCompression

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 2
	mov	DWORD PTR _saveSize$[ebp], ecx

; 284  : 	saveSize += sizeof (kills);			// kills

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, 8
	mov	DWORD PTR _saveSize$[ebp], edx

; 285  : 	saveSize += sizeof (uchar);			// rating

	mov	eax, DWORD PTR _saveSize$[ebp]
	add	eax, 1
	mov	DWORD PTR _saveSize$[ebp], eax

; 286  : 	saveSize += sizeof (uchar);			// voiceID

	mov	ecx, DWORD PTR _saveSize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _saveSize$[ebp], ecx

; 287  : 	saveSize += sizeof (ushort);		// missions

	mov	edx, DWORD PTR _saveSize$[ebp]
	add	edx, 2
	mov	DWORD PTR _saveSize$[ebp], edx

; 288  : #if FINE_INT
; 289  : 	// sfr: we transmit as a list of IDs
; 290  : 	saveSize += sizeof(char) + (fineInterestList.size()*sizeof(VU_ID));

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size
	mov	ecx, DWORD PTR _saveSize$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+1]
	mov	DWORD PTR _saveSize$[ebp], edx

; 291  : #endif
; 292  : 	return saveSize;

	mov	eax, DWORD PTR _saveSize$[ebp]

; 293  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveSize@FalconSessionEntity@@UAEHXZ ENDP		; FalconSessionEntity::SaveSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1FalconSessionEntity@@UAE@XZ PROC			; FalconSessionEntity::~FalconSessionEntity
; _this$ = ecx

; 186  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1FalconSessionEntity@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FalconSessionEntity@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 187  : 	SetPlayerEntity(NULL);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity

; 188  : 	SetPlayerFlight(NULL);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 189  : 	SetPlayerSquadron(NULL);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 190  : 	if (unitDataSendBuffer){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+540], 0
	je	SHORT $LN4@FalconSess

; 191  : 		delete unitDataSendBuffer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+540]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@FalconSess:

; 192  : 	}
; 193  : 	if (objDataSendBuffer){

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+600], 0
	je	SHORT $LN3@FalconSess

; 194  : 		delete objDataSendBuffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+600]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@FalconSess:

; 195  : 	}
; 196  : 	if (unitDataReceiveBuffer){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+552], 0
	je	SHORT $LN2@FalconSess

; 197  : 		delete unitDataReceiveBuffer;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+552]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@FalconSess:

; 198  : 	}
; 199  : 	if (objDataReceiveBuffer){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+612], 0
	je	SHORT $LN5@FalconSess

; 200  : 		delete objDataReceiveBuffer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+612]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@FalconSess:

; 201  : 	}
; 202  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??1?$VuBin@VFlightClass@@@@QAE@XZ	; VuBin<FlightClass>::~VuBin<FlightClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??1?$VuBin@VSquadronClass@@@@QAE@XZ	; VuBin<SquadronClass>::~VuBin<SquadronClass>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1?$VuBin@VSquadronClass@@@@QAE@XZ	; VuBin<SquadronClass>::~VuBin<SquadronClass>
__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	jmp	??1?$VuBin@VFlightClass@@@@QAE@XZ	; VuBin<FlightClass>::~VuBin<FlightClass>
__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	jmp	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
__unwindfunclet$??1FalconSessionEntity@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	jmp	??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
__ehhandler$??1FalconSessionEntity@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1FalconSessionEntity@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1FalconSessionEntity@@UAE@XZ ENDP			; FalconSessionEntity::~FalconSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_pe$ = -16						; size = 4
_pf$ = -12						; size = 4
_ps$ = -8						; size = 4
_this$ = -4						; size = 4
?InsertionCallback@FalconSessionEntity@@UAEHXZ PROC	; FalconSessionEntity::InsertionCallback
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 	// This entity was inserted, so we'd better make these calls for real:
; 170  : 	Squadron	ps = (Squadron) vuDatabase->Find(playerSquadron);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR [eax+452]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _ps$[ebp], eax

; 171  : 	Flight		pf = (Flight) vuDatabase->Find(playerFlight);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _pf$[ebp], eax

; 172  : 	FalconEntity*pe = (FalconEntity*)vuDatabase->Find(playerEntity);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+472]
	push	ecx
	mov	edx, DWORD PTR [eax+468]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _pe$[ebp], eax

; 173  : 	playerSquadronPtr.reset();// = NULL;				// Clear current pointers

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ; VuBin<SquadronClass>::reset

; 174  : 	playerFlightPtr.reset();// = NULL;

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ; VuBin<FlightClass>::reset

; 175  : 	playerEntityPtr.reset();// = NULL;

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ; VuBin<FalconEntity>::reset

; 176  : 	SetPlayerSquadron(ps);					// Force them to be reassigned and referenced

	mov	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 177  : 	SetPlayerFlight(pf);

	mov	ecx, DWORD PTR _pf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 178  : 	SetPlayerEntity(pe);

	mov	edx, DWORD PTR _pe$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntity@FalconSessionEntity@@QAEXPAVFalconEntity@@@Z ; FalconSessionEntity::SetPlayerEntity

; 179  : 	SetPlayerSquadronID(playerSquadron);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	push	ecx
	mov	edx, DWORD PTR [eax+452]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerSquadronID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerSquadronID

; 180  : 	SetPlayerFlightID(playerFlight);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+464]
	push	ecx
	mov	edx, DWORD PTR [eax+460]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerFlightID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerFlightID

; 181  : 	SetPlayerEntityID(playerEntity);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+472]
	push	ecx
	mov	edx, DWORD PTR [eax+468]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPlayerEntityID@FalconSessionEntity@@QAEXVVU_ID@@@Z ; FalconSessionEntity::SetPlayerEntityID

; 182  : 	return VuSessionEntity::InsertionCallback();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsertionCallback@VuSessionEntity@@MAEHXZ ; VuSessionEntity::InsertionCallback

; 183  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InsertionCallback@FalconSessionEntity@@UAEHXZ ENDP	; FalconSessionEntity::InsertionCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_filePtr$ = 8						; size = 4
??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z PROC		; FalconSessionEntity::FalconSessionEntity
; _this$ = ecx

; 163  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _filePtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuSessionEntity@@QAE@PAU_iobuf@@@Z	; VuSessionEntity::VuSessionEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7FalconSessionEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 452				; 000001c4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z ; VuBin<SquadronClass>::VuBin<SquadronClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z ; VuBin<FlightClass>::VuBin<FlightClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ; VuBin<FalconEntity>::VuBin<FalconEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >

; 164  : 	MonoPrint ("FalconSessionEntity: This function is not supported!\n");

	push	OFFSET ??_C@_0DG@OLKGBOGL@FalconSessionEntity?3?5This?5functi@
	call	_MonoPrint
	add	esp, 4

; 165  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1?$VuBin@VSquadronClass@@@@QAE@XZ	; VuBin<SquadronClass>::~VuBin<SquadronClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	jmp	??1?$VuBin@VFlightClass@@@@QAE@XZ	; VuBin<FlightClass>::~VuBin<FlightClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	jmp	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
__ehhandler$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FalconSessionEntity@@QAE@PAU_iobuf@@@Z ENDP		; FalconSessionEntity::FalconSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
$T2 = -44						; size = 4
$T3 = -40						; size = 4
tv293 = -36						; size = 4
$T4 = -32						; size = 4
_ids$5 = -28						; size = 4
$T6 = -24						; size = 4
_this$ = -20						; size = 4
_i$7 = -15						; size = 1
_fc$ = -14						; size = 1
_size$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_rem$ = 12						; size = 4
??0FalconSessionEntity@@QAE@PAPAEPAJ@Z PROC		; FalconSessionEntity::FalconSessionEntity
; _this$ = ecx

; 91   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuSessionEntity@@QAE@PAPAEPAJ@Z	; VuSessionEntity::VuSessionEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7FalconSessionEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 452				; 000001c4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z ; VuBin<SquadronClass>::VuBin<SquadronClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z ; VuBin<FlightClass>::VuBin<FlightClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ; VuBin<FalconEntity>::VuBin<FalconEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 92   : 	uchar			size;
; 93   : 
; 94   : 	memcpychk (&size, stream, sizeof (uchar), rem);				

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 95   : 	//name = new _TCHAR[size+1];
; 96   : 	memcpychk (name, stream, sizeof (_TCHAR)*size, rem);			

	mov	eax, DWORD PTR _rem$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 97   : 	name[size]=name[_NAME_LEN_]=0;

	mov	ecx, 1
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+416], 0
	movzx	eax, BYTE PTR _size$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+416], 0

; 98   : 	memcpychk (&size, stream, sizeof (uchar), rem);				

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 99   : 	//callSign = new _TCHAR[size+1];
; 100  : 	memcpychk (callSign, stream, sizeof (_TCHAR)*size, rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	movzx	eax, BYTE PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 437				; 000001b5H
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 101  : 	callSign[size]=0;

	movzx	eax, BYTE PTR _size$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+437], 0

; 102  : 	memcpychk (&playerSquadron, stream, sizeof (VU_ID), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 452				; 000001c4H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 103  : 	memcpychk (&playerFlight, stream, sizeof (VU_ID), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 104  : 	memcpychk (&playerEntity, stream, sizeof (VU_ID), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 105  : 	assignedPlayerFlightPtr = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+528], 0

; 106  : 	assignedPilotSlot = 255;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+524], 255			; 000000ffH

; 107  : 	assignedAircraftNum = 255;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+523], 255			; 000000ffH

; 108  : 	// KCK NOTE: These pointers will be referenced either if:
; 109  : 	// a) This session is inserted
; 110  : 	// b) This update is used to change the pointers of a current remote session
; 111  : 	// sfr: smartpointers
; 112  : 	//playerSquadronPtr = NULL;
; 113  : 	//playerFlightPtr = NULL;
; 114  : 	//playerEntityPtr = NULL;
; 115  : 	// Don't find them until we need them...
; 116  : 	//playerSquadronPtr = (Squadron) vuDatabase->Find(playerSquadron);
; 117  : 	//playerFlightPtr = (Flight) vuDatabase->Find(playerFlight);
; 118  : 	//playerEntityPtr = vuDatabase->Find(playerEntity);
; 119  : 	memcpychk (&AceFactor, stream, sizeof(float), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 488				; 000001e8H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 120  : 	memcpychk (&initAceFactor, stream, sizeof(float), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 492				; 000001ecH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 121  : 	memcpychk (&bubbleRatio, stream, sizeof (float), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 496				; 000001f0H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 122  : 	memcpychk (&country, stream, sizeof (uchar), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 510				; 000001feH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 123  : 	memcpychk (&aircraftNum, stream, sizeof (uchar), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 511				; 000001ffH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 124  : 	memcpychk (&pilotSlot, stream, sizeof (uchar), rem);		

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 512				; 00000200H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 125  : 	memcpychk (&flyState, stream, sizeof (uchar), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 513				; 00000201H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 126  : 	memcpychk (&reqCompression, stream, sizeof (short), rem);	

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 514				; 00000202H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 127  : 	memcpychk (kills, stream, sizeof(kills), rem);				

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 500				; 000001f4H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 128  : 	memcpychk (&rating, stream, sizeof(uchar), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 521				; 00000209H
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 129  : 	memcpychk (&voiceID, stream, sizeof(uchar), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 522				; 0000020aH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 130  : 	memcpychk (&missions, stream, sizeof(ushort), rem);			

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 508				; 000001fcH
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 131  : 	latency = 10;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+516], 10			; 0000000aH

; 132  : 	samples = 10;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+520], 10			; 0000000aH

; 133  : 	unitDataSendBuffer = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+540], 0

; 134  : 	unitDataSendSet = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+544], dx

; 135  : 	unitDataSendSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+548], 0

; 136  : 	unitDataReceiveBuffer = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+552], 0

; 137  : 	unitDataReceiveSet = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+556], ax

; 138  : 	memset(unitDataReceived,0,FS_MAXBLK/8);

	push	40					; 00000028H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 558				; 0000022eH
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 139  : 	objDataSendBuffer = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+600], 0

; 140  : 	objDataSendSet = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+604], cx

; 141  : 	objDataSendSize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+608], 0

; 142  : 	objDataReceiveBuffer = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+612], 0

; 143  : 	objDataReceiveSet = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+616], dx

; 144  : 	memset(objDataReceived,0,FS_MAXBLK/8);

	push	40					; 00000028H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 618				; 0000026aH
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 145  : 
; 146  : #if FINE_INT
; 147  : 	// fine interest
; 148  : 	unsigned char fc;
; 149  : 	memcpychk(&fc, stream, sizeof(fc), rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fc$[ebp]
	push	ecx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 150  : 	if (fc > 0){

	movzx	edx, BYTE PTR _fc$[ebp]
	test	edx, edx
	jle	$LN5@FalconSess

; 151  : 		VU_ID *ids = new VU_ID[fc];

	movzx	eax, BYTE PTR _fc$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T4[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN7@FalconSess
	push	OFFSET ??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	mov	edx, DWORD PTR $T6[ebp]
	mov	DWORD PTR tv293[ebp], edx
	jmp	SHORT $LN8@FalconSess
$LN7@FalconSess:
	mov	DWORD PTR tv293[ebp], 0
$LN8@FalconSess:
	mov	eax, DWORD PTR tv293[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _ids$5[ebp], ecx

; 152  : 		memcpychk(ids, stream, sizeof(VU_ID)*fc, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	movzx	eax, BYTE PTR _fc$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ids$5[ebp]
	push	edx
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 153  : 		for (unsigned char i=0;i<fc;++i){			

	mov	BYTE PTR _i$7[ebp], 0
	jmp	SHORT $LN3@FalconSess
$LN2@FalconSess:
	mov	al, BYTE PTR _i$7[ebp]
	add	al, 1
	mov	BYTE PTR _i$7[ebp], al
$LN3@FalconSess:
	movzx	ecx, BYTE PTR _i$7[ebp]
	movzx	edx, BYTE PTR _fc$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN1@FalconSess

; 154  : 			AddToFineInterest(static_cast<FalconEntity*>(vuDatabase->Find(ids[i])));

	push	1
	movzx	eax, BYTE PTR _i$7[ebp]
	mov	ecx, DWORD PTR _ids$5[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	push	edx
	mov	eax, DWORD PTR [ecx+eax*8]
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddToFineInterest@FalconSessionEntity@@QAE_NPAVFalconEntity@@_N@Z ; FalconSessionEntity::AddToFineInterest

; 155  : 		}

	jmp	SHORT $LN2@FalconSess
$LN1@FalconSess:

; 156  : 		delete [] ids;

	mov	ecx, DWORD PTR _ids$5[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN5@FalconSess:

; 157  : 	}
; 158  : #endif
; 159  : 
; 160  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1?$VuBin@VSquadronClass@@@@QAE@XZ	; VuBin<SquadronClass>::~VuBin<SquadronClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	jmp	??1?$VuBin@VFlightClass@@@@QAE@XZ	; VuBin<FlightClass>::~VuBin<FlightClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	jmp	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	jmp	??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
__unwindfunclet$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z$5:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FalconSessionEntity@@QAE@PAPAEPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FalconSessionEntity@@QAE@PAPAEPAJ@Z ENDP		; FalconSessionEntity::FalconSessionEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\falcsess.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_domainMask$ = 8					; size = 4
_callsign$ = 12						; size = 4
??0FalconSessionEntity@@QAE@KPAD@Z PROC			; FalconSessionEntity::FalconSessionEntity
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FalconSessionEntity@@QAE@KPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _callsign$[ebp]
	push	eax
	mov	ecx, DWORD PTR _domainMask$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuSessionEntity@@QAE@KPBD@Z		; VuSessionEntity::VuSessionEntity
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7FalconSessionEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 452				; 000001c4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z ; VuBin<SquadronClass>::VuBin<SquadronClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z ; VuBin<FlightClass>::VuBin<FlightClass>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ; VuBin<FalconEntity>::VuBin<FalconEntity>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	call	??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 43   : 	//name = new _TCHAR[_NAME_LEN_];
; 44   : 	//_stprintf(name,"Kevin");
; 45   : 	_stprintf(name,LogBook.NameWRank());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?NameWRank@LogBookData@@QAEPADXZ	; LogBookData::NameWRank
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	call	_sprintf
	add	esp, 8

; 46   : 	name[_NAME_LEN_] = 0;

	mov	ecx, 1
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+416], 0

; 47   : 	//callSign = new _TCHAR[_CALLSIGN_LEN_];
; 48   : 	//_stprintf(callSign,"DeathPup");
; 49   : 	_stprintf(callSign,LogBook.Callsign());

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 437				; 000001b5H
	push	eax
	call	_sprintf
	add	esp, 8

; 50   : 	callSign[_CALLSIGN_LEN_] = 0;

	mov	ecx, 1
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+437], 0

; 51   : 	playerSquadron = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+452], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+456], edx

; 52   : 	playerFlight = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+460], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+464], edx

; 53   : 	playerEntity = FalconNullId;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR [eax+468], ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR [eax+472], edx

; 54   : 	// sfr: smartpointers
; 55   : 	//playerEntityPtr = NULL;
; 56   : 	//playerSquadronPtr = NULL;
; 57   : 	//playerFlightPtr = NULL;
; 58   : 	AceFactor = LogBook.AceFactor();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?AceFactor@LogBookData@@QAEMXZ		; LogBookData::AceFactor
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+488]

; 59   : 	initAceFactor = LogBook.AceFactor();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?AceFactor@LogBookData@@QAEMXZ		; LogBookData::AceFactor
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+492]

; 60   : 	memset(kills,0,sizeof(kills));

	push	8
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 500				; 000001f4H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 61   : 	rating=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+521], 0

; 62   : 	voiceID = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+522], 0

; 63   : 	missions=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+508], dx

; 64   : 	country = 255;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+510], 255			; 000000ffH

; 65   : 	aircraftNum = 255;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+511], 255			; 000000ffH

; 66   : 	pilotSlot = 255;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+512], 255			; 000000ffH

; 67   : 	assignedPlayerFlightPtr = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+528], 0

; 68   : 	assignedPilotSlot = 255;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+524], 255			; 000000ffH

; 69   : 	assignedAircraftNum = 255;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+523], 255			; 000000ffH

; 70   : 	latency = 10;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+516], 10			; 0000000aH

; 71   : 	samples = 10;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+520], 10			; 0000000aH

; 72   : 	bubbleRatio=1.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+496], xmm0

; 73   : 	reqCompression = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+514], cx

; 74   : 	unitDataSendBuffer = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+540], 0

; 75   : 	unitDataSendSet = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+544], cx

; 76   : 	unitDataSendSize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+548], 0

; 77   : 	unitDataReceiveBuffer = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+552], 0

; 78   : 	unitDataReceiveSet = 0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+556], dx

; 79   : 	memset(unitDataReceived,0,FS_MAXBLK/8);

	push	40					; 00000028H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 558				; 0000022eH
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 80   : 	objDataSendBuffer = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+600], 0

; 81   : 	objDataSendSet = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+604], ax

; 82   : 	objDataSendSize = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+608], 0

; 83   : 	objDataReceiveBuffer = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+612], 0

; 84   : 	objDataReceiveSet = 0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+616], cx

; 85   : 	memset(objDataReceived,0,FS_MAXBLK/8);

	push	40					; 00000028H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 618				; 0000026aH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 86   : 	SetEntityType((ushort)(F4SessionType+VU_LAST_ENTITY_TYPE));

	mov	ecx, DWORD PTR ?F4SessionType@@3HA	; F4SessionType
	add	ecx, 100				; 00000064H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEntityType@VuEntity@@QAEXG@Z	; VuEntity::SetEntityType

; 87   : 	flyState = FLYSTATE_IN_UI;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+513], 0

; 88   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1VuSessionEntity@@UAE@XZ		; VuSessionEntity::~VuSessionEntity
__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	jmp	??1?$VuBin@VSquadronClass@@@@QAE@XZ	; VuBin<SquadronClass>::~VuBin<SquadronClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	jmp	??1?$VuBin@VFlightClass@@@@QAE@XZ	; VuBin<FlightClass>::~VuBin<FlightClass>
__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	jmp	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
__unwindfunclet$??0FalconSessionEntity@@QAE@KPAD@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 532				; 00000214H
	jmp	??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
__ehhandler$??0FalconSessionEntity@@QAE@KPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FalconSessionEntity@@QAE@KPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FalconSessionEntity@@QAE@KPAD@Z ENDP			; FalconSessionEntity::FalconSessionEntity
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Incsize@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXI@Z PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Incsize, COMDAT
; _this$ = ecx

; 1949 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1950 : 		if (max_size() - this->_Mysize - 1 < _Count)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1951 : 			_Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN1@Incsize:

; 1952 : 		this->_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:

; 1953 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXI@Z ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Tidy@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Tidy, COMDAT
; _this$ = ecx

; 1926 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1927 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear

; 1928 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear, COMDAT
; _this$ = ecx

; 1470 : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1471 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1472 : 		this->_Orphan_all();
; 1473 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1474 : 
; 1475 : 		_Nodeptr _Pnode = this->_Nextnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx

; 1476 : 		this->_Nextnode(this->_Myhead) = this->_Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx

; 1477 : 		this->_Prevnode(this->_Myhead) = this->_Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 1478 : 		this->_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1479 : 
; 1480 : 		for (_Nodeptr _Pnext; _Pnode != this->_Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear

; 1481 : 			{	// delete an element
; 1482 : 			_Pnext = this->_Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], edx

; 1483 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Freenode

; 1484 : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 1485 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?erase@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::erase, COMDAT
; _this$ = ecx

; 1416 : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1417 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1418 : 		if (_Where._Getcont() != this || _Where._Ptr == this->_Myhead)
; 1419 : 			_DEBUG_ERROR("list erase iterator outside range");
; 1420 : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 1421 : 		_Orphan_ptr(*this, _Pnode);
; 1422 : 
; 1423 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1424 : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	push	0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::operator++
	mov	ecx, eax
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax

; 1425 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1426 : 
; 1427 : 		if (_Pnode != this->_Myhead)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN1@erase

; 1428 : 			{	// not list head, safe to erase
; 1429 : 			this->_Nextnode(this->_Prevnode(_Pnode)) =
; 1430 : 				this->_Nextnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 1431 : 			this->_Prevnode(this->_Nextnode(_Pnode)) =
; 1432 : 				this->_Prevnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx

; 1433 : 			this->_Freenode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Freenode

; 1434 : 			--this->_Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN1@erase:

; 1435 : 			}
; 1436 : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1437 : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?max_size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::max_size, COMDAT
; _this$ = ecx

; 1241 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1242 : 		return (this->_Getal().max_size());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size

; 1243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size, COMDAT
; _this$ = ecx

; 1236 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1237 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1238 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Make_iter, COMDAT
; _this$ = ecx

; 1156 : 		{	// make iterator from const_iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1157 : 		return (iterator(_Where._Ptr, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1158 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@@Z ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Unchecked_end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1146 : 		{	// return unchecked iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1147 : 		return (_Unchecked_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1148 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end, COMDAT
; _this$ = ecx

; 1129 : 		{	// return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1130 : 		return (const_iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1131 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end, COMDAT
; _this$ = ecx

; 1124 : 		{	// return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1125 : 		return (iterator(this->_Myhead, this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1126 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::end
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin, COMDAT
; _this$ = ecx

; 1119 : 		{	// return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1120 : 		return (const_iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_const_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1121 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin, COMDAT
; _this$ = ecx

; 1114 : 		{	// return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1115 : 		return (iterator(this->_Nextnode(this->_Myhead), this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >::_List_iterator<std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1116 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >, COMDAT
; _this$ = ecx

; 1091 : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1092 : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXXZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Tidy

; 1093 : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?push_back@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEX$$QAV?$VuBin@VFalconEntity@@@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEX$$QAV?$VuBin@VFalconEntity@@@@@Z PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::push_back, COMDAT
; _this$ = ecx

; 1036 : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1037 : 		_Insert(_Unchecked_end(), _STD forward<_Ty>(_Val));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@@2@XZ ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Unchecked_end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@V?$VuBin@VFalconEntity@@@@@std@@YA$$QAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::forward<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$VuBin@VFalconEntity@@@@@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@U_Iterator_base0@2@@1@$$QAV?$VuBin@VFalconEntity@@@@@Z ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Insert<VuBin<FalconEntity> >

; 1038 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEX$$QAV?$VuBin@VFalconEntity@@@@@Z ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ PROC ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >, COMDAT
; _this$ = ecx

; 899  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@V?$VuBin@VFalconEntity@@@@@std@@QAE@XZ ; std::allocator<VuBin<FalconEntity> >::allocator<VuBin<FalconEntity> >
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >

; 900  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::list<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ PROC ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::~_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::~_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 1
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z PROC ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Freenode, COMDAT
; _this$ = ecx

; 854  : 		{	// give node back

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 855  : 		this->_Getal().destroy(
; 856  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>

; 857  : 		this->_Getal().destroy(
; 858  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>

; 859  : 		this->_Getal().destroy(
; 860  : 			_STD addressof(this->_Myval(_Pnode)));

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@V?$VuBin@VFalconEntity@@@@@std@@YAPAV?$VuBin@VFalconEntity@@@@AAV1@@Z ; std::addressof<VuBin<FalconEntity> >
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@V?$VuBin@VFalconEntity@@@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAV?$VuBin@VFalconEntity@@@@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<VuBin<FalconEntity> >

; 861  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate

; 862  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ENDP ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??0?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z PROC ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >, COMDAT
; _this$ = ecx

; 829  : 		{	// construct from allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >

; 830  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_buy@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ENDP ; std::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >::_List_buy<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal, COMDAT
; _this$ = ecx

; 809  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 811  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z
_TEXT	SEGMENT
tv135 = -44						; size = 4
tv134 = -40						; size = 4
tv133 = -36						; size = 4
tv132 = -32						; size = 4
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
$T2 = -20						; size = 1
$T3 = -19						; size = 1
$T4 = -18						; size = 1
$T5 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buynode0, COMDAT
; _this$ = ecx

; 787  : 		{	// allocate a node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 788  : 		_Nodeptr _Pnode = this->_Getal().allocate(1);

	push	1
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 789  : 
; 790  : 		if (_Next == _Nodeptr())

	cmp	DWORD PTR __Next$[ebp], 0
	jne	SHORT $LN2@Buynode0

; 791  : 			{	// point at self
; 792  : 			_Next = _Pnode;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx

; 793  : 			_Prev = _Pnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Prev$[ebp], edx
$LN2@Buynode0:

; 794  : 			}
; 795  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 796  : 		this->_Getal().construct(
; 797  : 			_STD addressof(this->_Nextnode(_Pnode)), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR tv132[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	DWORD PTR tv133[ebp], eax
	lea	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	eax, DWORD PTR tv132[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv133[ebp]
	call	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>

; 798  : 		this->_Getal().construct(
; 799  : 			_STD addressof(this->_Prevnode(_Pnode)), _Prev);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	mov	DWORD PTR tv134[ebp], eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	DWORD PTR tv135[ebp], eax
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	call	??$construct@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::construct<std::_List_node<VuBin<FalconEntity>,void *> *,std::_List_node<VuBin<FalconEntity>,void *> * &>
	jmp	SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$0:

; 800  : 		_CATCH_ALL
; 801  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate

; 802  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 803  : 		_CATCH_END

	mov	eax, $LN8@Buynode0
	ret	0
$LN5@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$1
$LN8@Buynode0:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z$1:

; 804  : 
; 805  : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:

; 806  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buynode0
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -3						; size = 1
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Freeheadnode, COMDAT
; _this$ = ecx

; 777  : 		{	// free head node using current allocator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 778  : 		this->_Getal().destroy(
; 779  : 			_STD addressof(this->_Nextnode(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>

; 780  : 		this->_Getal().destroy(
; 781  : 			_STD addressof(this->_Prevnode(_Pnode)));

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<VuBin<FalconEntity>,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::destroy<std::_List_node<VuBin<FalconEntity>,void *> *>

; 782  : 		this->_Getal().deallocate(_Pnode, 1);

	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate

; 783  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buyheadnode, COMDAT
; _this$ = ecx

; 772  : 		{	// get head node using current allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 		return (_Buynode0(_Nodeptr(), _Nodeptr()));

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode0@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@0@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buynode0

; 774  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??1?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::~_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 712  : 		{	// destroy head node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 713  : 		_Freeheadnode(this->_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freeheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Freeheadnode

; 714  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::~_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z PROC ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >, COMDAT
; _this$ = ecx

; 706  : 	_List_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >

; 707  : 		{	// construct head node, allocator from _Al
; 708  : 		this->_Myhead = _Buyheadnode();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buyheadnode@?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@XZ ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_Buyheadnode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 709  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_alloc@$0A@U?$_List_base_types@V?$VuBin@VFalconEntity@@@@V?$allocator@V?$VuBin@VFalconEntity@@@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$VuBin@VFalconEntity@@@@@1@@Z ENDP ; std::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >::_List_alloc<0,std::_List_base_types<VuBin<FalconEntity>,std::allocator<VuBin<FalconEntity> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval, COMDAT

; 546  : 		{	// return reference to value in node

	push	ebp
	mov	ebp, esp

; 547  : 		return ((reference)_Pnode->_Myval);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8

; 548  : 		}

	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAV?$VuBin@VFalconEntity@@@@PAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode, COMDAT

; 541  : 		{	// return reference to predecessor pointer in node

	push	ebp
	mov	ebp, esp

; 542  : 		return ((_Nodepref)_Pnode->_Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4

; 543  : 		}

	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode, COMDAT

; 536  : 		{	// return reference to successor pointer in node

	push	ebp
	mov	ebp, esp

; 537  : 		return ((_Nodepref)_Pnode->_Next);

	mov	eax, DWORD PTR __Pnode$[ebp]

; 538  : 		}

	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@SAAAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >, COMDAT
; _this$ = ecx

; 529  : 	_List_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 530  : 		{	// initialize data
; 531  : 		this->_Myhead = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 532  : 		this->_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 533  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@V?$VuBin@VFalconEntity@@@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >::_List_val<std::_List_simple_types<VuBin<FalconEntity> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocator<std::_List_node<VuBin<FalconEntity>,void *> >

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<VuBin<FalconEntity>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	eax, 357913941				; 15555555H

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@YAPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@0@IPAU10@@Z ; std::_Allocate<std::_List_node<VuBin<FalconEntity>,void *> >
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAEXPAU?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocator<std::_List_node<VuBin<FalconEntity>,void *> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@V?$VuBin@VFalconEntity@@@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<VuBin<FalconEntity>,void *> >::allocator<std::_List_node<VuBin<FalconEntity>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$VuBin@VFalconEntity@@@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$VuBin@VFalconEntity@@@@@std@@QAE@XZ PROC ; std::allocator<VuBin<FalconEntity> >::allocator<VuBin<FalconEntity> >, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$VuBin@VFalconEntity@@@@@std@@QAE@XZ ENDP ; std::allocator<VuBin<FalconEntity> >::allocator<VuBin<FalconEntity> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$VuBin@VFalconEntity@@@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$VuBin@VFalconEntity@@@@QAEPAXI@Z PROC		; VuBin<FalconEntity>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$VuBin@VFalconEntity@@@@QAE@XZ	; VuBin<FalconEntity>::~VuBin<FalconEntity>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$VuBin@VFalconEntity@@@@QAEPAXI@Z ENDP		; VuBin<FalconEntity>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z PROC ; VuBin<FalconEntity>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VFalconEntity@@@@QAEXPAVFalconEntity@@@Z ENDP ; VuBin<FalconEntity>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ PROC ; VuBin<FalconEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ENDP ; VuBin<FalconEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ PROC	; VuBin<FalconEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VFalconEntity@@@@QBEPAVFalconEntity@@XZ ENDP	; VuBin<FalconEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VFalconEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VFalconEntity@@@@QBE_NXZ PROC		; VuBin<FalconEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VFalconEntity@@@@QBE_NXZ ENDP		; VuBin<FalconEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??9?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_rhs$ = 8						; size = 4
??9?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z PROC		; VuBin<FalconEntity>::operator!=, COMDAT
; _this$ = ecx

; 34   : 	bool operator!=(const VuBin &rhs)const{ return !operator==(rhs); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z ; VuBin<FalconEntity>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z ENDP		; VuBin<FalconEntity>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??8?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z PROC		; VuBin<FalconEntity>::operator==, COMDAT
; _this$ = ecx

; 30   : 	bool operator==(const VuBin &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 31   : 		return e == rhs.e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$VuBin@VFalconEntity@@@@QBE_NABV0@@Z ENDP		; VuBin<FalconEntity>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VFalconEntity@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VFalconEntity@@@@QAE@XZ PROC			; VuBin<FalconEntity>::~VuBin<FalconEntity>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VFalconEntity@@@@QAE@XZ ENDP			; VuBin<FalconEntity>::~VuBin<FalconEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VFalconEntity@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??0?$VuBin@VFalconEntity@@@@QAE@ABV0@@Z PROC		; VuBin<FalconEntity>::VuBin<FalconEntity>, COMDAT
; _this$ = ecx

; 15   : 	VuBin(const VuBin &rhs) : e(rhs.e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 16   : 		VuReferenceEntity(e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 17   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VFalconEntity@@@@QAE@ABV0@@Z ENDP		; VuBin<FalconEntity>::VuBin<FalconEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z PROC ; VuBin<FalconEntity>::VuBin<FalconEntity>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VFalconEntity@@@@QAE@PAVFalconEntity@@@Z ENDP ; VuBin<FalconEntity>::VuBin<FalconEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z PROC ; VuBin<FlightClass>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VFlightClass@@@@QAEXPAVFlightClass@@@Z ENDP ; VuBin<FlightClass>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VFlightClass@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VFlightClass@@@@QBE_NXZ PROC			; VuBin<FlightClass>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VFlightClass@@@@QBE_NXZ ENDP			; VuBin<FlightClass>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??9?$VuBin@VFlightClass@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_rhs$ = 8						; size = 4
??9?$VuBin@VFlightClass@@@@QBE_NABV0@@Z PROC		; VuBin<FlightClass>::operator!=, COMDAT
; _this$ = ecx

; 34   : 	bool operator!=(const VuBin &rhs)const{ return !operator==(rhs); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$VuBin@VFlightClass@@@@QBE_NABV0@@Z	; VuBin<FlightClass>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$VuBin@VFlightClass@@@@QBE_NABV0@@Z ENDP		; VuBin<FlightClass>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??8?$VuBin@VFlightClass@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8?$VuBin@VFlightClass@@@@QBE_NABV0@@Z PROC		; VuBin<FlightClass>::operator==, COMDAT
; _this$ = ecx

; 30   : 	bool operator==(const VuBin &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 31   : 		return e == rhs.e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$VuBin@VFlightClass@@@@QBE_NABV0@@Z ENDP		; VuBin<FlightClass>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VFlightClass@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VFlightClass@@@@QAE@XZ PROC			; VuBin<FlightClass>::~VuBin<FlightClass>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VFlightClass@@@@QAE@XZ ENDP			; VuBin<FlightClass>::~VuBin<FlightClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z PROC	; VuBin<FlightClass>::VuBin<FlightClass>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VFlightClass@@@@QAE@PAVFlightClass@@@Z ENDP	; VuBin<FlightClass>::VuBin<FlightClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newe$ = 8						; size = 4
?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z PROC ; VuBin<SquadronClass>::reset, COMDAT
; _this$ = ecx

; 60   : 	void reset(E *newe = NULL){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if (newe == e){ return; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newe$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@reset
	jmp	SHORT $LN2@reset
$LN1@reset:

; 62   : 		VuReferenceEntity(newe); // ref new pointer

	mov	edx, DWORD PTR _newe$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 63   : 		VuDeReferenceEntity(e);  // unref old pointer

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 64   : 		e = newe;                // get new pointer

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newe$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@reset:

; 65   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$VuBin@VSquadronClass@@@@QAEXPAVSquadronClass@@@Z ENDP ; VuBin<SquadronClass>::reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ PROC ; VuBin<SquadronClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ENDP ; VuBin<SquadronClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ PROC ; VuBin<SquadronClass>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ENDP ; VuBin<SquadronClass>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VSquadronClass@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VSquadronClass@@@@QBE_NXZ PROC		; VuBin<SquadronClass>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VSquadronClass@@@@QBE_NXZ ENDP		; VuBin<SquadronClass>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??9?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
_rhs$ = 8						; size = 4
??9?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z PROC		; VuBin<SquadronClass>::operator!=, COMDAT
; _this$ = ecx

; 34   : 	bool operator!=(const VuBin &rhs)const{ return !operator==(rhs); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z ; VuBin<SquadronClass>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z ENDP		; VuBin<SquadronClass>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??8?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z PROC		; VuBin<SquadronClass>::operator==, COMDAT
; _this$ = ecx

; 30   : 	bool operator==(const VuBin &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 31   : 		return e == rhs.e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$VuBin@VSquadronClass@@@@QBE_NABV0@@Z ENDP		; VuBin<SquadronClass>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??1?$VuBin@VSquadronClass@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$VuBin@VSquadronClass@@@@QAE@XZ PROC		; VuBin<SquadronClass>::~VuBin<SquadronClass>, COMDAT
; _this$ = ecx

; 19   : 	~VuBin(){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 20   : 		VuDeReferenceEntity((VuEntity *)e);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 21   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$VuBin@VSquadronClass@@@@QAE@XZ ENDP		; VuBin<SquadronClass>::~VuBin<SquadronClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 4
??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z PROC ; VuBin<SquadronClass>::VuBin<SquadronClass>, COMDAT
; _this$ = ecx

; 11   : 	explicit VuBin(E *e = NULL) : e(e){

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx

; 12   : 		VuReferenceEntity(e);

	mov	edx, DWORD PTR _e$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 13   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$VuBin@VSquadronClass@@@@QAE@PAVSquadronClass@@@Z ENDP ; VuBin<SquadronClass>::VuBin<SquadronClass>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?AceFactor@LogBookData@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AceFactor@LogBookData@@QAEMXZ PROC			; LogBookData::AceFactor, COMDAT
; _this$ = ecx

; 187  : 	float	AceFactor(void)							{return Pilot.AceFactor;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?AceFactor@LogBookData@@QAEMXZ ENDP			; LogBookData::AceFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ PROC ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size, COMDAT
; _this$ = ecx

; 1086 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1087 : 		return (this->_Mylast - this->_Myfirst);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1088 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ENDP ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?CameraCount@VuSessionEntity@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CameraCount@VuSessionEntity@@QBEHXZ PROC		; VuSessionEntity::CameraCount, COMDAT
; _this$ = ecx

; 228  : 	int CameraCount() const { return cameras_.size(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 380				; 0000017cH
	call	?size@?$vector@V?$VuBin@VVuEntity@@@@V?$allocator@V?$VuBin@VVuEntity@@@@@std@@@std@@QBEIXZ ; std::vector<VuBin<VuEntity>,std::allocator<VuBin<VuEntity> > >::size
	mov	esp, ebp
	pop	ebp
	ret	0
?CameraCount@VuSessionEntity@@QBEHXZ ENDP		; VuSessionEntity::CameraCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ PROC	; VuBin<VuEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuEntity@@@@QBEPAVVuEntity@@XZ ENDP	; VuBin<VuEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestReliableTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestReliableTransmit@VuMessage@@QAEXXZ PROC		; VuMessage::RequestReliableTransmit, COMDAT
; _this$ = ecx

; 180  : 	void RequestReliableTransmit() { flags_ |= VU_RELIABLE_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestReliableTransmit@VuMessage@@QAEXXZ ENDP		; VuMessage::RequestReliableTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 50   : 		{	// adopt this iterator by parent

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ PROC	; VuEntity::EntityType, COMDAT
; _this$ = ecx

; 176  : 	VuEntityType *EntityType() const { return const_cast<VuEntityType*>(entityTypePtr_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?EntityType@VuEntity@@QBEPAUVuEntityType@@XZ ENDP	; VuEntity::EntityType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YDelta@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YDelta@VuEntity@@QBEMXZ PROC				; VuEntity::YDelta, COMDAT
; _this$ = ecx

; 162  : 	SM_SCALAR YDelta() const { return pos_.dy_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+52]
	mov	esp, ebp
	pop	ebp
	ret	0
?YDelta@VuEntity@@QBEMXZ ENDP				; VuEntity::YDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XDelta@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XDelta@VuEntity@@QBEMXZ PROC				; VuEntity::XDelta, COMDAT
; _this$ = ecx

; 161  : 	SM_SCALAR XDelta() const { return pos_.dx_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?XDelta@VuEntity@@QBEMXZ ENDP				; VuEntity::XDelta
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 517  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
