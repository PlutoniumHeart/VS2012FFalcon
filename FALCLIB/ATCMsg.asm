; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\MsgSrc\ATCMsg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
_DATA	SEGMENT
_matrix33_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	ORG $+4
_matrix44_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	?XPos@VuEntity@@QBEMXZ				; VuEntity::XPos
PUBLIC	?YPos@VuEntity@@QBEMXZ				; VuEntity::YPos
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0logic_error@std@@QAE@PBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ		; VuMessage::EntityId
PUBLIC	?RequestReliableTransmit@VuMessage@@QAEXXZ	; VuMessage::RequestReliableTransmit
PUBLIC	?IsSetFalcFlag@FalconEntity@@QAEHH@Z		; FalconEntity::IsSetFalcFlag
PUBLIC	?IsPlayer@FalconEntity@@QAEHXZ			; FalconEntity::IsPlayer
PUBLIC	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
PUBLIC	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
PUBLIC	?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ	; AircraftClass::DBrain
PUBLIC	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
PUBLIC	??1InvalidBufferException@@UAE@XZ		; InvalidBufferException::~InvalidBufferException
PUBLIC	??0InvalidBufferException@@QAE@ABV0@@Z		; InvalidBufferException::InvalidBufferException
PUBLIC	??_GInvalidBufferException@@UAEPAXI@Z		; InvalidBufferException::`scalar deleting destructor'
PUBLIC	?memcpychk@@YAXPAXPAPAEIPAJ@Z			; memcpychk
PUBLIC	??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconATCMessage::FalconATCMessage
PUBLIC	??0FalconATCMessage@@QAE@EVVU_ID@@0@Z		; FalconATCMessage::FalconATCMessage
PUBLIC	??1FalconATCMessage@@UAE@XZ			; FalconATCMessage::~FalconATCMessage
PUBLIC	?Size@FalconATCMessage@@UBEHXZ			; FalconATCMessage::Size
PUBLIC	?Decode@FalconATCMessage@@UAEHPAPAEPAJ@Z	; FalconATCMessage::Decode
PUBLIC	?Encode@FalconATCMessage@@UAEHPAPAE@Z		; FalconATCMessage::Encode
PUBLIC	??0DATA_BLOCK@FalconATCMessage@@QAE@XZ		; FalconATCMessage::DATA_BLOCK::DATA_BLOCK
PUBLIC	?Process@FalconATCMessage@@MAEHE@Z		; FalconATCMessage::Process
PUBLIC	??_GFalconATCMessage@@UAEPAXI@Z			; FalconATCMessage::`scalar deleting destructor'
PUBLIC	?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ ; CampBaseClass::GetComponents
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?GetTaxiPoint@DigitalBrain@@QAEHXZ		; DigitalBrain::GetTaxiPoint
PUBLIC	?SetTrackPoint@DigitalBrain@@QAEXMM@Z		; DigitalBrain::SetTrackPoint
PUBLIC	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z		; DigitalBrain::SetTrackPoint
PUBLIC	?SetATCFlag@DigitalBrain@@QAEXH@Z		; DigitalBrain::SetATCFlag
PUBLIC	?ClearATCFlag@DigitalBrain@@QAEXH@Z		; DigitalBrain::ClearATCFlag
PUBLIC	?IsSetATC@DigitalBrain@@QAEHH@Z			; DigitalBrain::IsSetATC
PUBLIC	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus
PUBLIC	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
PUBLIC	?Runway@DigitalBrain@@QAEHXZ			; DigitalBrain::Runway
PUBLIC	?RwTime@DigitalBrain@@QAEKXZ			; DigitalBrain::RwTime
PUBLIC	?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z ; HandleInboundFlight
PUBLIC	?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z ; HandleInbound
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_7InvalidBufferException@@6B@			; InvalidBufferException::`vftable'
PUBLIC	??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ ; `string'
PUBLIC	__TI4?AVInvalidBufferException@@
PUBLIC	__CTA4?AVInvalidBufferException@@
PUBLIC	??_R0?AVInvalidBufferException@@@8		; InvalidBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7FalconATCMessage@@6B@			; FalconATCMessage::`vftable'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidBufferException@@6B@		; InvalidBufferException::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidBufferException@@8			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidBufferException@@8			; InvalidBufferException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidBufferException@@8		; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FalconATCMessage@@6B@			; FalconATCMessage::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFalconATCMessage@@@8			; FalconATCMessage `RTTI Type Descriptor'
PUBLIC	??_R3FalconATCMessage@@8			; FalconATCMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FalconATCMessage@@8			; FalconATCMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FalconATCMessage@@8		; FalconATCMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@FalconEvent@@8			; FalconEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFalconEvent@@@8				; FalconEvent `RTTI Type Descriptor'
PUBLIC	??_R3FalconEvent@@8				; FalconEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FalconEvent@@8				; FalconEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuMessage@@8			; VuMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVVuMessage@@@8				; VuMessage `RTTI Type Descriptor'
PUBLIC	??_R3VuMessage@@8				; VuMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuMessage@@8				; VuMessage::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@3ecccccd
PUBLIC	__real@43340000
PUBLIC	__real@43b40000
PUBLIC	__real@50c76e79
PUBLIC	__real@50f791f7
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_rand:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_sprintf:PROC
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?DoSend@VuMessage@@UAEEXZ:PROC			; VuMessage::DoSend
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	?Size@FalconEvent@@UBEHXZ:PROC			; FalconEvent::Size
EXTRN	?Decode@FalconEvent@@UAEHPAPAEPAJ@Z:PROC	; FalconEvent::Decode
EXTRN	?Encode@FalconEvent@@UAEHPAPAE@Z:PROC		; FalconEvent::Encode
EXTRN	??0FalconEvent@@IAE@EW4HandlingThread@0@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconEvent::FalconEvent
EXTRN	??0FalconEvent@@IAE@EW4HandlingThread@0@VVU_ID@@1@Z:PROC ; FalconEvent::FalconEvent
EXTRN	??1FalconEvent@@MAE@XZ:PROC			; FalconEvent::~FalconEvent
EXTRN	?Activate@FalconEvent@@MAEHPAVVuEntity@@@Z:PROC	; FalconEvent::Activate
EXTRN	?LocalSize@FalconEvent@@EBEHXZ:PROC		; FalconEvent::LocalSize
EXTRN	?FalconSendMessage@@YAXPAVVuMessage@@H@Z:PROC	; FalconSendMessage
EXTRN	??_EInvalidBufferException@@UAEPAXI@Z:PROC	; InvalidBufferException::`vector deleting destructor'
EXTRN	??_EFalconATCMessage@@UAEPAXI@Z:PROC		; FalconATCMessage::`vector deleting destructor'
EXTRN	??0FalconATCCmdMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:PROC ; FalconATCCmdMessage::FalconATCCmdMessage
EXTRN	?SendCmdMessage@ATCBrain@@QAEXPAVAircraftClass@@PAUrunwayQueueStruct@@@Z:PROC ; ATCBrain::SendCmdMessage
EXTRN	?InList@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@@Z:PROC ; ATCBrain::InList
EXTRN	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z:PROC ; ATCBrain::RequestClearance
EXTRN	?RequestEmerClearance@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::RequestEmerClearance
EXTRN	?RequestTakeoff@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::RequestTakeoff
EXTRN	?RequestTaxi@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::RequestTaxi
EXTRN	?AbortApproach@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::AbortApproach
EXTRN	?AddInbound@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::AddInbound
EXTRN	?AddInboundFlight@ATCBrain@@QAEXPAVFlightClass@@@Z:PROC ; ATCBrain::AddInboundFlight
EXTRN	?AddTraffic@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@W4AtcStatusEnum@@HJ@Z:PROC ; ATCBrain::AddTraffic
EXTRN	?RemoveTraffic@ATCBrain@@QAEXVVU_ID@@H@Z:PROC	; ATCBrain::RemoveTraffic
EXTRN	?RemoveInbound@ATCBrain@@QAEXPAUrunwayQueueStruct@@@Z:PROC ; ATCBrain::RemoveInbound
EXTRN	?RemoveFromAllOtherATCs@ATCBrain@@QAEXPAVAircraftClass@@@Z:PROC ; ATCBrain::RemoveFromAllOtherATCs
EXTRN	?SetEmergency@ATCBrain@@QAEXH@Z:PROC		; ATCBrain::SetEmergency
EXTRN	?GetRunwayName@ATCBrain@@QAEHH@Z:PROC		; ATCBrain::GetRunwayName
EXTRN	?GetOppositeRunway@ATCBrain@@QAEHH@Z:PROC	; ATCBrain::GetOppositeRunway
EXTRN	?FindNextEmergency@ATCBrain@@QAEXH@Z:PROC	; ATCBrain::FindNextEmergency
EXTRN	?FindBestLandingRunway@ATCBrain@@QAEHPAVFalconEntity@@H@Z:PROC ; ATCBrain::FindBestLandingRunway
EXTRN	?FindAbortPt@ATCBrain@@QAEXPAVAircraftClass@@PAM11@Z:PROC ; ATCBrain::FindAbortPt
EXTRN	?FindTakeoffPt@ATCBrain@@QAEHPAVFlightClass@@HHPAM1@Z:PROC ; ATCBrain::FindTakeoffPt
EXTRN	?FindRunwayPt@ATCBrain@@QAEHPAVFlightClass@@HHPAM1@Z:PROC ; ATCBrain::FindRunwayPt
EXTRN	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z:PROC ; ATCBrain::FindFinalPt
EXTRN	?FindBasePt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HMMPAM1@Z:PROC ; ATCBrain::FindBasePt
EXTRN	?FindFirstLegPt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HKMMHPAM1@Z:PROC ; ATCBrain::FindFirstLegPt
EXTRN	?DetermineAngle@ATCBrain@@QAEMPAVAircraftClass@@HW4AtcStatusEnum@@@Z:PROC ; ATCBrain::DetermineAngle
EXTRN	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z:PROC ; ATCBrain::GetAltitude
EXTRN	?CalculateStandRateTurnToPt@ATCBrain@@QAEHPAVAircraftClass@@MMPAM@Z:PROC ; ATCBrain::CalculateStandRateTurnToPt
EXTRN	?IsOverRunway@ATCBrain@@QAEHPAVAircraftClass@@@Z:PROC ; ATCBrain::IsOverRunway
EXTRN	?MakeVectorCall@ATCBrain@@QAEXPAVAircraftClass@@PAVVuTargetEntity@@@Z:PROC ; ATCBrain::MakeVectorCall
EXTRN	?GetLandingNumber@ATCBrain@@QAEHPAUrunwayQueueStruct@@@Z:PROC ; ATCBrain::GetLandingNumber
EXTRN	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ:PROC ; CampBaseClass::GetComponentLead
EXTRN	?GetFirstPt@@YAHH@Z:PROC			; GetFirstPt
EXTRN	?GetNextPt@@YAHH@Z:PROC				; GetNextPt
EXTRN	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z:PROC ; TranslatePointData
EXTRN	?GetQueue@@YAHH@Z:PROC				; GetQueue
EXTRN	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z:PROC ; CreateCallFromATC
EXTRN	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z:PROC ; SendCallToATC
EXTRN	?ResetATC@DigitalBrain@@QAEXXZ:PROC		; DigitalBrain::ResetATC
EXTRN	?CalculateNextTurnDistance@DigitalBrain@@QAEMXZ:PROC ; DigitalBrain::CalculateNextTurnDistance
EXTRN	?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ:PROC ; CampaignClass::GetMinutesSinceMidnight
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?SimLibElapsedTime@@3KA:DWORD			; SimLibElapsedTime
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PtHeaderDataTable@@3PAUPtHeaderDataType@@A:DWORD ; PtHeaderDataTable
EXTRN	?PtDataTable@@3PAUPtDataType@@A:DWORD		; PtDataTable
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@50f791f7
CONST	SEGMENT
__real@50f791f7 DD 050f791f7r			; 3.32283e+010
CONST	ENDS
;	COMDAT __real@50c76e79
CONST	SEGMENT
__real@50c76e79 DD 050c76e79r			; 2.67672e+010
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2VuMessage@@8
rdata$r	SEGMENT
??_R2VuMessage@@8 DD FLAT:??_R1A@?0A@EA@VuMessage@@8	; VuMessage::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuMessage@@8
rdata$r	SEGMENT
??_R3VuMessage@@8 DD 00H				; VuMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuMessage@@@8
_DATA	SEGMENT
??_R0?AVVuMessage@@@8 DD FLAT:??_7type_info@@6B@	; VuMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@VuMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuMessage@@8 DD FLAT:??_R0?AVVuMessage@@@8 ; VuMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2FalconEvent@@8
rdata$r	SEGMENT
??_R2FalconEvent@@8 DD FLAT:??_R1A@?0A@EA@FalconEvent@@8 ; FalconEvent::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3FalconEvent@@8
rdata$r	SEGMENT
??_R3FalconEvent@@8 DD 00H				; FalconEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FalconEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFalconEvent@@@8
_DATA	SEGMENT
??_R0?AVFalconEvent@@@8 DD FLAT:??_7type_info@@6B@	; FalconEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFalconEvent@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@FalconEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FalconEvent@@8 DD FLAT:??_R0?AVFalconEvent@@@8 ; FalconEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FalconEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FalconATCMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FalconATCMessage@@8 DD FLAT:??_R0?AVFalconATCMessage@@@8 ; FalconATCMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FalconATCMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2FalconATCMessage@@8
rdata$r	SEGMENT
??_R2FalconATCMessage@@8 DD FLAT:??_R1A@?0A@EA@FalconATCMessage@@8 ; FalconATCMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@FalconEvent@@8
	DD	FLAT:??_R1A@?0A@EA@VuMessage@@8
rdata$r	ENDS
;	COMDAT ??_R3FalconATCMessage@@8
rdata$r	SEGMENT
??_R3FalconATCMessage@@8 DD 00H				; FalconATCMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2FalconATCMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFalconATCMessage@@@8
_DATA	SEGMENT
??_R0?AVFalconATCMessage@@@8 DD FLAT:??_7type_info@@6B@	; FalconATCMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFalconATCMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FalconATCMessage@@6B@
rdata$r	SEGMENT
??_R4FalconATCMessage@@6B@ DD 00H			; FalconATCMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFalconATCMessage@@@8
	DD	FLAT:??_R3FalconATCMessage@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidBufferException@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidBufferException@@8 DD FLAT:??_R0?AVInvalidBufferException@@@8 ; InvalidBufferException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidBufferException@@8
rdata$r	SEGMENT
??_R2InvalidBufferException@@8 DD FLAT:??_R1A@?0A@EA@InvalidBufferException@@8 ; InvalidBufferException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@out_of_range@std@@8
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidBufferException@@8
rdata$r	SEGMENT
??_R3InvalidBufferException@@8 DD 00H			; InvalidBufferException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidBufferException@@6B@
rdata$r	SEGMENT
??_R4InvalidBufferException@@6B@ DD 00H			; InvalidBufferException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	FLAT:??_R3InvalidBufferException@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7FalconATCMessage@@6B@
CONST	SEGMENT
??_7FalconATCMessage@@6B@ DD FLAT:??_R4FalconATCMessage@@6B@ ; FalconATCMessage::`vftable'
	DD	FLAT:??_EFalconATCMessage@@UAEPAXI@Z
	DD	FLAT:?Size@FalconATCMessage@@UBEHXZ
	DD	FLAT:?DoSend@VuMessage@@UAEEXZ
	DD	FLAT:?Activate@FalconEvent@@MAEHPAVVuEntity@@@Z
	DD	FLAT:?Process@FalconATCMessage@@MAEHE@Z
	DD	FLAT:?Encode@FalconATCMessage@@UAEHPAPAE@Z
	DD	FLAT:?Decode@FalconATCMessage@@UAEHPAPAEPAJ@Z
	DD	FLAT:?LocalSize@FalconEvent@@EBEHXZ
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVInvalidBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0InvalidBufferException@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidBufferException@@@8
_DATA	SEGMENT
??_R0?AVInvalidBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; InvalidBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CTA4?AVInvalidBufferException@@
xdata$x	SEGMENT
__CTA4?AVInvalidBufferException@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidBufferException@@@8??0InvalidBufferException@@QAE@ABV0@@Z12
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidBufferException@@
xdata$x	SEGMENT
__TI4?AVInvalidBufferException@@ DD 00H
	DD	FLAT:??1InvalidBufferException@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidBufferException@@
xdata$x	ENDS
;	COMDAT ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
CONST	SEGMENT
??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@ DB 'Tryi'
	DB	'ng to write %lu bytes to %ld buffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7InvalidBufferException@@6B@
CONST	SEGMENT
??_7InvalidBufferException@@6B@ DD FLAT:??_R4InvalidBufferException@@6B@ ; InvalidBufferException::`vftable'
	DD	FLAT:??_EInvalidBufferException@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z$0
__unwindtable$?Process@FalconATCMessage@@MAEHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Process@FalconATCMessage@@MAEHE@Z$0
__unwindtable$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z$0
__unwindtable$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z$0
__unwindtable$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z$1
__ehfuncinfo$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Process@FalconATCMessage@@MAEHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Process@FalconATCMessage@@MAEHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0
__ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
$T2 = -92						; size = 8
$T3 = -84						; size = 8
$T4 = -76						; size = 4
_randNum$5 = -72					; size = 4
tv322 = -68						; size = 4
$T6 = -64						; size = 4
tv311 = -60						; size = 4
_delay$ = -56						; size = 4
tv237 = -52						; size = 4
tv179 = -48						; size = 4
tv131 = -44						; size = 4
_index$ = -40						; size = 4
_time_in_minutes$ = -36					; size = 4
tv82 = -32						; size = 4
_ATCCmdMessage$7 = -28					; size = 4
_tod$ = -24						; size = 4
_atcBrain$ = -20					; size = 4
_radioMessage$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_atc$ = 8						; size = 4
_aircraft$ = 12						; size = 4
?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z PROC ; HandleInbound

; 146  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 147  : 	if(!atc || !aircraft){

	cmp	DWORD PTR _atc$[ebp], 0
	je	SHORT $LN23@HandleInbo
	cmp	DWORD PTR _aircraft$[ebp], 0
	jne	SHORT $LN24@HandleInbo
$LN23@HandleInbo:

; 148  : 		return;

	jmp	$LN25@HandleInbo
$LN24@HandleInbo:

; 149  : 	}
; 150  : 
; 151  : 	int index, tod, time_in_minutes;
; 152  : 	FalconRadioChatterMessage *radioMessage = NULL;

	mov	DWORD PTR _radioMessage$[ebp], 0

; 153  : 	ATCBrain* atcBrain = atcBrain = atc->brain;

	mov	eax, DWORD PTR _atc$[ebp]
	mov	ecx, DWORD PTR [eax+240]
	mov	DWORD PTR _atcBrain$[ebp], ecx
	mov	edx, DWORD PTR _atcBrain$[ebp]
	mov	DWORD PTR _atcBrain$[ebp], edx

; 154  : 	int delay = 7 * CampaignSeconds;

	mov	DWORD PTR _delay$[ebp], 7000		; 00001b58H

; 155  : 	if (!PlayerOptions.PlayerRadioVoice){

	movzx	eax, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201
	test	eax, eax
	jne	SHORT $LN22@HandleInbo

; 156  : 	    delay = 500;

	mov	DWORD PTR _delay$[ebp], 500		; 000001f4H
$LN22@HandleInbo:

; 157  : 	}
; 158  : 
; 159  : 	atcBrain->AddInbound(aircraft);

	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?AddInbound@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::AddInbound

; 160  : 
; 161  : 	index = atcBrain->FindBestLandingRunway( aircraft, TRUE);

	push	1
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?FindBestLandingRunway@ATCBrain@@QAEHPAVFalconEntity@@H@Z ; ATCBrain::FindBestLandingRunway
	mov	DWORD PTR _index$[ebp], eax

; 162  : 	if(index)

	cmp	DWORD PTR _index$[ebp], 0
	je	$LN21@HandleInbo

; 163  : 	{
; 164  : 		int randNum = rand()%3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _randNum$5[ebp], edx

; 165  : 		switch(randNum)

	mov	edx, DWORD PTR _randNum$5[ebp]
	mov	DWORD PTR tv82[ebp], edx
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN18@HandleInbo
	cmp	DWORD PTR tv82[ebp], 1
	je	$LN15@HandleInbo
	cmp	DWORD PTR tv82[ebp], 2
	je	$LN4@HandleInbo
	jmp	$LN19@HandleInbo
$LN18@HandleInbo:

; 166  : 		{
; 167  : 		case 0:
; 168  : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND1, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN28@HandleInbo
$LN27@HandleInbo:
	mov	DWORD PTR tv131[ebp], 0
$LN28@HandleInbo:
	mov	ecx, DWORD PTR tv131[ebp]
	push	ecx
	push	286					; 0000011eH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 169  : 			radioMessage->dataBlock.edata[4]	= 32767;

	mov	ecx, 2
	shl	ecx, 2
	mov	edx, 32767				; 00007fffH
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx

; 170  : 			radioMessage->dataBlock.edata[5]	= (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(index));

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	edx, 2
	imul	edx, 5
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 171  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN39@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN39@HandleInbo:
	test	eax, eax
	je	SHORT $LN17@HandleInbo

; 172  : 				radioMessage->dataBlock.edata[6]	= 4;

	mov	edx, 2
	imul	edx, 6
	mov	eax, 4
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 173  : 			else

	jmp	SHORT $LN16@HandleInbo
$LN17@HandleInbo:

; 174  : 				radioMessage->dataBlock.edata[6]	= -1;

	mov	edx, 2
	imul	edx, 6
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax
$LN16@HandleInbo:

; 175  : 			break;

	jmp	$LN19@HandleInbo
$LN15@HandleInbo:

; 176  : 
; 177  : 		case 1:
; 178  : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND2, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN29@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN30@HandleInbo
$LN29@HandleInbo:
	mov	DWORD PTR tv179[ebp], 0
$LN30@HandleInbo:
	mov	eax, DWORD PTR tv179[ebp]
	push	eax
	push	287					; 0000011fH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 179  : 
; 180  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN40@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN40@HandleInbo:
	test	eax, eax
	je	SHORT $LN14@HandleInbo

; 181  : 			{
; 182  : 				radioMessage->dataBlock.edata[3]	= (short)(rand()%3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	eax, 2
	imul	eax, 3
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+eax+64], dx

; 183  : 			}
; 184  : 			else

	jmp	SHORT $LN13@HandleInbo
$LN14@HandleInbo:

; 185  : 			{
; 186  : 				time_in_minutes =  TheCampaign.GetMinutesSinceMidnight();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ ; CampaignClass::GetMinutesSinceMidnight
	mov	DWORD PTR _time_in_minutes$[ebp], eax

; 187  : 				if (time_in_minutes < 180)//3am

	cmp	DWORD PTR _time_in_minutes$[ebp], 180	; 000000b4H
	jge	SHORT $LN12@HandleInbo

; 188  : 					tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
	jmp	SHORT $LN11@HandleInbo
$LN12@HandleInbo:

; 189  : 				else if(time_in_minutes < 720 )//noon

	cmp	DWORD PTR _time_in_minutes$[ebp], 720	; 000002d0H
	jge	SHORT $LN10@HandleInbo

; 190  : 					tod = 0;

	mov	DWORD PTR _tod$[ebp], 0
	jmp	SHORT $LN11@HandleInbo
$LN10@HandleInbo:

; 191  : 				else if(time_in_minutes < 1020 ) //5pm

	cmp	DWORD PTR _time_in_minutes$[ebp], 1020	; 000003fcH
	jge	SHORT $LN8@HandleInbo

; 192  : 					tod = 2;

	mov	DWORD PTR _tod$[ebp], 2

; 193  : 				else

	jmp	SHORT $LN11@HandleInbo
$LN8@HandleInbo:

; 194  : 					tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
$LN11@HandleInbo:

; 195  : 
; 196  : 				radioMessage->dataBlock.edata[3]	= (short)(3 + tod + (rand()%3)*3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	imul	edx, 3
	mov	eax, DWORD PTR _tod$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	mov	edx, 2
	imul	edx, 3
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+edx+64], cx
$LN13@HandleInbo:

; 197  : 			}
; 198  : 
; 199  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN41@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN41@HandleInbo:
	test	eax, eax
	je	SHORT $LN6@HandleInbo

; 200  : 				radioMessage->dataBlock.edata[4]	= 4;

	mov	ecx, 2
	shl	ecx, 2
	mov	edx, 4
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx

; 201  : 			else

	jmp	SHORT $LN5@HandleInbo
$LN6@HandleInbo:

; 202  : 				radioMessage->dataBlock.edata[4]	= -1;

	mov	ecx, 2
	shl	ecx, 2
	or	edx, -1
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx
$LN5@HandleInbo:

; 203  : 			break;

	jmp	$LN19@HandleInbo
$LN4@HandleInbo:

; 204  : 
; 205  : 		case 2:
; 206  : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND3, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv237[ebp], eax
	jmp	SHORT $LN32@HandleInbo
$LN31@HandleInbo:
	mov	DWORD PTR tv237[ebp], 0
$LN32@HandleInbo:
	mov	edx, DWORD PTR tv237[ebp]
	push	edx
	push	288					; 00000120H
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 207  : 			radioMessage->dataBlock.edata[4]	= -1;

	mov	edx, 2
	shl	edx, 2
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 208  : 			radioMessage->dataBlock.edata[5]	= -1;

	mov	edx, 2
	imul	edx, 5
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 209  : 			radioMessage->dataBlock.edata[6]	= 32767;

	mov	edx, 2
	imul	edx, 6
	mov	eax, 32767				; 00007fffH
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 210  : 			radioMessage->dataBlock.edata[7]	= (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(index));

	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	ecx, 2
	imul	ecx, 7
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 211  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN42@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN42@HandleInbo:
	test	eax, eax
	je	SHORT $LN3@HandleInbo

; 212  : 				radioMessage->dataBlock.edata[8]	= 4;

	mov	eax, 2
	shl	eax, 3
	mov	ecx, 4
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 213  : 			else

	jmp	SHORT $LN19@HandleInbo
$LN3@HandleInbo:

; 214  : 				radioMessage->dataBlock.edata[8]	= -1;

	mov	eax, 2
	shl	eax, 3
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx
$LN19@HandleInbo:

; 215  : 			break;
; 216  : 		}
; 217  : 		
; 218  : 		radioMessage->dataBlock.time_to_play= delay;

	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	ecx, DWORD PTR _delay$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 219  : 		FalconSendMessage(radioMessage, TRUE);

	push	1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 220  : 	}
; 221  : 	else

	jmp	$LN25@HandleInbo
$LN21@HandleInbo:

; 222  : 	{
; 223  : 		//all runways destroyed, divert 'em
; 224  : 		FalconATCCmdMessage* ATCCmdMessage = new FalconATCCmdMessage( aircraft->Id(), FalconLocalGame );

	push	74					; 0000004aH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN35@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN33@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv311[ebp], eax
	jmp	SHORT $LN34@HandleInbo
$LN33@HandleInbo:
	mov	DWORD PTR tv311[ebp], 0
$LN34@HandleInbo:
	push	1
	mov	ecx, DWORD PTR tv311[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0FalconATCCmdMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconATCCmdMessage::FalconATCCmdMessage
	mov	DWORD PTR tv322[ebp], eax
	jmp	SHORT $LN36@HandleInbo
$LN35@HandleInbo:
	mov	DWORD PTR tv322[ebp], 0
$LN36@HandleInbo:
	mov	eax, DWORD PTR tv322[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _ATCCmdMessage$7[ebp], ecx

; 225  : 		ATCCmdMessage->dataBlock.from		= atc->Id();

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _ATCCmdMessage$7[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 226  : 		ATCCmdMessage->dataBlock.type		= FalconATCCmdMessage::Divert;

	mov	ecx, DWORD PTR _ATCCmdMessage$7[ebp]
	mov	DWORD PTR [ecx+56], 22			; 00000016H

; 227  : 		ATCCmdMessage->dataBlock.rwindex	= 0;

	xor	edx, edx
	mov	eax, DWORD PTR _ATCCmdMessage$7[ebp]
	mov	WORD PTR [eax+64], dx

; 228  : 		FalconSendMessage(ATCCmdMessage, FALSE);						// Send it

	push	0
	mov	ecx, DWORD PTR _ATCCmdMessage$7[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN25@HandleInbo:

; 229  : 	}
; 230  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z ENDP ; HandleInbound
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
_flightIter$2 = -112					; size = 12
$T3 = -100						; size = 8
$T4 = -92						; size = 8
$T5 = -84						; size = 4
_randNum$6 = -80					; size = 4
tv375 = -76						; size = 4
$T7 = -72						; size = 4
tv364 = -68						; size = 4
_delay$ = -64						; size = 4
tv269 = -60						; size = 4
tv211 = -56						; size = 4
tv163 = -52						; size = 4
_index$ = -48						; size = 4
_time_in_minutes$ = -44					; size = 4
tv146 = -40						; size = 4
_o$ = -36						; size = 4
_ATCCmdMessage$8 = -32					; size = 4
_tod$ = -28						; size = 4
_aircraft$ = -24					; size = 4
_atcBrain$ = -20					; size = 4
_radioMessage$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_atc$ = 8						; size = 4
_flight$ = 12						; size = 4
?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z PROC ; HandleInboundFlight

; 44   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 45   : 	if (!atc || !flight){

	cmp	DWORD PTR _atc$[ebp], 0
	je	SHORT $LN26@HandleInbo
	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN27@HandleInbo
$LN26@HandleInbo:

; 46   : 		return;

	jmp	$LN28@HandleInbo
$LN27@HandleInbo:

; 47   : 	}
; 48   : 
; 49   : 	Objective	o = (Objective)(flight->GetUnitAirbase());	

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _o$[ebp], eax

; 50   : 	// JBLOOK Added by M.N. for now to prevent CTD
; 51   : 	// when user issues "Inbound" on a carrier
; 52   : 	if (o && o->IsUnit()){								

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN25@HandleInbo
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx+232]
	call	eax
	test	eax, eax
	je	SHORT $LN25@HandleInbo

; 53   : 		return;

	jmp	$LN28@HandleInbo
$LN25@HandleInbo:

; 54   : 	}
; 55   : 	
; 56   : 	int index, tod, time_in_minutes;
; 57   : 	FalconRadioChatterMessage *radioMessage = NULL;

	mov	DWORD PTR _radioMessage$[ebp], 0

; 58   : 	ATCBrain* atcBrain = atcBrain = atc->brain;

	mov	ecx, DWORD PTR _atc$[ebp]
	mov	edx, DWORD PTR [ecx+240]
	mov	DWORD PTR _atcBrain$[ebp], edx
	mov	eax, DWORD PTR _atcBrain$[ebp]
	mov	DWORD PTR _atcBrain$[ebp], eax

; 59   : 	AircraftClass *aircraft = (AircraftClass*)flight->GetComponentLead();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	mov	DWORD PTR _aircraft$[ebp], eax

; 60   : 	int delay = 7 * CampaignSeconds;

	mov	DWORD PTR _delay$[ebp], 7000		; 00001b58H

; 61   : 	if (!PlayerOptions.PlayerRadioVoice){

	movzx	ecx, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201
	test	ecx, ecx
	jne	SHORT $LN24@HandleInbo

; 62   : 	    delay = 500;

	mov	DWORD PTR _delay$[ebp], 500		; 000001f4H
$LN24@HandleInbo:

; 63   : 	}
; 64   : 	atcBrain->AddInboundFlight(flight);

	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?AddInboundFlight@ATCBrain@@QAEXPAVFlightClass@@@Z ; ATCBrain::AddInboundFlight

; 65   : 
; 66   : 	index = atcBrain->FindBestLandingRunway( aircraft, TRUE);

	push	1
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?FindBestLandingRunway@ATCBrain@@QAEHPAVFalconEntity@@H@Z ; ATCBrain::FindBestLandingRunway
	mov	DWORD PTR _index$[ebp], eax

; 67   : 
; 68   : 	if(index)

	cmp	DWORD PTR _index$[ebp], 0
	je	$LN23@HandleInbo

; 69   : 	{
; 70   : 		int randNum = rand()%3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _randNum$6[ebp], edx

; 71   : 		switch(randNum)

	mov	edx, DWORD PTR _randNum$6[ebp]
	mov	DWORD PTR tv146[ebp], edx
	cmp	DWORD PTR tv146[ebp], 0
	je	SHORT $LN20@HandleInbo
	cmp	DWORD PTR tv146[ebp], 1
	je	$LN17@HandleInbo
	cmp	DWORD PTR tv146[ebp], 2
	je	$LN6@HandleInbo
	jmp	$LN21@HandleInbo
$LN20@HandleInbo:

; 72   : 		{
; 73   : 		case 0:
; 74   : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND1, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN30@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv163[ebp], eax
	jmp	SHORT $LN31@HandleInbo
$LN30@HandleInbo:
	mov	DWORD PTR tv163[ebp], 0
$LN31@HandleInbo:
	mov	ecx, DWORD PTR tv163[ebp]
	push	ecx
	push	286					; 0000011eH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 75   : 			//M.N. changed to 32767 -> flexibly use randomized value of max available eval indexes
; 76   : 			radioMessage->dataBlock.edata[4]	= 32767;

	mov	ecx, 2
	shl	ecx, 2
	mov	edx, 32767				; 00007fffH
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx

; 77   : 			radioMessage->dataBlock.edata[5]	= (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(index));

	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	edx, 2
	imul	edx, 5
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 78   : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN43@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN43@HandleInbo:
	test	eax, eax
	je	SHORT $LN19@HandleInbo

; 79   : 				radioMessage->dataBlock.edata[6]	= 4;

	mov	edx, 2
	imul	edx, 6
	mov	eax, 4
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 80   : 			else

	jmp	SHORT $LN18@HandleInbo
$LN19@HandleInbo:

; 81   : 				radioMessage->dataBlock.edata[6]	= -1;

	mov	edx, 2
	imul	edx, 6
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax
$LN18@HandleInbo:

; 82   : 			break;

	jmp	$LN21@HandleInbo
$LN17@HandleInbo:

; 83   : 
; 84   : 		case 1:
; 85   : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND2, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN32@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv211[ebp], eax
	jmp	SHORT $LN33@HandleInbo
$LN32@HandleInbo:
	mov	DWORD PTR tv211[ebp], 0
$LN33@HandleInbo:
	mov	eax, DWORD PTR tv211[ebp]
	push	eax
	push	287					; 0000011fH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 86   : 
; 87   : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN44@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN44@HandleInbo:
	test	eax, eax
	je	SHORT $LN16@HandleInbo

; 88   : 			{
; 89   : 				radioMessage->dataBlock.edata[3]	= (short)(rand()%3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	eax, 2
	imul	eax, 3
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+eax+64], dx

; 90   : 			}
; 91   : 			else

	jmp	SHORT $LN15@HandleInbo
$LN16@HandleInbo:

; 92   : 			{
; 93   : 				time_in_minutes =  TheCampaign.GetMinutesSinceMidnight();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ ; CampaignClass::GetMinutesSinceMidnight
	mov	DWORD PTR _time_in_minutes$[ebp], eax

; 94   : 				if (time_in_minutes < 180)//3am

	cmp	DWORD PTR _time_in_minutes$[ebp], 180	; 000000b4H
	jge	SHORT $LN14@HandleInbo

; 95   : 					tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
	jmp	SHORT $LN13@HandleInbo
$LN14@HandleInbo:

; 96   : 				else if(time_in_minutes < 720 )//noon

	cmp	DWORD PTR _time_in_minutes$[ebp], 720	; 000002d0H
	jge	SHORT $LN12@HandleInbo

; 97   : 					tod = 0;

	mov	DWORD PTR _tod$[ebp], 0
	jmp	SHORT $LN13@HandleInbo
$LN12@HandleInbo:

; 98   : 				else if(time_in_minutes < 1020 ) //5pm

	cmp	DWORD PTR _time_in_minutes$[ebp], 1020	; 000003fcH
	jge	SHORT $LN10@HandleInbo

; 99   : 					tod = 2;

	mov	DWORD PTR _tod$[ebp], 2

; 100  : 				else

	jmp	SHORT $LN13@HandleInbo
$LN10@HandleInbo:

; 101  : 					tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
$LN13@HandleInbo:

; 102  : 
; 103  : 				radioMessage->dataBlock.edata[3]	= (short)(3 + tod + (rand()%3)*3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	imul	edx, 3
	mov	eax, DWORD PTR _tod$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	mov	edx, 2
	imul	edx, 3
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+edx+64], cx
$LN15@HandleInbo:

; 104  : 			}
; 105  : 
; 106  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN45@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN45@HandleInbo:
	test	eax, eax
	je	SHORT $LN8@HandleInbo

; 107  : 				radioMessage->dataBlock.edata[4]	= 4;

	mov	ecx, 2
	shl	ecx, 2
	mov	edx, 4
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx

; 108  : 			else

	jmp	SHORT $LN7@HandleInbo
$LN8@HandleInbo:

; 109  : 				radioMessage->dataBlock.edata[4]	= -1;

	mov	ecx, 2
	shl	ecx, 2
	or	edx, -1
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx
$LN7@HandleInbo:

; 110  : 			break;

	jmp	$LN21@HandleInbo
$LN6@HandleInbo:

; 111  : 
; 112  : 		case 2:
; 113  : 			radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND3, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN34@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv269[ebp], eax
	jmp	SHORT $LN35@HandleInbo
$LN34@HandleInbo:
	mov	DWORD PTR tv269[ebp], 0
$LN35@HandleInbo:
	mov	edx, DWORD PTR tv269[ebp]
	push	edx
	push	288					; 00000120H
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 114  : 			radioMessage->dataBlock.edata[4]	= -1;

	mov	edx, 2
	shl	edx, 2
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 115  : 			radioMessage->dataBlock.edata[5]	= -1;

	mov	edx, 2
	imul	edx, 5
	or	eax, -1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 116  : 			radioMessage->dataBlock.edata[6]	= 32767;

	mov	edx, 2
	imul	edx, 6
	mov	eax, 32767				; 00007fffH
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 117  : 			radioMessage->dataBlock.edata[7]	= (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(index));

	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	ecx, 2
	imul	ecx, 7
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 118  : 			if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN46@HandleInbo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN46@HandleInbo:
	test	eax, eax
	je	SHORT $LN5@HandleInbo

; 119  : 				radioMessage->dataBlock.edata[8]	= 4;

	mov	eax, 2
	shl	eax, 3
	mov	ecx, 4
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 120  : 			else

	jmp	SHORT $LN21@HandleInbo
$LN5@HandleInbo:

; 121  : 				radioMessage->dataBlock.edata[8]	= -1;

	mov	eax, 2
	shl	eax, 3
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx
$LN21@HandleInbo:

; 122  : 			break;
; 123  : 		}
; 124  : 		
; 125  : 		radioMessage->dataBlock.time_to_play= delay;

	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	ecx, DWORD PTR _delay$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 126  : 		FalconSendMessage(radioMessage, TRUE);

	push	1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	push	edx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 127  : 	}
; 128  : 	else

	jmp	$LN28@HandleInbo
$LN23@HandleInbo:

; 129  : 	{
; 130  : 		VuListIterator		flightIter(flight->GetComponents());

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ ; CampBaseClass::GetComponents
	push	eax
	lea	ecx, DWORD PTR _flightIter$2[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 131  : 		aircraft = (AircraftClass*) flightIter.GetFirst();

	lea	ecx, DWORD PTR _flightIter$2[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _aircraft$[ebp], eax
$LN2@HandleInbo:

; 132  : 		while(aircraft)

	cmp	DWORD PTR _aircraft$[ebp], 0
	je	$LN1@HandleInbo

; 133  : 		{
; 134  : 			//all runways destroyed, divert 'em
; 135  : 			FalconATCCmdMessage* ATCCmdMessage = new FalconATCCmdMessage( aircraft->Id(), FalconLocalGame );

	push	74					; 0000004aH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN38@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN36@HandleInbo
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv364[ebp], eax
	jmp	SHORT $LN37@HandleInbo
$LN36@HandleInbo:
	mov	DWORD PTR tv364[ebp], 0
$LN37@HandleInbo:
	push	1
	mov	ecx, DWORD PTR tv364[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0FalconATCCmdMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconATCCmdMessage::FalconATCCmdMessage
	mov	DWORD PTR tv375[ebp], eax
	jmp	SHORT $LN39@HandleInbo
$LN38@HandleInbo:
	mov	DWORD PTR tv375[ebp], 0
$LN39@HandleInbo:
	mov	eax, DWORD PTR tv375[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _ATCCmdMessage$8[ebp], ecx

; 136  : 			ATCCmdMessage->dataBlock.from		= atc->Id();

	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _ATCCmdMessage$8[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx

; 137  : 			ATCCmdMessage->dataBlock.type		= FalconATCCmdMessage::Divert;

	mov	ecx, DWORD PTR _ATCCmdMessage$8[ebp]
	mov	DWORD PTR [ecx+56], 22			; 00000016H

; 138  : 			ATCCmdMessage->dataBlock.rwindex	= 0;

	xor	edx, edx
	mov	eax, DWORD PTR _ATCCmdMessage$8[ebp]
	mov	WORD PTR [eax+64], dx

; 139  : 			FalconSendMessage(ATCCmdMessage, FALSE);						// Send it

	push	0
	mov	ecx, DWORD PTR _ATCCmdMessage$8[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8

; 140  : 			aircraft = (AircraftClass*) flightIter.GetNext();

	lea	ecx, DWORD PTR _flightIter$2[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _aircraft$[ebp], eax

; 141  : 		}		

	jmp	$LN2@HandleInbo
$LN1@HandleInbo:

; 142  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flightIter$2[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN28@HandleInbo:

; 143  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z$0:
	lea	ecx, DWORD PTR _flightIter$2[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__unwindfunclet$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z ENDP ; HandleInboundFlight
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?RwTime@DigitalBrain@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RwTime@DigitalBrain@@QAEKXZ PROC			; DigitalBrain::RwTime, COMDAT
; _this$ = ecx

; 772  : 	VU_TIME RwTime(void)	{return rwtime;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+316]
	mov	esp, ebp
	pop	ebp
	ret	0
?RwTime@DigitalBrain@@QAEKXZ ENDP			; DigitalBrain::RwTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?Runway@DigitalBrain@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Runway@DigitalBrain@@QAEHXZ PROC			; DigitalBrain::Runway, COMDAT
; _this$ = ecx

; 771  : 	int		Runway(void)		{return rwIndex;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+304]
	mov	esp, ebp
	pop	ebp
	ret	0
?Runway@DigitalBrain@@QAEHXZ ENDP			; DigitalBrain::Runway
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ PROC	; DigitalBrain::ATCStatus, COMDAT
; _this$ = ecx

; 765  : 	AtcStatusEnum	ATCStatus(void)							{return atcstatus;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+328]
	mov	esp, ebp
	pop	ebp
	ret	0
?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ENDP	; DigitalBrain::ATCStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z PROC ; DigitalBrain::SetATCStatus, COMDAT
; _this$ = ecx

; 764  : 	void			SetATCStatus(AtcStatusEnum status)		{atcstatus = status;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ENDP ; DigitalBrain::SetATCStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?IsSetATC@DigitalBrain@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_flag$ = 8						; size = 4
?IsSetATC@DigitalBrain@@QAEHH@Z PROC			; DigitalBrain::IsSetATC, COMDAT
; _this$ = ecx

; 709  : 	int		IsSetATC(int flag)								{return (atcFlags & flag) && TRUE;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	and	ecx, DWORD PTR _flag$[ebp]
	je	SHORT $LN3@IsSetATC
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@IsSetATC
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsSetATC
$LN3@IsSetATC:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsSetATC:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSetATC@DigitalBrain@@QAEHH@Z ENDP			; DigitalBrain::IsSetATC
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?ClearATCFlag@DigitalBrain@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?ClearATCFlag@DigitalBrain@@QAEXH@Z PROC		; DigitalBrain::ClearATCFlag, COMDAT
; _this$ = ecx

; 708  : 	void	ClearATCFlag(int flag)							{atcFlags &= ~flag;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flag$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+300]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+300], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearATCFlag@DigitalBrain@@QAEXH@Z ENDP		; DigitalBrain::ClearATCFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?SetATCFlag@DigitalBrain@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetATCFlag@DigitalBrain@@QAEXH@Z PROC			; DigitalBrain::SetATCFlag, COMDAT
; _this$ = ecx

; 707  : 	void	SetATCFlag(int flag)							{atcFlags |= flag;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	or	ecx, DWORD PTR _flag$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+300], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetATCFlag@DigitalBrain@@QAEXH@Z ENDP			; DigitalBrain::SetATCFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?SetTrackPoint@DigitalBrain@@QAEXMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
?SetTrackPoint@DigitalBrain@@QAEXMMM@Z PROC		; DigitalBrain::SetTrackPoint, COMDAT
; _this$ = ecx

; 699  : 	void	SetTrackPoint(float x, float y, float z){ SetTrackPoint(x, y); trackZ = z; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMM@Z	; DigitalBrain::SetTrackPoint
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+156], xmm0
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTrackPoint@DigitalBrain@@QAEXMMM@Z ENDP		; DigitalBrain::SetTrackPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?SetTrackPoint@DigitalBrain@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetTrackPoint@DigitalBrain@@QAEXMM@Z PROC		; DigitalBrain::SetTrackPoint, COMDAT
; _this$ = ecx

; 698  : 	void	SetTrackPoint(float x, float y){ trackX = x; trackY=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax+148], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [ecx+152], xmm0
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTrackPoint@DigitalBrain@@QAEXMM@Z ENDP		; DigitalBrain::SetTrackPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\digi.h
;	COMDAT ?GetTaxiPoint@DigitalBrain@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTaxiPoint@DigitalBrain@@QAEHXZ PROC			; DigitalBrain::GetTaxiPoint, COMDAT
; _this$ = ecx

; 691  : 	int		GetTaxiPoint(void)								{return curTaxiPoint;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+332]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTaxiPoint@DigitalBrain@@QAEHXZ ENDP			; DigitalBrain::GetTaxiPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campbase.h
;	COMDAT ?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ PROC ; CampBaseClass::GetComponents, COMDAT
; _this$ = ecx

; 141  : 	TailInsertList *GetComponents() const		{	return components; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+160]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ ENDP ; CampBaseClass::GetComponents
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFalconATCMessage@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFalconATCMessage@@UAEPAXI@Z PROC			; FalconATCMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FalconATCMessage@@UAE@XZ		; FalconATCMessage::~FalconATCMessage
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFalconATCMessage@@UAEPAXI@Z ENDP			; FalconATCMessage::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
$T2 = -392						; size = 8
$T3 = -384						; size = 8
$T4 = -376						; size = 8
$T5 = -368						; size = 8
$T6 = -360						; size = 8
$T7 = -352						; size = 8
$T8 = -344						; size = 8
$T9 = -336						; size = 8
$T10 = -328						; size = 8
$T11 = -320						; size = 8
$T12 = -312						; size = 8
$T13 = -304						; size = 8
$T14 = -296						; size = 8
$T15 = -288						; size = 8
$T16 = -280						; size = 8
$T17 = -272						; size = 8
$T18 = -264						; size = 8
$T19 = -256						; size = 8
$T20 = -248						; size = 8
$T21 = -240						; size = 8
_flightIter$22 = -232					; size = 12
_tempinfo$23 = -220					; size = 4
tv3040 = -216						; size = 4
tv2172 = -212						; size = 4
tv2164 = -208						; size = 4
tv2168 = -204						; size = 4
tv2176 = -200						; size = 4
tv3042 = -196						; size = 4
_flight$24 = -192					; size = 4
tv1314 = -188						; size = 4
tv552 = -184						; size = 4
tv989 = -180						; size = 4
tv384 = -176						; size = 4
tv926 = -172						; size = 4
tv486 = -168						; size = 4
tv874 = -164						; size = 4
tv587 = -160						; size = 4
tv699 = -156						; size = 4
tv516 = -152						; size = 4
tv664 = -148						; size = 4
tv401 = -144						; size = 4
tv639 = -140						; size = 4
tv350 = -136						; size = 4
tv177 = -132						; size = 4
tv617 = -128						; size = 4
_z$ = -124						; size = 4
_dy$ = -120						; size = 4
_cosAngle$ = -116					; size = 4
_Runway$25 = -112					; size = 4
_dx$ = -108						; size = 4
tv1427 = -104						; size = 4
_delay$ = -100						; size = 4
tv1391 = -96						; size = 4
_time_in_minutes$ = -92					; size = 4
_Runway$26 = -88					; size = 4
_tod$ = -84						; size = 4
_baseY$ = -80						; size = 4
_taxiPoint$ = -76					; size = 4
_baseX$ = -72						; size = 4
_dist$ = -68						; size = 4
_finalHdg$ = -64					; size = 4
_element$27 = -60					; size = 4
_finalX$ = -56						; size = 4
_finalY$ = -52						; size = 4
_this$ = -48						; size = 4
_info$ = -44						; size = 4
_y$ = -40						; size = 4
_x$ = -36						; size = 4
_atc$ = -32						; size = 4
_radioMessage$ = -28					; size = 4
_atcBrain$28 = -24					; size = 4
_acBrain$29 = -20					; size = 4
_aircraft$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_autodisp$ = 8						; size = 1
?Process@FalconATCMessage@@MAEHE@Z PROC			; FalconATCMessage::Process
; _this$ = ecx

; 233  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Process@FalconATCMessage@@MAEHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 234  : 	AircraftClass *aircraft = (AircraftClass*)vuDatabase->Find(dataBlock.from );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _aircraft$[ebp], eax

; 235  : 	ObjectiveClass *atc = (ObjectiveClass*)vuDatabase->Find(EntityId());

	lea	eax, DWORD PTR $T15[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _atc$[ebp], eax

; 236  : 	runwayQueueStruct *info = NULL;

	mov	DWORD PTR _info$[ebp], 0

; 237  : 	FalconRadioChatterMessage *radioMessage = NULL;

	mov	DWORD PTR _radioMessage$[ebp], 0

; 238  : 	
; 239  : 	if (autodisp)

	movzx	eax, BYTE PTR _autodisp$[ebp]
	test	eax, eax
	je	SHORT $LN172@Process

; 240  : 		return 0;

	xor	eax, eax
	jmp	$LN173@Process
$LN172@Process:

; 241  : 
; 242  : 	float cosAngle=0.0F, dx=0.0F, dy=0.0F, finalHdg=0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _cosAngle$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _dx$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _dy$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _finalHdg$[ebp], xmm0

; 243  : 	float finalX=0.0F, finalY=0.0F, baseX=0.0F, baseY=0.0F, x=0.0F ,y=0.0F,z=0.0F, dist=0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _finalX$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _finalY$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _baseX$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _baseY$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _x$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _y$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _z$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _dist$[ebp], xmm0

; 244  : 	int	taxiPoint=0, tod=0, time_in_minutes=0;

	mov	DWORD PTR _taxiPoint$[ebp], 0
	mov	DWORD PTR _tod$[ebp], 0
	mov	DWORD PTR _time_in_minutes$[ebp], 0

; 245  : 	int delay = 7 * CampaignSeconds;

	mov	DWORD PTR _delay$[ebp], 7000		; 00001b58H

; 246  : 	if (!PlayerOptions.PlayerRadioVoice)

	movzx	ecx, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201
	test	ecx, ecx
	jne	SHORT $LN171@Process

; 247  : 	    delay = 500;

	mov	DWORD PTR _delay$[ebp], 500		; 000001f4H
$LN171@Process:

; 248  : 
; 249  : 	if (aircraft && aircraft->IsAirplane())

	cmp	DWORD PTR _aircraft$[ebp], 0
	je	$LN166@Process
	mov	edx, DWORD PTR _aircraft$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _aircraft$[ebp]
	mov	edx, DWORD PTR [eax+192]
	call	edx
	test	eax, eax
	je	$LN166@Process

; 250  : 	{      
; 251  : 		DigitalBrain *acBrain = aircraft->DBrain();

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ ; AircraftClass::DBrain
	mov	DWORD PTR _acBrain$29[ebp], eax

; 252  : 		ATCBrain*	atcBrain = NULL;

	mov	DWORD PTR _atcBrain$28[ebp], 0

; 253  : 
; 254  : 		if(atc)

	cmp	DWORD PTR _atc$[ebp], 0
	je	$LN169@Process

; 255  : 		{
; 256  : 			// RV - Biker - This should avoid CTD when calling clearance for landing on carrier
; 257  : 			if (!atc->IsObjective())

	mov	eax, DWORD PTR _atc$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _atc$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	jne	SHORT $LN168@Process

; 258  : 				return 0;

	xor	eax, eax
	jmp	$LN173@Process
$LN168@Process:

; 259  : 
; 260  : 			atcBrain = atc->brain;

	mov	ecx, DWORD PTR _atc$[ebp]
	mov	edx, DWORD PTR [ecx+240]
	mov	DWORD PTR _atcBrain$28[ebp], edx

; 261  : 			dx = aircraft->XPos() - atc->XPos();

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv2164[ebp]
	movss	xmm0, DWORD PTR tv2164[ebp]
	mov	ecx, DWORD PTR _atc$[ebp]
	movss	DWORD PTR tv3040[ebp], xmm0
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	fstp	DWORD PTR tv2168[ebp]
	movss	xmm0, DWORD PTR tv3040[ebp]
	subss	xmm0, DWORD PTR tv2168[ebp]
	movss	DWORD PTR _dx$[ebp], xmm0

; 262  : 			dy = aircraft->YPos() - atc->YPos();

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv2172[ebp]
	movss	xmm0, DWORD PTR tv2172[ebp]
	mov	ecx, DWORD PTR _atc$[ebp]
	movss	DWORD PTR tv3042[ebp], xmm0
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	fstp	DWORD PTR tv2176[ebp]
	movss	xmm0, DWORD PTR tv3042[ebp]
	subss	xmm0, DWORD PTR tv2176[ebp]
	movss	DWORD PTR _dy$[ebp], xmm0

; 263  : 			dist = dx*dx + dy*dy;

	movss	xmm0, DWORD PTR _dx$[ebp]
	mulss	xmm0, DWORD PTR _dx$[ebp]
	movss	xmm1, DWORD PTR _dy$[ebp]
	mulss	xmm1, DWORD PTR _dy$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _dist$[ebp], xmm0
$LN169@Process:

; 264  : 		}
; 265  : 
; 266  : 		switch (dataBlock.type)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv177[ebp], ecx
	cmp	DWORD PTR tv177[ebp], 8
	ja	$LN166@Process
	mov	edx, DWORD PTR tv177[ebp]
	jmp	DWORD PTR $LN211@Process[edx*4]
$LN165@Process:

; 267  : 		{
; 268  : 		case ContactApproach:
; 269  :         case RequestClearance:
; 270  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN163@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN161@Process
$LN163@Process:

; 271  : 			{
; 272  : 				if(aircraft->pctStrength < STRENGTH_PCT_FOR_EMERG_LDG)

	mov	ecx, DWORD PTR _aircraft$[ebp]
	movss	xmm0, DWORD PTR __real@3ecccccd
	comiss	xmm0, DWORD PTR [ecx+292]
	jbe	SHORT $LN162@Process

; 273  : 					SendCallToATC(aircraft, EntityId(), rcLANDCLEAREMERGENCY, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	104					; 00000068H
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H

; 274  : 				else

	jmp	SHORT $LN161@Process
$LN162@Process:

; 275  : 					SendCallToATC(aircraft, EntityId(), rcLANDCLEARANCE, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	103					; 00000067H
	lea	ecx, DWORD PTR $T19[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN161@Process:

; 276  : 			}
; 277  : 			
; 278  : 			if(atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	$LN102@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	$LN102@Process

; 279  : 			{
; 280  : 				info = atcBrain->InList(aircraft->Id());

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?InList@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@@Z ; ATCBrain::InList
	mov	DWORD PTR _info$[ebp], eax

; 281  : 				if( info )

	cmp	DWORD PTR _info$[ebp], 0
	je	$LN159@Process

; 282  : 				{
; 283  : 					cosAngle = atcBrain->DetermineAngle(aircraft, acBrain->Runway(), lOnFinal);

	push	11					; 0000000bH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?DetermineAngle@ATCBrain@@QAEMPAVAircraftClass@@HW4AtcStatusEnum@@@Z ; ATCBrain::DetermineAngle
	fstp	DWORD PTR _cosAngle$[ebp]

; 284  : 
; 285  : 					//if(info->status >= tReqTaxi)
; 286  : 					//if(info->status < tReqTaxi) // JB 010802 RTBing AI aircraft won't land. This compare was messed up.  Right? I hope so.
; 287  : 					if(info->status >= tReqTaxi) // JB It appears to work but this was called a bit much for my comfort level. We'll try another approach.

	mov	ecx, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [ecx+8], 19			; 00000013H
	jl	$LN158@Process

; 288  : 					{
; 289  : 						if(!aircraft->OnGround())

	mov	edx, DWORD PTR _aircraft$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _aircraft$[ebp]
	mov	edx, DWORD PTR [eax+148]
	call	edx
	test	eax, eax
	jne	$LN157@Process

; 290  : 						{
; 291  : 							if(dist < (TOWER_RANGE + 100) * NM_TO_FT * NM_TO_FT)

	movss	xmm0, DWORD PTR __real@50c76e79
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN156@Process

; 292  : 							{
; 293  : 								if(!aircraft->IsPlayer() && aircraft->pctStrength < STRENGTH_PCT_FOR_EMERG_LDG)

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	SHORT $LN155@Process
	mov	eax, DWORD PTR _aircraft$[ebp]
	movss	xmm0, DWORD PTR __real@3ecccccd
	comiss	xmm0, DWORD PTR [eax+292]
	jbe	SHORT $LN155@Process

; 294  : 									atcBrain->RequestEmerClearance(aircraft);

	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestEmerClearance@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestEmerClearance

; 295  : 								else

	jmp	SHORT $LN154@Process
$LN155@Process:

; 296  : 									atcBrain->RequestClearance(aircraft);

	push	0
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z ; ATCBrain::RequestClearance
$LN154@Process:
	jmp	$LN149@Process
$LN156@Process:

; 297  : 							}
; 298  : 							else if(dist < APPROACH_RANGE * NM_TO_FT * NM_TO_FT && dist >= (TOWER_RANGE + 100) * NM_TO_FT * NM_TO_FT)

	movss	xmm0, DWORD PTR __real@50f791f7
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN152@Process
	movss	xmm0, DWORD PTR _dist$[ebp]
	comiss	xmm0, DWORD PTR __real@50c76e79
	jb	SHORT $LN152@Process

; 299  : 							{
; 300  : 								if(!aircraft->IsPlayer() && aircraft->GetCampaignObject()->GetComponentLead() == aircraft)

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	SHORT $LN151@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	ecx, eax
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	cmp	eax, DWORD PTR _aircraft$[ebp]
	jne	SHORT $LN151@Process

; 301  : 									HandleInboundFlight( atc, (Flight)aircraft->GetCampaignObject());

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	push	eax
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z ; HandleInboundFlight
	add	esp, 8

; 302  : 								else

	jmp	SHORT $LN150@Process
$LN151@Process:

; 303  : 									HandleInbound(atc, aircraft);			

	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z ; HandleInbound
	add	esp, 8
$LN150@Process:

; 304  : 							}
; 305  : 							else

	jmp	$LN149@Process
$LN152@Process:

; 306  : 							{
; 307  : 								//note this comm should be rcOUTSIDEAIRSPACE, but Joe misnamed it
; 308  : 								radioMessage = CreateCallFromATC(atc, aircraft, rcOUTSIDEAIRSPEED, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN175@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv350[ebp], eax
	jmp	SHORT $LN176@Process
$LN175@Process:
	mov	DWORD PTR tv350[ebp], 0
$LN176@Process:
	mov	ecx, DWORD PTR tv350[ebp]
	push	ecx
	push	27					; 0000001bH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 309  : 								radioMessage->dataBlock.edata[4]	= (short)(rand()%2);

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN206@Process
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN206@Process:
	mov	ecx, 2
	shl	ecx, 2
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 310  : 								radioMessage->dataBlock.time_to_play= delay;

	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	ecx, DWORD PTR _delay$[ebp]
	mov	DWORD PTR [eax+56], ecx

; 311  : 								atcBrain->RemoveTraffic(aircraft->Id(), PtHeaderDataTable[info->rwindex].runwayNum);

	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx+20]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	edx, BYTE PTR [ecx+eax+24]
	push	edx
	lea	eax, DWORD PTR $T17[ebp]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveTraffic@ATCBrain@@QAEXVVU_ID@@H@Z ; ATCBrain::RemoveTraffic
$LN149@Process:

; 312  : 							}
; 313  : 							info->lastContacted = SimLibElapsedTime;

	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [eax+16], ecx
$LN157@Process:

; 314  : 						}
; 315  : 						break;

	jmp	$LN166@Process
	jmp	$LN131@Process
$LN158@Process:

; 316  : 					}
; 317  : 					else if(info->rwindex)

	mov	edx, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	$LN147@Process

; 318  : 					{
; 319  : 						switch(info->status)

	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv384[ebp], ecx
	cmp	DWORD PTR tv384[ebp], 18		; 00000012H
	ja	$LN145@Process
	mov	edx, DWORD PTR tv384[ebp]
	movzx	eax, BYTE PTR $LN202@Process[edx]
	jmp	DWORD PTR $LN212@Process[eax*4]
$LN144@Process:

; 320  : 						{
; 321  : 						case noATC:
; 322  : 
; 323  : 						case lReqClearance:
; 324  : 						case lReqEmerClearance:
; 325  : 
; 326  : 						case lIngressing:
; 327  : 						case lTakingPosition:
; 328  : 							ShiWarning("This should never happen!");
; 329  : 							radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND1, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN177@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv401[ebp], eax
	jmp	SHORT $LN178@Process
$LN177@Process:
	mov	DWORD PTR tv401[ebp], 0
$LN178@Process:
	mov	edx, DWORD PTR tv401[ebp]
	push	edx
	push	286					; 0000011eH
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 330  : 							//M.N. changed to 32767 -> flexibly use randomized value of max available eval indexes
; 331  : 							radioMessage->dataBlock.edata[4]	= 32767;

	mov	edx, 2
	shl	edx, 2
	mov	eax, 32767				; 00007fffH
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 332  : 							radioMessage->dataBlock.edata[5]	= (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(info->rwindex));

	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	ecx, 2
	imul	ecx, 5
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 333  : 							if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN207@Process
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN207@Process:
	test	eax, eax
	je	SHORT $LN143@Process

; 334  : 								radioMessage->dataBlock.edata[6]	= 4;

	mov	eax, 2
	imul	eax, 6
	mov	ecx, 4
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 335  : 							else

	jmp	SHORT $LN142@Process
$LN143@Process:

; 336  : 								radioMessage->dataBlock.edata[6]	= -1;

	mov	eax, 2
	imul	eax, 6
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx
$LN142@Process:

; 337  : 							break;

	jmp	$LN145@Process
$LN141@Process:

; 338  : 
; 339  : 						case lAborted:
; 340  : 							atcBrain->FindAbortPt(aircraft, &x, &y, &z);

	lea	eax, DWORD PTR _z$[ebp]
	push	eax
	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindAbortPt@ATCBrain@@QAEXPAVAircraftClass@@PAM11@Z ; ATCBrain::FindAbortPt

; 341  : 							radioMessage = CreateCallFromATC (atc, aircraft, rcATCGOAROUND, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	302					; 0000012eH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 342  : 					
; 343  : 							atcBrain->CalculateStandRateTurnToPt(aircraft, x, y, &finalHdg);

	lea	eax, DWORD PTR _finalHdg$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?CalculateStandRateTurnToPt@ATCBrain@@QAEHPAVAircraftClass@@MMPAM@Z ; ATCBrain::CalculateStandRateTurnToPt

; 344  : 							radioMessage->dataBlock.edata[3] = (short)FloatToInt32(finalHdg);

	push	ecx
	movss	xmm0, DWORD PTR _finalHdg$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	edx, 2
	imul	edx, 3
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 345  : 							//M.N. changed to 32767 -> flexibly use randomized value of max available eval indexes
; 346  : 							radioMessage->dataBlock.edata[4] = 32767;

	mov	edx, 2
	shl	edx, 2
	mov	eax, 32767				; 00007fffH
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 347  : 							break;

	jmp	$LN145@Process
$LN140@Process:

; 348  : 
; 349  : 						case lEmerHold:
; 350  : 						case lHolding:
; 351  : 							radioMessage = CreateCallFromATC (atc, aircraft, rcATCORBIT2, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN179@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv486[ebp], eax
	jmp	SHORT $LN180@Process
$LN179@Process:
	mov	DWORD PTR tv486[ebp], 0
$LN180@Process:
	mov	eax, DWORD PTR tv486[ebp]
	push	eax
	push	292					; 00000124H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 352  : 							radioMessage->dataBlock.edata[2] = -1; //altitude in thousands

	mov	eax, 2
	shl	eax, 1
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 353  : 							radioMessage->dataBlock.edata[3] = -1; //altitude in thousands

	mov	eax, 2
	imul	eax, 3
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 354  : 							break;

	jmp	$LN145@Process
$LN139@Process:

; 355  : 
; 356  : 						case lFirstLeg:
; 357  : 						case lToBase:
; 358  : 						case lToFinal:
; 359  : 							radioMessage = CreateCallFromATC(atc, aircraft, rcATCLANDSEQUENCE, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN181@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv516[ebp], eax
	jmp	SHORT $LN182@Process
$LN181@Process:
	mov	DWORD PTR tv516[ebp], 0
$LN182@Process:
	mov	ecx, DWORD PTR tv516[ebp]
	push	ecx
	push	301					; 0000012dH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 360  : 							radioMessage->dataBlock.edata[4] = (short)atcBrain->GetLandingNumber(info);

	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetLandingNumber@ATCBrain@@QAEHPAUrunwayQueueStruct@@@Z ; ATCBrain::GetLandingNumber
	mov	edx, 2
	shl	edx, 2
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 361  : 							//atcBrain->SendCmdMessage(aircraft, info);
; 362  : 							break;

	jmp	$LN145@Process
$LN138@Process:

; 363  : 
; 364  : 						case lOnFinal:
; 365  : 						case lClearToLand:
; 366  : 							if(aircraft->DBrain()->IsSetATC(DigitalBrain::ClearToLand))

	push	1024					; 00000400H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ ; AircraftClass::DBrain
	mov	ecx, eax
	call	?IsSetATC@DigitalBrain@@QAEHH@Z		; DigitalBrain::IsSetATC
	test	eax, eax
	je	SHORT $LN137@Process

; 367  : 							{
; 368  : 								radioMessage = CreateCallFromATC (atc, aircraft, rcCLEAREDLAND, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN183@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv552[ebp], eax
	jmp	SHORT $LN184@Process
$LN183@Process:
	mov	DWORD PTR tv552[ebp], 0
$LN184@Process:
	mov	eax, DWORD PTR tv552[ebp]
	push	eax
	push	38					; 00000026H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 369  : 								radioMessage->dataBlock.edata[4] = (short)atcBrain->GetRunwayName(atcBrain->GetOppositeRunway(acBrain->Runway()));

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetOppositeRunway@ATCBrain@@QAEHH@Z	; ATCBrain::GetOppositeRunway
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetRunwayName@ATCBrain@@QAEHH@Z	; ATCBrain::GetRunwayName
	mov	ecx, 2
	shl	ecx, 2
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 370  : 							}
; 371  : 							else

	jmp	SHORT $LN136@Process
$LN137@Process:

; 372  : 							{
; 373  : 								radioMessage = CreateCallFromATC(atc, aircraft, rcATCLANDSEQUENCE, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN185@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv587[ebp], eax
	jmp	SHORT $LN186@Process
$LN185@Process:
	mov	DWORD PTR tv587[ebp], 0
$LN186@Process:
	mov	ecx, DWORD PTR tv587[ebp]
	push	ecx
	push	301					; 0000012dH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 374  : 								radioMessage->dataBlock.edata[4] = (short)atcBrain->GetLandingNumber(info);

	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetLandingNumber@ATCBrain@@QAEHPAUrunwayQueueStruct@@@Z ; ATCBrain::GetLandingNumber
	mov	edx, 2
	shl	edx, 2
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax
$LN136@Process:

; 375  : 							}
; 376  : 							break;

	jmp	$LN145@Process
$LN135@Process:

; 377  : 
; 378  : 						case lLanded:
; 379  : 							radioMessage = CreateCallFromATC (atc, aircraft, rcTAXICLEAR, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN187@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv617[ebp], eax
	jmp	SHORT $LN188@Process
$LN187@Process:
	mov	DWORD PTR tv617[ebp], 0
$LN188@Process:
	mov	eax, DWORD PTR tv617[ebp]
	push	eax
	push	305					; 00000131H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 380  : 							break;

	jmp	$LN145@Process
$LN134@Process:

; 381  : 
; 382  : 						case lTaxiOff:
; 383  : 							//there isn't anything better to say, oh well :)
; 384  : 							radioMessage = CreateCallFromATC (atc, aircraft, rcTAXICLEAR, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN189@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv639[ebp], eax
	jmp	SHORT $LN190@Process
$LN189@Process:
	mov	DWORD PTR tv639[ebp], 0
$LN190@Process:
	mov	ecx, DWORD PTR tv639[ebp]
	push	ecx
	push	305					; 00000131H
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 385  : 							break;

	jmp	$LN145@Process
$LN133@Process:

; 386  : 
; 387  : 						case lEmergencyToBase:
; 388  : 						case lEmergencyToFinal:
; 389  : 						case lEmergencyOnFinal:
; 390  : 							atcBrain->RequestClearance(aircraft);

	push	0
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z ; ATCBrain::RequestClearance

; 391  : 							return 1;

	mov	eax, 1
	jmp	$LN173@Process

; 392  : 							break;

	jmp	$LN145@Process
$LN132@Process:

; 393  : 
; 394  : 						case lCrashed:
; 395  : 							radioMessage = CreateCallFromATC (atc, aircraft, rcCLEAREDEMERGLAND, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN191@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv664[ebp], eax
	jmp	SHORT $LN192@Process
$LN191@Process:
	mov	DWORD PTR tv664[ebp], 0
$LN192@Process:
	mov	eax, DWORD PTR tv664[ebp]
	push	eax
	push	36					; 00000024H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 396  : 							radioMessage->dataBlock.edata[3] = -1;

	mov	eax, 2
	imul	eax, 3
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 397  : 
; 398  : 							radioMessage->dataBlock.edata[4] = -1;

	mov	eax, 2
	shl	eax, 2
	or	ecx, -1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 399  : 							//M.N. changed to 32767 -> flexibly use randomized value of max available eval indexes
; 400  : 							radioMessage->dataBlock.edata[5] = 32767;

	mov	eax, 2
	imul	eax, 5
	mov	ecx, 32767				; 00007fffH
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx
$LN145@Process:

; 401  : 							break;
; 402  : 						}
; 403  : 					}
; 404  : 					else

	jmp	$LN131@Process
$LN147@Process:

; 405  : 					{
; 406  : 						radioMessage = CreateCallFromATC(atc, aircraft, rcCONTINUEINBOUND2, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN193@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv699[ebp], eax
	jmp	SHORT $LN194@Process
$LN193@Process:
	mov	DWORD PTR tv699[ebp], 0
$LN194@Process:
	mov	ecx, DWORD PTR tv699[ebp]
	push	ecx
	push	287					; 0000011fH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 407  : 
; 408  : 						if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN208@Process
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN208@Process:
	test	eax, eax
	je	SHORT $LN130@Process

; 409  : 						{
; 410  : 							radioMessage->dataBlock.edata[3]	= (short)(rand()%3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	eax, 2
	imul	eax, 3
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+eax+64], dx

; 411  : 						}
; 412  : 						else

	jmp	SHORT $LN129@Process
$LN130@Process:

; 413  : 						{
; 414  : 							time_in_minutes =  TheCampaign.GetMinutesSinceMidnight();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetMinutesSinceMidnight@CampaignClass@@QAEHXZ ; CampaignClass::GetMinutesSinceMidnight
	mov	DWORD PTR _time_in_minutes$[ebp], eax

; 415  : 							if (time_in_minutes < 180)//3am

	cmp	DWORD PTR _time_in_minutes$[ebp], 180	; 000000b4H
	jge	SHORT $LN128@Process

; 416  : 								tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
	jmp	SHORT $LN123@Process
$LN128@Process:

; 417  : 							else if(time_in_minutes < 720 )//noon

	cmp	DWORD PTR _time_in_minutes$[ebp], 720	; 000002d0H
	jge	SHORT $LN126@Process

; 418  : 								tod = 0;

	mov	DWORD PTR _tod$[ebp], 0
	jmp	SHORT $LN123@Process
$LN126@Process:

; 419  : 							else if(time_in_minutes < 1020 ) //5pm

	cmp	DWORD PTR _time_in_minutes$[ebp], 1020	; 000003fcH
	jge	SHORT $LN124@Process

; 420  : 								tod = 2;

	mov	DWORD PTR _tod$[ebp], 2

; 421  : 							else

	jmp	SHORT $LN123@Process
$LN124@Process:

; 422  : 								tod = 1;

	mov	DWORD PTR _tod$[ebp], 1
$LN123@Process:

; 423  : 
; 424  : 							radioMessage->dataBlock.edata[3]	= (short)(3 + tod + (rand()%3)*3);

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	imul	edx, 3
	mov	eax, DWORD PTR _tod$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	mov	edx, 2
	imul	edx, 3
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+edx+64], cx
$LN129@Process:

; 425  : 						}
; 426  : 
; 427  : 						if(rand()%2)

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN209@Process
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN209@Process:
	test	eax, eax
	je	SHORT $LN122@Process

; 428  : 							radioMessage->dataBlock.edata[4]	= 4;

	mov	ecx, 2
	shl	ecx, 2
	mov	edx, 4
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx

; 429  : 						else

	jmp	SHORT $LN121@Process
$LN122@Process:

; 430  : 							radioMessage->dataBlock.edata[4]	= -1;

	mov	ecx, 2
	shl	ecx, 2
	or	edx, -1
	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [eax+ecx+64], dx
$LN121@Process:

; 431  : 
; 432  : 						atcBrain->SendCmdMessage(aircraft, info);

	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?SendCmdMessage@ATCBrain@@QAEXPAVAircraftClass@@PAUrunwayQueueStruct@@@Z ; ATCBrain::SendCmdMessage
$LN131@Process:

; 433  : 					}
; 434  : 					if (radioMessage)

	cmp	DWORD PTR _radioMessage$[ebp], 0
	je	SHORT $LN120@Process

; 435  : 					{
; 436  : 						info->lastContacted = SimLibElapsedTime;

	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [eax+16], ecx

; 437  : 						if (PlayerOptions.PlayerRadioVoice)

	movzx	edx, BYTE PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+201
	test	edx, edx
	je	SHORT $LN119@Process

; 438  : 						    radioMessage->dataBlock.time_to_play= 2 * CampaignSeconds;

	mov	eax, DWORD PTR _radioMessage$[ebp]
	mov	DWORD PTR [eax+56], 2000		; 000007d0H

; 439  : 						else 

	jmp	SHORT $LN118@Process
$LN119@Process:

; 440  : 						    radioMessage->dataBlock.time_to_play= delay;

	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	edx, DWORD PTR _delay$[ebp]
	mov	DWORD PTR [ecx+56], edx
$LN118@Process:

; 441  : 						FalconSendMessage(radioMessage, TRUE);

	push	1
	mov	eax, DWORD PTR _radioMessage$[ebp]
	push	eax
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN120@Process:

; 442  : 					}
; 443  : 				}
; 444  : 				else

	jmp	$LN102@Process
$LN159@Process:

; 445  : 				{
; 446  : 					if(dist <= (TOWER_RANGE + 100) * NM_TO_FT * NM_TO_FT)

	movss	xmm0, DWORD PTR __real@50c76e79
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jb	$LN116@Process

; 447  : 					{
; 448  : 						if(aircraft->GetCampaignObject()->GetComponentLead() == aircraft){

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	ecx, eax
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	cmp	eax, DWORD PTR _aircraft$[ebp]
	jne	$LN115@Process

; 449  : 							AircraftClass *element = NULL;

	mov	DWORD PTR _element$27[ebp], 0

; 450  : 							Flight flight = (Flight)aircraft->GetCampaignObject();

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	DWORD PTR _flight$24[ebp], eax

; 451  : 							VuListIterator	flightIter(flight->GetComponents());

	mov	ecx, DWORD PTR _flight$24[ebp]
	call	?GetComponents@CampBaseClass@@QBEPAVTailInsertList@@XZ ; CampBaseClass::GetComponents
	push	eax
	lea	ecx, DWORD PTR _flightIter$22[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 452  : 							element = (AircraftClass*) flightIter.GetFirst();

	lea	ecx, DWORD PTR _flightIter$22[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _element$27[ebp], eax
$LN114@Process:

; 453  : 							while(element)

	cmp	DWORD PTR _element$27[ebp], 0
	je	$LN113@Process

; 454  : 							{
; 455  : 								runwayQueueStruct *tempinfo = atcBrain->InList(element->Id());

	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _element$27[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?InList@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@@Z ; ATCBrain::InList
	mov	DWORD PTR _tempinfo$23[ebp], eax

; 456  : 								if(!tempinfo)

	cmp	DWORD PTR _tempinfo$23[ebp], 0
	jne	$LN110@Process

; 457  : 								{
; 458  : 									if( !element->IsPlayer() && element->pctStrength < STRENGTH_PCT_FOR_EMERG_LDG)

	mov	ecx, DWORD PTR _element$27[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	$LN111@Process
	mov	ecx, DWORD PTR _element$27[ebp]
	movss	xmm0, DWORD PTR __real@3ecccccd
	comiss	xmm0, DWORD PTR [ecx+292]
	jbe	SHORT $LN111@Process

; 459  : 									{
; 460  : 										SendCallToATC(element, EntityId(), rcLANDCLEAREMERGENCY, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN195@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv874[ebp], eax
	jmp	SHORT $LN196@Process
$LN195@Process:
	mov	DWORD PTR tv874[ebp], 0
$LN196@Process:
	mov	eax, DWORD PTR tv874[ebp]
	push	eax
	push	104					; 00000068H
	lea	ecx, DWORD PTR $T21[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _element$27[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H

; 461  : 										atcBrain->RequestEmerClearance(element);

	mov	edx, DWORD PTR _element$27[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestEmerClearance@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestEmerClearance

; 462  : 									}
; 463  : 									else

	jmp	SHORT $LN110@Process
$LN111@Process:

; 464  : 										atcBrain->RequestClearance(element);

	push	0
	mov	eax, DWORD PTR _element$27[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z ; ATCBrain::RequestClearance
$LN110@Process:

; 465  : 								}
; 466  : 								element = (AircraftClass*) flightIter.GetNext();

	lea	ecx, DWORD PTR _flightIter$22[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _element$27[ebp], eax

; 467  : 							}

	jmp	$LN114@Process
$LN113@Process:

; 468  : 						}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flightIter$22[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator

; 469  : 						else

	jmp	$LN107@Process
$LN115@Process:

; 470  : 						{
; 471  : 							if(!aircraft->IsPlayer() && aircraft->pctStrength < STRENGTH_PCT_FOR_EMERG_LDG)

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	$LN108@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	movss	xmm0, DWORD PTR __real@3ecccccd
	comiss	xmm0, DWORD PTR [ecx+292]
	jbe	SHORT $LN108@Process

; 472  : 							{
; 473  : 								SendCallToATC(aircraft, EntityId(), rcLANDCLEAREMERGENCY, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN197@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv926[ebp], eax
	jmp	SHORT $LN198@Process
$LN197@Process:
	mov	DWORD PTR tv926[ebp], 0
$LN198@Process:
	mov	eax, DWORD PTR tv926[ebp]
	push	eax
	push	104					; 00000068H
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H

; 474  : 								atcBrain->RequestEmerClearance(aircraft);

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestEmerClearance@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestEmerClearance

; 475  : 							}
; 476  : 							else

	jmp	SHORT $LN107@Process
$LN108@Process:

; 477  : 								atcBrain->RequestClearance(aircraft);

	push	0
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z ; ATCBrain::RequestClearance
$LN107@Process:

; 478  : 						}

	jmp	$LN102@Process
$LN116@Process:

; 479  : 					}
; 480  : 					else if(dist < APPROACH_RANGE * NM_TO_FT * NM_TO_FT && dist > (TOWER_RANGE + 100) * NM_TO_FT * NM_TO_FT)

	movss	xmm0, DWORD PTR __real@50f791f7
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN105@Process
	movss	xmm0, DWORD PTR _dist$[ebp]
	comiss	xmm0, DWORD PTR __real@50c76e79
	jbe	SHORT $LN105@Process

; 481  : 					{
; 482  : 						if(aircraft->GetCampaignObject()->GetComponentLead() == aircraft)

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	mov	ecx, eax
	call	?GetComponentLead@CampBaseClass@@QAEPAVSimBaseClass@@XZ ; CampBaseClass::GetComponentLead
	cmp	eax, DWORD PTR _aircraft$[ebp]
	jne	SHORT $LN104@Process

; 483  : 							HandleInboundFlight( atc, (Flight)aircraft->GetCampaignObject());

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?HandleInboundFlight@@YAXPAVObjectiveClass@@PAVFlightClass@@@Z ; HandleInboundFlight
	add	esp, 8

; 484  : 						else

	jmp	SHORT $LN103@Process
$LN104@Process:

; 485  : 							HandleInbound(atc, aircraft);						

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?HandleInbound@@YAXPAVObjectiveClass@@PAVAircraftClass@@@Z ; HandleInbound
	add	esp, 8
$LN103@Process:

; 486  : 					}
; 487  : 					else

	jmp	$LN102@Process
$LN105@Process:

; 488  : 					{
; 489  : 						//note this comm should be rcOUTSIDEAIRSPACE, but Joe misnamed it
; 490  : 						radioMessage = CreateCallFromATC(atc, aircraft, rcOUTSIDEAIRSPEED, FalconLocalGame);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN199@Process
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv989[ebp], eax
	jmp	SHORT $LN200@Process
$LN199@Process:
	mov	DWORD PTR tv989[ebp], 0
$LN200@Process:
	mov	edx, DWORD PTR tv989[ebp]
	push	edx
	push	27					; 0000001bH
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 491  : 						radioMessage->dataBlock.edata[4]	= (short)(rand()%2);

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN210@Process
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN210@Process:
	mov	edx, 2
	shl	edx, 2
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [ecx+edx+64], ax

; 492  : 						radioMessage->dataBlock.time_to_play= delay;

	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	eax, DWORD PTR _delay$[ebp]
	mov	DWORD PTR [edx+56], eax

; 493  : 						FalconSendMessage(radioMessage, TRUE);

	push	1
	mov	ecx, DWORD PTR _radioMessage$[ebp]
	push	ecx
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN102@Process:

; 494  : 					}
; 495  : 				}
; 496  : 			}
; 497  : 			break;

	jmp	$LN166@Process
$LN101@Process:

; 498  : 			
; 499  :         case RequestEmerClearance:
; 500  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN99@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN100@Process
$LN99@Process:

; 501  : 				SendCallToATC(aircraft, EntityId(), rcLANDCLEAREMERGENCY, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	104					; 00000068H
	lea	eax, DWORD PTR $T13[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN100@Process:

; 502  : 			if(atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN98@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN98@Process

; 503  : 				atcBrain->RequestEmerClearance(aircraft);			

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestEmerClearance@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestEmerClearance
$LN98@Process:

; 504  : 			break;

	jmp	$LN166@Process
$LN97@Process:

; 505  : 		
; 506  :         case RequestTakeoff:
; 507  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN95@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN96@Process
$LN95@Process:

; 508  : 				SendCallToATC(aircraft, EntityId(), rcREADYFORDERARTURE, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	322					; 00000142H
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN96@Process:

; 509  : 			if(atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN94@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN94@Process

; 510  : 				atcBrain->RequestTakeoff(aircraft);

	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestTakeoff@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestTakeoff
$LN94@Process:

; 511  : 			break;

	jmp	$LN166@Process
$LN93@Process:

; 512  : 			
; 513  :         case RequestTaxi:
; 514  : #define TEST_RADIO 0
; 515  : #if TEST_RADIO
; 516  : 			// sfr: testing client problem
; 517  : 			// im just echoing an answer here, nothing more
; 518  : 			if(atcBrain && atc->IsLocal()){
; 519  : 				//SendCallFromAwacs((Flight)aircraft->GetCampaignObject(), rcNOTASKING , static_cast<VuTargetEntity*>(vuDatabase->Find(this->Sender())));
; 520  : 				SendCallFromATC(atc, aircraft, rcOUTSIDEAIRSPEED, static_cast<VuTargetEntity*>(vuDatabase->Find(aircraft->OwnerId())));
; 521  : 				//SendCallToATC(aircraft, atc->Id(), rcREADYFORDERARTURE, static_cast<VuTargetEntity*>(vuDatabase->Find(aircraft->OwnerId())));
; 522  : 			}
; 523  : #else
; 524  : 			// sfr: comment for testing... wanna hear only answer...
; 525  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal()){

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN91@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN92@Process
$LN91@Process:

; 526  : 				SendCallToATC(aircraft, EntityId(), rcREADYFORDERARTURE, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	322					; 00000142H
	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN92@Process:

; 527  : 			}
; 528  : 			if(atcBrain && atc->IsLocal()){

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN90@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN90@Process

; 529  : 				atcBrain->RequestTaxi(aircraft);

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestTaxi@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestTaxi
$LN90@Process:

; 530  : 			}
; 531  : 
; 532  : #endif
; 533  : 			break;

	jmp	$LN166@Process
$LN89@Process:

; 534  : // M.N. 2001-12-20
; 535  : 		case AbortApproach:
; 536  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN87@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN88@Process
$LN87@Process:

; 537  : 				SendCallToATC(aircraft, EntityId(), rcABORTAPPROACH, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	348					; 0000015cH
	lea	ecx, DWORD PTR $T20[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN88@Process:

; 538  : 				//atcBrain->AbortApproach(aircraft);//Cobra sfr: changed to match repo
; 539  : 			if (atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN86@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN86@Process

; 540  : 				atcBrain->AbortApproach(aircraft);

	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?AbortApproach@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::AbortApproach
$LN86@Process:

; 541  : 			break;

	jmp	$LN166@Process
$LN85@Process:

; 542  : 
; 543  : // RAS - 22Jan04 - Set flag for traffic in sight call 
; 544  : 		case TrafficInSight:
; 545  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN83@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN84@Process
$LN83@Process:

; 546  : 				SendCallToATC(aircraft, EntityId(), rcCOPY, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	101					; 00000065H
	lea	edx, DWORD PTR $T18[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN84@Process:

; 547  : 			if (atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN82@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN82@Process

; 548  : 				atcBrain->trafficInSightFlag = TRUE;

	mov	edx, DWORD PTR _atcBrain$28[ebp]
	mov	BYTE PTR [edx+56], 1
$LN82@Process:

; 549  : 			break;

	jmp	$LN166@Process
$LN81@Process:

; 550  : // TJL 08/16/04 - Set flag for Hotpit Refueling //Cobra 10/31/04 TJL
; 551  :  		case RequestHotpitRefuel:
; 552  : 			if(!aircraft->IsPlayer() || !aircraft->IsLocal())

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	je	SHORT $LN79@Process
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN80@Process
$LN79@Process:

; 553  :  				SendCallToATC(aircraft, EntityId(), rcCOPY, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	101					; 00000065H
	lea	ecx, DWORD PTR $T16[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EntityId@VuMessage@@QBE?AVVU_ID@@XZ	; VuMessage::EntityId
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	call	?SendCallToATC@@YAXPAVAircraftClass@@VVU_ID@@FPAVVuTargetEntity@@@Z ; SendCallToATC
	add	esp, 20					; 00000014H
$LN80@Process:

; 554  : 				aircraft->requestHotpitRefuel = TRUE; //Cobra 11/13/04 TJL will this make online work?

	mov	edx, DWORD PTR _aircraft$[ebp]
	mov	BYTE PTR [edx+895], 1

; 555  :  			if (atcBrain && atc->IsLocal())

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	SHORT $LN78@Process
	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN78@Process

; 556  :  				aircraft->requestHotpitRefuel = TRUE;

	mov	ecx, DWORD PTR _aircraft$[ebp]
	mov	BYTE PTR [ecx+895], 1
$LN78@Process:

; 557  :  			break;

	jmp	$LN166@Process
$LN77@Process:

; 558  : 
; 559  : 
; 560  : 		case UpdateStatus:
; 561  : 			if(atcBrain)

	cmp	DWORD PTR _atcBrain$28[ebp], 0
	je	$LN53@Process

; 562  : 			{
; 563  : 				if(atc->IsLocal())

	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	$LN61@Process

; 564  : 				{
; 565  : 					info = atcBrain->InList(aircraft->Id());

	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?InList@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@@Z ; ATCBrain::InList
	mov	DWORD PTR _info$[ebp], eax

; 566  : 					if(info)

	cmp	DWORD PTR _info$[ebp], 0
	je	$LN74@Process

; 567  : 					{
; 568  : 						switch(dataBlock.status)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+60]
	mov	DWORD PTR tv1314[ebp], ecx
	cmp	DWORD PTR tv1314[ebp], 28		; 0000001cH
	ja	$LN64@Process
	mov	edx, DWORD PTR tv1314[ebp]
	movzx	eax, BYTE PTR $LN203@Process[edx]
	jmp	DWORD PTR $LN213@Process[eax*4]
$LN71@Process:

; 569  : 						{
; 570  : 						case noATC:
; 571  : 							if(info->rwindex)

	mov	ecx, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN70@Process

; 572  : 								atcBrain->RemoveTraffic(aircraft->Id(), PtHeaderDataTable[info->rwindex].runwayNum);

	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx+20]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	edx, BYTE PTR [ecx+eax+24]
	push	edx
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveTraffic@ATCBrain@@QAEXVVU_ID@@H@Z ; ATCBrain::RemoveTraffic

; 573  : 							else

	jmp	SHORT $LN69@Process
$LN70@Process:

; 574  : 								atcBrain->RemoveInbound(info);

	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveInbound@ATCBrain@@QAEXPAUrunwayQueueStruct@@@Z ; ATCBrain::RemoveInbound
$LN69@Process:

; 575  : 							break;

	jmp	$LN72@Process
$LN68@Process:

; 576  : 						case lReqClearance:
; 577  : 						case lReqEmerClearance:
; 578  : 						case tReqTaxi:
; 579  : 						case tReqTakeoff:
; 580  : 						case lIngressing:
; 581  : 						case lTakingPosition:
; 582  : 							break;

	jmp	$LN72@Process
$LN67@Process:

; 583  : 						case tFlyOut:
; 584  : 							info->lastContacted = SimLibElapsedTime;

	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [ecx+16], edx

; 585  : 							info->status = noATC;

	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+8], 0

; 586  : 							break;

	jmp	$LN72@Process
$LN66@Process:

; 587  : 						case lCrashed:
; 588  : 							info->lastContacted = SimLibElapsedTime;

	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [ecx+16], edx

; 589  : 							info->status = lCrashed;

	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+8], 18			; 00000012H

; 590  : 							{
; 591  : 								atcBrain->RemoveFromAllOtherATCs(aircraft);

	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveFromAllOtherATCs@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RemoveFromAllOtherATCs

; 592  : 								int Runway = atcBrain->IsOverRunway(aircraft);

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?IsOverRunway@ATCBrain@@QAEHPAVAircraftClass@@@Z ; ATCBrain::IsOverRunway
	mov	DWORD PTR _Runway$26[ebp], eax

; 593  : 								if(GetQueue(Runway) != GetQueue(info->rwindex))

	mov	eax, DWORD PTR _Runway$26[ebp]
	push	eax
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN65@Process

; 594  : 								{
; 595  : 									atcBrain->RemoveTraffic(aircraft->Id(), GetQueue(info->rwindex));

	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveTraffic@ATCBrain@@QAEXVVU_ID@@H@Z ; ATCBrain::RemoveTraffic

; 596  : 									atcBrain->AddTraffic(aircraft->Id(), lCrashed, Runway, SimLibElapsedTime);

	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	push	eax
	mov	ecx, DWORD PTR _Runway$26[ebp]
	push	ecx
	push	18					; 00000012H
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?AddTraffic@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@W4AtcStatusEnum@@HJ@Z ; ATCBrain::AddTraffic
$LN65@Process:

; 597  : 								}
; 598  : 								atcBrain->FindNextEmergency(GetQueue(Runway));

	mov	eax, DWORD PTR _Runway$26[ebp]
	push	eax
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindNextEmergency@ATCBrain@@QAEXH@Z	; ATCBrain::FindNextEmergency

; 599  : 								atcBrain->SetEmergency(GetQueue(Runway));

	mov	ecx, DWORD PTR _Runway$26[ebp]
	push	ecx
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?SetEmergency@ATCBrain@@QAEXH@Z		; ATCBrain::SetEmergency

; 600  : 							}
; 601  : 							break;

	jmp	SHORT $LN72@Process
$LN64@Process:

; 602  : 						default:
; 603  : 							info->lastContacted = SimLibElapsedTime;

	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [edx+16], eax

; 604  : 							info->status = (AtcStatusEnum)dataBlock.status;

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+60]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN72@Process:

; 605  : 							break;
; 606  : 						}
; 607  : 					}
; 608  : 					else

	jmp	$LN61@Process
$LN74@Process:

; 609  : 					{
; 610  : 						//he thinks we already know about him, orig owner of atc must have dropped
; 611  : 						//offline, so we need to put him into the appropriate list
; 612  : 						switch(dataBlock.status)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+60]
	mov	DWORD PTR tv1391[ebp], edx
	mov	eax, DWORD PTR tv1391[ebp]
	sub	eax, 4
	mov	DWORD PTR tv1391[ebp], eax
	cmp	DWORD PTR tv1391[ebp], 23		; 00000017H
	ja	$LN55@Process
	mov	ecx, DWORD PTR tv1391[ebp]
	movzx	edx, BYTE PTR $LN204@Process[ecx]
	jmp	DWORD PTR $LN214@Process[edx*4]

; 613  : 						{
; 614  : 							case lIngressing:
; 615  : 								break;

	jmp	$LN61@Process
$LN59@Process:

; 616  : 							case lTakingPosition:
; 617  : 							case lAborted:
; 618  : 							case lEmerHold:
; 619  : 							case lHolding:
; 620  : 							case lFirstLeg:
; 621  : 							case lToBase:
; 622  : 							case lToFinal:
; 623  : 							case lOnFinal:
; 624  : 							case lLanded:
; 625  : 							case lTaxiOff:
; 626  : 							case lEmergencyToBase:
; 627  : 							case lEmergencyToFinal:
; 628  : 							case lEmergencyOnFinal:
; 629  : 							case lClearToLand:
; 630  : 								atcBrain->RequestClearance(aircraft);			

	push	0
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestClearance@ATCBrain@@QAEXPAVAircraftClass@@H@Z ; ATCBrain::RequestClearance

; 631  : 								break;

	jmp	SHORT $LN61@Process
$LN58@Process:

; 632  : 							case lCrashed:
; 633  : 								{
; 634  : 									atcBrain->RemoveFromAllOtherATCs(aircraft);

	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveFromAllOtherATCs@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RemoveFromAllOtherATCs

; 635  : 									int Runway = atcBrain->IsOverRunway(aircraft);

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?IsOverRunway@ATCBrain@@QAEHPAVAircraftClass@@@Z ; ATCBrain::IsOverRunway
	mov	DWORD PTR _Runway$25[ebp], eax

; 636  : 									atcBrain->AddTraffic(aircraft->Id(), lCrashed, Runway, SimLibElapsedTime);

	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	push	eax
	mov	ecx, DWORD PTR _Runway$25[ebp]
	push	ecx
	push	18					; 00000012H
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?AddTraffic@ATCBrain@@QAEPAUrunwayQueueStruct@@VVU_ID@@W4AtcStatusEnum@@HJ@Z ; ATCBrain::AddTraffic

; 637  : 									atcBrain->FindNextEmergency(GetQueue(Runway));

	mov	eax, DWORD PTR _Runway$25[ebp]
	push	eax
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindNextEmergency@ATCBrain@@QAEXH@Z	; ATCBrain::FindNextEmergency

; 638  : 									atcBrain->SetEmergency(GetQueue(Runway));

	mov	ecx, DWORD PTR _Runway$25[ebp]
	push	ecx
	call	?GetQueue@@YAHH@Z			; GetQueue
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?SetEmergency@ATCBrain@@QAEXH@Z		; ATCBrain::SetEmergency

; 639  : 								}
; 640  : 								break;

	jmp	SHORT $LN61@Process
$LN57@Process:

; 641  : 							case tEmerStop:
; 642  : 							case tTaxi:
; 643  : 							case tHoldShort:
; 644  : 							case tPrepToTakeRunway:
; 645  : 							case tTakeRunway:
; 646  : 							case tTakeoff:
; 647  : 								atcBrain->RequestTaxi(aircraft);

	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RequestTaxi@ATCBrain@@QAEXPAVAircraftClass@@@Z ; ATCBrain::RequestTaxi
$LN55@Process:
$LN61@Process:

; 648  : 								break;
; 649  : 							case tFlyOut:
; 650  : 								break;
; 651  : 							default:
; 652  : 								break;
; 653  : 						}
; 654  : 					}
; 655  : 				}
; 656  : 
; 657  : 				//update track point, taxi point, timer, status, etc...
; 658  : 				switch(dataBlock.status)

	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+60]
	mov	DWORD PTR tv1427[ebp], ecx
	mov	edx, DWORD PTR tv1427[ebp]
	sub	edx, 3
	mov	DWORD PTR tv1427[ebp], edx
	cmp	DWORD PTR tv1427[ebp], 26		; 0000001aH
	ja	$LN2@Process
	mov	eax, DWORD PTR tv1427[ebp]
	jmp	DWORD PTR $LN215@Process[eax*4]

; 659  : 				{
; 660  : 				case noATC:
; 661  : 					break;

	jmp	$LN53@Process

; 662  : 				case lClearToLand:
; 663  : 					break;

	jmp	$LN53@Process
$LN50@Process:

; 664  : 				case lIngressing:
; 665  : 				case lTakingPosition:
; 666  : 					atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 667  : 					acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, lTakingPosition));

	push	4
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 668  : 					break;

	jmp	$LN53@Process
$LN49@Process:

; 669  : 				case lEmerHold:
; 670  : 				case lHolding:
; 671  : 					acBrain->SetTrackPoint(aircraft->XPos(), aircraft->YPos(), atcBrain->GetAltitude(aircraft, lHolding));

	push	7
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?YPos@VuEntity@@QBEMXZ			; VuEntity::YPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?XPos@VuEntity@@QBEMXZ			; VuEntity::XPos
	push	ecx
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 672  : 					break;

	jmp	$LN53@Process
$LN48@Process:

; 673  : 
; 674  : 				case lFirstLeg:				
; 675  : 					if(acBrain->ATCStatus() != lFirstLeg && acBrain->ATCStatus() <= lOnFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 8
	je	$LN47@Process
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 11					; 0000000bH
	jg	$LN47@Process

; 676  : 					{
; 677  : 						atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &finalX, &finalY);

	lea	eax, DWORD PTR _finalY$[ebp]
	push	eax
	lea	ecx, DWORD PTR _finalX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 678  : 						cosAngle = atcBrain->DetermineAngle(aircraft, acBrain->Runway(), lFirstLeg);

	push	8
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?DetermineAngle@ATCBrain@@QAEMPAVAircraftClass@@HW4AtcStatusEnum@@@Z ; ATCBrain::DetermineAngle
	fstp	DWORD PTR _cosAngle$[ebp]

; 679  : 						if(cosAngle < 0.0F)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _cosAngle$[ebp]
	jbe	SHORT $LN46@Process

; 680  : 						{
; 681  : 							atcBrain->FindBasePt(aircraft, acBrain->Runway(), finalX, finalY, &baseX, &baseY);

	lea	ecx, DWORD PTR _baseY$[ebp]
	push	ecx
	lea	edx, DWORD PTR _baseX$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindBasePt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HMMPAM1@Z ; ATCBrain::FindBasePt

; 682  : 							atcBrain->FindFirstLegPt(aircraft, acBrain->Runway(), acBrain->RwTime(), baseX, baseY, TRUE, &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	push	1
	push	ecx
	movss	xmm0, DWORD PTR _baseY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?RwTime@DigitalBrain@@QAEKXZ		; DigitalBrain::RwTime
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFirstLegPt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HKMMHPAM1@Z ; ATCBrain::FindFirstLegPt

; 683  : 						}
; 684  : 						else

	jmp	SHORT $LN45@Process
$LN46@Process:

; 685  : 						{
; 686  : 							atcBrain->FindFirstLegPt(aircraft, acBrain->Runway(), acBrain->RwTime(), finalX, finalY, FALSE, &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	push	0
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?RwTime@DigitalBrain@@QAEKXZ		; DigitalBrain::RwTime
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFirstLegPt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HKMMHPAM1@Z ; ATCBrain::FindFirstLegPt
$LN45@Process:

; 687  : 						}
; 688  : 
; 689  : 						acBrain->SetATCStatus(lFirstLeg);

	push	8
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 690  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, lFirstLeg));

	push	8
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 691  : 						acBrain->CalculateNextTurnDistance();

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?CalculateNextTurnDistance@DigitalBrain@@QAEMXZ ; DigitalBrain::CalculateNextTurnDistance
	fstp	ST(0)
$LN47@Process:

; 692  : 					}
; 693  : 
; 694  : 					if( !aircraft->IsPlayer() )

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	SHORT $LN44@Process

; 695  : 					{
; 696  : 						atcBrain->MakeVectorCall(aircraft, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?MakeVectorCall@ATCBrain@@QAEXPAVAircraftClass@@PAVVuTargetEntity@@@Z ; ATCBrain::MakeVectorCall
$LN44@Process:

; 697  : 					}
; 698  : 					break;

	jmp	$LN53@Process
$LN43@Process:

; 699  : 
; 700  : 				case lToBase:
; 701  : 					if(acBrain->ATCStatus() != lToBase && acBrain->ATCStatus() <= lOnFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 9
	je	$LN42@Process
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 11					; 0000000bH
	jg	$LN42@Process

; 702  : 					{
; 703  : 						atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &finalX, &finalY);

	lea	eax, DWORD PTR _finalY$[ebp]
	push	eax
	lea	ecx, DWORD PTR _finalX$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 704  : 						atcBrain->FindBasePt(aircraft, acBrain->Runway(), finalX, finalY, &baseX, &baseY);

	lea	eax, DWORD PTR _baseY$[ebp]
	push	eax
	lea	ecx, DWORD PTR _baseX$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindBasePt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HMMPAM1@Z ; ATCBrain::FindBasePt

; 705  : 						acBrain->SetATCStatus(lToBase);

	push	9
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 706  : 						acBrain->SetTrackPoint(baseX, baseY, atcBrain->GetAltitude(aircraft, lToBase));

	push	9
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _baseY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 707  : 						acBrain->CalculateNextTurnDistance();

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?CalculateNextTurnDistance@DigitalBrain@@QAEMXZ ; DigitalBrain::CalculateNextTurnDistance
	fstp	ST(0)
$LN42@Process:

; 708  : 					}
; 709  : 
; 710  : 					if( !aircraft->IsPlayer() )

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	SHORT $LN41@Process

; 711  : 					{
; 712  : 						atcBrain->MakeVectorCall(aircraft, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?MakeVectorCall@ATCBrain@@QAEXPAVAircraftClass@@PAVVuTargetEntity@@@Z ; ATCBrain::MakeVectorCall
$LN41@Process:

; 713  : 					}
; 714  : 					break;

	jmp	$LN53@Process
$LN40@Process:

; 715  : 
; 716  : 				case lToFinal:
; 717  : 					if(acBrain->ATCStatus() != lToFinal && acBrain->ATCStatus() <= lOnFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN39@Process
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 11					; 0000000bH
	jg	SHORT $LN39@Process

; 718  : 					{
; 719  : 						atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &finalX, &finalY);

	lea	edx, DWORD PTR _finalY$[ebp]
	push	edx
	lea	eax, DWORD PTR _finalX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 720  : 						acBrain->SetATCStatus(lToFinal);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 721  : 						acBrain->SetTrackPoint(finalX, finalY, atcBrain->GetAltitude(aircraft, lToFinal));

	push	10					; 0000000aH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 722  : 						acBrain->CalculateNextTurnDistance();

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?CalculateNextTurnDistance@DigitalBrain@@QAEMXZ ; DigitalBrain::CalculateNextTurnDistance
	fstp	ST(0)
$LN39@Process:

; 723  : 					}
; 724  : 
; 725  : 					if( !aircraft->IsPlayer() )

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	SHORT $LN38@Process

; 726  : 					{
; 727  : 						atcBrain->MakeVectorCall(aircraft, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?MakeVectorCall@ATCBrain@@QAEXPAVAircraftClass@@PAVVuTargetEntity@@@Z ; ATCBrain::MakeVectorCall
$LN38@Process:

; 728  : 					}
; 729  : 					break;

	jmp	$LN53@Process
$LN37@Process:

; 730  : 
; 731  : 				case lOnFinal:
; 732  : 					TranslatePointData (atc, GetFirstPt(acBrain->Runway()), &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 733  : 					//if we sent the message we already know this				
; 734  : 					if(acBrain->ATCStatus() != lOnFinal && acBrain->ATCStatus() <= lOnFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 11					; 0000000bH
	je	SHORT $LN36@Process
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 11					; 0000000bH
	jg	SHORT $LN36@Process

; 735  : 					{						
; 736  : 						acBrain->SetATCStatus(lOnFinal);

	push	11					; 0000000bH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 737  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, lOnFinal));

	push	11					; 0000000bH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint

; 738  : 						acBrain->CalculateNextTurnDistance();

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?CalculateNextTurnDistance@DigitalBrain@@QAEMXZ ; DigitalBrain::CalculateNextTurnDistance
	fstp	ST(0)
$LN36@Process:

; 739  : 					}
; 740  : 
; 741  : 					if( !aircraft->IsPlayer() )

	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?IsPlayer@FalconEntity@@QAEHXZ		; FalconEntity::IsPlayer
	test	eax, eax
	jne	$LN35@Process

; 742  : 					{
; 743  : 						radioMessage = CreateCallFromATC (atc, aircraft, rcTURNTOFINAL, FalconLocalSession);

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	push	eax
	push	294					; 00000126H
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?CreateCallFromATC@@YAPAVFalconRadioChatterMessage@@PAVObjectiveClass@@PAVAircraftClass@@FPAVVuTargetEntity@@@Z ; CreateCallFromATC
	add	esp, 16					; 00000010H
	mov	DWORD PTR _radioMessage$[ebp], eax

; 744  : #if 0
; 745  : 						//MI Turn final for AI fix
; 746  : 						if(atcBrain->CalculateStandRateTurnToPt(aircraft, x, y, &finalHdg) > 0)
; 747  : 							radioMessage->dataBlock.edata[2] = 1;
; 748  : 						else
; 749  : 							radioMessage->dataBlock.edata[2] = 0;
; 750  : #else
; 751  : 						if(atcBrain->CalculateStandRateTurnToPt(aircraft, x, y, &finalHdg) > 0)

	lea	ecx, DWORD PTR _finalHdg$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?CalculateStandRateTurnToPt@ATCBrain@@QAEHPAVAircraftClass@@MMPAM@Z ; ATCBrain::CalculateStandRateTurnToPt
	test	eax, eax
	jle	SHORT $LN34@Process

; 752  : 							radioMessage->dataBlock.edata[2] = 0;

	mov	eax, 2
	shl	eax, 1
	xor	ecx, ecx
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 753  : 						else

	jmp	SHORT $LN33@Process
$LN34@Process:

; 754  : 							radioMessage->dataBlock.edata[2] = 1;

	mov	eax, 2
	shl	eax, 1
	mov	ecx, 1
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx
$LN33@Process:

; 755  : #endif	
; 756  : 						finalHdg = PtHeaderDataTable[acBrain->Runway()].data + 180.0F;

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	edx, WORD PTR [ecx+eax+10]
	cvtsi2ss xmm0, edx
	addss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR _finalHdg$[ebp], xmm0

; 757  : 						if(finalHdg > 360)

	movss	xmm0, DWORD PTR _finalHdg$[ebp]
	comiss	xmm0, DWORD PTR __real@43b40000
	jbe	SHORT $LN32@Process

; 758  : 							finalHdg -= 360;

	movss	xmm0, DWORD PTR _finalHdg$[ebp]
	subss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR _finalHdg$[ebp], xmm0
$LN32@Process:

; 759  : 
; 760  : 						radioMessage->dataBlock.edata[3] = (short)FloatToInt32(finalHdg);

	push	ecx
	movss	xmm0, DWORD PTR _finalHdg$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	ecx, 2
	imul	ecx, 3
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+ecx+64], ax

; 761  : 						//M.N. changed to 32767 -> flexibly use randomized value of max available eval indexes
; 762  : 						radioMessage->dataBlock.edata[4] = 32767; //vector type

	mov	eax, 2
	shl	eax, 2
	mov	ecx, 32767				; 00007fffH
	mov	edx, DWORD PTR _radioMessage$[ebp]
	mov	WORD PTR [edx+eax+64], cx

; 763  : 						FalconSendMessage(radioMessage, TRUE);

	push	1
	mov	eax, DWORD PTR _radioMessage$[ebp]
	push	eax
	call	?FalconSendMessage@@YAXPAVVuMessage@@H@Z ; FalconSendMessage
	add	esp, 8
$LN35@Process:

; 764  : 					}
; 765  : 					break;

	jmp	$LN53@Process
$LN31@Process:

; 766  : 
; 767  : 
; 768  : 				case lLanded:
; 769  : 					//if we sent the message we already know this	
; 770  : 					if(acBrain->ATCStatus() != lLanded)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN30@Process

; 771  : 					{
; 772  : 						acBrain->SetATCStatus(lLanded);

	push	13					; 0000000dH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 773  : 						taxiPoint = GetFirstPt(acBrain->Runway());

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	mov	DWORD PTR _taxiPoint$[ebp], eax

; 774  : 						TranslatePointData (atc,GetNextPt(taxiPoint) , &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _taxiPoint$[ebp]
	push	eax
	call	?GetNextPt@@YAHH@Z			; GetNextPt
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 775  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, lLanded));

	push	13					; 0000000dH
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN30@Process:

; 776  : 					}
; 777  : 					break;

	jmp	$LN53@Process

; 778  : 
; 779  : 				case lTaxiOff:
; 780  : 					break;

	jmp	$LN53@Process
$LN28@Process:

; 781  : 
; 782  : 				case lAborted:					
; 783  : 					if(acBrain->ATCStatus() != lAborted)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 5
	je	SHORT $LN27@Process

; 784  : 					{
; 785  : 						atcBrain->FindAbortPt(aircraft, &x, &y, &z);

	lea	eax, DWORD PTR _z$[ebp]
	push	eax
	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindAbortPt@ATCBrain@@QAEXPAVAircraftClass@@PAM11@Z ; ATCBrain::FindAbortPt

; 786  : 						acBrain->SetATCStatus(lAborted);					

	push	5
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 787  : 						acBrain->SetTrackPoint(x, y, z);

	push	ecx
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN27@Process:

; 788  : 					}
; 789  : 
; 790  : 					if(atc->IsLocal())

	mov	ecx, DWORD PTR _atc$[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@Process

; 791  : 					{
; 792  : 						atcBrain->RemoveTraffic(aircraft->Id(), PtHeaderDataTable[acBrain->Runway()].runwayNum);

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	imul	eax, 28					; 0000001cH
	mov	edx, DWORD PTR ?PtHeaderDataTable@@3PAUPtHeaderDataType@@A ; PtHeaderDataTable
	movsx	eax, BYTE PTR [edx+eax+24]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?RemoveTraffic@ATCBrain@@QAEXVVU_ID@@H@Z ; ATCBrain::RemoveTraffic
$LN26@Process:

; 793  : 					}
; 794  : 					break;

	jmp	$LN53@Process
$LN25@Process:

; 795  : 
; 796  : 				case lEmergencyToBase:
; 797  : 					if(acBrain->ATCStatus() != lEmergencyToBase)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 15					; 0000000fH
	je	$LN24@Process

; 798  : 					{
; 799  : 						atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &finalX, &finalY);

	lea	ecx, DWORD PTR _finalY$[ebp]
	push	ecx
	lea	edx, DWORD PTR _finalX$[ebp]
	push	edx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 800  : 						atcBrain->FindBasePt(aircraft, acBrain->Runway(), finalX, finalY, &baseX, &baseY);

	lea	ecx, DWORD PTR _baseY$[ebp]
	push	ecx
	lea	edx, DWORD PTR _baseX$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindBasePt@ATCBrain@@QAE?AW4AtcStatusEnum@@PAVAircraftClass@@HMMPAM1@Z ; ATCBrain::FindBasePt

; 801  : 						acBrain->SetATCStatus(lEmergencyToBase);

	push	15					; 0000000fH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 802  : 						acBrain->SetTrackPoint(baseX, baseY, atcBrain->GetAltitude(aircraft, lEmergencyToBase));

	push	15					; 0000000fH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _baseY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _baseX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN24@Process:

; 803  : 					}
; 804  : 					break;

	jmp	$LN53@Process
$LN23@Process:

; 805  : 
; 806  : 				case lEmergencyToFinal:
; 807  : 					if(acBrain->ATCStatus() != lEmergencyToFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 16					; 00000010H
	je	SHORT $LN22@Process

; 808  : 					{
; 809  : 						atcBrain->FindFinalPt(aircraft, acBrain->Runway(), &finalX, &finalY);

	lea	edx, DWORD PTR _finalY$[ebp]
	push	edx
	lea	eax, DWORD PTR _finalX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindFinalPt@ATCBrain@@QAEXPAVAircraftClass@@HPAM1@Z ; ATCBrain::FindFinalPt

; 810  : 						acBrain->SetATCStatus(lEmergencyToFinal);

	push	16					; 00000010H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 811  : 						acBrain->SetTrackPoint(finalX, finalY, atcBrain->GetAltitude(aircraft, lEmergencyToFinal));

	push	16					; 00000010H
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _finalY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _finalX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN22@Process:

; 812  : 					}
; 813  : 					break;

	jmp	$LN53@Process
$LN21@Process:

; 814  : 
; 815  : 				case lEmergencyOnFinal:
; 816  : 					if(acBrain->ATCStatus() != lEmergencyOnFinal)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 17					; 00000011H
	je	SHORT $LN20@Process

; 817  : 					{
; 818  : 						TranslatePointData (atc, GetFirstPt(acBrain->Runway()), &x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _atc$[ebp]
	push	edx
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 819  : 						acBrain->SetATCStatus(lEmergencyOnFinal);

	push	17					; 00000011H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 820  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, lEmergencyOnFinal));

	push	17					; 00000011H
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN20@Process:

; 821  : 					}
; 822  : 					break;

	jmp	$LN53@Process
$LN19@Process:

; 823  : 
; 824  : 				case lCrashed:
; 825  : 					acBrain->SetATCStatus(lCrashed);

	push	18					; 00000012H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 826  : 					break;

	jmp	$LN53@Process
$LN18@Process:

; 827  : 
; 828  : 				case tEmerStop:
; 829  : 					acBrain->SetATCStatus(tEmerStop);

	push	21					; 00000015H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 830  : 					break;

	jmp	$LN53@Process
$LN17@Process:

; 831  : 
; 832  : 				case tTaxi:
; 833  : 					if(acBrain->ATCStatus() != tTaxi)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 22					; 00000016H
	je	SHORT $LN16@Process

; 834  : 					{
; 835  : 						acBrain->SetATCStatus(tTaxi);

	push	22					; 00000016H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 836  : 						TranslatePointData (atc,acBrain->GetTaxiPoint() , &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?GetTaxiPoint@DigitalBrain@@QAEHXZ	; DigitalBrain::GetTaxiPoint
	push	eax
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 837  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, tTaxi));

	push	22					; 00000016H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN16@Process:

; 838  : 					}
; 839  : 					break;

	jmp	$LN53@Process
$LN15@Process:

; 840  : 
; 841  : 				case tHoldShort:
; 842  : 					acBrain->ClearATCFlag(DigitalBrain::PermitRunway);

	push	2
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ClearATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::ClearATCFlag

; 843  : 					acBrain->ClearATCFlag(DigitalBrain::PermitTakeoff);

	push	4
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ClearATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::ClearATCFlag

; 844  : 
; 845  : 					if(acBrain->ATCStatus() != tHoldShort)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 24					; 00000018H
	je	SHORT $LN14@Process

; 846  : 					{
; 847  : 						acBrain->SetATCStatus(tHoldShort);

	push	24					; 00000018H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 848  : 						taxiPoint = GetFirstPt(acBrain->Runway());

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	call	?GetFirstPt@@YAHH@Z			; GetFirstPt
	add	esp, 4
	mov	DWORD PTR _taxiPoint$[ebp], eax

; 849  : 						taxiPoint = GetNextPt(taxiPoint);

	mov	edx, DWORD PTR _taxiPoint$[ebp]
	push	edx
	call	?GetNextPt@@YAHH@Z			; GetNextPt
	add	esp, 4
	mov	DWORD PTR _taxiPoint$[ebp], eax

; 850  : 						TranslatePointData (atc,taxiPoint , &x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _taxiPoint$[ebp]
	push	edx
	mov	eax, DWORD PTR _atc$[ebp]
	push	eax
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H

; 851  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, tHoldShort));

	push	24					; 00000018H
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN14@Process:

; 852  : 					}
; 853  : 					break;

	jmp	$LN53@Process
$LN13@Process:

; 854  : 
; 855  : 				case tPrepToTakeRunway:
; 856  : 					acBrain->SetATCFlag(DigitalBrain::PermitTakeRunway);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::SetATCFlag

; 857  : 					if(acBrain->ATCStatus() != tTaxi)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 22					; 00000016H
	je	$LN12@Process

; 858  : 					{
; 859  : 						acBrain->SetATCStatus(tTaxi);

	push	22					; 00000016H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 860  : 						if(PtDataTable[acBrain->GetTaxiPoint()].type == TakeoffPt)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?GetTaxiPoint@DigitalBrain@@QAEHXZ	; DigitalBrain::GetTaxiPoint
	imul	eax, 12					; 0000000cH
	mov	edx, DWORD PTR ?PtDataTable@@3PAUPtDataType@@A ; PtDataTable
	movzx	eax, BYTE PTR [edx+eax+8]
	cmp	eax, 2
	jne	SHORT $LN11@Process

; 861  : 							atcBrain->FindTakeoffPt((Flight)aircraft->GetCampaignObject(), aircraft->vehicleInUnit, acBrain->Runway(), &x, &y);

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	eax, DWORD PTR _aircraft$[ebp]
	movzx	ecx, BYTE PTR [eax+664]
	push	ecx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindTakeoffPt@ATCBrain@@QAEHPAVFlightClass@@HHPAM1@Z ; ATCBrain::FindTakeoffPt

; 862  : 						else

	jmp	SHORT $LN10@Process
$LN11@Process:

; 863  : 							TranslatePointData (atc,acBrain->GetTaxiPoint() , &x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?GetTaxiPoint@DigitalBrain@@QAEHXZ	; DigitalBrain::GetTaxiPoint
	push	eax
	mov	ecx, DWORD PTR _atc$[ebp]
	push	ecx
	call	?TranslatePointData@@YAXPAVCampBaseClass@@HPAM1@Z ; TranslatePointData
	add	esp, 16					; 00000010H
$LN10@Process:

; 864  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, tTaxi));

	push	22					; 00000016H
	mov	edx, DWORD PTR _aircraft$[ebp]
	push	edx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN12@Process:

; 865  : 					}
; 866  : 					break;

	jmp	$LN53@Process
$LN9@Process:

; 867  : 
; 868  : 				case tTakeRunway:
; 869  : 					if(acBrain->ATCStatus() != tTakeRunway)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 26					; 0000001aH
	je	SHORT $LN8@Process

; 870  : 					{
; 871  : 						acBrain->SetATCFlag(DigitalBrain::PermitTakeRunway);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::SetATCFlag

; 872  : 						acBrain->SetATCStatus(tTakeRunway);

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 873  : 						atcBrain->FindTakeoffPt((Flight)aircraft->GetCampaignObject(), aircraft->vehicleInUnit, acBrain->Runway(), &x, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	edx, DWORD PTR _aircraft$[ebp]
	movzx	eax, BYTE PTR [edx+664]
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindTakeoffPt@ATCBrain@@QAEHPAVFlightClass@@HHPAM1@Z ; ATCBrain::FindTakeoffPt

; 874  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, tTakeRunway));

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _aircraft$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN8@Process:

; 875  : 					}
; 876  : 					break;

	jmp	$LN53@Process
$LN7@Process:

; 877  : 
; 878  : 				case tTakeoff:
; 879  : 					if(acBrain->ATCStatus() != tTakeoff)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 27					; 0000001bH
	je	SHORT $LN6@Process

; 880  : 					{
; 881  : 						acBrain->SetATCFlag(DigitalBrain::PermitRunway);

	push	2
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::SetATCFlag

; 882  : 						acBrain->SetATCFlag(DigitalBrain::PermitTakeoff);

	push	4
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCFlag@DigitalBrain@@QAEXH@Z	; DigitalBrain::SetATCFlag

; 883  : 						acBrain->SetATCStatus(tTakeRunway);

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus

; 884  : 						atcBrain->FindRunwayPt((Flight)aircraft->GetCampaignObject(), aircraft->vehicleInUnit, acBrain->Runway(), &x, &y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?Runway@DigitalBrain@@QAEHXZ		; DigitalBrain::Runway
	push	eax
	mov	ecx, DWORD PTR _aircraft$[ebp]
	movzx	edx, BYTE PTR [ecx+664]
	push	edx
	mov	ecx, DWORD PTR _aircraft$[ebp]
	call	?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ; SimBaseClass::GetCampaignObject
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?FindRunwayPt@ATCBrain@@QAEHPAVFlightClass@@HHPAM1@Z ; ATCBrain::FindRunwayPt

; 885  : 						acBrain->SetTrackPoint(x, y, atcBrain->GetAltitude(aircraft, tTakeRunway));

	push	26					; 0000001aH
	mov	eax, DWORD PTR _aircraft$[ebp]
	push	eax
	mov	ecx, DWORD PTR _atcBrain$28[ebp]
	call	?GetAltitude@ATCBrain@@QAEMPAVAircraftClass@@W4AtcStatusEnum@@@Z ; ATCBrain::GetAltitude
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetTrackPoint@DigitalBrain@@QAEXMMM@Z	; DigitalBrain::SetTrackPoint
$LN6@Process:

; 886  : 					}
; 887  : 					break;

	jmp	SHORT $LN53@Process
$LN5@Process:

; 888  : 
; 889  : 				case tTaxiBack:
; 890  : 					if(acBrain->ATCStatus() != tTaxiBack)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 29					; 0000001dH
	je	SHORT $LN4@Process

; 891  : 					{
; 892  : 						acBrain->SetATCStatus(tTaxiBack);

	push	29					; 0000001dH
	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?SetATCStatus@DigitalBrain@@QAEXW4AtcStatusEnum@@@Z ; DigitalBrain::SetATCStatus
$LN4@Process:

; 893  : 					}
; 894  : 					break;

	jmp	SHORT $LN53@Process
$LN3@Process:

; 895  : 
; 896  : 				case tFlyOut:
; 897  : 					if(acBrain->ATCStatus() != tFlyOut)

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ATCStatus@DigitalBrain@@QAE?AW4AtcStatusEnum@@XZ ; DigitalBrain::ATCStatus
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@Process

; 898  : 					{
; 899  : 						acBrain->ResetATC();

	mov	ecx, DWORD PTR _acBrain$29[ebp]
	call	?ResetATC@DigitalBrain@@QAEXXZ		; DigitalBrain::ResetATC
$LN2@Process:
$LN53@Process:
$LN166@Process:

; 900  : 					}
; 901  : 				default:
; 902  : 					break;
; 903  : 				}
; 904  : 			}
; 905  : 			break;
; 906  : 		}
; 907  : 	}
; 908  : 	return 1;

	mov	eax, 1
$LN173@Process:

; 909  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN211@Process:
	DD	$LN165@Process
	DD	$LN101@Process
	DD	$LN165@Process
	DD	$LN97@Process
	DD	$LN93@Process
	DD	$LN77@Process
	DD	$LN89@Process
	DD	$LN85@Process
	DD	$LN81@Process
$LN212@Process:
	DD	$LN144@Process
	DD	$LN141@Process
	DD	$LN140@Process
	DD	$LN139@Process
	DD	$LN138@Process
	DD	$LN135@Process
	DD	$LN134@Process
	DD	$LN133@Process
	DD	$LN132@Process
$LN202@Process:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	2
	DB	2
	DB	3
	DB	3
	DB	3
	DB	4
	DB	4
	DB	5
	DB	6
	DB	7
	DB	7
	DB	7
	DB	8
	npad	1
$LN213@Process:
	DD	$LN71@Process
	DD	$LN68@Process
	DD	$LN66@Process
	DD	$LN67@Process
	DD	$LN64@Process
$LN203@Process:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	1
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
	npad	3
$LN214@Process:
	DD	$LN59@Process
	DD	$LN58@Process
	DD	$LN57@Process
	DD	$LN55@Process
$LN204@Process:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	3
	DB	3
	DB	2
	DB	2
	DB	3
	DB	2
	DB	2
	DB	2
	DB	2
$LN215@Process:
	DD	$LN50@Process
	DD	$LN50@Process
	DD	$LN28@Process
	DD	$LN49@Process
	DD	$LN49@Process
	DD	$LN48@Process
	DD	$LN43@Process
	DD	$LN40@Process
	DD	$LN37@Process
	DD	$LN2@Process
	DD	$LN31@Process
	DD	$LN2@Process
	DD	$LN25@Process
	DD	$LN23@Process
	DD	$LN21@Process
	DD	$LN19@Process
	DD	$LN2@Process
	DD	$LN2@Process
	DD	$LN18@Process
	DD	$LN17@Process
	DD	$LN2@Process
	DD	$LN15@Process
	DD	$LN13@Process
	DD	$LN9@Process
	DD	$LN7@Process
	DD	$LN3@Process
	DD	$LN5@Process
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Process@FalconATCMessage@@MAEHE@Z$0:
	lea	ecx, DWORD PTR _flightIter$22[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?Process@FalconATCMessage@@MAEHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-388]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Process@FalconATCMessage@@MAEHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Process@FalconATCMessage@@MAEHE@Z ENDP			; FalconATCMessage::Process
; Function compile flags: /Odtp
;	COMDAT ??0DATA_BLOCK@FalconATCMessage@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DATA_BLOCK@FalconATCMessage@@QAE@XZ PROC		; FalconATCMessage::DATA_BLOCK::DATA_BLOCK, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0DATA_BLOCK@FalconATCMessage@@QAE@XZ ENDP		; FalconATCMessage::DATA_BLOCK::DATA_BLOCK
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\msginc\atcmsg.h
;	COMDAT ?Encode@FalconATCMessage@@UAEHPAPAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_size$ = -4						; size = 4
_buf$ = 8						; size = 4
?Encode@FalconATCMessage@@UAEHPAPAE@Z PROC		; FalconATCMessage::Encode, COMDAT
; _this$ = ecx

; 46   :          {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 47   :          int size;
; 48   : 
; 49   :             size = FalconEvent::Encode (buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Encode@FalconEvent@@UAEHPAPAE@Z	; FalconEvent::Encode
	mov	DWORD PTR _size$[ebp], eax

; 50   :             memcpy (*buf, &dataBlock, sizeof (dataBlock));

	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 51   :             *buf += sizeof (dataBlock);

	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 14					; 0000000eH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], edx

; 52   :             size += sizeof (dataBlock);

	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 14					; 0000000eH
	mov	DWORD PTR _size$[ebp], ecx

; 53   :             return size;

	mov	eax, DWORD PTR _size$[ebp]

; 54   :          };

	mov	esp, ebp
	pop	ebp
	ret	4
?Encode@FalconATCMessage@@UAEHPAPAE@Z ENDP		; FalconATCMessage::Encode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\msginc\atcmsg.h
;	COMDAT ?Decode@FalconATCMessage@@UAEHPAPAEPAJ@Z
_TEXT	SEGMENT
_init$ = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_rem$ = 12						; size = 4
?Decode@FalconATCMessage@@UAEHPAPAEPAJ@Z PROC		; FalconATCMessage::Decode, COMDAT
; _this$ = ecx

; 38   :          {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 39   : 			long init = *rem;

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _init$[ebp], ecx

; 40   : 
; 41   :             FalconEvent::Decode (buf, rem);

	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Decode@FalconEvent@@UAEHPAPAEPAJ@Z	; FalconEvent::Decode

; 42   :             memcpychk(&dataBlock, buf, sizeof (dataBlock), rem);

	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	push	14					; 0000000eH
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	call	?memcpychk@@YAXPAXPAPAEIPAJ@Z		; memcpychk
	add	esp, 16					; 00000010H

; 43   :             return init - *rem;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR _init$[ebp]
	sub	eax, DWORD PTR [ecx]

; 44   :          };

	mov	esp, ebp
	pop	ebp
	ret	8
?Decode@FalconATCMessage@@UAEHPAPAEPAJ@Z ENDP		; FalconATCMessage::Decode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\msginc\atcmsg.h
;	COMDAT ?Size@FalconATCMessage@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@FalconATCMessage@@UBEHXZ PROC			; FalconATCMessage::Size, COMDAT
; _this$ = ecx

; 36   :       virtual int Size() const { return sizeof(dataBlock) + FalconEvent::Size();};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@FalconEvent@@UBEHXZ		; FalconEvent::Size
	add	eax, 14					; 0000000eH
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@FalconATCMessage@@UBEHXZ ENDP			; FalconATCMessage::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1FalconATCMessage@@UAE@XZ PROC			; FalconATCMessage::~FalconATCMessage
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FalconATCMessage@@6B@

; 40   : 	// Your Code Goes Here
; 41   : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FalconEvent@@MAE@XZ			; FalconEvent::~FalconEvent
	mov	esp, ebp
	pop	ebp
	ret	0
??1FalconATCMessage@@UAE@XZ ENDP			; FalconATCMessage::~FalconATCMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_senderid$ = 12						; size = 8
_target$ = 20						; size = 8
??0FalconATCMessage@@QAE@EVVU_ID@@0@Z PROC		; FalconATCMessage::FalconATCMessage
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _target$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _senderid$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _senderid$[ebp]
	push	eax
	push	1
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FalconEvent@@IAE@EW4HandlingThread@0@VVU_ID@@1@Z ; FalconEvent::FalconEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7FalconATCMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0DATA_BLOCK@FalconATCMessage@@QAE@XZ

; 35   : 	// Your Code Goes Here
; 36   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1FalconEvent@@MAE@XZ			; FalconEvent::~FalconEvent
__ehhandler$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FalconATCMessage@@QAE@EVVU_ID@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FalconATCMessage@@QAE@EVVU_ID@@0@Z ENDP		; FalconATCMessage::FalconATCMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\msgsrc\atcmsg.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_entityId$ = 8						; size = 8
_target$ = 16						; size = 4
_loopback$ = 20						; size = 1
??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z PROC ; FalconATCMessage::FalconATCMessage
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _loopback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _entityId$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _entityId$[ebp]
	push	eax
	push	1
	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0FalconEvent@@IAE@EW4HandlingThread@0@VVU_ID@@PAVVuTargetEntity@@E@Z ; FalconEvent::FalconEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7FalconATCMessage@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0DATA_BLOCK@FalconATCMessage@@QAE@XZ

; 29   : //me123	RequestOutOfBandTransmit ();
; 30   : 		RequestReliableTransmit ();//me123

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RequestReliableTransmit@VuMessage@@QAEXXZ ; VuMessage::RequestReliableTransmit

; 31   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1FalconEvent@@MAE@XZ			; FalconEvent::~FalconEvent
__ehhandler$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0FalconATCMessage@@QAE@VVU_ID@@PAVVuTargetEntity@@E@Z ENDP ; FalconATCMessage::FalconATCMessage
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ?memcpychk@@YAXPAXPAPAEIPAJ@Z
_TEXT	SEGMENT
$T2 = -152						; size = 12
_s$3 = -140						; size = 24
_err$4 = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_rem$ = 20						; size = 4
?memcpychk@@YAXPAXPAPAEIPAJ@Z PROC			; memcpychk, COMDAT

; 25   : inline void memcpychk(void *dst, VU_BYTE **src, size_t size, long *rem){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 26   : 	if ((size_t)*rem < size){

	mov	eax, DWORD PTR _rem$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@memcpychk

; 27   : 		char err[100];
; 28   : 		sprintf(err, "Trying to write %lu bytes to %ld buffer", static_cast<unsigned long>(size), *rem);

	mov	edx, DWORD PTR _rem$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CI@MPKJAHJH@Trying?5to?5write?5?$CFlu?5bytes?5to?5?$CFld@
	lea	edx, DWORD PTR _err$4[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 29   : 		std::string s(err);

	lea	eax, DWORD PTR _err$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 30   : 		throw InvalidBufferException(s);

	lea	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; InvalidBufferException::InvalidBufferException
	push	OFFSET __TI4?AVInvalidBufferException@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8

; 31   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@memcpychk:

; 32   : 	memcpy(dst, *src, size);

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _dst$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 33   : 	*rem -= size;

	mov	ecx, DWORD PTR _rem$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _rem$[ebp]
	mov	DWORD PTR [eax], edx

; 34   : 	*src += size;

	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@memcpychk:

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?memcpychk@@YAXPAXPAPAEIPAJ@Z$0:
	lea	ecx, DWORD PTR _s$3[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?memcpychk@@YAXPAXPAPAEIPAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?memcpychk@@YAXPAXPAPAEIPAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?memcpychk@@YAXPAXPAPAEIPAJ@Z ENDP			; memcpychk
; Function compile flags: /Odtp
;	COMDAT ??_GInvalidBufferException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GInvalidBufferException@@UAEPAXI@Z PROC		; InvalidBufferException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1InvalidBufferException@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GInvalidBufferException@@UAEPAXI@Z ENDP		; InvalidBufferException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InvalidBufferException@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV0@@Z PROC		; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV0@@Z ENDP		; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1InvalidBufferException@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1InvalidBufferException@@UAE@XZ PROC			; InvalidBufferException::~InvalidBufferException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1InvalidBufferException@@UAE@XZ ENDP			; InvalidBufferException::~InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\invalidbufferexception.h
;	COMDAT ??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; InvalidBufferException::InvalidBufferException, COMDAT
; _this$ = ecx

; 19   : 	InvalidBufferException(const std::string &msg) : out_of_range(msg){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7InvalidBufferException@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0InvalidBufferException@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; InvalidBufferException::InvalidBufferException
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\aircrft.h
;	COMDAT ?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ PROC	; AircraftClass::DBrain, COMDAT
; _this$ = ecx

; 624  : 	DigitalBrain *DBrain(void)			{return (DigitalBrain *)theBrain;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+672]
	mov	esp, ebp
	pop	ebp
	ret	0
?DBrain@AircraftClass@@QAEPAVDigitalBrain@@XZ ENDP	; AircraftClass::DBrain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\simbase.h
;	COMDAT ?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ PROC ; SimBaseClass::GetCampaignObject, COMDAT
; _this$ = ecx

; 212  : 	CampBaseClass *GetCampaignObject (void) { return campaignObject.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ; VuBin<CampBaseClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCampaignObject@SimBaseClass@@QAEPAVCampBaseClass@@XZ ENDP ; SimBaseClass::GetCampaignObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ PROC ; VuBin<CampBaseClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VCampBaseClass@@@@QBEPAVCampBaseClass@@XZ ENDP ; VuBin<CampBaseClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsPlayer@FalconEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPlayer@FalconEntity@@QAEHXZ PROC			; FalconEntity::IsPlayer, COMDAT
; _this$ = ecx

; 113  : 	int IsPlayer (void)							{ return IsSetFalcFlag(FEC_HASPLAYERS); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSetFalcFlag@FalconEntity@@QAEHH@Z	; FalconEntity::IsSetFalcFlag
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPlayer@FalconEntity@@QAEHXZ ENDP			; FalconEntity::IsPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcent.h
;	COMDAT ?IsSetFalcFlag@FalconEntity@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?IsSetFalcFlag@FalconEntity@@QAEHH@Z PROC		; FalconEntity::IsSetFalcFlag, COMDAT
; _this$ = ecx

; 112  : 	int IsSetFalcFlag (int flag)				{ return falconFlags & flag; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+136]
	and	eax, DWORD PTR _flag$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSetFalcFlag@FalconEntity@@QAEHH@Z ENDP		; FalconEntity::IsSetFalcFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?RequestReliableTransmit@VuMessage@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RequestReliableTransmit@VuMessage@@QAEXXZ PROC		; VuMessage::RequestReliableTransmit, COMDAT
; _this$ = ecx

; 180  : 	void RequestReliableTransmit() { flags_ |= VU_RELIABLE_MSG_FLAG; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	or	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+6], cl
	mov	esp, ebp
	pop	ebp
	ret	0
?RequestReliableTransmit@VuMessage@@QAEXXZ ENDP		; VuMessage::RequestReliableTransmit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuevent.h
;	COMDAT ?EntityId@VuMessage@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EntityId@VuMessage@@QBE?AVVU_ID@@XZ PROC		; VuMessage::EntityId, COMDAT
; _this$ = ecx

; 157  : 	VU_ID EntityId() const { return entityId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EntityId@VuMessage@@QBE?AVVU_ID@@XZ ENDP		; VuMessage::EntityId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR __Message$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@PBD@Z		; std::logic_error::logic_error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@

; 146  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1717 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1718 : 		return (this->_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 1719 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 963  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 964  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 965  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	esp, ebp
	pop	ebp
	ret	0
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\stdexcept
;	COMDAT ??0logic_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@PBD@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 38   : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@

; 39   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0logic_error@std@@QAE@PBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?YPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?YPos@VuEntity@@QBEMXZ PROC				; VuEntity::YPos, COMDAT
; _this$ = ecx

; 159  : 	BIG_SCALAR YPos()	const { return pos_.y_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?YPos@VuEntity@@QBEMXZ ENDP				; VuEntity::YPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?XPos@VuEntity@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?XPos@VuEntity@@QBEMXZ PROC				; VuEntity::XPos, COMDAT
; _this$ = ecx

; 158  : 	BIG_SCALAR XPos() const { return pos_.x_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?XPos@VuEntity@@QBEMXZ ENDP				; VuEntity::XPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
END
