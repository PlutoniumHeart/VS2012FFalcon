; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\Token.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?tokenStr@@3PADA				; tokenStr
_BSS	SEGMENT
?tokenStr@@3PADA DD 01H DUP (?)				; tokenStr
_BSS	ENDS
PUBLIC	?TokenF@@YAMM@Z					; TokenF
PUBLIC	?TokenI@@YAHH@Z					; TokenI
PUBLIC	?TokenFlags@@YAHHPAD@Z				; TokenFlags
PUBLIC	?TokenStr@@YAPADPAD@Z				; TokenStr
PUBLIC	?TokenF@@YAMPADM@Z				; TokenF
PUBLIC	?TokenI@@YAHPADH@Z				; TokenI
PUBLIC	?TokenFlags@@YAHPADH0@Z				; TokenFlags
PUBLIC	?TokenStr@@YAPADPAD0@Z				; TokenStr
PUBLIC	?TokenEnum@@YAHPAPADH@Z				; TokenEnum
PUBLIC	?TokenEnum@@YAHPADPAPADH@Z			; TokenEnum
PUBLIC	?SetTokenString@@YAXPAD@Z			; SetTokenString
PUBLIC	??_C@_04OHMGOEGF@?5?0?7?6?$AA@			; `string'
PUBLIC	??_C@_05LNNKDIMO@?5?3?0?7?6?$AA@		; `string'
EXTRN	_strtok:PROC
EXTRN	_stricmp:PROC
EXTRN	_atof:PROC
EXTRN	_atoi:PROC
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_05LNNKDIMO@?5?3?0?7?6?$AA@
CONST	SEGMENT
??_C@_05LNNKDIMO@?5?3?0?7?6?$AA@ DB ' :,', 09H, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHMGOEGF@?5?0?7?6?$AA@
CONST	SEGMENT
??_C@_04OHMGOEGF@?5?0?7?6?$AA@ DB ' ,', 09H, 0aH, 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_str$ = 8						; size = 4
?SetTokenString@@YAXPAD@Z PROC				; SetTokenString

; 111  : {

	push	ebp
	mov	ebp, esp

; 112  : 	tokenStr = str;

	mov	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR ?tokenStr@@3PADA, eax		; tokenStr

; 113  : }

	pop	ebp
	ret	0
?SetTokenString@@YAXPAD@Z ENDP				; SetTokenString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_arg$ = -8						; size = 4
_i$ = -4						; size = 4
_str$ = 8						; size = 4
_enumnames$ = 12					; size = 4
_def$ = 16						; size = 4
?TokenEnum@@YAHPADPAPADH@Z PROC				; TokenEnum

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	char *arg;
; 90   : 	int i=0;

	mov	DWORD PTR _i$[ebp], 0

; 91   : 
; 92   : 	tokenStr=0;

	mov	DWORD PTR ?tokenStr@@3PADA, 0		; tokenStr

; 93   : 
; 94   : 	if(arg=strtok(str," ,\t\n"))

	push	OFFSET ??_C@_04OHMGOEGF@?5?0?7?6?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _arg$[ebp], eax
	cmp	DWORD PTR _arg$[ebp], 0
	je	SHORT $LN4@TokenEnum
$LN3@TokenEnum:

; 95   : 	{
; 96   : 		while(*enumnames)

	mov	ecx, DWORD PTR _enumnames$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN4@TokenEnum

; 97   : 		{
; 98   : 			if(stricmp(arg,*enumnames)==0)

	mov	edx, DWORD PTR _enumnames$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _arg$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@TokenEnum

; 99   : 			{
; 100  : 				return i;

	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN5@TokenEnum
$LN1@TokenEnum:

; 101  : 			}
; 102  : 			enumnames++;

	mov	edx, DWORD PTR _enumnames$[ebp]
	add	edx, 4
	mov	DWORD PTR _enumnames$[ebp], edx

; 103  : 			i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 104  : 		}

	jmp	SHORT $LN3@TokenEnum
$LN4@TokenEnum:

; 105  : 	}
; 106  : 	return def;

	mov	eax, DWORD PTR _def$[ebp]
$LN5@TokenEnum:

; 107  : 
; 108  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TokenEnum@@YAHPADPAPADH@Z ENDP				; TokenEnum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_enumnames$ = 8						; size = 4
_def$ = 12						; size = 4
?TokenEnum@@YAHPAPADH@Z PROC				; TokenEnum

; 82   : {

	push	ebp
	mov	ebp, esp

; 83   : 	return(TokenEnum(tokenStr,enumnames,def));

	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enumnames$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?tokenStr@@3PADA		; tokenStr
	push	edx
	call	?TokenEnum@@YAHPADPAPADH@Z		; TokenEnum
	add	esp, 12					; 0000000cH

; 84   : }

	pop	ebp
	ret	0
?TokenEnum@@YAHPAPADH@Z ENDP				; TokenEnum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_bs$ = -4						; size = 4
_str$ = 8						; size = 4
_def$ = 12						; size = 4
?TokenStr@@YAPADPAD0@Z PROC				; TokenStr

; 122  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 123  : 	char *bs;
; 124  : 
; 125  : 	tokenStr=0;

	mov	DWORD PTR ?tokenStr@@3PADA, 0		; tokenStr

; 126  : 
; 127  : 	if(bs=strtok(str," :,\t\n"))

	push	OFFSET ??_C@_05LNNKDIMO@?5?3?0?7?6?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _bs$[ebp], eax
	cmp	DWORD PTR _bs$[ebp], 0
	je	SHORT $LN1@TokenStr

; 128  : 	{
; 129  : 		return(bs);

	mov	eax, DWORD PTR _bs$[ebp]
	jmp	SHORT $LN2@TokenStr
$LN1@TokenStr:

; 130  : 	}
; 131  : 	return(def);

	mov	eax, DWORD PTR _def$[ebp]
$LN2@TokenStr:

; 132  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TokenStr@@YAPADPAD0@Z ENDP				; TokenStr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_flags$ = -12						; size = 4
_arg$ = -8						; size = 4
_l$1 = -4						; size = 4
_str$ = 8						; size = 4
_def$ = 12						; size = 4
_flagstr$ = 16						; size = 4
?TokenFlags@@YAHPADH0@Z PROC				; TokenFlags

; 56   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 57   : 	char *arg;
; 58   : 	int flags=0;

	mov	DWORD PTR _flags$[ebp], 0

; 59   : 
; 60   : 	tokenStr=0;

	mov	DWORD PTR ?tokenStr@@3PADA, 0		; tokenStr

; 61   : 
; 62   : 	if(arg=strtok(str," ,\t\n"))

	push	OFFSET ??_C@_04OHMGOEGF@?5?0?7?6?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _arg$[ebp], eax
	cmp	DWORD PTR _arg$[ebp], 0
	je	SHORT $LN7@TokenFlags
$LN6@TokenFlags:

; 63   : 	{
; 64   : 		while(*arg)

	mov	ecx, DWORD PTR _arg$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN5@TokenFlags

; 65   : 		{
; 66   : 			int l;
; 67   : 			for(l=0;l<32 && flagstr[l];l++)

	mov	DWORD PTR _l$1[ebp], 0
	jmp	SHORT $LN4@TokenFlags
$LN3@TokenFlags:
	mov	eax, DWORD PTR _l$1[ebp]
	add	eax, 1
	mov	DWORD PTR _l$1[ebp], eax
$LN4@TokenFlags:
	cmp	DWORD PTR _l$1[ebp], 32			; 00000020H
	jge	SHORT $LN2@TokenFlags
	mov	ecx, DWORD PTR _flagstr$[ebp]
	add	ecx, DWORD PTR _l$1[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN2@TokenFlags

; 68   : 			{
; 69   : 				if(*arg==flagstr[l])

	mov	eax, DWORD PTR _arg$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _flagstr$[ebp]
	add	edx, DWORD PTR _l$1[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@TokenFlags

; 70   : 				{
; 71   : 					flags|=1<<l;

	mov	edx, 1
	mov	ecx, DWORD PTR _l$1[ebp]
	shl	edx, cl
	or	edx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR _flags$[ebp], edx
$LN1@TokenFlags:

; 72   : 				}
; 73   : 			}

	jmp	SHORT $LN3@TokenFlags
$LN2@TokenFlags:

; 74   : 			arg++;

	mov	eax, DWORD PTR _arg$[ebp]
	add	eax, 1
	mov	DWORD PTR _arg$[ebp], eax

; 75   : 		}

	jmp	SHORT $LN6@TokenFlags
$LN5@TokenFlags:

; 76   : 		return(flags);

	mov	eax, DWORD PTR _flags$[ebp]
	jmp	SHORT $LN8@TokenFlags
$LN7@TokenFlags:

; 77   : 	}
; 78   : 	return(def);

	mov	eax, DWORD PTR _def$[ebp]
$LN8@TokenFlags:

; 79   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TokenFlags@@YAHPADH0@Z ENDP				; TokenFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_bs$ = -4						; size = 4
_str$ = 8						; size = 4
_def$ = 12						; size = 4
?TokenI@@YAHPADH@Z PROC					; TokenI

; 36   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 37   : 	char *bs;
; 38   : 
; 39   : 	tokenStr=0;

	mov	DWORD PTR ?tokenStr@@3PADA, 0		; tokenStr

; 40   : 
; 41   : 	if(bs=strtok(str," ,\t\n"))

	push	OFFSET ??_C@_04OHMGOEGF@?5?0?7?6?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _bs$[ebp], eax
	cmp	DWORD PTR _bs$[ebp], 0
	je	SHORT $LN1@TokenI

; 42   : 	{
; 43   : 		return(atoi(bs));

	mov	ecx, DWORD PTR _bs$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	jmp	SHORT $LN2@TokenI
$LN1@TokenI:

; 44   : 	}
; 45   : 	return(def);

	mov	eax, DWORD PTR _def$[ebp]
$LN2@TokenI:

; 46   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TokenI@@YAHPADH@Z ENDP					; TokenI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
tv79 = -16						; size = 8
tv81 = -8						; size = 4
_bs$ = -4						; size = 4
_str$ = 8						; size = 4
_def$ = 12						; size = 4
?TokenF@@YAMPADM@Z PROC					; TokenF

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 17   : 	char *bs;
; 18   : 
; 19   : 	tokenStr=0;

	mov	DWORD PTR ?tokenStr@@3PADA, 0		; tokenStr

; 20   : 
; 21   : 	if(bs=strtok(str," ,\t\n"))

	push	OFFSET ??_C@_04OHMGOEGF@?5?0?7?6?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _bs$[ebp], eax
	cmp	DWORD PTR _bs$[ebp], 0
	je	SHORT $LN1@TokenF

; 22   : 	{
; 23   : 		return((float)atof(bs));

	mov	ecx, DWORD PTR _bs$[ebp]
	push	ecx
	call	_atof
	add	esp, 4
	fstp	QWORD PTR tv79[ebp]
	movsd	xmm0, QWORD PTR tv79[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv81[ebp], xmm0
	fld	DWORD PTR tv81[ebp]
	jmp	SHORT $LN2@TokenF
$LN1@TokenF:

; 24   : 	}
; 25   : 	return(def);

	fld	DWORD PTR _def$[ebp]
$LN2@TokenF:

; 26   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TokenF@@YAMPADM@Z ENDP					; TokenF
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_def$ = 8						; size = 4
?TokenStr@@YAPADPAD@Z PROC				; TokenStr

; 116  : {

	push	ebp
	mov	ebp, esp

; 117  : 	return(TokenStr(tokenStr,def));

	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?tokenStr@@3PADA		; tokenStr
	push	ecx
	call	?TokenStr@@YAPADPAD0@Z			; TokenStr
	add	esp, 8

; 118  : }

	pop	ebp
	ret	0
?TokenStr@@YAPADPAD@Z ENDP				; TokenStr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_def$ = 8						; size = 4
_flagstr$ = 12						; size = 4
?TokenFlags@@YAHHPAD@Z PROC				; TokenFlags

; 50   : {

	push	ebp
	mov	ebp, esp

; 51   : 	return(TokenFlags(tokenStr, def, flagstr));

	mov	eax, DWORD PTR _flagstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _def$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?tokenStr@@3PADA		; tokenStr
	push	edx
	call	?TokenFlags@@YAHPADH0@Z			; TokenFlags
	add	esp, 12					; 0000000cH

; 52   : }

	pop	ebp
	ret	0
?TokenFlags@@YAHHPAD@Z ENDP				; TokenFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_def$ = 8						; size = 4
?TokenI@@YAHH@Z PROC					; TokenI

; 30   : {

	push	ebp
	mov	ebp, esp

; 31   : 	return(TokenI(tokenStr,def));

	mov	eax, DWORD PTR _def$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?tokenStr@@3PADA		; tokenStr
	push	ecx
	call	?TokenI@@YAHPADH@Z			; TokenI
	add	esp, 8

; 32   : }

	pop	ebp
	ret	0
?TokenI@@YAHH@Z ENDP					; TokenI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\token.cpp
_TEXT	SEGMENT
_def$ = 8						; size = 4
?TokenF@@YAMM@Z PROC					; TokenF

; 10   : {

	push	ebp
	mov	ebp, esp

; 11   : 	return(TokenF(tokenStr,def));

	push	ecx
	movss	xmm0, DWORD PTR _def$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?tokenStr@@3PADA		; tokenStr
	push	eax
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8

; 12   : }

	pop	ebp
	ret	0
?TokenF@@YAMM@Z ENDP					; TokenF
_TEXT	ENDS
END
