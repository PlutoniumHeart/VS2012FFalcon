; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\FALCLIB\F4VU.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?vuxWorldName@@3PADA				; vuxWorldName
PUBLIC	?vuxLocalDomain@@3KA				; vuxLocalDomain
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?vuxGameTime@@3KA				; vuxGameTime
PUBLIC	?vuxRealTime@@3KA				; vuxRealTime
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?vuxVersion@@3KA				; vuxVersion
PUBLIC	?vuxTicsPerSec@@3MA				; vuxTicsPerSec
PUBLIC	?vuxTargetGameTime@@3KA				; vuxTargetGameTime
PUBLIC	?vuxLastTargetGameTime@@3KA			; vuxLastTargetGameTime
PUBLIC	?vuxDeadReconTime@@3KA				; vuxDeadReconTime
PUBLIC	?vuxCurrentTime@@3KA				; vuxCurrentTime
PUBLIC	?lastTimingMessage@@3KA				; lastTimingMessage
PUBLIC	?vuxTransmitTime@@3KA				; vuxTransmitTime
PUBLIC	?vuxLocalSession@@3EA				; vuxLocalSession
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?F4EventFile@@3PAU_iobuf@@A			; F4EventFile
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?gMainThread@@3PAVVuMainThread@@A		; gMainThread
PUBLIC	?NumEntities@@3HA				; NumEntities
PUBLIC	?vuCritical@@3PAUF4CSECTIONHANDLE@@A		; vuCritical
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
_BSS	SEGMENT
?vuxWorldName@@3PADA DD 01H DUP (?)			; vuxWorldName
?vuxGameTime@@3KA DD 01H DUP (?)			; vuxGameTime
?vuxRealTime@@3KA DD 01H DUP (?)			; vuxRealTime
?vuxTargetGameTime@@3KA DD 01H DUP (?)			; vuxTargetGameTime
?vuxLastTargetGameTime@@3KA DD 01H DUP (?)		; vuxLastTargetGameTime
?vuxDeadReconTime@@3KA DD 01H DUP (?)			; vuxDeadReconTime
?vuxCurrentTime@@3KA DD 01H DUP (?)			; vuxCurrentTime
?lastTimingMessage@@3KA DD 01H DUP (?)			; lastTimingMessage
?vuxTransmitTime@@3KA DD 01H DUP (?)			; vuxTransmitTime
?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A DD 01H DUP (?) ; Falcon4ClassTable
?F4EventFile@@3PAU_iobuf@@A DD 01H DUP (?)		; F4EventFile
?gMainThread@@3PAVVuMainThread@@A DD 01H DUP (?)	; gMainThread
?NumEntities@@3HA DD 01H DUP (?)			; NumEntities
?vuCritical@@3PAUF4CSECTIONHANDLE@@A DD 01H DUP (?)	; vuCritical
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
_DATA	SEGMENT
?vuxLocalDomain@@3KA DD 0ffffffffH			; vuxLocalDomain
?vuxVersion@@3KA DD 01H					; vuxVersion
?vuxTicsPerSec@@3MA DD 0447a0000r		; 1000	; vuxTicsPerSec
?vuxLocalSession@@3EA DB 01H				; vuxLocalSession
_DATA	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::OwnerId
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?VuxType@@YAPAUVuEntityType@@G@Z		; VuxType
PUBLIC	?VuxCreateMutex@@YAPAXPBD@Z			; VuxCreateMutex
PUBLIC	?VuxDestroyMutex@@YAXPAX@Z			; VuxDestroyMutex
PUBLIC	?VuxLockMutex@@YAXPAX@Z				; VuxLockMutex
PUBLIC	?VuxUnlockMutex@@YAXPAX@Z			; VuxUnlockMutex
PUBLIC	?VuxGetId@@YAKXZ				; VuxGetId
PUBLIC	?VuEnterCriticalSection@@YAXXZ			; VuEnterCriticalSection
PUBLIC	?VuExitCriticalSection@@YAXXZ			; VuExitCriticalSection
PUBLIC	?VuHasCriticalSection@@YA_NXZ			; VuHasCriticalSection
PUBLIC	?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z	; VuxCreateEntity
PUBLIC	?VuxRetireEntity@@YAXPAVVuEntity@@@Z		; VuxRetireEntity
PUBLIC	??0VuFilter@@IAE@XZ				; VuFilter::VuFilter
PUBLIC	??_GVuFilter@@UAEPAXI@Z				; VuFilter::`scalar deleting destructor'
PUBLIC	?InitVU@@YAXXZ					; InitVU
PUBLIC	?ExitVU@@YAXXZ					; ExitVU
PUBLIC	??0FalconNothingFilterType@@QAE@XZ		; FalconNothingFilterType::FalconNothingFilterType
PUBLIC	??1FalconNothingFilterType@@UAE@XZ		; FalconNothingFilterType::~FalconNothingFilterType
PUBLIC	?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z ; FalconNothingFilterType::Test
PUBLIC	?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z ; FalconNothingFilterType::RemoveTest
PUBLIC	?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z ; FalconNothingFilterType::Compare
PUBLIC	?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ ; FalconNothingFilterType::Copy
PUBLIC	??_GFalconNothingFilterType@@UAEPAXI@Z		; FalconNothingFilterType::`scalar deleting destructor'
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?vuxCreateSession@@YAPAVVuSessionEntity@@XZ	; vuxCreateSession
PUBLIC	??_7VuFilter@@6B@				; VuFilter::`vftable'
PUBLIC	?FalconNullId@@3VVU_ID@@A			; FalconNullId
PUBLIC	??_7FalconNothingFilterType@@6B@		; FalconNothingFilterType::`vftable'
PUBLIC	?FalconNothingFilter@@3VFalconNothingFilterType@@A ; FalconNothingFilter
PUBLIC	??_C@_03JAPJNPNF@EBS?$AA@			; `string'
PUBLIC	??_C@_0BG@KGJHEDPH@R?$CF5d?4?$CF2d?4?$CF02d?4?$CFs?4?$CFd_?$AA?$AA@ ; `string'
PUBLIC	??_C@_08NKPFHFKE@14?317?307?$AA@		; `string'
PUBLIC	??_C@_0M@CFLADCE@Feb?518?52013?$AA@		; `string'
PUBLIC	??_C@_0BC@PFIHAAKM@Version?5?$CFs?5?$CFs?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02DKMHPJFM@Vu?$AA@			; `string'
PUBLIC	??_C@_0CK@GPAKENJH@You?5dropped?5an?5entity?0?5better?5fi@ ; `string'
PUBLIC	??_C@_0L@GMIOGINE@Falcon?54?40?$AA@		; `string'
PUBLIC	?idMutex@@3PAXA					; idMutex
PUBLIC	??_C@_09BFJFHJLB@ids?5mutex?$AA@		; `string'
PUBLIC	??_R4VuFilter@@6B@				; VuFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVVuFilter@@@8				; VuFilter `RTTI Type Descriptor'
PUBLIC	??_R3VuFilter@@8				; VuFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2VuFilter@@8				; VuFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@VuFilter@@8			; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4FalconNothingFilterType@@6B@		; FalconNothingFilterType::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFalconNothingFilterType@@@8		; FalconNothingFilterType `RTTI Type Descriptor'
PUBLIC	??_R3FalconNothingFilterType@@8			; FalconNothingFilterType::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FalconNothingFilterType@@8			; FalconNothingFilterType::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FalconNothingFilterType@@8	; FalconNothingFilterType::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_F4CreateCriticalSection:PROC
EXTRN	_F4DestroyCriticalSection:PROC
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	_F4CheckHasCriticalSection:PROC
EXTRN	_sprintf:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?VuReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuReferenceEntity
EXTRN	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z:PROC	; VuDeReferenceEntity
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z:PROC	; VuSessionEntity::SetKeepaliveTime
EXTRN	??0VuMainThread@@QAE@HPAVVuMessageFilter@@HP6APAVVuSessionEntity@@XZ@Z:PROC ; VuMainThread::VuMainThread
EXTRN	??1VuFilter@@UAE@XZ:PROC			; VuFilter::~VuFilter
EXTRN	?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z:PROC	; VuFilter::RemoveTest
EXTRN	?Notice@VuFilter@@UAEEPAVVuMessage@@@Z:PROC	; VuFilter::Notice
EXTRN	??_EVuFilter@@UAEPAXI@Z:PROC			; VuFilter::`vector deleting destructor'
EXTRN	??0SpotEntity@@QAE@PAPAEPAJ@Z:PROC		; SpotEntity::SpotEntity
EXTRN	?SimVUCreateVehicle@@YAPAVVuEntity@@GGPAE@Z:PROC ; SimVUCreateVehicle
EXTRN	?SimCompare@@YAHPAVVuEntity@@0@Z:PROC		; SimCompare
EXTRN	??_EFalconNothingFilterType@@UAEPAXI@Z:PROC	; FalconNothingFilterType::`vector deleting destructor'
EXTRN	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z:PROC ; FalconMessageFilter::FalconMessageFilter
EXTRN	??1FalconMessageFilter@@UAE@XZ:PROC		; FalconMessageFilter::~FalconMessageFilter
EXTRN	?GetIdFromNamespace@@YAKAAVIdNamespace@@@Z:PROC	; GetIdFromNamespace
EXTRN	??0FalconGameEntity@@QAE@PAPAEPAJ@Z:PROC	; FalconGameEntity::FalconGameEntity
EXTRN	??0FalconSessionEntity@@QAE@KPAD@Z:PROC		; FalconSessionEntity::FalconSessionEntity
EXTRN	??0FalconSessionEntity@@QAE@PAPAEPAJ@Z:PROC	; FalconSessionEntity::FalconSessionEntity
EXTRN	?NewUnit@@YAPAVUnitClass@@FPAPAEPAJ@Z:PROC	; NewUnit
EXTRN	?NewObjective@@YAPAVObjectiveClass@@FPAPAEPAJ@Z:PROC ; NewObjective
EXTRN	?NewManager@@YAPAVVuEntity@@FPAPAEPAJ@Z:PROC	; NewManager
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?VolatileNS@@3VIdNamespace@@A:BYTE		; VolatileNS
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?MajorVersion@@3HA:DWORD			; MajorVersion
EXTRN	?MinorVersion@@3HA:DWORD			; MinorVersion
EXTRN	?BuildNumber@@3HA:DWORD				; BuildNumber
EXTRN	?g_strWorldName@@3PADA:BYTE			; g_strWorldName
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

?FalconNullId@@3VVU_ID@@A DQ 01H DUP (?)		; FalconNullId
?FalconNothingFilter@@3VFalconNothingFilterType@@A DD 01H DUP (?) ; FalconNothingFilter
?idMutex@@3PAXA DD 01H DUP (?)				; idMutex
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@FalconNothingFilterType@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FalconNothingFilterType@@8 DD FLAT:??_R0?AVFalconNothingFilterType@@@8 ; FalconNothingFilterType::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3FalconNothingFilterType@@8
rdata$r	ENDS
;	COMDAT ??_R2FalconNothingFilterType@@8
rdata$r	SEGMENT
??_R2FalconNothingFilterType@@8 DD FLAT:??_R1A@?0A@EA@FalconNothingFilterType@@8 ; FalconNothingFilterType::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3FalconNothingFilterType@@8
rdata$r	SEGMENT
??_R3FalconNothingFilterType@@8 DD 00H			; FalconNothingFilterType::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2FalconNothingFilterType@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFalconNothingFilterType@@@8
_DATA	SEGMENT
??_R0?AVFalconNothingFilterType@@@8 DD FLAT:??_7type_info@@6B@ ; FalconNothingFilterType `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFalconNothingFilterType@@', 00H
_DATA	ENDS
;	COMDAT ??_R4FalconNothingFilterType@@6B@
rdata$r	SEGMENT
??_R4FalconNothingFilterType@@6B@ DD 00H		; FalconNothingFilterType::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFalconNothingFilterType@@@8
	DD	FLAT:??_R3FalconNothingFilterType@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@VuFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@VuFilter@@8 DD FLAT:??_R0?AVVuFilter@@@8	; VuFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2VuFilter@@8
rdata$r	SEGMENT
??_R2VuFilter@@8 DD FLAT:??_R1A@?0A@EA@VuFilter@@8	; VuFilter::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3VuFilter@@8
rdata$r	SEGMENT
??_R3VuFilter@@8 DD 00H					; VuFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVVuFilter@@@8
_DATA	SEGMENT
??_R0?AVVuFilter@@@8 DD FLAT:??_7type_info@@6B@		; VuFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVVuFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4VuFilter@@6B@
rdata$r	SEGMENT
??_R4VuFilter@@6B@ DD 00H				; VuFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVVuFilter@@@8
	DD	FLAT:??_R3VuFilter@@8
rdata$r	ENDS
;	COMDAT ??_C@_09BFJFHJLB@ids?5mutex?$AA@
CONST	SEGMENT
??_C@_09BFJFHJLB@ids?5mutex?$AA@ DB 'ids mutex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GMIOGINE@Falcon?54?40?$AA@
CONST	SEGMENT
??_C@_0L@GMIOGINE@Falcon?54?40?$AA@ DB 'Falcon 4.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GPAKENJH@You?5dropped?5an?5entity?0?5better?5fi@
CONST	SEGMENT
??_C@_0CK@GPAKENJH@You?5dropped?5an?5entity?0?5better?5fi@ DB 'You droppe'
	DB	'd an entity, better find it!!!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKMHPJFM@Vu?$AA@
CONST	SEGMENT
??_C@_02DKMHPJFM@Vu?$AA@ DB 'Vu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PFIHAAKM@Version?5?$CFs?5?$CFs?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@PFIHAAKM@Version?5?$CFs?5?$CFs?5?$CFs?6?$AA@ DB 'Version %s %s '
	DB	'%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
CONST	SEGMENT
??_C@_0M@CFLADCE@Feb?518?52013?$AA@ DB 'Feb 18 2013', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NKPFHFKE@14?317?307?$AA@
CONST	SEGMENT
??_C@_08NKPFHFKE@14?317?307?$AA@ DB '14:17:07', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KGJHEDPH@R?$CF5d?4?$CF2d?4?$CF02d?4?$CFs?4?$CFd_?$AA?$AA@
CONST	SEGMENT
??_C@_0BG@KGJHEDPH@R?$CF5d?4?$CF2d?4?$CF02d?4?$CFs?4?$CFd_?$AA?$AA@ DB 'R'
	DB	'%5d.%2d.%02d.%s.%d_', 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JAPJNPNF@EBS?$AA@
CONST	SEGMENT
??_C@_03JAPJNPNF@EBS?$AA@ DB 'EBS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7FalconNothingFilterType@@6B@
CONST	SEGMENT
??_7FalconNothingFilterType@@6B@ DD FLAT:??_R4FalconNothingFilterType@@6B@ ; FalconNothingFilterType::`vftable'
	DD	FLAT:??_EFalconNothingFilterType@@UAEPAXI@Z
	DD	FLAT:?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z
	DD	FLAT:?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
CONST	ENDS
;	COMDAT ??_7VuFilter@@6B@
CONST	SEGMENT
??_7VuFilter@@6B@ DD FLAT:??_R4VuFilter@@6B@		; VuFilter::`vftable'
	DD	FLAT:??_EVuFilter@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?RemoveTest@VuFilter@@UAEEPAVVuEntity@@@Z
	DD	FLAT:?Notice@VuFilter@@UAEEPAVVuMessage@@@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ$0
__ehfuncinfo$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ$0
__unwindtable$?InitVU@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitVU@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?InitVU@@YAXXZ$1
__unwindtable$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$3
__ehfuncinfo$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitVU@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitVU@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_FalconNullId$initializer$ DD FLAT:??__EFalconNullId@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_FalconNothingFilter$initializer$ DD FLAT:??__EFalconNothingFilter@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_idMutex$initializer$ DD FLAT:??__EidMutex@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
;	COMDAT ??__EidMutex@@YAXXZ
text$yc	SEGMENT
??__EidMutex@@YAXXZ PROC				; `dynamic initializer for 'idMutex'', COMDAT

; 388  : VuMutex idMutex = VuxCreateMutex("ids mutex");

	push	ebp
	mov	ebp, esp
	push	OFFSET ??_C@_09BFJFHJLB@ids?5mutex?$AA@
	call	?VuxCreateMutex@@YAPAXPBD@Z		; VuxCreateMutex
	add	esp, 4
	mov	DWORD PTR ?idMutex@@3PAXA, eax		; idMutex
	pop	ebp
	ret	0
??__EidMutex@@YAXXZ ENDP				; `dynamic initializer for 'idMutex''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FFalconNothingFilter@@YAXXZ
text$yd	SEGMENT
??__FFalconNothingFilter@@YAXXZ PROC			; `dynamic atexit destructor for 'FalconNothingFilter'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?FalconNothingFilter@@3VFalconNothingFilterType@@A ; FalconNothingFilter
	call	??1FalconNothingFilterType@@UAE@XZ	; FalconNothingFilterType::~FalconNothingFilterType
	pop	ebp
	ret	0
??__FFalconNothingFilter@@YAXXZ ENDP			; `dynamic atexit destructor for 'FalconNothingFilter''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
;	COMDAT ??__EFalconNothingFilter@@YAXXZ
text$yc	SEGMENT
??__EFalconNothingFilter@@YAXXZ PROC			; `dynamic initializer for 'FalconNothingFilter'', COMDAT

; 94   : FalconNothingFilterType	FalconNothingFilter;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?FalconNothingFilter@@3VFalconNothingFilterType@@A ; FalconNothingFilter
	call	??0FalconNothingFilterType@@QAE@XZ	; FalconNothingFilterType::FalconNothingFilterType
	push	OFFSET ??__FFalconNothingFilter@@YAXXZ	; `dynamic atexit destructor for 'FalconNothingFilter''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EFalconNothingFilter@@YAXXZ ENDP			; `dynamic initializer for 'FalconNothingFilter''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
;	COMDAT ??__EFalconNullId@@YAXXZ
text$yc	SEGMENT
??__EFalconNullId@@YAXXZ PROC				; `dynamic initializer for 'FalconNullId'', COMDAT

; 92   : VU_ID FalconNullId;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EFalconNullId@@YAXXZ ENDP				; `dynamic initializer for 'FalconNullId''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
tv76 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?vuxCreateSession@@YAPAVVuSessionEntity@@XZ PROC	; vuxCreateSession

; 363  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 364  : 	return (VuSessionEntity*) new FalconSessionEntity(vuxLocalDomain,"Falcon 4.0");

	push	660					; 00000294H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@vuxCreateS
	push	OFFSET ??_C@_0L@GMIOGINE@Falcon?54?40?$AA@
	mov	eax, DWORD PTR ?vuxLocalDomain@@3KA	; vuxLocalDomain
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0FalconSessionEntity@@QAE@KPAD@Z	; FalconSessionEntity::FalconSessionEntity
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@vuxCreateS
$LN3@vuxCreateS:
	mov	DWORD PTR tv76[ebp], 0
$LN4@vuxCreateS:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]

; 365  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?vuxCreateSession@@YAPAVVuSessionEntity@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?vuxCreateSession@@YAPAVVuSessionEntity@@XZ ENDP	; vuxCreateSession
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GFalconNothingFilterType@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFalconNothingFilterType@@UAEPAXI@Z PROC		; FalconNothingFilterType::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1FalconNothingFilterType@@UAE@XZ	; FalconNothingFilterType::~FalconNothingFilterType
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFalconNothingFilterType@@UAEPAXI@Z ENDP		; FalconNothingFilterType::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T2 = -24						; size = 4
tv74 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ PROC	; FalconNothingFilterType::Copy, COMDAT
; _this$ = ecx

; 38   : 	virtual VuFilter *Copy()							{ return new FalconNothingFilterType(); }

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Copy
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0FalconNothingFilterType@@QAE@XZ	; FalconNothingFilterType::FalconNothingFilterType
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Copy
$LN3@Copy:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Copy:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Copy@FalconNothingFilterType@@UAEPAVVuFilter@@XZ ENDP	; FalconNothingFilterType::Copy
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ent1$ = 8						; size = 4
_ent2$ = 12						; size = 4
?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z PROC ; FalconNothingFilterType::Compare, COMDAT
; _this$ = ecx

; 37   : 	virtual int Compare(VuEntity *ent1, VuEntity *ent2)	{ return (SimCompare (ent1, ent2)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ent2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent1$[ebp]
	push	ecx
	call	?SimCompare@@YAHPAVVuEntity@@0@Z	; SimCompare
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	8
?Compare@FalconNothingFilterType@@UAEHPAVVuEntity@@0@Z ENDP ; FalconNothingFilterType::Compare
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z PROC ; FalconNothingFilterType::RemoveTest, COMDAT
; _this$ = ecx

; 36   : 	virtual VU_BOOL RemoveTest(VuEntity *)				{ return TRUE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveTest@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z ENDP ; FalconNothingFilterType::RemoveTest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z PROC	; FalconNothingFilterType::Test, COMDAT
; _this$ = ecx

; 35   : 	virtual VU_BOOL Test(VuEntity *)					{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	4
?Test@FalconNothingFilterType@@UAEEPAVVuEntity@@@Z ENDP	; FalconNothingFilterType::Test
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ??1FalconNothingFilterType@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1FalconNothingFilterType@@UAE@XZ PROC			; FalconNothingFilterType::~FalconNothingFilterType, COMDAT
; _this$ = ecx

; 33   : 	virtual ~FalconNothingFilterType(void)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FalconNothingFilterType@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	esp, ebp
	pop	ebp
	ret	0
??1FalconNothingFilterType@@UAE@XZ ENDP			; FalconNothingFilterType::~FalconNothingFilterType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falclist.h
;	COMDAT ??0FalconNothingFilterType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0FalconNothingFilterType@@QAE@XZ PROC			; FalconNothingFilterType::FalconNothingFilterType, COMDAT
; _this$ = ecx

; 32   : 	FalconNothingFilterType(void)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0VuFilter@@IAE@XZ			; VuFilter::VuFilter
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7FalconNothingFilterType@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0FalconNothingFilterType@@QAE@XZ ENDP			; FalconNothingFilterType::FalconNothingFilterType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
tv74 = -12						; size = 4
$T2 = -8						; size = 4
$T3 = -4						; size = 4
?ExitVU@@YAXXZ PROC					; ExitVU

; 169  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 170  :    delete (gMainThread);

	mov	eax, DWORD PTR ?gMainThread@@3PAVVuMainThread@@A ; gMainThread
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@ExitVU
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@ExitVU
$LN3@ExitVU:
	mov	DWORD PTR tv74[ebp], 0
$LN4@ExitVU:

; 171  :    delete [] vuxWorldName;

	mov	eax, DWORD PTR ?vuxWorldName@@3PADA	; vuxWorldName
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 172  :    gMainThread = NULL;

	mov	DWORD PTR ?gMainThread@@3PAVVuMainThread@@A, 0 ; gMainThread

; 173  :    F4DestroyCriticalSection(vuCritical);

	mov	edx, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	edx
	call	_F4DestroyCriticalSection
	add	esp, 4

; 174  :    vuCritical = NULL;

	mov	DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A, 0 ; vuCritical

; 175  : 
; 176  : 	#ifdef USE_SH_POOLS
; 177  :    VuLinkNode::ReleaseStorage();
; 178  :    VuRBNode::ReleaseStorage();
; 179  :    MemPoolFree( gVuMsgMemPool );
; 180  :    MemPoolFree( gVuFilterMemPool );
; 181  : 	#endif
; 182  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ExitVU@@YAXXZ ENDP					; ExitVU
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_falconFilter$ = -300					; size = 12
$T2 = -288						; size = 4
$T3 = -284						; size = 4
$T4 = -280						; size = 4
tv138 = -276						; size = 4
_tmpStr$ = -272						; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitVU@@YAXXZ PROC					; InitVU

; 108  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitVU@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 109  : 	char tmpStr[256];
; 110  : 
; 111  : 	#ifdef USE_SH_POOLS
; 112  : 	gVuMsgMemPool = MemPoolInit( 0 );
; 113  : 	gVuFilterMemPool = MemPoolInit( 0 );
; 114  : 
; 115  : 	VuLinkNode::InitializeStorage();
; 116  : 	VuRBNode::InitializeStorage();
; 117  : 	#endif
; 118  : 
; 119  :    // Make sure we're using the right VU
; 120  : #if (VU_VERSION_USED  != VU_VERSION)
; 121  : #error "Incorrect VU Version"
; 122  : #endif
; 123  : 
; 124  : #if (VU_REVISION_USED != VU_REVISION)
; 125  : #error "Incorrect VU Revision"
; 126  : #endif
; 127  : 
; 128  : #if (VU_PATCH_USED    != VU_PATCH)
; 129  : #error "Incorrect VU Patch"
; 130  : #endif
; 131  : 
; 132  : #ifdef NDEBUG // Differentiate Debug & Release versions so they can't be seen by each other (PJW)
; 133  :    sprintf (tmpStr, "R%5d.%2d.%02d.%s.%d_\0", BuildNumber, gLangIDNum, MinorVersion, "EBS", MajorVersion);

	mov	eax, DWORD PTR ?MajorVersion@@3HA	; MajorVersion
	push	eax
	push	OFFSET ??_C@_03JAPJNPNF@EBS?$AA@
	mov	ecx, DWORD PTR ?MinorVersion@@3HA	; MinorVersion
	push	ecx
	mov	edx, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	push	edx
	mov	eax, DWORD PTR ?BuildNumber@@3HA	; BuildNumber
	push	eax
	push	OFFSET ??_C@_0BG@KGJHEDPH@R?$CF5d?4?$CF2d?4?$CF02d?4?$CFs?4?$CFd_?$AA?$AA@
	lea	ecx, DWORD PTR _tmpStr$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 28					; 0000001cH

; 134  : #else
; 135  :    sprintf (tmpStr, "K%5d.%2d.%02d.%s.%d_\0", BuildNumber, gLangIDNum, MinorVersion, "EBS", MajorVersion);
; 136  : #endif
; 137  : 
; 138  : 	MonoPrint ("Version %s %s %s\n", tmpStr, __DATE__, __TIME__);

	push	OFFSET ??_C@_08NKPFHFKE@14?317?307?$AA@
	push	OFFSET ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
	lea	edx, DWORD PTR _tmpStr$[ebp]
	push	edx
	push	OFFSET ??_C@_0BC@PFIHAAKM@Version?5?$CFs?5?$CFs?5?$CFs?6?$AA@
	call	_MonoPrint
	add	esp, 16					; 00000010H

; 139  : 
; 140  : 	// Change this to stop different versions taking to each other
; 141  : 
; 142  : 	// OW FIXME
; 143  : 	// strcpy (tmpStr, "F527");
; 144  : 	//	strcpy(tmpStr, "F552");		//  according to REVISOR this will allow connections to 1.08 servers. we'll see
; 145  : 	//strcpy(tmpStr, "E109newmp"); //me123 we are not interested in 108 conections anymore since they'll ctd us
; 146  : 	strcpy(tmpStr, g_strWorldName);

	push	OFFSET ?g_strWorldName@@3PADA		; g_strWorldName
	lea	eax, DWORD PTR _tmpStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 147  : 
; 148  : 	vuxWorldName = new char[strlen(tmpStr) + 1];

	lea	ecx, DWORD PTR _tmpStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?vuxWorldName@@3PADA, edx	; vuxWorldName

; 149  : 	strcpy (vuxWorldName, tmpStr);

	lea	eax, DWORD PTR _tmpStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?vuxWorldName@@3PADA	; vuxWorldName
	push	ecx
	call	_strcpy
	add	esp, 8

; 150  : #if VU_USE_ENUM_FOR_TYPES
; 151  : 	FalconMessageFilter falconFilter(FalconEvent::SimThread, true);

	push	1
	push	1
	lea	ecx, DWORD PTR _falconFilter$[ebp]
	call	??0FalconMessageFilter@@QAE@W4HandlingThread@FalconEvent@@_N@Z ; FalconMessageFilter::FalconMessageFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 152  : #else
; 153  : 	FalconMessageFilter falconFilter(FalconEvent::SimThread, VU_VU_MESSAGE_BITS);
; 154  : #endif
; 155  : 	vuCritical = F4CreateCriticalSection("Vu");

	push	OFFSET ??_C@_02DKMHPJFM@Vu?$AA@
	call	_F4CreateCriticalSection
	add	esp, 4
	mov	DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A, eax ; vuCritical

; 156  : 	//VU_ID_NUMBER low = FIRST_VOLATILE_VU_ID_NUMBER;
; 157  : 	//VU_ID_NUMBER hi = LAST_VOLATILE_VU_ID_NUMBER;
; 158  : 	gMainThread = new VuMainThread(
; 159  : 		/*low, hi, */F4_ENTITY_TABLE_SIZE, &falconFilter, F4_EVENT_QUEUE_SIZE, vuxCreateSession
; 160  : 	);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@InitVU
	push	OFFSET ?vuxCreateSession@@YAPAVVuSessionEntity@@XZ ; vuxCreateSession
	push	2000					; 000007d0H
	lea	edx, DWORD PTR _falconFilter$[ebp]
	push	edx
	push	10529					; 00002921H
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0VuMainThread@@QAE@HPAVVuMessageFilter@@HP6APAVVuSessionEntity@@XZ@Z ; VuMainThread::VuMainThread
	mov	DWORD PTR tv138[ebp], eax
	jmp	SHORT $LN4@InitVU
$LN3@InitVU:
	mov	DWORD PTR tv138[ebp], 0
$LN4@InitVU:
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gMainThread@@3PAVVuMainThread@@A, ecx ; gMainThread

; 161  : 
; 162  : 	// Default VU namespace
; 163  : 	/*vuAssignmentId = FIRST_VOLATILE_VU_ID_NUMBER;
; 164  : 	vuLowWrapNumber = FIRST_VOLATILE_VU_ID_NUMBER;
; 165  : 	vuHighWrapNumber = LAST_VOLATILE_VU_ID_NUMBER;*/
; 166  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _falconFilter$[ebp]
	call	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitVU@@YAXXZ$0:
	lea	ecx, DWORD PTR _falconFilter$[ebp]
	jmp	??1FalconMessageFilter@@UAE@XZ		; FalconMessageFilter::~FalconMessageFilter
__unwindfunclet$?InitVU@@YAXXZ$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitVU@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitVU@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitVU@@YAXXZ ENDP					; InitVU
; Function compile flags: /Odtp
;	COMDAT ??_GVuFilter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GVuFilter@@UAEPAXI@Z PROC				; VuFilter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1VuFilter@@UAE@XZ			; VuFilter::~VuFilter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GVuFilter@@UAEPAXI@Z ENDP				; VuFilter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_filter.h
;	COMDAT ??0VuFilter@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VuFilter@@IAE@XZ PROC				; VuFilter::VuFilter, COMDAT
; _this$ = ecx

; 40   : 	VuFilter() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7VuFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VuFilter@@IAE@XZ ENDP				; VuFilter::VuFilter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_theEntity$ = 8						; size = 4
?VuxRetireEntity@@YAXPAVVuEntity@@@Z PROC		; VuxRetireEntity

; 357  : {

	push	ebp
	mov	ebp, esp

; 358  : 	F4Assert(theEntity);
; 359  : 	MonoPrint ("You dropped an entity, better find it!!!\n");

	push	OFFSET ??_C@_0CK@GPAKENJH@You?5dropped?5an?5entity?0?5better?5fi@
	call	_MonoPrint
	add	esp, 4

; 360  : }

	pop	ebp
	ret	0
?VuxRetireEntity@@YAXPAVVuEntity@@@Z ENDP		; VuxRetireEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
$T2 = -152						; size = 8
$T3 = -144						; size = 8
$T4 = -136						; size = 8
$T5 = -128						; size = 8
$T6 = -120						; size = 8
$T7 = -112						; size = 8
$T8 = -104						; size = 4
$T9 = -100						; size = 4
$T10 = -96						; size = 4
$T11 = -92						; size = 4
_classPtr$ = -88					; size = 4
tv193 = -84						; size = 4
tv224 = -80						; size = 4
tv145 = -76						; size = 4
$T12 = -72						; size = 4
tv300 = -68						; size = 4
tv268 = -64						; size = 4
tv128 = -60						; size = 4
tv241 = -56						; size = 4
tv287 = -52						; size = 4
$T13 = -48						; size = 4
tv176 = -44						; size = 4
tv313 = -40						; size = 4
$T14 = -36						; size = 4
$T15 = -32						; size = 4
tv71 = -28						; size = 4
_data$ = -24						; size = 4
_rem$ = -20						; size = 4
_retval$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 2
_size$ = 12						; size = 2
_dataPtr$ = 16						; size = 4
?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z PROC		; VuxCreateEntity

; 189  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 190  : 	VuEntity *retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 191  : 	VuEntityType* classPtr = VuxType(type);

	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	call	?VuxType@@YAPAUVuEntityType@@G@Z	; VuxType
	add	esp, 4
	mov	DWORD PTR _classPtr$[ebp], eax

; 192  : 	F4Assert(classPtr!= NULL);
; 193  : 
; 194  : 	//sfr: rem for compatibility reasons
; 195  : 	long rem = size;

	movzx	ecx, WORD PTR _size$[ebp]
	mov	DWORD PTR _rem$[ebp], ecx

; 196  : 
; 197  : 	VU_BYTE **data = &dataPtr;

	lea	edx, DWORD PTR _dataPtr$[ebp]
	mov	DWORD PTR _data$[ebp], edx

; 198  : 
; 199  : 	switch (classPtr->classInfo_[VU_CLASS]) {

	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _classPtr$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+8]
	mov	DWORD PTR tv71[ebp], edx
	mov	eax, DWORD PTR tv71[ebp]
	sub	eax, 2
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 10			; 0000000aH
	ja	$LN1@VuxCreateE
	mov	ecx, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN46@VuxCreateE[ecx*4]
$LN16@VuxCreateE:

; 200  : 		case (CLASS_VEHICLE):{
; 201  : 			retval =  SimVUCreateVehicle (type, size, dataPtr);

	mov	edx, DWORD PTR _dataPtr$[ebp]
	push	edx
	movzx	eax, WORD PTR _size$[ebp]
	push	eax
	movzx	ecx, WORD PTR _type$[ebp]
	push	ecx
	call	?SimVUCreateVehicle@@YAPAVVuEntity@@GGPAE@Z ; SimVUCreateVehicle
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 202  : 			break;

	jmp	$LN17@VuxCreateE
$LN15@VuxCreateE:

; 203  : 		}
; 204  : 		case (TYPE_EJECT):{
; 205  : 			retval = SimVUCreateVehicle (type, size, dataPtr); 

	mov	edx, DWORD PTR _dataPtr$[ebp]
	push	edx
	movzx	eax, WORD PTR _size$[ebp]
	push	eax
	movzx	ecx, WORD PTR _type$[ebp]
	push	ecx
	call	?SimVUCreateVehicle@@YAPAVVuEntity@@GGPAE@Z ; SimVUCreateVehicle
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 206  : 			break;

	jmp	$LN17@VuxCreateE
$LN14@VuxCreateE:

; 207  : 		}
; 208  : 		case (CLASS_FEATURE):{
; 209  : 			ShiWarning ("We shouldn't be creating features this way");
; 210  : 			retval = NULL;			 

	mov	DWORD PTR _retval$[ebp], 0

; 211  : 			break;

	jmp	$LN17@VuxCreateE
$LN13@VuxCreateE:

; 212  : 		}
; 213  : 		case (CLASS_UNIT): {
; 214  : 			retval = (VuEntity*) NewUnit(type, data, &rem);

	lea	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	movzx	ecx, WORD PTR _type$[ebp]
	push	ecx
	call	?NewUnit@@YAPAVUnitClass@@FPAPAEPAJ@Z	; NewUnit
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 215  : 			// This is a valid creation call only if this entity is still owned by
; 216  : 			// the owner of our game
; 217  : 			if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN21@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN22@VuxCreateE
$LN21@VuxCreateE:
	mov	DWORD PTR tv128[ebp], 0
$LN22@VuxCreateE:
	cmp	DWORD PTR tv128[ebp], 0
	je	SHORT $LN11@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN24@VuxCreateE
$LN23@VuxCreateE:
	mov	DWORD PTR tv145[ebp], 0
$LN24@VuxCreateE:
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _retval$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR tv145[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@VuxCreateE
$LN11@VuxCreateE:

; 218  : 			{
; 219  : 				VuReferenceEntity(retval);

	mov	ecx, DWORD PTR _retval$[ebp]
	push	ecx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 220  : 				VuDeReferenceEntity(retval);

	mov	edx, DWORD PTR _retval$[ebp]
	push	edx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 221  : 				retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0
$LN12@VuxCreateE:

; 222  : 			}
; 223  : 			break;

	jmp	$LN17@VuxCreateE
$LN10@VuxCreateE:

; 224  : 		}
; 225  : 		case (CLASS_MANAGER): {
; 226  : 			retval = (VuEntity*) NewManager (type, data, &rem);

	lea	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	movzx	edx, WORD PTR _type$[ebp]
	push	edx
	call	?NewManager@@YAPAVVuEntity@@FPAPAEPAJ@Z	; NewManager
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 227  : 			// This is a valid creation call only if this entity is still owned by
; 228  : 			// the owner of our game
; 229  : 			if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN26@VuxCreateE
$LN25@VuxCreateE:
	mov	DWORD PTR tv176[ebp], 0
$LN26@VuxCreateE:
	cmp	DWORD PTR tv176[ebp], 0
	je	SHORT $LN8@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN27@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN28@VuxCreateE
$LN27@VuxCreateE:
	mov	DWORD PTR tv193[ebp], 0
$LN28@VuxCreateE:
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _retval$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	push	eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, DWORD PTR tv193[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@VuxCreateE
$LN8@VuxCreateE:

; 230  : 			{
; 231  : 				VuReferenceEntity(retval);

	mov	edx, DWORD PTR _retval$[ebp]
	push	edx
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 232  : 				VuDeReferenceEntity(retval);

	mov	eax, DWORD PTR _retval$[ebp]
	push	eax
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 233  : 				retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0
$LN9@VuxCreateE:

; 234  : 			}
; 235  : 			break;

	jmp	$LN17@VuxCreateE
$LN7@VuxCreateE:

; 236  : 		}
; 237  : 		case (CLASS_OBJECTIVE): {
; 238  : 			retval = (VuEntity*) NewObjective (type, data, &rem);

	lea	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	movzx	eax, WORD PTR _type$[ebp]
	push	eax
	call	?NewObjective@@YAPAVObjectiveClass@@FPAPAEPAJ@Z ; NewObjective
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$[ebp], eax

; 239  : 			// This is a valid creation call only if this entity is still owned by
; 240  : 			// the owner of our game
; 241  : 			if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN29@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv224[ebp], eax
	jmp	SHORT $LN30@VuxCreateE
$LN29@VuxCreateE:
	mov	DWORD PTR tv224[ebp], 0
$LN30@VuxCreateE:
	cmp	DWORD PTR tv224[ebp], 0
	je	SHORT $LN5@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN31@VuxCreateE
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv241[ebp], eax
	jmp	SHORT $LN32@VuxCreateE
$LN31@VuxCreateE:
	mov	DWORD PTR tv241[ebp], 0
$LN32@VuxCreateE:
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _retval$[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv241[ebp]
	call	?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ	; VuEntity::OwnerId
	mov	ecx, eax
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@VuxCreateE
$LN5@VuxCreateE:

; 242  : 			{
; 243  : 				VuReferenceEntity(retval);

	mov	eax, DWORD PTR _retval$[ebp]
	push	eax
	call	?VuReferenceEntity@@YAHPAVVuEntity@@@Z	; VuReferenceEntity
	add	esp, 4

; 244  : 				VuDeReferenceEntity(retval);

	mov	ecx, DWORD PTR _retval$[ebp]
	push	ecx
	call	?VuDeReferenceEntity@@YAHPAVVuEntity@@@Z ; VuDeReferenceEntity
	add	esp, 4

; 245  : 				retval = NULL;

	mov	DWORD PTR _retval$[ebp], 0
$LN6@VuxCreateE:

; 246  : 			}
; 247  : 			break;

	jmp	$LN17@VuxCreateE
$LN4@VuxCreateE:

; 248  : 		}
; 249  : 		case (CLASS_SESSION): {
; 250  : 			retval = (VuEntity*) new FalconSessionEntity(data, &rem);

	push	660					; 00000294H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN33@VuxCreateE
	lea	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0FalconSessionEntity@@QAE@PAPAEPAJ@Z	; FalconSessionEntity::FalconSessionEntity
	mov	DWORD PTR tv268[ebp], eax
	jmp	SHORT $LN34@VuxCreateE
$LN33@VuxCreateE:
	mov	DWORD PTR tv268[ebp], 0
$LN34@VuxCreateE:
	mov	ecx, DWORD PTR tv268[ebp]
	mov	DWORD PTR $T9[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T9[ebp]
	mov	DWORD PTR _retval$[ebp], edx

; 251  : 			((VuSessionEntity*)retval)->SetKeepaliveTime (vuxRealTime);

	mov	eax, DWORD PTR ?vuxRealTime@@3KA	; vuxRealTime
	push	eax
	mov	ecx, DWORD PTR _retval$[ebp]
	call	?SetKeepaliveTime@VuSessionEntity@@QAEXK@Z ; VuSessionEntity::SetKeepaliveTime

; 252  : 			break;

	jmp	$LN17@VuxCreateE
$LN3@VuxCreateE:

; 253  : 		}
; 254  : 		case (CLASS_GROUP): {
; 255  : 			retval = (VuEntity*) new FalconGameEntity(data, &rem);			// FalconGroupEntity at some point..

	push	432					; 000001b0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN35@VuxCreateE
	lea	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0FalconGameEntity@@QAE@PAPAEPAJ@Z	; FalconGameEntity::FalconGameEntity
	mov	DWORD PTR tv287[ebp], eax
	jmp	SHORT $LN36@VuxCreateE
$LN35@VuxCreateE:
	mov	DWORD PTR tv287[ebp], 0
$LN36@VuxCreateE:
	mov	eax, DWORD PTR tv287[ebp]
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T11[ebp]
	mov	DWORD PTR _retval$[ebp], ecx

; 256  : 			break;

	jmp	$LN17@VuxCreateE
$LN2@VuxCreateE:

; 257  : 		}
; 258  : 		case (CLASS_GAME): {
; 259  : 			retval = (VuEntity*) new FalconGameEntity(data, &rem);

	push	432					; 000001b0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T15[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T15[ebp], 0
	je	SHORT $LN37@VuxCreateE
	lea	edx, DWORD PTR _rem$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T15[ebp]
	call	??0FalconGameEntity@@QAE@PAPAEPAJ@Z	; FalconGameEntity::FalconGameEntity
	mov	DWORD PTR tv300[ebp], eax
	jmp	SHORT $LN38@VuxCreateE
$LN37@VuxCreateE:
	mov	DWORD PTR tv300[ebp], 0
$LN38@VuxCreateE:
	mov	ecx, DWORD PTR tv300[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T10[ebp]
	mov	DWORD PTR _retval$[ebp], edx

; 260  : 			break;

	jmp	SHORT $LN17@VuxCreateE
$LN1@VuxCreateE:

; 261  : 		}
; 262  : 		default: {
; 263  : 			// This is not a class table entry so to speak, but it is a ground spot
; 264  : 			//retval = (VuEntity*) new GroundSpotEntity(type);
; 265  : 			retval = (VuEntity*) new SpotEntity(data, &rem); // JB 010718

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T14[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN39@VuxCreateE
	lea	eax, DWORD PTR _rem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T14[ebp]
	call	??0SpotEntity@@QAE@PAPAEPAJ@Z		; SpotEntity::SpotEntity
	mov	DWORD PTR tv313[ebp], eax
	jmp	SHORT $LN40@VuxCreateE
$LN39@VuxCreateE:
	mov	DWORD PTR tv313[ebp], 0
$LN40@VuxCreateE:
	mov	edx, DWORD PTR tv313[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR _retval$[ebp], eax
$LN17@VuxCreateE:

; 266  : 		}
; 267  : 	}
; 268  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 269  : 
; 270  : 	/*if (classPtr->classInfo_[VU_CLASS] == CLASS_VEHICLE)
; 271  : 	{
; 272  : 		retval = SimVUCreateVehicle (type, size, data);
; 273  : 	}
; 274  : 	else if (classPtr->classInfo_[VU_TYPE] == TYPE_EJECT)
; 275  : 	{
; 276  : 		retval = SimVUCreateVehicle (type, size, data);
; 277  : 	}
; 278  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_FEATURE)
; 279  : 	{
; 280  : 		ShiWarning ("We shouldn't be creating features this way");
; 281  : 		retval = NULL;
; 282  : 	}
; 283  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_UNIT)
; 284  : 	{
; 285  : 		retval = (VuEntity*) NewUnit (type, &data);
; 286  : 		// This is a valid creation call only if this entity is still owned by
; 287  : 		// the owner of our game
; 288  : 		if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())
; 289  : 		{
; 290  : 			VuReferenceEntity(retval);
; 291  : 			VuDeReferenceEntity(retval);
; 292  : 			retval = NULL;
; 293  : 		}
; 294  : 	}
; 295  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_MANAGER)
; 296  : 	{
; 297  : 		retval = (VuEntity*) NewManager (type, data);
; 298  : 		// This is a valid creation call only if this entity is still owned by
; 299  : 		// the owner of our game
; 300  : 		if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())
; 301  : 		{
; 302  : 			VuReferenceEntity(retval);
; 303  : 			VuDeReferenceEntity(retval);
; 304  : 			retval = NULL;
; 305  : 		}
; 306  : 	}
; 307  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_OBJECTIVE)
; 308  : 	{
; 309  : 		retval = (VuEntity*) NewObjective (type, &data);
; 310  : 		// This is a valid creation call only if this entity is still owned by
; 311  : 		// the owner of our game
; 312  : 		if (!FalconLocalGame || FalconLocalGame->OwnerId() != retval->OwnerId())
; 313  : 		{
; 314  : 			VuReferenceEntity(retval);
; 315  : 			VuDeReferenceEntity(retval);
; 316  : 			retval = NULL;
; 317  : 		}
; 318  : 	}
; 319  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_SESSION)
; 320  : 	{
; 321  : 		retval = (VuEntity*) new FalconSessionEntity(&data);
; 322  : 		((VuSessionEntity*)retval)->SetKeepaliveTime (vuxRealTime);
; 323  : 	}
; 324  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_GROUP)
; 325  : 	{
; 326  : 		retval = (VuEntity*) new FalconGameEntity(&data);			// FalconGroupEntity at some point..
; 327  : 	}
; 328  : 	else if (classPtr->classInfo_[VU_CLASS] == CLASS_GAME)
; 329  : 	{
; 330  : 		retval = (VuEntity*) new FalconGameEntity(&data);
; 331  : 	}
; 332  : 	else
; 333  : 	{
; 334  : 		// This is not a class table entry so to speak, but it is a ground spot
; 335  : 		//retval = (VuEntity*) new GroundSpotEntity(type);
; 336  : 		retval = (VuEntity*) new GroundSpotEntity(&data, &rem); // JB 010718
; 337  : 	}
; 338  : 	return retval;*/
; 339  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN46@VuxCreateE:
	DD	$LN14@VuxCreateE
	DD	$LN10@VuxCreateE
	DD	$LN7@VuxCreateE
	DD	$LN1@VuxCreateE
	DD	$LN13@VuxCreateE
	DD	$LN16@VuxCreateE
	DD	$LN1@VuxCreateE
	DD	$LN15@VuxCreateE
	DD	$LN4@VuxCreateE
	DD	$LN2@VuxCreateE
	DD	$LN3@VuxCreateE
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$0:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$1:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$2:
	mov	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z$3:
	mov	eax, DWORD PTR $T14[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?VuxCreateEntity@@YAPAVVuEntity@@GGPAE@Z ENDP		; VuxCreateEntity
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
tv67 = -1						; size = 1
?VuHasCriticalSection@@YA_NXZ PROC			; VuHasCriticalSection

; 471  : bool VuHasCriticalSection(){

	push	ebp
	mov	ebp, esp
	push	ecx

; 472  : 	return F4CheckHasCriticalSection(vuCritical) ? true : false;

	mov	eax, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	eax
	call	_F4CheckHasCriticalSection
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@VuHasCriti
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@VuHasCriti
$LN3@VuHasCriti:
	mov	BYTE PTR tv67[ebp], 0
$LN4@VuHasCriti:
	mov	al, BYTE PTR tv67[ebp]

; 473  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?VuHasCriticalSection@@YA_NXZ ENDP			; VuHasCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
?VuExitCriticalSection@@YAXXZ PROC			; VuExitCriticalSection

; 467  : void VuExitCriticalSection(void){ 

	push	ebp
	mov	ebp, esp

; 468  : 	F4LeaveCriticalSection(vuCritical);

	mov	eax, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4

; 469  : }

	pop	ebp
	ret	0
?VuExitCriticalSection@@YAXXZ ENDP			; VuExitCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
?VuEnterCriticalSection@@YAXXZ PROC			; VuEnterCriticalSection

; 463  : void VuEnterCriticalSection(void){ 

	push	ebp
	mov	ebp, esp

; 464  : 	F4EnterCriticalSection(vuCritical); 

	mov	eax, DWORD PTR ?vuCritical@@3PAUF4CSECTIONHANDLE@@A ; vuCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 465  : }

	pop	ebp
	ret	0
?VuEnterCriticalSection@@YAXXZ ENDP			; VuEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
?VuxGetId@@YAKXZ PROC					; VuxGetId

; 390  : VU_ID_NUMBER VuxGetId(){

	push	ebp
	mov	ebp, esp

; 391  : 	return GetIdFromNamespace(VolatileNS);

	push	OFFSET ?VolatileNS@@3VIdNamespace@@A	; VolatileNS
	call	?GetIdFromNamespace@@YAKAAVIdNamespace@@@Z ; GetIdFromNamespace
	add	esp, 4

; 392  : }

	pop	ebp
	ret	0
?VuxGetId@@YAKXZ ENDP					; VuxGetId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
?VuxUnlockMutex@@YAXPAX@Z PROC				; VuxUnlockMutex

; 375  : void VuxUnlockMutex(VuMutex m){

	push	ebp
	mov	ebp, esp

; 376  : 	F4LeaveCriticalSection(static_cast<F4CSECTIONHANDLE*>(m));

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4

; 377  : }

	pop	ebp
	ret	0
?VuxUnlockMutex@@YAXPAX@Z ENDP				; VuxUnlockMutex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
?VuxLockMutex@@YAXPAX@Z PROC				; VuxLockMutex

; 371  : void VuxLockMutex(VuMutex m){

	push	ebp
	mov	ebp, esp

; 372  : 	F4EnterCriticalSection(static_cast<F4CSECTIONHANDLE*>(m));

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4

; 373  : }

	pop	ebp
	ret	0
?VuxLockMutex@@YAXPAX@Z ENDP				; VuxLockMutex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_m$ = 8							; size = 4
?VuxDestroyMutex@@YAXPAX@Z PROC				; VuxDestroyMutex

; 383  : void VuxDestroyMutex(VuMutex m){

	push	ebp
	mov	ebp, esp

; 384  : 	F4DestroyCriticalSection(static_cast<F4CSECTIONHANDLE*>(m));

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	_F4DestroyCriticalSection
	add	esp, 4

; 385  : }

	pop	ebp
	ret	0
?VuxDestroyMutex@@YAXPAX@Z ENDP				; VuxDestroyMutex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_name$ = 8						; size = 4
?VuxCreateMutex@@YAPAXPBD@Z PROC			; VuxCreateMutex

; 379  : VuMutex VuxCreateMutex(const char *name){

	push	ebp
	mov	ebp, esp

; 380  : 	return static_cast<VuMutex>(F4CreateCriticalSection(name));

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_F4CreateCriticalSection
	add	esp, 4

; 381  : }

	pop	ebp
	ret	0
?VuxCreateMutex@@YAPAXPBD@Z ENDP			; VuxCreateMutex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\f4vu.cpp
_TEXT	SEGMENT
_retval$ = -4						; size = 4
_id$ = 8						; size = 2
?VuxType@@YAPAUVuEntityType@@G@Z PROC			; VuxType

; 346  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 347  : VuEntityType *retval = 0;

	mov	DWORD PTR _retval$[ebp], 0

; 348  : 
; 349  :     F4Assert(id >= VU_LAST_ENTITY_TYPE && id - VU_LAST_ENTITY_TYPE < NumEntities);
; 350  : 	if (id >= VU_LAST_ENTITY_TYPE && id - VU_LAST_ENTITY_TYPE < NumEntities)

	movzx	eax, WORD PTR _id$[ebp]
	cmp	eax, 100				; 00000064H
	jl	SHORT $LN1@VuxType
	movzx	ecx, WORD PTR _id$[ebp]
	sub	ecx, 100				; 00000064H
	cmp	ecx, DWORD PTR ?NumEntities@@3HA	; NumEntities
	jge	SHORT $LN1@VuxType

; 351  : 		retval = (VuEntityType*)&(Falcon4ClassTable[id - VU_LAST_ENTITY_TYPE]);

	movzx	edx, WORD PTR _id$[ebp]
	sub	edx, 100				; 00000064H
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	DWORD PTR _retval$[ebp], edx
$LN1@VuxType:

; 352  : 	
; 353  : 	return retval;

	mov	eax, DWORD PTR _retval$[ebp]

; 354  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?VuxType@@YAPAUVuEntityType@@G@Z ENDP			; VuxType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::OwnerId, COMDAT
; _this$ = ecx

; 152  : 	VU_ID OwnerId() const     { return share_.ownerId_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?OwnerId@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::OwnerId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
