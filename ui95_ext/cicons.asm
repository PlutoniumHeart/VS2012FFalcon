; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\ui95_ext\cicons.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetFlags@C_Hash@@QAEXJ@Z			; C_Hash::SetFlags
PUBLIC	?SetCallback@C_Hash@@QAEXP6AXPAX@Z@Z		; C_Hash::SetCallback
PUBLIC	??_GC_Hash@@QAEPAXI@Z				; C_Hash::`scalar deleting destructor'
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	??0O_Output@@QAE@XZ				; O_Output::O_Output
PUBLIC	??1O_Output@@QAE@XZ				; O_Output::~O_Output
PUBLIC	?SetXY@O_Output@@QAEXJJ@Z			; O_Output::SetXY
PUBLIC	?SetWH@O_Output@@QAEXJJ@Z			; O_Output::SetWH
PUBLIC	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z		; O_Output::SetOwner
PUBLIC	?SetFlags@O_Output@@QAEXJ@Z			; O_Output::SetFlags
PUBLIC	?SetFont@O_Output@@QAEXJ@Z			; O_Output::SetFont
PUBLIC	?SetFgColor@O_Output@@QAEXK@Z			; O_Output::SetFgColor
PUBLIC	?GetX@O_Output@@QAEJXZ				; O_Output::GetX
PUBLIC	?GetY@O_Output@@QAEJXZ				; O_Output::GetY
PUBLIC	?GetW@O_Output@@QAEJXZ				; O_Output::GetW
PUBLIC	?GetH@O_Output@@QAEJXZ				; O_Output::GetH
PUBLIC	?GetText@O_Output@@QAEPADXZ			; O_Output::GetText
PUBLIC	??_GO_Output@@QAEPAXI@Z				; O_Output::`scalar deleting destructor'
PUBLIC	??1C_Base@@UAE@XZ				; C_Base::~C_Base
PUBLIC	?SetID@C_Base@@QAEXJ@Z				; C_Base::SetID
PUBLIC	?SetType@C_Base@@QAEXF@Z			; C_Base::SetType
PUBLIC	?_SetCType_@C_Base@@QAEXF@Z			; C_Base::_SetCType_
PUBLIC	?SetGroup@C_Base@@QAEXJ@Z			; C_Base::SetGroup
PUBLIC	?SetFlags@C_Base@@UAEXJ@Z			; C_Base::SetFlags
PUBLIC	?SetFlagBitOn@C_Base@@UAEXJ@Z			; C_Base::SetFlagBitOn
PUBLIC	?SetFlagBitOff@C_Base@@UAEXJ@Z			; C_Base::SetFlagBitOff
PUBLIC	?SetX@C_Base@@UAEXJ@Z				; C_Base::SetX
PUBLIC	?SetY@C_Base@@UAEXJ@Z				; C_Base::SetY
PUBLIC	?SetW@C_Base@@UAEXJ@Z				; C_Base::SetW
PUBLIC	?SetH@C_Base@@UAEXJ@Z				; C_Base::SetH
PUBLIC	?SetXY@C_Base@@UAEXJJ@Z				; C_Base::SetXY
PUBLIC	?SetWH@C_Base@@UAEXJJ@Z				; C_Base::SetWH
PUBLIC	?SetXYWH@C_Base@@UAEXJJJJ@Z			; C_Base::SetXYWH
PUBLIC	?SetRelX@C_Base@@UAEXJ@Z			; C_Base::SetRelX
PUBLIC	?SetRelY@C_Base@@UAEXJ@Z			; C_Base::SetRelY
PUBLIC	?SetRelXY@C_Base@@UAEXJJ@Z			; C_Base::SetRelXY
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?SetState@C_Base@@UAEXF@Z			; C_Base::SetState
PUBLIC	?SetHotKey@C_Base@@UAEXF@Z			; C_Base::SetHotKey
PUBLIC	?SetMenu@C_Base@@UAEXJ@Z			; C_Base::SetMenu
PUBLIC	?SetFont@C_Base@@UAEXJ@Z			; C_Base::SetFont
PUBLIC	?SetSound@C_Base@@UAEXJF@Z			; C_Base::SetSound
PUBLIC	?SetCursorID@C_Base@@UAEXJ@Z			; C_Base::SetCursorID
PUBLIC	?SetDragCursorID@C_Base@@UAEXJ@Z		; C_Base::SetDragCursorID
PUBLIC	?SetHelpText@C_Base@@UAEXJ@Z			; C_Base::SetHelpText
PUBLIC	?SetMouseOver@C_Base@@UAEXF@Z			; C_Base::SetMouseOver
PUBLIC	?SetMouseOverColor@C_Base@@UAEXK@Z		; C_Base::SetMouseOverColor
PUBLIC	?SetMouseOverPerc@C_Base@@UAEXF@Z		; C_Base::SetMouseOverPerc
PUBLIC	?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z	; C_Base::SetCallback
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetRelX@C_Base@@UAEJXZ				; C_Base::GetRelX
PUBLIC	?GetRelY@C_Base@@UAEJXZ				; C_Base::GetRelY
PUBLIC	?GetParent@C_Base@@QAEPAVC_Window@@XZ		; C_Base::GetParent
PUBLIC	?Ready@C_Base@@QAEFXZ				; C_Base::Ready
PUBLIC	?GetState@C_Base@@UAEFXZ			; C_Base::GetState
PUBLIC	?GetHotKey@C_Base@@UAEFXZ			; C_Base::GetHotKey
PUBLIC	?GetMenu@C_Base@@UAEJXZ				; C_Base::GetMenu
PUBLIC	?GetFont@C_Base@@UAEJXZ				; C_Base::GetFont
PUBLIC	?GetHelpText@C_Base@@UAEJXZ			; C_Base::GetHelpText
PUBLIC	?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z		; C_Base::GetSound
PUBLIC	?GetMouseOver@C_Base@@UAEFXZ			; C_Base::GetMouseOver
PUBLIC	?GetCursorID@C_Base@@UAEJXZ			; C_Base::GetCursorID
PUBLIC	?GetDragCursorID@C_Base@@UAEJXZ			; C_Base::GetDragCursorID
PUBLIC	?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ		; C_Base::GetCallback
PUBLIC	?IsBase@C_Base@@UAEHXZ				; C_Base::IsBase
PUBLIC	?IsControl@C_Base@@UAEHXZ			; C_Base::IsControl
PUBLIC	?Refresh@C_Base@@UAEXXZ				; C_Base::Refresh
PUBLIC	?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z	; C_Base::Draw
PUBLIC	?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; C_Base::HighLite
PUBLIC	?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z	; C_Base::SetSubParents
PUBLIC	?Cleanup@C_Base@@UAEXXZ				; C_Base::Cleanup
PUBLIC	?TimerUpdate@C_Base@@UAEHXZ			; C_Base::TimerUpdate
PUBLIC	?Activate@C_Base@@UAEXXZ			; C_Base::Activate
PUBLIC	?Deactivate@C_Base@@UAEXXZ			; C_Base::Deactivate
PUBLIC	?CheckHotSpots@C_Base@@UAEJJJ@Z			; C_Base::CheckHotSpots
PUBLIC	?CheckKeyboard@C_Base@@UAEHEEEJ@Z		; C_Base::CheckKeyboard
PUBLIC	?Process@C_Base@@UAEHJF@Z			; C_Base::Process
PUBLIC	?CloseWindow@C_Base@@UAEHXZ			; C_Base::CloseWindow
PUBLIC	?MouseOver@C_Base@@UAEHJJPAV1@@Z		; C_Base::MouseOver
PUBLIC	?GetMe@C_Base@@UAEPAV1@XZ			; C_Base::GetMe
PUBLIC	?Dragable@C_Base@@UAEHJ@Z			; C_Base::Dragable
PUBLIC	?GetItemXY@C_Base@@UAEXJPAJ0@Z			; C_Base::GetItemXY
PUBLIC	?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z	; C_Base::Drag
PUBLIC	?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z	; C_Base::Drop
PUBLIC	?Wheel@C_Base@@UAEHHGG@Z			; C_Base::Wheel
PUBLIC	?LocalFind@C_Base@@UAEFPAD@Z			; C_Base::LocalFind
PUBLIC	?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z ; C_Base::LocalFunction
PUBLIC	?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z	; C_Base::SaveText
PUBLIC	??_GC_Base@@UAEPAXI@Z				; C_Base::`scalar deleting destructor'
PUBLIC	??1C_Control@@UAE@XZ				; C_Control::~C_Control
PUBLIC	?SetRelX@C_Control@@UAEXJ@Z			; C_Control::SetRelX
PUBLIC	?SetRelY@C_Control@@UAEXJ@Z			; C_Control::SetRelY
PUBLIC	?SetRelXY@C_Control@@UAEXJJ@Z			; C_Control::SetRelXY
PUBLIC	?SetCursorID@C_Control@@UAEXJ@Z			; C_Control::SetCursorID
PUBLIC	?SetDragCursorID@C_Control@@UAEXJ@Z		; C_Control::SetDragCursorID
PUBLIC	?SetMenu@C_Control@@UAEXJ@Z			; C_Control::SetMenu
PUBLIC	?SetHelpText@C_Control@@UAEXJ@Z			; C_Control::SetHelpText
PUBLIC	?SetHotKey@C_Control@@UAEXF@Z			; C_Control::SetHotKey
PUBLIC	?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z ; C_Control::SetCallback
PUBLIC	?SetMouseOver@C_Control@@UAEXF@Z		; C_Control::SetMouseOver
PUBLIC	?SetMouseOverColor@C_Control@@UAEXK@Z		; C_Control::SetMouseOverColor
PUBLIC	?SetMouseOverPerc@C_Control@@UAEXF@Z		; C_Control::SetMouseOverPerc
PUBLIC	?IsBase@C_Control@@UAEHXZ			; C_Control::IsBase
PUBLIC	?IsControl@C_Control@@UAEHXZ			; C_Control::IsControl
PUBLIC	?GetRelX@C_Control@@UAEJXZ			; C_Control::GetRelX
PUBLIC	?GetRelY@C_Control@@UAEJXZ			; C_Control::GetRelY
PUBLIC	?GetCursorID@C_Control@@UAEJXZ			; C_Control::GetCursorID
PUBLIC	?GetDragCursorID@C_Control@@UAEJXZ		; C_Control::GetDragCursorID
PUBLIC	?GetMenu@C_Control@@UAEJXZ			; C_Control::GetMenu
PUBLIC	?GetHelpText@C_Control@@UAEJXZ			; C_Control::GetHelpText
PUBLIC	?GetHotKey@C_Control@@UAEFXZ			; C_Control::GetHotKey
PUBLIC	?GetMouseOver@C_Control@@UAEFXZ			; C_Control::GetMouseOver
PUBLIC	?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ ; C_Control::GetCallback
PUBLIC	??_GC_Control@@UAEPAXI@Z			; C_Control::`scalar deleting destructor'
PUBLIC	?GetX@C_Window@@QAEFXZ				; C_Window::GetX
PUBLIC	?GetY@C_Window@@QAEFXZ				; C_Window::GetY
PUBLIC	??0C_MapIcon@@QAE@XZ				; C_MapIcon::C_MapIcon
PUBLIC	??0C_MapIcon@@QAE@PAPAD@Z			; C_MapIcon::C_MapIcon
PUBLIC	??0C_MapIcon@@QAE@PAU_iobuf@@@Z			; C_MapIcon::C_MapIcon
PUBLIC	??1C_MapIcon@@UAE@XZ				; C_MapIcon::~C_MapIcon
PUBLIC	?Size@C_MapIcon@@QAEJXZ				; C_MapIcon::Size
PUBLIC	?Setup@C_MapIcon@@QAEXJF@Z			; C_MapIcon::Setup
PUBLIC	?Cleanup@C_MapIcon@@UAEXXZ			; C_MapIcon::Cleanup
PUBLIC	?SetMainImage@C_MapIcon@@QAEXFJJ@Z		; C_MapIcon::SetMainImage
PUBLIC	?SetMainImage@C_MapIcon@@QAEXJJ@Z		; C_MapIcon::SetMainImage
PUBLIC	?SetDefaultFlags@C_MapIcon@@QAEXXZ		; C_MapIcon::SetDefaultFlags
PUBLIC	?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z ; C_MapIcon::AddIconToList
PUBLIC	?UpdateInfo@C_MapIcon@@QAEHJMMJJ@Z		; C_MapIcon::UpdateInfo
PUBLIC	?UpdateInfo@C_MapIcon@@QAEHPAVMAPICONLIST@@MMJJ@Z ; C_MapIcon::UpdateInfo
PUBLIC	?RemoveIcon@C_MapIcon@@QAEXJ@Z			; C_MapIcon::RemoveIcon
PUBLIC	?ShowByType@C_MapIcon@@QAEHJ@Z			; C_MapIcon::ShowByType
PUBLIC	?HideByType@C_MapIcon@@QAEHJ@Z			; C_MapIcon::HideByType
PUBLIC	?Show@C_MapIcon@@QAEXXZ				; C_MapIcon::Show
PUBLIC	?Hide@C_MapIcon@@QAEXXZ				; C_MapIcon::Hide
PUBLIC	?SetScaleFactor@C_MapIcon@@QAEXM@Z		; C_MapIcon::SetScaleFactor
PUBLIC	?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z	; C_MapIcon::FindID
PUBLIC	?SetLabel@C_MapIcon@@QAEXJPAD@Z			; C_MapIcon::SetLabel
PUBLIC	?SetColor@C_MapIcon@@QAEXJK@Z			; C_MapIcon::SetColor
PUBLIC	?GetLabel@C_MapIcon@@QAEPADJ@Z			; C_MapIcon::GetLabel
PUBLIC	?SetTextOffset@C_MapIcon@@QAEXJFF@Z		; C_MapIcon::SetTextOffset
PUBLIC	?Refresh@C_MapIcon@@QAEXPAVMAPICONLIST@@@Z	; C_MapIcon::Refresh
PUBLIC	?RemapIconImages@C_MapIcon@@QAEXXZ		; C_MapIcon::RemapIconImages
PUBLIC	?SetFont@C_MapIcon@@UAEXJ@Z			; C_MapIcon::SetFont
PUBLIC	?GetFont@C_MapIcon@@UAEJXZ			; C_MapIcon::GetFont
PUBLIC	?GetHelpText@C_MapIcon@@UAEJXZ			; C_MapIcon::GetHelpText
PUBLIC	?CheckHotSpots@C_MapIcon@@UAEJJJ@Z		; C_MapIcon::CheckHotSpots
PUBLIC	?Dragable@C_MapIcon@@UAEHJ@Z			; C_MapIcon::Dragable
PUBLIC	?Process@C_MapIcon@@UAEHJF@Z			; C_MapIcon::Process
PUBLIC	?MouseOver@C_MapIcon@@UAEHJJPAVC_Base@@@Z	; C_MapIcon::MouseOver
PUBLIC	?GetItemXY@C_MapIcon@@UAEXJPAJ0@Z		; C_MapIcon::GetItemXY
PUBLIC	?Drag@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ; C_MapIcon::Drag
PUBLIC	?Drop@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ; C_MapIcon::Drop
PUBLIC	?Refresh@C_MapIcon@@UAEXXZ			; C_MapIcon::Refresh
PUBLIC	?Draw@C_MapIcon@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; C_MapIcon::Draw
PUBLIC	??_GC_MapIcon@@UAEPAXI@Z			; C_MapIcon::`scalar deleting destructor'
PUBLIC	?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z		; C_Map::GetTeam
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7C_Base@@6B@					; C_Base::`vftable'
PUBLIC	??_7C_Control@@6B@				; C_Control::`vftable'
PUBLIC	??_7C_MapIcon@@6B@				; C_MapIcon::`vftable'
PUBLIC	??_C@_0DK@HPFAIHCA@C_MapIcon?3?3RemapIconImages?$CI?$CJ?5Ima@ ; `string'
PUBLIC	??_C@_0DI@FGFJHCBC@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@ ; `string'
PUBLIC	??_C@_0DL@CJIIEJIJ@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@ ; `string'
PUBLIC	??_C@_04DIDHKLLF@?$CF1ld?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C_Base@@6B@				; C_Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_Base@@@8				; C_Base `RTTI Type Descriptor'
PUBLIC	??_R3C_Base@@8					; C_Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_Base@@8					; C_Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_Base@@8				; C_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C_Control@@6B@				; C_Control::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_Control@@@8				; C_Control `RTTI Type Descriptor'
PUBLIC	??_R3C_Control@@8				; C_Control::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_Control@@8				; C_Control::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_Control@@8			; C_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C_MapIcon@@6B@				; C_MapIcon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC_MapIcon@@@8				; C_MapIcon `RTTI Type Descriptor'
PUBLIC	??_R3C_MapIcon@@8				; C_MapIcon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C_MapIcon@@8				; C_MapIcon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C_MapIcon@@8			; C_MapIcon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_sprintf:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?F4IsBadReadPtr@@YA_NPBXI@Z:PROC		; F4IsBadReadPtr
EXTRN	??0C_Hash@@QAE@XZ:PROC				; C_Hash::C_Hash
EXTRN	??1C_Hash@@QAE@XZ:PROC				; C_Hash::~C_Hash
EXTRN	?Setup@C_Hash@@QAEXJ@Z:PROC			; C_Hash::Setup
EXTRN	?Cleanup@C_Hash@@QAEXXZ:PROC			; C_Hash::Cleanup
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	?Add@C_Hash@@QAEXJPAX@Z:PROC			; C_Hash::Add
EXTRN	?Remove@C_Hash@@QAEXJ@Z:PROC			; C_Hash::Remove
EXTRN	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z:PROC ; C_Hash::GetFirst
EXTRN	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z:PROC ; C_Hash::GetNext
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z:PROC	; C_Sound::PlaySoundA
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?Refresh@O_Output@@QAEXXZ:PROC			; O_Output::Refresh
EXTRN	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z:PROC ; O_Output::Draw
EXTRN	?Cleanup@O_Output@@QAEXXZ:PROC			; O_Output::Cleanup
EXTRN	?SetInfo@O_Output@@QAEXXZ:PROC			; O_Output::SetInfo
EXTRN	?SetText@O_Output@@QAEXPAD@Z:PROC		; O_Output::SetText
EXTRN	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z:PROC	; O_Output::SetImage
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	??_EC_Base@@UAEPAXI@Z:PROC			; C_Base::`vector deleting destructor'
EXTRN	??0C_Control@@QAE@XZ:PROC			; C_Control::C_Control
EXTRN	??0C_Control@@QAE@PAPAD@Z:PROC			; C_Control::C_Control
EXTRN	??0C_Control@@QAE@PAU_iobuf@@@Z:PROC		; C_Control::C_Control
EXTRN	?MouseOver@C_Control@@UAEHJJPAVC_Base@@@Z:PROC	; C_Control::MouseOver
EXTRN	?SetSound@C_Control@@UAEXJF@Z:PROC		; C_Control::SetSound
EXTRN	?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z:PROC ; C_Control::HighLite
EXTRN	?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z:PROC	; C_Control::GetSound
EXTRN	??_EC_Control@@UAEPAXI@Z:PROC			; C_Control::`vector deleting destructor'
EXTRN	?DrawCircle@C_Window@@QAEXPAVSCREEN@@KJJMJJPAUUI95_RECT@@@Z:PROC ; C_Window::DrawCircle
EXTRN	_MonoPrint:PROC
EXTRN	??_EC_MapIcon@@UAEPAXI@Z:PROC			; C_MapIcon::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gSoundMgr@@3PAVC_Sound@@A:DWORD		; gSoundMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gShowUnknown@@3HA:DWORD			; gShowUnknown
EXTRN	?gMapMgr@@3PAVC_Map@@A:DWORD			; gMapMgr
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@C_MapIcon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_MapIcon@@8 DD FLAT:??_R0?AVC_MapIcon@@@8 ; C_MapIcon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_MapIcon@@8
rdata$r	ENDS
;	COMDAT ??_R2C_MapIcon@@8
rdata$r	SEGMENT
??_R2C_MapIcon@@8 DD FLAT:??_R1A@?0A@EA@C_MapIcon@@8	; C_MapIcon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@C_Control@@8
	DD	FLAT:??_R1A@?0A@EA@C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R3C_MapIcon@@8
rdata$r	SEGMENT
??_R3C_MapIcon@@8 DD 00H				; C_MapIcon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2C_MapIcon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_MapIcon@@@8
_DATA	SEGMENT
??_R0?AVC_MapIcon@@@8 DD FLAT:??_7type_info@@6B@	; C_MapIcon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_MapIcon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_MapIcon@@6B@
rdata$r	SEGMENT
??_R4C_MapIcon@@6B@ DD 00H				; C_MapIcon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_MapIcon@@@8
	DD	FLAT:??_R3C_MapIcon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@C_Control@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_Control@@8 DD FLAT:??_R0?AVC_Control@@@8 ; C_Control::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R2C_Control@@8
rdata$r	SEGMENT
??_R2C_Control@@8 DD FLAT:??_R1A@?0A@EA@C_Control@@8	; C_Control::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R3C_Control@@8
rdata$r	SEGMENT
??_R3C_Control@@8 DD 00H				; C_Control::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_Control@@@8
_DATA	SEGMENT
??_R0?AVC_Control@@@8 DD FLAT:??_7type_info@@6B@	; C_Control `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_Control@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_Control@@6B@
rdata$r	SEGMENT
??_R4C_Control@@6B@ DD 00H				; C_Control::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_Control@@@8
	DD	FLAT:??_R3C_Control@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@C_Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C_Base@@8 DD FLAT:??_R0?AVC_Base@@@8	; C_Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R2C_Base@@8
rdata$r	SEGMENT
??_R2C_Base@@8 DD FLAT:??_R1A@?0A@EA@C_Base@@8		; C_Base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3C_Base@@8
rdata$r	SEGMENT
??_R3C_Base@@8 DD 00H					; C_Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC_Base@@@8
_DATA	SEGMENT
??_R0?AVC_Base@@@8 DD FLAT:??_7type_info@@6B@		; C_Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC_Base@@', 00H
_DATA	ENDS
;	COMDAT ??_R4C_Base@@6B@
rdata$r	SEGMENT
??_R4C_Base@@6B@ DD 00H					; C_Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC_Base@@@8
	DD	FLAT:??_R3C_Base@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04DIDHKLLF@?$CF1ld?$AA@
CONST	SEGMENT
??_C@_04DIDHKLLF@?$CF1ld?$AA@ DB '%1ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CJIIEJIJ@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@
CONST	SEGMENT
??_C@_0DL@CJIIEJIJ@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@ DB 'C_MapIc'
	DB	'on::AddIconToList() Image ID (%1ld) - Not an Image', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FGFJHCBC@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@
CONST	SEGMENT
??_C@_0DI@FGFJHCBC@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@ DB 'C_MapIc'
	DB	'on::AddIconToList() Image ID (%1ld) - Not found', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@HPFAIHCA@C_MapIcon?3?3RemapIconImages?$CI?$CJ?5Ima@
CONST	SEGMENT
??_C@_0DK@HPFAIHCA@C_MapIcon?3?3RemapIconImages?$CI?$CJ?5Ima@ DB 'C_MapIc'
	DB	'on::RemapIconImages() Image ID (%1ld) - Not found', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7C_MapIcon@@6B@
CONST	SEGMENT
??_7C_MapIcon@@6B@ DD FLAT:??_R4C_MapIcon@@6B@		; C_MapIcon::`vftable'
	DD	FLAT:??_EC_MapIcon@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Control@@UAEXJJ@Z
	DD	FLAT:?SetState@C_Base@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Control@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Control@@UAEXJ@Z
	DD	FLAT:?SetFont@C_MapIcon@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Control@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Control@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Control@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Control@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Control@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
	DD	FLAT:?GetRelX@C_Control@@UAEJXZ
	DD	FLAT:?GetRelY@C_Control@@UAEJXZ
	DD	FLAT:?GetState@C_Base@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Control@@UAEFXZ
	DD	FLAT:?GetMenu@C_Control@@UAEJXZ
	DD	FLAT:?GetFont@C_MapIcon@@UAEJXZ
	DD	FLAT:?GetHelpText@C_MapIcon@@UAEJXZ
	DD	FLAT:?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Control@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
	DD	FLAT:?IsBase@C_Control@@UAEHXZ
	DD	FLAT:?IsControl@C_Control@@UAEHXZ
	DD	FLAT:?Refresh@C_MapIcon@@UAEXXZ
	DD	FLAT:?Draw@C_MapIcon@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_MapIcon@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_MapIcon@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_MapIcon@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_MapIcon@@UAEHJJPAVC_Base@@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_MapIcon@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_MapIcon@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_7C_Control@@6B@
CONST	SEGMENT
??_7C_Control@@6B@ DD FLAT:??_R4C_Control@@6B@		; C_Control::`vftable'
	DD	FLAT:??_EC_Control@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Control@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Control@@UAEXJJ@Z
	DD	FLAT:?SetState@C_Base@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Control@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Control@@UAEXJ@Z
	DD	FLAT:?SetFont@C_Base@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Control@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Control@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Control@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Control@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Control@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Control@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
	DD	FLAT:?GetRelX@C_Control@@UAEJXZ
	DD	FLAT:?GetRelY@C_Control@@UAEJXZ
	DD	FLAT:?GetState@C_Base@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Control@@UAEFXZ
	DD	FLAT:?GetMenu@C_Control@@UAEJXZ
	DD	FLAT:?GetFont@C_Base@@UAEJXZ
	DD	FLAT:?GetHelpText@C_Control@@UAEJXZ
	DD	FLAT:?GetSound@C_Control@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Control@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Control@@UAEJXZ
	DD	FLAT:?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
	DD	FLAT:?IsBase@C_Control@@UAEHXZ
	DD	FLAT:?IsControl@C_Control@@UAEHXZ
	DD	FLAT:?Refresh@C_Base@@UAEXXZ
	DD	FLAT:?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Control@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_Base@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_Base@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_Base@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_Control@@UAEHJJPAVC_Base@@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_Base@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_Base@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_7C_Base@@6B@
CONST	SEGMENT
??_7C_Base@@6B@ DD FLAT:??_R4C_Base@@6B@		; C_Base::`vftable'
	DD	FLAT:??_EC_Base@@UAEPAXI@Z
	DD	FLAT:?SetFlags@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOn@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFlagBitOff@C_Base@@UAEXJ@Z
	DD	FLAT:?SetX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetW@C_Base@@UAEXJ@Z
	DD	FLAT:?SetH@C_Base@@UAEXJ@Z
	DD	FLAT:?SetXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetWH@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetXYWH@C_Base@@UAEXJJJJ@Z
	DD	FLAT:?SetRelX@C_Base@@UAEXJ@Z
	DD	FLAT:?SetRelY@C_Base@@UAEXJ@Z
	DD	FLAT:?SetRelXY@C_Base@@UAEXJJ@Z
	DD	FLAT:?SetState@C_Base@@UAEXF@Z
	DD	FLAT:?SetHotKey@C_Base@@UAEXF@Z
	DD	FLAT:?SetMenu@C_Base@@UAEXJ@Z
	DD	FLAT:?SetFont@C_Base@@UAEXJ@Z
	DD	FLAT:?SetSound@C_Base@@UAEXJF@Z
	DD	FLAT:?SetCursorID@C_Base@@UAEXJ@Z
	DD	FLAT:?SetDragCursorID@C_Base@@UAEXJ@Z
	DD	FLAT:?SetHelpText@C_Base@@UAEXJ@Z
	DD	FLAT:?SetMouseOver@C_Base@@UAEXF@Z
	DD	FLAT:?SetMouseOverColor@C_Base@@UAEXK@Z
	DD	FLAT:?SetMouseOverPerc@C_Base@@UAEXF@Z
	DD	FLAT:?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z
	DD	FLAT:?GetRelX@C_Base@@UAEJXZ
	DD	FLAT:?GetRelY@C_Base@@UAEJXZ
	DD	FLAT:?GetState@C_Base@@UAEFXZ
	DD	FLAT:?GetHotKey@C_Base@@UAEFXZ
	DD	FLAT:?GetMenu@C_Base@@UAEJXZ
	DD	FLAT:?GetFont@C_Base@@UAEJXZ
	DD	FLAT:?GetHelpText@C_Base@@UAEJXZ
	DD	FLAT:?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z
	DD	FLAT:?GetMouseOver@C_Base@@UAEFXZ
	DD	FLAT:?GetCursorID@C_Base@@UAEJXZ
	DD	FLAT:?GetDragCursorID@C_Base@@UAEJXZ
	DD	FLAT:?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ
	DD	FLAT:?IsBase@C_Base@@UAEHXZ
	DD	FLAT:?IsControl@C_Base@@UAEHXZ
	DD	FLAT:?Refresh@C_Base@@UAEXXZ
	DD	FLAT:?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
	DD	FLAT:?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
	DD	FLAT:?Cleanup@C_Base@@UAEXXZ
	DD	FLAT:?TimerUpdate@C_Base@@UAEHXZ
	DD	FLAT:?Activate@C_Base@@UAEXXZ
	DD	FLAT:?Deactivate@C_Base@@UAEXXZ
	DD	FLAT:?CheckHotSpots@C_Base@@UAEJJJ@Z
	DD	FLAT:?CheckKeyboard@C_Base@@UAEHEEEJ@Z
	DD	FLAT:?Process@C_Base@@UAEHJF@Z
	DD	FLAT:?CloseWindow@C_Base@@UAEHXZ
	DD	FLAT:?MouseOver@C_Base@@UAEHJJPAV1@@Z
	DD	FLAT:?GetMe@C_Base@@UAEPAV1@XZ
	DD	FLAT:?Dragable@C_Base@@UAEHJ@Z
	DD	FLAT:?GetItemXY@C_Base@@UAEXJPAJ0@Z
	DD	FLAT:?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
	DD	FLAT:?Wheel@C_Base@@UAEHHGG@Z
	DD	FLAT:?LocalFind@C_Base@@UAEFPAD@Z
	DD	FLAT:?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
	DD	FLAT:?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?Setup@C_MapIcon@@QAEXJF@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Setup@C_MapIcon@@QAEXJF@Z$0
__unwindtable$??1C_MapIcon@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1C_MapIcon@@UAE@XZ$0
__unwindtable$??0C_MapIcon@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0C_MapIcon@@QAE@XZ$0
__ehfuncinfo$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Setup@C_MapIcon@@QAEXJF@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Setup@C_MapIcon@@QAEXJF@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1C_MapIcon@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1C_MapIcon@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0C_MapIcon@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0C_MapIcon@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1C_Control@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1C_Control@@UAE@XZ$0
__ehfuncinfo$??1C_Control@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1C_Control@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_i$ = 12						; size = 4
?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z PROC		; C_Map::GetTeam, COMDAT
; _this$ = ecx

; 161  : 		MAPICONS GetTeam(int i) { return Team_[i]; } // 2002-02-23 ADDED BY S.G. Need to exteriorize Team_

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+860]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z ENDP		; C_Map::GetTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
$T1 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 4
tv151 = -64						; size = 4
$T5 = -60						; size = 4
tv141 = -56						; size = 4
$T6 = -52						; size = 4
tv131 = -48						; size = 4
$T7 = -44						; size = 4
tv89 = -40						; size = 4
$T8 = -36						; size = 4
tv79 = -32						; size = 4
$T9 = -28						; size = 4
$T10 = -24						; size = 4
$T11 = -20						; size = 4
$T12 = -16						; size = 4
$T13 = -12						; size = 4
$T14 = -8						; size = 4
_last$ = -4						; size = 4
_record$ = 8						; size = 4
?DeleteCB@@YAXPAX@Z PROC				; DeleteCB

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 11   : 	MAPICONLIST *last;
; 12   : 	last=(MAPICONLIST *)record;

	mov	eax, DWORD PTR _record$[ebp]
	mov	DWORD PTR _last$[ebp], eax

; 13   : 	if(!last)

	cmp	DWORD PTR _last$[ebp], 0
	jne	SHORT $LN9@DeleteCB

; 14   : 		return;

	jmp	$LN10@DeleteCB
$LN9@DeleteCB:

; 15   : 
; 16   : 	ShiAssert(FALSE == F4IsBadReadPtr(last, sizeof(*last))); //JPO
; 17   : 	if (F4IsBadReadPtr(last, sizeof(MAPICONLIST))) // JB 010305 CTD

	push	68					; 00000044H
	mov	ecx, DWORD PTR _last$[ebp]
	push	ecx
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@DeleteCB

; 18   : 		return; // JB 010305 CTD

	jmp	$LN10@DeleteCB
$LN8@DeleteCB:

; 19   : 
; 20   : 	if(last->Icon)

	mov	eax, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN7@DeleteCB

; 21   : 	{
; 22   : 		last->Icon->Cleanup();

	mov	ecx, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 23   : 		delete last->Icon;

	mov	edx, DWORD PTR _last$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR $T9[ebp], eax
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR $T14[ebp], ecx
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN12@DeleteCB
	push	1
	mov	ecx, DWORD PTR $T14[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN7@DeleteCB
$LN12@DeleteCB:
	mov	DWORD PTR tv79[ebp], 0
$LN7@DeleteCB:

; 24   : 	}					   
; 25   : 	if(last->Label)

	mov	edx, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN6@DeleteCB

; 26   : 	{
; 27   : 		last->Label->Cleanup();

	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 28   : 		delete last->Label;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR $T8[ebp], edx
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR $T13[ebp], eax
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN14@DeleteCB
	push	1
	mov	ecx, DWORD PTR $T13[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@DeleteCB
$LN14@DeleteCB:
	mov	DWORD PTR tv89[ebp], 0
$LN6@DeleteCB:

; 29   : 	}
; 30   : 	if(last->Div)

	mov	ecx, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	je	SHORT $LN5@DeleteCB

; 31   : 	{
; 32   : 		last->Div->Cleanup();

	mov	edx, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [edx+52]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 33   : 		delete last->Div;

	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR $T7[ebp], ecx
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR $T12[ebp], edx
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN16@DeleteCB
	push	1
	mov	ecx, DWORD PTR $T12[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN5@DeleteCB
$LN16@DeleteCB:
	mov	DWORD PTR tv131[ebp], 0
$LN5@DeleteCB:

; 34   : 	}
; 35   : 	if(last->Brig)

	mov	eax, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN4@DeleteCB

; 36   : 	{
; 37   : 		last->Brig->Cleanup();

	mov	ecx, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 38   : 		delete last->Brig;

	mov	edx, DWORD PTR _last$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR $T6[ebp], eax
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T11[ebp], ecx
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN18@DeleteCB
	push	1
	mov	ecx, DWORD PTR $T11[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN4@DeleteCB
$LN18@DeleteCB:
	mov	DWORD PTR tv141[ebp], 0
$LN4@DeleteCB:

; 39   : 	}
; 40   : 	if(last->Bat)

	mov	edx, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [edx+60], 0
	je	SHORT $LN3@DeleteCB

; 41   : 	{
; 42   : 		last->Bat->Cleanup();

	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	call	?Cleanup@O_Output@@QAEXXZ		; O_Output::Cleanup

; 43   : 		delete last->Bat;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR $T5[ebp], edx
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T10[ebp], eax
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN20@DeleteCB
	push	1
	mov	ecx, DWORD PTR $T10[ebp]
	call	??_GO_Output@@QAEPAXI@Z
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN3@DeleteCB
$LN20@DeleteCB:
	mov	DWORD PTR tv151[ebp], 0
$LN3@DeleteCB:

; 44   : 	}
; 45   : 	if(last->Detect)

	mov	ecx, DWORD PTR _last$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN2@DeleteCB

; 46   : 	{
; 47   : 	    if (last->Detect->LowRadar) { // JPO fix memory leak fix

	mov	edx, DWORD PTR _last$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@DeleteCB

; 48   : 		delete [] last->Detect->LowRadar->arcs;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 49   : 		delete last->Detect->LowRadar;

	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@DeleteCB:

; 50   : 	    }
; 51   : 	    delete last->Detect;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@DeleteCB:

; 52   : 	}
; 53   : 	delete last;

	mov	ecx, DWORD PTR _last$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@DeleteCB:

; 54   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteCB@@YAXPAX@Z ENDP				; DeleteCB
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_MapIcon@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_MapIcon@@UAEPAXI@Z PROC				; C_MapIcon::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_MapIcon@@UAE@XZ			; C_MapIcon::~C_MapIcon
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_MapIcon@@UAEPAXI@Z ENDP				; C_MapIcon::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
$T1 = -76						; size = 24
$T2 = -52						; size = 24
_CurHash$ = -28						; size = 4
_HashIdx$ = -24						; size = 4
_airUnit$ = -20						; size = 4
_j$3 = -16						; size = 4
_i$4 = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?Draw@C_MapIcon@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC	; C_MapIcon::Draw
; _this$ = ecx

; 558  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 559  : 	MAPICONLIST *cur;
; 560  : 	C_HASHNODE *CurHash;
; 561  : 	long HashIdx;
; 562  : 
; 563  : // 2020-02-21 MODIFIED BY S.G. Even if that type of airplane isn't showned, if it's an Unknown, deal with it if we ask for unknown to be seen
; 564  : //	if(!Ready() || GetFlags() & C_BIT_INVISIBLE || Parent_ == NULL) return;
; 565  : 	if(!Ready() || (!gShowUnknown && (GetFlags() & C_BIT_INVISIBLE)) || Parent_ == NULL)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	je	SHORT $LN34@Draw
	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	jne	SHORT $LN33@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN34@Draw
$LN33@Draw:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN35@Draw
$LN34@Draw:

; 566  : 		return;

	jmp	$LN36@Draw
$LN35@Draw:

; 567  : 
; 568  : 	// 2002-02-23 ADDED BY S.G. Test if it's an AirUnits C_MapIcon and only those will go in if the invisible flag is set
; 569  : 	int airUnit = FALSE;

	mov	DWORD PTR _airUnit$[ebp], 0

; 570  : 	if (gShowUnknown && gMapMgr && (GetFlags() & C_BIT_INVISIBLE)) {

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	je	$LN23@Draw
	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	$LN23@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	je	$LN23@Draw

; 571  : 		for (int i = 0; i < _MAX_TEAMS_ && !airUnit; i++) {

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN31@Draw
$LN30@Draw:
	mov	edx, DWORD PTR _i$4[ebp]
	add	edx, 1
	mov	DWORD PTR _i$4[ebp], edx
$LN31@Draw:
	cmp	DWORD PTR _i$4[ebp], 8
	jge	SHORT $LN29@Draw
	cmp	DWORD PTR _airUnit$[ebp], 0
	jne	SHORT $LN29@Draw

; 572  : 			if (gMapMgr->GetTeam(i).AirUnits) {

	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z	; C_Map::GetTeam
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN25@Draw

; 573  : 				for (int j = 0; j <_MAP_NUM_AIR_TYPES_ && !airUnit; j++) {

	mov	DWORD PTR _j$3[ebp], 0
	jmp	SHORT $LN27@Draw
$LN26@Draw:
	mov	edx, DWORD PTR _j$3[ebp]
	add	edx, 1
	mov	DWORD PTR _j$3[ebp], edx
$LN27@Draw:
	cmp	DWORD PTR _j$3[ebp], 5
	jge	SHORT $LN25@Draw
	cmp	DWORD PTR _airUnit$[ebp], 0
	jne	SHORT $LN25@Draw

; 574  : 					if (gMapMgr->GetTeam(i).AirUnits->Type[j] == this)

	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetTeam@C_Map@@QAE?AUMAPICONS@@H@Z	; C_Map::GetTeam
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _j$3[ebp]
	mov	ecx, DWORD PTR [edx+eax*4+20]
	cmp	ecx, DWORD PTR _this$[ebp]
	jne	SHORT $LN24@Draw

; 575  : 						airUnit = TRUE;

	mov	DWORD PTR _airUnit$[ebp], 1
$LN24@Draw:

; 576  : 				}

	jmp	SHORT $LN26@Draw
$LN25@Draw:

; 577  : 			}
; 578  : 		}

	jmp	SHORT $LN30@Draw
$LN29@Draw:

; 579  : 		if (!airUnit)

	cmp	DWORD PTR _airUnit$[ebp], 0
	jne	SHORT $LN23@Draw

; 580  : 			return;

	jmp	$LN36@Draw
$LN23@Draw:

; 581  : 	}
; 582  : 	// END OF ADDED SECTION 2002-02-23
; 583  : 
; 584  : 	cur=(MAPICONLIST*)Root_->GetFirst(&CurHash,&HashIdx);

	lea	edx, DWORD PTR _HashIdx$[ebp]
	push	edx
	lea	eax, DWORD PTR _CurHash$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN22@Draw:

; 585  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN21@Draw

; 586  : 	{
; 587  : 		// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified, not editing a TE and 'showUnknown' isn't set, hide it
; 588  : 		if (!gShowUnknown && cur->ImageID == ICON_UKN)

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	jne	SHORT $LN20@Draw
	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+32], 10126		; 0000278eH
	jne	SHORT $LN20@Draw

; 589  : 				cur->Flags |= C_BIT_INVISIBLE;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN20@Draw:

; 590  : 
; 591  : 		if ((gShowUnknown && cur->ImageID == ICON_UKN) || !(GetFlags() & C_BIT_INVISIBLE)) { // If the template shouldn't be displayed and it's not an unknown and we're not looking at unknown, then don't continue otherwise this will display it

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	je	SHORT $LN17@Draw
	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax+32], 10126		; 0000278eH
	je	SHORT $LN18@Draw
$LN17@Draw:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	$LN1@Draw
$LN18@Draw:

; 592  : 		// END OF ADDED SECTION 2002-02-21
; 593  : 			if(!(cur->Flags & C_BIT_INVISIBLE) && cur->Flags & C_BIT_ENABLED)

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 8192				; 00002000H
	jne	$LN1@Draw
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 2048				; 00000800H
	je	$LN1@Draw

; 594  : 			{
; 595  : 				if(cur->Icon){

	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	$LN1@Draw

; 596  : 					SetXY(cur->x,cur->y);

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 597  : 					if(cur->Detect && ShowCircles_)

	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	$LN6@Draw
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+112]
	test	eax, eax
	je	$LN6@Draw

; 598  : 					{
; 599  : 						if(ShowCircles_ & LOW_SAM)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+112]
	and	edx, 1
	je	SHORT $LN12@Draw

; 600  : 						{
; 601  : 							if(cur->Detect->LowSam)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	movss	xmm0, DWORD PTR [ecx+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN12@Draw

; 602  : 								Parent_->DrawCircle(surface,0x0000ff,cur->x,cur->y,cur->Detect->LowSam * scale_,Flags_,Client_,cliprect);

	mov	edx, DWORD PTR _cliprect$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [eax+108]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	push	ecx
	push	255					; 000000ffH
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?DrawCircle@C_Window@@QAEXPAVSCREEN@@KJJMJJPAUUI95_RECT@@@Z ; C_Window::DrawCircle
$LN12@Draw:

; 603  : 						}
; 604  : 						if(ShowCircles_ & HIGH_SAM)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+112]
	and	edx, 2
	je	SHORT $LN10@Draw

; 605  : 						{
; 606  : 							if(cur->Detect->HighSam)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	movss	xmm0, DWORD PTR [ecx+8]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN10@Draw

; 607  : 								Parent_->DrawCircle(surface,0x0000aa,cur->x,cur->y,cur->Detect->HighSam * scale_,Flags_,Client_,cliprect);

	mov	edx, DWORD PTR _cliprect$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR [eax+108]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	push	ecx
	push	170					; 000000aaH
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?DrawCircle@C_Window@@QAEXPAVSCREEN@@KJJMJJPAUUI95_RECT@@@Z ; C_Window::DrawCircle
$LN10@Draw:

; 608  : 						}
; 609  : 						if(ShowCircles_ & HIGH_RADAR)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+112]
	and	edx, 8
	je	SHORT $LN8@Draw

; 610  : 						{
; 611  : 							if(cur->Detect->HighRadar)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	movss	xmm0, DWORD PTR [ecx+12]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN8@Draw

; 612  : 								Parent_->DrawCircle(surface,0xaa0000,cur->x,cur->y,cur->Detect->HighRadar * scale_,Flags_,Client_,cliprect);

	mov	edx, DWORD PTR _cliprect$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+12]
	mulss	xmm0, DWORD PTR [eax+108]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	push	ecx
	push	11141120				; 00aa0000H
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?DrawCircle@C_Window@@QAEXPAVSCREEN@@KJJMJJPAUUI95_RECT@@@Z ; C_Window::DrawCircle
$LN8@Draw:

; 613  : 						}
; 614  : 						if(ShowCircles_ & LOW_RADAR)

	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+112]
	and	edx, 4
	je	$LN6@Draw

; 615  : 						{
; 616  : 							if(cur->Detect->LowRadar && cur->Detect->LowRadar->arcs && cur->Detect->LowRadar->arcs[0].range)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	cmp	DWORD PTR [ecx], 0
	je	$LN6@Draw
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+4], 0
	je	$LN6@Draw
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [eax]
	mov	edx, 8
	imul	edx, 0
	mov	eax, DWORD PTR [ecx+4]
	movss	xmm0, DWORD PTR [eax+edx+4]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN6@Draw

; 617  : 								Parent_->DrawCircle(surface,0xff0000,cur->x,cur->y,cur->Detect->LowRadar->arcs[0].range * scale_,Flags_,Client_,cliprect);

	mov	ecx, DWORD PTR _cliprect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [ecx]
	mov	eax, 8
	imul	eax, 0
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	mulss	xmm0, DWORD PTR [edx+108]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+16]
	push	eax
	push	16711680				; 00ff0000H
	mov	ecx, DWORD PTR _surface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?DrawCircle@C_Window@@QAEXPAVSCREEN@@KJJMJJPAUUI95_RECT@@@Z ; C_Window::DrawCircle
$LN6@Draw:

; 618  : 						}
; 619  : 					}
; 620  : 					cur->Icon->Draw(surface,cliprect);

	mov	eax, DWORD PTR _cliprect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _surface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw

; 621  : 					if(!(GetFlags() & C_BIT_NOLABEL))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 16777216				; 01000000H
	jne	$LN1@Draw

; 622  : 					{
; 623  : 						if(cur->Div)

	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN4@Draw

; 624  : 							cur->Div->Draw(surface,cliprect);

	mov	ecx, DWORD PTR _cliprect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw
$LN4@Draw:

; 625  : 						if(cur->Brig)

	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN3@Draw

; 626  : 							cur->Brig->Draw(surface,cliprect);

	mov	edx, DWORD PTR _cliprect$[ebp]
	push	edx
	mov	eax, DWORD PTR _surface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw
$LN3@Draw:

; 627  : 						if(cur->Bat)

	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+60], 0
	je	SHORT $LN2@Draw

; 628  : 							cur->Bat->Draw(surface,cliprect);

	mov	eax, DWORD PTR _cliprect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _surface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw
$LN2@Draw:

; 629  : 						if(cur->Label && (!cur->Div && !cur->Brig && !cur->Bat))

	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN1@Draw
	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+52], 0
	jne	SHORT $LN1@Draw
	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+56], 0
	jne	SHORT $LN1@Draw
	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax+60], 0
	jne	SHORT $LN1@Draw

; 630  : 							cur->Label->Draw(surface,cliprect);

	mov	ecx, DWORD PTR _cliprect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?Draw@O_Output@@QAEXPAVSCREEN@@PAUUI95_RECT@@@Z ; O_Output::Draw
$LN1@Draw:

; 631  : 					}
; 632  : 				}
; 633  : 			}
; 634  : 		}
; 635  : 		cur=(MAPICONLIST*)Root_->GetNext(&CurHash,&HashIdx);

	lea	ecx, DWORD PTR _HashIdx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _CurHash$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 636  : 	}

	jmp	$LN22@Draw
$LN21@Draw:
$LN36@Draw:

; 637  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@C_MapIcon@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP	; C_MapIcon::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -20						; size = 4
_current$ = -16						; size = 4
_curidx$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?Refresh@C_MapIcon@@UAEXXZ PROC				; C_MapIcon::Refresh
; _this$ = ecx

; 499  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 500  : 	C_HASHNODE *current;
; 501  : 	long curidx;
; 502  : 	MAPICONLIST *cur;
; 503  : 	F4CSECTIONHANDLE *Leave;
; 504  : 
; 505  : // 2020-02-21 MODIFIED BY S.G. Even if that type of airplane isn't showned, if it's an Unknown, deal with it
; 506  : //	if(!Ready() || (GetFlags() & C_BIT_INVISIBLE) || (Parent_ == NULL))
; 507  : 	if(!Ready() || (Parent_ == NULL))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	je	SHORT $LN14@Refresh
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN15@Refresh
$LN14@Refresh:

; 508  : 		return;

	jmp	$LN16@Refresh
$LN15@Refresh:

; 509  : 
; 510  : 	Leave=UI_Enter(Parent_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 511  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN13@Refresh:

; 512  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN12@Refresh

; 513  : 	{
; 514  : 		// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified, not editing a TE and 'showUnknown' isn't set, hide it
; 515  : 		if (!gShowUnknown && cur->ImageID == ICON_UKN) {

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	jne	SHORT $LN11@Refresh
	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+32], 10126		; 0000278eH
	jne	SHORT $LN11@Refresh

; 516  : 				cur->Flags |= C_BIT_INVISIBLE;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 8192				; 00002000H
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 517  : 				SetXY(cur->x,cur->y);

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 518  : 				cur->Icon->Refresh();

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN11@Refresh:

; 519  : 		}
; 520  : 
; 521  : //		if (!(!(gShowUnknown && cur->ImageID == ICON_UKN) && (GetFlags() & C_BIT_INVISIBLE))) { // (From above) If the template shouldn't be displayed and it's not an unknown and we're not looking at unknown, then don't continue otherwise this will display it
; 522  : 		if ((gShowUnknown && cur->ImageID == ICON_UKN) || !(GetFlags() & C_BIT_INVISIBLE)) { // If the template shouldn't be displayed and it's not an unknown and we're not looking at unknown, then don't continue otherwise this will display it

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	je	SHORT $LN8@Refresh
	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+32], 10126		; 0000278eH
	je	SHORT $LN9@Refresh
$LN8@Refresh:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	$LN10@Refresh
$LN9@Refresh:

; 523  : 		// END OF ADDED SECTION 2002-02-21
; 524  : 			if(!(cur->Flags & C_BIT_INVISIBLE) && cur->Flags & C_BIT_ENABLED)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8192				; 00002000H
	jne	$LN10@Refresh
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 2048				; 00000800H
	je	$LN10@Refresh

; 525  : 			{
; 526  : 				if(cur->Icon)

	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	$LN10@Refresh

; 527  : 				{
; 528  : 					SetXY(cur->x,cur->y);

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 529  : 					cur->Icon->Refresh();

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh

; 530  : 					if(!(GetFlags() & C_BIT_NOLABEL))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 16777216				; 01000000H
	jne	SHORT $LN10@Refresh

; 531  : 					{
; 532  : 						if(cur->Div)

	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+52], 0
	je	SHORT $LN4@Refresh

; 533  : 							cur->Div->Refresh();

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN4@Refresh:

; 534  : 						if(cur->Brig)

	mov	ecx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN3@Refresh

; 535  : 							cur->Brig->Refresh();

	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN3@Refresh:

; 536  : 						if(cur->Bat)

	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN2@Refresh

; 537  : 							cur->Bat->Refresh();

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN2@Refresh:

; 538  : 						if(cur->Label)

	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN10@Refresh

; 539  : 							cur->Label->Refresh();

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN10@Refresh:

; 540  : 					}
; 541  : 				}
; 542  : 			}
; 543  : 		}
; 544  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 545  : 	}

	jmp	$LN13@Refresh
$LN12@Refresh:

; 546  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN16@Refresh:

; 547  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Refresh@C_MapIcon@@UAEXXZ ENDP				; C_MapIcon::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?Drop@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 2
___formal$ = 20						; size = 4
?Drop@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_MapIcon::Drop, COMDAT
; _this$ = ecx

; 155  : 		BOOL Drop(GRABBER *,WORD ,WORD ,C_Window *)	{ return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drop@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_MapIcon::Drop
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -24						; size = 4
_rely$ = -20						; size = 4
_relx$ = -16						; size = 4
_y$ = -12						; size = 4
_x$ = -8						; size = 4
_this$ = -4						; size = 4
_Drag$ = 8						; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
_over$ = 20						; size = 4
?Drag@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_MapIcon::Drag
; _this$ = ecx

; 783  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 784  : 	long x,y;
; 785  : 	long relx,rely;
; 786  : 	F4CSECTIONHANDLE* Leave;
; 787  : 
; 788  : 	if(GetFlags() & C_BIT_INVISIBLE || !(GetFlags() & C_BIT_ENABLED) || !(GetFlags() & C_BIT_DRAGABLE))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN14@Drag
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 2048				; 00000800H
	je	SHORT $LN14@Drag
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 4096				; 00001000H
	jne	SHORT $LN15@Drag
$LN14@Drag:

; 789  : 		return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN15@Drag:

; 790  : 
; 791  : 	if(over != Parent_)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _over$[ebp]
	cmp	ecx, DWORD PTR [eax+48]
	je	SHORT $LN13@Drag

; 792  : 		return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN13@Drag:

; 793  : 
; 794  : 	if(!(GetFlags() & C_BIT_ABSOLUTE))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 262144				; 00040000H
	jne	$LN9@Drag

; 795  : 	{
; 796  : 		relx=MouseX - over->GetX();

	movzx	esi, WORD PTR _MouseX$[ebp]
	mov	ecx, DWORD PTR _over$[ebp]
	call	?GetX@C_Window@@QAEFXZ			; C_Window::GetX
	movsx	edx, ax
	sub	esi, edx
	mov	DWORD PTR _relx$[ebp], esi

; 797  : 		rely=MouseY- over->GetY();

	movzx	esi, WORD PTR _MouseY$[ebp]
	mov	ecx, DWORD PTR _over$[ebp]
	call	?GetY@C_Window@@QAEFXZ			; C_Window::GetY
	cwde
	sub	esi, eax
	mov	DWORD PTR _rely$[ebp], esi

; 798  : 
; 799  : 		if(relx < over->ClientArea_[GetClient()].left || relx > over->ClientArea_[GetClient()].right)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _relx$[ebp]
	cmp	eax, DWORD PTR [edx+ecx+168]
	jl	SHORT $LN10@Drag
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _relx$[ebp]
	cmp	eax, DWORD PTR [edx+ecx+176]
	jle	SHORT $LN11@Drag
$LN10@Drag:

; 800  : 			return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN11@Drag:

; 801  : 		if(rely < over->ClientArea_[GetClient()].top || rely > over->ClientArea_[GetClient()].bottom)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _rely$[ebp]
	cmp	eax, DWORD PTR [edx+ecx+172]
	jl	SHORT $LN8@Drag
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _rely$[ebp]
	cmp	eax, DWORD PTR [edx+ecx+180]
	jle	SHORT $LN9@Drag
$LN8@Drag:

; 802  : 			return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN9@Drag:

; 803  : 	}
; 804  : 
; 805  : 	if(!Last_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+132], 0
	jne	SHORT $LN7@Drag

; 806  : 		return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN7@Drag:

; 807  : 
; 808  : 	if(!(Last_->Flags & C_BIT_DRAGABLE))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 4096				; 00001000H
	jne	SHORT $LN6@Drag

; 809  : 		return(FALSE);

	xor	eax, eax
	jmp	$LN16@Drag
$LN6@Drag:

; 810  : 
; 811  : 	Leave=UI_Enter(Parent_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 812  : 	Refresh();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 813  : 	x=Drag->ItemX_ + (MouseX - Drag->StartX_);

	movzx	ecx, WORD PTR _MouseX$[ebp]
	mov	edx, DWORD PTR _Drag$[ebp]
	sub	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR _Drag$[ebp]
	add	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _x$[ebp], ecx

; 814  : 	y=Drag->ItemY_ + (MouseY - Drag->StartY_);

	movzx	ecx, WORD PTR _MouseY$[ebp]
	mov	edx, DWORD PTR _Drag$[ebp]
	sub	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _Drag$[ebp]
	add	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _y$[ebp], ecx

; 815  : 
; 816  : 	if(x < (over->ClientArea_[GetClient()].left-over->VX_[GetClient()]))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR [edx+esi+168]
	sub	edx, DWORD PTR [eax+ecx*4+480]
	cmp	DWORD PTR _x$[ebp], edx
	jge	SHORT $LN5@Drag

; 817  : 		x=over->ClientArea_[GetClient()].left-over->VX_[GetClient()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	mov	ecx, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR _over$[ebp]
	mov	ecx, DWORD PTR [ecx+esi+168]
	sub	ecx, DWORD PTR [edx+eax*4+480]
	mov	DWORD PTR _x$[ebp], ecx
$LN5@Drag:

; 818  : 	if(x > (over->ClientArea_[GetClient()].right-over->VX_[GetClient()]))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	mov	eax, DWORD PTR _over$[ebp]
	mov	ecx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR [eax+esi+176]
	sub	eax, DWORD PTR [ecx+edx*4+480]
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN4@Drag

; 819  : 		x=over->ClientArea_[GetClient()].right-over->VX_[GetClient()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR [edx+esi+176]
	sub	edx, DWORD PTR [eax+ecx*4+480]
	mov	DWORD PTR _x$[ebp], edx
$LN4@Drag:

; 820  : 	if(y < (over->ClientArea_[GetClient()].top-over->VY_[GetClient()]))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	mov	ecx, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR _over$[ebp]
	mov	ecx, DWORD PTR [ecx+esi+172]
	sub	ecx, DWORD PTR [edx+eax*4+512]
	cmp	DWORD PTR _y$[ebp], ecx
	jge	SHORT $LN3@Drag

; 821  : 		y=over->ClientArea_[GetClient()].top-over->VY_[GetClient()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	mov	eax, DWORD PTR _over$[ebp]
	mov	ecx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR [eax+esi+172]
	sub	eax, DWORD PTR [ecx+edx*4+512]
	mov	DWORD PTR _y$[ebp], eax
$LN3@Drag:

; 822  : 	if(y > (over->ClientArea_[GetClient()].bottom-over->VY_[GetClient()]))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	mov	edx, DWORD PTR _over$[ebp]
	mov	eax, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR [edx+esi+180]
	sub	edx, DWORD PTR [eax+ecx*4+512]
	cmp	DWORD PTR _y$[ebp], edx
	jle	SHORT $LN2@Drag

; 823  : 		y=over->ClientArea_[GetClient()].bottom-over->VY_[GetClient()];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	mov	ecx, DWORD PTR _over$[ebp]
	mov	edx, DWORD PTR _over$[ebp]
	mov	ecx, DWORD PTR [ecx+esi+180]
	sub	ecx, DWORD PTR [edx+eax*4+512]
	mov	DWORD PTR _y$[ebp], ecx
$LN2@Drag:

; 824  : 
; 825  : 	Last_->x=static_cast<short>(x);//! 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	cx, WORD PTR _x$[ebp]
	mov	WORD PTR [eax+16], cx

; 826  : 	Last_->y=static_cast<short>(y);//! 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	cx, WORD PTR _y$[ebp]
	mov	WORD PTR [eax+18], cx

; 827  : 	Last_->worldx = x/scale_;

	cvtsi2ss xmm0, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [edx+108]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	movss	DWORD PTR [ecx+20], xmm0

; 828  : 	Last_->worldy = y/scale_;

	cvtsi2ss xmm0, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [edx+108]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	movss	DWORD PTR [ecx+24], xmm0

; 829  : 	Refresh();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 830  : 	if(Callback_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN1@Drag

; 831  : 		(*Callback_)(Last_->ID,C_TYPE_MOUSEMOVE,this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	61					; 0000003dH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 12					; 0000000cH
$LN1@Drag:

; 832  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 833  : 	return(TRUE);

	mov	eax, 1
$LN16@Drag:

; 834  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drag@C_MapIcon@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_MapIcon::Drag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Icon$ = -4						; size = 4
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?GetItemXY@C_MapIcon@@UAEXJPAJ0@Z PROC			; C_MapIcon::GetItemXY
; _this$ = ecx

; 837  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 838  : 	MAPICONLIST *Icon;
; 839  : 
; 840  : 	Icon=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _Icon$[ebp], eax

; 841  : 	if(Icon == NULL)

	cmp	DWORD PTR _Icon$[ebp], 0
	jne	SHORT $LN1@GetItemXY

; 842  : 		return;

	jmp	SHORT $LN2@GetItemXY
$LN1@GetItemXY:

; 843  : 
; 844  : 	*x=Icon->x;

	mov	edx, DWORD PTR _Icon$[ebp]
	movsx	eax, WORD PTR [edx+16]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx], eax

; 845  : 	*y=Icon->y;

	mov	edx, DWORD PTR _Icon$[ebp]
	movsx	eax, WORD PTR [edx+18]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetItemXY:

; 846  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetItemXY@C_MapIcon@@UAEXJPAJ0@Z ENDP			; C_MapIcon::GetItemXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -32						; size = 4
_curidx$ = -28						; size = 4
_h$ = -24						; size = 4
_w$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_relX$ = 8						; size = 4
_relY$ = 12						; size = 4
___formal$ = 16						; size = 4
?MouseOver@C_MapIcon@@UAEHJJPAVC_Base@@@Z PROC		; C_MapIcon::MouseOver
; _this$ = ecx

; 749  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 750  : 	C_HASHNODE *current;
; 751  : 	long curidx;
; 752  : 	MAPICONLIST *cur;
; 753  : 	long x,y,w,h;
; 754  : 
; 755  : 	if(!Ready() || GetFlags() & C_BIT_INVISIBLE || Parent_ == NULL) return(0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	je	SHORT $LN6@MouseOver
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN6@MouseOver
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN7@MouseOver
$LN6@MouseOver:
	xor	eax, eax
	jmp	$LN8@MouseOver
$LN7@MouseOver:

; 756  : 
; 757  : 	OverLast_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+136], 0

; 758  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN5@MouseOver:

; 759  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN4@MouseOver

; 760  : 	{
; 761  : 		if(!(cur->Flags & C_BIT_INVISIBLE) && cur->Flags & C_BIT_ENABLED)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8192				; 00002000H
	jne	$LN3@MouseOver
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 2048				; 00000800H
	je	SHORT $LN3@MouseOver

; 762  : 		{
; 763  : 			x=cur->x+cur->Icon->GetX();

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	esi, WORD PTR [ecx+16]
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	add	esi, eax
	mov	DWORD PTR _x$[ebp], esi

; 764  : 			y=cur->y+cur->Icon->GetY();

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	esi, WORD PTR [eax+18]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetY@O_Output@@QAEJXZ			; O_Output::GetY
	add	esi, eax
	mov	DWORD PTR _y$[ebp], esi

; 765  : 			w=cur->Icon->GetW();

	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	mov	DWORD PTR _w$[ebp], eax

; 766  : 			h=cur->Icon->GetH();

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetH@O_Output@@QAEJXZ			; O_Output::GetH
	mov	DWORD PTR _h$[ebp], eax

; 767  : 
; 768  : 			if(relX >= x && relY >= y && relX < (x+w) && relY < (y+h))

	mov	ecx, DWORD PTR _relX$[ebp]
	cmp	ecx, DWORD PTR _x$[ebp]
	jl	SHORT $LN3@MouseOver
	mov	edx, DWORD PTR _relY$[ebp]
	cmp	edx, DWORD PTR _y$[ebp]
	jl	SHORT $LN3@MouseOver
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	cmp	DWORD PTR _relX$[ebp], eax
	jge	SHORT $LN3@MouseOver
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _h$[ebp]
	cmp	DWORD PTR _relY$[ebp], ecx
	jge	SHORT $LN3@MouseOver

; 769  : 				OverLast_=cur;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [edx+136], eax
$LN3@MouseOver:

; 770  : 		}
; 771  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 772  : 	}

	jmp	$LN5@MouseOver
$LN4@MouseOver:

; 773  : 	if(OverLast_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+136], 0
	je	$LN1@MouseOver

; 774  : 	{
; 775  : 		SetXY(OverLast_->x+OverLast_->Icon->GetX(),OverLast_->y+OverLast_->Icon->GetY());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	movsx	esi, WORD PTR [eax+18]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetY@O_Output@@QAEJXZ			; O_Output::GetY
	add	esi, eax
	push	esi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	movsx	esi, WORD PTR [ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	add	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 776  : 		SetWH(OverLast_->Icon->GetW(),OverLast_->Icon->GetH());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetH@O_Output@@QAEJXZ			; O_Output::GetH
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx

; 777  : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN8@MouseOver
$LN1@MouseOver:

; 778  : 	}
; 779  : 	return(FALSE);

	xor	eax, eax
$LN8@MouseOver:

; 780  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MouseOver@C_MapIcon@@UAEHJJPAVC_Base@@@Z ENDP		; C_MapIcon::MouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_HitType$ = 12						; size = 2
?Process@C_MapIcon@@UAEHJF@Z PROC			; C_MapIcon::Process
; _this$ = ecx

; 194  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 195  : 	if(Last_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN2@Process

; 196  : 	{
; 197  : 		gSoundMgr->PlaySound(GetSound(HitType));

	movzx	ecx, WORD PTR _HitType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+132]
	call	edx
	push	eax
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z ; C_Sound::PlaySoundA

; 198  : 		if(Callback_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN1@Process

; 199  : 			(*Callback_)(ID,HitType,this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movzx	edx, WORD PTR _HitType$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 12					; 0000000cH
$LN1@Process:

; 200  : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN3@Process
$LN2@Process:

; 201  : 	}
; 202  : 	return(FALSE);

	xor	eax, eax
$LN3@Process:

; 203  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Process@C_MapIcon@@UAEHJF@Z ENDP			; C_MapIcon::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?Dragable@C_MapIcon@@UAEHJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Dragable@C_MapIcon@@UAEHJ@Z PROC			; C_MapIcon::Dragable, COMDAT
; _this$ = ecx

; 150  : 		BOOL Dragable(long) { return(GetFlags() & C_BIT_DRAGABLE);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 4096				; 00001000H
	mov	esp, ebp
	pop	ebp
	ret	4
?Dragable@C_MapIcon@@UAEHJ@Z ENDP			; C_MapIcon::Dragable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -32						; size = 4
_curidx$ = -28						; size = 4
_h$ = -24						; size = 4
_w$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_relX$ = 8						; size = 4
_relY$ = 12						; size = 4
?CheckHotSpots@C_MapIcon@@UAEJJJ@Z PROC			; C_MapIcon::CheckHotSpots
; _this$ = ecx

; 716  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 717  : 	C_HASHNODE *current;
; 718  : 	long curidx;
; 719  : 	MAPICONLIST *cur;
; 720  : 	long x,y,w,h;
; 721  : 
; 722  : 	if(!Ready() || GetFlags() & C_BIT_INVISIBLE || Parent_ == NULL || !(GetFlags() & C_BIT_ENABLED)) return(0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	je	SHORT $LN6@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN6@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN6@CheckHotSp
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 2048				; 00000800H
	jne	SHORT $LN7@CheckHotSp
$LN6@CheckHotSp:
	xor	eax, eax
	jmp	$LN8@CheckHotSp
$LN7@CheckHotSp:

; 723  : 
; 724  : 	Last_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 0

; 725  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN5@CheckHotSp:

; 726  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN4@CheckHotSp

; 727  : 	{
; 728  : 		if(!(cur->Flags & C_BIT_INVISIBLE) && cur->Flags & C_BIT_ENABLED)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8192				; 00002000H
	jne	$LN3@CheckHotSp
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 2048				; 00000800H
	je	SHORT $LN3@CheckHotSp

; 729  : 		{
; 730  : 			x=cur->x+cur->Icon->GetX();

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	esi, WORD PTR [ecx+16]
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	add	esi, eax
	mov	DWORD PTR _x$[ebp], esi

; 731  : 			y=cur->y+cur->Icon->GetY();

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	esi, WORD PTR [eax+18]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetY@O_Output@@QAEJXZ			; O_Output::GetY
	add	esi, eax
	mov	DWORD PTR _y$[ebp], esi

; 732  : 			w=cur->Icon->GetW();

	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	mov	DWORD PTR _w$[ebp], eax

; 733  : 			h=cur->Icon->GetH();

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetH@O_Output@@QAEJXZ			; O_Output::GetH
	mov	DWORD PTR _h$[ebp], eax

; 734  : 
; 735  : 			if(relX >= x && relY >= y && relX < (x+w) && relY < (y+h))

	mov	ecx, DWORD PTR _relX$[ebp]
	cmp	ecx, DWORD PTR _x$[ebp]
	jl	SHORT $LN3@CheckHotSp
	mov	edx, DWORD PTR _relY$[ebp]
	cmp	edx, DWORD PTR _y$[ebp]
	jl	SHORT $LN3@CheckHotSp
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	cmp	DWORD PTR _relX$[ebp], eax
	jge	SHORT $LN3@CheckHotSp
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _h$[ebp]
	cmp	DWORD PTR _relY$[ebp], ecx
	jge	SHORT $LN3@CheckHotSp

; 736  : 				Last_=cur;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [edx+132], eax
$LN3@CheckHotSp:

; 737  : 		}
; 738  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 739  : 	}

	jmp	$LN5@CheckHotSp
$LN4@CheckHotSp:

; 740  : 	if(Last_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+132], 0
	je	SHORT $LN1@CheckHotSp

; 741  : 	{
; 742  : 		SetRelXY(relX-GetX(),relY-GetY());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	mov	edx, DWORD PTR _relY$[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	ecx, DWORD PTR _relX$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+52]
	call	edx

; 743  : 		return(Last_->ID);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN8@CheckHotSp
$LN1@CheckHotSp:

; 744  : 	}
; 745  : 	return(0);

	xor	eax, eax
$LN8@CheckHotSp:

; 746  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckHotSpots@C_MapIcon@@UAEJJJ@Z ENDP			; C_MapIcon::CheckHotSpots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_ID$ = -8						; size = 4
_this$ = -4						; size = 4
?GetHelpText@C_MapIcon@@UAEJXZ PROC			; C_MapIcon::GetHelpText
; _this$ = ecx

; 442  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 443  : 	long ID=0;

	mov	DWORD PTR _ID$[ebp], 0

; 444  : 
; 445  : 	if(!OverLast_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	jne	SHORT $LN2@GetHelpTex

; 446  : 		return(0);

	xor	eax, eax
	jmp	SHORT $LN3@GetHelpTex
$LN2@GetHelpTex:

; 447  : 
; 448  : 	if(OverLast_->Label)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN1@GetHelpTex

; 449  : 		ID=gStringMgr->AddText(OverLast_->Label->GetText());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	ecx, DWORD PTR [ecx+64]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	mov	DWORD PTR _ID$[ebp], eax
$LN1@GetHelpTex:

; 450  : 
; 451  : 	return(ID);

	mov	eax, DWORD PTR _ID$[ebp]
$LN3@GetHelpTex:

; 452  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHelpText@C_MapIcon@@UAEJXZ ENDP			; C_MapIcon::GetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?GetFont@C_MapIcon@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFont@C_MapIcon@@UAEJXZ PROC				; C_MapIcon::GetFont, COMDAT
; _this$ = ecx

; 144  : 		long GetFont() { return(Font_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFont@C_MapIcon@@UAEJXZ ENDP				; C_MapIcon::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?SetFont@C_MapIcon@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetFont@C_MapIcon@@UAEXJ@Z PROC			; C_MapIcon::SetFont, COMDAT
; _this$ = ecx

; 143  : 		void SetFont(long ID) { Font_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+100], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@C_MapIcon@@UAEXJ@Z ENDP			; C_MapIcon::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -24						; size = 4
_current$ = -20						; size = 4
_curidx$ = -16						; size = 4
_img$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?RemapIconImages@C_MapIcon@@QAEXXZ PROC			; C_MapIcon::RemapIconImages
; _this$ = ecx

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 240  : 	IMAGE_RSC *img;
; 241  : 	C_HASHNODE *current;
; 242  : 	long curidx;
; 243  : 	MAPICONLIST *cur;
; 244  : 	F4CSECTIONHANDLE *Leave;
; 245  : 
; 246  : 	Leave=UI_Enter(Parent_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 247  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN4@RemapIconI:

; 248  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN3@RemapIconI

; 249  : 	{
; 250  : 		if(cur->Icon)

	mov	edx, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $LN2@RemapIconI

; 251  : 		{
; 252  : 			img=(IMAGE_RSC *)Icons_[cur->state][0]->Find(cur->ImageID);

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+140]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR [edx+eax]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _img$[ebp], eax

; 253  : 			if(!img)

	cmp	DWORD PTR _img$[ebp], 0
	jne	SHORT $LN1@RemapIconI

; 254  : 			{
; 255  : 				MonoPrint("C_MapIcon::RemapIconImages() Image ID (%1ld) - Not found\n",cur->ImageID);

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	push	OFFSET ??_C@_0DK@HPFAIHCA@C_MapIcon?3?3RemapIconImages?$CI?$CJ?5Ima@
	call	_MonoPrint
	add	esp, 8

; 256  : 				return;

	jmp	SHORT $LN5@RemapIconI
$LN1@RemapIconI:

; 257  : 			}
; 258  : 			cur->Icon->SetImage(img);

	mov	eax, DWORD PTR _img$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z ; O_Output::SetImage
$LN2@RemapIconI:

; 259  : 		}
; 260  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 261  : 	}

	jmp	SHORT $LN4@RemapIconI
$LN3@RemapIconI:

; 262  : 	UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN5@RemapIconI:

; 263  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemapIconImages@C_MapIcon@@QAEXXZ ENDP			; C_MapIcon::RemapIconImages
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_this$ = -4						; size = 4
_icon$ = 8						; size = 4
?Refresh@C_MapIcon@@QAEXPAVMAPICONLIST@@@Z PROC		; C_MapIcon::Refresh
; _this$ = ecx

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 456  : 	F4CSECTIONHANDLE *Leave;
; 457  : 
; 458  : // 2020-02-21 MODIFIED BY S.G. Even if that type of airplane isn't showned, if it's an Unknown, deal with it
; 459  : //	if(!Ready() || (GetFlags() & C_BIT_INVISIBLE) || (!icon) || (Parent_ == NULL))
; 460  : 	if(!Ready() || (!icon) || (Parent_ == NULL))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@C_Base@@QAEFXZ			; C_Base::Ready
	cwde
	test	eax, eax
	je	SHORT $LN12@Refresh
	cmp	DWORD PTR _icon$[ebp], 0
	je	SHORT $LN12@Refresh
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN13@Refresh
$LN12@Refresh:

; 461  : 		return;

	jmp	$LN14@Refresh
$LN13@Refresh:

; 462  : 
; 463  : 	// 2002-02-21 ADDED BY S.G. 'Fog of war code'. If an enemy flight and not identified, not editing a TE and 'showUnknown' isn't set, hide it
; 464  : 	if (!gShowUnknown && icon->ImageID == ICON_UKN) {

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	jne	SHORT $LN11@Refresh
	mov	edx, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [edx+32], 10126		; 0000278eH
	jne	SHORT $LN11@Refresh

; 465  : 			icon->Flags |= C_BIT_INVISIBLE;

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _icon$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 466  : 			Leave=UI_Enter(Parent_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 467  : 			SetXY(icon->x,icon->y);

	mov	edx, DWORD PTR _icon$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	mov	ecx, DWORD PTR _icon$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 468  : 			icon->Icon->Refresh();

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh

; 469  : 			UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN11@Refresh:

; 470  : 	}
; 471  : 	if ((!gShowUnknown || icon->ImageID != ICON_UKN) && (GetFlags() & C_BIT_INVISIBLE)) // If the template shouldn't be displayed and it's not an unknown and we're not looking at unknown, then don't continue otherwise this will display it

	cmp	DWORD PTR ?gShowUnknown@@3HA, 0		; gShowUnknown
	je	SHORT $LN9@Refresh
	mov	eax, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [eax+32], 10126		; 0000278eH
	je	SHORT $LN10@Refresh
$LN9@Refresh:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	je	SHORT $LN10@Refresh

; 472  : 		return;

	jmp	$LN14@Refresh
$LN10@Refresh:

; 473  : 	// END OF ADDED SECTION 2002-02-21
; 474  : 
; 475  : 	if(!(icon->Flags & C_BIT_ENABLED) || (icon->Flags & C_BIT_INVISIBLE))

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 2048				; 00000800H
	je	SHORT $LN7@Refresh
	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8192				; 00002000H
	je	SHORT $LN8@Refresh
$LN7@Refresh:

; 476  : 		return;

	jmp	$LN14@Refresh
$LN8@Refresh:

; 477  : 
; 478  : 	if(icon->Icon)

	mov	edx, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	$LN14@Refresh

; 479  : 	{
; 480  : 		Leave=UI_Enter(Parent_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 481  : 		SetXY(icon->x,icon->y);

	mov	edx, DWORD PTR _icon$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	mov	ecx, DWORD PTR _icon$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 482  : 		icon->Icon->Refresh();

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh

; 483  : 		if(!(GetFlags() & C_BIT_NOLABEL))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 16777216				; 01000000H
	jne	SHORT $LN5@Refresh

; 484  : 		{
; 485  : 			if(icon->Div)

	mov	edx, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [edx+52], 0
	je	SHORT $LN4@Refresh

; 486  : 				icon->Div->Refresh();

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN4@Refresh:

; 487  : 			if(icon->Brig)

	mov	ecx, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [ecx+56], 0
	je	SHORT $LN3@Refresh

; 488  : 				icon->Brig->Refresh();

	mov	edx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN3@Refresh:

; 489  : 			if(icon->Bat)

	mov	eax, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [eax+60], 0
	je	SHORT $LN2@Refresh

; 490  : 				icon->Bat->Refresh();

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN2@Refresh:

; 491  : 			if(icon->Label)

	mov	edx, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [edx+64], 0
	je	SHORT $LN5@Refresh

; 492  : 				icon->Label->Refresh();

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?Refresh@O_Output@@QAEXXZ		; O_Output::Refresh
$LN5@Refresh:

; 493  : 		}
; 494  : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN14@Refresh:

; 495  : 	}
; 496  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Refresh@C_MapIcon@@QAEXPAVMAPICONLIST@@@Z ENDP		; C_MapIcon::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_ID$ = 8						; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
?SetTextOffset@C_MapIcon@@QAEXJFF@Z PROC		; C_MapIcon::SetTextOffset
; _this$ = ecx

; 413  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 414  : 	MAPICONLIST *cur;
; 415  : 
; 416  : 	cur=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _cur$[ebp], eax

; 417  : 	if(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@SetTextOff

; 418  : 		cur->Label->SetXY(x,y);

	movsx	edx, WORD PTR _y$[ebp]
	push	edx
	movsx	eax, WORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY
$LN2@SetTextOff:

; 419  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTextOffset@C_MapIcon@@QAEXJFF@Z ENDP		; C_MapIcon::SetTextOffset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_ID$ = 8						; size = 4
?GetLabel@C_MapIcon@@QAEPADJ@Z PROC			; C_MapIcon::GetLabel
; _this$ = ecx

; 403  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 404  : 	MAPICONLIST *cur;
; 405  : 
; 406  : 	cur=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _cur$[ebp], eax

; 407  : 	if(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN1@GetLabel

; 408  : 		return(cur->Label->GetText());

	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+64]
	call	?GetText@O_Output@@QAEPADXZ		; O_Output::GetText
	jmp	SHORT $LN2@GetLabel
$LN1@GetLabel:

; 409  : 	return(NULL);

	xor	eax, eax
$LN2@GetLabel:

; 410  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetLabel@C_MapIcon@@QAEPADJ@Z ENDP			; C_MapIcon::GetLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_ID$ = 8						; size = 4
_color$ = 12						; size = 4
?SetColor@C_MapIcon@@QAEXJK@Z PROC			; C_MapIcon::SetColor
; _this$ = ecx

; 394  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 395  : 	MAPICONLIST *cur;
; 396  : 
; 397  : 	cur=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _cur$[ebp], eax

; 398  : 	if(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@SetColor

; 399  : 		cur->Label->SetFgColor(color);

	mov	edx, DWORD PTR _color$[ebp]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor
$LN2@SetColor:

; 400  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetColor@C_MapIcon@@QAEXJK@Z ENDP			; C_MapIcon::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_ID$ = 8						; size = 4
_txt$ = 12						; size = 4
?SetLabel@C_MapIcon@@QAEXJPAD@Z PROC			; C_MapIcon::SetLabel
; _this$ = ecx

; 385  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 386  : 	MAPICONLIST *cur;
; 387  : 
; 388  : 	cur=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _cur$[ebp], eax

; 389  : 	if(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@SetLabel

; 390  : 		cur->Label->SetText(gStringMgr->GetText(gStringMgr->AddText(txt)));

	mov	edx, DWORD PTR _txt$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
$LN2@SetLabel:

; 391  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetLabel@C_MapIcon@@QAEXJPAD@Z ENDP			; C_MapIcon::SetLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iID$ = 8						; size = 4
?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z PROC		; C_MapIcon::FindID
; _this$ = ecx

; 640  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 641  : 	return((MAPICONLIST*)Root_->Find(iID));

	mov	eax, DWORD PTR _iID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find

; 642  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?FindID@C_MapIcon@@QAEPAVMAPICONLIST@@J@Z ENDP		; C_MapIcon::FindID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -16						; size = 4
_curidx$ = -12						; size = 4
_cur$ = -8						; size = 4
_this$ = -4						; size = 4
_scale$ = 8						; size = 4
?SetScaleFactor@C_MapIcon@@QAEXM@Z PROC			; C_MapIcon::SetScaleFactor
; _this$ = ecx

; 422  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 423  : 	C_HASHNODE *current;
; 424  : 	long curidx;
; 425  : 	MAPICONLIST *cur;
; 426  : 
; 427  : 	if(scale <= 0.0f || scale == scale_)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _scale$[ebp]
	jae	SHORT $LN3@SetScaleFa
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _scale$[ebp]
	ucomiss	xmm0, DWORD PTR [eax+108]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@SetScaleFa
$LN3@SetScaleFa:

; 428  : 		return;

	jmp	SHORT $LN5@SetScaleFa
$LN4@SetScaleFa:

; 429  : 
; 430  : 	scale_=scale;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [ecx+108], xmm0

; 431  : 
; 432  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN2@SetScaleFa:

; 433  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN1@SetScaleFa

; 434  : 	{
; 435  : 		cur->x=(short)(cur->worldx*scale_);

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+20]
	mulss	xmm0, DWORD PTR [eax+108]
	cvttss2si ecx, xmm0
	mov	edx, DWORD PTR _cur$[ebp]
	mov	WORD PTR [edx+16], cx

; 436  : 		cur->y=(short)(cur->worldy*scale_);

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	mulss	xmm0, DWORD PTR [ecx+108]
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _cur$[ebp]
	mov	WORD PTR [eax+18], dx

; 437  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 438  : 	}

	jmp	SHORT $LN2@SetScaleFa
$LN1@SetScaleFa:
$LN5@SetScaleFa:

; 439  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetScaleFactor@C_MapIcon@@QAEXM@Z ENDP			; C_MapIcon::SetScaleFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -16						; size = 4
_curidx$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?Hide@C_MapIcon@@QAEXXZ PROC				; C_MapIcon::Hide
; _this$ = ecx

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 180  : 	C_HASHNODE *current;
; 181  : 	long curidx;
; 182  : 	MAPICONLIST *cur;
; 183  : 
; 184  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN2@Hide:

; 185  : 
; 186  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN3@Hide

; 187  : 	{
; 188  : 		cur->Flags |= C_BIT_INVISIBLE;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 8192				; 00002000H
	mov	edx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 189  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 190  : 	}

	jmp	SHORT $LN2@Hide
$LN3@Hide:

; 191  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Hide@C_MapIcon@@QAEXXZ ENDP				; C_MapIcon::Hide
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -16						; size = 4
_curidx$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
?Show@C_MapIcon@@QAEXXZ PROC				; C_MapIcon::Show
; _this$ = ecx

; 164  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 	C_HASHNODE *current;
; 166  : 	long curidx;
; 167  : 	MAPICONLIST *cur;
; 168  : 
; 169  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN2@Show:

; 170  : 
; 171  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN3@Show

; 172  : 	{
; 173  : 		cur->Flags &= ~C_BIT_INVISIBLE;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -8193				; ffffdfffH
	mov	edx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 174  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 175  : 	}

	jmp	SHORT $LN2@Show
$LN3@Show:

; 176  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Show@C_MapIcon@@QAEXXZ ENDP				; C_MapIcon::Show
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -20						; size = 4
_curidx$ = -16						; size = 4
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_typemask$ = 8						; size = 4
?HideByType@C_MapIcon@@QAEHJ@Z PROC			; C_MapIcon::HideByType
; _this$ = ecx

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 	C_HASHNODE *current;
; 145  : 	long curidx;
; 146  : 	MAPICONLIST *cur;
; 147  : 	BOOL retval=FALSE;

	mov	DWORD PTR _retval$[ebp], 0

; 148  : 
; 149  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN3@HideByType:

; 150  : 
; 151  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@HideByType

; 152  : 	{
; 153  : 		if(cur->Type & typemask)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, DWORD PTR _typemask$[ebp]
	je	SHORT $LN1@HideByType

; 154  : 		{
; 155  : 			cur->Flags |= C_BIT_INVISIBLE;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 8192				; 00002000H
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 156  : 			retval=TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN1@HideByType:

; 157  : 		}
; 158  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 159  : 	}

	jmp	SHORT $LN3@HideByType
$LN2@HideByType:

; 160  : 	return(retval);

	mov	eax, DWORD PTR _retval$[ebp]

; 161  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HideByType@C_MapIcon@@QAEHJ@Z ENDP			; C_MapIcon::HideByType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_current$ = -20						; size = 4
_curidx$ = -16						; size = 4
_retval$ = -12						; size = 4
_this$ = -8						; size = 4
_cur$ = -4						; size = 4
_typemask$ = 8						; size = 4
?ShowByType@C_MapIcon@@QAEHJ@Z PROC			; C_MapIcon::ShowByType
; _this$ = ecx

; 122  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 123  : 	C_HASHNODE *current;
; 124  : 	long curidx;
; 125  : 	MAPICONLIST *cur;
; 126  : 	BOOL retval=FALSE;

	mov	DWORD PTR _retval$[ebp], 0

; 127  : 
; 128  : 	cur=(MAPICONLIST*)Root_->GetFirst(&current,&curidx);

	lea	eax, DWORD PTR _curidx$[ebp]
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN3@ShowByType:

; 129  : 
; 130  : 	while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN2@ShowByType

; 131  : 	{
; 132  : 		if(cur->Type & typemask)

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, DWORD PTR _typemask$[ebp]
	je	SHORT $LN1@ShowByType

; 133  : 		{
; 134  : 			cur->Flags &= ~C_BIT_INVISIBLE;

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, -8193				; ffffdfffH
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 135  : 			retval=TRUE;

	mov	DWORD PTR _retval$[ebp], 1
$LN1@ShowByType:

; 136  : 		}
; 137  : 		cur=(MAPICONLIST*)Root_->GetNext(&current,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _current$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 138  : 	}

	jmp	SHORT $LN3@ShowByType
$LN2@ShowByType:

; 139  : 	return(retval);

	mov	eax, DWORD PTR _retval$[ebp]

; 140  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ShowByType@C_MapIcon@@QAEHJ@Z ENDP			; C_MapIcon::ShowByType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?RemoveIcon@C_MapIcon@@QAEXJ@Z PROC			; C_MapIcon::RemoveIcon
; _this$ = ecx

; 376  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 	F4CSECTIONHANDLE *Leave;
; 378  : 
; 379  : 	Leave=UI_Enter(Parent_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 380  : 	Root_->Remove(ID);

	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?Remove@C_Hash@@QAEXJ@Z			; C_Hash::Remove

; 381  : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 382  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveIcon@C_MapIcon@@QAEXJ@Z ENDP			; C_MapIcon::RemoveIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_Leave$ = -16						; size = 4
_this$ = -12						; size = 4
_oy$ = -8						; size = 2
_ox$ = -4						; size = 2
_icon$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_newstatus$ = 20					; size = 4
_newstate$ = 24						; size = 4
?UpdateInfo@C_MapIcon@@QAEHPAVMAPICONLIST@@MMJJ@Z PROC	; C_MapIcon::UpdateInfo
; _this$ = ecx

; 645  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 646  : 	short ox,oy;
; 647  : 	F4CSECTIONHANDLE *Leave=NULL;

	mov	DWORD PTR _Leave$[ebp], 0

; 648  : 
; 649  : 	if(!icon) return(FALSE);

	cmp	DWORD PTR _icon$[ebp], 0
	jne	SHORT $LN11@UpdateInfo
	xor	eax, eax
	jmp	$LN12@UpdateInfo
$LN11@UpdateInfo:

; 650  : 
; 651  : 	if(icon->worldx != x || icon->worldy != y || icon->state != newstate)

	mov	eax, DWORD PTR _icon$[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	ucomiss	xmm0, DWORD PTR _x$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@UpdateInfo
	mov	ecx, DWORD PTR _icon$[ebp]
	movss	xmm0, DWORD PTR [ecx+24]
	ucomiss	xmm0, DWORD PTR _y$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@UpdateInfo
	mov	edx, DWORD PTR _icon$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _newstate$[ebp]
	je	$LN10@UpdateInfo
$LN9@UpdateInfo:

; 652  : 	{
; 653  : 		if(icon->Status != newstatus)

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	cmp	edx, DWORD PTR _newstatus$[ebp]
	je	SHORT $LN8@UpdateInfo

; 654  : 		{
; 655  : 			icon->Status=newstatus;

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR _newstatus$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 656  : 			newstatus=-1;

	mov	DWORD PTR _newstatus$[ebp], -1
$LN8@UpdateInfo:

; 657  : 		}
; 658  : 		if(icon->state != newstate)

	mov	edx, DWORD PTR _icon$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _newstate$[ebp]
	je	SHORT $LN7@UpdateInfo

; 659  : 		{
; 660  : 			icon->state=newstate;

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx+12], edx

; 661  : 			newstate=-1;

	mov	DWORD PTR _newstate$[ebp], -1
$LN7@UpdateInfo:

; 662  : 		}
; 663  : 		icon->worldx=x;

	mov	eax, DWORD PTR _icon$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax+20], xmm0

; 664  : 		icon->worldy=y;

	mov	ecx, DWORD PTR _icon$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [ecx+24], xmm0

; 665  : 		ox=icon->x;

	mov	edx, DWORD PTR _icon$[ebp]
	mov	ax, WORD PTR [edx+16]
	mov	WORD PTR _ox$[ebp], ax

; 666  : 		oy=icon->y;

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR _oy$[ebp], dx

; 667  : 		if(ox != ((icon->worldx*scale_)) || oy != (icon->worldy*scale_))

	movsx	eax, WORD PTR _ox$[ebp]
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+20]
	mulss	xmm1, DWORD PTR [edx+108]
	ucomiss	xmm0, xmm1
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@UpdateInfo
	movsx	eax, WORD PTR _oy$[ebp]
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+24]
	mulss	xmm1, DWORD PTR [edx+108]
	ucomiss	xmm0, xmm1
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@UpdateInfo
$LN5@UpdateInfo:

; 668  : 		{
; 669  : 			if(!(icon->Flags & C_BIT_INVISIBLE) && icon->Flags & C_BIT_ENABLED)

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 8192				; 00002000H
	jne	SHORT $LN4@UpdateInfo
	mov	edx, DWORD PTR _icon$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 2048				; 00000800H
	je	SHORT $LN4@UpdateInfo

; 670  : 			{
; 671  : 				Leave=UI_Enter(icon->Owner->GetParent());

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [ecx+44]
	call	?GetParent@C_Base@@QAEPAVC_Window@@XZ	; C_Base::GetParent
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 672  : 				Refresh(icon);

	mov	edx, DWORD PTR _icon$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Refresh@C_MapIcon@@QAEXPAVMAPICONLIST@@@Z ; C_MapIcon::Refresh
$LN4@UpdateInfo:

; 673  : 			}
; 674  : 		}
; 675  : 		icon->x=(short)(icon->worldx*scale_);

	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	mulss	xmm0, DWORD PTR [ecx+108]
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _icon$[ebp]
	mov	WORD PTR [eax+16], dx

; 676  : 		icon->y=(short)(icon->worldy*scale_);

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+24]
	mulss	xmm0, DWORD PTR [edx+108]
	cvttss2si eax, xmm0
	mov	ecx, DWORD PTR _icon$[ebp]
	mov	WORD PTR [ecx+18], ax

; 677  : 		if((ox != icon->x) || (oy != icon->y) || (icon->state != newstate) || (icon->Status != newstatus))

	movsx	edx, WORD PTR _ox$[ebp]
	mov	eax, DWORD PTR _icon$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	cmp	edx, ecx
	jne	SHORT $LN2@UpdateInfo
	movsx	edx, WORD PTR _oy$[ebp]
	mov	eax, DWORD PTR _icon$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	cmp	edx, ecx
	jne	SHORT $LN2@UpdateInfo
	mov	edx, DWORD PTR _icon$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _newstate$[ebp]
	jne	SHORT $LN2@UpdateInfo
	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	cmp	edx, DWORD PTR _newstatus$[ebp]
	je	SHORT $LN3@UpdateInfo
$LN2@UpdateInfo:

; 678  : 		{
; 679  : 			if(icon->Icon)

	mov	eax, DWORD PTR _icon$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN1@UpdateInfo

; 680  : 				icon->Icon->SetImage((IMAGE_RSC*)Icons_[icon->state][0]->Find(icon->ImageID));

	mov	ecx, DWORD PTR _icon$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8+140]
	mov	ecx, 4
	imul	ecx, 0
	mov	ecx, DWORD PTR [eax+ecx]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	push	eax
	mov	edx, DWORD PTR _icon$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z ; O_Output::SetImage
$LN1@UpdateInfo:

; 681  : 			Refresh(icon);

	mov	eax, DWORD PTR _icon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Refresh@C_MapIcon@@QAEXPAVMAPICONLIST@@@Z ; C_MapIcon::Refresh

; 682  : 			UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4

; 683  : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN12@UpdateInfo
$LN3@UpdateInfo:

; 684  : 		}
; 685  : 		UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN10@UpdateInfo:

; 686  : 	}
; 687  : 	return(FALSE);

	xor	eax, eax
$LN12@UpdateInfo:

; 688  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?UpdateInfo@C_MapIcon@@QAEHPAVMAPICONLIST@@MMJJ@Z ENDP	; C_MapIcon::UpdateInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
_cur$ = -12						; size = 4
_oy$ = -8						; size = 2
_ox$ = -4						; size = 2
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_newstatus$ = 20					; size = 4
_newstate$ = 24						; size = 4
?UpdateInfo@C_MapIcon@@QAEHJMMJJ@Z PROC			; C_MapIcon::UpdateInfo
; _this$ = ecx

; 691  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 692  : 	MAPICONLIST *cur;
; 693  : 	short ox,oy;
; 694  : 
; 695  : 	cur=(MAPICONLIST*)Root_->Find(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	mov	DWORD PTR _cur$[ebp], eax

; 696  : 	if(cur == NULL)

	cmp	DWORD PTR _cur$[ebp], 0
	jne	SHORT $LN5@UpdateInfo

; 697  : 		return(FALSE);

	xor	eax, eax
	jmp	$LN6@UpdateInfo
$LN5@UpdateInfo:

; 698  : 
; 699  : 	if(cur->worldx != x || cur->worldy != y)

	mov	edx, DWORD PTR _cur$[ebp]
	movss	xmm0, DWORD PTR [edx+20]
	ucomiss	xmm0, DWORD PTR _x$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@UpdateInfo
	mov	eax, DWORD PTR _cur$[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	ucomiss	xmm0, DWORD PTR _y$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN2@UpdateInfo
$LN3@UpdateInfo:

; 700  : 	{
; 701  : 		cur->Status=newstatus;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR _newstatus$[ebp]
	mov	DWORD PTR [ecx+28], edx

; 702  : 		cur->state=newstate;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 703  : 		cur->worldx=x;

	mov	edx, DWORD PTR _cur$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 704  : 		cur->worldy=y;

	mov	eax, DWORD PTR _cur$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+24], xmm0

; 705  : 		ox=cur->x;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	dx, WORD PTR [ecx+16]
	mov	WORD PTR _ox$[ebp], dx

; 706  : 		oy=cur->y;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	cx, WORD PTR [eax+18]
	mov	WORD PTR _oy$[ebp], cx

; 707  : 		cur->x=(short)(cur->worldx*scale_);

	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+20]
	mulss	xmm0, DWORD PTR [eax+108]
	cvttss2si ecx, xmm0
	mov	edx, DWORD PTR _cur$[ebp]
	mov	WORD PTR [edx+16], cx

; 708  : 		cur->y=(short)(cur->worldy*scale_);

	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	mulss	xmm0, DWORD PTR [ecx+108]
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _cur$[ebp]
	mov	WORD PTR [eax+18], dx

; 709  : 		if((ox != cur->x || oy != cur->y) && !(cur->Flags & C_BIT_INVISIBLE))

	movsx	ecx, WORD PTR _ox$[ebp]
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+16]
	cmp	ecx, eax
	jne	SHORT $LN1@UpdateInfo
	movsx	ecx, WORD PTR _oy$[ebp]
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, WORD PTR [edx+18]
	cmp	ecx, eax
	je	SHORT $LN2@UpdateInfo
$LN1@UpdateInfo:
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 8192				; 00002000H
	jne	SHORT $LN2@UpdateInfo

; 710  : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN6@UpdateInfo
$LN2@UpdateInfo:

; 711  : 	}
; 712  : 	return(FALSE);

	xor	eax, eax
$LN6@UpdateInfo:

; 713  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?UpdateInfo@C_MapIcon@@QAEHJMMJJ@Z ENDP			; C_MapIcon::UpdateInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
$T2 = -104						; size = 4
$T3 = -100						; size = 4
$T4 = -96						; size = 4
$T5 = -92						; size = 4
$T6 = -88						; size = 4
$T7 = -84						; size = 4
$T8 = -80						; size = 4
tv265 = -76						; size = 4
tv213 = -72						; size = 4
$T9 = -68						; size = 4
$T10 = -64						; size = 4
tv166 = -60						; size = 4
tv321 = -56						; size = 4
$T11 = -52						; size = 4
tv373 = -48						; size = 4
$T12 = -44						; size = 4
_img$ = -40						; size = 4
_this$ = -36						; size = 4
_newitem$ = -32						; size = 4
_buf$ = -28						; size = 10
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_CampID$ = 8						; size = 4
_type$ = 12						; size = 2
_ImageID$ = 16						; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_Dragable$ = 28						; size = 2
_str$ = 32						; size = 4
_DivID$ = 36						; size = 4
_BrigID$ = 40						; size = 4
_BatID$ = 44						; size = 4
_newstatus$ = 48					; size = 4
_newstate$ = 52						; size = 4
_detector$ = 56						; size = 4
?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z PROC ; C_MapIcon::AddIconToList
; _this$ = ecx

; 274  : ){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 275  : 	MAPICONLIST *newitem;
; 276  : 	IMAGE_RSC *img = NULL;

	mov	DWORD PTR _img$[ebp], 0

; 277  : 	_TCHAR buf[10];
; 278  : 
; 279  : 	if(!ImageID || Root_->Find(CampID) || !Icons_[0])

	cmp	DWORD PTR _ImageID$[ebp], 0
	je	SHORT $LN10@AddIconToL
	mov	eax, DWORD PTR _CampID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	test	eax, eax
	jne	SHORT $LN10@AddIconToL
	mov	edx, 8
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+140]
	test	ecx, ecx
	jne	SHORT $LN11@AddIconToL
$LN10@AddIconToL:

; 280  : 		return(NULL);

	xor	eax, eax
	jmp	$LN12@AddIconToL
$LN11@AddIconToL:

; 281  : 
; 282  : 	newitem=new MAPICONLIST;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR _newitem$[ebp], edx

; 283  : 	if(newitem == NULL)

	cmp	DWORD PTR _newitem$[ebp], 0
	jne	SHORT $LN9@AddIconToL

; 284  : 		return(NULL);

	xor	eax, eax
	jmp	$LN12@AddIconToL
$LN9@AddIconToL:

; 285  : 
; 286  : 	if (Icons_[newstate][0])

	mov	eax, DWORD PTR _newstate$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+140]
	mov	eax, 4
	imul	eax, 0
	cmp	DWORD PTR [edx+eax], 0
	je	SHORT $LN8@AddIconToL

; 287  : 		img=(IMAGE_RSC *)Icons_[newstate][0]->Find(ImageID);

	mov	ecx, DWORD PTR _ImageID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+140]
	mov	edx, 4
	imul	edx, 0
	mov	ecx, DWORD PTR [ecx+edx]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _img$[ebp], eax
$LN8@AddIconToL:

; 288  : 
; 289  : 	if(!img)

	cmp	DWORD PTR _img$[ebp], 0
	jne	SHORT $LN7@AddIconToL

; 290  : 	{
; 291  : 		MonoPrint("C_MapIcon::AddIconToList() Image ID (%1ld) - Not found\n",ImageID);

	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@FGFJHCBC@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@
	call	_MonoPrint
	add	esp, 8

; 292  : 		return(NULL);

	xor	eax, eax
	jmp	$LN12@AddIconToL
$LN7@AddIconToL:

; 293  : 	}
; 294  : 	if(img->Header->Type != _RSC_IS_IMAGE_)

	mov	ecx, DWORD PTR _img$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	DWORD PTR [edx], 100			; 00000064H
	je	SHORT $LN6@AddIconToL

; 295  : 	{
; 296  : 		MonoPrint("C_MapIcon::AddIconToList() Image ID (%1ld) - Not an Image\n",ImageID);

	mov	eax, DWORD PTR _ImageID$[ebp]
	push	eax
	push	OFFSET ??_C@_0DL@CJIIEJIJ@C_MapIcon?3?3AddIconToList?$CI?$CJ?5Image@
	call	_MonoPrint
	add	esp, 8

; 297  : 		return(NULL);

	xor	eax, eax
	jmp	$LN12@AddIconToL
$LN6@AddIconToL:

; 298  : 	}
; 299  : 
; 300  : 	newitem->ID=CampID;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR _CampID$[ebp]
	mov	DWORD PTR [ecx], edx

; 301  : 	newitem->Type=type;

	movsx	eax, WORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 302  : 	newitem->worldx=x;

	mov	edx, DWORD PTR _newitem$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 303  : 	newitem->worldy=y;

	mov	eax, DWORD PTR _newitem$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+24], xmm0

; 304  : 	newitem->x=(short)(scale_*x);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+108]
	mulss	xmm0, DWORD PTR _x$[ebp]
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	WORD PTR [eax+16], dx

; 305  : 	newitem->y=(short)(scale_*y);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+108]
	mulss	xmm0, DWORD PTR _y$[ebp]
	cvttss2si edx, xmm0
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	WORD PTR [eax+18], dx

; 306  : 	newitem->state=newstate;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR _newstate$[ebp]
	mov	DWORD PTR [ecx+12], edx

; 307  : 	newitem->Flags=C_BIT_ENABLED;

	mov	eax, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [eax+8], 2048			; 00000800H

; 308  : 	if(Dragable)

	movsx	ecx, WORD PTR _Dragable$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@AddIconToL

; 309  : 		newitem->Flags |= C_BIT_DRAGABLE;

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 4096				; 00001000H
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN5@AddIconToL:

; 310  : 	newitem->ImageID=ImageID;

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	eax, DWORD PTR _ImageID$[ebp]
	mov	DWORD PTR [edx+32], eax

; 311  : 	newitem->Dragable=Dragable;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	dx, WORD PTR _Dragable$[ebp]
	mov	WORD PTR [ecx+36], dx

; 312  : 	newitem->Status=newstatus;

	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR _newstatus$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 313  : 	newitem->Detect=detector;

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	eax, DWORD PTR _detector$[ebp]
	mov	DWORD PTR [edx+40], eax

; 314  : 	newitem->Owner=this;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], edx

; 315  : 	newitem->Icon=new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN14@AddIconToL
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv166[ebp], eax
	jmp	SHORT $LN15@AddIconToL
$LN14@AddIconToL:
	mov	DWORD PTR tv166[ebp], 0
$LN15@AddIconToL:
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+48], edx

; 316  : 	newitem->Icon->SetOwner(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 317  : 	newitem->Icon->SetXY(-img->Header->centerx,-img->Header->centery);

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+42]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+40]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 318  : 	newitem->Icon->SetImage(img);

	mov	eax, DWORD PTR _img$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetImage@O_Output@@QAEXPAVIMAGE_RSC@@@Z ; O_Output::SetImage

; 319  : 
; 320  : 	newitem->Icon->SetWH(img->Header->w,img->Header->h);

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+46]
	push	ecx
	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?SetWH@O_Output@@QAEXJJ@Z		; O_Output::SetWH

; 321  : 	newitem->Div=NULL;

	mov	eax, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [eax+52], 0

; 322  : 	newitem->Brig=NULL;

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [ecx+56], 0

; 323  : 	newitem->Bat=NULL;

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	DWORD PTR [edx+60], 0

; 324  : 	if(DivID)

	cmp	DWORD PTR _DivID$[ebp], 0
	je	$LN4@AddIconToL

; 325  : 	{
; 326  : 		_stprintf(buf,"%1ld",DivID);

	mov	eax, DWORD PTR _DivID$[ebp]
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 327  : 		newitem->Div=new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN16@AddIconToL
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN17@AddIconToL
$LN16@AddIconToL:
	mov	DWORD PTR tv213[ebp], 0
$LN17@AddIconToL:
	mov	edx, DWORD PTR tv213[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [eax+52], ecx

; 328  : 		newitem->Div->SetOwner(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 329  : 		newitem->Div->SetFont(Font_);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	push	edx
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 330  : 		newitem->Div->SetFgColor(0x00f0f0f0);

	push	15790320				; 00f0f0f0H
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+52]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 331  : 		newitem->Div->SetText(gStringMgr->GetText(gStringMgr->AddText(buf)));

	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 332  : 		newitem->Div->SetXY(newitem->Icon->GetX()-4,-img->Header->centery);

	mov	ecx, DWORD PTR _img$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+42]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	sub	eax, 4
	push	eax
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+52]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 333  : 		newitem->Div->SetFlags(C_BIT_RIGHT);

	push	64					; 00000040H
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 334  : 		newitem->Div->SetInfo();

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+52]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN4@AddIconToL:

; 335  : 	}
; 336  : 	if(BrigID)

	cmp	DWORD PTR _BrigID$[ebp], 0
	je	$LN3@AddIconToL

; 337  : 	{
; 338  : 		_stprintf(buf,"%1ld",BrigID);

	mov	edx, DWORD PTR _BrigID$[ebp]
	push	edx
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 339  : 		newitem->Brig=new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN18@AddIconToL
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv265[ebp], eax
	jmp	SHORT $LN19@AddIconToL
$LN18@AddIconToL:
	mov	DWORD PTR tv265[ebp], 0
$LN19@AddIconToL:
	mov	ecx, DWORD PTR tv265[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [edx+56], eax

; 340  : 		newitem->Brig->SetOwner(this);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 341  : 		newitem->Brig->SetFont(Font_);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 342  : 		newitem->Brig->SetFgColor(0x00f0f0f0);

	push	15790320				; 00f0f0f0H
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 343  : 		newitem->Brig->SetXY(newitem->Icon->GetX()+newitem->Icon->GetW() + 5,-img->Header->centery);

	mov	ecx, DWORD PTR _img$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+42]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	mov	esi, eax
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	lea	eax, DWORD PTR [esi+eax+5]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 344  : 		newitem->Brig->SetFlags(C_BIT_LEFT);

	push	32					; 00000020H
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 345  : 		newitem->Brig->SetText(gStringMgr->GetText(gStringMgr->AddText(buf)));

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 346  : 		newitem->Brig->SetInfo();

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN3@AddIconToL:

; 347  : 	}
; 348  : 	if(BatID)

	cmp	DWORD PTR _BatID$[ebp], 0
	je	$LN2@AddIconToL

; 349  : 	{
; 350  : 		_stprintf(buf,"%1ld",BatID);

	mov	eax, DWORD PTR _BatID$[ebp]
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 351  : 		newitem->Bat=new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T12[ebp], 0
	je	SHORT $LN20@AddIconToL
	mov	ecx, DWORD PTR $T12[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv321[ebp], eax
	jmp	SHORT $LN21@AddIconToL
$LN20@AddIconToL:
	mov	DWORD PTR tv321[ebp], 0
$LN21@AddIconToL:
	mov	edx, DWORD PTR tv321[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax+60], ecx

; 352  : 		newitem->Bat->SetOwner(this);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 353  : 		newitem->Bat->SetFgColor(0x00f0f0f0);

	push	15790320				; 00f0f0f0H
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 354  : 		newitem->Bat->SetFont(Font_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 355  : 		newitem->Bat->SetXY(newitem->Icon->GetX()+newitem->Icon->GetW()/2,img->Header->centery+2);

	mov	edx, DWORD PTR _img$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, WORD PTR [eax+42]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	mov	esi, eax
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	push	esi
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 356  : 		newitem->Bat->SetFlags(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 357  : 		newitem->Bat->SetText(gStringMgr->GetText(gStringMgr->AddText(buf)));

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+60]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText

; 358  : 		newitem->Bat->SetInfo();

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+60]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
$LN2@AddIconToL:

; 359  : 	}
; 360  : 	newitem->Label=new O_Output;

	push	144					; 00000090H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN22@AddIconToL
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0O_Output@@QAE@XZ			; O_Output::O_Output
	mov	DWORD PTR tv373[ebp], eax
	jmp	SHORT $LN23@AddIconToL
$LN22@AddIconToL:
	mov	DWORD PTR tv373[ebp], 0
$LN23@AddIconToL:
	mov	eax, DWORD PTR tv373[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx+64], edx

; 361  : 	newitem->Label->SetOwner(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?SetOwner@O_Output@@QAEXPAVC_Base@@@Z	; O_Output::SetOwner

; 362  : 	newitem->Label->SetFont(Font_);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?SetFont@O_Output@@QAEXJ@Z		; O_Output::SetFont

; 363  : 	newitem->Label->SetFgColor(0x00f0f0f0);

	push	15790320				; 00f0f0f0H
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+64]
	call	?SetFgColor@O_Output@@QAEXK@Z		; O_Output::SetFgColor

; 364  : 	newitem->Label->SetFlags(GetFlags());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	push	eax
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 365  : 	newitem->Label->SetXY(newitem->Icon->GetX()+newitem->Icon->GetW()/2,img->Header->centery+5);

	mov	ecx, DWORD PTR _img$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	movsx	eax, WORD PTR [edx+42]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?GetX@O_Output@@QAEJXZ			; O_Output::GetX
	mov	esi, eax
	mov	edx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?GetW@O_Output@@QAEJXZ			; O_Output::GetW
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	push	esi
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?SetXY@O_Output@@QAEXJJ@Z		; O_Output::SetXY

; 366  : 	newitem->Label->SetFlags(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?SetFlags@O_Output@@QAEXJ@Z		; O_Output::SetFlags

; 367  : 	if(str)

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN1@AddIconToL

; 368  : 		newitem->Label->SetText(gStringMgr->GetText(gStringMgr->AddText(str)));

	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?SetText@O_Output@@QAEXPAD@Z		; O_Output::SetText
$LN1@AddIconToL:

; 369  : 	newitem->Label->SetInfo();

	mov	ecx, DWORD PTR _newitem$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo

; 370  : 
; 371  : 	Root_->Add(CampID,newitem);

	mov	edx, DWORD PTR _newitem$[ebp]
	push	edx
	mov	eax, DWORD PTR _CampID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Add@C_Hash@@QAEXJPAX@Z			; C_Hash::Add

; 372  : 	return(newitem);

	mov	eax, DWORD PTR _newitem$[ebp]
$LN12@AddIconToL:

; 373  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	52					; 00000034H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$0:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$1:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$2:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$3:
	mov	eax, DWORD PTR $T12[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z$4:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddIconToList@C_MapIcon@@QAEPAVMAPICONLIST@@JFJMMFPADJJJJJPAUDETECTOR@@@Z ENDP ; C_MapIcon::AddIconToList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.h
;	COMDAT ?SetDefaultFlags@C_MapIcon@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetDefaultFlags@C_MapIcon@@QAEXXZ PROC			; C_MapIcon::SetDefaultFlags, COMDAT
; _this$ = ecx

; 107  : 		void SetDefaultFlags() { SetFlags(DefaultFlags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	esp, ebp
	pop	ebp
	ret	0
?SetDefaultFlags@C_MapIcon@@QAEXXZ ENDP			; C_MapIcon::SetDefaultFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = -4						; size = 2
_OffID$ = 8						; size = 4
_OnID$ = 12						; size = 4
?SetMainImage@C_MapIcon@@QAEXJJ@Z PROC			; C_MapIcon::SetMainImage
; _this$ = ecx

; 206  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 	short i;
; 208  : 
; 209  : 	Icons_[0][0]=gImageMgr->GetImageRes(OffID);

	mov	eax, DWORD PTR _OffID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	ecx, 8
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+140]
	mov	edx, 4
	imul	edx, 0
	mov	DWORD PTR [ecx+edx], eax

; 210  : 	Icons_[0][1]=gImageMgr->GetImageRes(OnID);

	mov	eax, DWORD PTR _OnID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	ecx, 8
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+140]
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR [ecx+edx], eax

; 211  : 
; 212  : 	for(i=1;i<NUM_DIRECTIONS;i++)

	mov	eax, 1
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN5@SetMainIma
$LN4@SetMainIma:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN5@SetMainIma:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 8
	jge	SHORT $LN3@SetMainIma

; 213  : 	{
; 214  : 		Icons_[i][0]=Icons_[0][0];

	mov	eax, 8
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+140]
	mov	eax, 4
	imul	eax, 0
	movsx	ecx, WORD PTR _i$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [esi+ecx*8+140]
	mov	esi, 4
	imul	esi, 0
	mov	edx, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx+esi], edx

; 215  : 		Icons_[i][1]=Icons_[0][1];

	mov	eax, 8
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+140]
	mov	eax, 4
	shl	eax, 0
	movsx	ecx, WORD PTR _i$[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [esi+ecx*8+140]
	mov	esi, 4
	shl	esi, 0
	mov	edx, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx+esi], edx

; 216  : 	}

	jmp	$LN4@SetMainIma
$LN3@SetMainIma:

; 217  : 
; 218  : 	if(Icons_[0][0])

	mov	eax, 8
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+140]
	mov	eax, 4
	imul	eax, 0
	cmp	DWORD PTR [edx+eax], 0
	je	SHORT $LN2@SetMainIma

; 219  : 		SetReady(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 220  : 	else

	jmp	SHORT $LN6@SetMainIma
$LN2@SetMainIma:

; 221  : 		SetReady(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady
$LN6@SetMainIma:

; 222  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMainImage@C_MapIcon@@QAEXJJ@Z ENDP			; C_MapIcon::SetMainImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_idx$ = 8						; size = 2
_OffID$ = 12						; size = 4
_OnID$ = 16						; size = 4
?SetMainImage@C_MapIcon@@QAEXFJJ@Z PROC			; C_MapIcon::SetMainImage
; _this$ = ecx

; 225  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 	if(idx >= NUM_DIRECTIONS)

	movsx	eax, WORD PTR _idx$[ebp]
	cmp	eax, 8
	jl	SHORT $LN3@SetMainIma

; 227  : 		return;

	jmp	$LN4@SetMainIma
$LN3@SetMainIma:

; 228  : 
; 229  : 	Icons_[idx][0]=gImageMgr->GetImageRes(OffID);

	mov	ecx, DWORD PTR _OffID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	movsx	edx, WORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+edx*8+140]
	mov	ecx, 4
	imul	ecx, 0
	mov	DWORD PTR [edx+ecx], eax

; 230  : 	Icons_[idx][1]=gImageMgr->GetImageRes(OnID);

	mov	edx, DWORD PTR _OnID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	movsx	ecx, WORD PTR _idx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*8+140]
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR [ecx+edx], eax

; 231  : 
; 232  : 	if(Icons_[0][0])

	mov	eax, 8
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+140]
	mov	eax, 4
	imul	eax, 0
	cmp	DWORD PTR [edx+eax], 0
	je	SHORT $LN2@SetMainIma

; 233  : 		SetReady(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 234  : 	else

	jmp	SHORT $LN4@SetMainIma
$LN2@SetMainIma:

; 235  : 		SetReady(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady
$LN4@SetMainIma:

; 236  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetMainImage@C_MapIcon@@QAEXFJJ@Z ENDP			; C_MapIcon::SetMainImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
tv73 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?Cleanup@C_MapIcon@@UAEXXZ PROC				; C_MapIcon::Cleanup
; _this$ = ecx

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 	if(Root_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN1@Cleanup

; 113  : 	{
; 114  : 		Root_->Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?Cleanup@C_Hash@@QAEXXZ			; C_Hash::Cleanup

; 115  : 		delete Root_;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@Cleanup
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GC_Hash@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN1@Cleanup
$LN4@Cleanup:
	mov	DWORD PTR tv73[ebp], 0
$LN1@Cleanup:

; 116  : 	}
; 117  : 	Root_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 0

; 118  : 	Last_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0

; 119  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@C_MapIcon@@UAEXXZ ENDP				; C_MapIcon::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv72 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_Type$ = 12						; size = 2
?Setup@C_MapIcon@@QAEXJF@Z PROC				; C_MapIcon::Setup
; _this$ = ecx

; 98   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Setup@C_MapIcon@@QAEXJF@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 	// Init Hash Table
; 100  : 	Root_=new C_Hash;

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Setup
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Hash@@QAE@XZ			; C_Hash::C_Hash
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Setup
$LN3@Setup:
	mov	DWORD PTR tv72[ebp], 0
$LN4@Setup:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+128], edx

; 101  : 	Root_->Setup(512);

	push	512					; 00000200H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	call	?Setup@C_Hash@@QAEXJ@Z			; C_Hash::Setup

; 102  : 	Root_->SetCallback(DeleteCB);

	push	OFFSET ?DeleteCB@@YAXPAX@Z		; DeleteCB
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?SetCallback@C_Hash@@QAEXP6AXPAX@Z@Z	; C_Hash::SetCallback

; 103  : 	Root_->SetFlags(C_BIT_REMOVE);

	push	67108864				; 04000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?SetFlags@C_Hash@@QAEXJ@Z		; C_Hash::SetFlags

; 104  : 
; 105  : 	SetID(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetID@C_Base@@QAEXJ@Z			; C_Base::SetID

; 106  : 	SetType(Type);

	movzx	ecx, WORD PTR _Type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetType@C_Base@@QAEXF@Z		; C_Base::SetType

; 107  : 	SetGroup(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 108  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Setup@C_MapIcon@@QAEXJF@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Setup@C_MapIcon@@QAEXJF@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Setup@C_MapIcon@@QAEXJF@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Setup@C_MapIcon@@QAEXJF@Z ENDP				; C_MapIcon::Setup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@C_MapIcon@@QAEJXZ PROC				; C_MapIcon::Size
; _this$ = ecx

; 93   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 94   : 	return(0);

	xor	eax, eax

; 95   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Size@C_MapIcon@@QAEJXZ ENDP				; C_MapIcon::Size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1C_MapIcon@@UAE@XZ PROC				; C_MapIcon::~C_MapIcon
; _this$ = ecx

; 87   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1C_MapIcon@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_MapIcon@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 88   : 	if(Root_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	je	SHORT $LN2@C_MapIcon

; 89   : 		Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_MapIcon@@UAEXXZ		; C_MapIcon::Cleanup
$LN2@C_MapIcon:

; 90   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Control@@UAE@XZ			; C_Control::~C_Control
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1C_MapIcon@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1C_Control@@UAE@XZ			; C_Control::~C_Control
__ehhandler$??1C_MapIcon@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1C_MapIcon@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1C_MapIcon@@UAE@XZ ENDP				; C_MapIcon::~C_MapIcon
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fp$ = 8						; size = 4
??0C_MapIcon@@QAE@PAU_iobuf@@@Z PROC			; C_MapIcon::C_MapIcon
; _this$ = ecx

; 83   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@PAU_iobuf@@@Z		; C_Control::C_Control
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7C_MapIcon@@6B@

; 84   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0C_MapIcon@@QAE@PAU_iobuf@@@Z ENDP			; C_MapIcon::C_MapIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
??0C_MapIcon@@QAE@PAPAD@Z PROC				; C_MapIcon::C_MapIcon
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@PAPAD@Z		; C_Control::C_Control
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7C_MapIcon@@6B@

; 80   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0C_MapIcon@@QAE@PAPAD@Z ENDP				; C_MapIcon::C_MapIcon
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cicons.cpp
_TEXT	SEGMENT
_this$ = -20						; size = 4
_i$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
??0C_MapIcon@@QAE@XZ PROC				; C_MapIcon::C_MapIcon
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0C_MapIcon@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0C_Control@@QAE@XZ			; C_Control::C_Control
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_MapIcon@@6B@

; 58   : 	short i;
; 59   : 
; 60   : 	Root_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], 0

; 61   : 	Last_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 0

; 62   : 	_SetCType_(_CNTL_MAPICON_);

	push	16389					; 00004005H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_SetCType_@C_Base@@QAEXF@Z		; C_Base::_SetCType_

; 63   : 	SetReady(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 64   : 	ShowCircles_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+112], ax

; 65   : 	DefaultFlags_=C_BIT_ENABLED|C_BIT_SELECTABLE|C_BIT_HCENTER|C_BIT_MOUSEOVER;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+124], 268962304		; 10080a00H

; 66   : 	SetDefaultFlags();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDefaultFlags@C_MapIcon@@QAEXXZ	; C_MapIcon::SetDefaultFlags

; 67   : 	Team_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+104], ax

; 68   : 	for(i=0;i<NUM_DIRECTIONS;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN3@C_MapIcon
$LN2@C_MapIcon:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN3@C_MapIcon:
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 8
	jge	SHORT $LN1@C_MapIcon

; 69   : 	{
; 70   : 		Icons_[i][0]=NULL;

	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+140]
	mov	edx, 4
	imul	edx, 0
	mov	DWORD PTR [ecx+edx], 0

; 71   : 		Icons_[i][1]=NULL;

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+140]
	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR [edx+eax], 0

; 72   : 	}

	jmp	SHORT $LN2@C_MapIcon
$LN1@C_MapIcon:

; 73   : 	scale_=1.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+108], xmm0

; 74   : 	LastTime_=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0

; 75   : 	CurTime_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0

; 76   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0C_MapIcon@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1C_Control@@UAE@XZ			; C_Control::~C_Control
__ehhandler$??0C_MapIcon@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0C_MapIcon@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0C_MapIcon@@QAE@XZ ENDP				; C_MapIcon::C_MapIcon
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetY@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Window@@QAEFXZ PROC				; C_Window::GetY, COMDAT
; _this$ = ecx

; 311  : 		short GetY() { return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+430]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Window@@QAEFXZ ENDP				; C_Window::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetX@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Window@@QAEFXZ PROC				; C_Window::GetX, COMDAT
; _this$ = ecx

; 310  : 		short GetX() { return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+428]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Window@@QAEFXZ ENDP				; C_Window::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Control@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Control@@UAEPAXI@Z PROC				; C_Control::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Control@@UAE@XZ			; C_Control::~C_Control
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Control@@UAEPAXI@Z ENDP				; C_Control::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ PROC	; C_Control::GetCallback, COMDAT
; _this$ = ecx

; 82   : 		void (*GetCallback())(long,short,C_Base*)	{ return(Callback_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallback@C_Control@@UAEP6AXJFPAVC_Base@@@ZXZ ENDP	; C_Control::GetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetMouseOver@C_Control@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMouseOver@C_Control@@UAEFXZ PROC			; C_Control::GetMouseOver, COMDAT
; _this$ = ecx

; 80   : 		short GetMouseOver()			{ return(MouseOver_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+82]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseOver@C_Control@@UAEFXZ ENDP			; C_Control::GetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetHotKey@C_Control@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHotKey@C_Control@@UAEFXZ PROC			; C_Control::GetHotKey, COMDAT
; _this$ = ecx

; 79   : 		short GetHotKey()				{ return(HotKey_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+80]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHotKey@C_Control@@UAEFXZ ENDP			; C_Control::GetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetHelpText@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHelpText@C_Control@@UAEJXZ PROC			; C_Control::GetHelpText, COMDAT
; _this$ = ecx

; 78   : 		long  GetHelpText()				{ return(HelpTextID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHelpText@C_Control@@UAEJXZ ENDP			; C_Control::GetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetMenu@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMenu@C_Control@@UAEJXZ PROC				; C_Control::GetMenu, COMDAT
; _this$ = ecx

; 77   : 		long  GetMenu()					{ return(MenuID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMenu@C_Control@@UAEJXZ ENDP				; C_Control::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetDragCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDragCursorID@C_Control@@UAEJXZ PROC			; C_Control::GetDragCursorID, COMDAT
; _this$ = ecx

; 76   : 		long  GetDragCursorID()			{ return(DragCursor_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDragCursorID@C_Control@@UAEJXZ ENDP			; C_Control::GetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetCursorID@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCursorID@C_Control@@UAEJXZ PROC			; C_Control::GetCursorID, COMDAT
; _this$ = ecx

; 75   : 		long  GetCursorID()				{ return(Cursor_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCursorID@C_Control@@UAEJXZ ENDP			; C_Control::GetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetRelY@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelY@C_Control@@UAEJXZ PROC				; C_Control::GetRelY, COMDAT
; _this$ = ecx

; 73   : 		long GetRelY()					{ return(RelY_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelY@C_Control@@UAEJXZ ENDP				; C_Control::GetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetRelX@C_Control@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelX@C_Control@@UAEJXZ PROC				; C_Control::GetRelX, COMDAT
; _this$ = ecx

; 72   : 		long GetRelX()					{ return(RelX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelX@C_Control@@UAEJXZ ENDP				; C_Control::GetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?IsControl@C_Control@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsControl@C_Control@@UAEHXZ PROC			; C_Control::IsControl, COMDAT
; _this$ = ecx

; 71   : 		BOOL  IsControl()				{ return(TRUE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsControl@C_Control@@UAEHXZ ENDP			; C_Control::IsControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?IsBase@C_Control@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBase@C_Control@@UAEHXZ PROC				; C_Control::IsBase, COMDAT
; _this$ = ecx

; 70   : 		BOOL  IsBase()					{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBase@C_Control@@UAEHXZ ENDP				; C_Control::IsBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOverPerc@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_perc$ = 8						; size = 2
?SetMouseOverPerc@C_Control@@UAEXF@Z PROC		; C_Control::SetMouseOverPerc, COMDAT
; _this$ = ecx

; 67   : 		void SetMouseOverPerc(short perc)				{ MouseOverPercent_=perc; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _perc$[ebp]
	mov	WORD PTR [eax+84], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverPerc@C_Control@@UAEXF@Z ENDP		; C_Control::SetMouseOverPerc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOverColor@C_Control@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetMouseOverColor@C_Control@@UAEXK@Z PROC		; C_Control::SetMouseOverColor, COMDAT
; _this$ = ecx

; 66   : 		void SetMouseOverColor(COLORREF color)			{ MouseOverColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverColor@C_Control@@UAEXK@Z ENDP		; C_Control::SetMouseOverColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMouseOver@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetMouseOver@C_Control@@UAEXF@Z PROC			; C_Control::SetMouseOver, COMDAT
; _this$ = ecx

; 65   : 		void SetMouseOver(short state)					{ MouseOver_=state; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _state$[ebp]
	mov	WORD PTR [eax+82], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOver@C_Control@@UAEXF@Z ENDP			; C_Control::SetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z PROC	; C_Control::SetCallback, COMDAT
; _this$ = ecx

; 63   : 		void SetCallback(void (*cb)(long,short,C_Base*)) { Callback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallback@C_Control@@UAEXP6AXJFPAVC_Base@@@Z@Z ENDP	; C_Control::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetHotKey@C_Control@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?SetHotKey@C_Control@@UAEXF@Z PROC			; C_Control::SetHotKey, COMDAT
; _this$ = ecx

; 62   : 		void SetHotKey(short key)						{ HotKey_=key; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _key$[ebp]
	mov	WORD PTR [eax+80], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHotKey@C_Control@@UAEXF@Z ENDP			; C_Control::SetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetHelpText@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetHelpText@C_Control@@UAEXJ@Z PROC			; C_Control::SetHelpText, COMDAT
; _this$ = ecx

; 61   : 		void SetHelpText(long id)						{ HelpTextID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHelpText@C_Control@@UAEXJ@Z ENDP			; C_Control::SetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetMenu@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetMenu@C_Control@@UAEXJ@Z PROC			; C_Control::SetMenu, COMDAT
; _this$ = ecx

; 60   : 		void SetMenu(long id)							{ MenuID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMenu@C_Control@@UAEXJ@Z ENDP			; C_Control::SetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetDragCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetDragCursorID@C_Control@@UAEXJ@Z PROC		; C_Control::SetDragCursorID, COMDAT
; _this$ = ecx

; 59   : 		void SetDragCursorID(long id)					{ DragCursor_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCursorID@C_Control@@UAEXJ@Z ENDP		; C_Control::SetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetCursorID@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCursorID@C_Control@@UAEXJ@Z PROC			; C_Control::SetCursorID, COMDAT
; _this$ = ecx

; 58   : 		void SetCursorID(long id)						{ Cursor_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCursorID@C_Control@@UAEXJ@Z ENDP			; C_Control::SetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelXY@C_Control@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetRelXY@C_Control@@UAEXJJ@Z PROC			; C_Control::SetRelXY, COMDAT
; _this$ = ecx

; 57   : 		void SetRelXY(long x,long y)					{ RelX_=x; RelY_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+76], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetRelXY@C_Control@@UAEXJJ@Z ENDP			; C_Control::SetRelXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelY@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetRelY@C_Control@@UAEXJ@Z PROC			; C_Control::SetRelY, COMDAT
; _this$ = ecx

; 56   : 		void SetRelY(long y)							{ RelY_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+76], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelY@C_Control@@UAEXJ@Z ENDP			; C_Control::SetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?SetRelX@C_Control@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetRelX@C_Control@@UAEXJ@Z PROC			; C_Control::SetRelX, COMDAT
; _this$ = ecx

; 55   : 		void SetRelX(long x)							{ RelX_=x; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelX@C_Control@@UAEXJ@Z ENDP			; C_Control::SetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ??1C_Control@@UAE@XZ
_TEXT	SEGMENT
tv83 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1C_Control@@UAE@XZ PROC				; C_Control::~C_Control, COMDAT
; _this$ = ecx

; 40   : 		{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1C_Control@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_Control@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 41   : 			if(Sound_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	je	SHORT $LN2@C_Control

; 42   : 			{
; 43   : 				Sound_->Cleanup();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	call	?Cleanup@C_Hash@@QAEXXZ			; C_Hash::Cleanup

; 44   : 				delete Sound_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@C_Control
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GC_Hash@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN2@C_Control
$LN4@C_Control:
	mov	DWORD PTR tv83[ebp], 0
$LN2@C_Control:

; 45   : 			}
; 46   : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Base@@UAE@XZ			; C_Base::~C_Base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1C_Control@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1C_Base@@UAE@XZ			; C_Base::~C_Base
__ehhandler$??1C_Control@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1C_Control@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1C_Control@@UAE@XZ ENDP				; C_Control::~C_Control
; Function compile flags: /Odtp
;	COMDAT ??_GC_Base@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Base@@UAEPAXI@Z PROC				; C_Base::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Base@@UAE@XZ			; C_Base::~C_Base
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Base@@UAEPAXI@Z ENDP				; C_Base::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ofp$ = 8						; size = 4
_Parser$ = 12						; size = 4
?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z PROC		; C_Base::SaveText, COMDAT
; _this$ = ecx

; 193  : 		virtual void SaveText(HANDLE ofp,C_Parser *Parser) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SaveText@C_Base@@UAEXPAXPAVC_Parser@@@Z ENDP		; C_Base::SaveText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 2
_P$ = 12						; size = 4
_str$ = 16						; size = 4
_Hndlr$ = 20						; size = 4
?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z PROC	; C_Base::LocalFunction, COMDAT
; _this$ = ecx

; 192  : 		virtual void LocalFunction(short ID,long P[],_TCHAR *str,C_Handler *Hndlr) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LocalFunction@C_Base@@UAEXFQAJPADPAVC_Handler@@@Z ENDP	; C_Base::LocalFunction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?LocalFind@C_Base@@UAEFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_str$ = 8						; size = 4
?LocalFind@C_Base@@UAEFPAD@Z PROC			; C_Base::LocalFind, COMDAT
; _this$ = ecx

; 191  : 		virtual short LocalFind(char *str) { return(-1); } // Search local token list

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	4
?LocalFind@C_Base@@UAEFPAD@Z ENDP			; C_Base::LocalFind
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Wheel@C_Base@@UAEHHGG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_increments$ = 8					; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
?Wheel@C_Base@@UAEHHGG@Z PROC				; C_Base::Wheel, COMDAT
; _this$ = ecx

; 187  : 		virtual BOOL Wheel(int increments, WORD MouseX, WORD MouseY)            { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Wheel@C_Base@@UAEHHGG@Z ENDP				; C_Base::Wheel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Drag$ = 8						; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
_over$ = 20						; size = 4
?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_Base::Drop, COMDAT
; _this$ = ecx

; 182  : 		virtual BOOL Drop(GRABBER *Drag,WORD MouseX,WORD MouseY,C_Window *over) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drop@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_Base::Drop
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Drag$ = 8						; size = 4
_MouseX$ = 12						; size = 2
_MouseY$ = 16						; size = 2
_over$ = 20						; size = 4
?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z PROC	; C_Base::Drag, COMDAT
; _this$ = ecx

; 181  : 		virtual BOOL Drag(GRABBER *Drag,WORD MouseX,WORD MouseY,C_Window *over) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Drag@C_Base@@UAEHPAUGRABBER@@GGPAVC_Window@@@Z ENDP	; C_Base::Drag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetItemXY@C_Base@@UAEXJPAJ0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?GetItemXY@C_Base@@UAEXJPAJ0@Z PROC			; C_Base::GetItemXY, COMDAT
; _this$ = ecx

; 180  : 		virtual void GetItemXY(long ID,long *x,long *y)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetItemXY@C_Base@@UAEXJPAJ0@Z ENDP			; C_Base::GetItemXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Dragable@C_Base@@UAEHJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Dragable@C_Base@@UAEHJ@Z PROC				; C_Base::Dragable, COMDAT
; _this$ = ecx

; 179  : 		virtual BOOL Dragable(long ID)					{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?Dragable@C_Base@@UAEHJ@Z ENDP				; C_Base::Dragable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMe@C_Base@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMe@C_Base@@UAEPAV1@XZ PROC				; C_Base::GetMe, COMDAT
; _this$ = ecx

; 178  : 		virtual C_Base *GetMe()							{ return(this); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMe@C_Base@@UAEPAV1@XZ ENDP				; C_Base::GetMe
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?MouseOver@C_Base@@UAEHJJPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_relX$ = 8						; size = 4
_relY$ = 12						; size = 4
_me$ = 16						; size = 4
?MouseOver@C_Base@@UAEHJJPAV1@@Z PROC			; C_Base::MouseOver, COMDAT
; _this$ = ecx

; 177  : 		virtual BOOL MouseOver(long relX,long relY,C_Base *me) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MouseOver@C_Base@@UAEHJJPAV1@@Z ENDP			; C_Base::MouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CloseWindow@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseWindow@C_Base@@UAEHXZ PROC			; C_Base::CloseWindow, COMDAT
; _this$ = ecx

; 176  : 		virtual BOOL CloseWindow()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseWindow@C_Base@@UAEHXZ ENDP			; C_Base::CloseWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Process@C_Base@@UAEHJF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_HitType$ = 12						; size = 2
?Process@C_Base@@UAEHJF@Z PROC				; C_Base::Process, COMDAT
; _this$ = ecx

; 175  : 		virtual BOOL Process(long ID,short HitType)		{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?Process@C_Base@@UAEHJF@Z ENDP				; C_Base::Process
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CheckKeyboard@C_Base@@UAEHEEEJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_DKScanCode$ = 8					; size = 1
_Ascii$ = 12						; size = 1
_ShiftStates$ = 16					; size = 1
_RepeatCount$ = 20					; size = 4
?CheckKeyboard@C_Base@@UAEHEEEJ@Z PROC			; C_Base::CheckKeyboard, COMDAT
; _this$ = ecx

; 174  : 		virtual BOOL CheckKeyboard(uchar DKScanCode,uchar Ascii,uchar ShiftStates,long RepeatCount) { return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CheckKeyboard@C_Base@@UAEHEEEJ@Z ENDP			; C_Base::CheckKeyboard
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?CheckHotSpots@C_Base@@UAEJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_relx$ = 8						; size = 4
_rely$ = 12						; size = 4
?CheckHotSpots@C_Base@@UAEJJJ@Z PROC			; C_Base::CheckHotSpots, COMDAT
; _this$ = ecx

; 173  : 		virtual long CheckHotSpots(long relx,long rely)	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckHotSpots@C_Base@@UAEJJJ@Z ENDP			; C_Base::CheckHotSpots
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Deactivate@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Deactivate@C_Base@@UAEXXZ PROC				; C_Base::Deactivate, COMDAT
; _this$ = ecx

; 172  : 		virtual void Deactivate()						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Deactivate@C_Base@@UAEXXZ ENDP				; C_Base::Deactivate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Activate@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@C_Base@@UAEXXZ PROC				; C_Base::Activate, COMDAT
; _this$ = ecx

; 171  : 		virtual void Activate()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@C_Base@@UAEXXZ ENDP				; C_Base::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?TimerUpdate@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TimerUpdate@C_Base@@UAEHXZ PROC			; C_Base::TimerUpdate, COMDAT
; _this$ = ecx

; 170  : 		virtual BOOL TimerUpdate()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?TimerUpdate@C_Base@@UAEHXZ ENDP			; C_Base::TimerUpdate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Cleanup@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@C_Base@@UAEXXZ PROC				; C_Base::Cleanup, COMDAT
; _this$ = ecx

; 169  : 		virtual void Cleanup()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@C_Base@@UAEXXZ ENDP				; C_Base::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Parent$ = 8						; size = 4
?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z PROC		; C_Base::SetSubParents, COMDAT
; _this$ = ecx

; 168  : 		virtual void SetSubParents(C_Window *Parent)	{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSubParents@C_Base@@UAEXPAVC_Window@@@Z ENDP		; C_Base::SetSubParents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC	; C_Base::HighLite, COMDAT
; _this$ = ecx

; 167  : 		virtual void HighLite(SCREEN *surface,UI95_RECT *cliprect)		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?HighLite@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP	; C_Base::HighLite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_surface$ = 8						; size = 4
_cliprect$ = 12						; size = 4
?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z PROC	; C_Base::Draw, COMDAT
; _this$ = ecx

; 166  : 		virtual void Draw(SCREEN *surface,UI95_RECT *cliprect)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@C_Base@@UAEXPAVSCREEN@@PAUUI95_RECT@@@Z ENDP	; C_Base::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Refresh@C_Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Refresh@C_Base@@UAEXXZ PROC				; C_Base::Refresh, COMDAT
; _this$ = ecx

; 165  : 		virtual void Refresh()							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Refresh@C_Base@@UAEXXZ ENDP				; C_Base::Refresh
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?IsControl@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsControl@C_Base@@UAEHXZ PROC				; C_Base::IsControl, COMDAT
; _this$ = ecx

; 164  : 		virtual BOOL IsControl()						{ return(FALSE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsControl@C_Base@@UAEHXZ ENDP				; C_Base::IsControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?IsBase@C_Base@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBase@C_Base@@UAEHXZ PROC				; C_Base::IsBase, COMDAT
; _this$ = ecx

; 163  : 		virtual BOOL IsBase()							{ return(TRUE); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBase@C_Base@@UAEHXZ ENDP				; C_Base::IsBase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ PROC		; C_Base::GetCallback, COMDAT
; _this$ = ecx

; 160  : 		virtual void (*GetCallback())(long,short,C_Base*) { return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallback@C_Base@@UAEP6AXJFPAV1@@ZXZ ENDP		; C_Base::GetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetDragCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDragCursorID@C_Base@@UAEJXZ PROC			; C_Base::GetDragCursorID, COMDAT
; _this$ = ecx

; 159  : 		virtual long  GetDragCursorID()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDragCursorID@C_Base@@UAEJXZ ENDP			; C_Base::GetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetCursorID@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCursorID@C_Base@@UAEJXZ PROC			; C_Base::GetCursorID, COMDAT
; _this$ = ecx

; 158  : 		virtual long  GetCursorID()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCursorID@C_Base@@UAEJXZ ENDP			; C_Base::GetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMouseOver@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMouseOver@C_Base@@UAEFXZ PROC			; C_Base::GetMouseOver, COMDAT
; _this$ = ecx

; 157  : 		virtual short GetMouseOver() { return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMouseOver@C_Base@@UAEFXZ ENDP			; C_Base::GetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 2
?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z PROC		; C_Base::GetSound, COMDAT
; _this$ = ecx

; 156  : 		virtual SOUND_RES *GetSound(short Type) { return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSound@C_Base@@UAEPAVSOUND_RES@@F@Z ENDP		; C_Base::GetSound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetHelpText@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHelpText@C_Base@@UAEJXZ PROC			; C_Base::GetHelpText, COMDAT
; _this$ = ecx

; 155  : 		virtual long  GetHelpText()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHelpText@C_Base@@UAEJXZ ENDP			; C_Base::GetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFont@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFont@C_Base@@UAEJXZ PROC				; C_Base::GetFont, COMDAT
; _this$ = ecx

; 154  : 		virtual long  GetFont()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFont@C_Base@@UAEJXZ ENDP				; C_Base::GetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetMenu@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMenu@C_Base@@UAEJXZ PROC				; C_Base::GetMenu, COMDAT
; _this$ = ecx

; 153  : 		virtual long  GetMenu()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMenu@C_Base@@UAEJXZ ENDP				; C_Base::GetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetHotKey@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHotKey@C_Base@@UAEFXZ PROC				; C_Base::GetHotKey, COMDAT
; _this$ = ecx

; 152  : 		virtual short GetHotKey()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHotKey@C_Base@@UAEFXZ ENDP				; C_Base::GetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetState@C_Base@@UAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@C_Base@@UAEFXZ PROC				; C_Base::GetState, COMDAT
; _this$ = ecx

; 151  : 		virtual short GetState()	{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@C_Base@@UAEFXZ ENDP				; C_Base::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?Ready@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Ready@C_Base@@QAEFXZ PROC				; C_Base::Ready, COMDAT
; _this$ = ecx

; 150  : 		short  Ready()				{ return(Ready_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+42]
	mov	esp, ebp
	pop	ebp
	ret	0
?Ready@C_Base@@QAEFXZ ENDP				; C_Base::Ready
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetParent@C_Base@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParent@C_Base@@QAEPAVC_Window@@XZ PROC		; C_Base::GetParent, COMDAT
; _this$ = ecx

; 149  : 		C_Window *GetParent()		{ return(Parent_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+48]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParent@C_Base@@QAEPAVC_Window@@XZ ENDP		; C_Base::GetParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetRelY@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelY@C_Base@@UAEJXZ PROC				; C_Base::GetRelY, COMDAT
; _this$ = ecx

; 148  : 		virtual long GetRelY()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelY@C_Base@@UAEJXZ ENDP				; C_Base::GetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetRelX@C_Base@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRelX@C_Base@@UAEJXZ PROC				; C_Base::GetRelX, COMDAT
; _this$ = ecx

; 147  : 		virtual long GetRelX()		{ return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRelX@C_Base@@UAEJXZ ENDP				; C_Base::GetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z PROC		; C_Base::SetCallback, COMDAT
; _this$ = ecx

; 131  : 		virtual void SetCallback(void (*cb)(long,short,C_Base*)){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallback@C_Base@@UAEXP6AXJFPAV1@@Z@Z ENDP		; C_Base::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOverPerc@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_perc$ = 8						; size = 2
?SetMouseOverPerc@C_Base@@UAEXF@Z PROC			; C_Base::SetMouseOverPerc, COMDAT
; _this$ = ecx

; 130  : 		virtual void SetMouseOverPerc(short perc)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverPerc@C_Base@@UAEXF@Z ENDP			; C_Base::SetMouseOverPerc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOverColor@C_Base@@UAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetMouseOverColor@C_Base@@UAEXK@Z PROC			; C_Base::SetMouseOverColor, COMDAT
; _this$ = ecx

; 129  : 		virtual void SetMouseOverColor(COLORREF color)			{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOverColor@C_Base@@UAEXK@Z ENDP			; C_Base::SetMouseOverColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMouseOver@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetMouseOver@C_Base@@UAEXF@Z PROC			; C_Base::SetMouseOver, COMDAT
; _this$ = ecx

; 128  : 		virtual void SetMouseOver(short state)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMouseOver@C_Base@@UAEXF@Z ENDP			; C_Base::SetMouseOver
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetHelpText@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetHelpText@C_Base@@UAEXJ@Z PROC			; C_Base::SetHelpText, COMDAT
; _this$ = ecx

; 127  : 		virtual void SetHelpText(long id)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHelpText@C_Base@@UAEXJ@Z ENDP			; C_Base::SetHelpText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetDragCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetDragCursorID@C_Base@@UAEXJ@Z PROC			; C_Base::SetDragCursorID, COMDAT
; _this$ = ecx

; 126  : 		virtual void SetDragCursorID(long id)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCursorID@C_Base@@UAEXJ@Z ENDP			; C_Base::SetDragCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCursorID@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCursorID@C_Base@@UAEXJ@Z PROC			; C_Base::SetCursorID, COMDAT
; _this$ = ecx

; 125  : 		virtual void SetCursorID(long id)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCursorID@C_Base@@UAEXJ@Z ENDP			; C_Base::SetCursorID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetSound@C_Base@@UAEXJF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
_type$ = 12						; size = 2
?SetSound@C_Base@@UAEXJF@Z PROC				; C_Base::SetSound, COMDAT
; _this$ = ecx

; 124  : 		virtual void SetSound(long ID,short type)				{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSound@C_Base@@UAEXJF@Z ENDP				; C_Base::SetSound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFont@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetFont@C_Base@@UAEXJ@Z PROC				; C_Base::SetFont, COMDAT
; _this$ = ecx

; 123  : 		virtual void SetFont(long ID)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@C_Base@@UAEXJ@Z ENDP				; C_Base::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetMenu@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetMenu@C_Base@@UAEXJ@Z PROC				; C_Base::SetMenu, COMDAT
; _this$ = ecx

; 122  : 		virtual void SetMenu(long ID)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMenu@C_Base@@UAEXJ@Z ENDP				; C_Base::SetMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetHotKey@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 2
?SetHotKey@C_Base@@UAEXF@Z PROC				; C_Base::SetHotKey, COMDAT
; _this$ = ecx

; 121  : 		virtual void SetHotKey(short key)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetHotKey@C_Base@@UAEXF@Z ENDP				; C_Base::SetHotKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetState@C_Base@@UAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 2
?SetState@C_Base@@UAEXF@Z PROC				; C_Base::SetState, COMDAT
; _this$ = ecx

; 120  : 		virtual void SetState(short state)						{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetState@C_Base@@UAEXF@Z ENDP				; C_Base::SetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetRelXY@C_Base@@UAEXJJ@Z PROC				; C_Base::SetRelXY, COMDAT
; _this$ = ecx

; 112  : 		virtual void SetRelXY(long x,long y)					{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetRelXY@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetRelXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetRelY@C_Base@@UAEXJ@Z PROC				; C_Base::SetRelY, COMDAT
; _this$ = ecx

; 111  : 		virtual void SetRelY(long y)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelY@C_Base@@UAEXJ@Z ENDP				; C_Base::SetRelY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetRelX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetRelX@C_Base@@UAEXJ@Z PROC				; C_Base::SetRelX, COMDAT
; _this$ = ecx

; 110  : 		virtual void SetRelX(long x)							{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRelX@C_Base@@UAEXJ@Z ENDP				; C_Base::SetRelX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetXYWH@C_Base@@UAEXJJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_w$ = 16						; size = 4
_h$ = 20						; size = 4
?SetXYWH@C_Base@@UAEXJJJJ@Z PROC			; C_Base::SetXYWH, COMDAT
; _this$ = ecx

; 109  : 		virtual void SetXYWH(long x,long y,long w,long h)		{ x_=x; y_=y; w_=w; h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [ecx+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetXYWH@C_Base@@UAEXJJJJ@Z ENDP			; C_Base::SetXYWH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetWH@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
_h$ = 12						; size = 4
?SetWH@C_Base@@UAEXJJ@Z PROC				; C_Base::SetWH, COMDAT
; _this$ = ecx

; 108  : 		virtual void SetWH(long w,long h)						{ w_=w; h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	mov	DWORD PTR [edx+36], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWH@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetWH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetXY@C_Base@@UAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@C_Base@@UAEXJJ@Z PROC				; C_Base::SetXY, COMDAT
; _this$ = ecx

; 107  : 		virtual void SetXY(long x,long y)						{ x_=x; y_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+28], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@C_Base@@UAEXJJ@Z ENDP				; C_Base::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetH@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_h$ = 8							; size = 4
?SetH@C_Base@@UAEXJ@Z PROC				; C_Base::SetH, COMDAT
; _this$ = ecx

; 106  : 		virtual void SetH(long h)								{ h_=h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetH@C_Base@@UAEXJ@Z ENDP				; C_Base::SetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetW@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
?SetW@C_Base@@UAEXJ@Z PROC				; C_Base::SetW, COMDAT
; _this$ = ecx

; 105  : 		virtual void SetW(long w)								{ w_=w; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetW@C_Base@@UAEXJ@Z ENDP				; C_Base::SetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetY@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetY@C_Base@@UAEXJ@Z PROC				; C_Base::SetY, COMDAT
; _this$ = ecx

; 104  : 		virtual void SetY(long y)								{ y_=y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetY@C_Base@@UAEXJ@Z ENDP				; C_Base::SetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetX@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetX@C_Base@@UAEXJ@Z PROC				; C_Base::SetX, COMDAT
; _this$ = ecx

; 103  : 		virtual void SetX(long x)								{ x_=x; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetX@C_Base@@UAEXJ@Z ENDP				; C_Base::SetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlagBitOff@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bits$ = 8						; size = 4
?SetFlagBitOff@C_Base@@UAEXJ@Z PROC			; C_Base::SetFlagBitOff, COMDAT
; _this$ = ecx

; 102  : 		virtual void SetFlagBitOff(long bits)					{ Flags_ &= ~bits; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bits$[ebp]
	not	eax
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlagBitOff@C_Base@@UAEXJ@Z ENDP			; C_Base::SetFlagBitOff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlagBitOn@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bits$ = 8						; size = 4
?SetFlagBitOn@C_Base@@UAEXJ@Z PROC			; C_Base::SetFlagBitOn, COMDAT
; _this$ = ecx

; 101  : 		virtual void SetFlagBitOn(long bits)					{ Flags_ |= bits; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	or	ecx, DWORD PTR _bits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlagBitOn@C_Base@@UAEXJ@Z ENDP			; C_Base::SetFlagBitOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetFlags@C_Base@@UAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetFlags@C_Base@@UAEXJ@Z PROC				; C_Base::SetFlags, COMDAT
; _this$ = ecx

; 100  : 		virtual void SetFlags(long flags)						{ Flags_=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlags@C_Base@@UAEXJ@Z ENDP				; C_Base::SetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetGroup@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetGroup@C_Base@@QAEXJ@Z PROC				; C_Base::SetGroup, COMDAT
; _this$ = ecx

; 96   : 		void SetGroup(long id)									{ Section_[_GROUP_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGroup@C_Base@@QAEXJ@Z ENDP				; C_Base::SetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?_SetCType_@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ctype$ = 8						; size = 2
?_SetCType_@C_Base@@QAEXF@Z PROC			; C_Base::_SetCType_, COMDAT
; _this$ = ecx

; 95   : 		void _SetCType_(short ctype)							{ _CType_=ctype; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _ctype$[ebp]
	mov	WORD PTR [eax+20], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?_SetCType_@C_Base@@QAEXF@Z ENDP			; C_Base::_SetCType_
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetType@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 2
?SetType@C_Base@@QAEXF@Z PROC				; C_Base::SetType, COMDAT
; _this$ = ecx

; 94   : 		void SetType(short type)								{ Type_=type; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _type$[ebp]
	mov	WORD PTR [eax+22], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetType@C_Base@@QAEXF@Z ENDP				; C_Base::SetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetID@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetID@C_Base@@QAEXJ@Z PROC				; C_Base::SetID, COMDAT
; _this$ = ecx

; 93   : 		void SetID(long id)										{ ID_=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetID@C_Base@@QAEXJ@Z ENDP				; C_Base::SetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ??1C_Base@@UAE@XZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1C_Base@@UAE@XZ PROC					; C_Base::~C_Base, COMDAT
; _this$ = ecx

; 81   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C_Base@@6B@

; 82   : 			if(User_)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN2@C_Base

; 83   : 			{
; 84   : 				User_->Cleanup();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+44]
	call	?Cleanup@C_Hash@@QAEXXZ			; C_Hash::Cleanup

; 85   : 				delete User_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN4@C_Base
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GC_Hash@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN2@C_Base
$LN4@C_Base:
	mov	DWORD PTR tv74[ebp], 0
$LN2@C_Base:

; 86   : 			}
; 87   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1C_Base@@UAE@XZ ENDP					; C_Base::~C_Base
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GO_Output@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GO_Output@@QAEPAXI@Z PROC				; O_Output::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1O_Output@@QAE@XZ			; O_Output::~O_Output
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GO_Output@@QAEPAXI@Z ENDP				; O_Output::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetText@O_Output@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetText@O_Output@@QAEPADXZ PROC			; O_Output::GetText, COMDAT
; _this$ = ecx

; 151  : 		_TCHAR *GetText()				{ return(Label_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@O_Output@@QAEPADXZ ENDP			; O_Output::GetText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetH@O_Output@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@O_Output@@QAEJXZ PROC				; O_Output::GetH, COMDAT
; _this$ = ecx

; 148  : 		long GetH()						{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@O_Output@@QAEJXZ ENDP				; O_Output::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetW@O_Output@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@O_Output@@QAEJXZ PROC				; O_Output::GetW, COMDAT
; _this$ = ecx

; 147  : 		long GetW()						{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@O_Output@@QAEJXZ ENDP				; O_Output::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetY@O_Output@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@O_Output@@QAEJXZ PROC				; O_Output::GetY, COMDAT
; _this$ = ecx

; 146  : 		long GetY()						{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@O_Output@@QAEJXZ ENDP				; O_Output::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?GetX@O_Output@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@O_Output@@QAEJXZ PROC				; O_Output::GetX, COMDAT
; _this$ = ecx

; 145  : 		long GetX()						{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@O_Output@@QAEJXZ ENDP				; O_Output::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFgColor@O_Output@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetFgColor@O_Output@@QAEXK@Z PROC			; O_Output::SetFgColor, COMDAT
; _this$ = ecx

; 128  : 		void SetFgColor(COLORREF color)			{ FgColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFgColor@O_Output@@QAEXK@Z ENDP			; O_Output::SetFgColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFont@O_Output@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FID$ = 8						; size = 4
?SetFont@O_Output@@QAEXJ@Z PROC				; O_Output::SetFont, COMDAT
; _this$ = ecx

; 127  : 		void SetFont(long FID)					{ Font_=FID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _FID$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFont@O_Output@@QAEXJ@Z ENDP				; O_Output::SetFont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetFlags@O_Output@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetFlags@O_Output@@QAEXJ@Z PROC			; O_Output::SetFlags, COMDAT
; _this$ = ecx

; 126  : 		void SetFlags(long flags)				{ flags_=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlags@O_Output@@QAEXJ@Z ENDP			; O_Output::SetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetOwner@O_Output@@QAEXPAVC_Base@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
?SetOwner@O_Output@@QAEXPAVC_Base@@@Z PROC		; O_Output::SetOwner, COMDAT
; _this$ = ecx

; 124  : 		void SetOwner(C_Base *owner)			{ Owner_ = owner; SetInfo(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [eax+140], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetInfo@O_Output@@QAEXXZ		; O_Output::SetInfo
	mov	esp, ebp
	pop	ebp
	ret	4
?SetOwner@O_Output@@QAEXPAVC_Base@@@Z ENDP		; O_Output::SetOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetWH@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_w$ = 8							; size = 4
_h$ = 12						; size = 4
?SetWH@O_Output@@QAEXJJ@Z PROC				; O_Output::SetWH, COMDAT
; _this$ = ecx

; 121  : 		void SetWH(long w,long h)				{ w_ = w; h_ = h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	mov	DWORD PTR [edx+72], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWH@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetWH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ?SetXY@O_Output@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?SetXY@O_Output@@QAEXJJ@Z PROC				; O_Output::SetXY, COMDAT
; _this$ = ecx

; 118  : 		void SetXY(long x,long y)				{ origx_ = x; origy_ = y; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR [edx+56], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SetXY@O_Output@@QAEXJJ@Z ENDP				; O_Output::SetXY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ??1O_Output@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1O_Output@@QAE@XZ PROC				; O_Output::~O_Output, COMDAT
; _this$ = ecx

; 110  : 		~O_Output() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1O_Output@@QAE@XZ ENDP				; O_Output::~O_Output
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ooutput.h
;	COMDAT ??0O_Output@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0O_Output@@QAE@XZ PROC				; O_Output::O_Output, COMDAT
; _this$ = ecx

; 75   : 		O_Output()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 		{
; 77   : 			origx_=0,origy_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], 0

; 78   : 			x_=0,y_=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0

; 79   : 			w_=0,h_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 0

; 80   : 			lastx_=0,lasty_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0

; 81   : 			lastw_=0,lasth_=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0

; 82   : 			_OType_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+92], cx

; 83   : 			flags_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 84   : 			animtype_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+94], cx

; 85   : 			frame_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+96], ax

; 86   : 			direction_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+98], dx

; 87   : 			ready_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+100], cx

; 88   : 			fperc_=100,bperc_=0;

	mov	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+102], ax
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+104], dx

; 89   : 			FgColor_=0xcccccc,BgColor_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 13421772		; 00ccccccH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0

; 90   : 			Font_=1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 91   : 			LabelLen_=0;

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+106], cx

; 92   : 			Src_.left=0; Src_.top=0; Src_.right=0; Src_.bottom=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0

; 93   : 			Dest_.left=0; Dest_.top=0; Dest_.right=0; Dest_.bottom=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], 0

; 94   : 			Rows_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0

; 95   : 			Cols_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0

; 96   : 			ScaleSet_=1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1

; 97   : 			OpStart_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+112], dx

; 98   : 			OpEnd_=10000;

	mov	ecx, 10000				; 00002710H
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+114], cx

; 99   : 			WWWidth_=0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+108], ax

; 100  : 			WWCount_=0;

	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+110], dx

; 101  : 			Wrap_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 102  : 			Label_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 0

; 103  : 			Image_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0

; 104  : 			Anim_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0

; 105  : 			Owner_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+140], 0

; 106  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0O_Output@@QAE@XZ ENDP				; O_Output::O_Output
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Hash@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Hash@@QAEPAXI@Z PROC				; C_Hash::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Hash@@QAE@XZ			; C_Hash::~C_Hash
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Hash@@QAEPAXI@Z ENDP				; C_Hash::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chash.h
;	COMDAT ?SetCallback@C_Hash@@QAEXP6AXPAX@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetCallback@C_Hash@@QAEXP6AXPAX@Z@Z PROC		; C_Hash::SetCallback, COMDAT
; _this$ = ecx

; 58   : 		void SetCallback(void (*cb)(void*)) { Callback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCallback@C_Hash@@QAEXP6AXPAX@Z@Z ENDP		; C_Hash::SetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chash.h
;	COMDAT ?SetFlags@C_Hash@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flags$ = 8						; size = 4
?SetFlags@C_Hash@@QAEXJ@Z PROC				; C_Hash::SetFlags, COMDAT
; _this$ = ecx

; 55   : 		void SetFlags(long flags) { flags_=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetFlags@C_Hash@@QAEXJ@Z ENDP				; C_Hash::SetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
