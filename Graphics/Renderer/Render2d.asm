; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\Graphics\Renderer\Render2d.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
PUBLIC	_ceilf
PUBLIC	_floorf
PUBLIC	?ceil@@YAMM@Z					; ceil
PUBLIC	?floor@@YAMM@Z					; floor
PUBLIC	?strstr@@YAPADPADPBD@Z				; strstr
PUBLIC	?glReleaseMemory@@YAXPAX@Z			; glReleaseMemory
PUBLIC	?glGetFileExtension@@YAXPBDPAD@Z		; glGetFileExtension
PUBLIC	??1CFileIO@@UAE@XZ				; CFileIO::~CFileIO
PUBLIC	??_GCFileIO@@UAEPAXI@Z				; CFileIO::`scalar deleting destructor'
PUBLIC	??1CFileMemory@@UAE@XZ				; CFileMemory::~CFileMemory
PUBLIC	??_GCFileMemory@@UAEPAXI@Z			; CFileMemory::`scalar deleting destructor'
PUBLIC	??1CImageFileMemory@@UAE@XZ			; CImageFileMemory::~CImageFileMemory
PUBLIC	??_GCImageFileMemory@@UAEPAXI@Z			; CImageFileMemory::`scalar deleting destructor'
PUBLIC	?CheckImageType@@YAHPBD@Z			; CheckImageType
PUBLIC	?ReadTextureImage@@YAHPAVCImageFileMemory@@@Z	; ReadTextureImage
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetDisplayDevice@ImageBuffer@@QAEPAVDisplayDevice@@XZ ; ImageBuffer::GetDisplayDevice
PUBLIC	?targetSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ ; ImageBuffer::targetSurface
PUBLIC	?targetXres@ImageBuffer@@QAEHXZ			; ImageBuffer::targetXres
PUBLIC	?targetYres@ImageBuffer@@QAEHXZ			; ImageBuffer::targetYres
PUBLIC	?GetDefaultRC@DisplayDevice@@QAEPAVDXContext@@XZ ; DisplayDevice::GetDefaultRC
PUBLIC	?TexHandle@Texture@@QAEKXZ			; Texture::TexHandle
PUBLIC	?ReadFontMetrics@FontSet@@QAEHHPAD@Z		; FontSet::ReadFontMetrics
PUBLIC	?CenterOriginInViewport@VirtualDisplay@@QAEXXZ	; VirtualDisplay::CenterOriginInViewport
PUBLIC	?ZeroRotationAboutOrigin@VirtualDisplay@@QAEXXZ	; VirtualDisplay::ZeroRotationAboutOrigin
PUBLIC	?Setup@Render2D@@UAEXPAVImageBuffer@@@Z		; Render2D::Setup
PUBLIC	?Cleanup@Render2D@@UAEXXZ			; Render2D::Cleanup
PUBLIC	?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z ; Render2D::SetImageBuffer
PUBLIC	?StartDraw@Render2D@@UAEXXZ			; Render2D::StartDraw
PUBLIC	?EndDraw@Render2D@@UAEXXZ			; Render2D::EndDraw
PUBLIC	?SetViewport@Render2D@@UAEXMMMM@Z		; Render2D::SetViewport
PUBLIC	?Render2DPoint@Render2D@@UAEXMM@Z		; Render2D::Render2DPoint
PUBLIC	?Render2DLine@Render2D@@UAEXMMMM@Z		; Render2D::Render2DLine
PUBLIC	?Render2DTri@Render2D@@UAEXMMMMMM@Z		; Render2D::Render2DTri
PUBLIC	?Render2DBitmap@Render2D@@QAEXHHHHHHHPAK_N@Z	; Render2D::Render2DBitmap
PUBLIC	?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z	; Render2D::Render2DBitmap
PUBLIC	?ScreenText@Render2D@@UAEXMMPBDH@Z		; Render2D::ScreenText
PUBLIC	?Load2DFontSet@Render2D@@SAXXZ			; Render2D::Load2DFontSet
PUBLIC	?Load3DFontSet@Render2D@@SAXXZ			; Render2D::Load3DFontSet
PUBLIC	?Release2DFontSet@Render2D@@SAXXZ		; Render2D::Release2DFontSet
PUBLIC	?Release3DFontSet@Render2D@@SAXXZ		; Render2D::Release3DFontSet
PUBLIC	?ChangeFontSet@Render2D@@SAXPAUFontSet@@@Z	; Render2D::ChangeFontSet
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7CFileIO@@6B@				; CFileIO::`vftable'
PUBLIC	??_7CFileMemory@@6B@				; CFileMemory::`vftable'
PUBLIC	??_7CImageFileMemory@@6B@			; CImageFileMemory::`vftable'
PUBLIC	??_C@_03BBABOKL@GIF?$AA@			; `string'
PUBLIC	??_C@_03DJLAKPIA@LBM?$AA@			; `string'
PUBLIC	??_C@_03BFAIMLIE@PCX?$AA@			; `string'
PUBLIC	??_C@_03CNFPPDJC@BMP?$AA@			; `string'
PUBLIC	??_C@_03MNGDDBAC@APL?$AA@			; `string'
PUBLIC	??_C@_03GGDFNBH@TGA?$AA@			; `string'
PUBLIC	??_C@_03CMMIMEAC@DDS?$AA@			; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0M@CFLADCE@Feb?518?52013?$AA@		; `string'
PUBLIC	??_C@_0N@ILLGEKHE@Render2d?4cpp?$AA@		; `string'
PUBLIC	??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CC@BBHPKCOA@Failed?5to?5setup?5rendering?5contex@ ; `string'
PUBLIC	??_C@_0CC@EKJEAKAO@Failed?5to?5read?5bitmap?4?5?5CD?5Error@ ; `string'
PUBLIC	??_C@_0BI@IJFHIHE@art?2ckptart?26x4font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@		; `string'
PUBLIC	??_C@_0BI@OFFBHLFH@art?2ckptart?28x6font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@		; `string'
PUBLIC	??_C@_0BJ@BFINBJJG@art?2ckptart?210x7font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@		; `string'
PUBLIC	??_C@_0BI@BKDBCKNM@art?2ckptart?26x4font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0BI@PHPFCJPP@art?2ckptart?28x6font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0BJ@HCJELDO@art?2ckptart?210x7font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0BK@JIONIBIC@art?2ckptart?2warn_font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0BK@IKEJNDCK@art?2ckptart?2warn_font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@		; `string'
PUBLIC	??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@ ; `string'
PUBLIC	??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@ ; `string'
PUBLIC	??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@ ; `string'
PUBLIC	??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@ ; `string'
PUBLIC	??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@ ; `string'
PUBLIC	??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@ ; `string'
PUBLIC	??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@ ; `string'
PUBLIC	??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@		; `string'
PUBLIC	??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@ ; `string'
PUBLIC	??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@ ; `string'
PUBLIC	??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@ ; `string'
PUBLIC	??_C@_0CF@FGJLFGFC@art?2ckptart?2autofont?212warn_font@ ; `string'
PUBLIC	??_C@_0CF@EEDPAEPK@art?2ckptart?2autofont?212warn_font@ ; `string'
PUBLIC	??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@	; `string'
PUBLIC	??_C@_0CD@DFJEBFLP@art?2ckptart?2autofont?216x12font?4g@ ; `string'
PUBLIC	??_C@_0O@NJIMHANM@16x12font?4gif?$AA@		; `string'
PUBLIC	??_C@_0CD@CHDAEHBH@art?2ckptart?2autofont?216x12font?4r@ ; `string'
PUBLIC	??_C@_0CF@NMOHDDDB@art?2ckptart?2autofont?216warn_font@ ; `string'
PUBLIC	??_C@_0CF@MOEDGBJJ@art?2ckptart?2autofont?216warn_font@ ; `string'
PUBLIC	??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@	; `string'
PUBLIC	??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@ ; `string'
PUBLIC	??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@ ; `string'
PUBLIC	??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@ ; `string'
PUBLIC	??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@ ; `string'
PUBLIC	??_C@_0CD@PLHKIKHG@art?2ckptart?23dfont?212warn_font?4r@ ; `string'
PUBLIC	??_C@_0CD@OJNONINO@art?2ckptart?23dfont?212warn_font?4g@ ; `string'
PUBLIC	??_C@_0CB@LCCEKLGP@art?2ckptart?23dfont?216x12font?4gif@ ; `string'
PUBLIC	??_C@_0CB@KAIAPJMH@art?2ckptart?23dfont?216x12font?4rct@ ; `string'
PUBLIC	??_C@_0CD@HBAGOPBF@art?2ckptart?23dfont?216warn_font?4r@ ; `string'
PUBLIC	??_C@_0CD@GDKCLNLN@art?2ckptart?23dfont?216warn_font?4g@ ; `string'
PUBLIC	??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4CFileIO@@6B@				; CFileIO::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFileIO@@@8				; CFileIO `RTTI Type Descriptor'
PUBLIC	??_R3CFileIO@@8					; CFileIO::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileIO@@8					; CFileIO::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFileIO@@8			; CFileIO::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CFileMemory@@6B@				; CFileMemory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFileMemory@@@8				; CFileMemory `RTTI Type Descriptor'
PUBLIC	??_R3CFileMemory@@8				; CFileMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileMemory@@8				; CFileMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFileMemory@@8			; CFileMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CImageFileMemory@@6B@			; CImageFileMemory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCImageFileMemory@@@8			; CImageFileMemory `RTTI Type Descriptor'
PUBLIC	??_R3CImageFileMemory@@8			; CImageFileMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CImageFileMemory@@8			; CImageFileMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CImageFileMemory@@8		; CImageFileMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3b000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fe66666
PUBLIC	__real@40000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@437f0000
PUBLIC	__real@43800000
PUBLIC	__real@bf800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_ceil:PROC
EXTRN	_floor:PROC
EXTRN	_sscanf:PROC
EXTRN	_sprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_strrchr:PROC
EXTRN	_strstr:PROC
EXTRN	_strnicmp:PROC
EXTRN	_exit:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_close:PROC
EXTRN	_open:PROC
EXTRN	_read:PROC
EXTRN	?closefile@CFileIO@@QAEXXZ:PROC			; CFileIO::closefile
EXTRN	??_ECFileIO@@UAEPAXI@Z:PROC			; CFileIO::`vector deleting destructor'
EXTRN	?glOpenFileMem@CFileMemory@@QAEHPBD@Z:PROC	; CFileMemory::glOpenFileMem
EXTRN	?glReadFileMem@CFileMemory@@QAEXXZ:PROC		; CFileMemory::glReadFileMem
EXTRN	?glCloseFileMem@CFileMemory@@QAEXXZ:PROC	; CFileMemory::glCloseFileMem
EXTRN	??_ECFileMemory@@UAEPAXI@Z:PROC			; CFileMemory::`vector deleting destructor'
EXTRN	??0CImageFileMemory@@QAE@XZ:PROC		; CImageFileMemory::CImageFileMemory
EXTRN	??_ECImageFileMemory@@UAEPAXI@Z:PROC		; CImageFileMemory::`vector deleting destructor'
EXTRN	?ConvertImage@@YAPAEPAUGLImageInfo@@HPAI@Z:PROC	; ConvertImage
EXTRN	?UnpackGIF@@YAHPAVCImageFileMemory@@@Z:PROC	; UnpackGIF
EXTRN	?UnpackLBM@@YAHPAVCImageFileMemory@@@Z:PROC	; UnpackLBM
EXTRN	?UnpackPCX@@YAHPAVCImageFileMemory@@@Z:PROC	; UnpackPCX
EXTRN	?ReadBMP@@YAHPAVCImageFileMemory@@@Z:PROC	; ReadBMP
EXTRN	?ReadAPL@@YAHPAVCImageFileMemory@@@Z:PROC	; ReadAPL
EXTRN	?ReadTGA@@YAHPAVCImageFileMemory@@@Z:PROC	; ReadTGA
EXTRN	?ReadDDS@@YAHPAVCImageFileMemory@@@Z:PROC	; ReadDDS
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?Setup@ContextMPR@@QAEHPAVImageBuffer@@PAVDXContext@@@Z:PROC ; ContextMPR::Setup
EXTRN	?Cleanup@ContextMPR@@QAEXXZ:PROC		; ContextMPR::Cleanup
EXTRN	?NewImageBuffer@ContextMPR@@QAEXI@Z:PROC	; ContextMPR::NewImageBuffer
EXTRN	?SetState@ContextMPR@@QAEXGK@Z:PROC		; ContextMPR::SetState
EXTRN	?StartDraw@ContextMPR@@QAEXXZ:PROC		; ContextMPR::StartDraw
EXTRN	?EndDraw@ContextMPR@@QAEXXZ:PROC		; ContextMPR::EndDraw
EXTRN	?SelectTexture1@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectTexture1
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	?SetZBuffering@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::SetZBuffering
EXTRN	?Render2DBitmap@ContextMPR@@QAEXHHHHHHHPAK_N@Z:PROC ; ContextMPR::Render2DBitmap
EXTRN	?TexColorDiffuse@ContextMPR@@QAEXXZ:PROC	; ContextMPR::TexColorDiffuse
EXTRN	?Draw2DPoint@ContextMPR@@QAEXMM@Z:PROC		; ContextMPR::Draw2DPoint
EXTRN	?Draw2DLine@ContextMPR@@QAEXMMMM@Z:PROC		; ContextMPR::Draw2DLine
EXTRN	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtx_t@@G@Z:PROC ; ContextMPR::DrawPrimitive
EXTRN	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtxTexClr_t@@G@Z:PROC ; ContextMPR::DrawPrimitive
EXTRN	?LoadImageA@Texture@@QAEHPADKH@Z:PROC		; Texture::LoadImageA
EXTRN	?CreateTexture@Texture@@QAE_NPAD@Z:PROC		; Texture::CreateTexture
EXTRN	?FreeAll@Texture@@QAEXXZ:PROC			; Texture::FreeAll
EXTRN	?Setup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Setup
EXTRN	?Cleanup@VirtualDisplay@@UAEXXZ:PROC		; VirtualDisplay::Cleanup
EXTRN	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z:PROC	; VirtualDisplay::ScreenTextWidth
EXTRN	?SetViewport@VirtualDisplay@@UAEXMMMM@Z:PROC	; VirtualDisplay::SetViewport
EXTRN	?FindBestResolution@@YAHXZ:PROC			; FindBestResolution
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Font2D@VirtualDisplay@@2UFontSet@@A:BYTE	; VirtualDisplay::Font2D
EXTRN	?Font3D@VirtualDisplay@@2UFontSet@@A:BYTE	; VirtualDisplay::Font3D
EXTRN	?pFontSet@VirtualDisplay@@2PAUFontSet@@A:DWORD	; VirtualDisplay::pFontSet
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?g_bAutoScaleFonts@@3_NA:BYTE			; g_bAutoScaleFonts
EXTRN	?g_bOldFontTexelFix@@3_NA:BYTE			; g_bOldFontTexelFix
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?buffer@?1??ReadFontMetrics@FontSet@@QAEHHPAD@Z@4PADA
_BSS	SEGMENT
?buffer@?1??ReadFontMetrics@FontSet@@QAEHHPAD@Z@4PADA DB 03e80H DUP (?) ; `FontSet::ReadFontMetrics'::`2'::buffer
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe66666
CONST	SEGMENT
__real@3fe66666 DD 03fe66666r			; 1.8
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3b000000
CONST	SEGMENT
__real@3b000000 DD 03b000000r			; 0.00195313
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CImageFileMemory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CImageFileMemory@@8 DD FLAT:??_R0?AVCImageFileMemory@@@8 ; CImageFileMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CImageFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R2CImageFileMemory@@8
rdata$r	SEGMENT
??_R2CImageFileMemory@@8 DD FLAT:??_R1A@?0A@EA@CImageFileMemory@@8 ; CImageFileMemory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R3CImageFileMemory@@8
rdata$r	SEGMENT
??_R3CImageFileMemory@@8 DD 00H				; CImageFileMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CImageFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCImageFileMemory@@@8
_DATA	SEGMENT
??_R0?AVCImageFileMemory@@@8 DD FLAT:??_7type_info@@6B@	; CImageFileMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCImageFileMemory@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CImageFileMemory@@6B@
rdata$r	SEGMENT
??_R4CImageFileMemory@@6B@ DD 00H			; CImageFileMemory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCImageFileMemory@@@8
	DD	FLAT:??_R3CImageFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFileMemory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileMemory@@8 DD FLAT:??_R0?AVCFileMemory@@@8 ; CFileMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R2CFileMemory@@8
rdata$r	SEGMENT
??_R2CFileMemory@@8 DD FLAT:??_R1A@?0A@EA@CFileMemory@@8 ; CFileMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFileMemory@@8
rdata$r	SEGMENT
??_R3CFileMemory@@8 DD 00H				; CFileMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileMemory@@@8
_DATA	SEGMENT
??_R0?AVCFileMemory@@@8 DD FLAT:??_7type_info@@6B@	; CFileMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFileMemory@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CFileMemory@@6B@
rdata$r	SEGMENT
??_R4CFileMemory@@6B@ DD 00H				; CFileMemory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFileMemory@@@8
	DD	FLAT:??_R3CFileMemory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFileIO@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileIO@@8 DD FLAT:??_R0?AVCFileIO@@@8	; CFileIO::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFileIO@@8
rdata$r	ENDS
;	COMDAT ??_R2CFileIO@@8
rdata$r	SEGMENT
??_R2CFileIO@@8 DD FLAT:??_R1A@?0A@EA@CFileIO@@8	; CFileIO::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFileIO@@8
rdata$r	SEGMENT
??_R3CFileIO@@8 DD 00H					; CFileIO::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFileIO@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileIO@@@8
_DATA	SEGMENT
??_R0?AVCFileIO@@@8 DD FLAT:??_7type_info@@6B@		; CFileIO `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFileIO@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CFileIO@@6B@
rdata$r	SEGMENT
??_R4CFileIO@@6B@ DD 00H				; CFileIO::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFileIO@@@8
	DD	FLAT:??_R3CFileIO@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@ DB '%'
	DB	'd %d %d %d %d %d %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GDKCLNLN@art?2ckptart?23dfont?216warn_font?4g@
CONST	SEGMENT
??_C@_0CD@GDKCLNLN@art?2ckptart?23dfont?216warn_font?4g@ DB 'art\ckptart\'
	DB	'3dfont\16warn_font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HBAGOPBF@art?2ckptart?23dfont?216warn_font?4r@
CONST	SEGMENT
??_C@_0CD@HBAGOPBF@art?2ckptart?23dfont?216warn_font?4r@ DB 'art\ckptart\'
	DB	'3dfont\16warn_font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KAIAPJMH@art?2ckptart?23dfont?216x12font?4rct@
CONST	SEGMENT
??_C@_0CB@KAIAPJMH@art?2ckptart?23dfont?216x12font?4rct@ DB 'art\ckptart\'
	DB	'3dfont\16x12font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LCCEKLGP@art?2ckptart?23dfont?216x12font?4gif@
CONST	SEGMENT
??_C@_0CB@LCCEKLGP@art?2ckptart?23dfont?216x12font?4gif@ DB 'art\ckptart\'
	DB	'3dfont\16x12font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OJNONINO@art?2ckptart?23dfont?212warn_font?4g@
CONST	SEGMENT
??_C@_0CD@OJNONINO@art?2ckptart?23dfont?212warn_font?4g@ DB 'art\ckptart\'
	DB	'3dfont\12warn_font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PLHKIKHG@art?2ckptart?23dfont?212warn_font?4r@
CONST	SEGMENT
??_C@_0CD@PLHKIKHG@art?2ckptart?23dfont?212warn_font?4r@ DB 'art\ckptart\'
	DB	'3dfont\12warn_font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@
CONST	SEGMENT
??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@ DB 'art\ckpta'
	DB	'rt\3dfont\12x9font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@
CONST	SEGMENT
??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@ DB 'art\ckptart'
	DB	'\3dfont\12x9font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
CONST	SEGMENT
??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@ DB 'art\ckptart\'
	DB	'3dfont\warn_font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
CONST	SEGMENT
??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@ DB 'art\ckptart\'
	DB	'3dfont\warn_font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
CONST	SEGMENT
??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@ DB 'art\ckpta'
	DB	'rt\3dfont\10x7font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
CONST	SEGMENT
??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@ DB 'art\ckptar'
	DB	't\3dfont\8x6font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
CONST	SEGMENT
??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@ DB 'art\ckptart'
	DB	'\3dfont\6x4font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
CONST	SEGMENT
??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@ DB 'art\ckpta'
	DB	'rt\3dfont\10x7font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
CONST	SEGMENT
??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@ DB 'art\ckptar'
	DB	't\3dfont\8x6font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
CONST	SEGMENT
??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@ DB 'art\ckptar'
	DB	't\3dfont\6x4font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@
CONST	SEGMENT
??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@ DB '16warn_font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MOEDGBJJ@art?2ckptart?2autofont?216warn_font@
CONST	SEGMENT
??_C@_0CF@MOEDGBJJ@art?2ckptart?2autofont?216warn_font@ DB 'art\ckptart\a'
	DB	'utofont\16warn_font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NMOHDDDB@art?2ckptart?2autofont?216warn_font@
CONST	SEGMENT
??_C@_0CF@NMOHDDDB@art?2ckptart?2autofont?216warn_font@ DB 'art\ckptart\a'
	DB	'utofont\16warn_font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CHDAEHBH@art?2ckptart?2autofont?216x12font?4r@
CONST	SEGMENT
??_C@_0CD@CHDAEHBH@art?2ckptart?2autofont?216x12font?4r@ DB 'art\ckptart\'
	DB	'autofont\16x12font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NJIMHANM@16x12font?4gif?$AA@
CONST	SEGMENT
??_C@_0O@NJIMHANM@16x12font?4gif?$AA@ DB '16x12font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DFJEBFLP@art?2ckptart?2autofont?216x12font?4g@
CONST	SEGMENT
??_C@_0CD@DFJEBFLP@art?2ckptart?2autofont?216x12font?4g@ DB 'art\ckptart\'
	DB	'autofont\16x12font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@
CONST	SEGMENT
??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@ DB '12warn_font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@EEDPAEPK@art?2ckptart?2autofont?212warn_font@
CONST	SEGMENT
??_C@_0CF@EEDPAEPK@art?2ckptart?2autofont?212warn_font@ DB 'art\ckptart\a'
	DB	'utofont\12warn_font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FGJLFGFC@art?2ckptart?2autofont?212warn_font@
CONST	SEGMENT
??_C@_0CF@FGJLFGFC@art?2ckptart?2autofont?212warn_font@ DB 'art\ckptart\a'
	DB	'utofont\12warn_font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@
CONST	SEGMENT
??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@ DB 'art\ckptart\'
	DB	'autofont\12x9font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
CONST	SEGMENT
??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@ DB 'art\ckptart\'
	DB	'autofont\10x7font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@
CONST	SEGMENT
??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@ DB 'art\ckptart\'
	DB	'autofont\8x6font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
CONST	SEGMENT
??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@ DB '12x9font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@
CONST	SEGMENT
??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@ DB 'art\ckptart\'
	DB	'autofont\12x9font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
CONST	SEGMENT
??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@ DB 'art\ckptart\'
	DB	'autofont\10x7font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@
CONST	SEGMENT
??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@ DB 'art\ckptart\'
	DB	'autofont\8x6font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@
CONST	SEGMENT
??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@ DB 'art\ckptart\'
	DB	'autofont\warn_font.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@
CONST	SEGMENT
??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@ DB 'art\ckptart\'
	DB	'autofont\warn_font.rct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
CONST	SEGMENT
??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@ DB 'art\ckptart\'
	DB	'autofont\6x4font.rct', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
CONST	SEGMENT
??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@ DB 'art\ckptart\'
	DB	'autofont\6x4font.gif', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
CONST	SEGMENT
??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@ DB 'warn_font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IKEJNDCK@art?2ckptart?2warn_font?4gif?$AA@
CONST	SEGMENT
??_C@_0BK@IKEJNDCK@art?2ckptart?2warn_font?4gif?$AA@ DB 'art\ckptart\warn'
	DB	'_font.gif', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JIONIBIC@art?2ckptart?2warn_font?4rct?$AA@
CONST	SEGMENT
??_C@_0BK@JIONIBIC@art?2ckptart?2warn_font?4rct?$AA@ DB 'art\ckptart\warn'
	DB	'_font.rct', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HCJELDO@art?2ckptart?210x7font?4rct?$AA@
CONST	SEGMENT
??_C@_0BJ@HCJELDO@art?2ckptart?210x7font?4rct?$AA@ DB 'art\ckptart\10x7fo'
	DB	'nt.rct', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PHPFCJPP@art?2ckptart?28x6font?4rct?$AA@
CONST	SEGMENT
??_C@_0BI@PHPFCJPP@art?2ckptart?28x6font?4rct?$AA@ DB 'art\ckptart\8x6fon'
	DB	't.rct', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BKDBCKNM@art?2ckptart?26x4font?4rct?$AA@
CONST	SEGMENT
??_C@_0BI@BKDBCKNM@art?2ckptart?26x4font?4rct?$AA@ DB 'art\ckptart\6x4fon'
	DB	't.rct', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
CONST	SEGMENT
??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@ DB '10x7font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BFINBJJG@art?2ckptart?210x7font?4gif?$AA@
CONST	SEGMENT
??_C@_0BJ@BFINBJJG@art?2ckptart?210x7font?4gif?$AA@ DB 'art\ckptart\10x7f'
	DB	'ont.gif', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
CONST	SEGMENT
??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@ DB '8x6font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OFFBHLFH@art?2ckptart?28x6font?4gif?$AA@
CONST	SEGMENT
??_C@_0BI@OFFBHLFH@art?2ckptart?28x6font?4gif?$AA@ DB 'art\ckptart\8x6fon'
	DB	't.gif', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
CONST	SEGMENT
??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@ DB '6x4font.gif', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IJFHIHE@art?2ckptart?26x4font?4gif?$AA@
CONST	SEGMENT
??_C@_0BI@IJFHIHE@art?2ckptart?26x4font?4gif?$AA@ DB 'art\ckptart\6x4font'
	DB	'.gif', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EKJEAKAO@Failed?5to?5read?5bitmap?4?5?5CD?5Error@
CONST	SEGMENT
??_C@_0CC@EKJEAKAO@Failed?5to?5read?5bitmap?4?5?5CD?5Error@ DB 'Failed to'
	DB	' read bitmap.  CD Error?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BBHPKCOA@Failed?5to?5setup?5rendering?5contex@
CONST	SEGMENT
??_C@_0CC@BBHPKCOA@Failed?5to?5setup?5rendering?5contex@ DB 'Failed to se'
	DB	'tup rendering context', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@ DB 'Error:  %'
	DB	'0d  %s  %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ILLGEKHE@Render2d?4cpp?$AA@
CONST	SEGMENT
??_C@_0N@ILLGEKHE@Render2d?4cpp?$AA@ DB 'Render2d.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
CONST	SEGMENT
??_C@_0M@CFLADCE@Feb?518?52013?$AA@ DB 'Feb 18 2013', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_03CMMIMEAC@DDS?$AA@
CONST	SEGMENT
??_C@_03CMMIMEAC@DDS?$AA@ DB 'DDS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGDFNBH@TGA?$AA@
CONST	SEGMENT
??_C@_03GGDFNBH@TGA?$AA@ DB 'TGA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNGDDBAC@APL?$AA@
CONST	SEGMENT
??_C@_03MNGDDBAC@APL?$AA@ DB 'APL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNFPPDJC@BMP?$AA@
CONST	SEGMENT
??_C@_03CNFPPDJC@BMP?$AA@ DB 'BMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BFAIMLIE@PCX?$AA@
CONST	SEGMENT
??_C@_03BFAIMLIE@PCX?$AA@ DB 'PCX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJLAKPIA@LBM?$AA@
CONST	SEGMENT
??_C@_03DJLAKPIA@LBM?$AA@ DB 'LBM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BBABOKL@GIF?$AA@
CONST	SEGMENT
??_C@_03BBABOKL@GIF?$AA@ DB 'GIF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CImageFileMemory@@6B@
CONST	SEGMENT
??_7CImageFileMemory@@6B@ DD FLAT:??_R4CImageFileMemory@@6B@ ; CImageFileMemory::`vftable'
	DD	FLAT:??_ECImageFileMemory@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CFileMemory@@6B@
CONST	SEGMENT
??_7CFileMemory@@6B@ DD FLAT:??_R4CFileMemory@@6B@	; CFileMemory::`vftable'
	DD	FLAT:??_ECFileMemory@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CFileIO@@6B@
CONST	SEGMENT
??_7CFileIO@@6B@ DD FLAT:??_R4CFileIO@@6B@		; CFileIO::`vftable'
	DD	FLAT:??_ECFileIO@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z$0
__ehfuncinfo$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_pFontSet_$ = 8						; size = 4
?ChangeFontSet@Render2D@@SAXPAUFontSet@@@Z PROC		; Render2D::ChangeFontSet

; 935  : {

	push	ebp
	mov	ebp, esp

; 936  : 	pFontSet = pFontSet_;

	mov	eax, DWORD PTR _pFontSet_$[ebp]
	mov	DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A, eax ; VirtualDisplay::pFontSet

; 937  : 	//paFontTexture = static_cast<Texture(*)[NUM_FONT_RESOLUTIONS]>(aFontTexture_);
; 938  : 	//paFontData = static_cast<FontDataType(*)[NUM_FONT_RESOLUTIONS][256]>(aFontData
; 939  : }

	pop	ebp
	ret	0
?ChangeFontSet@Render2D@@SAXPAUFontSet@@@Z ENDP		; Render2D::ChangeFontSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
?Release3DFontSet@Render2D@@SAXXZ PROC			; Render2D::Release3DFontSet

; 923  : {

	push	ebp
	mov	ebp, esp

; 924  : #ifdef USE_TEXTURE_FONT
; 925  : 	Font3D.fontTexture[0].FreeAll();

	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 926  : 	Font3D.fontTexture[1].FreeAll();

	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 927  : 	Font3D.fontTexture[2].FreeAll();

	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 928  : 	if (Font3D.totalFont > 3)

	cmp	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3
	jle	SHORT $LN2@Release3DF

; 929  : 	    Font3D.fontTexture[3].FreeAll();

	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll
$LN2@Release3DF:

; 930  : #endif
; 931  : }

	pop	ebp
	ret	0
?Release3DFontSet@Render2D@@SAXXZ ENDP			; Render2D::Release3DFontSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
?Release2DFontSet@Render2D@@SAXXZ PROC			; Render2D::Release2DFontSet

; 721  : {

	push	ebp
	mov	ebp, esp

; 722  : #ifdef USE_TEXTURE_FONT
; 723  : 	Font2D.fontTexture[0].FreeAll();

	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 724  : 	Font2D.fontTexture[1].FreeAll();

	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 725  : 	Font2D.fontTexture[2].FreeAll();

	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 726  : 	if (Font2D.totalFont > 3)

	cmp	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3
	jle	SHORT $LN2@Release2DF

; 727  : 	    Font2D.fontTexture[3].FreeAll();

	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll
$LN2@Release2DF:

; 728  : #endif
; 729  : }

	pop	ebp
	ret	0
?Release2DFontSet@Render2D@@SAXXZ ENDP			; Render2D::Release2DFontSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
tv169 = -8						; size = 4
tv359 = -4						; size = 4
?Load3DFontSet@Render2D@@SAXXZ PROC			; Render2D::Load3DFontSet

; 733  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 734  : #ifdef USE_TEXTURE_FONT
; 735  : 	if (!g_bAutoScaleFonts)

	movzx	eax, BYTE PTR ?g_bAutoScaleFonts@@3_NA	; g_bAutoScaleFonts
	test	eax, eax
	jne	$LN53@Load3DFont

; 736  : 	{
; 737  : 		if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN52@Load3DFont

; 738  : 			Font3D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN52@Load3DFont:

; 739  : 		if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN51@Load3DFont

; 740  : 			Font3D.fontTexture[1].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN51@Load3DFont:

; 741  : 		if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN50@Load3DFont

; 742  : 			Font3D.fontTexture[2].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN50@Load3DFont:

; 743  : 
; 744  : 		Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 745  : 		Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\8x6font.rct");

	push	OFFSET ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 746  : 		Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 747  : 		Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 748  : 		if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\warn_font.rct") &&
; 749  : 			Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) 

	push	OFFSET ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN49@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN49@Load3DFont

; 750  : 		{
; 751  : 				Font3D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 752  : 				Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN49@Load3DFont:

; 753  : 		}
; 754  : 	}
; 755  : 	else

	jmp	$LN54@Load3DFont
$LN53@Load3DFont:

; 756  : 	{
; 757  : 		// RV - Biker - Check for widescreen resolutions
; 758  : 		if (DisplayOptions.DispWidth == 848 || DisplayOptions.DispWidth == 1440 || DisplayOptions.DispWidth == 1680 || DisplayOptions.DispWidth == 1920) {

	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	ecx, 848				; 00000350H
	je	SHORT $LN46@Load3DFont
	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	edx, 1440				; 000005a0H
	je	SHORT $LN46@Load3DFont
	movzx	eax, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	eax, 1680				; 00000690H
	je	SHORT $LN46@Load3DFont
	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	ecx, 1920				; 00000780H
	jne	$LN47@Load3DFont
$LN46@Load3DFont:

; 759  : 			switch (DisplayOptions.DispWidth) {

	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	mov	DWORD PTR tv169[ebp], edx
	cmp	DWORD PTR tv169[ebp], 848		; 00000350H
	je	SHORT $LN43@Load3DFont
	cmp	DWORD PTR tv169[ebp], 1440		; 000005a0H
	je	$LN38@Load3DFont
	jmp	$LN33@Load3DFont
$LN43@Load3DFont:

; 760  : 				case 848:
; 761  : 					if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN42@Load3DFont

; 762  : 						Font3D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN42@Load3DFont:

; 763  : 					if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN41@Load3DFont

; 764  : 						Font3D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN41@Load3DFont:

; 765  : 					if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN40@Load3DFont

; 766  : 						Font3D.fontTexture[2].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN40@Load3DFont:

; 767  : 
; 768  : 					Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 769  : 					Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 770  : 					Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 771  : 					Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 772  : 					if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\warn_font.rct") &&
; 773  : 						Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN39@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN39@Load3DFont

; 774  : 						Font3D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 775  : 						Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN39@Load3DFont:

; 776  : 					}
; 777  : 					break;

	jmp	$LN44@Load3DFont
$LN38@Load3DFont:

; 778  : 
; 779  : 				case 1440:
; 780  : 					if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN37@Load3DFont

; 781  : 						Font3D.fontTexture[0].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN37@Load3DFont:

; 782  : 					if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN36@Load3DFont

; 783  : 						Font3D.fontTexture[1].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN36@Load3DFont:

; 784  : 					if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN35@Load3DFont

; 785  : 						Font3D.fontTexture[2].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN35@Load3DFont:

; 786  : 
; 787  : 					Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\8x6font.rct");

	push	OFFSET ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 788  : 					Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 789  : 					Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\12x9font.rct");

	push	OFFSET ??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 790  : 					Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 791  : 					if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\12warn_font.rct") &&
; 792  : 						Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\12warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@PLHKIKHG@art?2ckptart?23dfont?212warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN34@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@OJNONINO@art?2ckptart?23dfont?212warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN34@Load3DFont

; 793  : 						Font3D.fontTexture[3].CreateTexture("12warn_font.gif");

	push	OFFSET ??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 794  : 						Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN34@Load3DFont:

; 795  : 					}
; 796  : 					break;

	jmp	$LN44@Load3DFont
$LN33@Load3DFont:

; 797  : 
; 798  : 				default:
; 799  : 					if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN32@Load3DFont

; 800  : 						Font3D.fontTexture[0].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN32@Load3DFont:

; 801  : 					if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN31@Load3DFont

; 802  : 						Font3D.fontTexture[1].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN31@Load3DFont:

; 803  : 					if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\16x12font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LCCEKLGP@art?2ckptart?23dfont?216x12font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN30@Load3DFont

; 804  : 						Font3D.fontTexture[2].CreateTexture("16x12font.gif");

	push	OFFSET ??_C@_0O@NJIMHANM@16x12font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN30@Load3DFont:

; 805  : 
; 806  : 					Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 807  : 					Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\12x9font.rct");

	push	OFFSET ??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 808  : 					Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\16x12font.rct");

	push	OFFSET ??_C@_0CB@KAIAPJMH@art?2ckptart?23dfont?216x12font?4rct@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 809  : 					Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 810  : 					if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\16warn_font.rct") &&
; 811  : 						Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\16warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@HBAGOPBF@art?2ckptart?23dfont?216warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN44@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@GDKCLNLN@art?2ckptart?23dfont?216warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN44@Load3DFont

; 812  : 						Font3D.fontTexture[3].CreateTexture("16warn_font.gif");

	push	OFFSET ??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 813  : 						Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN44@Load3DFont:

; 814  : 					}
; 815  : 					break;
; 816  : 			}
; 817  : 		}
; 818  : 		else {

	jmp	$LN54@Load3DFont
$LN47@Load3DFont:

; 819  : 			switch (FindBestResolution())		

	call	?FindBestResolution@@YAHXZ		; FindBestResolution
	mov	DWORD PTR tv359[ebp], eax
	cmp	DWORD PTR tv359[ebp], 1024		; 00000400H
	jg	SHORT $LN56@Load3DFont
	cmp	DWORD PTR tv359[ebp], 1024		; 00000400H
	je	$LN15@Load3DFont
	cmp	DWORD PTR tv359[ebp], 640		; 00000280H
	je	SHORT $LN25@Load3DFont
	cmp	DWORD PTR tv359[ebp], 800		; 00000320H
	je	$LN20@Load3DFont
	jmp	$LN54@Load3DFont
$LN56@Load3DFont:
	cmp	DWORD PTR tv359[ebp], 1280		; 00000500H
	je	$LN10@Load3DFont
	cmp	DWORD PTR tv359[ebp], 1600		; 00000640H
	je	$LN5@Load3DFont
	jmp	$LN54@Load3DFont
$LN25@Load3DFont:

; 820  : 			{
; 821  : 			case 640:
; 822  : 				if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN24@Load3DFont

; 823  : 					Font3D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN24@Load3DFont:

; 824  : 				if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN23@Load3DFont

; 825  : 					Font3D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN23@Load3DFont:

; 826  : 				if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN22@Load3DFont

; 827  : 					Font3D.fontTexture[2].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN22@Load3DFont:

; 828  : 
; 829  : 				Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 830  : 				Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 831  : 				Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 832  : 				Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 833  : 				if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\warn_font.rct") &&
; 834  : 					Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN21@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN21@Load3DFont

; 835  : 					Font3D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 836  : 					Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN21@Load3DFont:

; 837  : 				}
; 838  : 				break;

	jmp	$LN54@Load3DFont
$LN20@Load3DFont:

; 839  : 				
; 840  : 			case 800:
; 841  : 				if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN19@Load3DFont

; 842  : 					Font3D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN19@Load3DFont:

; 843  : 				if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN18@Load3DFont

; 844  : 					Font3D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN18@Load3DFont:

; 845  : 				if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN17@Load3DFont

; 846  : 					Font3D.fontTexture[2].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN17@Load3DFont:

; 847  : 
; 848  : 				Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 849  : 				Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 850  : 				Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\8x6font.rct");

	push	OFFSET ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 851  : 				Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 852  : 				if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\warn_font.rct") &&
; 853  : 					Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN16@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN16@Load3DFont

; 854  : 					Font3D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 855  : 					Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN16@Load3DFont:

; 856  : 				}
; 857  : 				break;

	jmp	$LN54@Load3DFont
$LN15@Load3DFont:

; 858  : 			
; 859  : 			case 1024:		
; 860  : 				if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@BNCHJKHK@art?2ckptart?23dfont?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN14@Load3DFont

; 861  : 					Font3D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN14@Load3DFont:

; 862  : 				if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN13@Load3DFont

; 863  : 					Font3D.fontTexture[1].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN13@Load3DFont:

; 864  : 				if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN12@Load3DFont

; 865  : 					Font3D.fontTexture[2].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN12@Load3DFont:

; 866  : 
; 867  : 				Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\6x4font.rct");

	push	OFFSET ??_C@_0BP@PIDMINC@art?2ckptart?23dfont?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 868  : 				Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\8x6font.rct");

	push	OFFSET ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 869  : 				Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 870  : 				Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 871  : 				if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\warn_font.rct") &&
; 872  : 					Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CB@EIGKDKOK@art?2ckptart?23dfont?2warn_font?4rct@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN11@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FKMOGIEC@art?2ckptart?23dfont?2warn_font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN11@Load3DFont

; 873  : 					Font3D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 874  : 					Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN11@Load3DFont:

; 875  : 				}
; 876  : 				break;	

	jmp	$LN54@Load3DFont
$LN10@Load3DFont:

; 877  : 			
; 878  : 			case 1280:
; 879  : 				if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BP@PAODJJFJ@art?2ckptart?23dfont?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN9@Load3DFont

; 880  : 					Font3D.fontTexture[0].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN9@Load3DFont:

; 881  : 				if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN8@Load3DFont

; 882  : 					Font3D.fontTexture[1].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN8@Load3DFont:

; 883  : 				if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN7@Load3DFont

; 884  : 					Font3D.fontTexture[2].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN7@Load3DFont:

; 885  : 
; 886  : 				Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\8x6font.rct");

	push	OFFSET ??_C@_0BP@OCEHMLPB@art?2ckptart?23dfont?28x6font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 887  : 				Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 888  : 				Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\12x9font.rct");

	push	OFFSET ??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 889  : 				Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 890  : 				if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\12warn_font.rct") &&
; 891  : 					Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\12warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@PLHKIKHG@art?2ckptart?23dfont?212warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN6@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@OJNONINO@art?2ckptart?23dfont?212warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN6@Load3DFont

; 892  : 					Font3D.fontTexture[3].CreateTexture("12warn_font.gif");

	push	OFFSET ??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 893  : 					Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN6@Load3DFont:

; 894  : 				}
; 895  : 				break;

	jmp	$LN54@Load3DFont
$LN5@Load3DFont:

; 896  : 
; 897  : 			case 1600:		
; 898  : 				if (Font3D.fontTexture[0].LoadImage( "art\\ckptart\\3dfont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@PCCAIGHD@art?2ckptart?23dfont?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN4@Load3DFont

; 899  : 					Font3D.fontTexture[0].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN4@Load3DFont:

; 900  : 				if (Font3D.fontTexture[1].LoadImage( "art\\ckptart\\3dfont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CA@NCCIFP@art?2ckptart?23dfont?212x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN3@Load3DFont

; 901  : 					Font3D.fontTexture[1].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN3@Load3DFont:

; 902  : 				if (Font3D.fontTexture[2].LoadImage( "art\\ckptart\\3dfont\\16x12font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LCCEKLGP@art?2ckptart?23dfont?216x12font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN2@Load3DFont

; 903  : 					Font3D.fontTexture[2].CreateTexture("16x12font.gif");

	push	OFFSET ??_C@_0O@NJIMHANM@16x12font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN2@Load3DFont:

; 904  : 
; 905  : 				Font3D.ReadFontMetrics(0, "art\\ckptart\\3dfont\\10x7font.rct");

	push	OFFSET ??_C@_0CA@OAIENENL@art?2ckptart?23dfont?210x7font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 906  : 				Font3D.ReadFontMetrics(1, "art\\ckptart\\3dfont\\12x9font.rct");

	push	OFFSET ??_C@_0CA@BCHGHKPH@art?2ckptart?23dfont?212x9font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 907  : 				Font3D.ReadFontMetrics(2, "art\\ckptart\\3dfont\\16x12font.rct");

	push	OFFSET ??_C@_0CB@KAIAPJMH@art?2ckptart?23dfont?216x12font?4rct@
	push	2
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 908  : 				Font3D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 909  : 				if (Font3D.ReadFontMetrics(3, "art\\ckptart\\3dfont\\16warn_font.rct") &&
; 910  : 					Font3D.fontTexture[3].LoadImage ("art\\ckptart\\3dfont\\16warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@HBAGOPBF@art?2ckptart?23dfont?216warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN54@Load3DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@GDKCLNLN@art?2ckptart?23dfont?216warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN54@Load3DFont

; 911  : 					Font3D.fontTexture[3].CreateTexture("16warn_font.gif");

	push	OFFSET ??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font3D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font3D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 912  : 					Font3D.totalFont = 4;

	mov	DWORD PTR ?Font3D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN54@Load3DFont:

; 913  : 				}
; 914  : 				break;		
; 915  : 			}
; 916  : 		}
; 917  : 	}
; 918  : #endif
; 919  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Load3DFontSet@Render2D@@SAXXZ ENDP			; Render2D::Load3DFontSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
tv169 = -8						; size = 4
tv391 = -4						; size = 4
?Load2DFontSet@Render2D@@SAXXZ PROC			; Render2D::Load2DFontSet

; 522  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 523  : #ifdef USE_TEXTURE_FONT
; 524  : 
; 525  : 	//Wombat778 12-12-2003 Added to allow fonts to be chosen based on the current resolution (code that runs under !g_bAutoScaleFonts is the original)
; 526  : 	if (!g_bAutoScaleFonts)

	movzx	eax, BYTE PTR ?g_bAutoScaleFonts@@3_NA	; g_bAutoScaleFonts
	test	eax, eax
	jne	$LN53@Load2DFont

; 527  : 	{
; 528  : 		if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BI@IJFHIHE@art?2ckptart?26x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN52@Load2DFont

; 529  : 			Font2D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN52@Load2DFont:

; 530  : 		if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BI@OFFBHLFH@art?2ckptart?28x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN51@Load2DFont

; 531  : 			Font2D.fontTexture[1].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN51@Load2DFont:

; 532  : 		if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BJ@BFINBJJG@art?2ckptart?210x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN50@Load2DFont

; 533  : 			Font2D.fontTexture[2].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN50@Load2DFont:

; 534  : 
; 535  : 		Font2D.ReadFontMetrics(0, "art\\ckptart\\6x4font.rct");

	push	OFFSET ??_C@_0BI@BKDBCKNM@art?2ckptart?26x4font?4rct?$AA@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 536  : 		Font2D.ReadFontMetrics(1, "art\\ckptart\\8x6font.rct");

	push	OFFSET ??_C@_0BI@PHPFCJPP@art?2ckptart?28x6font?4rct?$AA@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 537  : 		Font2D.ReadFontMetrics(2, "art\\ckptart\\10x7font.rct");

	push	OFFSET ??_C@_0BJ@HCJELDO@art?2ckptart?210x7font?4rct?$AA@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 538  : 		Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 539  : 		if (Font2D.ReadFontMetrics(3, "art\\ckptart\\warn_font.rct") &&
; 540  : 			Font2D.fontTexture[3].LoadImage ("art\\ckptart\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0BK@JIONIBIC@art?2ckptart?2warn_font?4rct?$AA@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN49@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BK@IKEJNDCK@art?2ckptart?2warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN49@Load2DFont

; 541  : 			Font2D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 542  : 			Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN49@Load2DFont:

; 543  : 		}
; 544  : 	}
; 545  : 	else

	jmp	$LN54@Load2DFont
$LN53@Load2DFont:

; 546  : 	{
; 547  : 		//Wombat778 12-15-2003 Moved the new fonts to the autofont directory...
; 548  : 		//This should ensure that old setups arent broken if scaling is disabled
; 549  : 		
; 550  : 		// RV - Biker - Check for widescreen resolutions
; 551  : 		if (DisplayOptions.DispWidth == 848 || DisplayOptions.DispWidth == 1440 || DisplayOptions.DispWidth == 1680 || DisplayOptions.DispWidth == 1920) {

	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	ecx, 848				; 00000350H
	je	SHORT $LN46@Load2DFont
	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	edx, 1440				; 000005a0H
	je	SHORT $LN46@Load2DFont
	movzx	eax, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	eax, 1680				; 00000690H
	je	SHORT $LN46@Load2DFont
	movzx	ecx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	cmp	ecx, 1920				; 00000780H
	jne	$LN47@Load2DFont
$LN46@Load2DFont:

; 552  : 			switch (DisplayOptions.DispWidth) {

	movzx	edx, WORD PTR ?DisplayOptions@@3VDisplayOptionsClass@@A
	mov	DWORD PTR tv169[ebp], edx
	cmp	DWORD PTR tv169[ebp], 848		; 00000350H
	je	SHORT $LN43@Load2DFont
	cmp	DWORD PTR tv169[ebp], 1440		; 000005a0H
	je	$LN38@Load2DFont
	jmp	$LN33@Load2DFont
$LN43@Load2DFont:

; 553  : 				case 848:
; 554  : 					if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN42@Load2DFont

; 555  : 						Font2D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN42@Load2DFont:

; 556  : 					if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN41@Load2DFont

; 557  : 						Font2D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN41@Load2DFont:

; 558  : 					if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN40@Load2DFont

; 559  : 						Font2D.fontTexture[2].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN40@Load2DFont:

; 560  : 
; 561  : 					Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 562  : 					Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 563  : 					Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 564  : 					Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 565  : 					if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\warn_font.rct") &&
; 566  : 						Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN39@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN39@Load2DFont

; 567  : 						Font2D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 568  : 						Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN39@Load2DFont:

; 569  : 					}
; 570  : 					break;

	jmp	$LN44@Load2DFont
$LN38@Load2DFont:

; 571  : 
; 572  : 				case 1440:
; 573  : 					if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN37@Load2DFont

; 574  : 						Font2D.fontTexture[0].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN37@Load2DFont:

; 575  : 					if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN36@Load2DFont

; 576  : 						Font2D.fontTexture[1].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN36@Load2DFont:

; 577  : 					if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN35@Load2DFont

; 578  : 						Font2D.fontTexture[2].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN35@Load2DFont:

; 579  : 
; 580  : 					Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\8x6font.rct");

	push	OFFSET ??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 581  : 					Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\10x7font.rct");

	push	OFFSET ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 582  : 					Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\12x9font.rct");

	push	OFFSET ??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 583  : 					Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 584  : 					if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\12warn_font.rct") &&
; 585  : 						Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\12warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CF@FGJLFGFC@art?2ckptart?2autofont?212warn_font@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN34@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CF@EEDPAEPK@art?2ckptart?2autofont?212warn_font@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN34@Load2DFont

; 586  : 						Font2D.fontTexture[3].CreateTexture("12warn_font.gif");

	push	OFFSET ??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 587  : 						Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN34@Load2DFont:

; 588  : 					}
; 589  : 					break;

	jmp	$LN44@Load2DFont
$LN33@Load2DFont:

; 590  : 
; 591  : 				default:
; 592  : 					if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN32@Load2DFont

; 593  : 						Font2D.fontTexture[0].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN32@Load2DFont:

; 594  : 					if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN31@Load2DFont

; 595  : 						Font2D.fontTexture[1].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN31@Load2DFont:

; 596  : 					if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\16x12font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@DFJEBFLP@art?2ckptart?2autofont?216x12font?4g@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN30@Load2DFont

; 597  : 						Font2D.fontTexture[2].CreateTexture("16x12font.gif");

	push	OFFSET ??_C@_0O@NJIMHANM@16x12font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN30@Load2DFont:

; 598  : 
; 599  : 					Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\10x7font.rct");

	push	OFFSET ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 600  : 					Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\12x9font.rct");

	push	OFFSET ??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 601  : 					Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\16x12font.rct");

	push	OFFSET ??_C@_0CD@CHDAEHBH@art?2ckptart?2autofont?216x12font?4r@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 602  : 					Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 603  : 					if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\16warn_font.rct") &&
; 604  : 						Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\16warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CF@NMOHDDDB@art?2ckptart?2autofont?216warn_font@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN44@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CF@MOEDGBJJ@art?2ckptart?2autofont?216warn_font@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN44@Load2DFont

; 605  : 						Font2D.fontTexture[3].CreateTexture("16warn_font.gif");

	push	OFFSET ??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 606  : 						Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN44@Load2DFont:

; 607  : 					}
; 608  : 					break;
; 609  : 			}
; 610  : 		}
; 611  : 
; 612  : 		else {

	jmp	$LN54@Load2DFont
$LN47@Load2DFont:

; 613  : 			//Wombat778 4-04-04 Reorganized and added support for 640 and 800.  Because there are no fonts lower than 640, just fill with duplicates of 640.
; 614  : 			switch (FindBestResolution())		

	call	?FindBestResolution@@YAHXZ		; FindBestResolution
	mov	DWORD PTR tv391[ebp], eax
	cmp	DWORD PTR tv391[ebp], 1024		; 00000400H
	jg	SHORT $LN56@Load2DFont
	cmp	DWORD PTR tv391[ebp], 1024		; 00000400H
	je	$LN15@Load2DFont
	cmp	DWORD PTR tv391[ebp], 640		; 00000280H
	je	SHORT $LN25@Load2DFont
	cmp	DWORD PTR tv391[ebp], 800		; 00000320H
	je	$LN20@Load2DFont
	jmp	$LN54@Load2DFont
$LN56@Load2DFont:
	cmp	DWORD PTR tv391[ebp], 1280		; 00000500H
	je	$LN10@Load2DFont
	cmp	DWORD PTR tv391[ebp], 1600		; 00000640H
	je	$LN5@Load2DFont
	jmp	$LN54@Load2DFont
$LN25@Load2DFont:

; 615  : 			{
; 616  : 			case 640:
; 617  : 				if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN24@Load2DFont

; 618  : 					Font2D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN24@Load2DFont:

; 619  : 				if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN23@Load2DFont

; 620  : 					Font2D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN23@Load2DFont:

; 621  : 				if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN22@Load2DFont

; 622  : 					Font2D.fontTexture[2].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN22@Load2DFont:

; 623  : 
; 624  : 				Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 625  : 				Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 626  : 				Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 627  : 				Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 628  : 				if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\warn_font.rct") &&
; 629  : 					Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN21@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN21@Load2DFont

; 630  : 					Font2D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 631  : 					Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN21@Load2DFont:

; 632  : 				}
; 633  : 				break;

	jmp	$LN54@Load2DFont
$LN20@Load2DFont:

; 634  : 				
; 635  : 			case 800:
; 636  : 				if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN19@Load2DFont

; 637  : 					Font2D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN19@Load2DFont:

; 638  : 				if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN18@Load2DFont

; 639  : 					Font2D.fontTexture[1].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN18@Load2DFont:

; 640  : 				if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN17@Load2DFont

; 641  : 					Font2D.fontTexture[2].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN17@Load2DFont:

; 642  : 
; 643  : 				Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 644  : 				Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 645  : 				Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\8x6font.rct");

	push	OFFSET ??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 646  : 				Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 647  : 				if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\warn_font.rct") &&
; 648  : 					Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN16@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN16@Load2DFont

; 649  : 					Font2D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 650  : 					Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN16@Load2DFont:

; 651  : 				}
; 652  : 				break;

	jmp	$LN54@Load2DFont
$LN15@Load2DFont:

; 653  : 			
; 654  : 			case 1024:
; 655  : 				if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\6x4font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@LNIAAEEN@art?2ckptart?2autofont?26x4font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN14@Load2DFont

; 656  : 					Font2D.fontTexture[0].CreateTexture("6x4font.gif");

	push	OFFSET ??_C@_0M@JLOOGLIH@6x4font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN14@Load2DFont:

; 657  : 				if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN13@Load2DFont

; 658  : 					Font2D.fontTexture[1].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN13@Load2DFont:

; 659  : 				if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN12@Load2DFont

; 660  : 					Font2D.fontTexture[2].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN12@Load2DFont:

; 661  : 
; 662  : 				Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\6x4font.rct");

	push	OFFSET ??_C@_0CB@KPCEFGOF@art?2ckptart?2autofont?26x4font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 663  : 				Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\8x6font.rct");

	push	OFFSET ??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 664  : 				Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\10x7font.rct");

	push	OFFSET ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 665  : 				Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 666  : 				if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\warn_font.rct") &&
; 667  : 					Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CD@MPNKIEDK@art?2ckptart?2autofont?2warn_font?4r@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN11@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@NNHONGJC@art?2ckptart?2autofont?2warn_font?4g@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN11@Load2DFont

; 668  : 					Font2D.fontTexture[3].CreateTexture("warn_font.gif");

	push	OFFSET ??_C@_0O@DBGGLDPB@warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 669  : 					Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN11@Load2DFont:

; 670  : 				}
; 671  : 				break;	

	jmp	$LN54@Load2DFont
$LN10@Load2DFont:

; 672  : 			
; 673  : 			case 1280:
; 674  : 				if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\8x6font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CB@FAEEAHGO@art?2ckptart?2autofont?28x6font?4gif@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN9@Load2DFont

; 675  : 					Font2D.fontTexture[0].CreateTexture("8x6font.gif");

	push	OFFSET ??_C@_0M@HGCKGIKE@8x6font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN9@Load2DFont:

; 676  : 				if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN8@Load2DFont

; 677  : 					Font2D.fontTexture[1].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN8@Load2DFont:

; 678  : 				if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN7@Load2DFont

; 679  : 					Font2D.fontTexture[2].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN7@Load2DFont:

; 680  : 
; 681  : 				Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\8x6font.rct");

	push	OFFSET ??_C@_0CB@ECOAFFMG@art?2ckptart?2autofont?28x6font?4rct@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 682  : 				Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\10x7font.rct");

	push	OFFSET ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 683  : 				Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\12x9font.rct");

	push	OFFSET ??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 684  : 				Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 685  : 				if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\12warn_font.rct") &&
; 686  : 					Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\12warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CF@FGJLFGFC@art?2ckptart?2autofont?212warn_font@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN6@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CF@EEDPAEPK@art?2ckptart?2autofont?212warn_font@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN6@Load2DFont

; 687  : 					Font2D.fontTexture[3].CreateTexture("12warn_font.gif");

	push	OFFSET ??_C@_0BA@DHDHEFFB@12warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 688  : 					Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN6@Load2DFont:

; 689  : 				}
; 690  : 				break;

	jmp	$LN54@Load2DFont
$LN5@Load2DFont:

; 691  : 
; 692  : 			case 1600:		
; 693  : 				if (Font2D.fontTexture[0].LoadImage( "art\\ckptart\\autofont\\10x7font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@EKDNIEOC@art?2ckptart?2autofont?210x7font?4gi@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN4@Load2DFont

; 694  : 					Font2D.fontTexture[0].CreateTexture("10x7font.gif");

	push	OFFSET ??_C@_0N@DBKKMBCD@10x7font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN4@Load2DFont:

; 695  : 				if (Font2D.fontTexture[1].LoadImage( "art\\ckptart\\autofont\\12x9font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CC@LIMPCKMO@art?2ckptart?2autofont?212x9font?4gi@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN3@Load2DFont

; 696  : 					Font2D.fontTexture[1].CreateTexture("12x9font.gif");

	push	OFFSET ??_C@_0N@MDFIGPAP@12x9font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 0
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN3@Load2DFont:

; 697  : 				if (Font2D.fontTexture[2].LoadImage( "art\\ckptart\\autofont\\16x12font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE ))

	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CD@DFJEBFLP@art?2ckptart?2autofont?216x12font?4g@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN2@Load2DFont

; 698  : 					Font2D.fontTexture[2].CreateTexture("16x12font.gif");

	push	OFFSET ??_C@_0O@NJIMHANM@16x12font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	shl	ecx, 1
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture
$LN2@Load2DFont:

; 699  : 
; 700  : 				Font2D.ReadFontMetrics(0, "art\\ckptart\\autofont\\10x7font.rct");

	push	OFFSET ??_C@_0CC@FIJJNGEK@art?2ckptart?2autofont?210x7font?4rc@
	push	0
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 701  : 				Font2D.ReadFontMetrics(1, "art\\ckptart\\autofont\\12x9font.rct");

	push	OFFSET ??_C@_0CC@KKGLHIGG@art?2ckptart?2autofont?212x9font?4rc@
	push	1
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 702  : 				Font2D.ReadFontMetrics(2, "art\\ckptart\\autofont\\16x12font.rct");

	push	OFFSET ??_C@_0CD@CHDAEHBH@art?2ckptart?2autofont?216x12font?4r@
	push	2
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics

; 703  : 				Font2D.totalFont = 3; // JPO new font.

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 3

; 704  : 				if (Font2D.ReadFontMetrics(3, "art\\ckptart\\autofont\\16warn_font.rct") &&
; 705  : 					Font2D.fontTexture[3].LoadImage ("art\\ckptart\\autofont\\16warn_font.gif", MPR_TI_CHROMAKEY | MPR_TI_PALETTE, FALSE )) {

	push	OFFSET ??_C@_0CF@NMOHDDDB@art?2ckptart?2autofont?216warn_font@
	push	3
	mov	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?ReadFontMetrics@FontSet@@QAEHHPAD@Z	; FontSet::ReadFontMetrics
	test	eax, eax
	je	SHORT $LN54@Load2DFont
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_0CF@MOEDGBJJ@art?2ckptart?2autofont?216warn_font@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?LoadImageA@Texture@@QAEHPADKH@Z	; Texture::LoadImageA
	test	eax, eax
	je	SHORT $LN54@Load2DFont

; 706  : 					Font2D.fontTexture[3].CreateTexture("16warn_font.gif");

	push	OFFSET ??_C@_0BA@LNELCADC@16warn_font?4gif?$AA@
	mov	ecx, 24					; 00000018H
	imul	ecx, 3
	add	ecx, OFFSET ?Font2D@VirtualDisplay@@2UFontSet@@A ; VirtualDisplay::Font2D
	call	?CreateTexture@Texture@@QAE_NPAD@Z	; Texture::CreateTexture

; 707  : 					Font2D.totalFont = 4;

	mov	DWORD PTR ?Font2D@VirtualDisplay@@2UFontSet@@A+24676, 4
$LN54@Load2DFont:

; 708  : 				}
; 709  : 				break;		
; 710  : 			}
; 711  : 		}
; 712  : 	}
; 713  : 
; 714  : //WOmbat778 12-12-2003 end of changed code
; 715  : 
; 716  : #endif
; 717  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Load2DFontSet@Render2D@@SAXXZ ENDP			; Render2D::Load2DFontSet
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
tv1608 = -41104						; size = 8
_tempcolor$1 = -41096					; size = 4
tv1597 = -41092						; size = 4
tv1590 = -41088						; size = 4
tv1462 = -41084						; size = 4
_y0$2 = -41080						; size = 4
_x0$3 = -41076						; size = 4
tv1605 = -41072						; size = 4
tv1312 = -41068						; size = 4
_y0$4 = -41064						; size = 4
_bToggle$ = -41060					; size = 4
_x0$5 = -41056						; size = 4
_n$ = -41052						; size = 4
_g$ = -41048						; size = 4
_y1$6 = -41044						; size = 4
_x2$7 = -41040						; size = 4
_r$ = -41036						; size = 4
_y2$8 = -41032						; size = 4
_a$ = -41028						; size = 4
_y1$9 = -41024						; size = 4
_y2$10 = -41020						; size = 4
_color$ = -41016					; size = 4
_x2$11 = -41012						; size = 4
_y2$12 = -41008						; size = 4
_b$ = -41004						; size = 4
_y1$13 = -41000						; size = 4
_x1$14 = -40996						; size = 4
_x2$15 = -40992						; size = 4
_y$ = -40988						; size = 4
_x1$16 = -40984						; size = 4
_x1$17 = -40980						; size = 4
_x$ = -40976						; size = 4
_pVtx$ = -40972						; size = 4
_this$ = -40968						; size = 4
_vert$ = -40964						; size = 40960
__$ArrayPad$ = -4					; size = 4
_xLeft$ = 8						; size = 4
_yTop$ = 12						; size = 4
_string$ = 16						; size = 4
_boxed$ = 20						; size = 4
?ScreenText@Render2D@@UAEXMMPBDH@Z PROC			; Render2D::ScreenText
; _this$ = ecx

; 280  : {

	push	ebp
	mov	ebp, esp
	mov	eax, 41104				; 0000a090H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 281  : 	int color;
; 282  : 	float x,y;
; 283  : 	float r,g,b,a;
; 284  : 	TwoDVertex vert[4*256];
; 285  : 
; 286  : 	//JAM 15Dec03
; 287  : 	BOOL bToggle = FALSE; 

	mov	DWORD PTR _bToggle$[ebp], 0

; 288  : 
; 289  : 	if(context.bZBuffering && DisplayOptions.bZBuffering)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN32@ScreenText
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	ecx, ecx
	je	SHORT $LN32@ScreenText

; 290  : 	{
; 291  : 		bToggle = TRUE;

	mov	DWORD PTR _bToggle$[ebp], 1

; 292  : 		context.SetZBuffering(FALSE);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetZBuffering@ContextMPR@@QAEXH@Z	; ContextMPR::SetZBuffering

; 293  : 		context.SetState(MPR_STA_DISABLES,MPR_SE_Z_BUFFERING);

	push	8
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState
$LN32@ScreenText:

; 294  : 	}
; 295  : 	//JAM
; 296  : 
; 297  : 	x = (float)floor(xLeft) + OffsetX;

	push	ecx
	movss	xmm0, DWORD PTR _xLeft$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?floor@@YAMM@Z				; floor
	add	esp, 4
	fstp	DWORD PTR tv1590[ebp]
	movss	xmm0, DWORD PTR tv1590[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+262832]
	movss	DWORD PTR _x$[ebp], xmm0

; 298  : 	y = (float)floor(yTop) + OffsetY;

	push	ecx
	movss	xmm0, DWORD PTR _yTop$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?floor@@YAMM@Z				; floor
	add	esp, 4
	fstp	DWORD PTR tv1597[ebp]
	movss	xmm0, DWORD PTR tv1597[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+262836]
	movss	DWORD PTR _y$[ebp], xmm0

; 299  : 
; 300  : 	// Select font texture here
; 301  : 
; 302  : 	color = Color();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _color$[ebp], eax

; 303  : 
; 304  : 	// COBRA - RED - is forced alpha get it from the color else dafaults to 1
; 305  : 	if(ForceAlpha) a=((color & 0xFF000000) >> 24)/255.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+96]
	test	edx, edx
	je	SHORT $LN31@ScreenText
	mov	eax, DWORD PTR _color$[ebp]
	and	eax, -16777216				; ff000000H
	shr	eax, 24					; 00000018H
	mov	DWORD PTR tv1605[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv1605[ebp]
	mov	ecx, DWORD PTR tv1605[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv1608[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv1608[ebp]
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _a$[ebp], xmm0
	jmp	SHORT $LN30@ScreenText
$LN31@ScreenText:

; 306  : 	else a=1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _a$[ebp], xmm0
$LN30@ScreenText:

; 307  : 
; 308  : 	// Draw two tris to make a square;
; 309  : 	if (boxed != 2)

	cmp	DWORD PTR _boxed$[ebp], 2
	je	SHORT $LN29@ScreenText

; 310  : 	{
; 311  : 		r = (color & 0xFF)/255.0F;

	mov	edx, DWORD PTR _color$[ebp]
	and	edx, 255				; 000000ffH
	cvtsi2ss xmm0, edx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _r$[ebp], xmm0

; 312  : 		g = ((color & 0xFF00) >> 8)/255.0F;

	mov	eax, DWORD PTR _color$[ebp]
	and	eax, 65280				; 0000ff00H
	sar	eax, 8
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _g$[ebp], xmm0

; 313  : 		b = ((color & 0xFF0000) >> 16)/255.0F;

	mov	ecx, DWORD PTR _color$[ebp]
	and	ecx, 16711680				; 00ff0000H
	sar	ecx, 16					; 00000010H
	cvtsi2ss xmm0, ecx
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _b$[ebp], xmm0

; 314  : 	}
; 315  : 	else

	jmp	$LN28@ScreenText
$LN29@ScreenText:

; 316  : 	{
; 317  : 		// boxed == 2 means inverse text, so draw the square
; 318  : 		r = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _r$[ebp], xmm0

; 319  : 		g = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _g$[ebp], xmm0

; 320  : 		b = 0.0F;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _b$[ebp], xmm0

; 321  : 		vert[0].x = x - 1.8F;	//MI changed from - 2.0F

	movss	xmm0, DWORD PTR _x$[ebp]
	subss	xmm0, DWORD PTR __real@3fe66666
	mov	edx, 40					; 00000028H
	imul	edx, 0
	movss	DWORD PTR _vert$[ebp+edx], xmm0

; 322  : 		vert[0].y = y;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _vert$[ebp+eax+4], xmm0

; 323  : 		vert[1].x = vert[0].x;

	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, 40					; 00000028H
	shl	edx, 0
	mov	eax, DWORD PTR _vert$[ebp+ecx]
	mov	DWORD PTR _vert$[ebp+edx], eax

; 324  : 		vert[1].y = vert[0].y + pFontSet->fontData[pFontSet->fontNum][32].pixelHeight - 1; //MI added -1

	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+eax+96]
	mov	edx, 24					; 00000018H
	shl	edx, 5
	movss	xmm0, DWORD PTR _vert$[ebp+ecx+4]
	addss	xmm0, DWORD PTR [eax+edx+20]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	eax, 40					; 00000028H
	shl	eax, 0
	movss	DWORD PTR _vert$[ebp+eax+4], xmm0

; 325  : 		vert[2].x = vert[0].x + ScreenTextWidth(string) + 1.8F;	//MI changed from +4.0F

	mov	esi, 40					; 00000028H
	imul	esi, 0
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z ; VirtualDisplay::ScreenTextWidth
	add	esp, 4
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _vert$[ebp+esi]
	addss	xmm0, DWORD PTR __real@3fe66666
	mov	edx, 40					; 00000028H
	shl	edx, 1
	movss	DWORD PTR _vert$[ebp+edx], xmm0

; 326  : 		vert[2].y = vert[1].y;

	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, 40					; 00000028H
	shl	ecx, 1
	mov	edx, DWORD PTR _vert$[ebp+eax+4]
	mov	DWORD PTR _vert$[ebp+ecx+4], edx

; 327  : 		vert[3].x = vert[2].x;

	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, 40					; 00000028H
	imul	ecx, 3
	mov	edx, DWORD PTR _vert$[ebp+eax]
	mov	DWORD PTR _vert$[ebp+ecx], edx

; 328  : 		vert[3].y = vert[0].y;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, 40					; 00000028H
	imul	ecx, 3
	mov	edx, DWORD PTR _vert$[ebp+eax+4]
	mov	DWORD PTR _vert$[ebp+ecx+4], edx

; 329  : 		if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);							// COBRA - RED - Alpha Option

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN27@ScreenText
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
	jmp	SHORT $LN26@ScreenText
$LN27@ScreenText:

; 330  : 		else context.RestoreState( STATE_SOLID );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN26@ScreenText:

; 331  : 		context.DrawPrimitive(MPR_PRM_TRIFAN, 0, 4, vert, sizeof(vert[0]));

	push	40					; 00000028H
	lea	edx, DWORD PTR _vert$[ebp]
	push	edx
	push	4
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtxTexClr_t@@G@Z ; ContextMPR::DrawPrimitive
$LN28@ScreenText:

; 332  : 	}
; 333  : 
; 334  : 	//Wombat778 3-09-2004 Added to allow colored text on a black background
; 335  : 	if (boxed == 3)

	cmp	DWORD PTR _boxed$[ebp], 3
	jne	$LN25@ScreenText

; 336  : 	{
; 337  : 		
; 338  : 		DWORD tempcolor = Color();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _tempcolor$1[ebp], eax

; 339  : 		SetColor(0x00000000);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 340  : 
; 341  : 		vert[0].x = x - 1.8F;	//MI changed from - 2.0F

	movss	xmm0, DWORD PTR _x$[ebp]
	subss	xmm0, DWORD PTR __real@3fe66666
	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	movss	DWORD PTR _vert$[ebp+ecx], xmm0

; 342  : 		vert[0].y = y;

	mov	edx, 40					; 00000028H
	imul	edx, 0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _vert$[ebp+edx+4], xmm0

; 343  : 		vert[1].x = vert[0].x;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	edx, DWORD PTR _vert$[ebp+eax]
	mov	DWORD PTR _vert$[ebp+ecx], edx

; 344  : 		vert[1].y = vert[0].y + pFontSet->fontData[pFontSet->fontNum][32].pixelHeight - 1; //MI added -1

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+edx+96]
	mov	ecx, 24					; 00000018H
	shl	ecx, 5
	movss	xmm0, DWORD PTR _vert$[ebp+eax+4]
	addss	xmm0, DWORD PTR [edx+ecx+20]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	edx, 40					; 00000028H
	shl	edx, 0
	movss	DWORD PTR _vert$[ebp+edx+4], xmm0

; 345  : 		vert[2].x = vert[0].x + ScreenTextWidth(string) + 1.8F;	//MI changed from +4.0F

	mov	esi, 40					; 00000028H
	imul	esi, 0
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?ScreenTextWidth@VirtualDisplay@@SAHPBD@Z ; VirtualDisplay::ScreenTextWidth
	add	esp, 4
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _vert$[ebp+esi]
	addss	xmm0, DWORD PTR __real@3fe66666
	mov	ecx, 40					; 00000028H
	shl	ecx, 1
	movss	DWORD PTR _vert$[ebp+ecx], xmm0

; 346  : 		vert[2].y = vert[1].y;

	mov	edx, 40					; 00000028H
	shl	edx, 0
	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _vert$[ebp+edx+4]
	mov	DWORD PTR _vert$[ebp+eax+4], ecx

; 347  : 		vert[3].x = vert[2].x;

	mov	edx, 40					; 00000028H
	shl	edx, 1
	mov	eax, 40					; 00000028H
	imul	eax, 3
	mov	ecx, DWORD PTR _vert$[ebp+edx]
	mov	DWORD PTR _vert$[ebp+eax], ecx

; 348  : 		vert[3].y = vert[0].y;

	mov	edx, 40					; 00000028H
	imul	edx, 0
	mov	eax, 40					; 00000028H
	imul	eax, 3
	mov	ecx, DWORD PTR _vert$[ebp+edx+4]
	mov	DWORD PTR _vert$[ebp+eax+4], ecx

; 349  : 		if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);							// COBRA - RED - Alpha Option

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+96]
	test	eax, eax
	je	SHORT $LN24@ScreenText
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
	jmp	SHORT $LN23@ScreenText
$LN24@ScreenText:

; 350  : 		else context.RestoreState( STATE_SOLID );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN23@ScreenText:

; 351  : 		context.DrawPrimitive(MPR_PRM_TRIFAN, 0, 4, vert, sizeof(vert[0]));

	push	40					; 00000028H
	lea	ecx, DWORD PTR _vert$[ebp]
	push	ecx
	push	4
	push	0
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtxTexClr_t@@G@Z ; ContextMPR::DrawPrimitive

; 352  : 		
; 353  : 		SetColor(tempcolor);

	mov	edx, DWORD PTR _tempcolor$1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
$LN25@ScreenText:

; 354  : 	}
; 355  : 
; 356  : 
; 357  : 	SetColor(color);

	mov	ecx, DWORD PTR _color$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+92]
	call	edx

; 358  : 	if(ForceAlpha) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN22@ScreenText

; 359  : 		// force the Hud mode & text gets color from the Vertices
; 360  : 		context.RestoreState(STATE_CHROMA_TEXTURE_GOURAUD2);						// COBRA - RED - Alpha Option

	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 361  : 		context.TexColorDiffuse();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?TexColorDiffuse@ContextMPR@@QAEXXZ	; ContextMPR::TexColorDiffuse
	jmp	SHORT $LN21@ScreenText
$LN22@ScreenText:

; 362  : 	} else context.RestoreState(STATE_TEXTURE_TEXT); //JAM 18Oct03

	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN21@ScreenText:

; 363  : 	context.SelectTexture1( pFontSet->fontTexture[pFontSet->fontNum].TexHandle() );

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [edx+24672]
	imul	ecx, 24					; 00000018H
	add	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 364  : 
; 365  : 	TwoDVertex *pVtx = vert;

	lea	eax, DWORD PTR _vert$[ebp]
	mov	DWORD PTR _pVtx$[ebp], eax

; 366  : 
; 367  : 	int n = 0;

	mov	DWORD PTR _n$[ebp], 0
$LN20@ScreenText:

; 368  : 
; 369  : 	while (*string)

	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	$LN19@ScreenText

; 370  : 	{
; 371  : 		// Top Left 1
; 372  : 		pVtx[0].x = x;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [ecx+eax], xmm0

; 373  : 		pVtx[0].y = y;

	mov	edx, 40					; 00000028H
	imul	edx, 0
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [eax+edx+4], xmm0

; 374  : 		pVtx[0].r = r;

	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [edx+ecx+8], xmm0

; 375  : 		pVtx[0].g = g;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [ecx+eax+12], xmm0

; 376  : 		pVtx[0].b = b;

	mov	edx, 40					; 00000028H
	imul	edx, 0
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [eax+edx+16], xmm0

; 377  : 		pVtx[0].a = a;

	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [edx+ecx+20], xmm0

; 378  : //		pVtx[0].a = 1.0F;
; 379  : 		pVtx[0].u = pFontSet->fontData[pFontSet->fontNum][*string].left;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	imul	edx, 24					; 00000018H
	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	esi, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR [eax+edx+4]
	mov	DWORD PTR [esi+ecx+24], edx

; 380  : 		pVtx[0].v = pFontSet->fontData[pFontSet->fontNum][*string].top;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	imul	edx, 24					; 00000018H
	mov	ecx, 40					; 00000028H
	imul	ecx, 0
	mov	esi, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [esi+ecx+28], edx

; 381  : 		pVtx[0].q = 1.0F;

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+32], xmm0

; 382  : 
; 383  : 		// Top Right 1
; 384  : 		pVtx[1].x = x + (pFontSet->fontData[pFontSet->fontNum][*string].width * 256.0f);

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+ecx+8]
	mulss	xmm0, DWORD PTR __real@43800000
	addss	xmm0, DWORD PTR _x$[ebp]
	mov	edx, 40					; 00000028H
	shl	edx, 0
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [eax+edx], xmm0

; 385  : 		pVtx[1].y = y;

	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [edx+ecx+4], xmm0

; 386  : 		pVtx[1].r = r;

	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [ecx+eax+8], xmm0

; 387  : 		pVtx[1].g = g;

	mov	edx, 40					; 00000028H
	shl	edx, 0
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [eax+edx+12], xmm0

; 388  : 		pVtx[1].b = b;

	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [edx+ecx+16], xmm0

; 389  : 		pVtx[1].a = a;

	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [ecx+eax+20], xmm0

; 390  : //		pVtx[1].a = 1.0F;
; 391  : 		pVtx[1].u = pFontSet->fontData[pFontSet->fontNum][*string].left + pFontSet->fontData[pFontSet->fontNum][*string].width;

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [eax+24672]
	imul	eax, 6144				; 00001800H
	mov	esi, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [esi+eax+96]
	mov	esi, DWORD PTR _string$[ebp]
	movsx	esi, BYTE PTR [esi]
	imul	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+ecx+4]
	addss	xmm0, DWORD PTR [eax+esi+8]
	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [edx+ecx+24], xmm0

; 392  : 		pVtx[1].v = pFontSet->fontData[pFontSet->fontNum][*string].top;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	imul	edx, 24					; 00000018H
	mov	ecx, 40					; 00000028H
	shl	ecx, 0
	mov	esi, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [esi+ecx+28], edx

; 393  : 		pVtx[1].q = 1.0F;

	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+32], xmm0

; 394  : 
; 395  : 		// Bottom Left 1
; 396  : 		pVtx[2].x = x;

	mov	edx, 40					; 00000028H
	shl	edx, 1
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax+edx], xmm0

; 397  : 		pVtx[2].y = y + pFontSet->fontData[pFontSet->fontNum][*string].pixelHeight;

	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _string$[ebp]
	movsx	eax, BYTE PTR [edx]
	imul	eax, 24					; 00000018H
	movss	xmm0, DWORD PTR _y$[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+20]
	mov	ecx, 40					; 00000028H
	shl	ecx, 1
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [edx+ecx+4], xmm0

; 398  : 		pVtx[2].r = r;

	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [ecx+eax+8], xmm0

; 399  : 		pVtx[2].g = g;

	mov	edx, 40					; 00000028H
	shl	edx, 1
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [eax+edx+12], xmm0

; 400  : 		pVtx[2].b = b;

	mov	ecx, 40					; 00000028H
	shl	ecx, 1
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [edx+ecx+16], xmm0

; 401  : 		pVtx[2].a = a;

	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [ecx+eax+20], xmm0

; 402  : //		pVtx[2].a = 1.0F;
; 403  : 		pVtx[2].u = pFontSet->fontData[pFontSet->fontNum][*string].left;

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	esi, DWORD PTR _pVtx$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+4]
	mov	DWORD PTR [esi+eax+24], ecx

; 404  : 		pVtx[2].v = pFontSet->fontData[pFontSet->fontNum][*string].top + pFontSet->fontData[pFontSet->fontNum][*string].height;

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [eax+24672]
	imul	eax, 6144				; 00001800H
	mov	esi, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [esi+eax+96]
	mov	esi, DWORD PTR _string$[ebp]
	movsx	esi, BYTE PTR [esi]
	imul	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+ecx]
	addss	xmm0, DWORD PTR [eax+esi+12]
	mov	ecx, 40					; 00000028H
	shl	ecx, 1
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [edx+ecx+28], xmm0

; 405  : 		pVtx[2].q = 1.0F;

	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+32], xmm0

; 406  : 
; 407  : 		// Bottom Left 2
; 408  : 		pVtx[3] = pVtx[2];

	mov	esi, 40					; 00000028H
	shl	esi, 1
	add	esi, DWORD PTR _pVtx$[ebp]
	mov	edi, 40					; 00000028H
	imul	edi, 3
	add	edi, DWORD PTR _pVtx$[ebp]
	mov	ecx, 10					; 0000000aH
	rep movsd

; 409  : 
; 410  : 		// Top Right 2
; 411  : 		pVtx[4] = pVtx[1];

	mov	esi, 40					; 00000028H
	shl	esi, 0
	add	esi, DWORD PTR _pVtx$[ebp]
	mov	edi, 40					; 00000028H
	shl	edi, 2
	add	edi, DWORD PTR _pVtx$[ebp]
	mov	ecx, 10					; 0000000aH
	rep movsd

; 412  : 
; 413  : 		// Bottom Right 2
; 414  : 		pVtx[5].x = x + (pFontSet->fontData[pFontSet->fontNum][*string].width * 256.0f);

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+ecx+8]
	mulss	xmm0, DWORD PTR __real@43800000
	addss	xmm0, DWORD PTR _x$[ebp]
	mov	edx, 40					; 00000028H
	imul	edx, 5
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [eax+edx], xmm0

; 415  : 		pVtx[5].y = y + pFontSet->fontData[pFontSet->fontNum][*string].pixelHeight;

	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _string$[ebp]
	movsx	eax, BYTE PTR [edx]
	imul	eax, 24					; 00000018H
	movss	xmm0, DWORD PTR _y$[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+20]
	mov	ecx, 40					; 00000028H
	imul	ecx, 5
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [edx+ecx+4], xmm0

; 416  : 		pVtx[5].r = r;

	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [ecx+eax+8], xmm0

; 417  : 		pVtx[5].g = g;

	mov	edx, 40					; 00000028H
	imul	edx, 5
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR [eax+edx+12], xmm0

; 418  : 		pVtx[5].b = b;

	mov	ecx, 40					; 00000028H
	imul	ecx, 5
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [edx+ecx+16], xmm0

; 419  : 		pVtx[5].a = a;

	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR _a$[ebp]
	movss	DWORD PTR [ecx+eax+20], xmm0

; 420  : //		pVtx[5].a = 1.0F;
; 421  : 		pVtx[5].u = pFontSet->fontData[pFontSet->fontNum][*string].left + pFontSet->fontData[pFontSet->fontNum][*string].width;

	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [edx+24672]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _string$[ebp]
	movsx	ecx, BYTE PTR [eax]
	imul	ecx, 24					; 00000018H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	eax, DWORD PTR [eax+24672]
	imul	eax, 6144				; 00001800H
	mov	esi, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [esi+eax+96]
	mov	esi, DWORD PTR _string$[ebp]
	movsx	esi, BYTE PTR [esi]
	imul	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+ecx+4]
	addss	xmm0, DWORD PTR [eax+esi+8]
	mov	ecx, 40					; 00000028H
	imul	ecx, 5
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [edx+ecx+24], xmm0

; 422  : 		pVtx[5].v = pFontSet->fontData[pFontSet->fontNum][*string].top + pFontSet->fontData[pFontSet->fontNum][*string].height;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	imul	edx, 24					; 00000018H
	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [ecx+24672]
	imul	ecx, 6144				; 00001800H
	mov	esi, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [esi+ecx+96]
	mov	esi, DWORD PTR _string$[ebp]
	movsx	esi, BYTE PTR [esi]
	imul	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR [eax+edx]
	addss	xmm0, DWORD PTR [ecx+esi+12]
	mov	edx, 40					; 00000028H
	imul	edx, 5
	mov	eax, DWORD PTR _pVtx$[ebp]
	movss	DWORD PTR [eax+edx+28], xmm0

; 423  : 		pVtx[5].q = 1.0F;

	mov	ecx, 40					; 00000028H
	imul	ecx, 5
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+32], xmm0

; 424  : 
; 425  : 		// Do a block clip
; 426  : 		if(!(pVtx[0].x <= rightPixel && pVtx[0].x >= leftPixel && pVtx[0].y <= bottomPixel && pVtx[0].y >= topPixel))

	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+64]
	comiss	xmm0, DWORD PTR [edx+eax]
	jb	SHORT $LN17@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR [edx+60]
	jb	SHORT $LN17@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jb	SHORT $LN17@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	comiss	xmm0, DWORD PTR [edx+52]
	jae	SHORT $LN18@ScreenText
$LN17@ScreenText:

; 427  : 			break;

	jmp	$LN19@ScreenText
$LN18@ScreenText:

; 428  : 		if(!(pVtx[1].x <= rightPixel && pVtx[1].x >= leftPixel && pVtx[1].y <= bottomPixel && pVtx[1].y >= topPixel))

	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+64]
	comiss	xmm0, DWORD PTR [edx+eax]
	jb	SHORT $LN15@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR [edx+60]
	jb	SHORT $LN15@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jb	SHORT $LN15@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 0
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	comiss	xmm0, DWORD PTR [edx+52]
	jae	SHORT $LN16@ScreenText
$LN15@ScreenText:

; 429  : 			break;

	jmp	$LN19@ScreenText
$LN16@ScreenText:

; 430  : 		if(!(pVtx[2].x <= rightPixel && pVtx[2].x >= leftPixel && pVtx[2].y <= bottomPixel && pVtx[2].y >= topPixel))

	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+64]
	comiss	xmm0, DWORD PTR [edx+eax]
	jb	SHORT $LN13@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR [edx+60]
	jb	SHORT $LN13@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jb	SHORT $LN13@ScreenText
	mov	eax, 40					; 00000028H
	shl	eax, 1
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	comiss	xmm0, DWORD PTR [edx+52]
	jae	SHORT $LN14@ScreenText
$LN13@ScreenText:

; 431  : 			break;

	jmp	$LN19@ScreenText
$LN14@ScreenText:

; 432  : 		if(!(pVtx[5].x <= rightPixel && pVtx[5].x >= leftPixel && pVtx[5].y <= bottomPixel && pVtx[5].y >= topPixel))

	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+64]
	comiss	xmm0, DWORD PTR [edx+eax]
	jb	SHORT $LN11@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax]
	comiss	xmm0, DWORD PTR [edx+60]
	jb	SHORT $LN11@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pVtx$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jb	SHORT $LN11@ScreenText
	mov	eax, 40					; 00000028H
	imul	eax, 5
	mov	ecx, DWORD PTR _pVtx$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	comiss	xmm0, DWORD PTR [edx+52]
	jae	SHORT $LN12@ScreenText
$LN11@ScreenText:

; 433  : 			break;

	jmp	SHORT $LN19@ScreenText
$LN12@ScreenText:

; 434  : 
; 435  : 		x += pFontSet->fontData[pFontSet->fontNum][*string].pixelWidth;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _string$[ebp]
	movsx	edx, BYTE PTR [ecx]
	imul	edx, 24					; 00000018H
	movss	xmm0, DWORD PTR _x$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+16]
	movss	DWORD PTR _x$[ebp], xmm0

; 436  : 		string++;

	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 1
	mov	DWORD PTR _string$[ebp], eax

; 437  : 		n++;

	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx

; 438  : 		pVtx += 6;

	mov	edx, DWORD PTR _pVtx$[ebp]
	add	edx, 240				; 000000f0H
	mov	DWORD PTR _pVtx$[ebp], edx

; 439  : 	}

	jmp	$LN20@ScreenText
$LN19@ScreenText:

; 440  : 
; 441  : 	ShiAssert(n < 256);
; 442  : 
; 443  : 	if(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN10@ScreenText

; 444  : 		context.DrawPrimitive(MPR_PRM_TRIANGLES,MPR_VI_COLOR|MPR_VI_TEXTURE,n*6,vert,sizeof(vert[0]));

	push	40					; 00000028H
	lea	eax, DWORD PTR _vert$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	imul	ecx, 6
	push	ecx
	push	6
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtxTexClr_t@@G@Z ; ContextMPR::DrawPrimitive
$LN10@ScreenText:

; 445  : 
; 446  : 	if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);							// COBRA - RED - Alpha Option

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+96]
	test	eax, eax
	je	SHORT $LN9@ScreenText
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
	jmp	SHORT $LN8@ScreenText
$LN9@ScreenText:

; 447  : 	else context.RestoreState(STATE_SOLID);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN8@ScreenText:

; 448  : 
; 449  : 	// Go back and box the string if necessary
; 450  : 	if (boxed == 1)

	cmp	DWORD PTR _boxed$[ebp], 1
	jne	$LN6@ScreenText

; 451  : 	{
; 452  : 		float x1 = xLeft - 2.0f;

	movss	xmm0, DWORD PTR _xLeft$[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _x1$14[ebp], xmm0

; 453  : 		float y1 = yTop  - 2.0f;

	movss	xmm0, DWORD PTR _yTop$[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _y1$6[ebp], xmm0

; 454  : 		float x2 = (float)(x + 1);

	movss	xmm0, DWORD PTR _x$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _x2$11[ebp], xmm0

; 455  : 		float y2 = yTop + pFontSet->fontData[pFontSet->fontNum][32].pixelHeight;

	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, 24					; 00000018H
	shl	edx, 5
	movss	xmm0, DWORD PTR _yTop$[ebp]
	addss	xmm0, DWORD PTR [ecx+edx+20]
	movss	DWORD PTR _y2$10[ebp], xmm0

; 456  : 		
; 457  : 		// Only draw the box if it is entirely on screen
; 458  : 		if ((x1 > leftPixel) && (x2 < rightPixel) && (y1 > topPixel) && (y2 < bottomPixel)) {

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x1$14[ebp]
	comiss	xmm0, DWORD PTR [eax+60]
	jbe	$LN6@ScreenText
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+64]
	comiss	xmm0, DWORD PTR _x2$11[ebp]
	jbe	$LN6@ScreenText
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y1$6[ebp]
	comiss	xmm0, DWORD PTR [edx+52]
	jbe	$LN6@ScreenText
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+56]
	comiss	xmm0, DWORD PTR _y2$10[ebp]
	jbe	$LN6@ScreenText

; 459  : 			Render2DLine (x1, y1, x2, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$6[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$11[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$6[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$14[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 460  : 			Render2DLine (x2, y1, x2, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$10[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$11[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$6[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$11[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 461  : 			Render2DLine (x2, y2, x1, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$10[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$14[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y2$10[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$11[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 462  : 			Render2DLine (x1, y2, x1, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$6[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$14[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y2$10[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$14[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
$LN6@ScreenText:

; 463  : 		}
; 464  : 	}
; 465  : 
; 466  : 	// Left Arrow
; 467  : 	if (boxed == 0x4)

	cmp	DWORD PTR _boxed$[ebp], 4
	jne	$LN4@ScreenText

; 468  : 	{
; 469  : 		float x0 = xLeft - 5.0F;

	movss	xmm0, DWORD PTR _xLeft$[ebp]
	subss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR _x0$3[ebp], xmm0

; 470  : 		float y0 = yTop + (pFontSet->fontData[pFontSet->fontNum][32].pixelHeight / 2);

	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, 24					; 00000018H
	shl	edx, 5
	movss	xmm0, DWORD PTR [ecx+edx+20]
	divss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _yTop$[ebp]
	movss	DWORD PTR _y0$4[ebp], xmm0

; 471  : 		float x1 = xLeft - 2.0f;

	movss	xmm0, DWORD PTR _xLeft$[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _x1$17[ebp], xmm0

; 472  : 		float y1 = yTop;

	movss	xmm0, DWORD PTR _yTop$[ebp]
	movss	DWORD PTR _y1$13[ebp], xmm0

; 473  : 		float x2 = (float)(x + 1);

	movss	xmm0, DWORD PTR _x$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _x2$15[ebp], xmm0

; 474  : 		float y2 = yTop + pFontSet->fontData[pFontSet->fontNum][32].pixelHeight;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, 24					; 00000018H
	shl	ecx, 5
	movss	xmm0, DWORD PTR _yTop$[ebp]
	addss	xmm0, DWORD PTR [eax+ecx+20]
	movss	DWORD PTR _y2$12[ebp], xmm0

; 475  : 
; 476  : 		x1 = max (x1, leftPixel + 1.0F);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+60]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR _x1$17[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN35@ScreenText
	movss	xmm0, DWORD PTR _x1$17[ebp]
	movss	DWORD PTR tv1312[ebp], xmm0
	jmp	SHORT $LN36@ScreenText
$LN35@ScreenText:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+60]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv1312[ebp], xmm0
$LN36@ScreenText:
	movss	xmm0, DWORD PTR tv1312[ebp]
	movss	DWORD PTR _x1$17[ebp], xmm0

; 477  : 		
; 478  : 		// Only draw the box if it is entirely on screen
; 479  : 		if ((x1 > leftPixel) && (x2 < rightPixel) && (y1 > topPixel) && (y2 < bottomPixel))

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x1$17[ebp]
	comiss	xmm0, DWORD PTR [ecx+60]
	jbe	$LN4@ScreenText
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+64]
	comiss	xmm0, DWORD PTR _x2$15[ebp]
	jbe	$LN4@ScreenText
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y1$13[ebp]
	comiss	xmm0, DWORD PTR [eax+52]
	jbe	$LN4@ScreenText
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR _y2$12[ebp]
	jbe	$LN4@ScreenText

; 480  : 		{
; 481  : 			Render2DLine (x0, y0, x1, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$13[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$17[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y0$4[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x0$3[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+124]
	call	edx

; 482  : 			Render2DLine (x0, y0, x1, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$12[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$17[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y0$4[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x0$3[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 483  : 			Render2DLine (x1, y1, x2, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$13[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$15[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$13[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$17[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 484  : 			Render2DLine (x2, y1, x2, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$12[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$15[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$13[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$15[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 485  : 			Render2DLine (x2, y2, x1, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$12[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$17[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y2$12[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$15[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
$LN4@ScreenText:

; 486  : 		}
; 487  :    }
; 488  : 
; 489  : 	// Right Arrow
; 490  : 	if (boxed == 0x8)

	cmp	DWORD PTR _boxed$[ebp], 8
	jne	$LN2@ScreenText

; 491  : 	{
; 492  : 		float x0 = float (x + 4);

	movss	xmm0, DWORD PTR _x$[ebp]
	addss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR _x0$5[ebp], xmm0

; 493  : 		float y0 = yTop + (pFontSet->fontData[pFontSet->fontNum][32].pixelHeight / 2);

	mov	ecx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	edx, DWORD PTR [ecx+24672]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, 24					; 00000018H
	shl	edx, 5
	movss	xmm0, DWORD PTR [ecx+edx+20]
	divss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _yTop$[ebp]
	movss	DWORD PTR _y0$2[ebp], xmm0

; 494  : 		float x1 = xLeft - 2.0f;

	movss	xmm0, DWORD PTR _xLeft$[ebp]
	subss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _x1$16[ebp], xmm0

; 495  : 		float y1 = yTop;

	movss	xmm0, DWORD PTR _yTop$[ebp]
	movss	DWORD PTR _y1$9[ebp], xmm0

; 496  : 		float x2 = (float)(x + 1);

	movss	xmm0, DWORD PTR _x$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _x2$7[ebp], xmm0

; 497  : 		float y2 = yTop + pFontSet->fontData[pFontSet->fontNum][32].pixelHeight;

	mov	eax, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	mov	ecx, DWORD PTR [eax+24672]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR ?pFontSet@VirtualDisplay@@2PAUFontSet@@A ; VirtualDisplay::pFontSet
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, 24					; 00000018H
	shl	ecx, 5
	movss	xmm0, DWORD PTR _yTop$[ebp]
	addss	xmm0, DWORD PTR [eax+ecx+20]
	movss	DWORD PTR _y2$8[ebp], xmm0

; 498  : 
; 499  : 		// Only draw the box if it is entirely on screen
; 500  : 		x1 = max (x1, leftPixel + 1.0F);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+60]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR _x1$16[ebp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN37@ScreenText
	movss	xmm0, DWORD PTR _x1$16[ebp]
	movss	DWORD PTR tv1462[ebp], xmm0
	jmp	SHORT $LN38@ScreenText
$LN37@ScreenText:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+60]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv1462[ebp], xmm0
$LN38@ScreenText:
	movss	xmm0, DWORD PTR tv1462[ebp]
	movss	DWORD PTR _x1$16[ebp], xmm0

; 501  : 		if ((x1 > leftPixel) && (x2 < rightPixel) && (y1 > topPixel) && (y2 < bottomPixel))

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x1$16[ebp]
	comiss	xmm0, DWORD PTR [ecx+60]
	jbe	$LN2@ScreenText
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+64]
	comiss	xmm0, DWORD PTR _x2$7[ebp]
	jbe	$LN2@ScreenText
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y1$9[ebp]
	comiss	xmm0, DWORD PTR [eax+52]
	jbe	$LN2@ScreenText
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	comiss	xmm0, DWORD PTR _y2$8[ebp]
	jbe	$LN2@ScreenText

; 502  : 		{
; 503  : 			Render2DLine (x0, y0, x2, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$9[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$7[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y0$2[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x0$5[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+124]
	call	edx

; 504  : 			Render2DLine (x0, y0, x2, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$7[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y0$2[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x0$5[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 505  : 			Render2DLine (x1, y1, x2, y1);

	push	ecx
	movss	xmm0, DWORD PTR _y1$9[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$7[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$9[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$16[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 506  : 			Render2DLine (x1, y1, x1, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$16[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y1$9[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$16[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax

; 507  : 			Render2DLine (x2, y2, x1, y2);

	push	ecx
	movss	xmm0, DWORD PTR _y2$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x1$16[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y2$8[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x2$7[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
$LN2@ScreenText:

; 508  : 		}
; 509  : 	}
; 510  : 
; 511  :    //JAM 15Dec03
; 512  : 	if(bToggle && DisplayOptions.bZBuffering)

	cmp	DWORD PTR _bToggle$[ebp], 0
	je	SHORT $LN1@ScreenText
	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	ecx, ecx
	je	SHORT $LN1@ScreenText

; 513  : 	{
; 514  : 		context.SetZBuffering(TRUE);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetZBuffering@ContextMPR@@QAEXH@Z	; ContextMPR::SetZBuffering

; 515  : 		context.SetState(MPR_STA_ENABLES,MPR_SE_Z_BUFFERING);

	push	8
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState
$LN1@ScreenText:

; 516  : 	}
; 517  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?ScreenText@Render2D@@UAEXMMPBDH@Z ENDP			; Render2D::ScreenText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_totalWidth$ = -1044					; size = 4
_result$ = -1040					; size = 4
_dataptr$ = -1036					; size = 4
_this$ = -1032						; size = 4
_texFile$ = -1028					; size = 432
_buffer$2 = -596					; size = 580
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sX$ = 8						; size = 4
_sY$ = 12						; size = 4
_dX$ = 16						; size = 4
_dY$ = 20						; size = 4
_w$ = 24						; size = 4
_h$ = 28						; size = 4
_filename$ = 32						; size = 4
_Fit$ = 36						; size = 1
?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z PROC	; Render2D::Render2DBitmap
; _this$ = ecx

; 229  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 	int					result;
; 231  : 	CImageFileMemory 	texFile;

	lea	ecx, DWORD PTR _texFile$[ebp]
	call	??0CImageFileMemory@@QAE@XZ		; CImageFileMemory::CImageFileMemory
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 232  : 	int					totalWidth;
; 233  : 	DWORD				*dataptr;
; 234  : 
; 235  : 	
; 236  : 	// Make sure we recognize this file type
; 237  : 	texFile.imageType = CheckImageType( filename );

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?CheckImageType@@YAHPBD@Z		; CheckImageType
	add	esp, 4
	mov	DWORD PTR _texFile$[ebp+28], eax

; 238  : 	ShiAssert( texFile.imageType != IMAGE_TYPE_UNKNOWN );
; 239  : 
; 240  : 	// Open the input file
; 241  : 	result = texFile.glOpenFileMem( filename );

	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _texFile$[ebp]
	call	?glOpenFileMem@CFileMemory@@QAEHPBD@Z	; CFileMemory::glOpenFileMem
	mov	DWORD PTR _result$[ebp], eax

; 242  : 	ShiAssert( result == 1 );
; 243  : 
; 244  : 	// Read the image data (note that ReadTextureImage will close texFile for us)
; 245  : 	texFile.glReadFileMem();

	lea	ecx, DWORD PTR _texFile$[ebp]
	call	?glReadFileMem@CFileMemory@@QAEXXZ	; CFileMemory::glReadFileMem

; 246  : 	result = ReadTextureImage( &texFile );

	lea	edx, DWORD PTR _texFile$[ebp]
	push	edx
	call	?ReadTextureImage@@YAHPAVCImageFileMemory@@@Z ; ReadTextureImage
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax

; 247  : 	if (result != GOOD_READ) {

	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN3@Render2DBi

; 248  : 		ShiError( "Failed to read bitmap.  CD Error?" );

	push	OFFSET ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
	push	OFFSET ??_C@_0N@ILLGEKHE@Render2d?4cpp?$AA@
	push	248					; 000000f8H
	push	OFFSET ??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$2[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H
	push	0
	push	OFFSET ??_C@_0CC@EKJEAKAO@Failed?5to?5read?5bitmap?4?5?5CD?5Error@
	lea	ecx, DWORD PTR _buffer$2[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	push	-1
	call	_exit
$LN3@Render2DBi:

; 249  : 	}
; 250  : 
; 251  : 	// Store the image size (check it in debug mode)
; 252  : 	totalWidth = texFile.image.width;

	mov	edx, DWORD PTR _texFile$[ebp+32]
	mov	DWORD PTR _totalWidth$[ebp], edx

; 253  : 	ShiAssert( sX+w <= texFile.image.width );
; 254  : 	ShiAssert( sY+h <= texFile.image.height );
; 255  : 
; 256  : 	// Force the data into 32 bit color
; 257  : 	dataptr = (DWORD*)ConvertImage( &texFile.image, COLOR_16M, NULL );

	push	0
	push	3
	lea	eax, DWORD PTR _texFile$[ebp+32]
	push	eax
	call	?ConvertImage@@YAPAEPAUGLImageInfo@@HPAI@Z ; ConvertImage
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dataptr$[ebp], eax

; 258  : 	ShiAssert( dataptr );
; 259  : 
; 260  : 	// Release the unconverted image data
; 261  : 	// edg: I've seen palette be NULL
; 262  : 	if ( texFile.image.palette )

	cmp	DWORD PTR _texFile$[ebp+40], 0
	je	SHORT $LN2@Render2DBi

; 263  : 			glReleaseMemory( (char*)texFile.image.palette );

	mov	ecx, DWORD PTR _texFile$[ebp+40]
	push	ecx
	call	?glReleaseMemory@@YAXPAX@Z		; glReleaseMemory
	add	esp, 4
$LN2@Render2DBi:

; 264  : 	glReleaseMemory( (char*)texFile.image.image );

	mov	edx, DWORD PTR _texFile$[ebp+44]
	push	edx
	call	?glReleaseMemory@@YAXPAX@Z		; glReleaseMemory
	add	esp, 4

; 265  : 
; 266  : 	// Pass the bitmap data into the bitmap display function
; 267  : 	if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);							// COBRA - RED - Alpha Option

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN1@Render2DBi
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN1@Render2DBi:

; 268  : 	Render2DBitmap( sX, sY, dX + (int)OffsetX, dY + (int)OffsetY, w, h, totalWidth, dataptr, Fit );

	movzx	edx, BYTE PTR _Fit$[ebp]
	push	edx
	mov	eax, DWORD PTR _dataptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _totalWidth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	push	edx
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+262836]
	add	edx, DWORD PTR _dY$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+262832]
	add	ecx, DWORD PTR _dX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sY$[ebp]
	push	edx
	mov	eax, DWORD PTR _sX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render2DBitmap@Render2D@@QAEXHHHHHHHPAK_N@Z ; Render2D::Render2DBitmap

; 269  : 
; 270  : 	// Release the converted image data
; 271  : 	glReleaseMemory( dataptr );

	mov	ecx, DWORD PTR _dataptr$[ebp]
	push	ecx
	call	?glReleaseMemory@@YAXPAX@Z		; glReleaseMemory
	add	esp, 4

; 272  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _texFile$[ebp]
	call	??1CImageFileMemory@@UAE@XZ		; CImageFileMemory::~CImageFileMemory
$LN4@Render2DBi:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z$0:
	lea	ecx, DWORD PTR _texFile$[ebp]
	jmp	??1CImageFileMemory@@UAE@XZ		; CImageFileMemory::~CImageFileMemory
__ehhandler$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1036]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Render2DBitmap@Render2D@@QAEXHHHHHHPAD_N@Z ENDP	; Render2D::Render2DBitmap
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sX$ = 8						; size = 4
_sY$ = 12						; size = 4
_dX$ = 16						; size = 4
_dY$ = 20						; size = 4
_w$ = 24						; size = 4
_h$ = 28						; size = 4
_totalWidth$ = 32					; size = 4
_source$ = 36						; size = 4
_Fit$ = 40						; size = 1
?Render2DBitmap@Render2D@@QAEXHHHHHHHPAK_N@Z PROC	; Render2D::Render2DBitmap
; _this$ = ecx

; 217  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);							// COBRA - RED - Alpha Option

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN1@Render2DBi
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN1@Render2DBi:

; 219  : 	context.Render2DBitmap(sX, sY, dX + (int)OffsetX, dY + (int)OffsetY, w, h, totalWidth, source, Fit);

	movzx	edx, BYTE PTR _Fit$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _totalWidth$[ebp]
	push	ecx
	mov	edx, DWORD PTR _h$[ebp]
	push	edx
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+262836]
	add	edx, DWORD PTR _dY$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+262832]
	add	ecx, DWORD PTR _dX$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sY$[ebp]
	push	edx
	mov	eax, DWORD PTR _sX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Render2DBitmap@ContextMPR@@QAEXHHHHHHHPAK_N@Z ; ContextMPR::Render2DBitmap

; 220  : }

	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?Render2DBitmap@Render2D@@QAEXHHHHHHHPAK_N@Z ENDP	; Render2D::Render2DBitmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
tv68 = -80						; size = 4
tv77 = -76						; size = 4
tv137 = -72						; size = 4
tv65 = -68						; size = 4
tv136 = -64						; size = 4
tv89 = -60						; size = 4
tv133 = -56						; size = 4
tv80 = -52						; size = 4
tv93 = -48						; size = 4
tv69 = -44						; size = 4
tv92 = -40						; size = 4
tv81 = -36						; size = 4
_this$ = -32						; size = 4
_verts$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_x3$ = 24						; size = 4
_y3$ = 28						; size = 4
?Render2DTri@Render2D@@UAEXMMMMMM@Z PROC		; Render2D::Render2DTri
; _this$ = ecx

; 183  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 	MPRVtx_t	verts[3];
; 185  : 
; 186  :    //Clip test
; 187  :    if (
; 188  :       (max (max (x1, x2), x3) > rightPixel)		||
; 189  :       (min (min (x1, x2), x3) < leftPixel)		||
; 190  :       (max (max (y1, y2), y3) > bottomPixel)	||
; 191  :       (min (min (y1, y2), y3) < topPixel)
; 192  :       )

	movss	xmm0, DWORD PTR _x1$[ebp]
	comiss	xmm0, DWORD PTR _x2$[ebp]
	jbe	SHORT $LN6@Render2DTr
	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR tv65[ebp], xmm0
	jmp	SHORT $LN7@Render2DTr
$LN6@Render2DTr:
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR tv65[ebp], xmm0
$LN7@Render2DTr:
	movss	xmm0, DWORD PTR tv65[ebp]
	comiss	xmm0, DWORD PTR _x3$[ebp]
	jbe	SHORT $LN10@Render2DTr
	movss	xmm0, DWORD PTR _x1$[ebp]
	comiss	xmm0, DWORD PTR _x2$[ebp]
	jbe	SHORT $LN8@Render2DTr
	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR tv68[ebp], xmm0
	jmp	SHORT $LN9@Render2DTr
$LN8@Render2DTr:
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR tv68[ebp], xmm0
$LN9@Render2DTr:
	movss	xmm0, DWORD PTR tv68[ebp]
	movss	DWORD PTR tv69[ebp], xmm0
	jmp	SHORT $LN11@Render2DTr
$LN10@Render2DTr:
	movss	xmm0, DWORD PTR _x3$[ebp]
	movss	DWORD PTR tv69[ebp], xmm0
$LN11@Render2DTr:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv69[ebp]
	comiss	xmm0, DWORD PTR [eax+64]
	ja	$LN2@Render2DTr
	movss	xmm0, DWORD PTR _x2$[ebp]
	comiss	xmm0, DWORD PTR _x1$[ebp]
	jbe	SHORT $LN12@Render2DTr
	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR tv77[ebp], xmm0
	jmp	SHORT $LN13@Render2DTr
$LN12@Render2DTr:
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR tv77[ebp], xmm0
$LN13@Render2DTr:
	movss	xmm0, DWORD PTR _x3$[ebp]
	comiss	xmm0, DWORD PTR tv77[ebp]
	jbe	SHORT $LN16@Render2DTr
	movss	xmm0, DWORD PTR _x2$[ebp]
	comiss	xmm0, DWORD PTR _x1$[ebp]
	jbe	SHORT $LN14@Render2DTr
	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR tv80[ebp], xmm0
	jmp	SHORT $LN15@Render2DTr
$LN14@Render2DTr:
	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR tv80[ebp], xmm0
$LN15@Render2DTr:
	movss	xmm0, DWORD PTR tv80[ebp]
	movss	DWORD PTR tv81[ebp], xmm0
	jmp	SHORT $LN17@Render2DTr
$LN16@Render2DTr:
	movss	xmm0, DWORD PTR _x3$[ebp]
	movss	DWORD PTR tv81[ebp], xmm0
$LN17@Render2DTr:
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+60]
	comiss	xmm0, DWORD PTR tv81[ebp]
	ja	$LN2@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	comiss	xmm0, DWORD PTR _y2$[ebp]
	jbe	SHORT $LN18@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR tv89[ebp], xmm0
	jmp	SHORT $LN19@Render2DTr
$LN18@Render2DTr:
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR tv89[ebp], xmm0
$LN19@Render2DTr:
	movss	xmm0, DWORD PTR tv89[ebp]
	comiss	xmm0, DWORD PTR _y3$[ebp]
	jbe	SHORT $LN22@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	comiss	xmm0, DWORD PTR _y2$[ebp]
	jbe	SHORT $LN20@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR tv92[ebp], xmm0
	jmp	SHORT $LN21@Render2DTr
$LN20@Render2DTr:
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR tv92[ebp], xmm0
$LN21@Render2DTr:
	movss	xmm0, DWORD PTR tv92[ebp]
	movss	DWORD PTR tv93[ebp], xmm0
	jmp	SHORT $LN23@Render2DTr
$LN22@Render2DTr:
	movss	xmm0, DWORD PTR _y3$[ebp]
	movss	DWORD PTR tv93[ebp], xmm0
$LN23@Render2DTr:
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv93[ebp]
	comiss	xmm0, DWORD PTR [edx+56]
	ja	SHORT $LN2@Render2DTr
	movss	xmm0, DWORD PTR _y2$[ebp]
	comiss	xmm0, DWORD PTR _y1$[ebp]
	jbe	SHORT $LN24@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR tv133[ebp], xmm0
	jmp	SHORT $LN25@Render2DTr
$LN24@Render2DTr:
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR tv133[ebp], xmm0
$LN25@Render2DTr:
	movss	xmm0, DWORD PTR _y3$[ebp]
	comiss	xmm0, DWORD PTR tv133[ebp]
	jbe	SHORT $LN28@Render2DTr
	movss	xmm0, DWORD PTR _y2$[ebp]
	comiss	xmm0, DWORD PTR _y1$[ebp]
	jbe	SHORT $LN26@Render2DTr
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR tv136[ebp], xmm0
	jmp	SHORT $LN27@Render2DTr
$LN26@Render2DTr:
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR tv136[ebp], xmm0
$LN27@Render2DTr:
	movss	xmm0, DWORD PTR tv136[ebp]
	movss	DWORD PTR tv137[ebp], xmm0
	jmp	SHORT $LN29@Render2DTr
$LN28@Render2DTr:
	movss	xmm0, DWORD PTR _y3$[ebp]
	movss	DWORD PTR tv137[ebp], xmm0
$LN29@Render2DTr:
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+52]
	comiss	xmm0, DWORD PTR tv137[ebp]
	jbe	SHORT $LN3@Render2DTr
$LN2@Render2DTr:

; 193  :       return;

	jmp	$LN4@Render2DTr
$LN3@Render2DTr:

; 194  : 
; 195  : 	// Package up the tri's coordinates
; 196  : 	verts[0].x = x1 + OffsetX;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x1$[ebp]
	addss	xmm0, DWORD PTR [ecx+262832]
	mov	edx, 8
	imul	edx, 0
	movss	DWORD PTR _verts$[ebp+edx], xmm0

; 197  : 	verts[0].y = y1 + OffsetY;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y1$[ebp]
	addss	xmm0, DWORD PTR [eax+262836]
	mov	ecx, 8
	imul	ecx, 0
	movss	DWORD PTR _verts$[ebp+ecx+4], xmm0

; 198  : 	verts[1].x = x2 + OffsetX;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x2$[ebp]
	addss	xmm0, DWORD PTR [edx+262832]
	mov	eax, 8
	shl	eax, 0
	movss	DWORD PTR _verts$[ebp+eax], xmm0

; 199  : 	verts[1].y = y2 + OffsetY;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR [ecx+262836]
	mov	edx, 8
	shl	edx, 0
	movss	DWORD PTR _verts$[ebp+edx+4], xmm0

; 200  : 	verts[2].x = x3 + OffsetX;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x3$[ebp]
	addss	xmm0, DWORD PTR [eax+262832]
	mov	ecx, 8
	shl	ecx, 1
	movss	DWORD PTR _verts$[ebp+ecx], xmm0

; 201  : 	verts[2].y = y3 + OffsetY;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y3$[ebp]
	addss	xmm0, DWORD PTR [edx+262836]
	mov	eax, 8
	shl	eax, 1
	movss	DWORD PTR _verts$[ebp+eax+4], xmm0

; 202  : 
; 203  : 	// Draw the triangle
; 204  : //	context.RestoreState( STATE_ALPHA_SOLID );
; 205  : 	if(ForceAlpha) context.RestoreState(STATE_CHROMA_TEXTURE_GOURAUD2);						// COBRA - RED - Alpha Option

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+96]
	test	edx, edx
	je	SHORT $LN1@Render2DTr
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN1@Render2DTr:

; 206  : 	context.DrawPrimitive(MPR_PRM_TRIANGLES, 0, 3, verts, sizeof(verts[0]));

	push	8
	lea	eax, DWORD PTR _verts$[ebp]
	push	eax
	push	3
	push	0
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?DrawPrimitive@ContextMPR@@QAEXHGGPAUMPRVtx_t@@G@Z ; ContextMPR::DrawPrimitive
$LN4@Render2DTr:

; 207  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Render2DTri@Render2D@@UAEXMMMMMM@Z ENDP		; Render2D::Render2DTri
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
?Render2DLine@Render2D@@UAEXMMMM@Z PROC			; Render2D::Render2DLine
; _this$ = ecx

; 172  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 	if(ForceAlpha) context.RestoreState(STATE_CHROMA_TEXTURE_GOURAUD2);						// COBRA - RED - Alpha Option

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN1@Render2DLi
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN1@Render2DLi:

; 174  : 	context.Draw2DLine(x1 + (int)OffsetX, y1 + (int)OffsetY, x2 + (int)OffsetX, y2 + (int)OffsetY);

	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+262836]
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _y2$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+262832]
	cvtsi2ss xmm0, edx
	addss	xmm0, DWORD PTR _x2$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+262836]
	cvtsi2ss xmm0, ecx
	addss	xmm0, DWORD PTR _y1$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+262832]
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _x1$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Draw2DLine@ContextMPR@@QAEXMMMM@Z	; ContextMPR::Draw2DLine

; 175  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Render2DLine@Render2D@@UAEXMMMM@Z ENDP			; Render2D::Render2DLine
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
?Render2DPoint@Render2D@@UAEXMM@Z PROC			; Render2D::Render2DPoint
; _this$ = ecx

; 161  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 	if(ForceAlpha) context.RestoreState(STATE_ALPHA_SOLID);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	test	ecx, ecx
	je	SHORT $LN1@Render2DPo
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN1@Render2DPo:

; 163  : 	context.Draw2DPoint(x1 + (int)OffsetX, y1 + (int)OffsetY);

	mov	edx, DWORD PTR _this$[ebp]
	cvttss2si eax, DWORD PTR [edx+262836]
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR _y1$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+262832]
	cvtsi2ss xmm0, edx
	addss	xmm0, DWORD PTR _x1$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Draw2DPoint@ContextMPR@@QAEXMM@Z	; ContextMPR::Draw2DPoint

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Render2DPoint@Render2D@@UAEXMM@Z ENDP			; Render2D::Render2DPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_l$ = 8							; size = 4
_t$ = 12						; size = 4
_r$ = 16						; size = 4
_b$ = 20						; size = 4
?SetViewport@Render2D@@UAEXMMMM@Z PROC			; Render2D::SetViewport
; _this$ = ecx

; 142  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 143  : 	// First call the base classes version of this function
; 144  : 	VirtualDisplay::SetViewport( l, t, r, b );

	push	ecx
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _t$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _l$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetViewport@VirtualDisplay@@UAEXMMMM@Z	; VirtualDisplay::SetViewport

; 145  : 		
; 146  : 	// Send the new clipping region to MPR
; 147  : 	// (top/right inclusive, bottom/left exclusive)
; 148  : 	context.SetState( MPR_STA_ENABLES, MPR_SE_SCISSORING );

	push	32					; 00000020H
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState

; 149  : 	context.SetState( MPR_STA_SCISSOR_TOP,		FloatToInt32((float)floor(topPixel)) );

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+52]
	movss	DWORD PTR [esp], xmm0
	call	?floor@@YAMM@Z				; floor
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState

; 150  : 	context.SetState( MPR_STA_SCISSOR_LEFT,		FloatToInt32((float)floor(leftPixel)) );

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR [esp], xmm0
	call	?floor@@YAMM@Z				; floor
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState

; 151  : 	context.SetState( MPR_STA_SCISSOR_RIGHT,	FloatToInt32((float)ceil(rightPixel)) );

	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR [esp], xmm0
	call	?ceil@@YAMM@Z				; ceil
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState

; 152  : 	context.SetState( MPR_STA_SCISSOR_BOTTOM,	FloatToInt32((float)ceil(bottomPixel)) );

	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR [esp], xmm0
	call	?ceil@@YAMM@Z				; ceil
	fstp	DWORD PTR [esp]
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?SetState@ContextMPR@@QAEXGK@Z		; ContextMPR::SetState

; 153  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetViewport@Render2D@@UAEXMMMM@Z ENDP			; Render2D::SetViewport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndDraw@Render2D@@UAEXXZ PROC				; Render2D::EndDraw
; _this$ = ecx

; 132  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 133  : //	DX - YELLOW BUG FIX - RED
; 134  : //	ShiAssert(image);
; 135  : 	context.EndDraw();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?EndDraw@ContextMPR@@QAEXXZ		; ContextMPR::EndDraw

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndDraw@Render2D@@UAEXXZ ENDP				; Render2D::EndDraw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartDraw@Render2D@@UAEXXZ PROC			; Render2D::StartDraw
; _this$ = ecx

; 122  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 123  : //	DX - YELLOW BUG FIX - RED
; 124  : //	ShiAssert(image);
; 125  : 	context.StartDraw();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?StartDraw@ContextMPR@@QAEXXZ		; ContextMPR::StartDraw

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?StartDraw@Render2D@@UAEXXZ ENDP			; Render2D::StartDraw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_imageBuffer$ = 8					; size = 4
?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z PROC	; Render2D::SetImageBuffer
; _this$ = ecx

; 87   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 88   : 	// Remember who our new image buffer is, and tell MPR about the change
; 89   : 	image = imageBuffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _imageBuffer$[ebp]
	mov	DWORD PTR [eax+48], ecx

; 90   : 	context.NewImageBuffer( (DWORD)imageBuffer->targetSurface() );

	mov	ecx, DWORD PTR _imageBuffer$[ebp]
	call	?targetSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ ; ImageBuffer::targetSurface
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?NewImageBuffer@ContextMPR@@QAEXI@Z	; ContextMPR::NewImageBuffer

; 91   : 
; 92   : 	// This shouldn't be required, but _might_ be
; 93   : //	context.InvalidateState();
; 94   : 	context.RestoreState( STATE_SOLID );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 95   : 
; 96   : 	// Store key properties of our target buffer
; 97   : 	xRes = image->targetXres();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?targetXres@ImageBuffer@@QAEHXZ		; ImageBuffer::targetXres
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 98   : 	yRes = image->targetYres();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?targetYres@ImageBuffer@@QAEHXZ		; ImageBuffer::targetYres
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 99   : 
; 100  : 	// ASSO: reset adjusted RTT viewport
; 101  : 	tLeft = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262756], 0

; 102  : 	tTop = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+262760], 0

; 103  : 	tRight = xRes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+262764], eax

; 104  : 	tBottom = yRes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+262768], eax

; 105  : 	txRes = xRes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+262772], eax

; 106  : 	tyRes = yRes;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+262776], eax

; 107  : 
; 108  : 
; 109  : 	// Setup the default viewport
; 110  : 	SetViewport( -1.0f, 1.0f, 1.0f, -1.0f );

	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax

; 111  : 
; 112  : 	// Setup the default offset and rotation
; 113  : 	CenterOriginInViewport();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CenterOriginInViewport@VirtualDisplay@@QAEXXZ ; VirtualDisplay::CenterOriginInViewport

; 114  : 	ZeroRotationAboutOrigin();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ZeroRotationAboutOrigin@VirtualDisplay@@QAEXXZ ; VirtualDisplay::ZeroRotationAboutOrigin

; 115  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetImageBuffer@Render2D@@UAEXPAVImageBuffer@@@Z ENDP	; Render2D::SetImageBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Cleanup@Render2D@@UAEXXZ PROC				; Render2D::Cleanup
; _this$ = ecx

; 75   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 76   : 	context.Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Cleanup@ContextMPR@@QAEXXZ		; ContextMPR::Cleanup

; 77   : 
; 78   : 	VirtualDisplay::Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@VirtualDisplay@@UAEXXZ		; VirtualDisplay::Cleanup

; 79   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@Render2D@@UAEXXZ ENDP				; Render2D::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_result$ = -592						; size = 4
_this$ = -588						; size = 4
_buffer$1 = -584					; size = 580
__$ArrayPad$ = -4					; size = 4
_imageBuffer$ = 8					; size = 4
?Setup@Render2D@@UAEXPAVImageBuffer@@@Z PROC		; Render2D::Setup
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 592				; 00000250H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 	BOOL	result;
; 35   : 
; 36   : 	image = imageBuffer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _imageBuffer$[ebp]
	mov	DWORD PTR [eax+48], ecx

; 37   : 
; 38   : 	// Create the MPR rendering context (frame buffer, etc.)
; 39   : 
; 40   : 	// OW
; 41   : 	//result = context.Setup( (DWORD)imageBuffer->targetSurface(), (DWORD)imageBuffer->GetDisplayDevice()->GetMPRdevice());
; 42   : 	result = context.Setup( imageBuffer, imageBuffer->GetDisplayDevice()->GetDefaultRC());

	mov	ecx, DWORD PTR _imageBuffer$[ebp]
	call	?GetDisplayDevice@ImageBuffer@@QAEPAVDisplayDevice@@XZ ; ImageBuffer::GetDisplayDevice
	mov	ecx, eax
	call	?GetDefaultRC@DisplayDevice@@QAEPAVDXContext@@XZ ; DisplayDevice::GetDefaultRC
	push	eax
	mov	edx, DWORD PTR _imageBuffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Setup@ContextMPR@@QAEHPAVImageBuffer@@PAVDXContext@@@Z ; ContextMPR::Setup
	mov	DWORD PTR _result$[ebp], eax

; 43   : 
; 44   : 	if ( !result ) {

	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@Setup

; 45   : 		ShiError( "Failed to setup rendering context" );

	push	OFFSET ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
	push	OFFSET ??_C@_0N@ILLGEKHE@Render2d?4cpp?$AA@
	push	45					; 0000002dH
	push	OFFSET ??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$1[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H
	push	0
	push	OFFSET ??_C@_0CC@BBHPKCOA@Failed?5to?5setup?5rendering?5contex@
	lea	ecx, DWORD PTR _buffer$1[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	push	-1
	call	_exit
$LN1@Setup:

; 46   : 	}
; 47   : 
; 48   : 	// Store key properties of our target buffer
; 49   : 	xRes = image->targetXres();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?targetXres@ImageBuffer@@QAEHXZ		; ImageBuffer::targetXres
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 50   : 	yRes = image->targetYres();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?targetYres@ImageBuffer@@QAEHXZ		; ImageBuffer::targetYres
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 51   : 	OffsetX=OffsetY=0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+262836], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+262832], xmm0

; 52   : 	
; 53   : 	// ASSO: reset adjusted RTT viewport
; 54   : 	tLeft = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+262756], 0

; 55   : 	tTop = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+262760], 0

; 56   : 	tRight = xRes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+262764], edx

; 57   : 	tBottom = yRes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+262768], edx

; 58   : 	txRes = xRes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+262772], edx

; 59   : 	tyRes = yRes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+262776], edx

; 60   : 	
; 61   : 	// Set the renderer's default foreground and background colors
; 62   : 	SetColor( 0xFFFFFFFF );

	push	-1
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 63   : 	SetBackground( 0xFF000000 );

	push	-16777216				; ff000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax

; 64   : 
; 65   : 	// Call our base classes setup function (must come AFTER xRes and Yres have been set)
; 66   : 	VirtualDisplay::Setup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Setup@VirtualDisplay@@UAEXXZ		; VirtualDisplay::Setup
$LN2@Setup:

; 67   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?Setup@Render2D@@UAEXPAVImageBuffer@@@Z ENDP		; Render2D::Setup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?ZeroRotationAboutOrigin@VirtualDisplay@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ZeroRotationAboutOrigin@VirtualDisplay@@QAEXXZ PROC	; VirtualDisplay::ZeroRotationAboutOrigin, COMDAT
; _this$ = ecx

; 144  :     void ZeroRotationAboutOrigin( void ) { dmatrix.rotation01 = dmatrix.rotation10 = 0.0f, dmatrix.rotation00 = dmatrix.rotation11 = 1.0f; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+84], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+80], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+88], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+76], xmm0
	mov	esp, ebp
	pop	ebp
	ret	0
?ZeroRotationAboutOrigin@VirtualDisplay@@QAEXXZ ENDP	; VirtualDisplay::ZeroRotationAboutOrigin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\display.h
;	COMDAT ?CenterOriginInViewport@VirtualDisplay@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CenterOriginInViewport@VirtualDisplay@@QAEXXZ PROC	; VirtualDisplay::CenterOriginInViewport, COMDAT
; _this$ = ecx

; 143  : 	void CenterOriginInViewport( void )  { dmatrix.translationX = 0.0f; dmatrix.translationY = 0.0f; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+68], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+72], xmm0
	mov	esp, ebp
	pop	ebp
	ret	0
?CenterOriginInViewport@VirtualDisplay@@QAEXXZ ENDP	; VirtualDisplay::CenterOriginInViewport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\renderer\render2d.cpp
_TEXT	SEGMENT
_n$1 = -56						; size = 4
_trail$ = -52						; size = 4
_size$ = -48						; size = 4
_lead$ = -44						; size = 4
_left$ = -40						; size = 4
_top$ = -36						; size = 4
$T2 = -32						; size = 4
_file$ = -28						; size = 4
_width$ = -24						; size = 4
_height$ = -20						; size = 4
_fOffset$3 = -16					; size = 4
_str$ = -12						; size = 4
_idx$ = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_fileName$ = 12						; size = 4
?ReadFontMetrics@FontSet@@QAEHHPAD@Z PROC		; FontSet::ReadFontMetrics
; _this$ = ecx

; 946  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 947  : 	int
; 948  : 		file,
; 949  : 		size,
; 950  : 		idx, 
; 951  : 		top,
; 952  : 		left,
; 953  : 		width,
; 954  : 		height,
; 955  : 		lead,
; 956  : 		trail;
; 957  : 
; 958  : 	char
; 959  : 		*str;
; 960  : 
; 961  : 	static char
; 962  : 		buffer[16000];
; 963  : 
; 964  : 	ShiAssert(index < NUM_FONT_RESOLUTIONS && index >= 0);
; 965  : 	ShiAssert(FALSE == IsBadStringPtr(fileName, _MAX_PATH));
; 966  : 
; 967  : 	file = GR_OPEN (fileName, O_RDONLY);

	push	0
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_open
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax

; 968  : 
; 969  : 	if (file >= 0)

	cmp	DWORD PTR _file$[ebp], 0
	jl	$LN8@ReadFontMe

; 970  : 	{
; 971  : 		size = GR_READ (file, buffer, 15999);

	push	15999					; 00003e7fH
	push	OFFSET ?buffer@?1??ReadFontMetrics@FontSet@@QAEHHPAD@Z@4PADA
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _size$[ebp], eax

; 972  : 
; 973  : 		buffer[size] = 0;

	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 16000		; 00003e80H
	jae	SHORT $LN11@ReadFontMe
	jmp	SHORT $LN12@ReadFontMe
$LN11@ReadFontMe:
	call	___report_rangecheckfailure
$LN12@ReadFontMe:
	mov	eax, DWORD PTR $T2[ebp]
	mov	BYTE PTR ?buffer@?1??ReadFontMetrics@FontSet@@QAEHHPAD@Z@4PADA[eax], 0

; 974  : 
; 975  : 		str = buffer;

	mov	DWORD PTR _str$[ebp], OFFSET ?buffer@?1??ReadFontMetrics@FontSet@@QAEHHPAD@Z@4PADA
$LN7@ReadFontMe:

; 976  : 
; 977  : 		while (str && *str)

	cmp	DWORD PTR _str$[ebp], 0
	je	$LN6@ReadFontMe
	mov	ecx, DWORD PTR _str$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	$LN6@ReadFontMe

; 978  : 		{
; 979  : 			int n = sscanf (str, "%d %d %d %d %d %d %d", &idx, &left, &top, &width, &height, &lead, &trail);

	lea	eax, DWORD PTR _trail$[ebp]
	push	eax
	lea	ecx, DWORD PTR _lead$[ebp]
	push	ecx
	lea	edx, DWORD PTR _height$[ebp]
	push	edx
	lea	eax, DWORD PTR _width$[ebp]
	push	eax
	lea	ecx, DWORD PTR _top$[ebp]
	push	ecx
	lea	edx, DWORD PTR _left$[ebp]
	push	edx
	lea	eax, DWORD PTR _idx$[ebp]
	push	eax
	push	OFFSET ??_C@_0BF@IBADGEN@?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?$CFd?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sscanf
	add	esp, 36					; 00000024H
	mov	DWORD PTR _n$1[ebp], eax

; 980  : 			ShiAssert(n == 7);
; 981  : 
; 982  : 			//JAM 22Dec03 - Not anymore, all modern video cards do automatic biasing.
; 983  : 			//TODO: Add global cfg variable for older cards.
; 984  : 			//			if(DisplayOptions.bFontTexelAlignment)
; 985  : 			if(g_bOldFontTexelFix)		//Wombat778 4-01-04	 complete fix in drawprimitive

	movzx	edx, BYTE PTR ?g_bOldFontTexelFix@@3_NA	; g_bOldFontTexelFix
	test	edx, edx
	je	$LN5@ReadFontMe

; 986  : 			{
; 987  : 				// OW: shift u,v by a half texel. if you dont do that and the card filters it fetches the wrong texels
; 988  : 				// because if you specify 1.0 you're saying that you want the far-right edge of this texel
; 989  : 				// and not the center of the texel like you thought
; 990  : 				float fOffset = (1.0f / 256.0F) / 2.0f;

	movss	xmm0, DWORD PTR __real@3b000000
	movss	DWORD PTR _fOffset$3[ebp], xmm0

; 991  : 
; 992  : 				fontData[index][idx].top = top / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _top$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	movss	DWORD PTR [edx+eax], xmm0

; 993  : 				fontData[index][idx].top += fOffset;

	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	xmm0, DWORD PTR [eax+ecx]
	addss	xmm0, DWORD PTR _fOffset$3[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+96]
	movss	DWORD PTR [eax+edx], xmm0

; 994  : 
; 995  : 				fontData[index][idx].left = left / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _left$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	DWORD PTR [eax+ecx+4], xmm0

; 996  : 				fontData[index][idx].left += fOffset;

	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	movss	xmm0, DWORD PTR [ecx+edx+4]
	addss	xmm0, DWORD PTR _fOffset$3[ebp]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+96]
	movss	DWORD PTR [ecx+eax+4], xmm0

; 997  : 
; 998  : 				fontData[index][idx].width = width / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _width$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	movss	DWORD PTR [ecx+edx+8], xmm0

; 999  : 				fontData[index][idx].width -= fOffset;

	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	movss	xmm0, DWORD PTR [edx+eax+8]
	subss	xmm0, DWORD PTR _fOffset$3[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [eax+edx+96]
	movss	DWORD PTR [edx+ecx+8], xmm0

; 1000 : 
; 1001 : 				fontData[index][idx].height = height / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _height$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	movss	DWORD PTR [edx+eax+12], xmm0

; 1002 : 				fontData[index][idx].height -= fOffset;

	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	xmm0, DWORD PTR [eax+ecx+12]
	subss	xmm0, DWORD PTR _fOffset$3[ebp]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+96]
	movss	DWORD PTR [eax+edx+12], xmm0

; 1003 : 
; 1004 : 				fontData[index][idx].pixelHeight = (float)height;

	cvtsi2ss xmm0, DWORD PTR _height$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	DWORD PTR [eax+ecx+20], xmm0

; 1005 : 				fontData[index][idx].pixelWidth = (float)(width + lead);

	mov	edx, DWORD PTR _width$[ebp]
	add	edx, DWORD PTR _lead$[ebp]
	cvtsi2ss xmm0, edx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	movss	DWORD PTR [edx+eax+16], xmm0

; 1006 : 			}
; 1007 : 			else

	jmp	$LN4@ReadFontMe
$LN5@ReadFontMe:

; 1008 : 			{
; 1009 : 				fontData[index][idx].top = top / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _top$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	DWORD PTR [eax+ecx], xmm0

; 1010 : 				fontData[index][idx].left = left / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _left$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	movss	DWORD PTR [ecx+edx+4], xmm0

; 1011 : 				fontData[index][idx].width = width / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _width$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 6144				; 00001800H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+96]
	mov	eax, DWORD PTR _idx$[ebp]
	imul	eax, 24					; 00000018H
	movss	DWORD PTR [edx+eax+8], xmm0

; 1012 : 				fontData[index][idx].height = height / 256.0F;

	cvtsi2ss xmm0, DWORD PTR _height$[ebp]
	divss	xmm0, DWORD PTR __real@43800000
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	DWORD PTR [eax+ecx+12], xmm0

; 1013 : 				fontData[index][idx].pixelHeight = (float)height;

	cvtsi2ss xmm0, DWORD PTR _height$[ebp]
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 6144				; 00001800H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+96]
	mov	edx, DWORD PTR _idx$[ebp]
	imul	edx, 24					; 00000018H
	movss	DWORD PTR [ecx+edx+20], xmm0

; 1014 : 				fontData[index][idx].pixelWidth = (float)(width + lead);

	mov	eax, DWORD PTR _width$[ebp]
	add	eax, DWORD PTR _lead$[ebp]
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _index$[ebp]
	imul	ecx, 6144				; 00001800H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+96]
	mov	ecx, DWORD PTR _idx$[ebp]
	imul	ecx, 24					; 00000018H
	movss	DWORD PTR [eax+ecx+16], xmm0
$LN4@ReadFontMe:

; 1015 : 			}
; 1016 : 			str = strstr (str, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	?strstr@@YAPADPADPBD@Z			; strstr
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
$LN3@ReadFontMe:

; 1017 : 
; 1018 : 			while ((str) && ((*str == '\n') || (*str == '\r')))

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN2@ReadFontMe
	mov	eax, DWORD PTR _str$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN1@ReadFontMe
	mov	edx, DWORD PTR _str$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN2@ReadFontMe
$LN1@ReadFontMe:

; 1019 : 			{
; 1020 : 				str ++;

	mov	ecx, DWORD PTR _str$[ebp]
	add	ecx, 1
	mov	DWORD PTR _str$[ebp], ecx

; 1021 : 			}

	jmp	SHORT $LN3@ReadFontMe
$LN2@ReadFontMe:

; 1022 : 		}

	jmp	$LN7@ReadFontMe
$LN6@ReadFontMe:

; 1023 : 
; 1024 : 		GR_CLOSE (file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	call	_close
	add	esp, 4

; 1025 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN9@ReadFontMe
$LN8@ReadFontMe:

; 1026 : 	}
; 1027 : 	return 0;

	xor	eax, eax
$LN9@ReadFontMe:

; 1028 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ReadFontMetrics@FontSet@@QAEHHPAD@Z ENDP		; FontSet::ReadFontMetrics
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tex.h
;	COMDAT ?TexHandle@Texture@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TexHandle@Texture@@QAEKXZ PROC				; Texture::TexHandle, COMDAT
; _this$ = ecx

; 60   : 	DWORD TexHandle() { return (DWORD) texHandle; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?TexHandle@Texture@@QAEKXZ ENDP				; Texture::TexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\device.h
;	COMDAT ?GetDefaultRC@DisplayDevice@@QAEPAVDXContext@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDefaultRC@DisplayDevice@@QAEPAVDXContext@@XZ PROC	; DisplayDevice::GetDefaultRC, COMDAT
; _this$ = ecx

; 29   : 	DXContext *GetDefaultRC( void )			{ return m_DXCtx; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultRC@DisplayDevice@@QAEPAVDXContext@@XZ ENDP	; DisplayDevice::GetDefaultRC
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\imagebuf.h
;	COMDAT ?targetYres@ImageBuffer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?targetYres@ImageBuffer@@QAEHXZ PROC			; ImageBuffer::targetYres, COMDAT
; _this$ = ecx

; 46   : 	int	targetYres()	{ return height; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+296]
	mov	esp, ebp
	pop	ebp
	ret	0
?targetYres@ImageBuffer@@QAEHXZ ENDP			; ImageBuffer::targetYres
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\imagebuf.h
;	COMDAT ?targetXres@ImageBuffer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?targetXres@ImageBuffer@@QAEHXZ PROC			; ImageBuffer::targetXres, COMDAT
; _this$ = ecx

; 45   : 	int targetXres()	{ return width; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+292]
	mov	esp, ebp
	pop	ebp
	ret	0
?targetXres@ImageBuffer@@QAEHXZ ENDP			; ImageBuffer::targetXres
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\imagebuf.h
;	COMDAT ?targetSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?targetSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ PROC ; ImageBuffer::targetSurface, COMDAT
; _this$ = ecx

; 42   : 	IDirectDrawSurface7 *targetSurface()	{ return m_pDDSBack; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+164]
	mov	esp, ebp
	pop	ebp
	ret	0
?targetSurface@ImageBuffer@@QAEPAUIDirectDrawSurface7@@XZ ENDP ; ImageBuffer::targetSurface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\imagebuf.h
;	COMDAT ?GetDisplayDevice@ImageBuffer@@QAEPAVDisplayDevice@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDisplayDevice@ImageBuffer@@QAEPAVDisplayDevice@@XZ PROC ; ImageBuffer::GetDisplayDevice, COMDAT
; _this$ = ecx

; 41   : 	DisplayDevice *GetDisplayDevice()	{ return device; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDisplayDevice@ImageBuffer@@QAEPAVDisplayDevice@@XZ ENDP ; ImageBuffer::GetDisplayDevice
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\image.h
;	COMDAT ?ReadTextureImage@@YAHPAVCImageFileMemory@@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_i$ = -4						; size = 4
_fi$ = 8						; size = 4
?ReadTextureImage@@YAHPAVCImageFileMemory@@@Z PROC	; ReadTextureImage, COMDAT

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 180  : 	GLint	i;
; 181  : 	switch (fi -> imageType) {

	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR tv65[ebp]
	sub	edx, 1
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 6
	ja	$LN1@ReadTextur
	mov	eax, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN13@ReadTextur[eax*4]
$LN8@ReadTextur:

; 182  : 		case IMAGE_TYPE_GIF:
; 183  : 			i = UnpackGIF (fi);

	mov	ecx, DWORD PTR _fi$[ebp]
	push	ecx
	call	?UnpackGIF@@YAHPAVCImageFileMemory@@@Z	; UnpackGIF
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 184  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN7@ReadTextur:

; 185  : 		case IMAGE_TYPE_LBM:
; 186  : 			i = UnpackLBM (fi);

	mov	edx, DWORD PTR _fi$[ebp]
	push	edx
	call	?UnpackLBM@@YAHPAVCImageFileMemory@@@Z	; UnpackLBM
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 187  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN6@ReadTextur:

; 188  : 		case IMAGE_TYPE_PCX:
; 189  : 			i = UnpackPCX (fi);

	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	call	?UnpackPCX@@YAHPAVCImageFileMemory@@@Z	; UnpackPCX
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 190  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN5@ReadTextur:

; 191  : 		case IMAGE_TYPE_BMP:
; 192  : 			i = ReadBMP (fi);

	mov	ecx, DWORD PTR _fi$[ebp]
	push	ecx
	call	?ReadBMP@@YAHPAVCImageFileMemory@@@Z	; ReadBMP
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 193  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN4@ReadTextur:

; 194  : 		case IMAGE_TYPE_APL:
; 195  : 			i = ReadAPL (fi);

	mov	edx, DWORD PTR _fi$[ebp]
	push	edx
	call	?ReadAPL@@YAHPAVCImageFileMemory@@@Z	; ReadAPL
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 196  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN3@ReadTextur:

; 197  : 		case IMAGE_TYPE_TGA:
; 198  : 			i = ReadTGA (fi);

	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	call	?ReadTGA@@YAHPAVCImageFileMemory@@@Z	; ReadTGA
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 199  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN2@ReadTextur:

; 200  : 
; 201  : 		//JAM 22Sep03
; 202  : 		case IMAGE_TYPE_DDS:
; 203  : 			i = ReadDDS (fi);

	mov	ecx, DWORD PTR _fi$[ebp]
	push	ecx
	call	?ReadDDS@@YAHPAVCImageFileMemory@@@Z	; ReadDDS
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax

; 204  : 			break;

	jmp	SHORT $LN9@ReadTextur
$LN1@ReadTextur:

; 205  : 		//JAM
; 206  : 
; 207  : 		default:
; 208  : 			i = NO_CODE;

	mov	DWORD PTR _i$[ebp], -1
$LN9@ReadTextur:

; 209  : 			break;
; 210  : 	}
; 211  : 	fi -> glCloseFileMem ();

	mov	ecx, DWORD PTR _fi$[ebp]
	call	?glCloseFileMem@CFileMemory@@QAEXXZ	; CFileMemory::glCloseFileMem

; 212  : 	return i;

	mov	eax, DWORD PTR _i$[ebp]

; 213  : };

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@ReadTextur:
	DD	$LN8@ReadTextur
	DD	$LN7@ReadTextur
	DD	$LN6@ReadTextur
	DD	$LN5@ReadTextur
	DD	$LN4@ReadTextur
	DD	$LN3@ReadTextur
	DD	$LN2@ReadTextur
?ReadTextureImage@@YAHPAVCImageFileMemory@@@Z ENDP	; ReadTextureImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\image.h
;	COMDAT ?CheckImageType@@YAHPBD@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_ext$ = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
_file$ = 8						; size = 4
?CheckImageType@@YAHPBD@Z PROC				; CheckImageType, COMDAT

; 149  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 150  : 	char	ext[10];
; 151  : 	GLint	i;
; 152  : 
; 153  : 	glGetFileExtension (file, ext);

	lea	eax, DWORD PTR _ext$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	?glGetFileExtension@@YAXPBDPAD@Z	; glGetFileExtension
	add	esp, 8

; 154  : 	if (!strnicmp (ext, "GIF", 3)) 

	push	3
	push	OFFSET ??_C@_03BBABOKL@GIF?$AA@
	lea	edx, DWORD PTR _ext$[ebp]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN14@CheckImage

; 155  : 		i = IMAGE_TYPE_GIF;

	mov	DWORD PTR _i$[ebp], 1
	jmp	$LN13@CheckImage
$LN14@CheckImage:

; 156  : 	else if (!strnicmp (ext,"LBM",3)) 

	push	3
	push	OFFSET ??_C@_03DJLAKPIA@LBM?$AA@
	lea	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN12@CheckImage

; 157  : 		i = IMAGE_TYPE_LBM;

	mov	DWORD PTR _i$[ebp], 2
	jmp	$LN13@CheckImage
$LN12@CheckImage:

; 158  : 	else if (!strnicmp (ext,"PCX",3)) 

	push	3
	push	OFFSET ??_C@_03BFAIMLIE@PCX?$AA@
	lea	ecx, DWORD PTR _ext$[ebp]
	push	ecx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN10@CheckImage

; 159  : 		i = IMAGE_TYPE_PCX;

	mov	DWORD PTR _i$[ebp], 3
	jmp	$LN13@CheckImage
$LN10@CheckImage:

; 160  : 	else if (!strnicmp (ext,"BMP",3)) 

	push	3
	push	OFFSET ??_C@_03CNFPPDJC@BMP?$AA@
	lea	edx, DWORD PTR _ext$[ebp]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@CheckImage

; 161  : 		i = IMAGE_TYPE_BMP;

	mov	DWORD PTR _i$[ebp], 4
	jmp	SHORT $LN13@CheckImage
$LN8@CheckImage:

; 162  : 	else if (!strnicmp (ext,"APL",3)) 

	push	3
	push	OFFSET ??_C@_03MNGDDBAC@APL?$AA@
	lea	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@CheckImage

; 163  : 		i = IMAGE_TYPE_APL;

	mov	DWORD PTR _i$[ebp], 5
	jmp	SHORT $LN13@CheckImage
$LN6@CheckImage:

; 164  : 	else if (!strnicmp (ext,"TGA",3)) 

	push	3
	push	OFFSET ??_C@_03GGDFNBH@TGA?$AA@
	lea	ecx, DWORD PTR _ext$[ebp]
	push	ecx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@CheckImage

; 165  : 		i = IMAGE_TYPE_TGA;

	mov	DWORD PTR _i$[ebp], 6
	jmp	SHORT $LN13@CheckImage
$LN4@CheckImage:

; 166  : 
; 167  : 	//JAM 22Sep03
; 168  : 	else if (!strnicmp (ext,"DDS",3))

	push	3
	push	OFFSET ??_C@_03CMMIMEAC@DDS?$AA@
	lea	edx, DWORD PTR _ext$[ebp]
	push	edx
	call	_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@CheckImage

; 169  : 		i = IMAGE_TYPE_DDS;

	mov	DWORD PTR _i$[ebp], 7

; 170  : 	//JAM
; 171  : 
; 172  : 	else

	jmp	SHORT $LN13@CheckImage
$LN2@CheckImage:

; 173  : 		i = IMAGE_TYPE_UNKNOWN;

	mov	DWORD PTR _i$[ebp], -1
$LN13@CheckImage:

; 174  : 
; 175  : 	return	i;

	mov	eax, DWORD PTR _i$[ebp]

; 176  : };

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckImageType@@YAHPBD@Z ENDP				; CheckImageType
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCImageFileMemory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCImageFileMemory@@UAEPAXI@Z PROC			; CImageFileMemory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CImageFileMemory@@UAE@XZ		; CImageFileMemory::~CImageFileMemory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCImageFileMemory@@UAEPAXI@Z ENDP			; CImageFileMemory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\filemem.h
;	COMDAT ??1CImageFileMemory@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CImageFileMemory@@UAE@XZ PROC			; CImageFileMemory::~CImageFileMemory, COMDAT
; _this$ = ecx

; 42   : 	virtual ~CImageFileMemory() {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CImageFileMemory@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileMemory@@UAE@XZ			; CFileMemory::~CFileMemory
	mov	esp, ebp
	pop	ebp
	ret	0
??1CImageFileMemory@@UAE@XZ ENDP			; CImageFileMemory::~CImageFileMemory
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCFileMemory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFileMemory@@UAEPAXI@Z PROC				; CFileMemory::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileMemory@@UAE@XZ			; CFileMemory::~CFileMemory
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCFileMemory@@UAEPAXI@Z ENDP				; CFileMemory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\filemem.h
;	COMDAT ??1CFileMemory@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileMemory@@UAE@XZ PROC				; CFileMemory::~CFileMemory, COMDAT
; _this$ = ecx

; 14   : 	virtual ~CFileMemory()	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFileMemory@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1CFileIO@@UAE@XZ			; CFileIO::~CFileIO
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileMemory@@UAE@XZ ENDP				; CFileMemory::~CFileMemory
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GCFileIO@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFileIO@@UAEPAXI@Z PROC				; CFileIO::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileIO@@UAE@XZ			; CFileIO::~CFileIO
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCFileIO@@UAEPAXI@Z ENDP				; CFileIO::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fileio.h
;	COMDAT ??1CFileIO@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileIO@@UAE@XZ PROC					; CFileIO::~CFileIO, COMDAT
; _this$ = ecx

; 25   : 	virtual ~CFileIO () {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFileIO@@6B@

; 26   : 		if (file != -1) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], -1
	je	SHORT $LN2@CFileIO

; 27   : 			closefile();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?closefile@CFileIO@@QAEXXZ		; CFileIO::closefile
$LN2@CFileIO:

; 28   : 		}
; 29   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileIO@@UAE@XZ ENDP					; CFileIO::~CFileIO
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\grinline.h
;	COMDAT ?glGetFileExtension@@YAXPBDPAD@Z
_TEXT	SEGMENT
_lastdot$ = -4						; size = 4
_file$ = 8						; size = 4
_ext$ = 12						; size = 4
?glGetFileExtension@@YAXPBDPAD@Z PROC			; glGetFileExtension, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 128  : #if 0
; 129  : 	char	prevchar, currchar, nextchar;
; 130  : 
; 131  : 	prevchar = '.';
; 132  : 	while (*file != 0) {
; 133  : 		currchar = *file++;
; 134  : 		nextchar = *file;
; 135  : 		if (currchar == '.' && 
; 136  : 			((prevchar != '.' && prevchar != '\\') || 
; 137  : 			 (nextchar != '.' && nextchar != '\\'))) break;
; 138  : 		prevchar = currchar;
; 139  : 	}
; 140  : #else
; 141  : 
; 142  : 
; 143  : // Visual C/C++ 2010 migration fix
; 144  : //pmvstrm this the change
; 145  : 	const char *lastdot;
; 146  : 
; 147  : //pmvstrm this is the original
; 148  : //char *lastdot;
; 149  : 
; 150  : 	lastdot = strrchr(file, '.');

	push	46					; 0000002eH
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_strrchr
	add	esp, 8
	mov	DWORD PTR _lastdot$[ebp], eax

; 151  : 
; 152  : 	if(lastdot) {

	cmp	DWORD PTR _lastdot$[ebp], 0
	je	SHORT $LN4@glGetFileE

; 153  : 		file = lastdot + 1;

	mov	ecx, DWORD PTR _lastdot$[ebp]
	add	ecx, 1
	mov	DWORD PTR _file$[ebp], ecx

; 154  : 	} else {

	jmp	SHORT $LN2@glGetFileE
$LN4@glGetFileE:

; 155  : 		file = file + strlen(file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _file$[ebp]
	mov	DWORD PTR _file$[ebp], eax
$LN2@glGetFileE:

; 156  : 	}
; 157  : #endif
; 158  : 
; 159  : 	while (*file) *ext++ = *file++;

	mov	eax, DWORD PTR _file$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@glGetFileE
	mov	edx, DWORD PTR _ext$[ebp]
	mov	eax, DWORD PTR _file$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _ext$[ebp]
	add	edx, 1
	mov	DWORD PTR _ext$[ebp], edx
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 1
	mov	DWORD PTR _file$[ebp], eax
	jmp	SHORT $LN2@glGetFileE
$LN1@glGetFileE:

; 160  : 	*ext = 0;

	mov	ecx, DWORD PTR _ext$[ebp]
	mov	BYTE PTR [ecx], 0

; 161  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?glGetFileExtension@@YAXPBDPAD@Z ENDP			; glGetFileExtension
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\grinline.h
;	COMDAT ?glReleaseMemory@@YAXPAX@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_memptr$ = 8						; size = 4
?glReleaseMemory@@YAXPAX@Z PROC				; glReleaseMemory, COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 33   : #ifdef USE_SH_POOLS
; 34   : 	if (memptr)
; 35   : 	{
; 36   : 		MemFreePtr( memptr );
; 37   : 	}
; 38   : #else
; 39   : 	if (memptr)

	cmp	DWORD PTR _memptr$[ebp], 0
	je	SHORT $LN2@glReleaseM

; 40   : 	{
; 41   : 		delete[] memptr;

	mov	eax, DWORD PTR _memptr$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@glReleaseM:

; 42   : 	}
; 43   : #endif
; 44   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?glReleaseMemory@@YAXPAX@Z ENDP				; glReleaseMemory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\string.h
;	COMDAT ?strstr@@YAPADPADPBD@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__SubStr$ = 12						; size = 4
?strstr@@YAPADPADPBD@Z PROC				; strstr, COMDAT

; 224  : 	{ return (char*)strstr((const char*)_Str, _SubStr); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __SubStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	_strstr
	add	esp, 8
	pop	ebp
	ret	0
?strstr@@YAPADPADPBD@Z ENDP				; strstr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?floor@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?floor@@YAMM@Z PROC					; floor, COMDAT

; 519  :         {return (floorf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_floorf
	add	esp, 4
	pop	ebp
	ret	0
?floor@@YAMM@Z ENDP					; floor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?ceil@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?ceil@@YAMM@Z PROC					; ceil, COMDAT

; 509  :         {return (ceilf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_ceilf
	add	esp, 4
	pop	ebp
	ret	0
?ceil@@YAMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _floorf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_floorf	PROC						; COMDAT

; 416  :         {return ((float)floor((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_floor
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_floorf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _ceilf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT

; 408  :         {return ((float)ceil((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_ceil
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
END
