; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\Graphics\Objects\Drawsgmt.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?LODPattern@@3PAKA				; LODPattern
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?greenMode@DrawableTrail@@1HA			; DrawableTrail::greenMode
PUBLIC	?litCloudColor@DrawableTrail@@1UTcolor@@A	; DrawableTrail::litCloudColor
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?g_bNoTrails@@3_NA				; g_bNoTrails
PUBLIC	?gCircleVerts@@3PAUTpoint@@A			; gCircleVerts
PUBLIC	?gV0@@3PAUThreeDVertex@@A			; gV0
PUBLIC	?gV1@@3PAUThreeDVertex@@A			; gV1
PUBLIC	?gVHead1@@3PAUThreeDVertex@@A			; gVHead1
PUBLIC	?gHeadOn@@3HA					; gHeadOn
PUBLIC	?gTextured@@3HA					; gTextured
PUBLIC	?TrailTex@@3PAPAVTexture@@A			; TrailTex
PUBLIC	?TrailSideTex@@3PAPAVTexture@@A			; TrailSideTex
PUBLIC	?TrailtexIDs@@3HA				; TrailtexIDs
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?gStorageCount@@3HA				; gStorageCount
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
_BSS	SEGMENT
?greenMode@DrawableTrail@@1HA DD 01H DUP (?)		; DrawableTrail::greenMode
?litCloudColor@DrawableTrail@@1UTcolor@@A DB 0cH DUP (?) ; DrawableTrail::litCloudColor
?g_bNoTrails@@3_NA DB 01H DUP (?)			; g_bNoTrails
	ALIGN	4

?gCircleVerts@@3PAUTpoint@@A DB 0d8H DUP (?)		; gCircleVerts
?gV0@@3PAUThreeDVertex@@A DB 03a8H DUP (?)		; gV0
?gV1@@3PAUThreeDVertex@@A DB 03a8H DUP (?)		; gV1
?gVHead1@@3PAUThreeDVertex@@A DB 0104H DUP (?)		; gVHead1
?gHeadOn@@3HA DD 01H DUP (?)				; gHeadOn
?gTextured@@3HA DD 01H DUP (?)				; gTextured
?TrailTex@@3PAPAVTexture@@A DD 096H DUP (?)		; TrailTex
?TrailSideTex@@3PAPAVTexture@@A DD 096H DUP (?)		; TrailSideTex
?TrailtexIDs@@3HA DD 01H DUP (?)			; TrailtexIDs
?gStorageCount@@3HA DD 01H DUP (?)			; gStorageCount
_BSS	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_Q_SCALE DD	03a51b717r			; 0.0008
_L_2	DD	03f317218r			; 0.693147
_TRAILFILE DB	'trail.txt', 00H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
_DATA	SEGMENT
?LODPattern@@3PAKA DD 0ffH				; LODPattern
	DD	07fH
	DD	077H
	DD	055H
	DD	011H
	DD	01H
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
_DATA	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
PUBLIC	??0DrawableObject@@QAE@M@Z			; DrawableObject::DrawableObject
PUBLIC	??1DrawableObject@@UAE@XZ			; DrawableObject::~DrawableObject
PUBLIC	?GetRadarSign@DrawableObject@@UAEMXZ		; DrawableObject::GetRadarSign
PUBLIC	?SetLabel@DrawableObject@@UAEXPADK@Z		; DrawableObject::SetLabel
PUBLIC	?SetInhibitFlag@DrawableObject@@UAEXH@Z		; DrawableObject::SetInhibitFlag
PUBLIC	?Draw@DrawableObject@@UAEXPAVRender3D@@@Z	; DrawableObject::Draw
PUBLIC	?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z ; DrawableObject::GetRayHit
PUBLIC	?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z ; DrawableObject::SetParentList
PUBLIC	??_GDrawableObject@@UAEPAXI@Z			; DrawableObject::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?TexHandle@Texture@@QAEKXZ			; Texture::TexHandle
PUBLIC	?X@Render3D@@QAEMXZ				; Render3D::X
PUBLIC	?Y@Render3D@@QAEMXZ				; Render3D::Y
PUBLIC	?Z@Render3D@@QAEMXZ				; Render3D::Z
PUBLIC	?CompareWith@ANode@@UAEHPAV1@@Z			; ANode::CompareWith
PUBLIC	??1AList@@QAE@XZ				; AList::~AList
PUBLIC	?GetClockTime@TimeManager@@QAEKXZ		; TimeManager::GetClockTime
PUBLIC	??0DrawableTrail@@QAE@HM@Z			; DrawableTrail::DrawableTrail
PUBLIC	??1DrawableTrail@@UAE@XZ			; DrawableTrail::~DrawableTrail
PUBLIC	?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z ; DrawableTrail::AddPointAtHead
PUBLIC	?RewindTrail@DrawableTrail@@QAEHK@Z		; DrawableTrail::RewindTrail
PUBLIC	?TrimTrail@DrawableTrail@@QAEXH@Z		; DrawableTrail::TrimTrail
PUBLIC	?SetType@DrawableTrail@@QAEXH@Z			; DrawableTrail::SetType
PUBLIC	?Draw@DrawableTrail@@UAEXPAVRenderOTW@@H@Z	; DrawableTrail::Draw
PUBLIC	?SetGreenMode@DrawableTrail@@SAXH@Z		; DrawableTrail::SetGreenMode
PUBLIC	?SetCloudColor@DrawableTrail@@SAXPAUTcolor@@@Z	; DrawableTrail::SetCloudColor
PUBLIC	?SetHeadVelocity@DrawableTrail@@QAEXPAUTpoint@@@Z ; DrawableTrail::SetHeadVelocity
PUBLIC	?ReleaseToSfx@DrawableTrail@@QAEXXZ		; DrawableTrail::ReleaseToSfx
PUBLIC	?IsTrailEmpty@DrawableTrail@@QAEHXZ		; DrawableTrail::IsTrailEmpty
PUBLIC	?DrawNode@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@@Z ; DrawableTrail::DrawNode
PUBLIC	?DrawSegment@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@1@Z ; DrawableTrail::DrawSegment
PUBLIC	?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z ; DrawableTrail::SetupTexturesOnDevice
PUBLIC	?ReleaseTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z ; DrawableTrail::ReleaseTexturesOnDevice
PUBLIC	??_GDrawableTrail@@UAEPAXI@Z			; DrawableTrail::`scalar deleting destructor'
PUBLIC	?F_I32@@YAKM@Z					; F_I32
PUBLIC	?LoadTrails@@YAXXZ				; LoadTrails
PUBLIC	??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z ; TrailNode::TrailNode
PUBLIC	??1TrailNode@@QAE@XZ				; TrailNode::~TrailNode
PUBLIC	?GetAge@TrailNode@@QAEMXZ			; TrailNode::GetAge
PUBLIC	?Update@TrailNode@@QAEXXZ			; TrailNode::Update
PUBLIC	?Init@TrailNode@@QAEXPAUTpoint@@PAUTrailTypeEntry@@@Z ; TrailNode::Init
PUBLIC	??_GTrailNode@@QAEPAXI@Z			; TrailNode::`scalar deleting destructor'
PUBLIC	??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z		; ChunkNode::ChunkNode
PUBLIC	??1ChunkNode@@QAE@XZ				; ChunkNode::~ChunkNode
PUBLIC	??_GChunkNode@@QAEPAXI@Z			; ChunkNode::`scalar deleting destructor'
PUBLIC	?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z ; GetATrailNode
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7DrawableObject@@6B@				; DrawableObject::`vftable'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7DrawableTrail@@6B@				; DrawableTrail::`vftable'
PUBLIC	??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03HCMCMCCF@TLS?$AA@			; `string'
PUBLIC	??_7TrailNode@@6B@				; TrailNode::`vftable'
PUBLIC	??_7ChunkNode@@6B@				; ChunkNode::`vftable'
PUBLIC	?gTrailNodeStorage@@3VAList@@A			; gTrailNodeStorage
PUBLIC	??_C@_0O@JBBLPKIF@New?5Trail?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0M@NLCBLNBL@Trail?$CFd?4dds?$AA@		; `string'
PUBLIC	??_C@_0BA@MOKJMNHD@TrailSide?$CFd?4dds?$AA@	; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4DrawableObject@@6B@			; DrawableObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawableObject@@@8			; DrawableObject `RTTI Type Descriptor'
PUBLIC	??_R3DrawableObject@@8				; DrawableObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableObject@@8				; DrawableObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableObject@@8			; DrawableObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ChunkNode@@6B@				; ChunkNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVChunkNode@@@8				; ChunkNode `RTTI Type Descriptor'
PUBLIC	??_R3ChunkNode@@8				; ChunkNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ChunkNode@@8				; ChunkNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ChunkNode@@8			; ChunkNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ANode@@8				; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVANode@@@8				; ANode `RTTI Type Descriptor'
PUBLIC	??_R3ANode@@8					; ANode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ANode@@8					; ANode::`RTTI Base Class Array'
PUBLIC	??_R4DrawableTrail@@6B@				; DrawableTrail::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawableTrail@@@8			; DrawableTrail `RTTI Type Descriptor'
PUBLIC	??_R3DrawableTrail@@8				; DrawableTrail::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableTrail@@8				; DrawableTrail::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableTrail@@8			; DrawableTrail::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4TrailNode@@6B@				; TrailNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTrailNode@@@8				; TrailNode `RTTI Type Descriptor'
PUBLIC	??_R3TrailNode@@8				; TrailNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TrailNode@@8				; TrailNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TrailNode@@8			; TrailNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a800000
PUBLIC	__real@3a83126f
PUBLIC	__real@3f000000
PUBLIC	__real@3f2e147b
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f747ae147ae147b
PUBLIC	__real@3f7fc000
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae140000000
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40a00000
PUBLIC	__real@41c80000
PUBLIC	__real@437f0000
PUBLIC	__real@437fe666
PUBLIC	__real@447a0000
PUBLIC	__real@46fffe00
PUBLIC	__real@c0000000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_rand:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fopen:PROC
EXTRN	_sprintf:PROC
EXTRN	??_EDrawableObject@@UAEPAXI@Z:PROC		; DrawableObject::`vector deleting destructor'
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SelectTexture1@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectTexture1
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	??0Texture@@QAE@XZ:PROC				; Texture::Texture
EXTRN	?LoadAndCreate@Texture@@QAEHPADK@Z:PROC		; Texture::LoadAndCreate
EXTRN	?FreeAll@Texture@@QAEXXZ:PROC			; Texture::FreeAll
EXTRN	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z:PROC ; Render3D::TransformPointToView
EXTRN	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z:PROC ; Render3D::TransformBillboardPoint
EXTRN	?Render3DLine@Render3D@@QAEXPAUTpoint@@0@Z:PROC	; Render3D::Render3DLine
EXTRN	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z:PROC ; Render3D::DrawSquare
EXTRN	??0ANode@@QAE@XZ:PROC				; ANode::ANode
EXTRN	?GetSucc@ANode@@QAEPAXXZ:PROC			; ANode::GetSucc
EXTRN	?Remove@ANode@@QAEPAXXZ:PROC			; ANode::Remove
EXTRN	??1ANode@@QAE@XZ:PROC				; ANode::~ANode
EXTRN	??0AList@@QAE@XZ:PROC				; AList::AList
EXTRN	?RemHead@AList@@QAEPAXXZ:PROC			; AList::RemHead
EXTRN	?AddHead@AList@@QAEXPAVANode@@@Z:PROC		; AList::AddHead
EXTRN	?GetHead@AList@@QAEPAXXZ:PROC			; AList::GetHead
EXTRN	?GetTail@AList@@QAEPAXXZ:PROC			; AList::GetTail
EXTRN	??_EDrawableTrail@@UAEPAXI@Z:PROC		; DrawableTrail::`vector deleting destructor'
EXTRN	?TokenF@@YAMPADM@Z:PROC				; TokenF
EXTRN	?TokenI@@YAHPADH@Z:PROC				; TokenI
EXTRN	?TokenFlags@@YAHPADH0@Z:PROC			; TokenFlags
EXTRN	??0SfxClass@@QAE@MPAVDrawableTrail@@@Z:PROC	; SfxClass::SfxClass
EXTRN	_MonoPrint:PROC
EXTRN	?AddSfxRequest@OTWDriverClass@@QAEXPAVSfxClass@@@Z:PROC ; OTWDriverClass::AddSfxRequest
EXTRN	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z:PROC ; CDXEngine::DX2D_AddQuad
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?LODBiasInv@StateStackClass@@2MA:DWORD		; StateStackClass::LODBiasInv
EXTRN	?TheTimeManager@@3VTimeManager@@A:BYTE		; TheTimeManager
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?TheDXEngine@@3VCDXEngine@@A:BYTE		; TheDXEngine
EXTRN	?g_nGfxFix@@3HA:DWORD				; g_nGfxFix
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_types	DB	03840H DUP (?)
?gTrailNodeStorage@@3VAList@@A DB 018H DUP (?)		; gTrailNodeStorage
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@437fe666
CONST	SEGMENT
__real@437fe666 DD 0437fe666r			; 255.9
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3f847ae140000000
CONST	SEGMENT
__real@3f847ae140000000 DQ 03f847ae140000000r	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fc000
CONST	SEGMENT
__real@3f7fc000 DD 03f7fc000r			; 0.999023
CONST	ENDS
;	COMDAT __real@3f747ae147ae147b
CONST	SEGMENT
__real@3f747ae147ae147b DQ 03f747ae147ae147br	; 0.005
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f2e147b
CONST	SEGMENT
__real@3f2e147b DD 03f2e147br			; 0.68
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@3a800000
CONST	SEGMENT
__real@3a800000 DD 03a800000r			; 0.000976563
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@TrailNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TrailNode@@8 DD FLAT:??_R0?AVTrailNode@@@8 ; TrailNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TrailNode@@8
rdata$r	ENDS
;	COMDAT ??_R2TrailNode@@8
rdata$r	SEGMENT
??_R2TrailNode@@8 DD FLAT:??_R1A@?0A@EA@TrailNode@@8	; TrailNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3TrailNode@@8
rdata$r	SEGMENT
??_R3TrailNode@@8 DD 00H				; TrailNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TrailNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTrailNode@@@8
_DATA	SEGMENT
??_R0?AVTrailNode@@@8 DD FLAT:??_7type_info@@6B@	; TrailNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTrailNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TrailNode@@6B@
rdata$r	SEGMENT
??_R4TrailNode@@6B@ DD 00H				; TrailNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTrailNode@@@8
	DD	FLAT:??_R3TrailNode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableTrail@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableTrail@@8 DD FLAT:??_R0?AVDrawableTrail@@@8 ; DrawableTrail::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableTrail@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableTrail@@8
rdata$r	SEGMENT
??_R2DrawableTrail@@8 DD FLAT:??_R1A@?0A@EA@DrawableTrail@@8 ; DrawableTrail::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R3DrawableTrail@@8
rdata$r	SEGMENT
??_R3DrawableTrail@@8 DD 00H				; DrawableTrail::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DrawableTrail@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableTrail@@@8
_DATA	SEGMENT
??_R0?AVDrawableTrail@@@8 DD FLAT:??_7type_info@@6B@	; DrawableTrail `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableTrail@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DrawableTrail@@6B@
rdata$r	SEGMENT
??_R4DrawableTrail@@6B@ DD 00H				; DrawableTrail::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawableTrail@@@8
	DD	FLAT:??_R3DrawableTrail@@8
rdata$r	ENDS
;	COMDAT ??_R2ANode@@8
rdata$r	SEGMENT
??_R2ANode@@8 DD FLAT:??_R1A@?0A@EA@ANode@@8		; ANode::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ANode@@8
rdata$r	SEGMENT
??_R3ANode@@8 DD 00H					; ANode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ANode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVANode@@@8
_DATA	SEGMENT
??_R0?AVANode@@@8 DD FLAT:??_7type_info@@6B@		; ANode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVANode@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ANode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ANode@@8 DD FLAT:??_R0?AVANode@@@8	; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ANode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ChunkNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ChunkNode@@8 DD FLAT:??_R0?AVChunkNode@@@8 ; ChunkNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ChunkNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ChunkNode@@8
rdata$r	SEGMENT
??_R2ChunkNode@@8 DD FLAT:??_R1A@?0A@EA@ChunkNode@@8	; ChunkNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3ChunkNode@@8
rdata$r	SEGMENT
??_R3ChunkNode@@8 DD 00H				; ChunkNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ChunkNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVChunkNode@@@8
_DATA	SEGMENT
??_R0?AVChunkNode@@@8 DD FLAT:??_7type_info@@6B@	; ChunkNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVChunkNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ChunkNode@@6B@
rdata$r	SEGMENT
??_R4ChunkNode@@6B@ DD 00H				; ChunkNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVChunkNode@@@8
	DD	FLAT:??_R3ChunkNode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableObject@@8 DD FLAT:??_R0?AVDrawableObject@@@8 ; DrawableObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableObject@@8
rdata$r	SEGMENT
??_R2DrawableObject@@8 DD FLAT:??_R1A@?0A@EA@DrawableObject@@8 ; DrawableObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DrawableObject@@8
rdata$r	SEGMENT
??_R3DrawableObject@@8 DD 00H				; DrawableObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableObject@@@8
_DATA	SEGMENT
??_R0?AVDrawableObject@@@8 DD FLAT:??_7type_info@@6B@	; DrawableObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DrawableObject@@6B@
rdata$r	SEGMENT
??_R4DrawableObject@@6B@ DD 00H				; DrawableObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawableObject@@@8
	DD	FLAT:??_R3DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MOKJMNHD@TrailSide?$CFd?4dds?$AA@
CONST	SEGMENT
??_C@_0BA@MOKJMNHD@TrailSide?$CFd?4dds?$AA@ DB 'TrailSide%d.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NLCBLNBL@Trail?$CFd?4dds?$AA@
CONST	SEGMENT
??_C@_0M@NLCBLNBL@Trail?$CFd?4dds?$AA@ DB 'Trail%d.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBBLPKIF@New?5Trail?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@JBBLPKIF@New?5Trail?5?$CFd?6?$AA@ DB 'New Trail %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ChunkNode@@6B@
CONST	SEGMENT
??_7ChunkNode@@6B@ DD FLAT:??_R4ChunkNode@@6B@		; ChunkNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7TrailNode@@6B@
CONST	SEGMENT
??_7TrailNode@@6B@ DD FLAT:??_R4TrailNode@@6B@		; TrailNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_03HCMCMCCF@TLS?$AA@
CONST	SEGMENT
??_C@_03HCMCMCCF@TLS?$AA@ DB 'TLS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@ DB '%s\terrdata\%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7DrawableTrail@@6B@
CONST	SEGMENT
??_7DrawableTrail@@6B@ DD FLAT:??_R4DrawableTrail@@6B@	; DrawableTrail::`vftable'
	DD	FLAT:??_EDrawableTrail@@UAEPAXI@Z
	DD	FLAT:?GetRadarSign@DrawableObject@@UAEMXZ
	DD	FLAT:?SetLabel@DrawableObject@@UAEXPADK@Z
	DD	FLAT:?SetInhibitFlag@DrawableObject@@UAEXH@Z
	DD	FLAT:?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
	DD	FLAT:?Draw@DrawableTrail@@UAEXPAVRenderOTW@@H@Z
	DD	FLAT:?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
	DD	FLAT:?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7DrawableObject@@6B@
CONST	SEGMENT
??_7DrawableObject@@6B@ DD FLAT:??_R4DrawableObject@@6B@ ; DrawableObject::`vftable'
	DD	FLAT:??_EDrawableObject@@UAEPAXI@Z
	DD	FLAT:?GetRadarSign@DrawableObject@@UAEMXZ
	DD	FLAT:?SetLabel@DrawableObject@@UAEXPADK@Z
	DD	FLAT:?SetInhibitFlag@DrawableObject@@UAEXH@Z
	DD	FLAT:?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
	DD	FLAT:?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ChunkNode@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ChunkNode@@QAE@XZ$0
__ehfuncinfo$??1ChunkNode@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ChunkNode@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z$0
__ehfuncinfo$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z$0
__unwindtable$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z$0
__unwindtable$?ReleaseToSfx@DrawableTrail@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReleaseToSfx@DrawableTrail@@QAEXXZ$0
__unwindtable$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z$1
__unwindtable$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z$1
__unwindtable$??1DrawableTrail@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DrawableTrail@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DrawableTrail@@UAE@XZ$1
__unwindtable$??0DrawableTrail@@QAE@HM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$2
__ehfuncinfo$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ReleaseToSfx@DrawableTrail@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReleaseToSfx@DrawableTrail@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1DrawableTrail@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1DrawableTrail@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0DrawableTrail@@QAE@HM@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DrawableTrail@@QAE@HM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AList@@QAE@XZ$0
__ehfuncinfo$??1AList@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gTrailNodeStorage$initializer$ DD FLAT:??__EgTrailNodeStorage@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_n$ = -28						; size = 4
$T2 = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_worldPos$ = 8						; size = 4
_Type$ = 12						; size = 4
?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z PROC ; GetATrailNode

; 327  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 328  : 	TrailNode *n;
; 329  : 
; 330  : 	/* // MLR 5/4/2004 - Storage list causes CTD for some unknown reason.
; 331  : 	if(n=(TrailNode *)gTrailNodeStorage.RemHead())
; 332  : 	{
; 333  : 		n->Init(worldPos,Type);
; 334  : 		gStorageCount--;
; 335  : 	}
; 336  : 	else*/
; 337  : 		n = new TrailNode(worldPos,Type);

	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@GetATrailN
	mov	eax, DWORD PTR _Type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _worldPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z ; TrailNode::TrailNode
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@GetATrailN
$LN3@GetATrailN:
	mov	DWORD PTR tv73[ebp], 0
$LN4@GetATrailN:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _n$[ebp], eax

; 338  : 
; 339  : 	return(n);

	mov	eax, DWORD PTR _n$[ebp]

; 340  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z ENDP ; GetATrailNode
; Function compile flags: /Odtp
;	COMDAT ??__FgTrailNodeStorage@@YAXXZ
text$yd	SEGMENT
??__FgTrailNodeStorage@@YAXXZ PROC			; `dynamic atexit destructor for 'gTrailNodeStorage'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gTrailNodeStorage@@3VAList@@A ; gTrailNodeStorage
	call	??1AList@@QAE@XZ
	pop	ebp
	ret	0
??__FgTrailNodeStorage@@YAXXZ ENDP			; `dynamic atexit destructor for 'gTrailNodeStorage''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
;	COMDAT ??__EgTrailNodeStorage@@YAXXZ
text$yc	SEGMENT
??__EgTrailNodeStorage@@YAXXZ PROC			; `dynamic initializer for 'gTrailNodeStorage'', COMDAT

; 236  : AList gTrailNodeStorage; // need to clean this up!

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gTrailNodeStorage@@3VAList@@A ; gTrailNodeStorage
	call	??0AList@@QAE@XZ			; AList::AList
	push	OFFSET ??__FgTrailNodeStorage@@YAXXZ	; `dynamic atexit destructor for 'gTrailNodeStorage''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EgTrailNodeStorage@@YAXXZ ENDP			; `dynamic initializer for 'gTrailNodeStorage''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GChunkNode@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GChunkNode@@QAEPAXI@Z PROC				; ChunkNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ChunkNode@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GChunkNode@@QAEPAXI@Z ENDP				; ChunkNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ChunkNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ChunkNode@@QAE@XZ PROC				; ChunkNode::~ChunkNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ChunkNode@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1AList@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ChunkNode@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??1ChunkNode@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ChunkNode@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ChunkNode@@QAE@XZ ENDP				; ChunkNode::~ChunkNode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
;	COMDAT ??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z PROC		; ChunkNode::ChunkNode, COMDAT
; _this$ = ecx

; 231  : 	ChunkNode(TrailTypeEntry *type) {Type=type;}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ChunkNode@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0AList@@QAE@XZ			; AList::AList
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [ecx+12], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z ENDP		; ChunkNode::ChunkNode
; Function compile flags: /Odtp
;	COMDAT ??_GTrailNode@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GTrailNode@@QAEPAXI@Z PROC				; TrailNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TrailNode@@QAE@XZ			; TrailNode::~TrailNode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTrailNode@@QAEPAXI@Z ENDP				; TrailNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_trailType$ = 12					; size = 4
?Init@TrailNode@@QAEXPAUTpoint@@PAUTrailTypeEntry@@@Z PROC ; TrailNode::Init
; _this$ = ecx

; 1164 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1165 : 	Type=trailType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trailType$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 1166 : 	StartPos=*pos;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 1167 : 	NowTime=(TheTimeManager.GetClockTime());

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax

; 1168 : 	Alpha=1.0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+76], xmm0

; 1169 : 	Radius=2;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR [eax+72], xmm0

; 1170 : 	connected=1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 1

; 1171 : 	radiusStart    = Type->radiusStart + NRANDPOS * Type->radiusVariationStart;

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+12]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, DWORD PTR [esi+16]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+68], xmm0

; 1172 : 	posVariationEnd.x = NRANDPOS * Type->posVariationEnd;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+44], xmm0

; 1173 : 	posVariationEnd.y = NRANDPOS * Type->posVariationEnd;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+48], xmm0

; 1174 : 	posVariationEnd.z = NRANDPOS * Type->posVariationEnd;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+52], xmm0

; 1175 : 	AlphaMult=NRANDPOS;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+80], xmm0

; 1176 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@TrailNode@@QAEXPAUTpoint@@PAUTrailTypeEntry@@@Z ENDP ; TrailNode::Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_invlife$ = -12						; size = 4
_life$ = -8						; size = 4
_this$ = -4						; size = 4
?Update@TrailNode@@QAEXXZ PROC				; TrailNode::Update
; _this$ = ecx

; 1193 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1194 : 	float life = Age / Type->lifespan;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+16]
	divss	xmm0, DWORD PTR [ecx+32]
	movss	DWORD PTR _life$[ebp], xmm0

; 1195 : 
; 1196 : 	if(life>1.0) 

	cvtss2sd xmm0, DWORD PTR _life$[ebp]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	jbe	SHORT $LN4@Update

; 1197 : 		life=1.0;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _life$[ebp], xmm0

; 1198 : 	else

	jmp	SHORT $LN2@Update
$LN4@Update:

; 1199 : 		if(life<0.0)

	cvtss2sd xmm0, DWORD PTR _life$[ebp]
	movsd	xmm1, QWORD PTR __real@0000000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN2@Update

; 1200 : 			life=0.0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _life$[ebp], xmm0
$LN2@Update:

; 1201 : 	
; 1202 : 	float invlife=(1.0f - life);

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _life$[ebp]
	movss	DWORD PTR _invlife$[ebp], xmm0

; 1203 : 
; 1204 : 	/*
; 1205 : 	invlife*=invlife;
; 1206 : 	invlife*=invlife;
; 1207 : 	invlife*=invlife;
; 1208 : 	invlife*=invlife;
; 1209 : 	*/
; 1210 : 
; 1211 : 	Alpha      = Type->a * invlife - AlphaMult * life;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR [ecx+52]
	mulss	xmm0, DWORD PTR _invlife$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+80]
	mulss	xmm1, DWORD PTR _life$[ebp]
	subss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 1212 : 	if(Alpha<0.0) Alpha=0.0;

	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+76]
	movsd	xmm1, QWORD PTR __real@0000000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN1@Update
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+76], xmm0
$LN1@Update:

; 1213 : 	Radius     = radiusStart + Type->radiusChange * life;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR [ecx+24]
	mulss	xmm0, DWORD PTR _life$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+68]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+72], xmm0

; 1214 : 	Position.x = StartPos.x + posVariationEnd.x * life + velocity.x * Age;// * invlife;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+44]
	mulss	xmm0, DWORD PTR _life$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+32]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [eax+56]
	mulss	xmm1, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 1215 : 	Position.y = StartPos.y + posVariationEnd.y * life + velocity.y * Age;// * invlife;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+48]
	mulss	xmm0, DWORD PTR _life$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+60]
	mulss	xmm1, DWORD PTR [eax+16]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+24], xmm0

; 1216 : 	Position.z = StartPos.z + posVariationEnd.z * life + velocity.z * Age;// * invlife;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+52]
	mulss	xmm0, DWORD PTR _life$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+64]
	mulss	xmm1, DWORD PTR [edx+16]
	addss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 1217 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Update@TrailNode@@QAEXXZ ENDP				; TrailNode::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
tv81 = -16						; size = 8
tv78 = -8						; size = 4
_this$ = -4						; size = 4
?GetAge@TrailNode@@QAEMXZ PROC				; TrailNode::GetAge
; _this$ = ecx

; 1186 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1187 : 	Age = (TheTimeManager.GetClockTime() - NowTime) * .001f * Type->trimAmt;

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+88]
	mov	DWORD PTR tv78[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR tv78[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv81[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv81[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mulss	xmm0, DWORD PTR [ecx+36]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+16], xmm0

; 1188 : 	return Age;

	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+16]

; 1189 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetAge@TrailNode@@QAEMXZ ENDP				; TrailNode::GetAge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1TrailNode@@QAE@XZ PROC				; TrailNode::~TrailNode
; _this$ = ecx

; 1179 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TrailNode@@6B@

; 1180 : #ifdef DEBUG
; 1181 : 	gTrailNodeCount--;
; 1182 : #endif
; 1183 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	esp, ebp
	pop	ebp
	ret	0
??1TrailNode@@QAE@XZ ENDP				; TrailNode::~TrailNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_trailType$ = 12					; size = 4
??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z PROC	; TrailNode::TrailNode
; _this$ = ecx

; 1156 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TrailNode@@6B@

; 1157 : #ifdef DEBUG
; 1158 : 	gTrailNodeCount++;
; 1159 : #endif
; 1160 : 	Init(pos,trailType);

	mov	ecx, DWORD PTR _trailType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@TrailNode@@QAEXPAUTpoint@@PAUTrailTypeEntry@@@Z ; TrailNode::Init

; 1161 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TrailNode@@QAE@PAUTpoint@@PAUTrailTypeEntry@@@Z ENDP	; TrailNode::TrailNode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_msize$1 = -1304					; size = 4
tv274 = -1300						; size = 4
_fp$ = -1296						; size = 4
_ind$ = -1292						; size = 4
_buffer$ = -1288					; size = 1024
_path$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
?LoadTrails@@YAXXZ PROC					; LoadTrails

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1304				; 00000518H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 125  : 	int ind;
; 126  : 	char buffer[1024];
; 127  :     char path[_MAX_PATH];
; 128  :     FILE *fp;
; 129  : 
; 130  : 	/*
; 131  :     int l;
; 132  : 	for(l=0;l<nTypes;l++)
; 133  : 	{
; 134  : 		TrailTex[l]=0;
; 135  : 	}
; 136  : 	*/
; 137  : 	TrailtexIDs=0;

	mov	DWORD PTR ?TrailtexIDs@@3HA, 0		; TrailtexIDs

; 138  : 
; 139  : 	sprintf (path, "%s\\terrdata\\%s", FalconDataDirectory, TRAILFILE); // MLR 12/14/2003 - This should probably be fixed

	push	OFFSET _TRAILFILE
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 140  : 	fp = fopen(path, "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 141  : 	if (fp == NULL) 

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN11@LoadTrails

; 142  : 		return;

	jmp	$LN12@LoadTrails
$LN11@LoadTrails:

; 143  :     while (fgets (buffer, sizeof buffer, fp)) {

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN9@LoadTrails

; 144  : 		if (buffer[0] == '#' || buffer[0] == ';' ||buffer[0] == '\n')

	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buffer$[ebp+ecx]
	cmp	edx, 35					; 00000023H
	je	SHORT $LN7@LoadTrails
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _buffer$[ebp+eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN7@LoadTrails
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buffer$[ebp+edx]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN8@LoadTrails
$LN7@LoadTrails:

; 145  : 			continue;

	jmp	SHORT $LN11@LoadTrails
$LN8@LoadTrails:

; 146  : 
; 147  : 		ind=TokenI(buffer,-1);

	push	-1
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?TokenI@@YAHPADH@Z			; TokenI
	add	esp, 8
	mov	DWORD PTR _ind$[ebp], eax

; 148  : 		if (ind < 0 || ind >= nTypes)

	cmp	DWORD PTR _ind$[ebp], 0
	jl	SHORT $LN5@LoadTrails
	cmp	DWORD PTR _ind$[ebp], 150		; 00000096H
	jl	SHORT $LN6@LoadTrails
$LN5@LoadTrails:

; 149  : 			continue;

	jmp	$LN11@LoadTrails
$LN6@LoadTrails:

; 150  : 		
; 151  : 		types[ind].posVariationStart=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx]

; 152  : 		types[ind].posVariationEnd  =TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	fstp	DWORD PTR _types[eax+4]

; 153  : 		types[ind].spacing			=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	fstp	DWORD PTR _types[ecx+8]

; 154  : 		types[ind].spcVariation		=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx+12]

; 155  : 		types[ind].radiusStart		=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	fstp	DWORD PTR _types[eax+16]

; 156  : 		types[ind].radiusVariationStart	=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	fstp	DWORD PTR _types[ecx+20]

; 157  : 		types[ind].radiusChange		=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx+24]

; 158  : 		types[ind].lifespan			=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	fstp	DWORD PTR _types[eax+32]

; 159  : 		types[ind].texID			=TokenI(0,0);

	push	0
	push	0
	call	?TokenI@@YAHPADH@Z			; TokenI
	add	esp, 8
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	mov	DWORD PTR _types[ecx+68], eax

; 160  : 		types[ind].r				=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx+40]

; 161  : 		types[ind].g				=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	fstp	DWORD PTR _types[eax+44]

; 162  : 		types[ind].b				=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	fstp	DWORD PTR _types[ecx+48]

; 163  : 		types[ind].a				=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx+52]

; 164  : 		types[ind].rLite			=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	fstp	DWORD PTR _types[eax+56]

; 165  : 		types[ind].gLite			=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	fstp	DWORD PTR _types[ecx+60]

; 166  : 		types[ind].bLite			=TokenF(0,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	fstp	DWORD PTR _types[edx+64]

; 167  : 		types[ind].flags			=TokenFlags(0,0,TTF_CHARACTERS); // note flags must be in low to high bit order

	push	OFFSET ??_C@_03HCMCMCCF@TLS?$AA@
	push	0
	push	0
	call	?TokenFlags@@YAHPADH0@Z			; TokenFlags
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	mov	DWORD PTR _types[ecx+72], eax

; 168  : 		types[ind].linkID			=TokenI(0,0);

	push	0
	push	0
	call	?TokenI@@YAHPADH@Z			; TokenI
	add	esp, 8
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	mov	DWORD PTR _types[edx+76], eax

; 169  : 		types[ind].lodBiasFactor	= static_cast<float>(TokenI(0,0));

	push	0
	push	0
	call	?TokenI@@YAHPADH@Z			; TokenI
	add	esp, 8
	cvtsi2ss xmm0, eax
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	movss	DWORD PTR _types[eax+80], xmm0

; 170  : 
; 171  : 		types[ind].trimAmt			=1.0f;

	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _types[ecx+36], xmm0

; 172  : 
; 173  : 		if(!types[ind].lodBiasFactor)

	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	movss	xmm0, DWORD PTR _types[edx+80]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	$LN2@LoadTrails

; 174  : 		{
; 175  : 			float msize;
; 176  : 			msize=max(types[ind].radiusStart , types[ind].radiusStart+types[ind].radiusChange);

	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	movss	xmm0, DWORD PTR _types[eax+16]
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	movss	xmm1, DWORD PTR _types[ecx+16]
	addss	xmm1, DWORD PTR _types[edx+24]
	comiss	xmm0, xmm1
	jbe	SHORT $LN14@LoadTrails
	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	movss	xmm0, DWORD PTR _types[eax+16]
	movss	DWORD PTR tv274[ebp], xmm0
	jmp	SHORT $LN15@LoadTrails
$LN14@LoadTrails:
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	movss	xmm0, DWORD PTR _types[ecx+16]
	addss	xmm0, DWORD PTR _types[edx+24]
	movss	DWORD PTR tv274[ebp], xmm0
$LN15@LoadTrails:
	movss	xmm0, DWORD PTR tv274[ebp]
	movss	DWORD PTR _msize$1[ebp], xmm0

; 177  : 			if(msize <= 0)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _msize$1[ebp]
	jb	SHORT $LN3@LoadTrails

; 178  : 				types[ind].lodBiasFactor=1;

	mov	eax, DWORD PTR _ind$[ebp]
	imul	eax, 96					; 00000060H
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _types[eax+80], xmm0

; 179  : 			else

	jmp	SHORT $LN2@LoadTrails
$LN3@LoadTrails:

; 180  : 			{
; 181  : 				types[ind].lodBiasFactor=1/(msize*25);

	movss	xmm0, DWORD PTR _msize$1[ebp]
	mulss	xmm0, DWORD PTR __real@41c80000
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	movss	DWORD PTR _types[ecx+80], xmm1
$LN2@LoadTrails:

; 182  : 			}
; 183  : 		}
; 184  : 
; 185  : 		if(types[ind].texID>=TrailtexIDs)

	mov	edx, DWORD PTR _ind$[ebp]
	imul	edx, 96					; 00000060H
	mov	eax, DWORD PTR _types[edx+68]
	cmp	eax, DWORD PTR ?TrailtexIDs@@3HA	; TrailtexIDs
	jl	SHORT $LN1@LoadTrails

; 186  : 		{
; 187  : 			TrailtexIDs=types[ind].texID+1;

	mov	ecx, DWORD PTR _ind$[ebp]
	imul	ecx, 96					; 00000060H
	mov	edx, DWORD PTR _types[ecx+68]
	add	edx, 1
	mov	DWORD PTR ?TrailtexIDs@@3HA, edx	; TrailtexIDs
$LN1@LoadTrails:

; 188  : 		}
; 189  :     }

	jmp	$LN11@LoadTrails
$LN9@LoadTrails:

; 190  :     fclose (fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$LN12@LoadTrails:

; 191  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTrails@@YAXXZ ENDP					; LoadTrails
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\fastmath.h
;	COMDAT ?F_I32@@YAKM@Z
_TEXT	SEGMENT
_r$ = -4						; size = 4
_x$ = 8							; size = 4
?F_I32@@YAKM@Z PROC					; F_I32, COMDAT

; 7    : {	DWORD	r;

	push	ebp
	mov	ebp, esp
	push	ecx

; 8    : 	_asm{ 
; 9    : 			fld		x

	fld	DWORD PTR _x$[ebp]

; 10   : 			fistp	r

	fistp	DWORD PTR _r$[ebp]

; 11   : 	}
; 12   : 	return r;

	mov	eax, DWORD PTR _r$[ebp]

; 13   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F_I32@@YAKM@Z ENDP					; F_I32
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDrawableTrail@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawableTrail@@UAEPAXI@Z PROC			; DrawableTrail::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableTrail@@UAE@XZ		; DrawableTrail::~DrawableTrail
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawableTrail@@UAEPAXI@Z ENDP			; DrawableTrail::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 4
_rc$ = 8						; size = 4
?ReleaseTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z PROC ; DrawableTrail::ReleaseTexturesOnDevice

; 1257 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1258 : 	int i;
; 1259 : 
; 1260 : 	for(i = 0; i < TrailtexIDs; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ReleaseTex
$LN3@ReleaseTex:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ReleaseTex:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR ?TrailtexIDs@@3HA	; TrailtexIDs
	jge	SHORT $LN5@ReleaseTex

; 1261 : 	{
; 1262 : 		if(TrailTex[i])

	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?TrailTex@@3PAPAVTexture@@A[edx*4], 0
	je	SHORT $LN1@ReleaseTex

; 1263 : 		{
; 1264 : 			TrailTex[i]->FreeAll();

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TrailTex@@3PAPAVTexture@@A[eax*4]
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1265 : 			TrailTex[i]=0;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?TrailTex@@3PAPAVTexture@@A[ecx*4], 0

; 1266 : 			TrailSideTex[i]->FreeAll();

	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[edx*4]
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1267 : 			TrailSideTex[i]=0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[eax*4], 0
$LN1@ReleaseTex:

; 1268 : 		}
; 1269 : 	}

	jmp	SHORT $LN3@ReleaseTex
$LN5@ReleaseTex:

; 1270 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReleaseTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z ENDP ; DrawableTrail::ReleaseTexturesOnDevice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
tv78 = -304						; size = 4
$T2 = -300						; size = 4
$T3 = -296						; size = 4
$T4 = -292						; size = 4
tv128 = -288						; size = 4
$T5 = -284						; size = 4
_i$ = -280						; size = 4
_filename$ = -276					; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rc$ = 8						; size = 4
?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z PROC ; DrawableTrail::SetupTexturesOnDevice

; 1230 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1231 : 	int i;
; 1232 : 	char filename[_MAX_PATH];
; 1233 : 
; 1234 : 	for(i = 0; i < TrailtexIDs; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@SetupTextu
$LN4@SetupTextu:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@SetupTextu:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR ?TrailtexIDs@@3HA	; TrailtexIDs
	jge	$LN6@SetupTextu

; 1235 : 	{
; 1236 : 		sprintf(filename,"Trail%d.dds",i);

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	OFFSET ??_C@_0M@NLCBLNBL@Trail?$CFd?4dds?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1237 : 		
; 1238 : 		if(TrailTex[i] = new Texture)

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN8@SetupTextu
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN9@SetupTextu
$LN8@SetupTextu:
	mov	DWORD PTR tv78[ebp], 0
$LN9@SetupTextu:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR ?TrailTex@@3PAPAVTexture@@A[edx*4], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN2@SetupTextu

; 1239 : 		{
; 1240 : 			TrailTex[i]->LoadAndCreate(filename,MPR_TI_DDS);

	push	256					; 00000100H
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TrailTex@@3PAPAVTexture@@A[edx*4]
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate
$LN2@SetupTextu:

; 1241 : 		}
; 1242 : 
; 1243 : 		sprintf(filename,"TrailSide%d.dds",i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	OFFSET ??_C@_0BA@MOKJMNHD@TrailSide?$CFd?4dds?$AA@
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1244 : 		
; 1245 : 		if(TrailSideTex[i] = new Texture)

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN10@SetupTextu
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN11@SetupTextu
$LN10@SetupTextu:
	mov	DWORD PTR tv128[ebp], 0
$LN11@SetupTextu:
	mov	edx, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[eax*4], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN1@SetupTextu

; 1246 : 		{
; 1247 : 			TrailSideTex[i]->LoadAndCreate(filename,MPR_TI_DDS);

	push	256					; 00000100H
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[eax*4]
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate
$LN1@SetupTextu:

; 1248 : 		}
; 1249 : 
; 1250 : 
; 1251 : 	}

	jmp	$LN4@SetupTextu
$LN6@SetupTextu:

; 1252 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z$1:
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupTexturesOnDevice@DrawableTrail@@SAXPAVDXContext@@@Z ENDP ; DrawableTrail::SetupTexturesOnDevice
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_l$1 = -196						; size = 4
tv326 = -190						; size = 1
tv600 = -189						; size = 1
_l$2 = -188						; size = 4
_this$ = -184						; size = 4
_pv$3 = -180						; size = 12
_pv$4 = -168						; size = 12
_os$5 = -156						; size = 12
_os$6 = -144						; size = 12
_colormod$7 = -132					; size = 16
_colormod$8 = -116					; size = 16
_outerpoint$9 = -100					; size = 48
_outerpoint$10 = -52					; size = 48
__$ArrayPad$ = -4					; size = 4
_renderer$ = 8						; size = 4
_LOD$ = 12						; size = 4
_n$ = 16						; size = 4
_n2$ = 20						; size = 4
?DrawSegment@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@1@Z PROC ; DrawableTrail::DrawSegment
; _this$ = ecx

; 1005 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1006 : 	// draw a simple quads between to nodes
; 1007 : 	if(LOD==1)

	cmp	DWORD PTR _LOD$[ebp], 1
	jne	$LN8@DrawSegmen

; 1008 : 	{
; 1009 : 		Tpoint outerpoint[]=
; 1010 : 		{
; 1011 : 			0,-2,-2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$9[ebp], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$9[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$9[ebp+8], xmm0

; 1012 : 			0,-2, 2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$9[ebp+12], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$9[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$9[ebp+20], xmm0

; 1013 : 			0, 2, 2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$9[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$9[ebp+28], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$9[ebp+32], xmm0

; 1014 : 			0, 2,-2

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$9[ebp+36], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$9[ebp+40], xmm0

; 1015 : 		};	

	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$9[ebp+44], xmm0

; 1016 : 
; 1017 : 		float colormod[]=
; 1018 : 		{
; 1019 : 			1.0f,

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _colormod$8[ebp], xmm0

; 1020 : 			0.68f,

	movss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR _colormod$8[ebp+4], xmm0

; 1021 : 			0.68f,

	movss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR _colormod$8[ebp+8], xmm0

; 1022 : 			1.0f
; 1023 : 		};

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _colormod$8[ebp+12], xmm0

; 1024 : 
; 1025 : 		v0.u =  1,	v0.v = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+136], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+140], xmm0

; 1026 : 		v1.u =  1,	v1.v = .5;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+188], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [eax+192], xmm0

; 1027 : 		v2.u =  0,	v2.v = .5;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+240], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [edx+244], xmm0

; 1028 : 		v3.u =  0,	v3.v = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+292], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+296], xmm0

; 1029 : 
; 1030 : 
; 1031 : 		Tpoint os,pv;
; 1032 : 		int l;
; 1033 : 
; 1034 : 
; 1035 : 		v0.a = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+132], xmm0

; 1036 : 		v1.a = n->Alpha;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+184], edx

; 1037 : 		v2.a = n2->Alpha;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _n2$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+236], edx

; 1038 : 		v3.a = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+288], xmm0

; 1039 : 
; 1040 : 		for(l=0;l<4;l++)

	mov	DWORD PTR _l$1[ebp], 0
	jmp	SHORT $LN7@DrawSegmen
$LN6@DrawSegmen:
	mov	ecx, DWORD PTR _l$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _l$1[ebp], ecx
$LN7@DrawSegmen:
	cmp	DWORD PTR _l$1[ebp], 4
	jge	$LN5@DrawSegmen

; 1041 : 		{
; 1042 : 			// use 1st node 
; 1043 : 			renderer->TransformPointToView(&n->Position,&pv);

	lea	edx, DWORD PTR _pv$3[ebp]
	push	edx
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 1044 : 			
; 1045 : 			os.x =  outerpoint[l].x;

	mov	ecx, DWORD PTR _l$1[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+ecx]
	movss	DWORD PTR _os$5[ebp], xmm0

; 1046 : 			os.y =  outerpoint[l].y * n->Radius;

	mov	edx, DWORD PTR _l$1[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+edx+4]
	mulss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _os$5[ebp+4], xmm0

; 1047 : 			os.z =  outerpoint[l].z * n->Radius;

	mov	ecx, DWORD PTR _l$1[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+ecx+8]
	mulss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR _os$5[ebp+8], xmm0

; 1048 : 			renderer->TransformBillboardPoint(&os,&pv,&v0);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	lea	ecx, DWORD PTR _pv$3[ebp]
	push	ecx
	lea	edx, DWORD PTR _os$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1049 : 			
; 1050 : 			os.x =  0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp], xmm0

; 1051 : 			os.y =  0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp+4], xmm0

; 1052 : 			os.z =  0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp+8], xmm0

; 1053 : 			renderer->TransformBillboardPoint(&os,&pv,&v1);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	lea	ecx, DWORD PTR _pv$3[ebp]
	push	ecx
	lea	edx, DWORD PTR _os$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1054 : 			
; 1055 : 			// use 2nd node
; 1056 : 			renderer->TransformPointToView(&n2->Position,&pv);

	lea	eax, DWORD PTR _pv$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _n2$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 1057 : 
; 1058 : 			os.x =  0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp], xmm0

; 1059 : 			os.y =  0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp+4], xmm0

; 1060 : 			os.z =  0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$5[ebp+8], xmm0

; 1061 : 			renderer->TransformBillboardPoint(&os,&pv,&v2);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 216				; 000000d8H
	push	edx
	lea	eax, DWORD PTR _pv$3[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1062 : 			
; 1063 : 			os.x =  outerpoint[l].x;

	mov	edx, DWORD PTR _l$1[ebp]
	imul	edx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+edx]
	movss	DWORD PTR _os$5[ebp], xmm0

; 1064 : 			os.y =  outerpoint[l].y * n2->Radius;

	mov	eax, DWORD PTR _l$1[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _n2$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+eax+4]
	mulss	xmm0, DWORD PTR [ecx+72]
	movss	DWORD PTR _os$5[ebp+4], xmm0

; 1065 : 			os.z =  outerpoint[l].z * n2->Radius;

	mov	edx, DWORD PTR _l$1[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _n2$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$9[ebp+edx+8]
	mulss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _os$5[ebp+8], xmm0

; 1066 : 			renderer->TransformBillboardPoint(&os,&pv,&v3);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	lea	edx, DWORD PTR _pv$3[ebp]
	push	edx
	lea	eax, DWORD PTR _os$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1067 : 
; 1068 : 			// set this up, what is this?
; 1069 : 			v0.q = v0.csZ * Q_SCALE;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+160]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+144], xmm0

; 1070 : 			v1.q = v1.csZ * Q_SCALE;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+212]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+196], xmm0

; 1071 : 			v2.q = v2.csZ * Q_SCALE;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+264]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+248], xmm0

; 1072 : 			v3.q = v3.csZ * Q_SCALE;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+316]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+300], xmm0

; 1073 : 
; 1074 : 			
; 1075 : 			renderer->DrawSquare(&v0,&v1,&v2,&v3,CULL_ALLOW_ALL,(g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN11@DrawSegmen
	mov	BYTE PTR tv326[ebp], 1
	jmp	SHORT $LN12@DrawSegmen
$LN11@DrawSegmen:
	mov	BYTE PTR tv326[ebp], 0
$LN12@DrawSegmen:
	push	0
	movzx	eax, BYTE PTR tv326[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 216				; 000000d8H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare

; 1076 : 		}

	jmp	$LN6@DrawSegmen
$LN5@DrawSegmen:

; 1077 : 	}
; 1078 : 	else

	jmp	$LN1@DrawSegmen
$LN8@DrawSegmen:

; 1079 : 	{
; 1080 : 		Tpoint outerpoint[]=
; 1081 : 		{
; 1082 : 			0,-2,-2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$10[ebp], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$10[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$10[ebp+8], xmm0

; 1083 : 			0,-2, 2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$10[ebp+12], xmm0
	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$10[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$10[ebp+20], xmm0

; 1084 : 			0, 2, 2,

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$10[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$10[ebp+28], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$10[ebp+32], xmm0

; 1085 : 			0, 2,-2

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _outerpoint$10[ebp+36], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _outerpoint$10[ebp+40], xmm0

; 1086 : 		};	

	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR _outerpoint$10[ebp+44], xmm0

; 1087 : 
; 1088 : 		float colormod[]=
; 1089 : 		{
; 1090 : 			1.0f,

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _colormod$7[ebp], xmm0

; 1091 : 			0.68f,

	movss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR _colormod$7[ebp+4], xmm0

; 1092 : 			0.68f,

	movss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR _colormod$7[ebp+8], xmm0

; 1093 : 			1.0f
; 1094 : 		};

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _colormod$7[ebp+12], xmm0

; 1095 : 
; 1096 : 		v0.u =  5,	v0.v = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [edx+136], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+140], xmm0

; 1097 : 		v1.u =  5,	v1.v = 1;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40a00000
	movss	DWORD PTR [ecx+188], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+192], xmm0

; 1098 : 		v2.u =  0,	v2.v = 1;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+240], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+244], xmm0

; 1099 : 		v3.u =  0,	v3.v = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+292], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+296], xmm0

; 1100 : 
; 1101 : 
; 1102 : 		Tpoint os,pv;
; 1103 : 		int l;
; 1104 : 
; 1105 : 
; 1106 : 		v0.a = n->Alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+132], eax

; 1107 : 		v1.a = n->Alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+184], eax

; 1108 : 		v2.a = n2->Alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n2$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+236], eax

; 1109 : 		v3.a = n2->Alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _n2$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+288], eax

; 1110 : 
; 1111 : 		for(l=0;l<2;l++)

	mov	DWORD PTR _l$2[ebp], 0
	jmp	SHORT $LN3@DrawSegmen
$LN2@DrawSegmen:
	mov	ecx, DWORD PTR _l$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _l$2[ebp], ecx
$LN3@DrawSegmen:
	cmp	DWORD PTR _l$2[ebp], 2
	jge	$LN1@DrawSegmen

; 1112 : 		{
; 1113 : 			// use 1st node 
; 1114 : 			renderer->TransformPointToView(&n->Position,&pv);

	lea	edx, DWORD PTR _pv$4[ebp]
	push	edx
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 1115 : 			
; 1116 : 			os.x =  outerpoint[l].x;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx]
	movss	DWORD PTR _os$6[ebp], xmm0

; 1117 : 			os.y =  outerpoint[l].y * n->Radius;

	mov	edx, DWORD PTR _l$2[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+edx+4]
	mulss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _os$6[ebp+4], xmm0

; 1118 : 			os.z =  outerpoint[l].z * n->Radius;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx+8]
	mulss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR _os$6[ebp+8], xmm0

; 1119 : 			renderer->TransformBillboardPoint(&os,&pv,&v0);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	lea	ecx, DWORD PTR _pv$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _os$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1120 : 			
; 1121 : 			os.x =  -outerpoint[l].x;

	mov	eax, DWORD PTR _l$2[ebp]
	imul	eax, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+eax]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$6[ebp], xmm0

; 1122 : 			os.y =  -outerpoint[l].y * n->Radius;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _n$[ebp]
	mulss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR _os$6[ebp+4], xmm0

; 1123 : 			os.z =  -outerpoint[l].z * n->Radius;

	mov	eax, DWORD PTR _l$2[ebp]
	imul	eax, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+eax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, DWORD PTR _n$[ebp]
	mulss	xmm0, DWORD PTR [ecx+72]
	movss	DWORD PTR _os$6[ebp+8], xmm0

; 1124 : 			renderer->TransformBillboardPoint(&os,&pv,&v1);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 164				; 000000a4H
	push	edx
	lea	eax, DWORD PTR _pv$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1125 : 			
; 1126 : 			// use 2nd node
; 1127 : 			renderer->TransformPointToView(&n2->Position,&pv);

	lea	edx, DWORD PTR _pv$4[ebp]
	push	edx
	mov	eax, DWORD PTR _n2$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 1128 : 
; 1129 : 			os.x =  -outerpoint[l].x;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$6[ebp], xmm0

; 1130 : 			os.y =  -outerpoint[l].y * n2->Radius;

	mov	edx, DWORD PTR _l$2[ebp]
	imul	edx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+edx+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _n2$[ebp]
	mulss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _os$6[ebp+4], xmm0

; 1131 : 			os.z =  -outerpoint[l].z * n2->Radius;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _n2$[ebp]
	mulss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR _os$6[ebp+8], xmm0

; 1132 : 			renderer->TransformBillboardPoint(&os,&pv,&v2);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	lea	ecx, DWORD PTR _pv$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _os$6[ebp]
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1133 : 			
; 1134 : 			os.x =  outerpoint[l].x;

	mov	eax, DWORD PTR _l$2[ebp]
	imul	eax, 12					; 0000000cH
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+eax]
	movss	DWORD PTR _os$6[ebp], xmm0

; 1135 : 			os.y =  outerpoint[l].y * n2->Radius;

	mov	ecx, DWORD PTR _l$2[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _n2$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+ecx+4]
	mulss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR _os$6[ebp+4], xmm0

; 1136 : 			os.z =  outerpoint[l].z * n2->Radius;

	mov	eax, DWORD PTR _l$2[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _n2$[ebp]
	movss	xmm0, DWORD PTR _outerpoint$10[ebp+eax+8]
	mulss	xmm0, DWORD PTR [ecx+72]
	movss	DWORD PTR _os$6[ebp+8], xmm0

; 1137 : 			renderer->TransformBillboardPoint(&os,&pv,&v3);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 268				; 0000010cH
	push	edx
	lea	eax, DWORD PTR _pv$4[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1138 : 
; 1139 : 			// set this up, what is this?
; 1140 : 			v0.q = v0.csZ * Q_SCALE;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+160]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+144], xmm0

; 1141 : 			v1.q = v1.csZ * Q_SCALE;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+212]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+196], xmm0

; 1142 : 			v2.q = v2.csZ * Q_SCALE;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+264]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+248], xmm0

; 1143 : 			v3.q = v3.csZ * Q_SCALE;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+316]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+300], xmm0

; 1144 : 
; 1145 : 			
; 1146 : 			renderer->DrawSquare(&v0,&v1,&v2,&v3,CULL_ALLOW_ALL,(g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN13@DrawSegmen
	mov	BYTE PTR tv600[ebp], 1
	jmp	SHORT $LN14@DrawSegmen
$LN13@DrawSegmen:
	mov	BYTE PTR tv600[ebp], 0
$LN14@DrawSegmen:
	push	0
	movzx	ecx, BYTE PTR tv600[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 268				; 0000010cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 112				; 00000070H
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare

; 1147 : 		}

	jmp	$LN2@DrawSegmen
$LN1@DrawSegmen:

; 1148 : 	}
; 1149 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawSegment@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@1@Z ENDP ; DrawableTrail::DrawSegment
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_segradius$ = -136					; size = 4
_this$ = -132						; size = 4
_segpos$ = -128						; size = 12
_v$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_renderer$ = 8						; size = 4
_LOD$ = 12						; size = 4
_n$ = 16						; size = 4
?DrawNode@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@@Z PROC ; DrawableTrail::DrawNode
; _this$ = ecx

; 936  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 937  : 
; 938  : 	Tpoint segpos;
; 939  : 	float segradius;
; 940  : 
; 941  : 	D3DDYNVERTEX	v[4];
; 942  : 
; 943  : 	segpos    =  n->Position;

	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 20					; 00000014H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _segpos$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _segpos$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _segpos$[ebp+8], eax

; 944  : 	segradius =  n->Radius * 2.0f;

	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+72]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _segradius$[ebp], xmm0

; 945  : 	
; 946  : /*	Tpoint os,pv;
; 947  : 	
; 948  : 	renderer->TransformPointToView(&segpos,&pv);
; 949  : 	
; 950  : 	os.x =  0.f;
; 951  : 	os.y = -segradius * 2.f;
; 952  : 	os.z = -segradius * 2.f;
; 953  : 	renderer->TransformBillboardPoint(&os,&pv,&v0);*/
; 954  : 	v[0].pos.x =  0.f;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v$[ebp+edx], xmm0

; 955  : 	v[0].pos.y = -segradius;

	movss	xmm0, DWORD PTR _segradius$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	DWORD PTR _v$[ebp+eax+4], xmm0

; 956  : 	v[0].pos.z = -segradius;

	movss	xmm0, DWORD PTR _segradius$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	DWORD PTR _v$[ebp+ecx+8], xmm0

; 957  : 	
; 958  : /*	os.x =  0.f;
; 959  : 	os.y =  segradius * 2.f;
; 960  : 	os.z = -segradius * 2.f;
; 961  : 	renderer->TransformBillboardPoint(&os,&pv,&v1);*/
; 962  : 	v[1].pos.x =  0.f;

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v$[ebp+edx], xmm0

; 963  : 	v[1].pos.y =  segradius;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	xmm0, DWORD PTR _segradius$[ebp]
	movss	DWORD PTR _v$[ebp+eax+4], xmm0

; 964  : 	v[1].pos.z = -segradius;

	movss	xmm0, DWORD PTR _segradius$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _v$[ebp+ecx+8], xmm0

; 965  : 		
; 966  : 	/*os.x =  0.f;
; 967  : 	os.y =  segradius * 2.f;
; 968  : 	os.z =  segradius * 2.f;
; 969  : 	renderer->TransformBillboardPoint(&os,&pv,&v2);*/
; 970  : 	v[2].pos.x =  0.f;

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v$[ebp+edx], xmm0

; 971  : 	v[2].pos.y =  segradius;

	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	xmm0, DWORD PTR _segradius$[ebp]
	movss	DWORD PTR _v$[ebp+eax+4], xmm0

; 972  : 	v[2].pos.z =  segradius;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR _segradius$[ebp]
	movss	DWORD PTR _v$[ebp+ecx+8], xmm0

; 973  : 	
; 974  : 	/*os.x =  0.f;
; 975  : 	os.y = -segradius * 2.f;
; 976  : 	os.z =  segradius * 2.f;
; 977  : 	renderer->TransformBillboardPoint(&os,&pv,&v3);*/
; 978  : 	v[3].pos.x =  0.f;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v$[ebp+edx], xmm0

; 979  : 	v[3].pos.y = -segradius;

	movss	xmm0, DWORD PTR _segradius$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	DWORD PTR _v$[ebp+eax+4], xmm0

; 980  : 	v[3].pos.z =  segradius;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	xmm0, DWORD PTR _segradius$[ebp]
	movss	DWORD PTR _v$[ebp+ecx+8], xmm0

; 981  : 	
; 982  : 	v[0].tu = TEX_UV_MIN, v[0].tv = TEX_UV_MIN;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v$[ebp+edx+20], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v$[ebp+eax+24], xmm0

; 983  : 	v[1].tu = TEX_UV_MAX, v[1].tv = TEX_UV_MIN;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v$[ebp+ecx+20], xmm0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v$[ebp+edx+24], xmm0

; 984  : 	v[2].tu = TEX_UV_MAX, v[2].tv = TEX_UV_MAX;

	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v$[ebp+eax+20], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v$[ebp+ecx+24], xmm0

; 985  : 	v[3].tu = TEX_UV_MIN, v[3].tv = TEX_UV_MAX;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v$[ebp+edx+20], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v$[ebp+eax+24], xmm0

; 986  : 	
; 987  : /*	v0.q = v0.csZ * Q_SCALE;
; 988  : 	v1.q = v1.csZ * Q_SCALE;
; 989  : 	v2.q = v2.csZ * Q_SCALE;
; 990  : 	v3.q = v3.csZ * Q_SCALE;
; 991  : */
; 992  : 
; 993  : 	v[0].dwColour=F_TO_ARGB(n->Alpha, v0.r, v0.g, v0.b);

	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+76]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+120]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+124]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+128]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	DWORD PTR _v$[ebp+edx+12], esi

; 994  : 	v[1].dwColour=F_TO_ARGB(n->Alpha, v1.r, v1.g, v1.b);

	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+76]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+172]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+176]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+180]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	DWORD PTR _v$[ebp+ecx+12], esi

; 995  : 	v[2].dwColour=F_TO_ARGB(n->Alpha, v2.r, v2.g, v2.b);

	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+224]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+228]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+232]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	DWORD PTR _v$[ebp+eax+12], esi

; 996  : 	v[3].dwColour=F_TO_ARGB(n->Alpha, v3.r, v3.g, v3.b);

	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+76]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+276]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+280]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+284]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	DWORD PTR _v$[ebp+edx+12], esi

; 997  : 	v[0].dwSpecular=v[1].dwSpecular=v[2].dwSpecular=v[3].dwSpecular=0x00000000;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	DWORD PTR _v$[ebp+eax+16], 0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	DWORD PTR _v$[ebp+ecx+16], 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	DWORD PTR _v$[ebp+edx+16], 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	DWORD PTR _v$[ebp+eax+16], 0

; 998  : 
; 999  : 	/*v0.a = v1.a = v2.a = v3.a = n->Alpha;	
; 1000 : 	renderer->DrawSquare(&v0,&v1,&v2,&v3,CULL_ALLOW_ALL,(g_nGfxFix > 0));*/
; 1001 : 	TheDXEngine.DX2D_AddQuad(LAYER_GROUND, POLY_BB, (D3DXVECTOR3 *)&segpos, v, n->Radius, TrailTexture->TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	edx, DWORD PTR _n$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+72]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	lea	ecx, DWORD PTR _segpos$[ebp]
	push	ecx
	push	1
	push	0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad

; 1002 : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawNode@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@@Z ENDP ; DrawableTrail::DrawNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTrailEmpty@DrawableTrail@@QAEHXZ PROC		; DrawableTrail::IsTrailEmpty
; _this$ = ecx

; 1221 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1222 : 	if(List.GetHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	test	eax, eax
	je	SHORT $LN1@IsTrailEmp

; 1223 : 	  return 1;

	mov	eax, 1
	jmp	SHORT $LN2@IsTrailEmp
$LN1@IsTrailEmp:

; 1224 : 	return 0;

	xor	eax, eax
$LN2@IsTrailEmp:

; 1225 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsTrailEmpty@DrawableTrail@@QAEHXZ ENDP		; DrawableTrail::IsTrailEmpty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv76 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseToSfx@DrawableTrail@@QAEXXZ PROC		; DrawableTrail::ReleaseToSfx
; _this$ = ecx

; 315  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseToSfx@DrawableTrail@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 	OTWDriver.AddSfxRequest(
; 317  : 		new SfxClass (
; 318  : 		Type->lifespan,			// time to live
; 319  : 		this) );		// scale

	push	192					; 000000c0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@ReleaseToS
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	ecx
	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0SfxClass@@QAE@MPAVDrawableTrail@@@Z	; SfxClass::SfxClass
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@ReleaseToS
$LN3@ReleaseToS:
	mov	DWORD PTR tv76[ebp], 0
$LN4@ReleaseToS:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?AddSfxRequest@OTWDriverClass@@QAEXPAVSfxClass@@@Z ; OTWDriverClass::AddSfxRequest

; 320  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReleaseToSfx@DrawableTrail@@QAEXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?ReleaseToSfx@DrawableTrail@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseToSfx@DrawableTrail@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseToSfx@DrawableTrail@@QAEXXZ ENDP		; DrawableTrail::ReleaseToSfx
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FPS$ = 8						; size = 4
?SetHeadVelocity@DrawableTrail@@QAEXPAUTpoint@@@Z PROC	; DrawableTrail::SetHeadVelocity
; _this$ = ecx

; 599  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 	headFPS = *FPS;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _FPS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx

; 601  : 	if(Link)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	SHORT $LN2@SetHeadVel

; 602  : 		Link->SetHeadVelocity(FPS);

	mov	eax, DWORD PTR _FPS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+96]
	call	?SetHeadVelocity@DrawableTrail@@QAEXPAUTpoint@@@Z ; DrawableTrail::SetHeadVelocity
$LN2@SetHeadVel:

; 603  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetHeadVelocity@DrawableTrail@@QAEXPAUTpoint@@@Z ENDP	; DrawableTrail::SetHeadVelocity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_color$ = 8						; size = 4
?SetCloudColor@DrawableTrail@@SAXPAUTcolor@@@Z PROC	; DrawableTrail::SetCloudColor

; 931  : {

	push	ebp
	mov	ebp, esp

; 932  : 	memcpy(&litCloudColor,color,sizeof(Tcolor));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	push	OFFSET ?litCloudColor@DrawableTrail@@1UTcolor@@A ; DrawableTrail::litCloudColor
	call	_memcpy
	add	esp, 12					; 0000000cH

; 933  : }

	pop	ebp
	ret	0
?SetCloudColor@DrawableTrail@@SAXPAUTcolor@@@Z ENDP	; DrawableTrail::SetCloudColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_state$ = 8						; size = 4
?SetGreenMode@DrawableTrail@@SAXH@Z PROC		; DrawableTrail::SetGreenMode

; 926  : {

	push	ebp
	mov	ebp, esp

; 927  : 	greenMode = state;

	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR ?greenMode@DrawableTrail@@1HA, eax ; DrawableTrail::greenMode

; 928  : }

	pop	ebp
	ret	0
?SetGreenMode@DrawableTrail@@SAXH@Z ENDP		; DrawableTrail::SetGreenMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
tv89 = -232						; size = 4
_n2$1 = -228						; size = 4
_cn2$2 = -224						; size = 4
_red$3 = -220						; size = 4
_dist$4 = -216						; size = 4
_blue$5 = -212						; size = 4
tv1341 = -208						; size = 4
$T6 = -204						; size = 4
tv1335 = -200						; size = 4
_color$7 = -196						; size = 4
tv1329 = -192						; size = 4
_green$8 = -188						; size = 4
_n2$9 = -184						; size = 4
_alpha$10 = -180					; size = 4
tv226 = -176						; size = 4
$T11 = -172						; size = 4
_yy$12 = -168						; size = 4
tv717 = -164						; size = 4
_xx$13 = -160						; size = 4
tv655 = -156						; size = 4
tv426 = -152						; size = 4
$T14 = -148						; size = 4
tv390 = -144						; size = 4
_zz$15 = -140						; size = 4
tv354 = -136						; size = 4
tv702 = -132						; size = 4
$T16 = -128						; size = 4
tv671 = -124						; size = 4
tv926 = -120						; size = 4
tv615 = -116						; size = 4
tv908 = -112						; size = 4
_connected$17 = -108					; size = 4
tv733 = -104						; size = 4
tv444 = -100						; size = 4
_seglod$18 = -96					; size = 4
tv408 = -92						; size = 4
tv998 = -88						; size = 4
tv372 = -84						; size = 4
tv980 = -80						; size = 4
tv312 = -76						; size = 4
tv962 = -72						; size = 4
tv944 = -68						; size = 4
tv686 = -64						; size = 4
_avr$19 = -60						; size = 4
_avr$20 = -56						; size = 4
_n2$21 = -52						; size = 4
_avr$22 = -48						; size = 4
_start$23 = -44						; size = 4
_end$24 = -40						; size = 4
_PrevLite$25 = -36					; size = 4
_cn$ = -32						; size = 4
_prevnodetype$26 = -28					; size = 4
_n$ = -24						; size = 4
_this$ = -20						; size = 4
_prevpos$27 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_renderer$ = 8						; size = 4
_LOD$ = 12						; size = 4
?Draw@DrawableTrail@@UAEXPAVRenderOTW@@H@Z PROC		; DrawableTrail::Draw
; _this$ = ecx

; 641  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 	if(g_bNoTrails) 

	movzx	eax, BYTE PTR ?g_bNoTrails@@3_NA	; g_bNoTrails
	test	eax, eax
	je	SHORT $LN40@Draw

; 643  : 		return;

	jmp	$LN41@Draw
$LN40@Draw:

; 644  : 
; 645  : 	TrailNode *n;
; 646  : 	ChunkNode *cn;
; 647  : 
; 648  : 	
; 649  : 
; 650  : 
; 651  : 	cn=(ChunkNode *)List.GetHead();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _cn$[ebp], eax
$LN39@Draw:

; 652  : 	while(cn)

	cmp	DWORD PTR _cn$[ebp], 0
	je	$LN38@Draw

; 653  : 	{
; 654  : 		ChunkNode *cn2 = (ChunkNode *)cn->GetSucc();

	mov	ecx, DWORD PTR _cn$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _cn2$2[ebp], eax

; 655  : 
; 656  : 		n=(TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax

; 657  : 		if(!n) 

	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN37@Draw

; 658  : 		{
; 659  : 			// chunk is empty
; 660  : 			// remove it.
; 661  : 			cn->Remove();

	mov	ecx, DWORD PTR _cn$[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove

; 662  : 			delete cn;

	mov	ecx, DWORD PTR _cn$[ebp]
	mov	DWORD PTR $T11[ebp], ecx
	mov	edx, DWORD PTR $T11[ebp]
	mov	DWORD PTR $T14[ebp], edx
	cmp	DWORD PTR $T14[ebp], 0
	je	SHORT $LN43@Draw
	push	1
	mov	ecx, DWORD PTR $T14[ebp]
	call	??_GChunkNode@@QAEPAXI@Z
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN44@Draw
$LN43@Draw:
	mov	DWORD PTR tv89[ebp], 0
$LN44@Draw:

; 663  : 		}
; 664  : 		else

	jmp	$LN6@Draw
$LN37@Draw:

; 665  : 		{
; 666  : 			if(Type->flags & TTF_LINE)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [ecx+72]
	and	edx, 2
	je	$LN35@Draw

; 667  : 			{	// draw the trail as a simple line
; 668  : 				Tpoint prevpos;
; 669  : 				int connected;
; 670  : 				DWORD color;
; 671  : 				int red,green,blue,alpha;
; 672  : 
; 673  : 				red   = FloatToInt32(Type->r * 255.0f);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR [ecx+40]
	mulss	xmm0, DWORD PTR __real@437f0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _red$3[ebp], eax

; 674  : 				green = FloatToInt32(Type->g * 255.0f);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR [eax+44]
	mulss	xmm0, DWORD PTR __real@437f0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _green$8[ebp], eax

; 675  : 				blue  = FloatToInt32(Type->b * 255.0f);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	movss	xmm0, DWORD PTR [edx+48]
	mulss	xmm0, DWORD PTR __real@437f0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _blue$5[ebp], eax

; 676  : 				alpha = FloatToInt32(Type->a * 255.0f);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR [ecx+52]
	mulss	xmm0, DWORD PTR __real@437f0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _alpha$10[ebp], eax

; 677  : 
; 678  : 				color = (alpha<<24) + (red) + (green<<8) + (blue<<16);

	mov	edx, DWORD PTR _alpha$10[ebp]
	shl	edx, 24					; 00000018H
	add	edx, DWORD PTR _red$3[ebp]
	mov	eax, DWORD PTR _green$8[ebp]
	shl	eax, 8
	add	edx, eax
	mov	ecx, DWORD PTR _blue$5[ebp]
	shl	ecx, 16					; 00000010H
	add	edx, ecx
	mov	DWORD PTR _color$7[ebp], edx

; 679  : 
; 680  : 				renderer->SetColor(color);

	mov	edx, DWORD PTR _color$7[ebp]
	push	edx
	mov	eax, DWORD PTR _renderer$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _renderer$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax

; 681  : 				renderer->context.RestoreState(STATE_ALPHA_GOURAUD);

	push	18					; 00000012H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 682  : 
; 683  : 				prevpos=n->StartPos;

	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _prevpos$27[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _prevpos$27[ebp+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR _prevpos$27[ebp+8], ecx

; 684  : 				connected=n->connected;

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR _connected$17[ebp], eax

; 685  : 				n=(TrailNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax
$LN34@Draw:

; 686  : 
; 687  : 				while(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN33@Draw

; 688  : 				{
; 689  : 					TrailNode *n2 = (TrailNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n2$1[ebp], eax

; 690  : 					//renderer->TransformPointToScreen(&n->Position,&b);
; 691  : 
; 692  : 					n->GetAge();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetAge@TrailNode@@QAEMXZ		; TrailNode::GetAge
	fstp	ST(0)

; 693  : 					// n->Update();
; 694  : 
; 695  : 					if(n->Age > Type->lifespan)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+16]
	comiss	xmm0, DWORD PTR [edx+32]
	jbe	SHORT $LN32@Draw

; 696  : 					{
; 697  : 						//n2=0;
; 698  : 					}
; 699  : 					else

	jmp	SHORT $LN31@Draw
$LN32@Draw:

; 700  : 					{
; 701  : 						if(connected)

	cmp	DWORD PTR _connected$17[ebp], 0
	je	SHORT $LN30@Draw

; 702  : 						{
; 703  : 							renderer->Render3DLine(&prevpos,&n->StartPos);

	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR _prevpos$27[ebp]
	push	edx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?Render3DLine@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::Render3DLine
$LN30@Draw:

; 704  : 						}
; 705  : 						
; 706  : 						connected=n->connected;

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _connected$17[ebp], ecx

; 707  : 						prevpos=n->StartPos;

	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 32					; 00000020H
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _prevpos$27[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _prevpos$27[ebp+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR _prevpos$27[ebp+8], edx
$LN31@Draw:

; 708  : 					}
; 709  : 					n=n2;

	mov	eax, DWORD PTR _n2$1[ebp]
	mov	DWORD PTR _n$[ebp], eax

; 710  : 				}

	jmp	SHORT $LN34@Draw
$LN33@Draw:

; 711  : 			}
; 712  : 			else

	jmp	$LN6@Draw
$LN35@Draw:

; 713  : 			{
; 714  : 				// 1st things 1st:
; 715  : 				//   establish the node's age - it's needed later anyhow
; 716  : 				//   purge the dead nodes.
; 717  : 				n=(TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN28@Draw:

; 718  : 				while(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN27@Draw

; 719  : 				{
; 720  : 					TrailNode *n2=(TrailNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n2$9[ebp], eax

; 721  : 
; 722  : 					n->GetAge();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetAge@TrailNode@@QAEMXZ		; TrailNode::GetAge
	fstp	ST(0)

; 723  : 					if( (n->Age > Type->lifespan) && (!keepStaleSegs) ){					

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+16]
	comiss	xmm0, DWORD PTR [edx+32]
	jbe	SHORT $LN46@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+84], 0
	jne	SHORT $LN46@Draw

; 724  : 						n->Remove();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove

; 725  : 						delete n;

	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR $T16[ebp], eax
	cmp	DWORD PTR $T16[ebp], 0
	je	SHORT $LN45@Draw
	push	1
	mov	ecx, DWORD PTR $T16[ebp]
	call	??_GTrailNode@@QAEPAXI@Z
	mov	DWORD PTR tv226[ebp], eax
	jmp	SHORT $LN46@Draw
$LN45@Draw:
	mov	DWORD PTR tv226[ebp], 0
$LN46@Draw:

; 726  : 					}
; 727  : 					n=n2;

	mov	ecx, DWORD PTR _n2$9[ebp]
	mov	DWORD PTR _n$[ebp], ecx

; 728  : 				}

	jmp	$LN28@Draw
$LN27@Draw:

; 729  : 
; 730  : 				n=(TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax

; 731  : 				if(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN6@Draw

; 732  : 				{
; 733  : 					// draw a segmented trail
; 734  : 					if(Type->flags & TTF_SEGMENTED)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR [eax+72]
	and	ecx, 4
	je	$LN24@Draw

; 735  : 					{
; 736  : 						if(greenMode)

	cmp	DWORD PTR ?greenMode@DrawableTrail@@1HA, 0 ; DrawableTrail::greenMode
	je	$LN23@Draw

; 737  : 						{
; 738  : 							float avr= ((litCloudColor.r * Type->r * .68f + Type->rLite)+
; 739  : 										(litCloudColor.g * Type->g * .68f + Type->gLite)+
; 740  : 										(litCloudColor.b * Type->b * .68f + Type->bLite))/3;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+56]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm1, DWORD PTR [ecx+44]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm1, DWORD PTR [eax+60]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm1, DWORD PTR [edx+48]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	addss	xmm1, DWORD PTR [ecx+64]
	addss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR _avr$20[ebp], xmm0

; 741  : 
; 742  : 							v0.r = v1.r = v2.r = v3.r = 0.f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+276], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+224], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+172], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+120], xmm0

; 743  : 							v0.g = v1.g = avr;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$20[ebp]
	movss	DWORD PTR [eax+176], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$20[ebp]
	movss	DWORD PTR [ecx+124], xmm0

; 744  : 							v2.g = v3.g = avr * .80f;

	movss	xmm0, DWORD PTR _avr$20[ebp]
	mulss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR tv312[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv312[ebp]
	movss	DWORD PTR [edx+280], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv312[ebp]
	movss	DWORD PTR [eax+228], xmm0

; 745  : 							v0.b = v1.b = v2.b = v3.b = 0.f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+284], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+232], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+180], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+128], xmm0

; 746  : 						}
; 747  : 						else

	jmp	$LN22@Draw
$LN23@Draw:

; 748  : 						{		
; 749  : 							v0.r = v1.r = litCloudColor.r * Type->r + Type->rLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+56]
	movss	DWORD PTR tv354[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv354[ebp]
	movss	DWORD PTR [eax+172], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv354[ebp]
	movss	DWORD PTR [ecx+120], xmm0

; 750  : 							v2.r = v3.r = litCloudColor.r * Type->r + Type->rLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+56]
	movss	DWORD PTR tv372[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv372[ebp]
	movss	DWORD PTR [eax+276], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv372[ebp]
	movss	DWORD PTR [ecx+224], xmm0

; 751  : 							
; 752  : 							v0.g = v1.g = litCloudColor.g * Type->g + Type->gLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR tv390[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv390[ebp]
	movss	DWORD PTR [eax+176], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv390[ebp]
	movss	DWORD PTR [ecx+124], xmm0

; 753  : 							v2.g = v3.g = litCloudColor.g * Type->g + Type->gLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR tv408[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv408[ebp]
	movss	DWORD PTR [eax+280], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv408[ebp]
	movss	DWORD PTR [ecx+228], xmm0

; 754  : 							
; 755  : 							v0.b = v1.b = litCloudColor.b * Type->b + Type->bLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR tv426[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv426[ebp]
	movss	DWORD PTR [eax+180], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv426[ebp]
	movss	DWORD PTR [ecx+128], xmm0

; 756  : 							v2.b = v3.b = litCloudColor.b * Type->b + Type->bLite;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR tv444[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv444[ebp]
	movss	DWORD PTR [eax+284], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv444[ebp]
	movss	DWORD PTR [ecx+232], xmm0
$LN22@Draw:

; 757  : 						}
; 758  : 					
; 759  : 						n->Update();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?Update@TrailNode@@QAEXXZ		; TrailNode::Update
$LN21@Draw:

; 760  : 						while(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN20@Draw

; 761  : 						{
; 762  : 							TrailNode *n2=(TrailNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n2$21[ebp], eax

; 763  : 
; 764  : 							if(n2)

	cmp	DWORD PTR _n2$21[ebp], 0
	je	SHORT $LN19@Draw

; 765  : 							{
; 766  : 								if(TrailSideTex[Type->texID])

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR [eax+68]
	cmp	DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[ecx*4], 0
	je	SHORT $LN18@Draw

; 767  : 								{
; 768  : 									renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD);

	push	32					; 00000020H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 769  : 									renderer->context.SelectTexture1(TrailSideTex[Type->texID]->TexHandle());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR [eax+68]
	mov	ecx, DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[ecx*4]
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 770  : 								}
; 771  : 								else

	jmp	SHORT $LN17@Draw
$LN18@Draw:

; 772  : 								{
; 773  : 									renderer->context.RestoreState(STATE_ALPHA_GOURAUD);

	push	18					; 00000012H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN17@Draw:

; 774  : 								}
; 775  : 								n2->Update();

	mov	ecx, DWORD PTR _n2$21[ebp]
	call	?Update@TrailNode@@QAEXXZ		; TrailNode::Update

; 776  : 								DrawSegment(renderer, 0, n, n2);

	mov	edx, DWORD PTR _n2$21[ebp]
	push	edx
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _renderer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawSegment@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@1@Z ; DrawableTrail::DrawSegment
$LN19@Draw:

; 777  : 							}
; 778  : 							n=n2;

	mov	edx, DWORD PTR _n2$21[ebp]
	mov	DWORD PTR _n$[ebp], edx

; 779  : 						}

	jmp	$LN21@Draw
$LN20@Draw:

; 780  : 					}
; 781  : 					else

	jmp	$LN6@Draw
$LN24@Draw:

; 782  : 					{
; 783  : 						// draw billboarded poly based trail
; 784  : 						// with LOD levels including really low LOD segments
; 785  : 						float dist,xx,yy,zz;
; 786  : 
; 787  : 						xx=n->StartPos.x-renderer->X();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?X@Render3D@@QAEMXZ			; Render3D::X
	fstp	DWORD PTR tv1329[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+32]
	subss	xmm0, DWORD PTR tv1329[ebp]
	movss	DWORD PTR _xx$13[ebp], xmm0

; 788  : 						yy=n->StartPos.y-renderer->Y();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?Y@Render3D@@QAEMXZ			; Render3D::Y
	fstp	DWORD PTR tv1335[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+36]
	subss	xmm0, DWORD PTR tv1335[ebp]
	movss	DWORD PTR _yy$12[ebp], xmm0

; 789  : 						zz=n->StartPos.z-renderer->Z();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?Z@Render3D@@QAEMXZ			; Render3D::Z
	fstp	DWORD PTR tv1341[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [edx+40]
	subss	xmm0, DWORD PTR tv1341[ebp]
	movss	DWORD PTR _zz$15[ebp], xmm0

; 790  : 
; 791  : 						dist=sqrt(xx*xx+yy*yy+zz*zz);

	movss	xmm0, DWORD PTR _xx$13[ebp]
	mulss	xmm0, DWORD PTR _xx$13[ebp]
	movss	xmm1, DWORD PTR _yy$12[ebp]
	mulss	xmm1, DWORD PTR _yy$12[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _zz$15[ebp]
	mulss	xmm1, DWORD PTR _zz$15[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _dist$4[ebp]

; 792  : 						LOD=(int)(dist * TheStateStack.LODBiasInv * Type->lodBiasFactor );

	movss	xmm0, DWORD PTR _dist$4[ebp]
	mulss	xmm0, DWORD PTR ?LODBiasInv@StateStackClass@@2MA
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mulss	xmm0, DWORD PTR [ecx+80]
	cvttss2si edx, xmm0
	mov	DWORD PTR _LOD$[ebp], edx

; 793  : 						//LOD=0;
; 794  : 
; 795  : 						if(LOD<6)

	cmp	DWORD PTR _LOD$[ebp], 6
	jge	$LN15@Draw

; 796  : 						{   
; 797  : 							// setup UV mapping.
; 798  : /*							v0.u = TEX_UV_MIN, v0.v = TEX_UV_MIN;
; 799  : 							v1.u = TEX_UV_MAX, v1.v = TEX_UV_MIN;
; 800  : 							v2.u = TEX_UV_MAX, v2.v = TEX_UV_MAX;
; 801  : 							v3.u = TEX_UV_MIN, v3.v = TEX_UV_MAX;*/
; 802  : 
; 803  : 							// draw billboards
; 804  : 							TrailTypeEntry *prevnodetype=0;

	mov	DWORD PTR _prevnodetype$26[ebp], 0
$LN14@Draw:

; 805  : 							while(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN13@Draw

; 806  : 							{
; 807  : 								if(n->lodBit & LODPattern[LOD])

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _LOD$[ebp]
	mov	edx, DWORD PTR [eax+84]
	and	edx, DWORD PTR ?LODPattern@@3PAKA[ecx*4]
	je	$LN8@Draw

; 808  : 								{
; 809  : 
; 810  : 									if(prevnodetype!=n->Type)

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _prevnodetype$26[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	je	$LN9@Draw

; 811  : 									{
; 812  : 										prevnodetype=n->Type;

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _prevnodetype$26[ebp], eax

; 813  : 										if(greenMode)

	cmp	DWORD PTR ?greenMode@DrawableTrail@@1HA, 0 ; DrawableTrail::greenMode
	je	$LN10@Draw

; 814  : 										{
; 815  : 											float avr= ((litCloudColor.r * prevnodetype->r * .68f + prevnodetype->rLite)+
; 816  : 														(litCloudColor.g * prevnodetype->g * .68f + prevnodetype->gLite)+
; 817  : 														(litCloudColor.b * prevnodetype->b * .68f + prevnodetype->bLite))/3;

	mov	ecx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [ecx+40]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	addss	xmm0, DWORD PTR [edx+56]
	mov	eax, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm1, DWORD PTR [eax+44]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	ecx, DWORD PTR _prevnodetype$26[ebp]
	addss	xmm1, DWORD PTR [ecx+60]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm1, DWORD PTR [edx+48]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	eax, DWORD PTR _prevnodetype$26[ebp]
	addss	xmm1, DWORD PTR [eax+64]
	addss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR _avr$19[ebp], xmm0

; 818  : 											
; 819  : 											v0.r = v1.r = v2.r = v3.r = 0.f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+276], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+224], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+172], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+120], xmm0

; 820  : 											v0.g = v1.g = avr;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$19[ebp]
	movss	DWORD PTR [edx+176], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$19[ebp]
	movss	DWORD PTR [eax+124], xmm0

; 821  : 											v2.g = v3.g = avr * .80f;

	movss	xmm0, DWORD PTR _avr$19[ebp]
	mulss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR tv615[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv615[ebp]
	movss	DWORD PTR [ecx+280], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv615[ebp]
	movss	DWORD PTR [edx+228], xmm0

; 822  : 											v0.b = v1.b = v2.b = v3.b = 0.f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+284], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+232], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+180], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+128], xmm0

; 823  : 										}
; 824  : 										else

	jmp	$LN9@Draw
$LN10@Draw:

; 825  : 										{	
; 826  : 											float	PrevLite=prevnodetype->rLite;

	mov	ecx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR [ecx+56]
	movss	DWORD PTR _PrevLite$25[ebp], xmm0

; 827  : 											v0.r = v1.r = litCloudColor.r * prevnodetype->r + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [edx+40]
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv655[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv655[ebp]
	movss	DWORD PTR [eax+172], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv655[ebp]
	movss	DWORD PTR [ecx+120], xmm0

; 828  : 											v2.r = v3.r = litCloudColor.r * prevnodetype->r * .68f + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [edx+40]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv671[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv671[ebp]
	movss	DWORD PTR [eax+276], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv671[ebp]
	movss	DWORD PTR [ecx+224], xmm0

; 829  : 											
; 830  : 											v0.g = v1.g = litCloudColor.g * prevnodetype->g + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [edx+44]
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv686[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv686[ebp]
	movss	DWORD PTR [eax+176], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv686[ebp]
	movss	DWORD PTR [ecx+124], xmm0

; 831  : 											v2.g = v3.g = litCloudColor.g * prevnodetype->g * .68f + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [edx+44]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv702[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv702[ebp]
	movss	DWORD PTR [eax+280], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv702[ebp]
	movss	DWORD PTR [ecx+228], xmm0

; 832  : 											
; 833  : 											v0.b = v1.b = litCloudColor.b * prevnodetype->b + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [edx+48]
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv717[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv717[ebp]
	movss	DWORD PTR [eax+180], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv717[ebp]
	movss	DWORD PTR [ecx+128], xmm0

; 834  : 											v2.b = v3.b = litCloudColor.b * prevnodetype->b * .68f + PrevLite;

	mov	edx, DWORD PTR _prevnodetype$26[ebp]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [edx+48]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _PrevLite$25[ebp]
	movss	DWORD PTR tv733[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv733[ebp]
	movss	DWORD PTR [eax+284], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv733[ebp]
	movss	DWORD PTR [ecx+232], xmm0
$LN9@Draw:

; 835  : 										}
; 836  : 									}
; 837  : 									
; 838  : 									n->Update();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?Update@TrailNode@@QAEXXZ		; TrailNode::Update

; 839  : 									
; 840  : 									if(n->Alpha>0.005)

	mov	edx, DWORD PTR _n$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+76]
	comisd	xmm0, QWORD PTR __real@3f747ae147ae147b
	jbe	SHORT $LN8@Draw

; 841  : 									{
; 842  : 										DrawNode(renderer, LOD, n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LOD$[ebp]
	push	ecx
	mov	edx, DWORD PTR _renderer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawNode@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@@Z ; DrawableTrail::DrawNode
$LN8@Draw:

; 843  : 									}
; 844  : 								}
; 845  : 								n=(TrailNode *)n->GetSucc();					

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax

; 846  : 
; 847  : /*
; 848  : 								// skip some nodes based on LOD level
; 849  : 								for(int l=0;l<LOD && n;l++)
; 850  : 								{
; 851  : 									n=(TrailNode *)n->GetSucc();
; 852  : 								}
; 853  : */
; 854  : 
; 855  : 							}

	jmp	$LN14@Draw
$LN13@Draw:

; 856  : 							
; 857  : 						}
; 858  : 						else // draw a segment from the head node to the tail node

	jmp	$LN6@Draw
$LN15@Draw:

; 859  : 						{
; 860  : 							TrailNode *start,*end;
; 861  : 
; 862  : 							start = (TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _start$23[ebp], eax

; 863  : 							end   = (TrailNode *)cn->list.GetTail();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetTail@AList@@QAEPAXXZ		; AList::GetTail
	mov	DWORD PTR _end$24[ebp], eax

; 864  : 
; 865  : 							if(start && end)

	cmp	DWORD PTR _start$23[ebp], 0
	je	$LN6@Draw
	cmp	DWORD PTR _end$24[ebp], 0
	je	$LN6@Draw

; 866  : 							{
; 867  : 								start->Update();

	mov	ecx, DWORD PTR _start$23[ebp]
	call	?Update@TrailNode@@QAEXXZ		; TrailNode::Update

; 868  : 								end->Update();

	mov	ecx, DWORD PTR _end$24[ebp]
	call	?Update@TrailNode@@QAEXXZ		; TrailNode::Update

; 869  : 								
; 870  : 								// set this stuff up
; 871  : 								if(greenMode)

	cmp	DWORD PTR ?greenMode@DrawableTrail@@1HA, 0 ; DrawableTrail::greenMode
	je	$LN5@Draw

; 872  : 								{
; 873  : 									float avr= ((litCloudColor.r * Type->r * .68f + Type->rLite)+
; 874  : 										(litCloudColor.g * Type->g * .68f + Type->gLite)+
; 875  : 										(litCloudColor.b * Type->b * .68f + Type->bLite))/3;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [ecx+40]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+56]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm1, DWORD PTR [edx+44]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	addss	xmm1, DWORD PTR [ecx+60]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	xmm1, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm1, DWORD PTR [eax+48]
	mulss	xmm1, DWORD PTR __real@3f2e147b
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	addss	xmm1, DWORD PTR [edx+64]
	addss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@40400000
	movss	DWORD PTR _avr$22[ebp], xmm0

; 876  : 									
; 877  : 									v0.r = v1.r = v2.r = v3.r = 0.f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+276], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+224], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+172], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+120], xmm0

; 878  : 									v0.g = v1.g = avr;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$22[ebp]
	movss	DWORD PTR [ecx+176], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$22[ebp]
	movss	DWORD PTR [edx+124], xmm0

; 879  : 									v2.g = v3.g = avr;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$22[ebp]
	movss	DWORD PTR [eax+280], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _avr$22[ebp]
	movss	DWORD PTR [ecx+228], xmm0

; 880  : 									v0.b = v1.b = v2.b = v3.b = 0.f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+284], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+232], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+180], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+128], xmm0

; 881  : 								}
; 882  : 								else

	jmp	$LN4@Draw
$LN5@Draw:

; 883  : 								{		
; 884  : 									v0.r = v1.r = litCloudColor.r * Type->r + Type->rLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR tv908[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv908[ebp]
	movss	DWORD PTR [ecx+172], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv908[ebp]
	movss	DWORD PTR [edx+120], xmm0

; 885  : 									v2.r = v3.r = litCloudColor.r * Type->r + Type->rLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A
	mulss	xmm0, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR tv926[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv926[ebp]
	movss	DWORD PTR [ecx+276], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv926[ebp]
	movss	DWORD PTR [edx+224], xmm0

; 886  : 									
; 887  : 									v0.g = v1.g = litCloudColor.g * Type->g + Type->gLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [ecx+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR tv944[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv944[ebp]
	movss	DWORD PTR [ecx+176], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv944[ebp]
	movss	DWORD PTR [edx+124], xmm0

; 888  : 									v2.g = v3.g = litCloudColor.g * Type->g + Type->gLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR [ecx+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR tv962[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv962[ebp]
	movss	DWORD PTR [ecx+280], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv962[ebp]
	movss	DWORD PTR [edx+228], xmm0

; 889  : 									
; 890  : 									v0.b = v1.b = litCloudColor.b * Type->b + Type->bLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR tv980[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv980[ebp]
	movss	DWORD PTR [ecx+180], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv980[ebp]
	movss	DWORD PTR [edx+128], xmm0

; 891  : 									v2.b = v3.b = litCloudColor.b * Type->b + Type->bLite;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	movss	xmm0, DWORD PTR ?litCloudColor@DrawableTrail@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	addss	xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR tv998[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv998[ebp]
	movss	DWORD PTR [ecx+284], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv998[ebp]
	movss	DWORD PTR [edx+232], xmm0
$LN4@Draw:

; 892  : 								}
; 893  : 								
; 894  : 								int seglod;
; 895  : 								if(LOD<10 && TrailSideTex[Type->texID])

	cmp	DWORD PTR _LOD$[ebp], 10		; 0000000aH
	jge	SHORT $LN3@Draw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [ecx+68]
	cmp	DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[edx*4], 0
	je	SHORT $LN3@Draw

; 896  : 								{
; 897  : 									seglod=1;

	mov	DWORD PTR _seglod$18[ebp], 1

; 898  : 									renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD);

	push	32					; 00000020H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 899  : 									renderer->context.SelectTexture1(TrailSideTex[Type->texID]->TexHandle());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [ecx+68]
	mov	ecx, DWORD PTR ?TrailSideTex@@3PAPAVTexture@@A[edx*4]
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 900  : 								}
; 901  : 								else

	jmp	SHORT $LN2@Draw
$LN3@Draw:

; 902  : 								{
; 903  : 									seglod=0;

	mov	DWORD PTR _seglod$18[ebp], 0

; 904  : 									start->Alpha*=.25;

	mov	eax, DWORD PTR _start$23[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+76]
	mulsd	xmm0, QWORD PTR __real@3fd0000000000000
	cvtsd2ss xmm0, xmm0
	mov	ecx, DWORD PTR _start$23[ebp]
	movss	DWORD PTR [ecx+76], xmm0

; 905  : 									end->Alpha*=.25;

	mov	edx, DWORD PTR _end$24[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+76]
	mulsd	xmm0, QWORD PTR __real@3fd0000000000000
	cvtsd2ss xmm0, xmm0
	mov	eax, DWORD PTR _end$24[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 906  : 									renderer->context.RestoreState(STATE_ALPHA_GOURAUD);

	push	18					; 00000012H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN2@Draw:

; 907  : 								}
; 908  : 								
; 909  : 								
; 910  : 								
; 911  : 
; 912  : 								DrawSegment(renderer, seglod, start, end);

	mov	ecx, DWORD PTR _end$24[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$23[ebp]
	push	edx
	mov	eax, DWORD PTR _seglod$18[ebp]
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawSegment@DrawableTrail@@AAEXPAVRenderOTW@@HPAVTrailNode@@1@Z ; DrawableTrail::DrawSegment
$LN6@Draw:

; 913  : 							}
; 914  : 						}
; 915  : 					}
; 916  : 				}
; 917  : 			}
; 918  : 		}
; 919  : 		cn=cn2;

	mov	edx, DWORD PTR _cn2$2[ebp]
	mov	DWORD PTR _cn$[ebp], edx

; 920  : 	}

	jmp	$LN39@Draw
$LN38@Draw:

; 921  : 	if(Link)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN1@Draw

; 922  : 		Link->Draw(renderer, LOD);

	mov	ecx, DWORD PTR _LOD$[ebp]
	push	ecx
	mov	edx, DWORD PTR _renderer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+96]
	mov	edx, DWORD PTR [eax+20]
	call	edx
$LN1@Draw:
$LN41@Draw:

; 923  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@DrawableTrail@@UAEXPAVRenderOTW@@H@Z ENDP		; DrawableTrail::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_trailType$ = 8						; size = 4
?SetType@DrawableTrail@@QAEXH@Z PROC			; DrawableTrail::SetType
; _this$ = ecx

; 635  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 636  : 	type=trailType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trailType$[ebp]
	mov	DWORD PTR [eax+80], ecx

; 637  : 	Type=&types[type];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	imul	eax, 96					; 00000060H
	add	eax, OFFSET _types
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], eax

; 638  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetType@DrawableTrail@@QAEXH@Z ENDP			; DrawableTrail::SetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_n$1 = -12						; size = 4
_cn$2 = -8						; size = 4
_this$ = -4						; size = 4
_len$ = 8						; size = 4
?TrimTrail@DrawableTrail@@QAEXH@Z PROC			; DrawableTrail::TrimTrail
; _this$ = ecx

; 557  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 558  : 	// shit-o function
; 559  : 	// most cases it's called with zero - in that case I cause an interuption
; 560  : 	// in the trail
; 561  : 	//
; 562  : 	// used by the ACMI to set the wingtip trail len (in seconds)
; 563  : 
; 564  : 	if(Link){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN7@TrimTrail

; 565  : 		Link->TrimTrail(len);

	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+96]
	call	?TrimTrail@DrawableTrail@@QAEXH@Z	; DrawableTrail::TrimTrail
$LN7@TrimTrail:

; 566  : 	}
; 567  : 
; 568  : 	if( type == TRAIL_LWING || type == TRAIL_RWING){ 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 12			; 0000000cH
	je	SHORT $LN5@TrimTrail
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+80], 13			; 0000000dH
	jne	SHORT $LN6@TrimTrail
$LN5@TrimTrail:

; 569  : 		// only do it for these types
; 570  : 		// 30, 60, 120, 240 seconds of trails
; 571  : 		Type->lifespan = static_cast<float>(len);

	cvtsi2ss xmm0, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	movss	DWORD PTR [eax+32], xmm0
	jmp	SHORT $LN1@TrimTrail
$LN6@TrimTrail:

; 572  : 		/*
; 573  : 		if(len)
; 574  : 		{
; 575  : 			//Type->trimAmt=1.0/len;
; 576  : 		}
; 577  : 		else
; 578  : 		{
; 579  : 			Type->trimAmt=1;
; 580  : 		}
; 581  : 		*/
; 582  : 	}
; 583  : 	else if (!len){

	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN1@TrimTrail

; 584  : 		// if 0, do not connect the head node to the next addition visually
; 585  : 		ChunkNode *cn;
; 586  : 		TrailNode *n;
; 587  : 
; 588  : 		if (cn=(ChunkNode *)List.GetHead()){

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _cn$2[ebp], eax
	cmp	DWORD PTR _cn$2[ebp], 0
	je	SHORT $LN1@TrimTrail

; 589  : 			if (n=(TrailNode *)cn->list.GetHead()){

	mov	ecx, DWORD PTR _cn$2[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$1[ebp], eax
	cmp	DWORD PTR _n$1[ebp], 0
	je	SHORT $LN1@TrimTrail

; 590  : 				n->connected=0;

	mov	ecx, DWORD PTR _n$1[ebp]
	mov	DWORD PTR [ecx+92], 0
$LN1@TrimTrail:

; 591  : 			}
; 592  : 		}
; 593  : 	}
; 594  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?TrimTrail@DrawableTrail@@QAEXH@Z ENDP			; DrawableTrail::TrimTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
_cn2$1 = -44						; size = 4
tv146 = -40						; size = 4
$T2 = -36						; size = 4
_n2$3 = -32						; size = 4
tv132 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
$T6 = -16						; size = 4
_this$ = -12						; size = 4
_n$ = -8						; size = 4
_cn$ = -4						; size = 4
_now$ = 8						; size = 4
?RewindTrail@DrawableTrail@@QAEHK@Z PROC		; DrawableTrail::RewindTrail
; _this$ = ecx

; 502  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 503  : 	//return 0;
; 504  : 	
; 505  : 	if(Link)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN9@RewindTrai

; 506  : 		Link->RewindTrail(now);

	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+96]
	call	?RewindTrail@DrawableTrail@@QAEHK@Z	; DrawableTrail::RewindTrail
$LN9@RewindTrai:

; 507  : 
; 508  : 	ChunkNode *cn;
; 509  : 	TrailNode *n;
; 510  : 
; 511  : 	
; 512  : 	cn=(ChunkNode *)List.GetHead();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _cn$[ebp], eax
$LN8@RewindTrai:

; 513  : 	while(cn)

	cmp	DWORD PTR _cn$[ebp], 0
	je	$LN7@RewindTrai

; 514  : 	{
; 515  : 		ChunkNode *cn2 = (ChunkNode *)cn->GetSucc();

	mov	ecx, DWORD PTR _cn$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _cn2$1[ebp], eax

; 516  : 
; 517  : 		n=(TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN6@RewindTrai:

; 518  : 		while(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN5@RewindTrai

; 519  : 		{
; 520  : 			TrailNode *n2;
; 521  : 			n2=(TrailNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n2$3[ebp], eax

; 522  : 
; 523  : 			if(n->NowTime >= now)

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	cmp	ecx, DWORD PTR _now$[ebp]
	jb	SHORT $LN4@RewindTrai

; 524  : 			{
; 525  : 				n->Remove();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove

; 526  : 				delete n;

	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T6[ebp], eax
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN12@RewindTrai
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GTrailNode@@QAEPAXI@Z
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN4@RewindTrai
$LN12@RewindTrai:
	mov	DWORD PTR tv132[ebp], 0
$LN4@RewindTrai:

; 527  : 			}
; 528  : 
; 529  : 			n=n2;

	mov	ecx, DWORD PTR _n2$3[ebp]
	mov	DWORD PTR _n$[ebp], ecx

; 530  : 		}

	jmp	SHORT $LN6@RewindTrai
$LN5@RewindTrai:

; 531  : 		if(!cn->list.GetHead())

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	test	eax, eax
	jne	SHORT $LN3@RewindTrai

; 532  : 		{
; 533  : 			// empty
; 534  : 			cn->Remove();

	mov	ecx, DWORD PTR _cn$[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove

; 535  : 			delete cn;

	mov	edx, DWORD PTR _cn$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN14@RewindTrai
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GChunkNode@@QAEPAXI@Z
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN3@RewindTrai
$LN14@RewindTrai:
	mov	DWORD PTR tv146[ebp], 0
$LN3@RewindTrai:

; 536  : 		}
; 537  : 		cn=cn2;

	mov	ecx, DWORD PTR _cn2$1[ebp]
	mov	DWORD PTR _cn$[ebp], ecx

; 538  : 	}

	jmp	$LN8@RewindTrai
$LN7@RewindTrai:

; 539  : 	Something=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+92], 0

; 540  : 
; 541  : 	if(cn=(ChunkNode *)List.GetHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _cn$[ebp], eax
	cmp	DWORD PTR _cn$[ebp], 0
	je	SHORT $LN2@RewindTrai

; 542  : 	{
; 543  : 		if(n=(TrailNode *)cn->list.GetHead())

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN2@RewindTrai

; 544  : 		{
; 545  : 			n->connected=0;

	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+92], 0
$LN2@RewindTrai:

; 546  : 		}
; 547  : 	}
; 548  : 
; 549  : 	return 0;

	xor	eax, eax

; 550  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RewindTrail@DrawableTrail@@QAEHK@Z ENDP		; DrawableTrail::RewindTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
tv621 = -216						; size = 8
tv556 = -208						; size = 8
tv465 = -200						; size = 8
tv623 = -192						; size = 8
tv563 = -184						; size = 8
tv619 = -176						; size = 8
tv561 = -168						; size = 4
_timed$2 = -164						; size = 4
_timeb$3 = -160						; size = 4
_dx$ = -156						; size = 8
_dz$ = -148						; size = 8
$T4 = -140						; size = 4
_dy$ = -136						; size = 8
$T5 = -128						; size = 4
_p$6 = -124						; size = 8
_d$ = -116						; size = 8
tv462 = -108						; size = 4
tv153 = -104						; size = 4
tv551 = -100						; size = 4
tv546 = -96						; size = 4
$T7 = -92						; size = 4
$T8 = -88						; size = 4
tv91 = -84						; size = 4
_q$9 = -80						; size = 8
_now$ = -72						; size = 4
_spacing$10 = -68					; size = 4
_cn2$11 = -64						; size = 4
tv558 = -58						; size = 2
_lbit$12 = -56						; size = 4
_cn$ = -52						; size = 4
_this$ = -48						; size = 4
_n$ = -44						; size = 4
_h2$13 = -40						; size = 12
_h$14 = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_worldPos$ = 8						; size = 4
___formal$ = 12						; size = 4
?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z PROC	; DrawableTrail::AddPointAtHead
; _this$ = ecx

; 346  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 	DWORD now;
; 348  : 	now = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR _now$[ebp], eax

; 349  : 
; 350  : 	if(Link){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN21@AddPointAt

; 351  : 		Link->AddPointAtHead(worldPos, now);

	mov	ecx, DWORD PTR _now$[ebp]
	push	ecx
	mov	edx, DWORD PTR _worldPos$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	call	?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z ; DrawableTrail::AddPointAtHead
$LN21@AddPointAt:

; 352  : 	}
; 353  : 
; 354  : 	ChunkNode *cn;
; 355  : 	TrailNode *n;
; 356  : 	double dx, dy, dz, d;
; 357  : 
; 358  : 	// new TrailNodes are added to the head ChunkNode
; 359  : 	cn= (ChunkNode *)List.GetHead();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _cn$[ebp], eax

; 360  : 
; 361  : 	if (Something > 500 && cn && !(Type->flags & TTF_LINE)){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 500			; 000001f4H
	jle	$LN19@AddPointAt
	cmp	DWORD PTR _cn$[ebp], 0
	je	$LN19@AddPointAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR [eax+72]
	and	ecx, 2
	jne	$LN19@AddPointAt

; 362  : 		// time to make a new chunk node...
; 363  : 		ChunkNode *cn2;
; 364  : 		if(cn2 = new ChunkNode(Type)){

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN24@AddPointAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z	; ChunkNode::ChunkNode
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN25@AddPointAt
$LN24@AddPointAt:
	mov	DWORD PTR tv91[ebp], 0
$LN25@AddPointAt:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _cn2$11[ebp], edx
	cmp	DWORD PTR _cn2$11[ebp], 0
	je	SHORT $LN19@AddPointAt

; 365  : 			// first remove the head of the current chunk (we need it for continuity)
; 366  : 			if(n=(TrailNode *)cn->list.RemHead())

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN18@AddPointAt

; 367  : 			{
; 368  : 				cn2->list.AddHead(n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cn2$11[ebp]
	add	ecx, 16					; 00000010H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead
$LN18@AddPointAt:

; 369  : 			}
; 370  : 			List.AddHead(cn2);

	mov	ecx, DWORD PTR _cn2$11[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 371  : 
; 372  : 			cn=cn2;

	mov	edx, DWORD PTR _cn2$11[ebp]
	mov	DWORD PTR _cn$[ebp], edx

; 373  : 			Something=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
$LN19@AddPointAt:

; 374  : 		}
; 375  : 	}
; 376  : 
; 377  : 	if(!cn)

	cmp	DWORD PTR _cn$[ebp], 0
	jne	SHORT $LN17@AddPointAt

; 378  : 	{
; 379  : 		// if there's no chunk nodes, or if the previous 
; 380  : 		// chunk node has more than X nodes, add a new ChunkNode
; 381  : 		cn = new ChunkNode(Type);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN26@AddPointAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0ChunkNode@@QAE@PAUTrailTypeEntry@@@Z	; ChunkNode::ChunkNode
	mov	DWORD PTR tv153[ebp], eax
	jmp	SHORT $LN27@AddPointAt
$LN26@AddPointAt:
	mov	DWORD PTR tv153[ebp], 0
$LN27@AddPointAt:
	mov	eax, DWORD PTR tv153[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _cn$[ebp], ecx

; 382  : 		if(!cn) // out of ram?

	cmp	DWORD PTR _cn$[ebp], 0
	jne	SHORT $LN16@AddPointAt

; 383  : 			return;

	jmp	$LN22@AddPointAt
$LN16@AddPointAt:

; 384  : 		List.AddHead(cn);

	mov	edx, DWORD PTR _cn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 385  : 		Something=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
$LN17@AddPointAt:

; 386  : 	}
; 387  : 	
; 388  : 	n=(TrailNode *)cn->list.GetHead();

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax

; 389  : 	if(n && n->connected)

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN15@AddPointAt
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	je	$LN15@AddPointAt

; 390  : 	{
; 391  : 		int lbit = n->lodBit;

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR _lbit$12[ebp], eax

; 392  : 		lbit=lbit<<1;

	mov	ecx, DWORD PTR _lbit$12[ebp]
	shl	ecx, 1
	mov	DWORD PTR _lbit$12[ebp], ecx

; 393  : 		if(lbit>255) lbit=1;

	cmp	DWORD PTR _lbit$12[ebp], 255		; 000000ffH
	jle	SHORT $LN14@AddPointAt
	mov	DWORD PTR _lbit$12[ebp], 1
$LN14@AddPointAt:

; 394  : 
; 395  : 		if(now<n->NowTime)

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _now$[ebp]
	cmp	eax, DWORD PTR [edx+88]
	jae	SHORT $LN13@AddPointAt

; 396  : 			return;

	jmp	$LN22@AddPointAt
$LN13@AddPointAt:

; 397  : 		float spacing=Type->spacing + NRANDPOS * Type->spcVariation;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+88]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mulss	xmm0, DWORD PTR [eax+12]
	addss	xmm0, DWORD PTR [esi+8]
	movss	DWORD PTR _spacing$10[ebp], xmm0

; 398  : 
; 399  : 		if(Type->flags & TTF_TIMESPACED)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR [edx+72]
	and	eax, 1
	je	$LN12@AddPointAt

; 400  : 		{
; 401  : 			if((now - n->NowTime) >= (spacing) * 1000) 

	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _now$[ebp]
	sub	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR tv462[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv462[ebp]
	mov	eax, DWORD PTR tv462[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv465[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv465[ebp]
	movss	xmm1, DWORD PTR _spacing$10[ebp]
	mulss	xmm1, DWORD PTR __real@447a0000
	comiss	xmm0, xmm1
	jb	SHORT $LN10@AddPointAt

; 402  : 			{   // use Spacing as a time value
; 403  : 				// only add a new node if enough time has elapsed since the head node was
; 404  : 				// created.
; 405  : 				n=GetATrailNode(worldPos,Type);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _worldPos$[ebp]
	push	eax
	call	?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z ; GetATrailNode
	add	esp, 8
	mov	DWORD PTR _n$[ebp], eax

; 406  : 				if(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN10@AddPointAt

; 407  : 				{
; 408  : 					n->lodBit=lbit;

	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _lbit$12[ebp]
	mov	DWORD PTR [ecx+84], edx

; 409  : 					n->velocity=headFPS;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 56					; 00000038H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 410  : 					cn->list.AddHead((ANode *)n);

	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 411  : 					Something++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
$LN10@AddPointAt:

; 412  : 				}
; 413  : 			}
; 414  : 		}
; 415  : 		else

	jmp	$LN5@AddPointAt
$LN12@AddPointAt:

; 416  : 		{   
; 417  : 			// distance spaced
; 418  : 			Tpoint h;
; 419  : 			
; 420  : 			h.x=n->StartPos.x;

	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR _h$14[ebp], xmm0

; 421  : 			h.y=n->StartPos.y;

	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR _h$14[ebp+4], xmm0

; 422  : 			h.z=n->StartPos.z;

	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR _h$14[ebp+8], xmm0

; 423  : 			
; 424  : 			dx=worldPos->x - h.x;

	mov	edx, DWORD PTR _worldPos$[ebp]
	movss	xmm0, DWORD PTR [edx]
	subss	xmm0, DWORD PTR _h$14[ebp]
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR _dx$[ebp], xmm0

; 425  : 			dy=worldPos->y - h.y;

	mov	eax, DWORD PTR _worldPos$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, DWORD PTR _h$14[ebp+4]
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR _dy$[ebp], xmm0

; 426  : 			dz=worldPos->z - h.z;

	mov	ecx, DWORD PTR _worldPos$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR _h$14[ebp+8]
	cvtss2sd xmm0, xmm0
	movsd	QWORD PTR _dz$[ebp], xmm0

; 427  : 			
; 428  : 			d = sqrt(static_cast<float>(dx*dx + dy*dy + dz*dz));

	movsd	xmm0, QWORD PTR _dx$[ebp]
	mulsd	xmm0, QWORD PTR _dx$[ebp]
	movsd	xmm1, QWORD PTR _dy$[ebp]
	mulsd	xmm1, QWORD PTR _dy$[ebp]
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR _dz$[ebp]
	mulsd	xmm1, QWORD PTR _dz$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	QWORD PTR _d$[ebp]

; 429  : 
; 430  : 			if (d > 1000.0){

	movsd	xmm0, QWORD PTR _d$[ebp]
	comisd	xmm0, QWORD PTR __real@408f400000000000
	jbe	SHORT $LN8@AddPointAt

; 431  : 				n->connected=0;

	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+92], 0
$LN8@AddPointAt:

; 432  : 			}
; 433  : 			
; 434  : 			
; 435  : 			// first check the distance between the worldPos & the first node.
; 436  : 			// if its less then the spacing amount, don't add a new node.
; 437  : 			double q = 0.0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _q$9[ebp], xmm0

; 438  : 			
; 439  : 			if (n->connected==0) 

	mov	eax, DWORD PTR _n$[ebp]
	cmp	DWORD PTR [eax+92], 0
	jne	SHORT $LN7@AddPointAt

; 440  : 			{
; 441  : 				q = d - spacing - .01f; 

	cvtss2sd xmm0, DWORD PTR _spacing$10[ebp]
	movsd	xmm1, QWORD PTR _d$[ebp]
	subsd	xmm1, xmm0
	subsd	xmm1, QWORD PTR __real@3f847ae140000000
	movsd	QWORD PTR _q$9[ebp], xmm1
$LN7@AddPointAt:

; 442  : 				//*ctd=0; 
; 443  : 			}
; 444  : 						
; 445  : 			q += spacing;

	cvtss2sd xmm0, DWORD PTR _spacing$10[ebp]
	addsd	xmm0, QWORD PTR _q$9[ebp]
	movsd	QWORD PTR _q$9[ebp], xmm0

; 446  : 
; 447  :             DWORD timed = now - n->NowTime;

	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _now$[ebp]
	sub	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _timed$2[ebp], edx

; 448  : 			DWORD timeb = n->NowTime;

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _timeb$3[ebp], ecx
$LN6@AddPointAt:

; 449  : 
; 450  : 			while (q<d){

	movsd	xmm0, QWORD PTR _d$[ebp]
	comisd	xmm0, QWORD PTR _q$9[ebp]
	jbe	$LN5@AddPointAt

; 451  : 				double p;
; 452  : 				
; 453  : 				p = q/d;

	movsd	xmm0, QWORD PTR _q$9[ebp]
	divsd	xmm0, QWORD PTR _d$[ebp]
	movsd	QWORD PTR _p$6[ebp], xmm0

; 454  : 				
; 455  : 				Tpoint h2;
; 456  : 				
; 457  : 				h2.x = static_cast<float>(h.x + (dx * p) + NRAND * Type->posVariationStart);

	cvtss2sd xmm0, DWORD PTR _h$14[ebp]
	movsd	xmm1, QWORD PTR _dx$[ebp]
	mulsd	xmm1, QWORD PTR _p$6[ebp]
	addsd	xmm0, xmm1
	movsd	QWORD PTR tv619[ebp], xmm0
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mulss	xmm1, DWORD PTR [eax]
	cvtss2sd xmm0, xmm1
	movsd	xmm1, QWORD PTR tv619[ebp]
	addsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	movss	DWORD PTR _h2$13[ebp], xmm0

; 458  : 				h2.y = static_cast<float>(h.y + (dy * p) + NRAND * Type->posVariationStart);

	cvtss2sd xmm0, DWORD PTR _h$14[ebp+4]
	movsd	xmm1, QWORD PTR _dy$[ebp]
	mulsd	xmm1, QWORD PTR _p$6[ebp]
	addsd	xmm0, xmm1
	movsd	QWORD PTR tv621[ebp], xmm0
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mulss	xmm1, DWORD PTR [edx]
	cvtss2sd xmm0, xmm1
	movsd	xmm1, QWORD PTR tv621[ebp]
	addsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	movss	DWORD PTR _h2$13[ebp+4], xmm0

; 459  : 				h2.z = static_cast<float>(h.z + (dz * p) + NRAND * Type->posVariationStart);

	cvtss2sd xmm0, DWORD PTR _h$14[ebp+8]
	movsd	xmm1, QWORD PTR _dz$[ebp]
	mulsd	xmm1, QWORD PTR _p$6[ebp]
	addsd	xmm0, xmm1
	movsd	QWORD PTR tv623[ebp], xmm0
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mulss	xmm1, DWORD PTR [ecx]
	cvtss2sd xmm0, xmm1
	movsd	xmm1, QWORD PTR tv623[ebp]
	addsd	xmm1, xmm0
	cvtsd2ss xmm0, xmm1
	movss	DWORD PTR _h2$13[ebp+8], xmm0

; 460  : 
; 461  : 				n = GetATrailNode(&h2,Type);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	lea	ecx, DWORD PTR _h2$13[ebp]
	push	ecx
	call	?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z ; GetATrailNode
	add	esp, 8
	mov	DWORD PTR _n$[ebp], eax

; 462  : 				if(n){

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN4@AddPointAt

; 463  : 					n->lodBit=lbit;

	mov	edx, DWORD PTR _n$[ebp]
	mov	eax, DWORD PTR _lbit$12[ebp]
	mov	DWORD PTR [edx+84], eax

; 464  : 					lbit=lbit<<1;

	mov	ecx, DWORD PTR _lbit$12[ebp]
	shl	ecx, 1
	mov	DWORD PTR _lbit$12[ebp], ecx

; 465  : 					if(lbit>255) lbit=1;

	cmp	DWORD PTR _lbit$12[ebp], 255		; 000000ffH
	jle	SHORT $LN3@AddPointAt
	mov	DWORD PTR _lbit$12[ebp], 1
$LN3@AddPointAt:

; 466  : 
; 467  : 					n->NowTime =(DWORD)( timeb + (timed * p) );

	mov	edx, DWORD PTR _timeb$3[ebp]
	mov	DWORD PTR tv546[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv546[ebp]
	mov	eax, DWORD PTR tv546[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	mov	ecx, DWORD PTR _timed$2[ebp]
	mov	DWORD PTR tv551[ebp], ecx
	cvtsi2sd xmm1, DWORD PTR tv551[ebp]
	mov	edx, DWORD PTR tv551[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	mulsd	xmm1, QWORD PTR _p$6[ebp]
	addsd	xmm0, xmm1
	movsd	QWORD PTR tv556[ebp], xmm0
	fld	QWORD PTR tv556[ebp]
	fnstcw	WORD PTR tv558[ebp]
	movzx	eax, WORD PTR tv558[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv561[ebp], eax
	fldcw	WORD PTR tv561[ebp]
	fistp	QWORD PTR tv563[ebp]
	fldcw	WORD PTR tv558[ebp]
	mov	eax, DWORD PTR tv563[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+88], eax

; 468  : 					n->velocity=headFPS;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 100				; 00000064H
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 469  : 					
; 470  : 					cn->list.AddHead((ANode *)n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 471  : 					Something++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], edx
$LN4@AddPointAt:

; 472  : 				}
; 473  : 				q+=spacing;

	cvtss2sd xmm0, DWORD PTR _spacing$10[ebp]
	addsd	xmm0, QWORD PTR _q$9[ebp]
	movsd	QWORD PTR _q$9[ebp], xmm0

; 474  : 			}

	jmp	$LN6@AddPointAt
$LN5@AddPointAt:

; 475  : 		}
; 476  : 
; 477  : 	}
; 478  : 	else

	jmp	SHORT $LN1@AddPointAt
$LN15@AddPointAt:

; 479  : 	{
; 480  : 		Something=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 0

; 481  : 		n=GetATrailNode(worldPos,Type);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _worldPos$[ebp]
	push	ecx
	call	?GetATrailNode@@YAPAVTrailNode@@PAUTpoint@@PAUTrailTypeEntry@@@Z ; GetATrailNode
	add	esp, 8
	mov	DWORD PTR _n$[ebp], eax

; 482  : 		if(n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN1@AddPointAt

; 483  : 		{
; 484  : 			n->lodBit=1;

	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+84], 1

; 485  : 			n->velocity=headFPS;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 56					; 00000038H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 486  : 
; 487  : 			cn->list.AddHead((ANode *)n);

	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 488  : 			Something++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
$LN1@AddPointAt:

; 489  : 		}
; 490  : 	}
; 491  : 	
; 492  : 
; 493  : 	// Update the location of this object
; 494  : 	position = *worldPos;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	eax, DWORD PTR _worldPos$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
$LN22@AddPointAt:

; 495  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z ENDP	; DrawableTrail::AddPointAtHead
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
tv139 = -60						; size = 4
$T2 = -56						; size = 4
tv134 = -52						; size = 4
$T3 = -48						; size = 4
tv89 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
_n$7 = -28						; size = 4
_cn$ = -24						; size = 4
$T8 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DrawableTrail@@UAE@XZ PROC				; DrawableTrail::~DrawableTrail
; _this$ = ecx

; 296  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DrawableTrail@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableTrail@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 297  : 	// Delete this object's trail
; 298  : 	if(Link) 

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	je	SHORT $LN4@DrawableTr

; 299  : 		delete Link;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T8[ebp], ecx
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN8@DrawableTr
	push	1
	mov	edx, DWORD PTR $T8[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T8[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN4@DrawableTr
$LN8@DrawableTr:
	mov	DWORD PTR tv89[ebp], 0
$LN4@DrawableTr:

; 300  : 
; 301  : 	ChunkNode *cn;
; 302  : 	while(cn=(ChunkNode *)List.RemHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _cn$[ebp], eax
	cmp	DWORD PTR _cn$[ebp], 0
	je	SHORT $LN6@DrawableTr
$LN2@DrawableTr:

; 303  : 	{
; 304  : 		TrailNode *n;
; 305  : 		while(n=(TrailNode *)cn->list.RemHead())

	mov	ecx, DWORD PTR _cn$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _n$7[ebp], eax
	cmp	DWORD PTR _n$7[ebp], 0
	je	SHORT $LN1@DrawableTr

; 306  : 		{
; 307  : 			delete n;

	mov	eax, DWORD PTR _n$7[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN10@DrawableTr
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GTrailNode@@QAEPAXI@Z
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN11@DrawableTr
$LN10@DrawableTr:
	mov	DWORD PTR tv134[ebp], 0
$LN11@DrawableTr:

; 308  : 		}

	jmp	SHORT $LN2@DrawableTr
$LN1@DrawableTr:

; 309  : 		delete cn;

	mov	edx, DWORD PTR _cn$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN12@DrawableTr
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GChunkNode@@QAEPAXI@Z
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN13@DrawableTr
$LN12@DrawableTr:
	mov	DWORD PTR tv139[ebp], 0
$LN13@DrawableTr:

; 310  : 	}

	jmp	SHORT $LN4@DrawableTr
$LN6@DrawableTr:

; 311  : 
; 312  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1AList@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1DrawableTrail@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
__unwindfunclet$??1DrawableTrail@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1AList@@QAE@XZ
__ehhandler$??1DrawableTrail@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DrawableTrail@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DrawableTrail@@UAE@XZ ENDP				; DrawableTrail::~DrawableTrail
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawsgmt.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv140 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_trailType$ = 8						; size = 4
_scale$ = 12						; size = 4
??0DrawableTrail@@QAE@HM@Z PROC				; DrawableTrail::DrawableTrail
; _this$ = ecx

; 246  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DrawableTrail@@QAE@HM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DrawableObject@@QAE@M@Z		; DrawableObject::DrawableObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableTrail@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0AList@@QAE@XZ			; AList::AList
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 247  : 	MonoPrint("New Trail %d\n",trailType);

	mov	ecx, DWORD PTR _trailType$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@JBBLPKIF@New?5Trail?5?$CFd?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 248  : 	ShiAssert( trailType >= 0 );
; 249  : 
; 250  : 	Link=0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 0

; 251  : 
; 252  : 	// Store the trail type
; 253  : 	type=trailType;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trailType$[ebp]
	mov	DWORD PTR [eax+80], ecx

; 254  : 	Type = &types[trailType];

	mov	edx, DWORD PTR _trailType$[ebp]
	imul	edx, 96					; 00000060H
	add	edx, OFFSET _types
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], edx

; 255  : 
; 256  : 	if(Type->linkID)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	cmp	DWORD PTR [edx+76], 0
	je	SHORT $LN2@DrawableTr

; 257  : 	{
; 258  : 		Link = new DrawableTrail(Type->linkID,scale);

	push	320					; 00000140H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@DrawableTr
	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DrawableTrail@@QAE@HM@Z		; DrawableTrail::DrawableTrail
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN6@DrawableTr
$LN5@DrawableTr:
	mov	DWORD PTR tv140[ebp], 0
$LN6@DrawableTr:
	mov	eax, DWORD PTR tv140[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+96], edx
$LN2@DrawableTr:

; 259  : 	}
; 260  : 	
; 261  : 	// Store this trail's radius
; 262  : 	radius = types[trailType].radiusStart;

	mov	eax, DWORD PTR _trailType$[ebp]
	imul	eax, 96					; 00000060H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _types[eax+16]
	mov	DWORD PTR [ecx+16], edx

; 263  : 	
; 264  : 	// used by ACMI
; 265  : 	keepStaleSegs = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0

; 266  : 	
; 267  : 	// Set to position 0.0, 0.0, 0.0;
; 268  : 	position.x = 0.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+4], xmm0

; 269  : 	position.y = 0.0F;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+8], xmm0

; 270  : 	position.z = 0.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+12], xmm0

; 271  : 
; 272  : 	headFPS.x=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+100], xmm0

; 273  : 	headFPS.y=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+104], xmm0

; 274  : 	headFPS.z=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+108], xmm0

; 275  : 
; 276  : 	TrailTexture = TrailTex[Type->texID];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?TrailTex@@3PAPAVTexture@@A[eax*4]
	mov	DWORD PTR [ecx+76], edx

; 277  : 
; 278  : 	//JAM 03Feb04
; 279  : 	if(!TrailTexture)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jne	SHORT $LN1@DrawableTr

; 280  : 		TrailTexture = TrailTex[0];

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?TrailTex@@3PAPAVTexture@@A[ecx]
	mov	DWORD PTR [edx+76], eax
$LN1@DrawableTr:

; 281  : 
; 282  : 	Something=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], 0

; 283  : 
; 284  : 	v0.u = TEX_UV_MIN, v0.v = TEX_UV_MIN;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR [edx+136], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR [eax+140], xmm0

; 285  : 	v1.u = TEX_UV_MAX, v1.v = TEX_UV_MIN;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR [ecx+188], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR [edx+192], xmm0

; 286  : 	v2.u = TEX_UV_MAX, v2.v = TEX_UV_MAX;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR [eax+240], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR [ecx+244], xmm0

; 287  : 	v3.u = TEX_UV_MIN, v3.v = TEX_UV_MAX;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR [edx+292], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR [eax+296], xmm0

; 288  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1AList@@QAE@XZ
__unwindfunclet$??0DrawableTrail@@QAE@HM@Z$2:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0DrawableTrail@@QAE@HM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DrawableTrail@@QAE@HM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DrawableTrail@@QAE@HM@Z ENDP				; DrawableTrail::DrawableTrail
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\timemgr.h
;	COMDAT ?GetClockTime@TimeManager@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClockTime@TimeManager@@QAEKXZ PROC			; TimeManager::GetClockTime, COMDAT
; _this$ = ecx

; 48   : 	DWORD	GetClockTime( void )		{ return currentTime; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClockTime@TimeManager@@QAEKXZ ENDP			; TimeManager::GetClockTime
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1AList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1AList@@QAE@XZ PROC					; AList::~AList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AList@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AList@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??1AList@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AList@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AList@@QAE@XZ ENDP					; AList::~AList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\alist.h
;	COMDAT ?CompareWith@ANode@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?CompareWith@ANode@@UAEHPAV1@@Z PROC			; ANode::CompareWith, COMDAT
; _this$ = ecx

; 13   : 	virtual int CompareWith(ANode *n) {return 0;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?CompareWith@ANode@@UAEHPAV1@@Z ENDP			; ANode::CompareWith
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Z@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Z@Render3D@@QAEMXZ PROC				; Render3D::Z, COMDAT
; _this$ = ecx

; 80   : 	float	Z( void )	{ return cameraPos.z; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262932]
	mov	esp, ebp
	pop	ebp
	ret	0
?Z@Render3D@@QAEMXZ ENDP				; Render3D::Z
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Y@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Y@Render3D@@QAEMXZ PROC				; Render3D::Y, COMDAT
; _this$ = ecx

; 79   : 	float	Y( void )	{ return cameraPos.y; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262928]
	mov	esp, ebp
	pop	ebp
	ret	0
?Y@Render3D@@QAEMXZ ENDP				; Render3D::Y
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?X@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?X@Render3D@@QAEMXZ PROC				; Render3D::X, COMDAT
; _this$ = ecx

; 78   : 	float	X( void )	{ return cameraPos.x; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262924]
	mov	esp, ebp
	pop	ebp
	ret	0
?X@Render3D@@QAEMXZ ENDP				; Render3D::X
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tex.h
;	COMDAT ?TexHandle@Texture@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TexHandle@Texture@@QAEKXZ PROC				; Texture::TexHandle, COMDAT
; _this$ = ecx

; 60   : 	DWORD TexHandle() { return (DWORD) texHandle; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?TexHandle@Texture@@QAEKXZ ENDP				; Texture::TexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDrawableObject@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawableObject@@UAEPAXI@Z PROC			; DrawableObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawableObject@@UAEPAXI@Z ENDP			; DrawableObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z PROC ; DrawableObject::SetParentList, COMDAT
; _this$ = ecx

; 70   : 	virtual	void SetParentList( ObjectDisplayList *list )	{ parentList = list; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z ENDP ; DrawableObject::SetParentList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z PROC ; DrawableObject::GetRayHit, COMDAT
; _this$ = ecx

; 49   : 	virtual BOOL GetRayHit( const Tpoint*, const Tpoint*, Tpoint*, float = 1.0f ) { return FALSE; } ;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z ENDP ; DrawableObject::GetRayHit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Draw@DrawableObject@@UAEXPAVRender3D@@@Z PROC		; DrawableObject::Draw, COMDAT
; _this$ = ecx

; 45   : 	virtual void Draw( class Render3D* ) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Draw@DrawableObject@@UAEXPAVRender3D@@@Z ENDP		; DrawableObject::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetInhibitFlag@DrawableObject@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetInhibitFlag@DrawableObject@@UAEXH@Z PROC		; DrawableObject::SetInhibitFlag, COMDAT
; _this$ = ecx

; 42   : 	virtual void SetInhibitFlag( BOOL )				{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetInhibitFlag@DrawableObject@@UAEXH@Z ENDP		; DrawableObject::SetInhibitFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetLabel@DrawableObject@@UAEXPADK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetLabel@DrawableObject@@UAEXPADK@Z PROC		; DrawableObject::SetLabel, COMDAT
; _this$ = ecx

; 40   : 	virtual void SetLabel( char*, DWORD )	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetLabel@DrawableObject@@UAEXPADK@Z ENDP		; DrawableObject::SetLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?GetRadarSign@DrawableObject@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRadarSign@DrawableObject@@UAEMXZ PROC		; DrawableObject::GetRadarSign, COMDAT
; _this$ = ecx

; 22   : 	virtual	float	GetRadarSign(void)		{ return 0.0f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRadarSign@DrawableObject@@UAEMXZ ENDP		; DrawableObject::GetRadarSign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ??1DrawableObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DrawableObject@@UAE@XZ PROC				; DrawableObject::~DrawableObject, COMDAT
; _this$ = ecx

; 19   : 	virtual ~DrawableObject()	{ ShiAssert( parentList == NULL ) };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableObject@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1DrawableObject@@UAE@XZ ENDP				; DrawableObject::~DrawableObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ??0DrawableObject@@QAE@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??0DrawableObject@@QAE@M@Z PROC				; DrawableObject::DrawableObject, COMDAT
; _this$ = ecx

; 17   : 	DrawableObject( float s )	{ drawClassID = Default, scale = s, parentList = NULL, prev = next = NULL; test = 0.0;  };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableObject@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [edx+20], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+40], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0DrawableObject@@QAE@M@Z ENDP				; DrawableObject::DrawableObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
END
