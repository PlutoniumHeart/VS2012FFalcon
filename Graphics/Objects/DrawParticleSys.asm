; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\Graphics\Objects\DrawParticleSys.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0L@PNNNILEB@gravity?$DN?46?$AA@		; `string'
PUBLIC	??_C@_0BF@PKNJGIMD@initialvelocity?$DN10?51?$AA@ ; `string'
PUBLIC	??_C@_08IOEFGHLG@id?$DNflash?$AA@		; `string'
PUBLIC	??_C@_0P@CLKPKFHG@lifespan?$DN?43?0?42?$AA@	; `string'
PUBLIC	??_C@_0O@JAPFAIGK@size?$FL0?$FN?5?$DN?5?530?$AA@ ; `string'
PUBLIC	??_C@_0N@BCELEJIM@id?$DNflash?9air?$AA@		; `string'
PUBLIC	??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@	; `string'
PUBLIC	??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@	; `string'
PUBLIC	??_C@_0O@MGGGEMCG@id?$DNflash?9bomb?$AA@	; `string'
PUBLIC	??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@	; `string'
PUBLIC	??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@	; `string'
PUBLIC	??_C@_0N@DCOCGCII@id?$DNflash?9mav?$AA@		; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	??_C@_0M@EACBBCGB@id?$DNflash?960?$AA@		; `string'
PUBLIC	??_C@_0M@NMHEPABG@alpha?$FL1?$FN?$DN?45?$AA@	; `string'
PUBLIC	??_C@_0N@JFCLIFNH@size?$FL1?$FN?5?$DN?530?$AA@	; `string'
PUBLIC	??_C@_0BK@GNIJFPPC@id?$DNground?9explosion?9smoke?$AA@ ; `string'
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	??_C@_0BB@NKAHJMFH@lifespan?$DN2?52?52?51?$AA@	; `string'
PUBLIC	??_C@_0N@IMBPNFBB@alpha?$FL0?5?$FN?$DN?45?$AA@	; `string'
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	??_C@_0N@CFCOEEDK@alpha?$FL?41?$FN?$DN?43?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@	; `string'
PUBLIC	??_C@_0N@FKNAIHLD@alpha?$FL?43?$FN?$DN?41?$AA@	; `string'
PUBLIC	??_C@_0O@DEGGKELO@alpha?$FL?44?$FN?$DN?405?$AA@	; `string'
PUBLIC	??_C@_0O@FLOODPOC@size?$FL?42?$FN?5?$DN?580?$AA@ ; `string'
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	??_C@_0P@PJCMLOAI@size?$FL?43?$FN?5?$DN?5130?$AA@ ; `string'
PUBLIC	??_C@_0P@INLOMCHG@size?$FL?44?$FN?5?$DN?5200?$AA@ ; `string'
PUBLIC	??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@		; `string'
PUBLIC	??_C@_0P@OFCMCIFC@id?$DNmetal?9spark?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	??_C@_0BA@MNCFFKAH@lifespan?$DN?45?0?425?$AA@	; `string'
PUBLIC	??_C@_0BD@NOKCLINA@light?$FL0?$FN?$DN1?5?475?5?425?$AA@ ; `string'
PUBLIC	??_C@_0BB@GOPILEMA@light?$FL1?$FN?$DN1?5?42?50?5?$AA@ ; `string'
PUBLIC	??_C@_0O@PJHMMMAM@size?$FL0?$FN?5?$DN?5?5?45?$AA@ ; `string'
PUBLIC	??_C@_0O@COBHKNCF@size?$FL1?$FN?5?$DN?5?41?5?$AA@ ; `string'
PUBLIC	??_C@_0L@LLFHFHAM@bounce?$DN?475?$AA@		; `string'
PUBLIC	??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@	; `string'
PUBLIC	??_C@_0M@NFAAAKMP@id?$DNmk77fuel?$AA@		; `string'
PUBLIC	??_C@_0BF@NJJHFDJE@inheritvelocity?5?$DN?5?46?$AA@ ; `string'
PUBLIC	??_C@_0L@GEFEOLOH@drag?5?$DN?5?425?$AA@		; `string'
PUBLIC	??_C@_0L@FJFLNPO@bounce?5?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0P@JEDKNJPL@color?5?$DN?51?01?0?49?$AA@	; `string'
PUBLIC	??_C@_0O@JFLKBOOP@size?$FL0?$FN?5?$DN?5?540?$AA@ ; `string'
PUBLIC	??_C@_0N@PGDMGMLL@size?$FL1?$FN?5?$DN?5?55?$AA@	; `string'
PUBLIC	??_C@_0BL@FOAJLFDI@emissionid?$DNfireball?9napalm?$AA@ ; `string'
PUBLIC	??_C@_0BK@LGLHINMO@emissionmode?$DNGROUNDIMPACT?$AA@ ; `string'
PUBLIC	??_C@_0CG@EKPBABMH@emissiondomain?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0CI@CPKHOEDC@emissiontarget?$DNsphere?50?50?50?5300?5@ ; `string'
PUBLIC	??_C@_0BJ@GODONKPG@emissionvelocity?5?$DN?5500?55?$AA@ ; `string'
PUBLIC	??_C@_0BI@FFNKHGDP@emissionid?$DNsmoke?9napalm?$AA@ ; `string'
PUBLIC	??_C@_0CJ@IGCOKIIN@emissiondomain?$DNsphere?50?50?50?5300?5@ ; `string'
PUBLIC	??_C@_0CK@OFODHABP@emissiontarget?$DNsphere?50?50?50?5500?5@ ; `string'
PUBLIC	??_C@_08FCKBLHOJ@id?$DNspark?$AA@		; `string'
PUBLIC	??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@ ; `string'
PUBLIC	??_C@_0M@KLANFECF@size?$FL1?$FN?5?$DN?52?$AA@	; `string'
PUBLIC	??_C@_0BE@MLICHAJO@initialvelocity?$DN150?$AA@	; `string'
PUBLIC	??_C@_0P@PCOOOPAE@id?$DNsmoke_light?$AA@	; `string'
PUBLIC	??_C@_0BA@PPIIMMGF@id?$DNsmoke?9napalm?$AA@	; `string'
PUBLIC	??_C@_0N@JDPNFBMN@lifespan?$DN7?54?$AA@		; `string'
PUBLIC	??_C@_0O@GLKGFAGB@size?$FL1?$FN?5?$DN?5150?$AA@	; `string'
PUBLIC	??_C@_0N@OPLCJMLD@id?$DNsmoke?9gun?$AA@		; `string'
PUBLIC	??_C@_0BA@DLBOKEAJ@lifespan?$DN10?53?52?$AA@	; `string'
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@	; `string'
PUBLIC	??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@ ; `string'
PUBLIC	??_C@_0BA@CFLCCLMG@color?$DN?5?42?5?42?5?42?$AA@ ; `string'
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	??_C@_0N@JCAOKLMD@size?$FL?41?$FN?5?$DN?55?$AA@	; `string'
PUBLIC	??_C@_0O@DFBKCPDF@size?$FL1?$FN?5?$DN?520?5?$AA@ ; `string'
PUBLIC	??_C@_0P@KFDKNL@id?$DNsmoke_white?$AA@		; `string'
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	??_C@_0P@FDGMOGLE@lifespan?$DN3?06?03?$AA@	; `string'
PUBLIC	??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@ ; `string'
PUBLIC	??_C@_0N@BOOLJELB@size?$FL2?$FN?5?$DN?540?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	??_C@_0BF@HDAAIHCO@id?$DNsmoke_white_large?$AA@	; `string'
PUBLIC	??_C@_0P@JPIGPCNB@lifespan?$DN3?56?53?$AA@	; `string'
PUBLIC	??_C@_0O@GOOJEGOE@size?$FL1?$FN?5?$DN?5120?$AA@	; `string'
PUBLIC	??_C@_0O@EGFFABKB@size?$FL2?$FN?5?$DN?5200?$AA@	; `string'
PUBLIC	??_C@_0P@JPJHHOKF@id?$DNsmoke?9black?$AA@	; `string'
PUBLIC	??_C@_0O@PAEONPFN@id?$DNsmoke?9bomb?$AA@	; `string'
PUBLIC	??_C@_0BD@KIPDNKMJ@id?$DNsmoke?9black?9die?$AA@	; `string'
PUBLIC	??_C@_0BF@DHPDJDLC@id?$DNsmoke?9black?9light?$AA@ ; `string'
PUBLIC	??_C@_0BC@ILHKNKHF@id?$DNsmoke?9lt?9brown?$AA@	; `string'
PUBLIC	??_C@_0P@MBKKADNB@lifespan?$DN30?515?$AA@	; `string'
PUBLIC	??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@ ; `string'
PUBLIC	??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0BB@OBFEHICO@color?$DN?48?5?475?5?47?5?$AA@ ; `string'
PUBLIC	??_C@_0BH@DKAELHAL@id?$DNsurface?9disturbance?$AA@ ; `string'
PUBLIC	??_C@_0BG@KLGIFKNB@inheritvelocity?5?$DN?5500?$AA@ ; `string'
PUBLIC	??_C@_0CA@CCCKONJB@emissionmode?$DNEMITONGROUNDIMPACT?$AA@ ; `string'
PUBLIC	??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@ ; `string'
PUBLIC	??_C@_0BG@PAJPKMBC@emissionid?$DNwater?9mist?$AA@ ; `string'
PUBLIC	??_C@_0BP@KLPPPOIA@emissionmode?$DNEMITONWATERIMPACT?$AA@ ; `string'
PUBLIC	??_C@_0O@GONGNDCP@id?$DNwater?9mist?$AA@	; `string'
PUBLIC	??_C@_0BF@BFINHBFN@color?$FL0?$FN?$DN?49?5?492?5?492?5?$AA@ ; `string'
PUBLIC	??_C@_0N@FOPKKJCB@size?$FL0?$FN?5?$DN?5?51?$AA@	; `string'
PUBLIC	??_C@_0BD@LOKGBELC@initialvelocity?$DN40?$AA@	; `string'
PUBLIC	??_C@_0BA@JAJHDPCO@id?$DNwillie_peter?$AA@	; `string'
PUBLIC	??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@	; `string'
PUBLIC	??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@ ; `string'
PUBLIC	??_C@_03JMGAKCCH@END?$AA@			; `string'
PUBLIC	?PS_Data_High@@3PAPADA				; PS_Data_High
PUBLIC	??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@		; `string'
PUBLIC	??_C@_0BE@BJELADEC@id?$DN$AIR_SMOKECLOUD2?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@	; `string'
PUBLIC	??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@ ; `string'
PUBLIC	??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@ ; `string'
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@ ; `string'
PUBLIC	??_C@_09ELJIBEEI@color?$DN000?$AA@		; `string'
PUBLIC	??_C@_0BB@FFGDADM@light?$FL0?475?$FN?$DN111?5?$AA@ ; `string'
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	??_C@_0BA@BNINOCFC@light?$FL1?40?5?$FN?$DN000?$AA@ ; `string'
PUBLIC	??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@	; `string'
PUBLIC	??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@	; `string'
PUBLIC	??_C@_0CJ@LLKDFFFO@emissiontarget?$DNsphere?50?50?50?5275?5@ ; `string'
PUBLIC	??_C@_0CJ@JLJIHBEI@emissiontarget?$DNsphere?50?50?5?95?5450@ ; `string'
PUBLIC	??_C@_0CI@LHMMPMII@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0BF@EINDNJOB@id?$DN$GROUND_DUSTCLOUD?$AA@	; `string'
PUBLIC	??_C@_0BA@IMNPBENO@lifespan?$DN1?54?54?5?$AA@	; `string'
PUBLIC	??_C@_0N@IMIJGEKO@alpha?$FL?45?$FN?$DN?41?$AA@	; `string'
PUBLIC	??_C@_0N@PGIFMKEI@alpha?$FL0?$FN?$DN?405?$AA@	; `string'
PUBLIC	??_C@_0O@PCLMKNOH@gravity?$DN?9?4025?$AA@	; `string'
PUBLIC	??_C@_0M@GJBGJKJF@size?$FL0?$FN?5?$DN?56?$AA@	; `string'
PUBLIC	??_C@_0N@KEJJDDDL@size?$FL1?$FN?5?$DN?512?$AA@	; `string'
PUBLIC	??_C@_0BK@BOENNBLF@id?$DN$HIT_EXPLOSION_NOSMOKE?$AA@ ; `string'
PUBLIC	?Sort@@3_NA					; Sort
PUBLIC	??_C@_0BI@JLNJNLCC@id?$DN$LONG_HANGING_SMOKE2?$AA@ ; `string'
PUBLIC	?DXMode@@3_NA					; DXMode
PUBLIC	??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@	; `string'
PUBLIC	?Reverse@@3_NA					; Reverse
PUBLIC	??_C@_0L@OIFHBIBO@size?$FL0?$FN?5?$DN5?$AA@	; `string'
PUBLIC	??_C@_0O@DPKOPDIK@id?$DN$TRAILDUST?$AA@		; `string'
PUBLIC	??_C@_0P@HKBPOAAH@lifespan?$DN2?53?52?$AA@	; `string'
PUBLIC	??_C@_0O@FMLMLDCN@size?$FL?45?$FN?5?$DN?520?$AA@ ; `string'
PUBLIC	??_C@_0BG@HHAMCFBE@emissionid?$DNdust?9trail?$AA@ ; `string'
PUBLIC	??_C@_0N@JCCCCNAL@size?$FL1?$FN?5?$DN?570?$AA@	; `string'
PUBLIC	??_C@_0M@LPKGOBOP@soundid?$DN171?$AA@		; `string'
PUBLIC	??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@	; `string'
PUBLIC	??_C@_0CG@CFLFOFGH@emissiontarget?$DNsphere?50?50?50?530?53@ ; `string'
PUBLIC	??_C@_0CG@FJAAHLBF@emissiontarget?$DNsphere?50?50?50?530?53@ ; `string'
PUBLIC	??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@	; `string'
PUBLIC	??_C@_0M@LEIHGBBO@lifespan?$DN?52?$AA@		; `string'
PUBLIC	??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	??_C@_09CGMHLPMP@alpha?$DN?5?45?$AA@		; `string'
PUBLIC	??_C@_0M@HKNALIAD@gravity?$DN?5?46?$AA@		; `string'
PUBLIC	??_C@_08IFGGKJIN@alpha?$DN?51?$AA@		; `string'
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	??_C@_0M@PLMGPHNJ@lifespan?$DN?55?$AA@		; `string'
PUBLIC	??_C@_0M@EIOGNKIB@gravity?$DN?5?44?$AA@		; `string'
PUBLIC	??_C@_0BJ@BDNEGNNK@id?$DNburning_trail_missile?$AA@ ; `string'
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@		; `string'
PUBLIC	??_C@_0BI@LCNPKBND@initialvelocity?5?$DN?550?0?55?$AA@ ; `string'
PUBLIC	??_C@_0BG@IPJEEECA@initialvelocity?5?$DN?5300?$AA@ ; `string'
PUBLIC	??_C@_0BB@CKEDNFGC@id?$DNburning?9trail?$AA@	; `string'
PUBLIC	??_C@_0CB@ODJDKCAL@emissiondomain?$DNsphere?50?50?500?50?50@ ; `string'
PUBLIC	??_C@_0P@MGIDGNHC@id?$DNcbu?9sparkle?$AA@	; `string'
PUBLIC	??_C@_0N@JFFKOIMK@id?$DNcbu?9spark?$AA@		; `string'
PUBLIC	??_C@_0P@PHCCNOCP@lifespan?$DN?45?5?43?$AA@	; `string'
PUBLIC	??_C@_0BA@MHJFEBFH@light?$FL1?$FN?$DN1?51?5?45?$AA@ ; `string'
PUBLIC	??_C@_0M@OAPPKFNP@id?$DNdust?9CBU?$AA@		; `string'
PUBLIC	??_C@_0P@CAFLDAMI@lifespan?$DN1?52?56?$AA@	; `string'
PUBLIC	??_C@_0M@FPNPAABB@size?$FL0?$FN?5?$DN15?$AA@	; `string'
PUBLIC	??_C@_0O@OJEFFKCJ@id?$DNdust?9trail?$AA@	; `string'
PUBLIC	??_C@_0BE@IGDAMGOC@id?$DNelectrical?9flash?$AA@	; `string'
PUBLIC	??_C@_0O@NMBBHLJD@lifespan?$DN1?0?42?$AA@	; `string'
PUBLIC	??_C@_0O@PKPHANAA@alpha?$FL0?5?$FN?$DN?42?5?$AA@ ; `string'
PUBLIC	??_C@_0M@CKAHMEHL@alpha?$FL?41?$FN?$DN0?$AA@	; `string'
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	??_C@_0M@FAMHJHBL@alpha?$FL?43?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0N@GMPIOEMI@alpha?$FL?44?$FN?$DN?42?$AA@	; `string'
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	??_C@_0N@MJOIMJME@alpha?$FL?45?$FN?$DN0?5?$AA@	; `string'
PUBLIC	??_C@_0O@JHMIIHON@alpha?$FL?46?$FN?$DN?42?5?$AA@ ; `string'
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	??_C@_0M@KFEHDBNL@alpha?$FL?47?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0N@BLDKCELD@alpha?$FL?48?$FN?$DN?42?$AA@	; `string'
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	??_C@_0N@LOCKAJLP@alpha?$FL?49?$FN?$DN0?5?$AA@	; `string'
PUBLIC	??_C@_0O@OKBFEBGM@light?$DN?48?5?49?51?$AA@	; `string'
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	??_C@_0M@CEGDDGLP@size?$FL0?$FN?5?$DN40?$AA@	; `string'
PUBLIC	??_C@_0O@NENBNGIC@size?$FL?41?$FN?5?$DN?5?41?$AA@ ; `string'
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	??_C@_0N@LMEEMGEA@size?$FL?42?$FN?5?$DN25?$AA@	; `string'
PUBLIC	??_C@_0O@JGPENBPP@size?$FL?43?$FN?5?$DN?5?41?$AA@ ; `string'
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	??_C@_0N@MHENKIAM@size?$FL?44?$FN?5?$DN34?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	??_C@_0O@FAJLNIHI@size?$FL?45?$FN?5?$DN?5?41?$AA@ ; `string'
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	??_C@_0N@CMGHCHFH@size?$FL?46?$FN?5?$DN21?$AA@	; `string'
PUBLIC	??_C@_0O@BCLONPAF@size?$FL?47?$FN?5?$DN?5?41?$AA@ ; `string'
PUBLIC	??_C@_0N@COIPIHDO@size?$FL?48?$FN?5?$DN47?$AA@	; `string'
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	??_C@_0O@HDEMNDH@size?$FL?49?$FN?5?$DN?5?41?$AA@ ; `string'
PUBLIC	??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@ ; `string'
PUBLIC	??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@	; `string'
PUBLIC	??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	??_C@_0BA@EHIAKKMG@id?$DNfireball?9mis?$AA@	; `string'
PUBLIC	??_C@_0BC@KJPGNPAO@id?$DNfireball?9short?$AA@	; `string'
PUBLIC	??_C@_0O@NEPAJHIE@lifespan?$DN2?0?45?$AA@	; `string'
PUBLIC	??_C@_0BG@INBMONCC@initialvelocity?$DN40?510?$AA@ ; `string'
PUBLIC	??_C@_0N@HJADMJJP@size?$FL1?$FN?5?$DN150?$AA@	; `string'
PUBLIC	??_C@_0P@PAPJLOCE@id?$DNfireball?960?$AA@	; `string'
PUBLIC	??_C@_0BK@OAJKJPGL@emissionid?$DNsmoke?9lt?9brown?$AA@ ; `string'
PUBLIC	??_C@_0BC@BCNMOJLH@emissionrate?$DN1?5?45?$AA@	; `string'
PUBLIC	??_C@_0BD@GHGKJEFA@emissionrate?$DN10?5?45?$AA@	; `string'
PUBLIC	??_C@_0BE@GBCEBKNA@id?$DNfire?9short?9small?$AA@ ; `string'
PUBLIC	??_C@_0CH@PPIPKKH@emissiontarget?$DNsphere?50?50?50?570?57@ ; `string'
PUBLIC	??_C@_0BB@MGDFIOHH@id?$DNfire?960?9small?$AA@	; `string'
PUBLIC	??_C@_0CJ@FJEBMCHJ@emissiontarget?$DNsphere?50?50?55?5100?5@ ; `string'
PUBLIC	??_C@_0BC@LKMFPJKO@id?$DNfirework?9small?$AA@	; `string'
PUBLIC	??_C@_0O@LNOKJHOI@lifespan?$DN1?5?41?$AA@	; `string'
PUBLIC	??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@	; `string'
PUBLIC	??_C@_0BF@LILAHGMN@emissionid?$DNcbu?9spark?$AA@ ; `string'
PUBLIC	??_C@_0BH@JOHFGIBM@emissionid?$DNcbu?9sparkle?$AA@ ; `string'
PUBLIC	??_C@_0BB@HPILLKLD@emissionrate?$DN5?51?$AA@	; `string'
PUBLIC	??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@	; `string'
PUBLIC	??_C@_0L@DKBAPKPK@size?$FL1?$FN?5?$DN4?$AA@	; `string'
PUBLIC	??_C@_0M@CBCMCADK@size?$FL0?$FN?5?$DN30?$AA@	; `string'
PUBLIC	??_C@_0M@EIKFOEFM@size?$FL0?$FN?5?$DN?45?$AA@	; `string'
PUBLIC	??_C@_0L@CDALMLLL@size?$FL1?$FN?5?$DN5?$AA@	; `string'
PUBLIC	??_C@_0M@DCEJGBCB@?5addemitter?$AA@		; `string'
PUBLIC	??_C@_0BD@GJHEPAMG@id?$DNsmoke?9grey?9high?$AA@	; `string'
PUBLIC	??_C@_0P@MEOFPNMN@lifespan?$DN6?55?52?$AA@	; `string'
PUBLIC	??_C@_0P@HGKHCLE@alpha?$FL1?40?$FN?$DN?401?$AA@	; `string'
PUBLIC	??_C@_0BA@FNMDFKMI@color?$DN?44?5?44?5?44?5?$AA@ ; `string'
PUBLIC	??_C@_0N@DPFFLKMN@size?$FL?45?$FN?$DN?530?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	??_C@_07HKDMMPBK@drag?$DN?48?$AA@		; `string'
PUBLIC	??_C@_0M@BGDJENFA@gravity?$DN?9?48?$AA@		; `string'
PUBLIC	??_C@_0BC@PAHGCIEN@id?$DNsmoke?9grey?9low?$AA@	; `string'
PUBLIC	??_C@_0N@IEBOHKDE@lifespan?$DN10?5?$AA@		; `string'
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	??_C@_0N@IPIGBJPC@alpha?$FL0?40?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0O@DFPCLLAB@alpha?$FL0?41?$FN?$DN?44?$AA@	; `string'
PUBLIC	??_C@_0BF@MEMGKMLI@id?$DNsmoke?9black?9thick?$AA@ ; `string'
PUBLIC	??_C@_0N@FIEPHNL@lifespan?$DN3?55?$AA@		; `string'
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	??_C@_0O@DNPIEFEN@id?$DNsmoke?9grey?$AA@	; `string'
PUBLIC	??_C@_0N@LNDIJALO@lifespan?$DN2?55?$AA@		; `string'
PUBLIC	??_C@_0O@LOMGGDPE@alpha?$FL0?40?5?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0P@IFCCKIGM@alpha?$FL0?425?$FN?$DN?42?$AA@ ; `string'
PUBLIC	??_C@_0O@HCGMGDGK@alpha?$FL1?40?5?$FN?$DN0?$AA@	; `string'
PUBLIC	??_C@_0BA@IACGPHBJ@color?$DN?45?5?45?5?45?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@IEBPLOFD@id?$DNburning_trail_xx?$AA@	; `string'
PUBLIC	??_C@_0BD@BBHPEBOH@lifespan?$DN1?51?51?51?51?$AA@ ; `string'
PUBLIC	??_C@_0N@DJLBKLFM@alpha?$FL0?5?$FN?$DN?48?$AA@	; `string'
PUBLIC	??_C@_0N@EBECIBDO@alpha?$FL?41?$FN?$DN?47?$AA@	; `string'
PUBLIC	??_C@_0N@NOMNMCNB@alpha?$FL?42?$FN?$DN?46?$AA@	; `string'
PUBLIC	??_C@_0N@CHKHHDPG@alpha?$FL?43?$FN?$DN?44?$AA@	; `string'
PUBLIC	??_C@_0N@HFODNFIJ@alpha?$FL?44?$FN?$DN?43?$AA@	; `string'
PUBLIC	??_C@_0BA@EFNAGJAA@color?$FL0?5?$FN?$DN1?51?50?$AA@ ; `string'
PUBLIC	??_C@_0BB@JMENNIGA@color?$FL?41?$FN?$DN1?50?50?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@OHJKIDON@color?$FL?42?$FN?$DN1?51?51?$AA@ ; `string'
PUBLIC	??_C@_0BA@FBEGMBIK@color?$FL?43?$FN?$DN1?50?50?$AA@ ; `string'
PUBLIC	??_C@_0BA@POHLHPOG@color?$FL?44?$FN?$DN0?50?50?$AA@ ; `string'
PUBLIC	??_C@_0O@KHMHPHML@size?$FL?41?$FN?5?$DN?515?$AA@ ; `string'
PUBLIC	??_C@_0N@MDHFIMFM@size?$FL?42?$FN?5?$DN10?$AA@	; `string'
PUBLIC	??_C@_0N@FJBLKOK@size?$FL?43?$FN?5?$DN?55?$AA@	; `string'
PUBLIC	??_C@_0N@KEFKEBGA@size?$FL?44?$FN?5?$DN?51?$AA@	; `string'
PUBLIC	??_C@_0BI@IJDPELMB@initialvelocity?$DN200?0?550?$AA@ ; `string'
PUBLIC	??_C@_0BD@PPCBHEBN@id?$DNburning_trail_x?$AA@	; `string'
PUBLIC	??_C@_0N@OFLJHAPA@size?$FL1?$FN?5?$DN?5?44?$AA@	; `string'
PUBLIC	??_C@_0BA@CGKJBPIL@texture?$DNSUN?4dds?$AA@	; `string'
PUBLIC	??_C@_0N@KPINDPFA@lifespan?$DN1?55?$AA@		; `string'
PUBLIC	??_C@_0N@IPOEFCOH@trailid?5?$DN?525?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?PS_Data_Low@@3PAPADA				; PS_Data_Low
PUBLIC	??_C@_0N@NPMKIJFN@id?$DN$AIRBURST?$AA@		; `string'
PUBLIC	??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@		; `string'
PUBLIC	??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@	; `string'
PUBLIC	??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@	; `string'
PUBLIC	??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@	; `string'
PUBLIC	??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	??_C@_0N@MGDODENE@size?$FL1?$FN?5?$DN?546?$AA@	; `string'
PUBLIC	??_C@_09MPCIFFLN@soundid?$DN2?$AA@		; `string'
PUBLIC	??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@		; `string'
PUBLIC	??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@	; `string'
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@ ; `string'
PUBLIC	??_C@_09LNJCKABN@gravity?$DN1?$AA@		; `string'
PUBLIC	??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@		; `string'
PUBLIC	??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	??_C@_0L@DKCKMNFK@addemitter?$AA@		; `string'
PUBLIC	??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@ ; `string'
PUBLIC	??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@	; `string'
PUBLIC	??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@	; `string'
PUBLIC	??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@ ; `string'
PUBLIC	??_C@_0CH@GIPDCHNF@emissiontarget?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@ ; `string'
PUBLIC	??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@	; `string'
PUBLIC	??_C@_0CH@GNCLOJNJ@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	??_C@_0BC@CKPPNFOF@id?$DN$AIR_DUSTCLOUD?$AA@	; `string'
PUBLIC	??_C@_0O@PENCCBL@lifespan?$DN5?53?5?$AA@	; `string'
PUBLIC	??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@	; `string'
PUBLIC	??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@	; `string'
PUBLIC	??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@ ; `string'
PUBLIC	??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@	; `string'
PUBLIC	??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@	; `string'
PUBLIC	??_C@_07GDCHPOFL@drag?$DN?49?$AA@		; `string'
PUBLIC	??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@	; `string'
PUBLIC	??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@		; `string'
PUBLIC	??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@	; `string'
PUBLIC	??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@	; `string'
PUBLIC	??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@ ; `string'
PUBLIC	??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@ ; `string'
PUBLIC	??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@	; `string'
PUBLIC	??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@ ; `string'
PUBLIC	??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@ ; `string'
PUBLIC	??_C@_0BC@LFILNNBO@id?$DN$AIR_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@		; `string'
PUBLIC	??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@	; `string'
PUBLIC	??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@	; `string'
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@	; `string'
PUBLIC	??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@ ; `string'
PUBLIC	??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@	; `string'
PUBLIC	??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@ ; `string'
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@ ; `string'
PUBLIC	??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@ ; `string'
PUBLIC	??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@	; `string'
PUBLIC	??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	??_C@_0BK@ELDMECJF@id?$DN$AIR_HANGING_EXPLOSION?$AA@ ; `string'
PUBLIC	??_C@_0N@DCFKAHOJ@lifespan?$DN6?55?$AA@		; `string'
PUBLIC	??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@	; `string'
PUBLIC	??_C@_0O@GNGNJCIK@size?$FL1?$FN?5?$DN?5100?$AA@	; `string'
PUBLIC	??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@		; `string'
PUBLIC	??_C@_0BE@ELDBEALN@inheritvelocity?5?$DN?91?$AA@ ; `string'
PUBLIC	??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@ ; `string'
PUBLIC	??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@	; `string'
PUBLIC	??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@ ; `string'
PUBLIC	??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@	; `string'
PUBLIC	??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@ ; `string'
PUBLIC	??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@ ; `string'
PUBLIC	??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@ ; `string'
PUBLIC	??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@	; `string'
PUBLIC	??_C@_0CK@ECBEFOL@emissiontarget?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0BJ@EEIOAMFK@emissionvelocity?5?$DN?5200?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@ ; `string'
PUBLIC	??_C@_0BA@PCHDIJHE@emissionrate?$DN80?$AA@	; `string'
PUBLIC	??_C@_0CK@PLBMAEHF@emissiontarget?$DNsphere?50?50?50?5350?5@ ; `string'
PUBLIC	??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@LMBAKCOF@id?$DN$AIR_PENETRATION?$AA@	; `string'
PUBLIC	??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@		; `string'
PUBLIC	??_C@_0P@PAKJMFCI@color?$DN?50?0?50?0?50?$AA@	; `string'
PUBLIC	??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@	; `string'
PUBLIC	??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@	; `string'
PUBLIC	??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@	; `string'
PUBLIC	??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@	; `string'
PUBLIC	??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@ ; `string'
PUBLIC	??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	??_C@_0BD@OPOCGCBG@id?$DN$AIR_SMOKECLOUD?$AA@	; `string'
PUBLIC	??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@	; `string'
PUBLIC	??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@	; `string'
PUBLIC	??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@ ; `string'
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@	; `string'
PUBLIC	??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@ ; `string'
PUBLIC	??_C@_0BH@LEMGFPBA@id?$DN$AIR_SMOKECLOUD2?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@	; `string'
PUBLIC	??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@ ; `string'
PUBLIC	??_C@_0BI@KKOIHABH@id?$DN$ARTILLERY_EXPLOSION?$AA@ ; `string'
PUBLIC	??_C@_07BIIFEHDJ@alpha?$DN0?$AA@		; `string'
PUBLIC	??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@ ; `string'
PUBLIC	??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@		; `string'
PUBLIC	??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@		; `string'
PUBLIC	??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@		; `string'
PUBLIC	??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@	; `string'
PUBLIC	??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@ ; `string'
PUBLIC	??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@ ; `string'
PUBLIC	??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@ ; `string'
PUBLIC	??_C@_0BG@MHDLGOGF@emissionvelocity?5?$DN?550?$AA@ ; `string'
PUBLIC	??_C@_0CD@CILPDGMJ@emissionid?$DNburning_trail_artille@ ; `string'
PUBLIC	??_C@_0CH@EBHOHBC@emissiontarget?$DNsphere?50?50?50?560?56@ ; `string'
PUBLIC	??_C@_0CF@MMKGBMKL@emissionid?$DNartillery?9explosion?9s@ ; `string'
PUBLIC	??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@	; `string'
PUBLIC	??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@ ; `string'
PUBLIC	??_C@_0BE@KIDIBAGM@id?$DN$BILLOWING_SMOKE?$AA@	; `string'
PUBLIC	??_C@_0N@CLEBDGKI@lifespan?$DN6?54?$AA@		; `string'
PUBLIC	??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@	; `string'
PUBLIC	??_C@_0N@BOHBDNAM@alpha?$FL1?$FN?$DN?412?$AA@	; `string'
PUBLIC	??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@		; `string'
PUBLIC	??_C@_08FCLOICNF@drag?$DN?425?$AA@		; `string'
PUBLIC	??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@		; `string'
PUBLIC	??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0O@HIDCMKOG@id?$DN$BIG_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0N@BJHHFECK@lifespan?$DN6?56?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@ ; `string'
PUBLIC	??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@		; `string'
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@	; `string'
PUBLIC	??_C@_0BB@GMPMGEMO@id?$DN$BURNING_PART?$AA@	; `string'
PUBLIC	??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@ ; `string'
PUBLIC	??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@ ; `string'
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@	; `string'
PUBLIC	??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@	; `string'
PUBLIC	?Log10Array@DrawableParticleSys@@2PAMA		; DrawableParticleSys::Log10Array
PUBLIC	??_C@_0O@BBGGNNJM@lifespan?$DN4?5?45?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@	; `string'
PUBLIC	?FadeArray@DrawableParticleSys@@2PAMA		; DrawableParticleSys::FadeArray
PUBLIC	??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@	; `string'
PUBLIC	??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@	; `string'
PUBLIC	?ASinArray@DrawableParticleSys@@2PAMA		; DrawableParticleSys::ASinArray
PUBLIC	??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@ ; `string'
PUBLIC	??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@ ; `string'
PUBLIC	?SizeArray@DrawableParticleSys@@2PAMA		; DrawableParticleSys::SizeArray
PUBLIC	??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@ ; `string'
PUBLIC	??_C@_0CH@KFPBDCCM@emissiontarget?$DNsphere?50?50?50?570?57@ ; `string'
PUBLIC	??_C@_0O@HNCOFJKI@id?$DN$CAMP_FIRE?$AA@		; `string'
PUBLIC	??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@	; `string'
PUBLIC	??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@	; `string'
PUBLIC	??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@		; `string'
PUBLIC	??_C@_0BF@GGNPEICK@initialvelocity?$DN4?510?$AA@ ; `string'
PUBLIC	?greenMode@DrawableParticleSys@@1HA		; DrawableParticleSys::greenMode
PUBLIC	??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@ ; `string'
PUBLIC	??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0CD@EPCFCMCG@id?$DN$CAMP_HIT_EXPLOSION_DEBRISTRA@ ; `string'
PUBLIC	??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@	; `string'
PUBLIC	??_C@_08NJKCCDAB@alpha?$DN?47?$AA@		; `string'
PUBLIC	?psContext@DrawableParticleSys@@1PAVDXContext@@A ; DrawableParticleSys::psContext
PUBLIC	??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@		; `string'
PUBLIC	??_C@_0BI@NJELLOMM@visibledistance?$DN30000?5?5?$AA@ ; `string'
PUBLIC	??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@ ; `string'
PUBLIC	??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@ ; `string'
PUBLIC	??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	??_C@_0BA@PDEKPAAI@id?$DN$DEBRISTRAIL?$AA@	; `string'
PUBLIC	??_C@_0N@MJOAOLP@lifespan?$DN3?05?$AA@		; `string'
PUBLIC	??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@	; `string'
PUBLIC	??_C@_0N@NJLOPFGB@trailid?5?$DN?523?$AA@	; `string'
PUBLIC	??_C@_0BA@IDFBJCNA@emissionrate?$DN35?$AA@	; `string'
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	??_C@_0CH@NGNKADPG@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@ ; `string'
PUBLIC	??_C@_0CH@GGJKHFMB@emissiontarget?$DNsphere?50?50?50?570?57@ ; `string'
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	??_C@_0BD@KBNPHALI@id?$DN$DIST_AIRBURSTS?$AA@	; `string'
PUBLIC	??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@ ; `string'
PUBLIC	??_C@_0P@IFIBKMAP@id?$DN$DIST_ARMOR?$AA@	; `string'
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	??_C@_0BG@PCODNBA@id?$DN$DIST_GROUNDBURSTS?$AA@	; `string'
PUBLIC	??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@		; `string'
PUBLIC	??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@	; `string'
PUBLIC	??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@ ; `string'
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@ ; `string'
PUBLIC	??_C@_0BC@NOKOEKKI@id?$DN$DIST_INFANTRY?$AA@	; `string'
PUBLIC	?Limit@@3MA					; Limit
PUBLIC	??_C@_0M@NBJHNIIK@lifespan?$DN1?5?$AA@		; `string'
PUBLIC	?VLev@@3MA					; VLev
PUBLIC	??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@	; `string'
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	??_C@_0N@DEJOAEPI@alpha?$FL1?$FN?$DN?401?$AA@	; `string'
PUBLIC	??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@	; `string'
PUBLIC	??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@	; `string'
PUBLIC	?Groups@DrawableParticleSys@@0PAVParticleGroupNode@@A ; DrawableParticleSys::Groups
PUBLIC	??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@ ; `string'
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	??_C@_0BL@HMIMJBLA@id?$DN$FEATURE_CHAIN_REACTION?$AA@ ; `string'
PUBLIC	?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A ; DrawableParticleSys::LastGroup
PUBLIC	??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@	; `string'
PUBLIC	??_C@_0L@KLIGICB@soundid?$DN44?$AA@		; `string'
PUBLIC	??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@		; `string'
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@ ; `string'
PUBLIC	?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A ; DrawableParticleSys::PS_QuadRndList
PUBLIC	??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@ ; `string'
PUBLIC	??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@ ; `string'
PUBLIC	?PS_Renderer@DrawableParticleSys@@0PAVRenderOTW@@A ; DrawableParticleSys::PS_Renderer
PUBLIC	??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@	; `string'
PUBLIC	??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@ ; `string'
PUBLIC	?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A ; DrawableParticleSys::PS_Lists
PUBLIC	??_C@_0CK@GBAJKOAH@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@ ; `string'
PUBLIC	?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A	; DrawableParticleSys::PS_PPN
PUBLIC	??_C@_0BB@POMBHPNK@id?$DN$FIRE_NOSMOKE?$AA@	; `string'
PUBLIC	??_C@_0L@FFHFPADP@alpha?5?$DN?5?46?$AA@		; `string'
PUBLIC	?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A ; DrawableParticleSys::PS_PEP
PUBLIC	??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@ ; `string'
PUBLIC	??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@	; `string'
PUBLIC	?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A	; DrawableParticleSys::PS_TPN
PUBLIC	??_C@_07MPJCLBFH@drag?$DN?45?$AA@		; `string'
PUBLIC	??_C@_0M@JLFFMKNL@lifespan?$DN10?$AA@		; `string'
PUBLIC	?PS_PPNNr@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_PPNNr
PUBLIC	??_C@_0BD@NIPOOLFL@initialvelocity?$DN?55?$AA@	; `string'
PUBLIC	??_C@_0N@MGJNJBIA@gravity?$DN?9?415?$AA@	; `string'
PUBLIC	?PS_TPNNr@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_TPNNr
PUBLIC	??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@ ; `string'
PUBLIC	??_C@_08DLIHAKJN@id?$DN$FIRE?$AA@		; `string'
PUBLIC	?PS_PEPNr@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_PEPNr
PUBLIC	??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@	; `string'
PUBLIC	??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@		; `string'
PUBLIC	?TrailsHandle@DrawableParticleSys@@0KA		; DrawableParticleSys::TrailsHandle
PUBLIC	??_C@_0O@LLACFKBM@gravity?$DN?5?9?415?$AA@	; `string'
PUBLIC	??_C@_0BG@NKNINEEN@initialvelocity?$DN10?550?$AA@ ; `string'
PUBLIC	?PS_TrailsID@DrawableParticleSys@@0PAKA		; DrawableParticleSys::PS_TrailsID
PUBLIC	??_C@_09EINIGPEB@id?$DN$FIRE1?$AA@		; `string'
PUBLIC	??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@		; `string'
PUBLIC	?PS_SubTrails@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_SubTrails
PUBLIC	??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@	; `string'
PUBLIC	??_C@_09GDPFDMIC@id?$DN$FIRE2?$AA@		; `string'
PUBLIC	?g_bNoParticleSys@@3_NA				; g_bNoParticleSys
PUBLIC	??_C@_0BF@GKPBPABK@light?$FL0?475?$FN?$DN1?5?51?5?51?5?$AA@ ; `string'
PUBLIC	?gParticleSysGreenMode@@3HA			; gParticleSysGreenMode
PUBLIC	??_C@_0BH@GOKLGAMC@light?$FL1?40?5?$FN?$DN0?5?50?5?50?5?5?5?$AA@ ; `string'
PUBLIC	?gParticleSysLitColor@@3UTcolor@@A		; gParticleSysLitColor
PUBLIC	??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@	; `string'
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@		; `string'
PUBLIC	??_C@_0O@JDHBNMAE@size?$FL0?$FN?5?$DN?5?510?$AA@ ; `string'
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@ ; `string'
PUBLIC	??_C@_0N@GNJILJBE@gravity?$DN?5?9?43?$AA@	; `string'
PUBLIC	??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@ ; `string'
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	??_C@_05BLOKMLF@$NONE?$AA@			; `string'
PUBLIC	??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@	; `string'
PUBLIC	??_C@_0BC@BOMIFAD@$AC_AIR_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0BF@HMHIKDHH@$SMALL_HIT_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_09HKOOANMD@id?$DN$FIRE3?$AA@		; `string'
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	??_C@_0BA@KLLBPAAO@$AIR_SMOKECLOUD?$AA@		; `string'
PUBLIC	??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@		; `string'
PUBLIC	??_C@_0O@FLOMILGP@$SMOKING_PART?$AA@		; `string'
PUBLIC	??_C@_0BB@POMJLDMH@alpha?$FL?475?$FN?5?$DN?5?415?$AA@ ; `string'
PUBLIC	??_C@_0O@DGAJIJII@$FLAMING_PART?$AA@		; `string'
PUBLIC	??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@	; `string'
PUBLIC	??_C@_0BC@ELLNPPHI@$GROUND_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0L@JLPHPABM@gravity?$DN?92?$AA@		; `string'
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	??_C@_0BC@INPGLAPB@$TRAIL_SMOKECLOUD?$AA@	; `string'
PUBLIC	??_C@_0CH@DNKAEFDE@emissiontarget?$DNsphere?50?50?50?530?53@ ; `string'
PUBLIC	??_C@_0BA@BPAEBOEF@$TRAIL_FIREBALL?$AA@		; `string'
PUBLIC	??_C@_0CH@PFDALCIF@emissiontarget?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	??_C@_0P@MBNECFDH@$MISSILE_BURST?$AA@		; `string'
PUBLIC	??_C@_09DFKPJLAE@id?$DN$FIRE4?$AA@		; `string'
PUBLIC	??_C@_0P@PANAOCHF@$CLUSTER_BURST?$AA@		; `string'
PUBLIC	??_C@_07BJOHGHI@alpha?$DN1?$AA@			; `string'
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	??_C@_0P@OCDELGHC@$AIR_EXPLOSION?$AA@		; `string'
PUBLIC	??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@	; `string'
PUBLIC	??_C@_07OLELJONK@$EJECT1?$AA@			; `string'
PUBLIC	??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@	; `string'
PUBLIC	??_C@_07MAGGMNBJ@$EJECT2?$AA@			; `string'
PUBLIC	??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	??_C@_0M@GMLDLKPI@$WATERCLOUD?$AA@		; `string'
PUBLIC	??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	??_C@_0P@HNEALOIJ@$AIR_DUSTCLOUD?$AA@		; `string'
PUBLIC	??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@ ; `string'
PUBLIC	??_C@_09PBANNOMA@$GUNSMOKE?$AA@			; `string'
PUBLIC	??_C@_09CMLEKKEF@id?$DN$FIRE5?$AA@		; `string'
PUBLIC	??_C@_0BB@KGDMIIG@$AIR_SMOKECLOUD2?$AA@		; `string'
PUBLIC	??_C@_08EHCBAOIP@alpha?$DN?49?$AA@		; `string'
PUBLIC	??_C@_08HCJFKFMG@$GUNFIRE?$AA@			; `string'
PUBLIC	??_C@_07NGIJIABG@drag?$DN?44?$AA@		; `string'
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	??_C@_0BI@IMOMFIOL@$FEATURE_CHAIN_REACTION?$AA@	; `string'
PUBLIC	??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@ ; `string'
PUBLIC	??_C@_0BB@JNBBHBJO@$WATER_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0CK@BDMECEEP@emissiontarget?$DNsphere?50?50?50?5300?5@ ; `string'
PUBLIC	??_C@_0M@CKAJFEHD@$SAM_LAUNCH?$AA@		; `string'
PUBLIC	??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@ ; `string'
PUBLIC	??_C@_0BA@EBJOGJFA@$MISSILE_LAUNCH?$AA@		; `string'
PUBLIC	??_C@_0N@LGANEGNH@id?$DN$FIRE_MED?$AA@		; `string'
PUBLIC	??_C@_06EJALBEFN@$DUST1?$AA@			; `string'
PUBLIC	??_C@_0N@CCFLMPMM@lifespan?$DN6?04?$AA@		; `string'
PUBLIC	??_C@_06EJLCHAON@$CHAFF?$AA@			; `string'
PUBLIC	??_C@_0N@PMEHIOPA@alpha?$FL1?$FN?$DN?409?$AA@	; `string'
PUBLIC	??_C@_0BD@HHIKPMDO@$WATER_WAKE_MEDIUM?$AA@	; `string'
PUBLIC	??_C@_0N@IAFKDPAA@color?$DN0?51?51?5?$AA@	; `string'
PUBLIC	??_C@_06MDPLNMK@$TIMER?$AA@			; `string'
PUBLIC	??_C@_0CI@LFLEDPLF@emissiontarget?$DNsphere?50?50?50?580?58@ ; `string'
PUBLIC	??_C@_0BA@OFIMOCKA@$DIST_AIRBURSTS?$AA@		; `string'
PUBLIC	??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@ ; `string'
PUBLIC	??_C@_0BD@KMAOCHEK@$DIST_GROUNDBURSTS?$AA@	; `string'
PUBLIC	??_C@_0N@MGIGCBGC@id?$DN$FIRE_HOT?$AA@		; `string'
PUBLIC	??_C@_0BC@JEIFIDEK@$DIST_SAMLAUNCHES?$AA@	; `string'
PUBLIC	??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@	; `string'
PUBLIC	??_C@_0BB@KIGPJNOO@$DIST_AALAUNCHES?$AA@	; `string'
PUBLIC	??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@		; `string'
PUBLIC	??_C@_0BC@IOFDNHFB@$WATER_WAKE_LARGE?$AA@	; `string'
PUBLIC	??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@	; `string'
PUBLIC	??_C@_0N@CAEEEBDJ@$RAND_CRATER?$AA@		; `string'
PUBLIC	??_C@_0O@ELAALOKM@id?$DN$FIRETRAIL?$AA@		; `string'
PUBLIC	??_C@_0BM@KKLDEHHG@$GROUND_EXPLOSION_NO_CRATER?$AA@ ; `string'
PUBLIC	??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@	; `string'
PUBLIC	??_C@_0M@IDJMABAJ@$MOVING_BSP?$AA@		; `string'
PUBLIC	??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0M@MIOPLGGI@$DIST_ARMOR?$AA@		; `string'
PUBLIC	??_C@_0BB@OBNHMAPM@id?$DN$FLAMING_PART?$AA@	; `string'
PUBLIC	??_C@_0P@IJBBCBME@$DIST_INFANTRY?$AA@		; `string'
PUBLIC	??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@	; `string'
PUBLIC	??_C@_0N@PBPCLLCB@$TRACER_FIRE?$AA@		; `string'
PUBLIC	??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@	; `string'
PUBLIC	??_C@_05BJJOCLM@$FIRE?$AA@			; `string'
PUBLIC	??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@		; `string'
PUBLIC	??_C@_0P@HDAOEOMN@$GROUND_STRIKE?$AA@		; `string'
PUBLIC	??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	??_C@_0O@JFMJLKCD@$WATER_STRIKE?$AA@		; `string'
PUBLIC	??_C@_09IHNEPFAK@id?$DN$FLAME?$AA@		; `string'
PUBLIC	??_C@_0BA@ENJJHMJP@$VERTICAL_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0N@NCIFHANK@lifespan?$DN8?55?$AA@		; `string'
PUBLIC	??_C@_0M@LIEKLBKJ@$TRAIL_FIRE?$AA@		; `string'
PUBLIC	??_C@_0CH@CJIAKJJM@emissiontarget?$DNsphere?50?50?50?540?54@ ; `string'
PUBLIC	??_C@_0BB@LLBANLKI@$BILLOWING_SMOKE?$AA@	; `string'
PUBLIC	??_C@_0O@IGCMJGFD@id?$DN$FIRESMOKE?$AA@		; `string'
PUBLIC	??_C@_0P@KDFPOMNC@$HIT_EXPLOSION?$AA@		; `string'
PUBLIC	??_C@_0CH@EDOLNOCG@emissiontarget?$DNsphere?50?50?50?580?58@ ; `string'
PUBLIC	??_C@_07BAJMGNIB@$SPARKS?$AA@			; `string'
PUBLIC	??_C@_0BF@NHKHNBBK@id?$DN$GROUND_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0BF@BHNOJPJD@$ARTILLERY_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0CJ@OMPPJJON@emissiontarget?$DNsphere?50?50?50?5450?5@ ; `string'
PUBLIC	??_C@_0L@CIEAMLJP@$DUSTCLOUD?$AA@		; `string'
PUBLIC	??_C@_0CG@IOBLKNA@emissiondomain?$DNsphere?50?50?50?525?52@ ; `string'
PUBLIC	??_C@_07BADNCOKI@$NAPALM?$AA@			; `string'
PUBLIC	??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	??_C@_09HCPICGHD@$AIRBURST?$AA@			; `string'
PUBLIC	??_C@_0CK@KOJDHOAJ@emissiontarget?$DNsphere?50?50?50?5275?5@ ; `string'
PUBLIC	??_C@_0N@FPAIFPGJ@$GROUNDBURST?$AA@		; `string'
PUBLIC	??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@ ; `string'
PUBLIC	??_C@_0BG@OLIHIIHD@$GROUND_STRIKE_NOFIRE?$AA@	; `string'
PUBLIC	??_C@_0BA@KHCMDJFE@id?$DN$GROUND_GLOW?$AA@	; `string'
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	??_C@_0BE@PONDFLLA@$LONG_HANGING_SMOKE?$AA@	; `string'
PUBLIC	??_C@_0BC@CELBCFKB@id?$DN$GROUND_STRIKE?$AA@	; `string'
PUBLIC	??_C@_0M@KDAJPJMF@$SMOKETRAIL?$AA@		; `string'
PUBLIC	??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@	; `string'
PUBLIC	??_C@_0N@CANBGKOJ@$DEBRISTRAIL?$AA@		; `string'
PUBLIC	??_C@_0CG@MAANALKL@emissiontarget?$DNsphere?50?50?50?575?57@ ; `string'
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	??_C@_0BD@HECFDDBO@$VEHICLE_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0BJ@BOPPJKF@id?$DN$GROUND_STRIKE_NOFIRE?$AA@ ; `string'
PUBLIC	??_C@_0CB@KNKGFLCK@$RISING_GROUNDHIT_EXPLOSION_DEBR@ ; `string'
PUBLIC	??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@	; `string'
PUBLIC	??_C@_0L@JHHLIBMM@$FIRETRAIL?$AA@		; `string'
PUBLIC	??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@		; `string'
PUBLIC	??_C@_0O@CJBPDGKO@$FIRE_NOSMOKE?$AA@		; `string'
PUBLIC	??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@ ; `string'
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	??_C@_0P@EPEFGGK@$LANDING_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@		; `string'
PUBLIC	??_C@_0N@BDNHADJG@$WATER_CLOUD?$AA@		; `string'
PUBLIC	??_C@_0CD@CJEICDMN@emissiondomain?$DNsphere?50?50?5?95?50?50@ ; `string'
PUBLIC	??_C@_0M@JAIKAGBH@$WATERTRAIL?$AA@		; `string'
PUBLIC	??_C@_0CK@GKLPOBCN@emissiontarget?$DNsphere?50?50?5?95?5450@ ; `string'
PUBLIC	??_C@_0M@CBDHDDAH@$GUN_TRACER?$AA@		; `string'
PUBLIC	??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@ ; `string'
PUBLIC	?DebugTrail@@3_NA				; DebugTrail
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	??_C@_0L@PKGHLOBN@$AC_DEBRIS?$AA@		; `string'
PUBLIC	??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	?Kx@@3MA					; Kx
PUBLIC	??_C@_0M@IEJMGEJC@$CAT_LAUNCH?$AA@		; `string'
PUBLIC	??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0L@LNCCIKDA@$FLARE_GFX?$AA@		; `string'
PUBLIC	??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0BC@BPDJLEJM@$SPARKS_NO_DEBRIS?$AA@	; `string'
PUBLIC	??_C@_0CJ@NEPKIPNF@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	??_C@_0O@LLCCCNLK@$BURNING_PART?$AA@		; `string'
PUBLIC	??_C@_0BA@IMJDMFII@id?$DN$GROUNDBURST?$AA@	; `string'
PUBLIC	??_C@_0BG@EMKCJDNK@$AIR_EXPLOSION_NOGLOW?$AA@	; `string'
PUBLIC	??_C@_0L@DJEMGAJE@soundid?$DN56?$AA@		; `string'
PUBLIC	??_C@_0BG@GLFGBCCB@$HIT_EXPLOSION_NOGLOW?$AA@	; `string'
PUBLIC	??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0BC@LDJPHPGH@$SHOCK_RING_SMALL?$AA@	; `string'
PUBLIC	??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	??_C@_0BD@FKCLKDOC@$FAST_FADING_SMOKE?$AA@	; `string'
PUBLIC	??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0BF@CGOPDEKG@$LONG_HANGING_SMOKE2?$AA@	; `string'
PUBLIC	??_C@_0BH@NBMKEJOG@id?$DN$GROUND_PENETRATION?$AA@ ; `string'
PUBLIC	??_C@_0P@MDLBFKBD@$AAA_EXPLOSION?$AA@		; `string'
PUBLIC	??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@ ; `string'
PUBLIC	??_C@_06MLIHPLLM@$FLAME?$AA@			; `string'
PUBLIC	??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0BB@KPDIGJCB@$AIR_PENETRATION?$AA@	; `string'
PUBLIC	??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@FKNHNBBG@$GROUND_PENETRATION?$AA@	; `string'
PUBLIC	??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@	; `string'
PUBLIC	??_C@_0BC@HEMFHKOO@$DEBRISTRAIL_DUST?$AA@	; `string'
PUBLIC	??_C@_0CH@CBCCDJGD@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	??_C@_0N@FHLBFGCP@$FIRE_EXPAND?$AA@		; `string'
PUBLIC	??_C@_0BI@MBDBIDEG@emissionvelocity?5?$DN?5150?5?$AA@ ; `string'
PUBLIC	??_C@_0BF@IGFDDP@$FIRE_EXPAND_NOSMOKE?$AA@	; `string'
PUBLIC	??_C@_0O@MLKAKLOM@id?$DN$GUN_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0BC@NEMJPHID@$GROUND_DUSTCLOUD?$AA@	; `string'
PUBLIC	??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@	; `string'
PUBLIC	??_C@_0BE@PMFDBDAM@$SHAPED_FIRE_DEBRIS?$AA@	; `string'
PUBLIC	??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@		; `string'
PUBLIC	??_C@_09GLLEIOEM@$FIRE_HOT?$AA@			; `string'
PUBLIC	??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@	; `string'
PUBLIC	??_C@_09BLDPOJPJ@$FIRE_MED?$AA@			; `string'
PUBLIC	??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@ ; `string'
PUBLIC	??_C@_0L@EEGOMELM@$FIRE_COOL?$AA@		; `string'
PUBLIC	??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@ ; `string'
PUBLIC	??_C@_09OJBLEPF@$FIREBALL?$AA@			; `string'
PUBLIC	??_C@_0CF@MGAFKFD@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	??_C@_06EILGBPH@$FIRE1?$AA@			; `string'
PUBLIC	??_C@_0CF@JHPBBIEF@emissiontarget?$DNsphere?50?50?50?510?55@ ; `string'
PUBLIC	??_C@_0BD@BLIFMAPH@$SHIP_BURNING_FIRE?$AA@	; `string'
PUBLIC	??_C@_0P@GMFJCJGA@id?$DN$GUN_TRACER?$AA@	; `string'
PUBLIC	??_C@_0BC@FNCHPLGF@$CAT_RANDOM_STEAM?$AA@	; `string'
PUBLIC	??_C@_0O@NONFMPNI@color?$DN1?0?50?0?50?$AA@	; `string'
PUBLIC	??_C@_0L@MFGEBACB@$CAT_STEAM?$AA@		; `string'
PUBLIC	??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@	; `string'
PUBLIC	??_C@_06GAOHKEPD@$FIRE5?$AA@			; `string'
PUBLIC	??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@	; `string'
PUBLIC	??_C@_06ELMKPHDA@$FIRE6?$AA@			; `string'
PUBLIC	??_C@_0BB@HIILHAJD@id?$DN$GROUND_FLASH?$AA@	; `string'
PUBLIC	??_C@_0L@FKFHKJDD@$FIRESMOKE?$AA@		; `string'
PUBLIC	??_C@_0CE@PMABBLCN@emissiontarget?$DNsphere?50?50?50?51?51?5@ ; `string'
PUBLIC	??_C@_0M@IOMEIHOA@$TRAILSMOKE?$AA@		; `string'
PUBLIC	??_C@_0BM@MFKPMELA@id?$DN$HIT_EXPLOSION_NOSMOKE?5?5?$AA@ ; `string'
PUBLIC	?PS_ElapsedTime@DrawableParticleSys@@0MA	; DrawableParticleSys::PS_ElapsedTime
PUBLIC	??_C@_0O@GGEMIMEL@$VEHICLE_DUST?$AA@		; `string'
PUBLIC	??_C@_09PDEJEECL@alpha?$DN1?5?5?$AA@		; `string'
PUBLIC	??_C@_06FCNBMGHB@$FIRE7?$AA@			; `string'
PUBLIC	??_C@_0CI@IDCGFJI@emissiontarget?$DNsphere?50?50?50?5450?5@ ; `string'
PUBLIC	?PS_RunTime@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_RunTime
PUBLIC	??_C@_0M@DAEACMEC@$BLUE_CLOUD?$AA@		; `string'
PUBLIC	??_C@_0BC@PEOAIHLO@id?$DN$HIT_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0BA@EEAINKAO@$WATER_FIREBALL?$AA@		; `string'
PUBLIC	??_C@_0CJ@OPEDEGMO@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	?PS_LastTime@DrawableParticleSys@@0KA		; DrawableParticleSys::PS_LastTime
PUBLIC	??_C@_0BD@KOMHHAE@$LINKED_PERSISTANT?$AA@	; `string'
PUBLIC	??_C@_0BO@LCJKCFLC@id?$DN$HIT_EXPLOSION_DEBRISTRAIL?$AA@ ; `string'
PUBLIC	??_C@_0BC@FCGFHKGE@$TIMED_PERSISTANT?$AA@	; `string'
PUBLIC	??_C@_0BJ@LDJIOIJ@id?$DN$INCENDIARY_EXPLOSION?$AA@ ; `string'
PUBLIC	?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A	; DrawableParticleSys::PS_HiLightCx
PUBLIC	??_C@_0O@MIHANENL@$CLUSTER_BOMB?$AA@		; `string'
PUBLIC	??_C@_0CJ@GCDCFMMJ@emissiontarget?$DNsphere?50?50?50?5225?5@ ; `string'
PUBLIC	??_C@_0BB@OHHMLBBB@$SMOKING_FEATURE?$AA@	; `string'
PUBLIC	??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@ ; `string'
PUBLIC	?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A	; DrawableParticleSys::PS_LoLightCx
PUBLIC	??_C@_0BC@CEOOMEA@$STEAMING_FEATURE?$AA@	; `string'
PUBLIC	??_C@_0CG@LGCGLIND@emissiontarget?$DNsphere?50?50?50?575?57@ ; `string'
PUBLIC	??_C@_0N@PPGLMIDN@$STEAM_CLOUD?$AA@		; `string'
PUBLIC	??_C@_0CG@HANJFIBA@emissiondomain?$DNsphere?50?50?50?525?52@ ; `string'
PUBLIC	?nameList@DrawableParticleSys@@0PAPADA		; DrawableParticleSys::nameList
PUBLIC	??_C@_0O@KPFFDJOH@$GROUND_FLASH?$AA@		; `string'
PUBLIC	??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	??_C@_0BD@OPAAFBCL@$FEATURE_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0BK@FHEMAIGA@emissionvelocity?5?$DN?5150?525?$AA@ ; `string'
PUBLIC	?nameListCount@DrawableParticleSys@@0HA		; DrawableParticleSys::nameListCount
PUBLIC	??_C@_0P@PMPIOGGN@$MESSAGE_TIMER?$AA@		; `string'
PUBLIC	??_C@_0BA@PMLMOFPL@id?$DN$LIGHT_CLOUD?$AA@	; `string'
PUBLIC	??_C@_09GKBEHEGB@$DURANDAL?$AA@			; `string'
PUBLIC	??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@	; `string'
PUBLIC	?PS_NVG@DrawableParticleSys@@0_NA		; DrawableParticleSys::PS_NVG
PUBLIC	??_C@_08PCKGLDAM@$CRATER2?$AA@			; `string'
PUBLIC	??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@	; `string'
PUBLIC	??_C@_08OLLNICEN@$CRATER3?$AA@			; `string'
PUBLIC	??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@	; `string'
PUBLIC	?PS_TV@DrawableParticleSys@@0_NA		; DrawableParticleSys::PS_TV
PUBLIC	??_C@_08KEPMBEIK@$CRATER4?$AA@			; `string'
PUBLIC	??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@	; `string'
PUBLIC	??_C@_0L@KEEJPFIG@$BIG_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@ ; `string'
PUBLIC	??_C@_09BIMDOBB@$BIG_DUST?$AA@			; `string'
PUBLIC	??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@	; `string'
PUBLIC	??_C@_0BH@HBBHMOCF@$HIT_EXPLOSION_NOSMOKE?$AA@	; `string'
PUBLIC	??_C@_0BH@KKBIOKGK@emissionid?$DNsmoke_light?$AA@ ; `string'
PUBLIC	??_C@_0O@LODFOJP@$ROCKET_BURST?$AA@		; `string'
PUBLIC	??_C@_0BH@HFMOMDEA@id?$DN$LONG_HANGING_SMOKE?$AA@ ; `string'
PUBLIC	??_C@_0CA@FOCMEGOJ@$CAMP_HIT_EXPLOSION_DEBRISTRAIL?$AA@ ; `string'
PUBLIC	??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@		; `string'
PUBLIC	??_C@_0BB@JANAIDAF@$VEHICLE_BURNING?$AA@	; `string'
PUBLIC	??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@	; `string'
PUBLIC	??_C@_0BG@OBFBPPFP@$INCENDIARY_EXPLOSION?$AA@	; `string'
PUBLIC	??_C@_0M@DFJBCOME@gravity?$DN?5?41?$AA@		; `string'
PUBLIC	??_C@_0O@IMGDAOCN@$SPARK_TRACER?$AA@		; `string'
PUBLIC	??_C@_0BN@MJKNMKND@emissionid?$DNfireball?9airburst?$AA@ ; `string'
PUBLIC	??_C@_0BC@CGBICGMH@$WATER_WAKE_SMALL?$AA@	; `string'
PUBLIC	??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0P@JKPKOBK@?9?9?9?5kludge?5?9?9?9?$AA@	; `string'
PUBLIC	??_C@_0BJ@EAHPLMJN@id?$DN$LONG_HANGING_SMOKE2?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@IOILNHLJ@$GUN_HIT_GROUND?$AA@		; `string'
PUBLIC	??_C@_0N@JIFDMPGC@lifespan?$DN4?55?$AA@		; `string'
PUBLIC	?groundLevel@DrawableParticleSys@@2MA		; DrawableParticleSys::groundLevel
PUBLIC	??_C@_0BA@GEFBMCKI@$GUN_HIT_OBJECT?$AA@		; `string'
PUBLIC	??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@ ; `string'
PUBLIC	??_C@_0P@BNFGAEGO@$GUN_HIT_WATER?$AA@		; `string'
PUBLIC	??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@	; `string'
PUBLIC	?cameraDistance@DrawableParticleSys@@2MA	; DrawableParticleSys::cameraDistance
PUBLIC	??_C@_0BA@LHIGJAB@$VEHICLE_DIEING?$AA@		; `string'
PUBLIC	??_C@_0BC@JGGLEOFL@id?$DN$MISSILE_BURST?$AA@	; `string'
PUBLIC	??_C@_0BC@BHEEALFD@$AC_EARLY_BURNING?$AA@	; `string'
PUBLIC	??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@	; `string'
PUBLIC	?reloadParameters@DrawableParticleSys@@2HA	; DrawableParticleSys::reloadParameters
PUBLIC	??_C@_0O@PPHLOPDL@$AC_BURNING_1?$AA@		; `string'
PUBLIC	??_C@_0O@HEKHADOL@size?$FL0?$FN?5?$DN?5?450?$AA@ ; `string'
PUBLIC	??_C@_0O@NEFGLMPI@$AC_BURNING_2?$AA@		; `string'
PUBLIC	??_C@_0L@NGPANIIC@gravity?$DN?45?$AA@		; `string'
PUBLIC	?winddx@DrawableParticleSys@@2MA		; DrawableParticleSys::winddx
PUBLIC	??_C@_0O@MNENINLJ@$AC_BURNING_3?$AA@		; `string'
PUBLIC	??_C@_0BF@HFJCNHA@inheritvelocity?5?$DN?425?$AA@ ; `string'
PUBLIC	??_C@_0O@ICAMBLHO@$AC_BURNING_4?$AA@		; `string'
PUBLIC	??_C@_0BI@ONNCBAJM@emissionid?$DNfireball?9mis?$AA@ ; `string'
PUBLIC	?winddy@DrawableParticleSys@@2MA		; DrawableParticleSys::winddy
PUBLIC	??_C@_0O@JLBHCKDP@$AC_BURNING_5?$AA@		; `string'
PUBLIC	??_C@_0BA@LEOEHEME@emissionrate?$DN3?5?$AA@	; `string'
PUBLIC	??_C@_0O@LADKHJPM@$AC_BURNING_6?$AA@		; `string'
PUBLIC	??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@ ; `string'
PUBLIC	??_C@_0L@BHNLJEIM@$GUN_SMOKE?$AA@		; `string'
PUBLIC	??_C@_0BI@DEOLNCLL@emissionid?$DNfirework?9mis?$AA@ ; `string'
PUBLIC	??_C@_05DINBNJKF@$NUKE?$AA@			; `string'
PUBLIC	??_C@_0BN@LHGLIMAG@emissionid?$DNburning_trail_mis?$AA@ ; `string'
PUBLIC	??_C@_0P@ILCDNDIG@$VORTEX_STRONG?$AA@		; `string'
PUBLIC	??_C@_0BG@MADCMGLJ@emissionvelocity?5?$DN?510?$AA@ ; `string'
PUBLIC	??_C@_0P@FEBPHMMO@$VORTEX_MEDIUM?$AA@		; `string'
PUBLIC	??_C@_0BD@FMNPLEI@id?$DN$MISSILE_LAUNCH?$AA@	; `string'
PUBLIC	??_C@_0N@EPFGNHEC@$VORTEX_WEAK?$AA@		; `string'
PUBLIC	??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@ ; `string'
PUBLIC	??_C@_0BF@KBPBAPEK@$VORTEX_LARGE_STRONG?$AA@	; `string'
PUBLIC	??_C@_0M@PKILIDLA@soundid?$DN267?$AA@		; `string'
PUBLIC	??_C@_0BF@HOMNKAAC@$VORTEX_LARGE_MEDIUM?$AA@	; `string'
PUBLIC	??_C@_0CE@KGGMINGB@id?$DN$RISING_GROUNDHIT_EXPLOSION_D@ ; `string'
PUBLIC	??_C@_0BD@FPMDALC@$VORTEX_LARGE_WEAK?$AA@	; `string'
PUBLIC	??_C@_08FODKDPMO@alpha?$DN?48?$AA@		; `string'
PUBLIC	??_C@_0BK@HLDEAHKB@emissionvelocity?5?$DN?5100?530?$AA@ ; `string'
PUBLIC	??_C@_0P@GHGHEOBE@id?$DN$SAM_LAUNCH?$AA@	; `string'
PUBLIC	??_C@_0CE@PAJIFLGH@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	??_C@_0CE@GBHEDIKD@emissiontarget?$DNsphere?50?50?50?510?55@ ; `string'
PUBLIC	??_C@_0N@DHONCOBK@id?$DNshockring?$AA@		; `string'
PUBLIC	??_C@_0P@PJKDGOCH@alpha?$FL1?$FN?$DN?405?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@ ; `string'
PUBLIC	??_C@_0P@BDOKFEA@size?$FL0?$FN?5?$DN?5?55?5?5?$AA@ ; `string'
PUBLIC	??_C@_0P@FAGEKMHO@size?$FL1?$FN?5?$DN?5400?5?$AA@ ; `string'
PUBLIC	??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@ ; `string'
PUBLIC	??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@		; `string'
PUBLIC	??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@ ; `string'
PUBLIC	??_C@_0BE@DLGOHGKO@id?$DNshockring?9medium?$AA@	; `string'
PUBLIC	??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@		; `string'
PUBLIC	??_C@_0BA@DAHHDCKH@alpha?$FL1?$FN?$DN?405?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@EGMAKKMI@size?$FL0?$FN?5?$DN?5?510?5?5?$AA@ ; `string'
PUBLIC	??_C@_0P@CKKEPPBO@size?$FL1?$FN?5?$DN?5600?5?$AA@ ; `string'
PUBLIC	??_C@_0M@GFIIHJFL@gravity?$DN0?41?$AA@		; `string'
PUBLIC	??_C@_0BD@DIKHDJLI@id?$DNshockring?9large?$AA@	; `string'
PUBLIC	??_C@_0P@GLGAOLEA@size?$FL0?$FN?5?$DN?510?5?5?$AA@ ; `string'
PUBLIC	??_C@_0P@KIPEGIMP@size?$FL1?$FN?5?$DN?5900?5?$AA@ ; `string'
PUBLIC	??_C@_0BI@IACFBGFD@id?$DN$SMALL_AIR_EXPLOSION?$AA@ ; `string'
PUBLIC	??_C@_0N@LGJGAOBB@lifespan?$DN1?54?$AA@		; `string'
PUBLIC	??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@	; `string'
PUBLIC	??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@	; `string'
PUBLIC	??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@	; `string'
PUBLIC	??_C@_09OEAFAGHO@soundid?$DN1?$AA@		; `string'
PUBLIC	??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@		; `string'
PUBLIC	??_C@_0BN@BNEILPAD@emissionid?$DNfirework?9airburst?$AA@ ; `string'
PUBLIC	??_C@_0BI@MBEOEMPD@id?$DN$SMALL_HIT_EXPLOSION?$AA@ ; `string'
PUBLIC	??_C@_0L@GDFOKGMP@gravity?$DN?48?$AA@		; `string'
PUBLIC	??_C@_0CD@NHAAPNBM@emissiontarget?$DNsphere?50?50?50?58?58?5@ ; `string'
PUBLIC	??_C@_0L@DCNCCIDG@id?$DN$SPARKS?$AA@		; `string'
PUBLIC	??_C@_0L@CIACAEHK@alpha?5?$DN?5?43?$AA@		; `string'
PUBLIC	??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@	; `string'
PUBLIC	??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@		; `string'
PUBLIC	??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@	; `string'
PUBLIC	??_C@_0BB@IMDCMCBL@id?$DN$SMOKING_PART?$AA@	; `string'
PUBLIC	??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@		; `string'
PUBLIC	??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@	; `string'
PUBLIC	??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@	; `string'
PUBLIC	??_C@_0BA@CCGJCBMA@id?$DN$TRACER_FIRE?$AA@	; `string'
PUBLIC	??_C@_0O@BCHPMPEG@color?$DN0?0?50?0?50?$AA@	; `string'
PUBLIC	??_C@_0BF@BBOMJOJD@id?$DN$TRAIL_SMOKECLOUD?$AA@	; `string'
PUBLIC	??_C@_0N@CAOPKIAH@lifespan?$DN5?55?$AA@		; `string'
PUBLIC	??_C@_0N@GCMEKDHO@alpha?$FL1?$FN?$DN?407?$AA@	; `string'
PUBLIC	??_C@_0M@OEEMMCOC@size?$FL1?$FN?5?$DN?55?$AA@	; `string'
PUBLIC	??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@		; `string'
PUBLIC	??_C@_0P@PFCEKLMO@id?$DN$TRAIL_FIRE?$AA@	; `string'
PUBLIC	??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@ ; `string'
PUBLIC	??_C@_0BD@FLFHIMFN@id?$DN$TRAIL_FIREBALL?$AA@	; `string'
PUBLIC	??_C@_0BD@EPCLPLBJ@id?$DN$VEHICLE_DIEING?$AA@	; `string'
PUBLIC	??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@	; `string'
PUBLIC	??_C@_0CG@LDJADCPG@emissiontarget?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	??_C@_0BF@FGHJFBEN@id?$DN$VEHICLE_DIE_FIRE?$AA@	; `string'
PUBLIC	??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@		; `string'
PUBLIC	??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@ ; `string'
PUBLIC	??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@ ; `string'
PUBLIC	??_C@_0BJ@FMCCLCMF@id?$DN$VEHICLE_DIE_FIREBALL?$AA@ ; `string'
PUBLIC	??_C@_0O@CDJJNGAN@alpha?$FL1?$FN?$DN?406?5?$AA@	; `string'
PUBLIC	??_C@_0O@DANEJEJI@size?$FL0?$FN?5?$DN?510?5?$AA@ ; `string'
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	??_C@_0P@EMECAPAO@size?$FL1?$FN?5?$DN?540?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BB@LPBGKNIE@emissionrate?$DN10?5?$AA@	; `string'
PUBLIC	??_C@_0BK@GCCEAPM@id?$DN$VEHICLE_DIE_FIREBALL2?$AA@ ; `string'
PUBLIC	??_C@_0O@JKOHNLFP@alpha?$FL1?$FN?$DN?417?5?$AA@	; `string'
PUBLIC	??_C@_09KEIJJBFM@gravity?$DN0?$AA@		; `string'
PUBLIC	??_C@_0BD@NBOEIEFC@inheritvelocity?5?$DN?5?$AA@	; `string'
PUBLIC	??_C@_0N@DPMCBEAH@?$CD?$CDaddemitter?$AA@	; `string'
PUBLIC	??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@ ; `string'
PUBLIC	??_C@_0CC@FBDJCNMJ@id?$DN$VEHICLE_DIE_INTERMITTENT_FIR@ ; `string'
PUBLIC	??_C@_0BG@HNFFALHI@size?$FL0?$FN?5?$DN?530?5?5?5?$CD?$CD60?$CD?$CD?$AA@ ; `string'
PUBLIC	??_C@_0BH@JAEIMPNK@size?$FL1?$FN?5?$DN?570?5?5?5?$CD?$CD100?$CD?$CD?$AA@ ; `string'
PUBLIC	??_C@_0BG@IPLMLIDI@initialvelocity?$DN?9100?5?$AA@ ; `string'
PUBLIC	??_C@_0P@LAMIBGDA@emissionrate?$DN7?$AA@	; `string'
PUBLIC	??_C@_0BG@ILEDGIJM@id?$DN$VEHICLE_DIE_SMOKE?$AA@ ; `string'
PUBLIC	??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@	; `string'
PUBLIC	??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@ ; `string'
PUBLIC	??_C@_0BH@BEECMIHG@id?$DN$VEHICLE_DIE_SMOKE2?$AA@ ; `string'
PUBLIC	??_C@_0BI@LDJLPAEP@id?$DN$VEHICLE_TAIL_SCRAPE?$AA@ ; `string'
PUBLIC	??_C@_09BGBMLHEA@size?5?$DN?550?$AA@		; `string'
PUBLIC	??_C@_0BD@FKECPACN@inheritvelocity?$DN?45?$AA@	; `string'
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	??_C@_0BH@LNNKCNDM@emissionid?$DNmetal?9spark?$AA@ ; `string'
PUBLIC	??_C@_0BD@JMKOOIH@id?$DN$VERTICAL_SMOKE?$AA@	; `string'
PUBLIC	??_C@_0CH@LJHDEOHL@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	??_C@_0BB@BPKOJNKP@id?$DN$CLUSTER_BOMB?$AA@	; `string'
PUBLIC	??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@		; `string'
PUBLIC	??_C@_0N@MLOBPKFE@lifespan?$DN1?51?$AA@		; `string'
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	??_C@_0BL@ILAIBNFH@emissionid?$DNcbu?9submunition?$AA@ ; `string'
PUBLIC	??_C@_0BE@HHMLCPEK@emissionrate?$DN100?0?41?$AA@ ; `string'
PUBLIC	??_C@_0CE@JKGCHAKG@emissiondomain?$DNsphere?50?50?50?55?55?5@ ; `string'
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	??_C@_0CG@KKEODCGE@emissiontarget?$DNsphere?50?50?50?515?51@ ; `string'
PUBLIC	??_C@_0BF@ENGLOHLM@emissionid?$DNcbu?9smoke?$AA@ ; `string'
PUBLIC	??_C@_0CG@HCNHCNKD@emissiontarget?$DNsphere?50?50?50?525?52@ ; `string'
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	??_C@_0BD@HBGMMAHB@id?$DNcbu?9submunition?$AA@	; `string'
PUBLIC	??_C@_0P@CKHNHCMM@lifespan?$DN200?01?$AA@	; `string'
PUBLIC	??_C@_08DCMNPAHH@size?5?$DN?51?$AA@		; `string'
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	??_C@_0L@DLMPKIN@drag?5?$DN?5?401?$AA@		; `string'
PUBLIC	??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@		; `string'
PUBLIC	??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@		; `string'
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	??_C@_0BB@DBEKPKL@soundid?$DN114?5?5?$CD2?$CD?$AA@ ; `string'
PUBLIC	??_C@_0BE@MNEJLCHF@initialvelocity?$DN100?$AA@	; `string'
PUBLIC	??_C@_0BN@NJGOBMAE@emissionid?$DNcbu?9sub?9explosion?$AA@ ; `string'
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@ ; `string'
PUBLIC	??_C@_0CG@LHAOCJMH@emissiondomain?$DNsphere?50?50?5?910?50?5@ ; `string'
PUBLIC	??_C@_0CI@EPCCHEFC@emissiontarget?$DNsphere?50?50?5?910?520@ ; `string'
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	??_C@_0BD@CAACFALA@id?$DN$GUN_HIT_OBJECT?$AA@	; `string'
PUBLIC	??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@		; `string'
PUBLIC	??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@		; `string'
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	??_C@_0BC@DNNNPDAO@emitonerandomly?$DN1?$AA@	; `string'
PUBLIC	??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@ ; `string'
PUBLIC	??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@	; `string'
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@ ; `string'
PUBLIC	??_C@_0BF@CFJKPIKN@emissionid?$DNdust?9grey?$AA@ ; `string'
PUBLIC	??_C@_0BD@MKNIEFKB@id?$DN$GUN_HIT_GROUND?$AA@	; `string'
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@		; `string'
PUBLIC	??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@ ; `string'
PUBLIC	??_C@_0BD@MBIFHKL@inheritvelocity?$DN?43?$AA@	; `string'
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	??_C@_0CG@MMCCCLNN@emissiontarget?$DNsphere?50?50?50?5?42?5?4@ ; `string'
PUBLIC	??_C@_0BF@MCFIACLE@emissionid?$DNsmoke?9gun?$AA@ ; `string'
PUBLIC	??_C@_0BC@CCJFEKCI@emissionrate?$DN2?5?50?$AA@	; `string'
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	??_C@_0O@MKHNPICB@id?$DNgun_sparks?$AA@		; `string'
PUBLIC	??_C@_0M@JLIFJGOA@id?$DNgun_dust?$AA@		; `string'
PUBLIC	??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@	; `string'
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	??_C@_0O@JBDLMBEE@alpha?$FL1?$FN?$DN?42?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BB@KJPMHGJF@color?5?$DN?5?46?5?45?5?44?$AA@ ; `string'
PUBLIC	??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@ ; `string'
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@ ; `string'
PUBLIC	??_C@_0P@NPCEFJNO@size?$FL1?$FN?5?$DN?5200?5?$AA@ ; `string'
PUBLIC	?PPN@@3PAPAVParticleParamNode@@A		; PPN
PUBLIC	??_C@_0M@CKMJOPJM@gravity?$DN0?46?$AA@		; `string'
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?PPNCount@@3HA					; PPNCount
PUBLIC	??_C@_0BG@EKIHLOI@visabledistance?$DN30000?$AA@	; `string'
PUBLIC	??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@	; `string'
PUBLIC	??_C@_0BB@NMDNBHOL@id?$DN$ROCKET_BURST?$AA@	; `string'
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@		; `string'
PUBLIC	??_C@_0BE@EDOJNDOO@inheritvelocity?5?$DN?51?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LLHMOCAM@emissionid?$DNrocket_impact?$AA@ ; `string'
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	??_C@_0BC@GFDFDAPI@emissionrate?$DN1?5?50?$AA@	; `string'
PUBLIC	??_C@_0BB@DAGIAIFM@id?$DNrocket_impact?$AA@	; `string'
PUBLIC	??_C@_0CD@BMLFHELP@emissiondomain?$DNsphere?50?50?50?50?50?5@ ; `string'
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@	; `string'
PUBLIC	??_C@_0BB@JDJMGHP@emissionrate?$DN3?5?5?$AA@	; `string'
PUBLIC	??_C@_0BE@GNAKLHLJ@emissionvelocity?$DN25?$AA@	; `string'
PUBLIC	??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@ ; `string'
PUBLIC	??_C@_0BB@JEOOPOMG@emissionrate?$DN4?5?5?$AA@	; `string'
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	??_C@_0BF@CHFECFDN@emissionvelocity?$DN25?5?$AA@ ; `string'
PUBLIC	??_C@_08GIDCOGNC@id?$DNagm88?$AA@		; `string'
PUBLIC	??_C@_0BF@LNPLJGJA@inheritvelocity?5?$DN?5?42?$AA@ ; `string'
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	??_C@_0BI@MANNLPLE@emissionid?$DNagm88?9impact?$AA@ ; `string'
PUBLIC	??_C@_0BB@KMGHPMKC@id?$DN$DURANDAL?9OFF?$AA@	; `string'
PUBLIC	??_C@_08FKBHHFLG@soundid?$DN?$AA@		; `string'
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@ ; `string'
PUBLIC	??_C@_0M@HMAGMDHJ@id?$DNDURANDAL?$AA@		; `string'
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@		; `string'
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	??_C@_0BK@PNJIPNLE@emissionvelocity?5?$DN?5125?510?$AA@ ; `string'
PUBLIC	??_C@_0N@GNMLDDOC@id?$DNlarge_agm?$AA@		; `string'
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	??_C@_0L@CBJFDLOC@soundid?$DN47?$AA@		; `string'
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	??_C@_0BD@EDFJMBGM@inheritvelocity?$DN?44?$AA@	; `string'
PUBLIC	??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@ ; `string'
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@ ; `string'
PUBLIC	??_C@_0CJ@EGLBOBOE@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	??_C@_0BJ@FMPCAODC@emissionvelocity?5?$DN?550?520?$AA@ ; `string'
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	??_C@_07NIOJMECE@id?$DNmk82?$AA@		; `string'
PUBLIC	??_C@_08LNMOOGAF@alpha?$DN?43?$AA@		; `string'
PUBLIC	??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@ ; `string'
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@ ; `string'
PUBLIC	??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@ ; `string'
PUBLIC	??_C@_0CJ@GFFGMMFB@emissiontarget?$DNsphere?50?50?50?5450?5@ ; `string'
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	??_C@_07IOLDGDKC@id?$DNmk84?$AA@		; `string'
PUBLIC	??_C@_0N@IJHCHBHP@dieonground?$DN?$AA@		; `string'
PUBLIC	??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@		; `string'
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	??_C@_0CJ@OBBBJMFK@emissiontarget?$DNsphere?50?50?50?5750?5@ ; `string'
PUBLIC	??_C@_0CJ@NDLIHBKA@emissiontarget?$DNsphere?50?50?50?5100?5@ ; `string'
PUBLIC	??_C@_0CJ@OJIIIECF@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?elapsedTime@ParticleNode@@2MA			; ParticleNode::elapsedTime
PUBLIC	??_C@_0BH@GLPAMNPG@emissionvelocity?5?$DN?5150?$AA@ ; `string'
PUBLIC	??_C@_0CJ@NIJNLGPM@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	?rotation@ParticleNode@@2PAUTrotation@@A	; ParticleNode::rotation
PUBLIC	??_C@_0BJ@OAGMBNOM@emissionvelocity?5?$DN?580?520?$AA@ ; `string'
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	??_C@_07IJGHPIOH@id?$DNm118?$AA@		; `string'
PUBLIC	?PS_Light@@3UDXLightType@@A			; PS_Light
PUBLIC	??_C@_0CJ@JDEADGPJ@emissiontarget?$DNsphere?50?50?50?5650?5@ ; `string'
PUBLIC	??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@ ; `string'
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	??_C@_0BA@IGBOIEFF@emissionrate?$DN45?$AA@	; `string'
PUBLIC	??_C@_0CJ@BOKAPILO@emissiontarget?$DNsphere?50?50?50?5540?5@ ; `string'
PUBLIC	??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@ ; `string'
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	??_C@_0CJ@BNKLJNDA@emissiontarget?$DNsphere?50?50?50?5600?5@ ; `string'
PUBLIC	??_C@_0M@CDJJPCCG@id?$DNmaverick?$AA@		; `string'
PUBLIC	??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@	; `string'
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	??_C@_0CG@KLDPEHEL@emissiontarget?$DNsphere?50?50?50?580?58@ ; `string'
PUBLIC	??_C@_0CG@EJDNBOED@emissiontarget?$DNsphere?50?50?50?550?55@ ; `string'
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@ ; `string'
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	??_C@_0BB@KGHELNPN@id?$DNmaverick_miss?$AA@	; `string'
PUBLIC	??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@	; `string'
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	??_C@_0P@DFJFBNFK@alpha?$FL1?$FN?$DN0?401?5?$AA@ ; `string'
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@	; `string'
PUBLIC	??_C@_0CG@OPFHCBKP@emissiontarget?$DNsphere?50?50?50?560?56@ ; `string'
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	??_C@_0BB@LJNNGPGP@emissionrate?$DN15?5?$AA@	; `string'
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	??_C@_07KOMCHHFM@id?$DNmk77?$AA@		; `string'
PUBLIC	??_C@_0BF@MAIMGCNF@inheritvelocity?5?$DN?5?47?$AA@ ; `string'
PUBLIC	??_C@_0BA@BMLJPFMH@color?5?$DN?51?0?51?0?50?$AA@ ; `string'
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	??_C@_0L@CGOOPMID@size?5?$DN?5100?$AA@		; `string'
PUBLIC	??_C@_0N@KPHNFHD@bounce?5?$DN?5?425?$AA@	; `string'
PUBLIC	??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@		; `string'
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	??_C@_0BA@NCDHFMME@soundlooped?$DN114?$AA@	; `string'
PUBLIC	??_C@_0BE@DNHBIADA@emissionid?$DNmk77fuel?$AA@	; `string'
PUBLIC	??_C@_0BE@BNOKMGCK@emissionvelocity?$DN80?$AA@	; `string'
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	??_C@_0CG@EEBDAJGB@emissiondomain?$DNsphere?50?50?50?510?55@ ; `string'
PUBLIC	??_C@_0CJ@CBCLODIM@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	??_C@_0L@LELJMOEK@id?$DNNUCLEAR?$AA@		; `string'
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	??_C@_0BG@GHMOJGKO@visibledistance?$DN80000?$AA@ ; `string'
PUBLIC	??_C@_0CM@HOFBLKHD@emissiontarget?$DNsphere?50?50?50?56500@ ; `string'
PUBLIC	??_C@_0CM@FPMPMBKK@emissiontarget?$DNsphere?50?50?50?53000@ ; `string'
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@	; `string'
PUBLIC	??_C@_0CN@CCEGGAGB@emissiontarget?$DNsphere?50?50?50?53000@ ; `string'
PUBLIC	??_C@_05HBLEPGBM@id?$DNwp?$AA@			; `string'
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@		; `string'
PUBLIC	??_C@_0CJ@FHPPCBKL@emissiontarget?$DNsphere?50?50?50?5200?5@ ; `string'
PUBLIC	??_C@_0CJ@HPPIHIOD@emissiontarget?$DNsphere?50?50?50?5500?5@ ; `string'
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@	; `string'
PUBLIC	??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@ ; `string'
PUBLIC	??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@ ; `string'
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	??_C@_0BB@OHGBBADL@emissionrate?$DN200?$AA@	; `string'
PUBLIC	??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@ ; `string'
PUBLIC	??_C@_0M@EGNFGPPD@id?$DNwp_small?$AA@		; `string'
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	??_C@_0CJ@JCCMOMIF@emissiontarget?$DNsphere?50?50?50?5175?5@ ; `string'
PUBLIC	??_C@_0CJ@IOIKBCND@emissiontarget?$DNsphere?50?50?50?5175?5@ ; `string'
PUBLIC	??_C@_0BA@GKIPAFOO@id?$DNagm88?9impact?$AA@	; `string'
PUBLIC	??_C@_0BF@EIHPOAKB@inheritvelocity?$DN?4001?$AA@ ; `string'
PUBLIC	??_C@_0BN@PPACACIE@id?$DNartillery?9explosion?9smoke?$AA@ ; `string'
PUBLIC	??_C@_0N@MOAJGIOE@lifespan?$DN4?53?$AA@		; `string'
PUBLIC	??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@	; `string'
PUBLIC	??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@		; `string'
PUBLIC	??_C@_0BF@NPBKNFNG@id?$DNburning_trail_air?$AA@	; `string'
PUBLIC	??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@ ; `string'
PUBLIC	??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@ ; `string'
PUBLIC	??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@	; `string'
PUBLIC	??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@	; `string'
PUBLIC	??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@		; `string'
PUBLIC	??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@	; `string'
PUBLIC	??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@	; `string'
PUBLIC	??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@	; `string'
PUBLIC	??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@	; `string'
PUBLIC	??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@ ; `string'
PUBLIC	??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@		; `string'
PUBLIC	??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@ ; `string'
PUBLIC	??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@ ; `string'
PUBLIC	??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@ ; `string'
PUBLIC	??_C@_0BK@KIPCPPCG@id?$DNburning_trail_airburst?$AA@ ; `string'
PUBLIC	??_C@_0BL@EMFDDKCN@id?$DNburning_trail_artillery?$AA@ ; `string'
PUBLIC	??_C@_0BG@ENBFKFFA@id?$DNburning_trail_bomb?$AA@ ; `string'
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	??_C@_0P@JEPJCAOE@lifespan?$DN2?52?54?$AA@	; `string'
PUBLIC	??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@ ; `string'
PUBLIC	??_C@_0BK@LABOKNDE@id?$DNburning_trail_durandal?$AA@ ; `string'
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@		; `string'
PUBLIC	??_C@_0N@HCAHIHIL@color?$DN?50?00?00?$AA@	; `string'
PUBLIC	??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@		; `string'
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	??_C@_0BJ@KFHEHHEO@initialvelocity?5?$DN?580?0?530?$AA@ ; `string'
PUBLIC	??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@		; `string'
PUBLIC	??_C@_0BK@JACNKCEM@id?$DNburning_trail_maverick?$AA@ ; `string'
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	??_C@_0BF@IMNHFLCP@id?$DNburning_trail_mis?$AA@	; `string'
PUBLIC	??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@ ; `string'
PUBLIC	??_C@_0N@DABLCIFG@size?$FL?45?$FN?5?$DN?53?$AA@	; `string'
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	??_C@_0N@PMKCEBLB@size?$FL1?$FN?5?$DN?5?45?$AA@	; `string'
PUBLIC	??_C@_0BK@PBHKKHDI@initialvelocity?5?$DN?5150?0?510?$AA@ ; `string'
PUBLIC	??_C@_0N@GAIBHJLL@id?$DNcbu?9smoke?$AA@		; `string'
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	??_C@_0P@FPIJOBBG@lifespan?$DN5?02?45?$AA@	; `string'
PUBLIC	??_C@_0BA@BIMKDNBC@color?$DN?49?5?49?5?49?5?$AA@ ; `string'
PUBLIC	??_C@_08PCFOCCDI@drag?$DN?499?$AA@		; `string'
PUBLIC	??_C@_0BF@OCNCMLCN@id?$DNcbu?9sub?9explosion?$AA@ ; `string'
PUBLIC	??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@ ; `string'
PUBLIC	??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@ ; `string'
PUBLIC	??_C@_0CC@GHLDOAGA@emissiondomain?$DNsphere?50?50?50?55?55?5@ ; `string'
PUBLIC	??_C@_0BI@FHACCPMI@emissionid?$DNfireball?9cbu?$AA@ ; `string'
PUBLIC	??_C@_0CC@HDEADFCB@emissiondomain?$DNsphere?50?50?50?51?51?5@ ; `string'
PUBLIC	??_C@_0BP@GGPFFECL@emissionid?$DNsurface?9disturbance?$AA@ ; `string'
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	??_C@_0CD@EAJMLJKE@emissiondomain?$DNsphere?50?50?50?5?50?50@ ; `string'
PUBLIC	??_C@_0CH@OAELAPM@emissiontarget?$DNsphere?50?50?510?560?5@ ; `string'
PUBLIC	??_C@_0O@PIJLCAGE@id?$DNdust?9brown?$AA@	; `string'
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	??_C@_0P@LHGGDAL@lifespan?$DN1?52?55?$AA@	; `string'
PUBLIC	??_C@_0N@LOLPAGCM@alpha?$FL?45?$FN?$DN?43?$AA@	; `string'
PUBLIC	??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@ ; `string'
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	??_C@_0O@OOAGCIEB@size?$FL0?$FN?5?$DN?5?515?$AA@ ; `string'
PUBLIC	??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@ ; `string'
PUBLIC	??_C@_0O@LKHILIGC@size?$FL1?$FN?5?$DN?560?5?$AA@ ; `string'
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@ ; `string'
PUBLIC	??_C@_0N@IHAGGKK@id?$DNdust?9grey?$AA@		; `string'
PUBLIC	??_C@_0P@LBEDDDKC@lifespan?$DN3?53?52?$AA@	; `string'
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@	; `string'
PUBLIC	??_C@_0BC@IEFICJJL@alpha?$FL1?$FN?$DN?405?5?5?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@NCBGGIAI@color?$DN?5?45?5?45?5?45?$AA@ ; `string'
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	??_C@_0O@BAHBHAOJ@size?$FL1?$FN?5?$DN?540?5?$AA@ ; `string'
PUBLIC	??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@	; `string'
PUBLIC	??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@		; `string'
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	??_C@_0BA@BEENCEDP@id?$DNfireball?9air?$AA@	; `string'
PUBLIC	??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@ ; `string'
PUBLIC	??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@ ; `string'
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@	; `string'
PUBLIC	??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@ ; `string'
PUBLIC	??_C@_0O@IDADGAJL@size?$FL1?$FN?5?$DN?5?550?$AA@ ; `string'
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@ ; `string'
PUBLIC	??_C@_0BF@PCBBBNPK@id?$DNfireball?9airburst?$AA@ ; `string'
PUBLIC	??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@	; `string'
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@		; `string'
PUBLIC	??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@		; `string'
PUBLIC	??_C@_0BA@PNFAJFJC@id?$DNfireball?9cbu?$AA@	; `string'
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	??_C@_0N@OMNBANCA@size?$FL1?$FN?5?$DN?555?$AA@	; `string'
PUBLIC	??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@ ; `string'
PUBLIC	??_C@_0BE@OHECPIEH@id?$DNfireball?9nosmoke?$AA@	; `string'
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@	; `string'
PUBLIC	??_C@_0BD@FPEKHDAD@id?$DNfireball?9nsmoke?$AA@	; `string'
PUBLIC	??_C@_0O@BKBOGFHE@color?$DN?48?5?45?50?$AA@	; `string'
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	??_C@_0N@HPKPPGOF@lifespan?$DN5?03?$AA@		; `string'
PUBLIC	??_C@_0BD@ILDHADJ@id?$DNfireball?9muzzle?$AA@	; `string'
PUBLIC	??_C@_0M@FBOCLMKP@size?$FL1?$FN?5?$DN?58?$AA@	; `string'
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	??_C@_0BB@JEAIKIHN@id?$DNfireball?9bomb?$AA@	; `string'
PUBLIC	??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@	; `string'
PUBLIC	??_C@_0O@GPCLCMND@size?$FL1?$FN?5?$DN?5130?$AA@	; `string'
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	??_C@_0BG@JABJNNJK@initialvelocity?$DN30?510?$AA@ ; `string'
PUBLIC	??_C@_0BG@FICPDDBL@emissionid?$DNflash?9bomb?$AA@ ; `string'
PUBLIC	??_C@_0BA@DEOEAPDL@id?$DNfireball?9mav?$AA@	; `string'
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	??_C@_0BF@BPAIPMIP@emissionid?$DNflash?9mav?$AA@ ; `string'
PUBLIC	??_C@_0BA@ELBJNHDE@id?$DNfireball?9med?$AA@	; `string'
PUBLIC	??_C@_0M@OEFDJFIN@gravity?$DN?5?48?$AA@		; `string'
PUBLIC	??_C@_0BE@LFADNEAB@initialvelocity?$DN1?54?$AA@	; `string'
PUBLIC	??_C@_0BC@BFGKDBGO@id?$DNfireball?9small?$AA@	; `string'
PUBLIC	??_C@_0BD@KEGNGIBO@id?$DNfireball?9napalm?$AA@	; `string'
PUBLIC	??_C@_0O@EKEEBNKJ@alpha?$FL1?$FN?$DN0?43?5?$AA@	; `string'
PUBLIC	??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@	; `string'
PUBLIC	??_C@_0P@DBLBCKOD@size?$FL1?$FN?5?$DN?5?5150?$AA@ ; `string'
PUBLIC	??_C@_0L@NMGOPFII@gravity?$DN?55?$AA@		; `string'
PUBLIC	??_C@_0BF@CGPEGICK@id?$DNfirework?9airburst?$AA@ ; `string'
PUBLIC	??_C@_0N@EEIDGNAD@lifespan?$DN5?51?$AA@		; `string'
PUBLIC	??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@	; `string'
PUBLIC	??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@ ; `string'
PUBLIC	??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@ ; `string'
PUBLIC	??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@	; `string'
PUBLIC	??_C@_0N@OPCHFNPK@size?$FL1?$FN?5?$DN?5?54?$AA@	; `string'
PUBLIC	??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@	; `string'
PUBLIC	??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@ ; `string'
PUBLIC	??_C@_0BC@PNEHOBIJ@id?$DNfirework?9shell?$AA@	; `string'
PUBLIC	??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@		; `string'
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	??_C@_0N@JCFAKJLP@size?$FL1?$FN?5?$DN?5?51?$AA@	; `string'
PUBLIC	??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@	; `string'
PUBLIC	??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@ ; `string'
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	??_C@_0BA@JOLJGIOB@id?$DNfirework?9mis?$AA@	; `string'
PUBLIC	??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@	; `string'
PUBLIC	??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@ ; `string'
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	??_C@_0BE@NPPMBNJL@initialvelocity?$DN200?$AA@	; `string'
PUBLIC	??_C@_0BE@OJKMCAOI@id?$DNfirework?9sparkle?$AA@	; `string'
PUBLIC	??_C@_0M@HJNKMLLN@alpha?$FL0?$FN?$DN?51?$AA@	; `string'
PUBLIC	??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@ ; `string'
PUBLIC	??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@ ; `string'
PUBLIC	??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@ ; `string'
PUBLIC	??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@	; `string'
PUBLIC	??_C@_0P@LAOOHOMB@id?$DNfireball_wp?$AA@	; `string'
PUBLIC	??_C@_0O@EPALALCM@alpha?$FL1?$FN?$DN0?44?5?$AA@	; `string'
PUBLIC	??_C@_0M@BKJLBNNM@color?$DN1?01?00?$AA@		; `string'
PUBLIC	??_C@_0N@FFNEGKKI@size?$FL0?$FN?5?$DN?580?$AA@	; `string'
_BSS	SEGMENT
?Sort@@3_NA DB	01H DUP (?)				; Sort
	ALIGN	4

?DXMode@@3_NA DB 01H DUP (?)				; DXMode
	ALIGN	4

?Log10Array@DrawableParticleSys@@2PAMA DD 01f4H DUP (?)	; DrawableParticleSys::Log10Array
?FadeArray@DrawableParticleSys@@2PAMA DD 01f4H DUP (?)	; DrawableParticleSys::FadeArray
?ASinArray@DrawableParticleSys@@2PAMA DD 01f4H DUP (?)	; DrawableParticleSys::ASinArray
?SizeArray@DrawableParticleSys@@2PAMA DD 01f4H DUP (?)	; DrawableParticleSys::SizeArray
?greenMode@DrawableParticleSys@@1HA DD 01H DUP (?)	; DrawableParticleSys::greenMode
?psContext@DrawableParticleSys@@1PAVDXContext@@A DD 01H DUP (?) ; DrawableParticleSys::psContext
?Groups@DrawableParticleSys@@0PAVParticleGroupNode@@A DD 01H DUP (?) ; DrawableParticleSys::Groups
?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A DD 01H DUP (?) ; DrawableParticleSys::LastGroup
?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A DB 03000H DUP (?) ; DrawableParticleSys::PS_QuadRndList
?PS_Renderer@DrawableParticleSys@@0PAVRenderOTW@@A DD 01H DUP (?) ; DrawableParticleSys::PS_Renderer
?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A DB 0e0H DUP (?) ; DrawableParticleSys::PS_Lists
?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A DD 01H DUP (?) ; DrawableParticleSys::PS_PPN
?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A DD 01H DUP (?) ; DrawableParticleSys::PS_PEP
?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A DD 01H DUP (?) ; DrawableParticleSys::PS_TPN
_TimeToPurge DD	01H DUP (?)
?PS_PPNNr@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_PPNNr
?PS_TPNNr@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_TPNNr
?PS_PEPNr@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_PEPNr
_TimeToPurgeAll DD 01H DUP (?)
?TrailsHandle@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::TrailsHandle
?PS_TrailsID@DrawableParticleSys@@0PAKA DD 0100H DUP (?) ; DrawableParticleSys::PS_TrailsID
?PS_SubTrails@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_SubTrails
?g_bNoParticleSys@@3_NA DB 01H DUP (?)			; g_bNoParticleSys
	ALIGN	4

?gParticleSysGreenMode@@3HA DD 01H DUP (?)		; gParticleSysGreenMode
?DebugTrail@@3_NA DB 01H DUP (?)			; DebugTrail
	ALIGN	4

?PS_ElapsedTime@DrawableParticleSys@@0MA DD 01H DUP (?)	; DrawableParticleSys::PS_ElapsedTime
?PS_RunTime@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_RunTime
?PS_LastTime@DrawableParticleSys@@0KA DD 01H DUP (?)	; DrawableParticleSys::PS_LastTime
?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A DB 0cH DUP (?) ; DrawableParticleSys::PS_HiLightCx
?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A DB 0cH DUP (?) ; DrawableParticleSys::PS_LoLightCx
?PS_NVG@DrawableParticleSys@@0_NA DB 01H DUP (?)	; DrawableParticleSys::PS_NVG
	ALIGN	4

?PS_TV@DrawableParticleSys@@0_NA DB 01H DUP (?)		; DrawableParticleSys::PS_TV
	ALIGN	4

?groundLevel@DrawableParticleSys@@2MA DD 01H DUP (?)	; DrawableParticleSys::groundLevel
?cameraDistance@DrawableParticleSys@@2MA DD 01H DUP (?)	; DrawableParticleSys::cameraDistance
?reloadParameters@DrawableParticleSys@@2HA DD 01H DUP (?) ; DrawableParticleSys::reloadParameters
?winddx@DrawableParticleSys@@2MA DD 01H DUP (?)		; DrawableParticleSys::winddx
?winddy@DrawableParticleSys@@2MA DD 01H DUP (?)		; DrawableParticleSys::winddy
?PPN@@3PAPAVParticleParamNode@@A DD 01H DUP (?)		; PPN
?PPNCount@@3HA DD 01H DUP (?)				; PPNCount
?elapsedTime@ParticleNode@@2MA DD 01H DUP (?)		; ParticleNode::elapsedTime
?PS_Light@@3UDXLightType@@A DB 078H DUP (?)		; PS_Light
_BSS	ENDS
;	COMDAT ??_C@_0N@FFNEGKKI@size?$FL0?$FN?5?$DN?580?$AA@
CONST	SEGMENT
??_C@_0N@FFNEGKKI@size?$FL0?$FN?5?$DN?580?$AA@ DB 'size[0] = 80', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKJLBNNM@color?$DN1?01?00?$AA@
CONST	SEGMENT
??_C@_0M@BKJLBNNM@color?$DN1?01?00?$AA@ DB 'color=1,1,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EPALALCM@alpha?$FL1?$FN?$DN0?44?5?$AA@
CONST	SEGMENT
??_C@_0O@EPALALCM@alpha?$FL1?$FN?$DN0?44?5?$AA@ DB 'alpha[1]=0.4 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAOOHOMB@id?$DNfireball_wp?$AA@
CONST	SEGMENT
??_C@_0P@LAOOHOMB@id?$DNfireball_wp?$AA@ DB 'id=fireball_wp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@ DB 'size[1] = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@
CONST	SEGMENT
??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@ DB 'light[1.0]=1 1 0'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@
CONST	SEGMENT
??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@ DB 'light[0.5]=1 0 0'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@
CONST	SEGMENT
??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@ DB 'light[0.0]=1 1 1'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HJNKMLLN@alpha?$FL0?$FN?$DN?51?$AA@
CONST	SEGMENT
??_C@_0M@HJNKMLLN@alpha?$FL0?$FN?$DN?51?$AA@ DB 'alpha[0]= 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OJKMCAOI@id?$DNfirework?9sparkle?$AA@
CONST	SEGMENT
??_C@_0BE@OJKMCAOI@id?$DNfirework?9sparkle?$AA@ DB 'id=firework-sparkle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPPMBNJL@initialvelocity?$DN200?$AA@
CONST	SEGMENT
??_C@_0BE@NPPMBNJL@initialvelocity?$DN200?$AA@ DB 'initialvelocity=200', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@
CONST	SEGMENT
??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@ DB 'light[1]=1 0 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@
CONST	SEGMENT
??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@ DB 'alpha[0]=1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JOLJGIOB@id?$DNfirework?9mis?$AA@
CONST	SEGMENT
??_C@_0BA@JOLJGIOB@id?$DNfirework?9mis?$AA@ DB 'id=firework-mis', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@
CONST	SEGMENT
??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 3 3 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@
CONST	SEGMENT
??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@ DB 'initialvelocity=300', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCFAKJLP@size?$FL1?$FN?5?$DN?5?51?$AA@
CONST	SEGMENT
??_C@_0N@JCFAKJLP@size?$FL1?$FN?5?$DN?5?51?$AA@ DB 'size[1] =  1', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
CONST	SEGMENT
??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@ DB 'lifespan=3 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNEHOBIJ@id?$DNfirework?9shell?$AA@
CONST	SEGMENT
??_C@_0BC@PNEHOBIJ@id?$DNfirework?9shell?$AA@ DB 'id=firework-shell', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
CONST	SEGMENT
??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@ DB 'emissionid=fi'
	DB	'rework-sparkle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@
CONST	SEGMENT
??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@ DB 'initialvelocity=50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OPCHFNPK@size?$FL1?$FN?5?$DN?5?54?$AA@
CONST	SEGMENT
??_C@_0N@OPCHFNPK@size?$FL1?$FN?5?$DN?5?54?$AA@ DB 'size[1] =  4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@
CONST	SEGMENT
??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@ DB 'size[0] =  2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
CONST	SEGMENT
??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@ DB 'light[1]=1 0 0 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
CONST	SEGMENT
??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@ DB 'light[0]=1 1 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@
CONST	SEGMENT
??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@ DB 'alpha[0]=.7 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EEIDGNAD@lifespan?$DN5?51?$AA@
CONST	SEGMENT
??_C@_0N@EEIDGNAD@lifespan?$DN5?51?$AA@ DB 'lifespan=5 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGPEGICK@id?$DNfirework?9airburst?$AA@
CONST	SEGMENT
??_C@_0BF@CGPEGICK@id?$DNfirework?9airburst?$AA@ DB 'id=firework-airburst'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NMGOPFII@gravity?$DN?55?$AA@
CONST	SEGMENT
??_C@_0L@NMGOPFII@gravity?$DN?55?$AA@ DB 'gravity= 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DBLBCKOD@size?$FL1?$FN?5?$DN?5?5150?$AA@
CONST	SEGMENT
??_C@_0P@DBLBCKOD@size?$FL1?$FN?5?$DN?5?5150?$AA@ DB 'size[1] =  150', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@
CONST	SEGMENT
??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@ DB 'lifespan=1 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EKEEBNKJ@alpha?$FL1?$FN?$DN0?43?5?$AA@
CONST	SEGMENT
??_C@_0O@EKEEBNKJ@alpha?$FL1?$FN?$DN0?43?5?$AA@ DB 'alpha[1]=0.3 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KEGNGIBO@id?$DNfireball?9napalm?$AA@
CONST	SEGMENT
??_C@_0BD@KEGNGIBO@id?$DNfireball?9napalm?$AA@ DB 'id=fireball-napalm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BFGKDBGO@id?$DNfireball?9small?$AA@
CONST	SEGMENT
??_C@_0BC@BFGKDBGO@id?$DNfireball?9small?$AA@ DB 'id=fireball-small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LFADNEAB@initialvelocity?$DN1?54?$AA@
CONST	SEGMENT
??_C@_0BE@LFADNEAB@initialvelocity?$DN1?54?$AA@ DB 'initialvelocity=1 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OEFDJFIN@gravity?$DN?5?48?$AA@
CONST	SEGMENT
??_C@_0M@OEFDJFIN@gravity?$DN?5?48?$AA@ DB 'gravity= .8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ELBJNHDE@id?$DNfireball?9med?$AA@
CONST	SEGMENT
??_C@_0BA@ELBJNHDE@id?$DNfireball?9med?$AA@ DB 'id=fireball-med', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BPAIPMIP@emissionid?$DNflash?9mav?$AA@
CONST	SEGMENT
??_C@_0BF@BPAIPMIP@emissionid?$DNflash?9mav?$AA@ DB 'emissionid=flash-mav'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ??_C@_0BA@DEOEAPDL@id?$DNfireball?9mav?$AA@
CONST	SEGMENT
??_C@_0BA@DEOEAPDL@id?$DNfireball?9mav?$AA@ DB 'id=fireball-mav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FICPDDBL@emissionid?$DNflash?9bomb?$AA@
CONST	SEGMENT
??_C@_0BG@FICPDDBL@emissionid?$DNflash?9bomb?$AA@ DB 'emissionid=flash-bo'
	DB	'mb', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JABJNNJK@initialvelocity?$DN30?510?$AA@
CONST	SEGMENT
??_C@_0BG@JABJNNJK@initialvelocity?$DN30?510?$AA@ DB 'initialvelocity=30 '
	DB	'10', 00H					; `string'
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ??_C@_0O@GPCLCMND@size?$FL1?$FN?5?$DN?5130?$AA@
CONST	SEGMENT
??_C@_0O@GPCLCMND@size?$FL1?$FN?5?$DN?5130?$AA@ DB 'size[1] = 130', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@
CONST	SEGMENT
??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@ DB 'size[0] = 60', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JEAIKIHN@id?$DNfireball?9bomb?$AA@
CONST	SEGMENT
??_C@_0BB@JEAIKIHN@id?$DNfireball?9bomb?$AA@ DB 'id=fireball-bomb', 00H ; `string'
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ??_C@_0M@FBOCLMKP@size?$FL1?$FN?5?$DN?58?$AA@
CONST	SEGMENT
??_C@_0M@FBOCLMKP@size?$FL1?$FN?5?$DN?58?$AA@ DB 'size[1] = 8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILDHADJ@id?$DNfireball?9muzzle?$AA@
CONST	SEGMENT
??_C@_0BD@ILDHADJ@id?$DNfireball?9muzzle?$AA@ DB 'id=fireball-muzzle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HPKPPGOF@lifespan?$DN5?03?$AA@
CONST	SEGMENT
??_C@_0N@HPKPPGOF@lifespan?$DN5?03?$AA@ DB 'lifespan=5,3', 00H ; `string'
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ??_C@_0O@BKBOGFHE@color?$DN?48?5?45?50?$AA@
CONST	SEGMENT
??_C@_0O@BKBOGFHE@color?$DN?48?5?45?50?$AA@ DB 'color=.8 .5 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FPEKHDAD@id?$DNfireball?9nsmoke?$AA@
CONST	SEGMENT
??_C@_0BD@FPEKHDAD@id?$DNfireball?9nsmoke?$AA@ DB 'id=fireball-nsmoke', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@
CONST	SEGMENT
??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@ DB 'size[1] = 35', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ??_C@_0BE@OHECPIEH@id?$DNfireball?9nosmoke?$AA@
CONST	SEGMENT
??_C@_0BE@OHECPIEH@id?$DNfireball?9nosmoke?$AA@ DB 'id=fireball-nosmoke', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
CONST	SEGMENT
??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@ DB 'initialvelocity=30 '
	DB	'22', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OMNBANCA@size?$FL1?$FN?5?$DN?555?$AA@
CONST	SEGMENT
??_C@_0N@OMNBANCA@size?$FL1?$FN?5?$DN?555?$AA@ DB 'size[1] = 55', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ??_C@_0BA@PNFAJFJC@id?$DNfireball?9cbu?$AA@
CONST	SEGMENT
??_C@_0BA@PNFAJFJC@id?$DNfireball?9cbu?$AA@ DB 'id=fireball-cbu', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@
CONST	SEGMENT
??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@ DB 'gravity= .9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
CONST	SEGMENT
??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@ DB 'lifespan=2 1', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
CONST	SEGMENT
??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@ DB 'alpha[1]=.5 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PCBBBNPK@id?$DNfireball?9airburst?$AA@
CONST	SEGMENT
??_C@_0BF@PCBBBNPK@id?$DNfireball?9airburst?$AA@ DB 'id=fireball-airburst'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@
CONST	SEGMENT
??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@ DB 'initialvelocity=10 '
	DB	'20', 00H					; `string'
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ??_C@_0O@IDADGAJL@size?$FL1?$FN?5?$DN?5?550?$AA@
CONST	SEGMENT
??_C@_0O@IDADGAJL@size?$FL1?$FN?5?$DN?5?550?$AA@ DB 'size[1] =  50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
CONST	SEGMENT
??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@ DB 'size[0] =  20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
CONST	SEGMENT
??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@ DB 'lifespan=.75 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@ DB 'light[1.'
	DB	'0 ]=1 0 0   ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
CONST	SEGMENT
??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@ DB 'light[0.75]'
	DB	'=1 1 .8 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEENCEDP@id?$DNfireball?9air?$AA@
CONST	SEGMENT
??_C@_0BA@BEENCEDP@id?$DNfireball?9air?$AA@ DB 'id=fireball-air', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@
CONST	SEGMENT
??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@ DB 'gravity=0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
CONST	SEGMENT
??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@ DB 'texture=trail0.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BAHBHAOJ@size?$FL1?$FN?5?$DN?540?5?$AA@
CONST	SEGMENT
??_C@_0O@BAHBHAOJ@size?$FL1?$FN?5?$DN?540?5?$AA@ DB 'size[1] = 40 ', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ??_C@_0BA@NCBGGIAI@color?$DN?5?45?5?45?5?45?$AA@
CONST	SEGMENT
??_C@_0BA@NCBGGIAI@color?$DN?5?45?5?45?5?45?$AA@ DB 'color= .5 .5 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IEFICJJL@alpha?$FL1?$FN?$DN?405?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BC@IEFICJJL@alpha?$FL1?$FN?$DN?405?5?5?5?5?5?$AA@ DB 'alpha[1]=.05'
	DB	'     ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@ DB 'alpha[.5]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ??_C@_0P@LBEDDDKC@lifespan?$DN3?53?52?$AA@
CONST	SEGMENT
??_C@_0P@LBEDDDKC@lifespan?$DN3?53?52?$AA@ DB 'lifespan=3 3 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHAGGKK@id?$DNdust?9grey?$AA@
CONST	SEGMENT
??_C@_0N@IHAGGKK@id?$DNdust?9grey?$AA@ DB 'id=dust-grey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@
CONST	SEGMENT
??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@ DB 'visibledistance=7000'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ??_C@_0O@LKHILIGC@size?$FL1?$FN?5?$DN?560?5?$AA@
CONST	SEGMENT
??_C@_0O@LKHILIGC@size?$FL1?$FN?5?$DN?560?5?$AA@ DB 'size[1] = 60 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@
CONST	SEGMENT
??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@ DB 'size[.1] = 40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OOAGCIEB@size?$FL0?$FN?5?$DN?5?515?$AA@
CONST	SEGMENT
??_C@_0O@OOAGCIEB@size?$FL0?$FN?5?$DN?5?515?$AA@ DB 'size[0] =  15', 00H ; `string'
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@
CONST	SEGMENT
??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@ DB 'color= .8, .75,'
	DB	' .7', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOLPAGCM@alpha?$FL?45?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0N@LOLPAGCM@alpha?$FL?45?$FN?$DN?43?$AA@ DB 'alpha[.5]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LHGGDAL@lifespan?$DN1?52?55?$AA@
CONST	SEGMENT
??_C@_0P@LHGGDAL@lifespan?$DN1?52?55?$AA@ DB 'lifespan=1 2 5', 00H ; `string'
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ??_C@_0O@PIJLCAGE@id?$DNdust?9brown?$AA@
CONST	SEGMENT
??_C@_0O@PIJLCAGE@id?$DNdust?9brown?$AA@ DB 'id=dust-brown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OAELAPM@emissiontarget?$DNsphere?50?50?510?560?5@
CONST	SEGMENT
??_C@_0CH@OAELAPM@emissiontarget?$DNsphere?50?50?510?560?5@ DB 'emissiont'
	DB	'arget=sphere 0 0 10 60 60 -60', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EAJMLJKE@emissiondomain?$DNsphere?50?50?50?5?50?50@
CONST	SEGMENT
??_C@_0CD@EAJMLJKE@emissiondomain?$DNsphere?50?50?50?5?50?50@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0  0 0 0', 00H		; `string'
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ??_C@_0BP@GGPFFECL@emissionid?$DNsurface?9disturbance?$AA@
CONST	SEGMENT
??_C@_0BP@GGPFFECL@emissionid?$DNsurface?9disturbance?$AA@ DB 'emissionid'
	DB	'=surface-disturbance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HDEADFCB@emissiondomain?$DNsphere?50?50?50?51?51?5@
CONST	SEGMENT
??_C@_0CC@HDEADFCB@emissiondomain?$DNsphere?50?50?50?51?51?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 1 1 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHACCPMI@emissionid?$DNfireball?9cbu?$AA@
CONST	SEGMENT
??_C@_0BI@FHACCPMI@emissionid?$DNfireball?9cbu?$AA@ DB 'emissionid=fireba'
	DB	'll-cbu', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GHLDOAGA@emissiondomain?$DNsphere?50?50?50?55?55?5@
CONST	SEGMENT
??_C@_0CC@GHLDOAGA@emissiondomain?$DNsphere?50?50?50?55?55?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 5 5 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@
CONST	SEGMENT
??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 -5 10 10 -10', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@
CONST	SEGMENT
??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 5 5 5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OCNCMLCN@id?$DNcbu?9sub?9explosion?$AA@
CONST	SEGMENT
??_C@_0BF@OCNCMLCN@id?$DNcbu?9sub?9explosion?$AA@ DB 'id=cbu-sub-explosio'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCFOCCDI@drag?$DN?499?$AA@
CONST	SEGMENT
??_C@_08PCFOCCDI@drag?$DN?499?$AA@ DB 'drag=.99', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BIMKDNBC@color?$DN?49?5?49?5?49?5?$AA@
CONST	SEGMENT
??_C@_0BA@BIMKDNBC@color?$DN?49?5?49?5?49?5?$AA@ DB 'color=.9 .9 .9 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPIJOBBG@lifespan?$DN5?02?45?$AA@
CONST	SEGMENT
??_C@_0P@FPIJOBBG@lifespan?$DN5?02?45?$AA@ DB 'lifespan=5,2.5', 00H ; `string'
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ??_C@_0N@GAIBHJLL@id?$DNcbu?9smoke?$AA@
CONST	SEGMENT
??_C@_0N@GAIBHJLL@id?$DNcbu?9smoke?$AA@ DB 'id=cbu-smoke', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PBHKKHDI@initialvelocity?5?$DN?5150?0?510?$AA@
CONST	SEGMENT
??_C@_0BK@PBHKKHDI@initialvelocity?5?$DN?5150?0?510?$AA@ DB 'initialveloc'
	DB	'ity = 150, 10', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMKCEBLB@size?$FL1?$FN?5?$DN?5?45?$AA@
CONST	SEGMENT
??_C@_0N@PMKCEBLB@size?$FL1?$FN?5?$DN?5?45?$AA@ DB 'size[1] = .5', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ??_C@_0N@DABLCIFG@size?$FL?45?$FN?5?$DN?53?$AA@
CONST	SEGMENT
??_C@_0N@DABLCIFG@size?$FL?45?$FN?5?$DN?53?$AA@ DB 'size[.5] = 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
CONST	SEGMENT
??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@ DB 'light[0.0 ]=1 '
	DB	'1 1', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IMNHFLCP@id?$DNburning_trail_mis?$AA@
CONST	SEGMENT
??_C@_0BF@IMNHFLCP@id?$DNburning_trail_mis?$AA@ DB 'id=burning_trail_mis', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ??_C@_0BK@JACNKCEM@id?$DNburning_trail_maverick?$AA@
CONST	SEGMENT
??_C@_0BK@JACNKCEM@id?$DNburning_trail_maverick?$AA@ DB 'id=burning_trail'
	DB	'_maverick', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@
CONST	SEGMENT
??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@ DB 'trailid = 9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KFHEHHEO@initialvelocity?5?$DN?580?0?530?$AA@
CONST	SEGMENT
??_C@_0BJ@KFHEHHEO@initialvelocity?5?$DN?580?0?530?$AA@ DB 'initialveloci'
	DB	'ty = 80, 30', 00H				; `string'
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@
CONST	SEGMENT
??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@ DB 'lifespan= 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCAHIHIL@color?$DN?50?00?00?$AA@
CONST	SEGMENT
??_C@_0N@HCAHIHIL@color?$DN?50?00?00?$AA@ DB 'color= 0,0,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@
CONST	SEGMENT
??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@ DB 'alpha= .8', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ??_C@_0BK@LABOKNDE@id?$DNburning_trail_durandal?$AA@
CONST	SEGMENT
??_C@_0BK@LABOKNDE@id?$DNburning_trail_durandal?$AA@ DB 'id=burning_trail'
	DB	'_durandal', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@
CONST	SEGMENT
??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@ DB 'initialveloc'
	DB	'ity = 200, 50', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEPJCAOE@lifespan?$DN2?52?54?$AA@
CONST	SEGMENT
??_C@_0P@JEPJCAOE@lifespan?$DN2?52?54?$AA@ DB 'lifespan=2 2 4', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ??_C@_0BG@ENBFKFFA@id?$DNburning_trail_bomb?$AA@
CONST	SEGMENT
??_C@_0BG@ENBFKFFA@id?$DNburning_trail_bomb?$AA@ DB 'id=burning_trail_bom'
	DB	'b', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EMFDDKCN@id?$DNburning_trail_artillery?$AA@
CONST	SEGMENT
??_C@_0BL@EMFDDKCN@id?$DNburning_trail_artillery?$AA@ DB 'id=burning_trai'
	DB	'l_artillery', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KIPCPPCG@id?$DNburning_trail_airburst?$AA@
CONST	SEGMENT
??_C@_0BK@KIPCPPCG@id?$DNburning_trail_airburst?$AA@ DB 'id=burning_trail'
	DB	'_airburst', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@ DB 'emission'
	DB	'target=sphere 0 0 0 20 20 -180', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
CONST	SEGMENT
??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@ DB 'emissionid=smoke-bo'
	DB	'mb', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
CONST	SEGMENT
??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@ DB 'inheritvelocity =.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
CONST	SEGMENT
??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@ DB 'drag = .4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
CONST	SEGMENT
??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@ DB 'initialveloci'
	DB	'ty = 50, 10', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
CONST	SEGMENT
??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@ DB 'lifespan=2 2 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
CONST	SEGMENT
??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@ DB 'texture=SUN.DDS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
CONST	SEGMENT
??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@ DB 'size[1] = 1.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
CONST	SEGMENT
??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@ DB 'size[.5] = 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
CONST	SEGMENT
??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@ DB 'color=1,0,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
CONST	SEGMENT
??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@ DB 'alpha[.5]=.6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
CONST	SEGMENT
??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@ DB 'alpha[0]=1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@ DB 'light[1.'
	DB	'0 ]=1 1 0   ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
CONST	SEGMENT
??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@ DB 'light[0.75]=1'
	DB	' 0 0 ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
CONST	SEGMENT
??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@ DB 'light[0.0 ]=0 '
	DB	'0 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NPBKNFNG@id?$DNburning_trail_air?$AA@
CONST	SEGMENT
??_C@_0BF@NPBKNFNG@id?$DNburning_trail_air?$AA@ DB 'id=burning_trail_air', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@
CONST	SEGMENT
??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@ DB 'gravity=-1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@
CONST	SEGMENT
??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@ DB 'color=.2 .2 .2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MOAJGIOE@lifespan?$DN4?53?$AA@
CONST	SEGMENT
??_C@_0N@MOAJGIOE@lifespan?$DN4?53?$AA@ DB 'lifespan=4 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PPACACIE@id?$DNartillery?9explosion?9smoke?$AA@
CONST	SEGMENT
??_C@_0BN@PPACACIE@id?$DNartillery?9explosion?9smoke?$AA@ DB 'id=artiller'
	DB	'y-explosion-smoke', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EIHPOAKB@inheritvelocity?$DN?4001?$AA@
CONST	SEGMENT
??_C@_0BF@EIHPOAKB@inheritvelocity?$DN?4001?$AA@ DB 'inheritvelocity=.001'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GKIPAFOO@id?$DNagm88?9impact?$AA@
CONST	SEGMENT
??_C@_0BA@GKIPAFOO@id?$DNagm88?9impact?$AA@ DB 'id=agm88-impact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IOIKBCND@emissiontarget?$DNsphere?50?50?50?5175?5@
CONST	SEGMENT
??_C@_0CJ@IOIKBCND@emissiontarget?$DNsphere?50?50?50?5175?5@ DB 'emission'
	DB	'target=sphere 0 0 0 175 175 -200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JCCMOMIF@emissiontarget?$DNsphere?50?50?50?5175?5@
CONST	SEGMENT
??_C@_0CJ@JCCMOMIF@emissiontarget?$DNsphere?50?50?50?5175?5@ DB 'emission'
	DB	'target=sphere 0 0 0 175 175 -180', 00H	; `string'
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ??_C@_0M@EGNFGPPD@id?$DNwp_small?$AA@
CONST	SEGMENT
??_C@_0M@EGNFGPPD@id?$DNwp_small?$AA@ DB 'id=wp_small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@
CONST	SEGMENT
??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@ DB 'emissionvelocit'
	DB	'y = 50 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OHGBBADL@emissionrate?$DN200?$AA@
CONST	SEGMENT
??_C@_0BB@OHGBBADL@emissionrate?$DN200?$AA@ DB 'emissionrate=200', 00H ; `string'
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@
CONST	SEGMENT
??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@ DB 'emissionid=sm'
	DB	'oke_white_large', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@
CONST	SEGMENT
??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@ DB 'emissionveloci'
	DB	'ty = 200 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@
CONST	SEGMENT
??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@ DB 'emissionrate=150', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ??_C@_0CJ@HPPIHIOD@emissiontarget?$DNsphere?50?50?50?5500?5@
CONST	SEGMENT
??_C@_0CJ@HPPIHIOD@emissiontarget?$DNsphere?50?50?50?5500?5@ DB 'emission'
	DB	'target=sphere 0 0 0 500 500 -750', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FHPPCBKL@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@FHPPCBKL@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@
CONST	SEGMENT
??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@ DB 'lifespan=11', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ??_C@_05HBLEPGBM@id?$DNwp?$AA@
CONST	SEGMENT
??_C@_05HBLEPGBM@id?$DNwp?$AA@ DB 'id=wp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@CCEGGAGB@emissiontarget?$DNsphere?50?50?50?53000@
CONST	SEGMENT
??_C@_0CN@CCEGGAGB@emissiontarget?$DNsphere?50?50?50?53000@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 3000 3000 -20000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
CONST	SEGMENT
??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@ DB 'emissionrate=120', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ??_C@_0CM@FPMPMBKK@emissiontarget?$DNsphere?50?50?50?53000@
CONST	SEGMENT
??_C@_0CM@FPMPMBKK@emissiontarget?$DNsphere?50?50?50?53000@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 3000 3000 -3000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HOFBLKHD@emissiontarget?$DNsphere?50?50?50?56500@
CONST	SEGMENT
??_C@_0CM@HOFBLKHD@emissiontarget?$DNsphere?50?50?50?56500@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 6500 6500 -6500', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GHMOJGKO@visibledistance?$DN80000?$AA@
CONST	SEGMENT
??_C@_0BG@GHMOJGKO@visibledistance?$DN80000?$AA@ DB 'visibledistance=8000'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ??_C@_0L@LELJMOEK@id?$DNNUCLEAR?$AA@
CONST	SEGMENT
??_C@_0L@LELJMOEK@id?$DNNUCLEAR?$AA@ DB 'id=NUCLEAR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CBCLODIM@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@CBCLODIM@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 500 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EEBDAJGB@emissiondomain?$DNsphere?50?50?50?510?55@
CONST	SEGMENT
??_C@_0CG@EEBDAJGB@emissiondomain?$DNsphere?50?50?50?510?55@ DB 'emission'
	DB	'domain=sphere 0 0 0 10 50 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ??_C@_0BE@BNOKMGCK@emissionvelocity?$DN80?$AA@
CONST	SEGMENT
??_C@_0BE@BNOKMGCK@emissionvelocity?$DN80?$AA@ DB 'emissionvelocity=80', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNHBIADA@emissionid?$DNmk77fuel?$AA@
CONST	SEGMENT
??_C@_0BE@DNHBIADA@emissionid?$DNmk77fuel?$AA@ DB 'emissionid=mk77fuel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCDHFMME@soundlooped?$DN114?$AA@
CONST	SEGMENT
??_C@_0BA@NCDHFMME@soundlooped?$DN114?$AA@ DB 'soundlooped=114', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
CONST	SEGMENT
??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@ DB 'soundid=114', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KPHNFHD@bounce?5?$DN?5?425?$AA@
CONST	SEGMENT
??_C@_0N@KPHNFHD@bounce?5?$DN?5?425?$AA@ DB 'bounce = .25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CGOOPMID@size?5?$DN?5100?$AA@
CONST	SEGMENT
??_C@_0L@CGOOPMID@size?5?$DN?5100?$AA@ DB 'size = 100', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ??_C@_0BA@BMLJPFMH@color?5?$DN?51?0?51?0?50?$AA@
CONST	SEGMENT
??_C@_0BA@BMLJPFMH@color?5?$DN?51?0?51?0?50?$AA@ DB 'color = 1, 1, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MAIMGCNF@inheritvelocity?5?$DN?5?47?$AA@
CONST	SEGMENT
??_C@_0BF@MAIMGCNF@inheritvelocity?5?$DN?5?47?$AA@ DB 'inheritvelocity = '
	DB	'.7', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOMCHHFM@id?$DNmk77?$AA@
CONST	SEGMENT
??_C@_07KOMCHHFM@id?$DNmk77?$AA@ DB 'id=mk77', 00H	; `string'
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ??_C@_0BB@LJNNGPGP@emissionrate?$DN15?5?$AA@
CONST	SEGMENT
??_C@_0BB@LJNNGPGP@emissionrate?$DN15?5?$AA@ DB 'emissionrate=15 ', 00H ; `string'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ??_C@_0CG@OPFHCBKP@emissiontarget?$DNsphere?50?50?50?560?56@
CONST	SEGMENT
??_C@_0CG@OPFHCBKP@emissiontarget?$DNsphere?50?50?50?560?56@ DB 'emission'
	DB	'target=sphere 0 0 0 60 60 -60', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@
CONST	SEGMENT
??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@ DB 'lifespan=3 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ??_C@_0P@DFJFBNFK@alpha?$FL1?$FN?$DN0?401?5?$AA@
CONST	SEGMENT
??_C@_0P@DFJFBNFK@alpha?$FL1?$FN?$DN0?401?5?$AA@ DB 'alpha[1]=0.01 ', 00H ; `string'
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@
CONST	SEGMENT
??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@ DB 'alpha[0]=1.00', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGHELNPN@id?$DNmaverick_miss?$AA@
CONST	SEGMENT
??_C@_0BB@KGHELNPN@id?$DNmaverick_miss?$AA@ DB 'id=maverick_miss', 00H ; `string'
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
CONST	SEGMENT
??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@ DB 'emissionvelocit'
	DB	'y = 80 5', 00H				; `string'
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ??_C@_0CG@EJDNBOED@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CG@EJDNBOED@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -75', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KLDPEHEL@emissiontarget?$DNsphere?50?50?50?580?58@
CONST	SEGMENT
??_C@_0CG@KLDPEHEL@emissiontarget?$DNsphere?50?50?50?580?58@ DB 'emission'
	DB	'target=sphere 0 0 0 80 80 -80', 00H		; `string'
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@
CONST	SEGMENT
??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@ DB 'inheritvelocity=.02', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDJJPCCG@id?$DNmaverick?$AA@
CONST	SEGMENT
??_C@_0M@CDJJPCCG@id?$DNmaverick?$AA@ DB 'id=maverick', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BNKLJNDA@emissiontarget?$DNsphere?50?50?50?5600?5@
CONST	SEGMENT
??_C@_0CJ@BNKLJNDA@emissiontarget?$DNsphere?50?50?50?5600?5@ DB 'emission'
	DB	'target=sphere 0 0 0 600 600 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'domain=sphere 0 0 0 10 10 -20', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BOKAPILO@emissiontarget?$DNsphere?50?50?50?5540?5@
CONST	SEGMENT
??_C@_0CJ@BOKAPILO@emissiontarget?$DNsphere?50?50?50?5540?5@ DB 'emission'
	DB	'target=sphere 0 0 0 540 540 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IGBOIEFF@emissionrate?$DN45?$AA@
CONST	SEGMENT
??_C@_0BA@IGBOIEFF@emissionrate?$DN45?$AA@ DB 'emissionrate=45', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@
CONST	SEGMENT
??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@ DB 'emission'
	DB	'target=sphere 0 0 0 300 300 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JDEADGPJ@emissiontarget?$DNsphere?50?50?50?5650?5@
CONST	SEGMENT
??_C@_0CJ@JDEADGPJ@emissiontarget?$DNsphere?50?50?50?5650?5@ DB 'emission'
	DB	'target=sphere 0 0 0 650 650 -650', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJGHPIOH@id?$DNm118?$AA@
CONST	SEGMENT
??_C@_07IJGHPIOH@id?$DNm118?$AA@ DB 'id=m118', 00H	; `string'
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ??_C@_0BJ@OAGMBNOM@emissionvelocity?5?$DN?580?520?$AA@
CONST	SEGMENT
??_C@_0BJ@OAGMBNOM@emissionvelocity?5?$DN?580?520?$AA@ DB 'emissionveloci'
	DB	'ty = 80 20', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NIJNLGPM@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@NIJNLGPM@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -600', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GLPAMNPG@emissionvelocity?5?$DN?5150?$AA@
CONST	SEGMENT
??_C@_0BH@GLPAMNPG@emissionvelocity?5?$DN?5150?$AA@ DB 'emissionvelocity '
	DB	'= 150', 00H					; `string'
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ??_C@_0CJ@OJIIIECF@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@OJIIIECF@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -350', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NDLIHBKA@emissiontarget?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CJ@NDLIHBKA@emissiontarget?$DNsphere?50?50?50?5100?5@ DB 'emission'
	DB	'target=sphere 0 0 0 100 100 -200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OBBBJMFK@emissiontarget?$DNsphere?50?50?50?5750?5@
CONST	SEGMENT
??_C@_0CJ@OBBBJMFK@emissiontarget?$DNsphere?50?50?50?5750?5@ DB 'emission'
	DB	'target=sphere 0 0 0 750 750 -750', 00H	; `string'
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
CONST	SEGMENT
??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@ DB 'soundid=112', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJHCHBHP@dieonground?$DN?$AA@
CONST	SEGMENT
??_C@_0N@IJHCHBHP@dieonground?$DN?$AA@ DB 'dieonground=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07IOLDGDKC@id?$DNmk84?$AA@
CONST	SEGMENT
??_C@_07IOLDGDKC@id?$DNmk84?$AA@ DB 'id=mk84', 00H	; `string'
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ??_C@_0CJ@GFFGMMFB@emissiontarget?$DNsphere?50?50?50?5450?5@
CONST	SEGMENT
??_C@_0CJ@GFFGMMFB@emissiontarget?$DNsphere?50?50?50?5450?5@ DB 'emission'
	DB	'target=sphere 0 0 0 450 450 -750', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
CONST	SEGMENT
??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@ DB 'emissionid=fireb'
	DB	'all-bomb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@
CONST	SEGMENT
??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@ DB 'emission'
	DB	'target=sphere 0 0 0 450 450 -450', 00H	; `string'
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@
CONST	SEGMENT
??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@ DB 'visibledistance=4500'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08LNMOOGAF@alpha?$DN?43?$AA@
CONST	SEGMENT
??_C@_08LNMOOGAF@alpha?$DN?43?$AA@ DB 'alpha=.3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIOJMECE@id?$DNmk82?$AA@
CONST	SEGMENT
??_C@_07NIOJMECE@id?$DNmk82?$AA@ DB 'id=mk82', 00H	; `string'
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ??_C@_0BJ@FMPCAODC@emissionvelocity?5?$DN?550?520?$AA@
CONST	SEGMENT
??_C@_0BJ@FMPCAODC@emissionvelocity?5?$DN?550?520?$AA@ DB 'emissionveloci'
	DB	'ty = 50 20', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EGLBOBOE@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@EGLBOBOE@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -825', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -150', 00H	; `string'
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@
CONST	SEGMENT
??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@ DB 'emissionvelocity'
	DB	' = 50 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EDFJMBGM@inheritvelocity?$DN?44?$AA@
CONST	SEGMENT
??_C@_0BD@EDFJMBGM@inheritvelocity?$DN?44?$AA@ DB 'inheritvelocity=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ??_C@_0L@CBJFDLOC@soundid?$DN47?$AA@
CONST	SEGMENT
??_C@_0L@CBJFDLOC@soundid?$DN47?$AA@ DB 'soundid=47', 00H ; `string'
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ??_C@_0N@GNMLDDOC@id?$DNlarge_agm?$AA@
CONST	SEGMENT
??_C@_0N@GNMLDDOC@id?$DNlarge_agm?$AA@ DB 'id=large_agm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PNJIPNLE@emissionvelocity?5?$DN?5125?510?$AA@
CONST	SEGMENT
??_C@_0BK@PNJIPNLE@emissionvelocity?5?$DN?5125?510?$AA@ DB 'emissionveloc'
	DB	'ity = 125 10', 00H				; `string'
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@
CONST	SEGMENT
??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@ DB 'soundid=113', 00H ; `string'
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ??_C@_0M@HMAGMDHJ@id?$DNDURANDAL?$AA@
CONST	SEGMENT
??_C@_0M@HMAGMDHJ@id?$DNDURANDAL?$AA@ DB 'id=DURANDAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
CONST	SEGMENT
??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 0 0 0', 00H		; `string'
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ??_C@_08FKBHHFLG@soundid?$DN?$AA@
CONST	SEGMENT
??_C@_08FKBHHFLG@soundid?$DN?$AA@ DB 'soundid=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMGHPMKC@id?$DN$DURANDAL?9OFF?$AA@
CONST	SEGMENT
??_C@_0BB@KMGHPMKC@id?$DN$DURANDAL?9OFF?$AA@ DB 'id=$DURANDAL-OFF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MANNLPLE@emissionid?$DNagm88?9impact?$AA@
CONST	SEGMENT
??_C@_0BI@MANNLPLE@emissionid?$DNagm88?9impact?$AA@ DB 'emissionid=agm88-'
	DB	'impact', 00H				; `string'
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ??_C@_0BF@LNPLJGJA@inheritvelocity?5?$DN?5?42?$AA@
CONST	SEGMENT
??_C@_0BF@LNPLJGJA@inheritvelocity?5?$DN?5?42?$AA@ DB 'inheritvelocity = '
	DB	'.2', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08GIDCOGNC@id?$DNagm88?$AA@
CONST	SEGMENT
??_C@_08GIDCOGNC@id?$DNagm88?$AA@ DB 'id=agm88', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CHFECFDN@emissionvelocity?$DN25?5?$AA@
CONST	SEGMENT
??_C@_0BF@CHFECFDN@emissionvelocity?$DN25?5?$AA@ DB 'emissionvelocity=25 '
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ??_C@_0BB@JEOOPOMG@emissionrate?$DN4?5?5?$AA@
CONST	SEGMENT
??_C@_0BB@JEOOPOMG@emissionrate?$DN4?5?5?$AA@ DB 'emissionrate=4  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
CONST	SEGMENT
??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@ DB 'emissionid=bu'
	DB	'rning_trail_maverick', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GNAKLHLJ@emissionvelocity?$DN25?$AA@
CONST	SEGMENT
??_C@_0BE@GNAKLHLJ@emissionvelocity?$DN25?$AA@ DB 'emissionvelocity=25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JDJMGHP@emissionrate?$DN3?5?5?$AA@
CONST	SEGMENT
??_C@_0BB@JDJMGHP@emissionrate?$DN3?5?5?$AA@ DB 'emissionrate=3  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@
CONST	SEGMENT
??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@ DB 'emissionid=flash-60', 00H ; `string'
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ??_C@_0CD@BMLFHELP@emissiondomain?$DNsphere?50?50?50?50?50?5@
CONST	SEGMENT
??_C@_0CD@BMLFHELP@emissiondomain?$DNsphere?50?50?50?50?50?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 0 0 -0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DAGIAIFM@id?$DNrocket_impact?$AA@
CONST	SEGMENT
??_C@_0BB@DAGIAIFM@id?$DNrocket_impact?$AA@ DB 'id=rocket_impact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GFDFDAPI@emissionrate?$DN1?5?50?$AA@
CONST	SEGMENT
??_C@_0BC@GFDFDAPI@emissionrate?$DN1?5?50?$AA@ DB 'emissionrate=1  0', 00H ; `string'
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ??_C@_0BJ@LLHMOCAM@emissionid?$DNrocket_impact?$AA@
CONST	SEGMENT
??_C@_0BJ@LLHMOCAM@emissionid?$DNrocket_impact?$AA@ DB 'emissionid=rocket'
	DB	'_impact', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EDOJNDOO@inheritvelocity?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_0BE@EDOJNDOO@inheritvelocity?5?$DN?51?$AA@ DB 'inheritvelocity = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@
CONST	SEGMENT
??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@ DB 'soundid=43', 00H ; `string'
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ??_C@_0BB@NMDNBHOL@id?$DN$ROCKET_BURST?$AA@
CONST	SEGMENT
??_C@_0BB@NMDNBHOL@id?$DN$ROCKET_BURST?$AA@ DB 'id=$ROCKET_BURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
CONST	SEGMENT
??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@ DB 'initialvelocity=10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EKIHLOI@visabledistance?$DN30000?$AA@
CONST	SEGMENT
??_C@_0BG@EKIHLOI@visabledistance?$DN30000?$AA@ DB 'visabledistance=30000'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ??_C@_0M@CKMJOPJM@gravity?$DN0?46?$AA@
CONST	SEGMENT
??_C@_0M@CKMJOPJM@gravity?$DN0?46?$AA@ DB 'gravity=0.6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NPCEFJNO@size?$FL1?$FN?5?$DN?5200?5?$AA@
CONST	SEGMENT
??_C@_0P@NPCEFJNO@size?$FL1?$FN?5?$DN?5200?5?$AA@ DB 'size[1] = 200 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
CONST	SEGMENT
??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@ DB 'size[.1] = 20', 00H ; `string'
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@
CONST	SEGMENT
??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@ DB 'size[0] =  1  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KJPMHGJF@color?5?$DN?5?46?5?45?5?44?$AA@
CONST	SEGMENT
??_C@_0BB@KJPMHGJF@color?5?$DN?5?46?5?45?5?44?$AA@ DB 'color = .6 .5 .4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBDLMBEE@alpha?$FL1?$FN?$DN?42?5?5?$AA@
CONST	SEGMENT
??_C@_0O@JBDLMBEE@alpha?$FL1?$FN?$DN?42?5?5?$AA@ DB 'alpha[1]=.2  ', 00H ; `string'
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@
CONST	SEGMENT
??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@ DB 'lifespan=10,1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLIFJGOA@id?$DNgun_dust?$AA@
CONST	SEGMENT
??_C@_0M@JLIFJGOA@id?$DNgun_dust?$AA@ DB 'id=gun_dust', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKHNPICB@id?$DNgun_sparks?$AA@
CONST	SEGMENT
??_C@_0O@MKHNPICB@id?$DNgun_sparks?$AA@ DB 'id=gun_sparks', 00H ; `string'
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ??_C@_0BC@CCJFEKCI@emissionrate?$DN2?5?50?$AA@
CONST	SEGMENT
??_C@_0BC@CCJFEKCI@emissionrate?$DN2?5?50?$AA@ DB 'emissionrate=2  0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MCFIACLE@emissionid?$DNsmoke?9gun?$AA@
CONST	SEGMENT
??_C@_0BF@MCFIACLE@emissionid?$DNsmoke?9gun?$AA@ DB 'emissionid=smoke-gun'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MMCCCLNN@emissiontarget?$DNsphere?50?50?50?5?42?5?4@
CONST	SEGMENT
??_C@_0CG@MMCCCLNN@emissiontarget?$DNsphere?50?50?50?5?42?5?4@ DB 'emissi'
	DB	'ontarget=sphere 0 0 0 .2 .2 -.2', 00H	; `string'
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ??_C@_0BD@MBIFHKL@inheritvelocity?$DN?43?$AA@
CONST	SEGMENT
??_C@_0BD@MBIFHKL@inheritvelocity?$DN?43?$AA@ DB 'inheritvelocity=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@
CONST	SEGMENT
??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@ DB 'color = 1, 0, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@ DB 'alpha = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ??_C@_0BD@MKNIEFKB@id?$DN$GUN_HIT_GROUND?$AA@
CONST	SEGMENT
??_C@_0BD@MKNIEFKB@id?$DN$GUN_HIT_GROUND?$AA@ DB 'id=$GUN_HIT_GROUND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CFJKPIKN@emissionid?$DNdust?9grey?$AA@
CONST	SEGMENT
??_C@_0BF@CFJKPIKN@emissionid?$DNdust?9grey?$AA@ DB 'emissionid=dust-grey'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@
CONST	SEGMENT
??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@ DB 'emissionvelocity=2'
	DB	'5 25', 00H					; `string'
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@
CONST	SEGMENT
??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@ DB 'emissionrate=1  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@
CONST	SEGMENT
??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@ DB 'emissionid=gun_spark'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DNNNPDAO@emitonerandomly?$DN1?$AA@
CONST	SEGMENT
??_C@_0BC@DNNNPDAO@emitonerandomly?$DN1?$AA@ DB 'emitonerandomly=1', 00H ; `string'
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@
CONST	SEGMENT
??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@ DB 'lifespan=.25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@ DB 'alpha = 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAACFALA@id?$DN$GUN_HIT_OBJECT?$AA@
CONST	SEGMENT
??_C@_0BD@CAACFALA@id?$DN$GUN_HIT_OBJECT?$AA@ DB 'id=$GUN_HIT_OBJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ??_C@_0CI@EPCCHEFC@emissiontarget?$DNsphere?50?50?5?910?520@
CONST	SEGMENT
??_C@_0CI@EPCCHEFC@emissiontarget?$DNsphere?50?50?5?910?520@ DB 'emission'
	DB	'target=sphere 0 0 -10 20 20 -50', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LHAOCJMH@emissiondomain?$DNsphere?50?50?5?910?50?5@
CONST	SEGMENT
??_C@_0CG@LHAOCJMH@emissiondomain?$DNsphere?50?50?5?910?50?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 -10 0 0 -30', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
CONST	SEGMENT
??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@ DB 'emissionmode=EMI'
	DB	'TONIMPACT', 00H				; `string'
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ??_C@_0BN@NJGOBMAE@emissionid?$DNcbu?9sub?9explosion?$AA@
CONST	SEGMENT
??_C@_0BN@NJGOBMAE@emissionid?$DNcbu?9sub?9explosion?$AA@ DB 'emissionid='
	DB	'cbu-sub-explosion', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MNEJLCHF@initialvelocity?$DN100?$AA@
CONST	SEGMENT
??_C@_0BE@MNEJLCHF@initialvelocity?$DN100?$AA@ DB 'initialvelocity=100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DBEKPKL@soundid?$DN114?5?5?$CD2?$CD?$AA@
CONST	SEGMENT
??_C@_0BB@DBEKPKL@soundid?$DN114?5?5?$CD2?$CD?$AA@ DB 'soundid=114  #2#', 00H ; `string'
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
CONST	SEGMENT
??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@ DB 'dieonground=1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@ DB 'gravity = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DLMPKIN@drag?5?$DN?5?401?$AA@
CONST	SEGMENT
??_C@_0L@DLMPKIN@drag?5?$DN?5?401?$AA@ DB 'drag = .01', 00H ; `string'
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ??_C@_08DCMNPAHH@size?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_08DCMNPAHH@size?5?$DN?51?$AA@ DB 'size = 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKHNHCMM@lifespan?$DN200?01?$AA@
CONST	SEGMENT
??_C@_0P@CKHNHCMM@lifespan?$DN200?01?$AA@ DB 'lifespan=200,1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HBGMMAHB@id?$DNcbu?9submunition?$AA@
CONST	SEGMENT
??_C@_0BD@HBGMMAHB@id?$DNcbu?9submunition?$AA@ DB 'id=cbu-submunition', 00H ; `string'
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ??_C@_0CG@HCNHCNKD@emissiontarget?$DNsphere?50?50?50?525?52@
CONST	SEGMENT
??_C@_0CG@HCNHCNKD@emissiontarget?$DNsphere?50?50?50?525?52@ DB 'emission'
	DB	'target=sphere 0 0 0 25 25 -25', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ENGLOHLM@emissionid?$DNcbu?9smoke?$AA@
CONST	SEGMENT
??_C@_0BF@ENGLOHLM@emissionid?$DNcbu?9smoke?$AA@ DB 'emissionid=cbu-smoke'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KKEODCGE@emissiontarget?$DNsphere?50?50?50?515?51@
CONST	SEGMENT
??_C@_0CG@KKEODCGE@emissiontarget?$DNsphere?50?50?50?515?51@ DB 'emission'
	DB	'target=sphere 0 0 0 15 15 -15', 00H		; `string'
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ??_C@_0CE@JKGCHAKG@emissiondomain?$DNsphere?50?50?50?55?55?5@
CONST	SEGMENT
??_C@_0CE@JKGCHAKG@emissiondomain?$DNsphere?50?50?50?55?55?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 5 5 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HHMLCPEK@emissionrate?$DN100?0?41?$AA@
CONST	SEGMENT
??_C@_0BE@HHMLCPEK@emissionrate?$DN100?0?41?$AA@ DB 'emissionrate=100,.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ILAIBNFH@emissionid?$DNcbu?9submunition?$AA@
CONST	SEGMENT
??_C@_0BL@ILAIBNFH@emissionid?$DNcbu?9submunition?$AA@ DB 'emissionid=cbu'
	DB	'-submunition', 00H				; `string'
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ??_C@_0N@MLOBPKFE@lifespan?$DN1?51?$AA@
CONST	SEGMENT
??_C@_0N@MLOBPKFE@lifespan?$DN1?51?$AA@ DB 'lifespan=1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
CONST	SEGMENT
??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@ DB 'alpha = .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPKOJNKP@id?$DN$CLUSTER_BOMB?$AA@
CONST	SEGMENT
??_C@_0BB@BPKOJNKP@id?$DN$CLUSTER_BOMB?$AA@ DB 'id=$CLUSTER_BOMB', 00H ; `string'
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ??_C@_0CH@LJHDEOHL@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@LJHDEOHL@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JMKOOIH@id?$DN$VERTICAL_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BD@JMKOOIH@id?$DN$VERTICAL_SMOKE?$AA@ DB 'id=$VERTICAL_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LNNKCNDM@emissionid?$DNmetal?9spark?$AA@
CONST	SEGMENT
??_C@_0BH@LNNKCNDM@emissionid?$DNmetal?9spark?$AA@ DB 'emissionid=metal-s'
	DB	'park', 00H					; `string'
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ??_C@_0BD@FKECPACN@inheritvelocity?$DN?45?$AA@
CONST	SEGMENT
??_C@_0BD@FKECPACN@inheritvelocity?$DN?45?$AA@ DB 'inheritvelocity=.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BGBMLHEA@size?5?$DN?550?$AA@
CONST	SEGMENT
??_C@_09BGBMLHEA@size?5?$DN?550?$AA@ DB 'size = 50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LDJLPAEP@id?$DN$VEHICLE_TAIL_SCRAPE?$AA@
CONST	SEGMENT
??_C@_0BI@LDJLPAEP@id?$DN$VEHICLE_TAIL_SCRAPE?$AA@ DB 'id=$VEHICLE_TAIL_S'
	DB	'CRAPE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BEECMIHG@id?$DN$VEHICLE_DIE_SMOKE2?$AA@
CONST	SEGMENT
??_C@_0BH@BEECMIHG@id?$DN$VEHICLE_DIE_SMOKE2?$AA@ DB 'id=$VEHICLE_DIE_SMO'
	DB	'KE2', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@
CONST	SEGMENT
??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@ DB 'emissionid=sm'
	DB	'oke-black-die', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@
CONST	SEGMENT
??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@ DB 'lifespan= 3 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ILEDGIJM@id?$DN$VEHICLE_DIE_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BG@ILEDGIJM@id?$DN$VEHICLE_DIE_SMOKE?$AA@ DB 'id=$VEHICLE_DIE_SMOK'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAMIBGDA@emissionrate?$DN7?$AA@
CONST	SEGMENT
??_C@_0P@LAMIBGDA@emissionrate?$DN7?$AA@ DB 'emissionrate=7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IPLMLIDI@initialvelocity?$DN?9100?5?$AA@
CONST	SEGMENT
??_C@_0BG@IPLMLIDI@initialvelocity?$DN?9100?5?$AA@ DB 'initialvelocity=-1'
	DB	'00 ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAEIMPNK@size?$FL1?$FN?5?$DN?570?5?5?5?$CD?$CD100?$CD?$CD?$AA@
CONST	SEGMENT
??_C@_0BH@JAEIMPNK@size?$FL1?$FN?5?$DN?570?5?5?5?$CD?$CD100?$CD?$CD?$AA@ DB 's'
	DB	'ize[1] = 70   ##100##', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HNFFALHI@size?$FL0?$FN?5?$DN?530?5?5?5?$CD?$CD60?$CD?$CD?$AA@
CONST	SEGMENT
??_C@_0BG@HNFFALHI@size?$FL0?$FN?5?$DN?530?5?5?5?$CD?$CD60?$CD?$CD?$AA@ DB 's'
	DB	'ize[0] = 30   ##60##', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FBDJCNMJ@id?$DN$VEHICLE_DIE_INTERMITTENT_FIR@
CONST	SEGMENT
??_C@_0CC@FBDJCNMJ@id?$DN$VEHICLE_DIE_INTERMITTENT_FIR@ DB 'id=$VEHICLE_D'
	DB	'IE_INTERMITTENT_FIRE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@
CONST	SEGMENT
??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@ DB 'emissionid=fir'
	DB	'eball-nsmoke', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DPMCBEAH@?$CD?$CDaddemitter?$AA@
CONST	SEGMENT
??_C@_0N@DPMCBEAH@?$CD?$CDaddemitter?$AA@ DB '##addemitter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NBOEIEFC@inheritvelocity?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_0BD@NBOEIEFC@inheritvelocity?5?$DN?5?$AA@ DB 'inheritvelocity = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KEIJJBFM@gravity?$DN0?$AA@
CONST	SEGMENT
??_C@_09KEIJJBFM@gravity?$DN0?$AA@ DB 'gravity=0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKOHNLFP@alpha?$FL1?$FN?$DN?417?5?$AA@
CONST	SEGMENT
??_C@_0O@JKOHNLFP@alpha?$FL1?$FN?$DN?417?5?$AA@ DB 'alpha[1]=.17 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GCCEAPM@id?$DN$VEHICLE_DIE_FIREBALL2?$AA@
CONST	SEGMENT
??_C@_0BK@GCCEAPM@id?$DN$VEHICLE_DIE_FIREBALL2?$AA@ DB 'id=$VEHICLE_DIE_F'
	DB	'IREBALL2', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPBGKNIE@emissionrate?$DN10?5?$AA@
CONST	SEGMENT
??_C@_0BB@LPBGKNIE@emissionrate?$DN10?5?$AA@ DB 'emissionrate=10 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMECAPAO@size?$FL1?$FN?5?$DN?540?5?5?$AA@
CONST	SEGMENT
??_C@_0P@EMECAPAO@size?$FL1?$FN?5?$DN?540?5?5?$AA@ DB 'size[1] = 40  ', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ??_C@_0O@DANEJEJI@size?$FL0?$FN?5?$DN?510?5?$AA@
CONST	SEGMENT
??_C@_0O@DANEJEJI@size?$FL0?$FN?5?$DN?510?5?$AA@ DB 'size[0] = 10 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDJJNGAN@alpha?$FL1?$FN?$DN?406?5?$AA@
CONST	SEGMENT
??_C@_0O@CDJJNGAN@alpha?$FL1?$FN?$DN?406?5?$AA@ DB 'alpha[1]=.06 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FMCCLCMF@id?$DN$VEHICLE_DIE_FIREBALL?$AA@
CONST	SEGMENT
??_C@_0BJ@FMCCLCMF@id?$DN$VEHICLE_DIE_FIREBALL?$AA@ DB 'id=$VEHICLE_DIE_F'
	DB	'IREBALL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@
CONST	SEGMENT
??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 60 60 -120', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@
CONST	SEGMENT
??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@ DB 'initialvelocity=-10'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@
CONST	SEGMENT
??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@ DB 'gravity= 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FGHJFBEN@id?$DN$VEHICLE_DIE_FIRE?$AA@
CONST	SEGMENT
??_C@_0BF@FGHJFBEN@id?$DN$VEHICLE_DIE_FIRE?$AA@ DB 'id=$VEHICLE_DIE_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LDJADCPG@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CG@LDJADCPG@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'target=sphere 0 0 0 10 10 -35', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
CONST	SEGMENT
??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@ DB 'gravity= -.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EPCLPLBJ@id?$DN$VEHICLE_DIEING?$AA@
CONST	SEGMENT
??_C@_0BD@EPCLPLBJ@id?$DN$VEHICLE_DIEING?$AA@ DB 'id=$VEHICLE_DIEING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FLFHIMFN@id?$DN$TRAIL_FIREBALL?$AA@
CONST	SEGMENT
??_C@_0BD@FLFHIMFN@id?$DN$TRAIL_FIREBALL?$AA@ DB 'id=$TRAIL_FIREBALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
CONST	SEGMENT
??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@ DB 'emission'
	DB	'target=sphere 0 0 0 40 40 -40', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PFCEKLMO@id?$DN$TRAIL_FIRE?$AA@
CONST	SEGMENT
??_C@_0P@PFCEKLMO@id?$DN$TRAIL_FIRE?$AA@ DB 'id=$TRAIL_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
CONST	SEGMENT
??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@ DB 'gravity=-.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OEEMMCOC@size?$FL1?$FN?5?$DN?55?$AA@
CONST	SEGMENT
??_C@_0M@OEEMMCOC@size?$FL1?$FN?5?$DN?55?$AA@ DB 'size[1] = 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCMEKDHO@alpha?$FL1?$FN?$DN?407?$AA@
CONST	SEGMENT
??_C@_0N@GCMEKDHO@alpha?$FL1?$FN?$DN?407?$AA@ DB 'alpha[1]=.07', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CAOPKIAH@lifespan?$DN5?55?$AA@
CONST	SEGMENT
??_C@_0N@CAOPKIAH@lifespan?$DN5?55?$AA@ DB 'lifespan=5 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BBOMJOJD@id?$DN$TRAIL_SMOKECLOUD?$AA@
CONST	SEGMENT
??_C@_0BF@BBOMJOJD@id?$DN$TRAIL_SMOKECLOUD?$AA@ DB 'id=$TRAIL_SMOKECLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCHPMPEG@color?$DN0?0?50?0?50?$AA@
CONST	SEGMENT
??_C@_0O@BCHPMPEG@color?$DN0?0?50?0?50?$AA@ DB 'color=0, 0, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CCGJCBMA@id?$DN$TRACER_FIRE?$AA@
CONST	SEGMENT
??_C@_0BA@CCGJCBMA@id?$DN$TRACER_FIRE?$AA@ DB 'id=$TRACER_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@
CONST	SEGMENT
??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@ DB 'alpha[1]=.02', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
CONST	SEGMENT
??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@ DB 'alpha[0]=.15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@
CONST	SEGMENT
??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@ DB 'lifespan=5 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IMDCMCBL@id?$DN$SMOKING_PART?$AA@
CONST	SEGMENT
??_C@_0BB@IMDCMCBL@id?$DN$SMOKING_PART?$AA@ DB 'id=$SMOKING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@
CONST	SEGMENT
??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@ DB 'emissionid=flash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
CONST	SEGMENT
??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@ DB 'soundid=28', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
CONST	SEGMENT
??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@ DB 'inheritvelocity=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CIACAEHK@alpha?5?$DN?5?43?$AA@
CONST	SEGMENT
??_C@_0L@CIACAEHK@alpha?5?$DN?5?43?$AA@ DB 'alpha = .3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DCNCCIDG@id?$DN$SPARKS?$AA@
CONST	SEGMENT
??_C@_0L@DCNCCIDG@id?$DN$SPARKS?$AA@ DB 'id=$SPARKS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NHAAPNBM@emissiontarget?$DNsphere?50?50?50?58?58?5@
CONST	SEGMENT
??_C@_0CD@NHAAPNBM@emissiontarget?$DNsphere?50?50?50?58?58?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 8 8 -8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GDFOKGMP@gravity?$DN?48?$AA@
CONST	SEGMENT
??_C@_0L@GDFOKGMP@gravity?$DN?48?$AA@ DB 'gravity=.8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MBEOEMPD@id?$DN$SMALL_HIT_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BI@MBEOEMPD@id?$DN$SMALL_HIT_EXPLOSION?$AA@ DB 'id=$SMALL_HIT_EXPL'
	DB	'OSION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BNEILPAD@emissionid?$DNfirework?9airburst?$AA@
CONST	SEGMENT
??_C@_0BN@BNEILPAD@emissionid?$DNfirework?9airburst?$AA@ DB 'emissionid=f'
	DB	'irework-airburst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@
CONST	SEGMENT
??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@ DB 'gravity=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OEAFAGHO@soundid?$DN1?$AA@
CONST	SEGMENT
??_C@_09OEAFAGHO@soundid?$DN1?$AA@ DB 'soundid=1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@
CONST	SEGMENT
??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@ DB 'size[1] = 25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
CONST	SEGMENT
??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@ DB 'alpha[1]=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
CONST	SEGMENT
??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@ DB 'alpha[0]=.7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGJGAOBB@lifespan?$DN1?54?$AA@
CONST	SEGMENT
??_C@_0N@LGJGAOBB@lifespan?$DN1?54?$AA@ DB 'lifespan=1 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IACFBGFD@id?$DN$SMALL_AIR_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BI@IACFBGFD@id?$DN$SMALL_AIR_EXPLOSION?$AA@ DB 'id=$SMALL_AIR_EXPL'
	DB	'OSION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KIPEGIMP@size?$FL1?$FN?5?$DN?5900?5?$AA@
CONST	SEGMENT
??_C@_0P@KIPEGIMP@size?$FL1?$FN?5?$DN?5900?5?$AA@ DB 'size[1] = 900 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GLGAOLEA@size?$FL0?$FN?5?$DN?510?5?5?$AA@
CONST	SEGMENT
??_C@_0P@GLGAOLEA@size?$FL0?$FN?5?$DN?510?5?5?$AA@ DB 'size[0] = 10  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DIKHDJLI@id?$DNshockring?9large?$AA@
CONST	SEGMENT
??_C@_0BD@DIKHDJLI@id?$DNshockring?9large?$AA@ DB 'id=shockring-large', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFIIHJFL@gravity?$DN0?41?$AA@
CONST	SEGMENT
??_C@_0M@GFIIHJFL@gravity?$DN0?41?$AA@ DB 'gravity=0.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKKEPPBO@size?$FL1?$FN?5?$DN?5600?5?$AA@
CONST	SEGMENT
??_C@_0P@CKKEPPBO@size?$FL1?$FN?5?$DN?5600?5?$AA@ DB 'size[1] = 600 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EGMAKKMI@size?$FL0?$FN?5?$DN?5?510?5?5?$AA@
CONST	SEGMENT
??_C@_0BA@EGMAKKMI@size?$FL0?$FN?5?$DN?5?510?5?5?$AA@ DB 'size[0] =  10  '
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DAHHDCKH@alpha?$FL1?$FN?$DN?405?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BA@DAHHDCKH@alpha?$FL1?$FN?$DN?405?5?5?5?$AA@ DB 'alpha[1]=.05   ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@
CONST	SEGMENT
??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@ DB 'lifespan=2 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DLGOHGKO@id?$DNshockring?9medium?$AA@
CONST	SEGMENT
??_C@_0BE@DLGOHGKO@id?$DNshockring?9medium?$AA@ DB 'id=shockring-medium', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
CONST	SEGMENT
??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@ DB 'emissionvelocity '
	DB	'= 300', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@
CONST	SEGMENT
??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@ DB 'gravity=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
CONST	SEGMENT
??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@ DB 'texture=shockring.dd'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FAGEKMHO@size?$FL1?$FN?5?$DN?5400?5?$AA@
CONST	SEGMENT
??_C@_0P@FAGEKMHO@size?$FL1?$FN?5?$DN?5400?5?$AA@ DB 'size[1] = 400 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDOKFEA@size?$FL0?$FN?5?$DN?5?55?5?5?$AA@
CONST	SEGMENT
??_C@_0P@BDOKFEA@size?$FL0?$FN?5?$DN?5?55?5?5?$AA@ DB 'size[0] =  5  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@
CONST	SEGMENT
??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@ DB 'color   = 1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJKDGOCH@alpha?$FL1?$FN?$DN?405?5?5?$AA@
CONST	SEGMENT
??_C@_0P@PJKDGOCH@alpha?$FL1?$FN?$DN?405?5?5?$AA@ DB 'alpha[1]=.05  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DHONCOBK@id?$DNshockring?$AA@
CONST	SEGMENT
??_C@_0N@DHONCOBK@id?$DNshockring?$AA@ DB 'id=shockring', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GBHEDIKD@emissiontarget?$DNsphere?50?50?50?510?55@
CONST	SEGMENT
??_C@_0CE@GBHEDIKD@emissiontarget?$DNsphere?50?50?50?510?55@ DB 'emission'
	DB	'target=sphere 0 0 0 10 5 -5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PAJIFLGH@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CE@PAJIFLGH@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'target=sphere 0 0 0 10 1 -1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHGHEOBE@id?$DN$SAM_LAUNCH?$AA@
CONST	SEGMENT
??_C@_0P@GHGHEOBE@id?$DN$SAM_LAUNCH?$AA@ DB 'id=$SAM_LAUNCH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HLDEAHKB@emissionvelocity?5?$DN?5100?530?$AA@
CONST	SEGMENT
??_C@_0BK@HLDEAHKB@emissionvelocity?5?$DN?5100?530?$AA@ DB 'emissionveloc'
	DB	'ity = 100 30', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FODKDPMO@alpha?$DN?48?$AA@
CONST	SEGMENT
??_C@_08FODKDPMO@alpha?$DN?48?$AA@ DB 'alpha=.8', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FPMDALC@$VORTEX_LARGE_WEAK?$AA@
CONST	SEGMENT
??_C@_0BD@FPMDALC@$VORTEX_LARGE_WEAK?$AA@ DB '$VORTEX_LARGE_WEAK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KGGMINGB@id?$DN$RISING_GROUNDHIT_EXPLOSION_D@
CONST	SEGMENT
??_C@_0CE@KGGMINGB@id?$DN$RISING_GROUNDHIT_EXPLOSION_D@ DB 'id=$RISING_GR'
	DB	'OUNDHIT_EXPLOSION_DEBR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HOMNKAAC@$VORTEX_LARGE_MEDIUM?$AA@
CONST	SEGMENT
??_C@_0BF@HOMNKAAC@$VORTEX_LARGE_MEDIUM?$AA@ DB '$VORTEX_LARGE_MEDIUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKILIDLA@soundid?$DN267?$AA@
CONST	SEGMENT
??_C@_0M@PKILIDLA@soundid?$DN267?$AA@ DB 'soundid=267', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBPBAPEK@$VORTEX_LARGE_STRONG?$AA@
CONST	SEGMENT
??_C@_0BF@KBPBAPEK@$VORTEX_LARGE_STRONG?$AA@ DB '$VORTEX_LARGE_STRONG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@
CONST	SEGMENT
??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@ DB 'color= 1, 1, 1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPFGNHEC@$VORTEX_WEAK?$AA@
CONST	SEGMENT
??_C@_0N@EPFGNHEC@$VORTEX_WEAK?$AA@ DB '$VORTEX_WEAK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FMNPLEI@id?$DN$MISSILE_LAUNCH?$AA@
CONST	SEGMENT
??_C@_0BD@FMNPLEI@id?$DN$MISSILE_LAUNCH?$AA@ DB 'id=$MISSILE_LAUNCH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FEBPHMMO@$VORTEX_MEDIUM?$AA@
CONST	SEGMENT
??_C@_0P@FEBPHMMO@$VORTEX_MEDIUM?$AA@ DB '$VORTEX_MEDIUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MADCMGLJ@emissionvelocity?5?$DN?510?$AA@
CONST	SEGMENT
??_C@_0BG@MADCMGLJ@emissionvelocity?5?$DN?510?$AA@ DB 'emissionvelocity ='
	DB	' 10', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILCDNDIG@$VORTEX_STRONG?$AA@
CONST	SEGMENT
??_C@_0P@ILCDNDIG@$VORTEX_STRONG?$AA@ DB '$VORTEX_STRONG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LHGLIMAG@emissionid?$DNburning_trail_mis?$AA@
CONST	SEGMENT
??_C@_0BN@LHGLIMAG@emissionid?$DNburning_trail_mis?$AA@ DB 'emissionid=bu'
	DB	'rning_trail_mis', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DINBNJKF@$NUKE?$AA@
CONST	SEGMENT
??_C@_05DINBNJKF@$NUKE?$AA@ DB '$NUKE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DEOLNCLL@emissionid?$DNfirework?9mis?$AA@
CONST	SEGMENT
??_C@_0BI@DEOLNCLL@emissionid?$DNfirework?9mis?$AA@ DB 'emissionid=firewo'
	DB	'rk-mis', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BHNLJEIM@$GUN_SMOKE?$AA@
CONST	SEGMENT
??_C@_0L@BHNLJEIM@$GUN_SMOKE?$AA@ DB '$GUN_SMOKE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
CONST	SEGMENT
??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 1 1 -1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LADKHJPM@$AC_BURNING_6?$AA@
CONST	SEGMENT
??_C@_0O@LADKHJPM@$AC_BURNING_6?$AA@ DB '$AC_BURNING_6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LEOEHEME@emissionrate?$DN3?5?$AA@
CONST	SEGMENT
??_C@_0BA@LEOEHEME@emissionrate?$DN3?5?$AA@ DB 'emissionrate=3 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JLBHCKDP@$AC_BURNING_5?$AA@
CONST	SEGMENT
??_C@_0O@JLBHCKDP@$AC_BURNING_5?$AA@ DB '$AC_BURNING_5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ONNCBAJM@emissionid?$DNfireball?9mis?$AA@
CONST	SEGMENT
??_C@_0BI@ONNCBAJM@emissionid?$DNfireball?9mis?$AA@ DB 'emissionid=fireba'
	DB	'll-mis', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICAMBLHO@$AC_BURNING_4?$AA@
CONST	SEGMENT
??_C@_0O@ICAMBLHO@$AC_BURNING_4?$AA@ DB '$AC_BURNING_4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HFJCNHA@inheritvelocity?5?$DN?425?$AA@
CONST	SEGMENT
??_C@_0BF@HFJCNHA@inheritvelocity?5?$DN?425?$AA@ DB 'inheritvelocity =.25'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNENINLJ@$AC_BURNING_3?$AA@
CONST	SEGMENT
??_C@_0O@MNENINLJ@$AC_BURNING_3?$AA@ DB '$AC_BURNING_3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NGPANIIC@gravity?$DN?45?$AA@
CONST	SEGMENT
??_C@_0L@NGPANIIC@gravity?$DN?45?$AA@ DB 'gravity=.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NEFGLMPI@$AC_BURNING_2?$AA@
CONST	SEGMENT
??_C@_0O@NEFGLMPI@$AC_BURNING_2?$AA@ DB '$AC_BURNING_2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEKHADOL@size?$FL0?$FN?5?$DN?5?450?$AA@
CONST	SEGMENT
??_C@_0O@HEKHADOL@size?$FL0?$FN?5?$DN?5?450?$AA@ DB 'size[0] = .50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PPHLOPDL@$AC_BURNING_1?$AA@
CONST	SEGMENT
??_C@_0O@PPHLOPDL@$AC_BURNING_1?$AA@ DB '$AC_BURNING_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@ DB 'alpha[1]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BHEEALFD@$AC_EARLY_BURNING?$AA@
CONST	SEGMENT
??_C@_0BC@BHEEALFD@$AC_EARLY_BURNING?$AA@ DB '$AC_EARLY_BURNING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JGGLEOFL@id?$DN$MISSILE_BURST?$AA@
CONST	SEGMENT
??_C@_0BC@JGGLEOFL@id?$DN$MISSILE_BURST?$AA@ DB 'id=$MISSILE_BURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LHIGJAB@$VEHICLE_DIEING?$AA@
CONST	SEGMENT
??_C@_0BA@LHIGJAB@$VEHICLE_DIEING?$AA@ DB '$VEHICLE_DIEING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
CONST	SEGMENT
??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@ DB 'emissionrate=2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BNFGAEGO@$GUN_HIT_WATER?$AA@
CONST	SEGMENT
??_C@_0P@BNFGAEGO@$GUN_HIT_WATER?$AA@ DB '$GUN_HIT_WATER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
CONST	SEGMENT
??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@ DB 'color=.7 .7 .7 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GEFBMCKI@$GUN_HIT_OBJECT?$AA@
CONST	SEGMENT
??_C@_0BA@GEFBMCKI@$GUN_HIT_OBJECT?$AA@ DB '$GUN_HIT_OBJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JIFDMPGC@lifespan?$DN4?55?$AA@
CONST	SEGMENT
??_C@_0N@JIFDMPGC@lifespan?$DN4?55?$AA@ DB 'lifespan=4 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IOILNHLJ@$GUN_HIT_GROUND?$AA@
CONST	SEGMENT
??_C@_0BA@IOILNHLJ@$GUN_HIT_GROUND?$AA@ DB '$GUN_HIT_GROUND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EAHPLMJN@id?$DN$LONG_HANGING_SMOKE2?5?$AA@
CONST	SEGMENT
??_C@_0BJ@EAHPLMJN@id?$DN$LONG_HANGING_SMOKE2?5?$AA@ DB 'id=$LONG_HANGING'
	DB	'_SMOKE2 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JKPKOBK@?9?9?9?5kludge?5?9?9?9?$AA@
CONST	SEGMENT
??_C@_0P@JKPKOBK@?9?9?9?5kludge?5?9?9?9?$AA@ DB '--- kludge ---', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@ DB 'emission'
	DB	'target=sphere 0 0 0 100 100 -500', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CGBICGMH@$WATER_WAKE_SMALL?$AA@
CONST	SEGMENT
??_C@_0BC@CGBICGMH@$WATER_WAKE_SMALL?$AA@ DB '$WATER_WAKE_SMALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MJKNMKND@emissionid?$DNfireball?9airburst?$AA@
CONST	SEGMENT
??_C@_0BN@MJKNMKND@emissionid?$DNfireball?9airburst?$AA@ DB 'emissionid=f'
	DB	'ireball-airburst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IMGDAOCN@$SPARK_TRACER?$AA@
CONST	SEGMENT
??_C@_0O@IMGDAOCN@$SPARK_TRACER?$AA@ DB '$SPARK_TRACER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DFJBCOME@gravity?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0M@DFJBCOME@gravity?$DN?5?41?$AA@ DB 'gravity= .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OBFBPPFP@$INCENDIARY_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BG@OBFBPPFP@$INCENDIARY_EXPLOSION?$AA@ DB '$INCENDIARY_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
CONST	SEGMENT
??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@ DB 'size[1] = 50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JANAIDAF@$VEHICLE_BURNING?$AA@
CONST	SEGMENT
??_C@_0BB@JANAIDAF@$VEHICLE_BURNING?$AA@ DB '$VEHICLE_BURNING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@
CONST	SEGMENT
??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@ DB 'lifespan=2,1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FOCMEGOJ@$CAMP_HIT_EXPLOSION_DEBRISTRAIL?$AA@
CONST	SEGMENT
??_C@_0CA@FOCMEGOJ@$CAMP_HIT_EXPLOSION_DEBRISTRAIL?$AA@ DB '$CAMP_HIT_EXP'
	DB	'LOSION_DEBRISTRAIL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HFMOMDEA@id?$DN$LONG_HANGING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BH@HFMOMDEA@id?$DN$LONG_HANGING_SMOKE?$AA@ DB 'id=$LONG_HANGING_SM'
	DB	'OKE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LODFOJP@$ROCKET_BURST?$AA@
CONST	SEGMENT
??_C@_0O@LODFOJP@$ROCKET_BURST?$AA@ DB '$ROCKET_BURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KKBIOKGK@emissionid?$DNsmoke_light?$AA@
CONST	SEGMENT
??_C@_0BH@KKBIOKGK@emissionid?$DNsmoke_light?$AA@ DB 'emissionid=smoke_li'
	DB	'ght', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HBBHMOCF@$HIT_EXPLOSION_NOSMOKE?$AA@
CONST	SEGMENT
??_C@_0BH@HBBHMOCF@$HIT_EXPLOSION_NOSMOKE?$AA@ DB '$HIT_EXPLOSION_NOSMOKE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@
CONST	SEGMENT
??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@ DB 'initialvelocity= 10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BIMDOBB@$BIG_DUST?$AA@
CONST	SEGMENT
??_C@_09BIMDOBB@$BIG_DUST?$AA@ DB '$BIG_DUST', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@
CONST	SEGMENT
??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@ DB 'size[.5] = 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEEJPFIG@$BIG_SMOKE?$AA@
CONST	SEGMENT
??_C@_0L@KEEJPFIG@$BIG_SMOKE?$AA@ DB '$BIG_SMOKE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@
CONST	SEGMENT
??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@ DB 'alpha[1.0]=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEPMBEIK@$CRATER4?$AA@
CONST	SEGMENT
??_C@_08KEPMBEIK@$CRATER4?$AA@ DB '$CRATER4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@ DB 'alpha[0.1]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OLLNICEN@$CRATER3?$AA@
CONST	SEGMENT
??_C@_08OLLNICEN@$CRATER3?$AA@ DB '$CRATER3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@ DB 'alpha[0.0]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCKGLDAM@$CRATER2?$AA@
CONST	SEGMENT
??_C@_08PCKGLDAM@$CRATER2?$AA@ DB '$CRATER2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@
CONST	SEGMENT
??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@ DB 'lifespan=3 2 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GKBEHEGB@$DURANDAL?$AA@
CONST	SEGMENT
??_C@_09GKBEHEGB@$DURANDAL?$AA@ DB '$DURANDAL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PMLMOFPL@id?$DN$LIGHT_CLOUD?$AA@
CONST	SEGMENT
??_C@_0BA@PMLMOFPL@id?$DN$LIGHT_CLOUD?$AA@ DB 'id=$LIGHT_CLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMPIOGGN@$MESSAGE_TIMER?$AA@
CONST	SEGMENT
??_C@_0P@PMPIOGGN@$MESSAGE_TIMER?$AA@ DB '$MESSAGE_TIMER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FHEMAIGA@emissionvelocity?5?$DN?5150?525?$AA@
CONST	SEGMENT
??_C@_0BK@FHEMAIGA@emissionvelocity?5?$DN?5150?525?$AA@ DB 'emissionveloc'
	DB	'ity = 150 25', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OPAAFBCL@$FEATURE_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BD@OPAAFBCL@$FEATURE_EXPLOSION?$AA@ DB '$FEATURE_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KPFFDJOH@$GROUND_FLASH?$AA@
CONST	SEGMENT
??_C@_0O@KPFFDJOH@$GROUND_FLASH?$AA@ DB '$GROUND_FLASH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HANJFIBA@emissiondomain?$DNsphere?50?50?50?525?52@
CONST	SEGMENT
??_C@_0CG@HANJFIBA@emissiondomain?$DNsphere?50?50?50?525?52@ DB 'emission'
	DB	'domain=sphere 0 0 0 25 25 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PPGLMIDN@$STEAM_CLOUD?$AA@
CONST	SEGMENT
??_C@_0N@PPGLMIDN@$STEAM_CLOUD?$AA@ DB '$STEAM_CLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LGCGLIND@emissiontarget?$DNsphere?50?50?50?575?57@
CONST	SEGMENT
??_C@_0CG@LGCGLIND@emissiontarget?$DNsphere?50?50?50?575?57@ DB 'emission'
	DB	'target=sphere 0 0 0 75 75 -80', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CEOOMEA@$STEAMING_FEATURE?$AA@
CONST	SEGMENT
??_C@_0BC@CEOOMEA@$STEAMING_FEATURE?$AA@ DB '$STEAMING_FEATURE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
CONST	SEGMENT
??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@ DB 'emissionid=fireball'
	DB	'_wp', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OHHMLBBB@$SMOKING_FEATURE?$AA@
CONST	SEGMENT
??_C@_0BB@OHHMLBBB@$SMOKING_FEATURE?$AA@ DB '$SMOKING_FEATURE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GCDCFMMJ@emissiontarget?$DNsphere?50?50?50?5225?5@
CONST	SEGMENT
??_C@_0CJ@GCDCFMMJ@emissiontarget?$DNsphere?50?50?50?5225?5@ DB 'emission'
	DB	'target=sphere 0 0 0 225 225 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIHANENL@$CLUSTER_BOMB?$AA@
CONST	SEGMENT
??_C@_0O@MIHANENL@$CLUSTER_BOMB?$AA@ DB '$CLUSTER_BOMB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LDJIOIJ@id?$DN$INCENDIARY_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BJ@LDJIOIJ@id?$DN$INCENDIARY_EXPLOSION?$AA@ DB 'id=$INCENDIARY_EXP'
	DB	'LOSION', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCGFHKGE@$TIMED_PERSISTANT?$AA@
CONST	SEGMENT
??_C@_0BC@FCGFHKGE@$TIMED_PERSISTANT?$AA@ DB '$TIMED_PERSISTANT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LCJKCFLC@id?$DN$HIT_EXPLOSION_DEBRISTRAIL?$AA@
CONST	SEGMENT
??_C@_0BO@LCJKCFLC@id?$DN$HIT_EXPLOSION_DEBRISTRAIL?$AA@ DB 'id=$HIT_EXPL'
	DB	'OSION_DEBRISTRAIL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOMHHAE@$LINKED_PERSISTANT?$AA@
CONST	SEGMENT
??_C@_0BD@KOMHHAE@$LINKED_PERSISTANT?$AA@ DB '$LINKED_PERSISTANT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OPEDEGMO@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@OPEDEGMO@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EEAINKAO@$WATER_FIREBALL?$AA@
CONST	SEGMENT
??_C@_0BA@EEAINKAO@$WATER_FIREBALL?$AA@ DB '$WATER_FIREBALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PEOAIHLO@id?$DN$HIT_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BC@PEOAIHLO@id?$DN$HIT_EXPLOSION?$AA@ DB 'id=$HIT_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DAEACMEC@$BLUE_CLOUD?$AA@
CONST	SEGMENT
??_C@_0M@DAEACMEC@$BLUE_CLOUD?$AA@ DB '$BLUE_CLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IDCGFJI@emissiontarget?$DNsphere?50?50?50?5450?5@
CONST	SEGMENT
??_C@_0CI@IDCGFJI@emissiontarget?$DNsphere?50?50?50?5450?5@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 450 450 300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FCNBMGHB@$FIRE7?$AA@
CONST	SEGMENT
??_C@_06FCNBMGHB@$FIRE7?$AA@ DB '$FIRE7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PDEJEECL@alpha?$DN1?5?5?$AA@
CONST	SEGMENT
??_C@_09PDEJEECL@alpha?$DN1?5?5?$AA@ DB 'alpha=1  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GGEMIMEL@$VEHICLE_DUST?$AA@
CONST	SEGMENT
??_C@_0O@GGEMIMEL@$VEHICLE_DUST?$AA@ DB '$VEHICLE_DUST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MFKPMELA@id?$DN$HIT_EXPLOSION_NOSMOKE?5?5?$AA@
CONST	SEGMENT
??_C@_0BM@MFKPMELA@id?$DN$HIT_EXPLOSION_NOSMOKE?5?5?$AA@ DB 'id=$HIT_EXPL'
	DB	'OSION_NOSMOKE  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOMEIHOA@$TRAILSMOKE?$AA@
CONST	SEGMENT
??_C@_0M@IOMEIHOA@$TRAILSMOKE?$AA@ DB '$TRAILSMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PMABBLCN@emissiontarget?$DNsphere?50?50?50?51?51?5@
CONST	SEGMENT
??_C@_0CE@PMABBLCN@emissiontarget?$DNsphere?50?50?50?51?51?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 1 1 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKFHKJDD@$FIRESMOKE?$AA@
CONST	SEGMENT
??_C@_0L@FKFHKJDD@$FIRESMOKE?$AA@ DB '$FIRESMOKE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HIILHAJD@id?$DN$GROUND_FLASH?$AA@
CONST	SEGMENT
??_C@_0BB@HIILHAJD@id?$DN$GROUND_FLASH?$AA@ DB 'id=$GROUND_FLASH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELMKPHDA@$FIRE6?$AA@
CONST	SEGMENT
??_C@_06ELMKPHDA@$FIRE6?$AA@ DB '$FIRE6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@
CONST	SEGMENT
??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@ DB 'texture=Tracer.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GAOHKEPD@$FIRE5?$AA@
CONST	SEGMENT
??_C@_06GAOHKEPD@$FIRE5?$AA@ DB '$FIRE5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@ DB 'size[0] = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFGEBACB@$CAT_STEAM?$AA@
CONST	SEGMENT
??_C@_0L@MFGEBACB@$CAT_STEAM?$AA@ DB '$CAT_STEAM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NONFMPNI@color?$DN1?0?50?0?50?$AA@
CONST	SEGMENT
??_C@_0O@NONFMPNI@color?$DN1?0?50?0?50?$AA@ DB 'color=1, 0, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNCHPLGF@$CAT_RANDOM_STEAM?$AA@
CONST	SEGMENT
??_C@_0BC@FNCHPLGF@$CAT_RANDOM_STEAM?$AA@ DB '$CAT_RANDOM_STEAM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GMFJCJGA@id?$DN$GUN_TRACER?$AA@
CONST	SEGMENT
??_C@_0P@GMFJCJGA@id?$DN$GUN_TRACER?$AA@ DB 'id=$GUN_TRACER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BLIFMAPH@$SHIP_BURNING_FIRE?$AA@
CONST	SEGMENT
??_C@_0BD@BLIFMAPH@$SHIP_BURNING_FIRE?$AA@ DB '$SHIP_BURNING_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JHPBBIEF@emissiontarget?$DNsphere?50?50?50?510?55@
CONST	SEGMENT
??_C@_0CF@JHPBBIEF@emissiontarget?$DNsphere?50?50?50?510?55@ DB 'emission'
	DB	'target=sphere 0 0 0 10 5 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EILGBPH@$FIRE1?$AA@
CONST	SEGMENT
??_C@_06EILGBPH@$FIRE1?$AA@ DB '$FIRE1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MGAFKFD@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CF@MGAFKFD@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 10 1 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OJBLEPF@$FIREBALL?$AA@
CONST	SEGMENT
??_C@_09OJBLEPF@$FIREBALL?$AA@ DB '$FIREBALL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
CONST	SEGMENT
??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 0 0 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EEGOMELM@$FIRE_COOL?$AA@
CONST	SEGMENT
??_C@_0L@EEGOMELM@$FIRE_COOL?$AA@ DB '$FIRE_COOL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@
CONST	SEGMENT
??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@ DB 'emissionid=fir'
	DB	'eball-muzzle', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLDPOJPJ@$FIRE_MED?$AA@
CONST	SEGMENT
??_C@_09BLDPOJPJ@$FIRE_MED?$AA@ DB '$FIRE_MED', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
CONST	SEGMENT
??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@ DB 'visibledistance=5000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLLEIOEM@$FIRE_HOT?$AA@
CONST	SEGMENT
??_C@_09GLLEIOEM@$FIRE_HOT?$AA@ DB '$FIRE_HOT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
CONST	SEGMENT
??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@ DB 'gravity=-.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PMFDBDAM@$SHAPED_FIRE_DEBRIS?$AA@
CONST	SEGMENT
??_C@_0BE@PMFDBDAM@$SHAPED_FIRE_DEBRIS?$AA@ DB '$SHAPED_FIRE_DEBRIS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
CONST	SEGMENT
??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@ DB 'alpha[0]=.8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NEMJPHID@$GROUND_DUSTCLOUD?$AA@
CONST	SEGMENT
??_C@_0BC@NEMJPHID@$GROUND_DUSTCLOUD?$AA@ DB '$GROUND_DUSTCLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLKAKLOM@id?$DN$GUN_SMOKE?$AA@
CONST	SEGMENT
??_C@_0O@MLKAKLOM@id?$DN$GUN_SMOKE?$AA@ DB 'id=$GUN_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IGFDDP@$FIRE_EXPAND_NOSMOKE?$AA@
CONST	SEGMENT
??_C@_0BF@IGFDDP@$FIRE_EXPAND_NOSMOKE?$AA@ DB '$FIRE_EXPAND_NOSMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MBDBIDEG@emissionvelocity?5?$DN?5150?5?$AA@
CONST	SEGMENT
??_C@_0BI@MBDBIDEG@emissionvelocity?5?$DN?5150?5?$AA@ DB 'emissionvelocit'
	DB	'y = 150 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHLBFGCP@$FIRE_EXPAND?$AA@
CONST	SEGMENT
??_C@_0N@FHLBFGCP@$FIRE_EXPAND?$AA@ DB '$FIRE_EXPAND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CBCCDJGD@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CH@CBCCDJGD@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'target=sphere 0 0 0 10 10 -150', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HEMFHKOO@$DEBRISTRAIL_DUST?$AA@
CONST	SEGMENT
??_C@_0BC@HEMFHKOO@$DEBRISTRAIL_DUST?$AA@ DB '$DEBRISTRAIL_DUST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
CONST	SEGMENT
??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@ DB 'emissionrate=3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKNHNBBG@$GROUND_PENETRATION?$AA@
CONST	SEGMENT
??_C@_0BE@FKNHNBBG@$GROUND_PENETRATION?$AA@ DB '$GROUND_PENETRATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
CONST	SEGMENT
??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@ DB 'emissionvelocit'
	DB	'y = 100 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KPDIGJCB@$AIR_PENETRATION?$AA@
CONST	SEGMENT
??_C@_0BB@KPDIGJCB@$AIR_PENETRATION?$AA@ DB '$AIR_PENETRATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 50 50 -200', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLIHPLLM@$FLAME?$AA@
CONST	SEGMENT
??_C@_06MLIHPLLM@$FLAME?$AA@ DB '$FLAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@
CONST	SEGMENT
??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@ DB 'emissionid=bu'
	DB	'rning_trail_durandal', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDLBFKBD@$AAA_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0P@MDLBFKBD@$AAA_EXPLOSION?$AA@ DB '$AAA_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NBMKEJOG@id?$DN$GROUND_PENETRATION?$AA@
CONST	SEGMENT
??_C@_0BH@NBMKEJOG@id?$DN$GROUND_PENETRATION?$AA@ DB 'id=$GROUND_PENETRAT'
	DB	'ION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGOPDEKG@$LONG_HANGING_SMOKE2?$AA@
CONST	SEGMENT
??_C@_0BF@CGOPDEKG@$LONG_HANGING_SMOKE2?$AA@ DB '$LONG_HANGING_SMOKE2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -350', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FKCLKDOC@$FAST_FADING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BD@FKCLKDOC@$FAST_FADING_SMOKE?$AA@ DB '$FAST_FADING_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@ DB 'emission'
	DB	'domain=sphere 0 0 0 20 20 -60', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LDJPHPGH@$SHOCK_RING_SMALL?$AA@
CONST	SEGMENT
??_C@_0BC@LDJPHPGH@$SHOCK_RING_SMALL?$AA@ DB '$SHOCK_RING_SMALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GLFGBCCB@$HIT_EXPLOSION_NOGLOW?$AA@
CONST	SEGMENT
??_C@_0BG@GLFGBCCB@$HIT_EXPLOSION_NOGLOW?$AA@ DB '$HIT_EXPLOSION_NOGLOW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJEMGAJE@soundid?$DN56?$AA@
CONST	SEGMENT
??_C@_0L@DJEMGAJE@soundid?$DN56?$AA@ DB 'soundid=56', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EMKCJDNK@$AIR_EXPLOSION_NOGLOW?$AA@
CONST	SEGMENT
??_C@_0BG@EMKCJDNK@$AIR_EXPLOSION_NOGLOW?$AA@ DB '$AIR_EXPLOSION_NOGLOW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMJDMFII@id?$DN$GROUNDBURST?$AA@
CONST	SEGMENT
??_C@_0BA@IMJDMFII@id?$DN$GROUNDBURST?$AA@ DB 'id=$GROUNDBURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LLCCCNLK@$BURNING_PART?$AA@
CONST	SEGMENT
??_C@_0O@LLCCCNLK@$BURNING_PART?$AA@ DB '$BURNING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ??_C@_0CJ@NEPKIPNF@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@NEPKIPNF@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BPDJLEJM@$SPARKS_NO_DEBRIS?$AA@
CONST	SEGMENT
??_C@_0BC@BPDJLEJM@$SPARKS_NO_DEBRIS?$AA@ DB '$SPARKS_NO_DEBRIS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'domain=sphere 0 0 0 50 50 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LNCCIKDA@$FLARE_GFX?$AA@
CONST	SEGMENT
??_C@_0L@LNCCIKDA@$FLARE_GFX?$AA@ DB '$FLARE_GFX', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -400', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEJMGEJC@$CAT_LAUNCH?$AA@
CONST	SEGMENT
??_C@_0M@IEJMGEJC@$CAT_LAUNCH?$AA@ DB '$CAT_LAUNCH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -750', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PKGHLOBN@$AC_DEBRIS?$AA@
CONST	SEGMENT
??_C@_0L@PKGHLOBN@$AC_DEBRIS?$AA@ DB '$AC_DEBRIS', 00H	; `string'
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@
CONST	SEGMENT
??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@ DB 'emission'
	DB	'domain=sphere 0 0 0 25 25 -5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CBDHDDAH@$GUN_TRACER?$AA@
CONST	SEGMENT
??_C@_0M@CBDHDDAH@$GUN_TRACER?$AA@ DB '$GUN_TRACER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GKLPOBCN@emissiontarget?$DNsphere?50?50?5?95?5450@
CONST	SEGMENT
??_C@_0CK@GKLPOBCN@emissiontarget?$DNsphere?50?50?5?95?5450@ DB 'emission'
	DB	'target=sphere 0 0 -5 450 450 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAIKAGBH@$WATERTRAIL?$AA@
CONST	SEGMENT
??_C@_0M@JAIKAGBH@$WATERTRAIL?$AA@ DB '$WATERTRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CJEICDMN@emissiondomain?$DNsphere?50?50?5?95?50?50@
CONST	SEGMENT
??_C@_0CD@CJEICDMN@emissiondomain?$DNsphere?50?50?5?95?50?50@ DB 'emissio'
	DB	'ndomain=sphere 0 0 -5 0 0 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BDNHADJG@$WATER_CLOUD?$AA@
CONST	SEGMENT
??_C@_0N@BDNHADJG@$WATER_CLOUD?$AA@ DB '$WATER_CLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
CONST	SEGMENT
??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@ DB 'soundid=46', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EPEFGGK@$LANDING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0P@EPEFGGK@$LANDING_SMOKE?$AA@ DB '$LANDING_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
CONST	SEGMENT
??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@ DB 'visibledistance=4000'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CJBPDGKO@$FIRE_NOSMOKE?$AA@
CONST	SEGMENT
??_C@_0O@CJBPDGKO@$FIRE_NOSMOKE?$AA@ DB '$FIRE_NOSMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@
CONST	SEGMENT
??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@ DB 'alpha=1 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JHHLIBMM@$FIRETRAIL?$AA@
CONST	SEGMENT
??_C@_0L@JHHLIBMM@$FIRETRAIL?$AA@ DB '$FIRETRAIL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
CONST	SEGMENT
??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@ DB 'inheritvelocity=.09', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KNKGFLCK@$RISING_GROUNDHIT_EXPLOSION_DEBR@
CONST	SEGMENT
??_C@_0CB@KNKGFLCK@$RISING_GROUNDHIT_EXPLOSION_DEBR@ DB '$RISING_GROUNDHI'
	DB	'T_EXPLOSION_DEBR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BOPPJKF@id?$DN$GROUND_STRIKE_NOFIRE?$AA@
CONST	SEGMENT
??_C@_0BJ@BOPPJKF@id?$DN$GROUND_STRIKE_NOFIRE?$AA@ DB 'id=$GROUND_STRIKE_'
	DB	'NOFIRE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HECFDDBO@$VEHICLE_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BD@HECFDDBO@$VEHICLE_EXPLOSION?$AA@ DB '$VEHICLE_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ??_C@_0CG@MAANALKL@emissiontarget?$DNsphere?50?50?50?575?57@
CONST	SEGMENT
??_C@_0CG@MAANALKL@emissiontarget?$DNsphere?50?50?50?575?57@ DB 'emission'
	DB	'target=sphere 0 0 0 75 75 -75', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CANBGKOJ@$DEBRISTRAIL?$AA@
CONST	SEGMENT
??_C@_0N@CANBGKOJ@$DEBRISTRAIL?$AA@ DB '$DEBRISTRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
CONST	SEGMENT
??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@ DB 'emissionid=spark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDAJPJMF@$SMOKETRAIL?$AA@
CONST	SEGMENT
??_C@_0M@KDAJPJMF@$SMOKETRAIL?$AA@ DB '$SMOKETRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CELBCFKB@id?$DN$GROUND_STRIKE?$AA@
CONST	SEGMENT
??_C@_0BC@CELBCFKB@id?$DN$GROUND_STRIKE?$AA@ DB 'id=$GROUND_STRIKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PONDFLLA@$LONG_HANGING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BE@PONDFLLA@$LONG_HANGING_SMOKE?$AA@ DB '$LONG_HANGING_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ??_C@_0BA@KHCMDJFE@id?$DN$GROUND_GLOW?$AA@
CONST	SEGMENT
??_C@_0BA@KHCMDJFE@id?$DN$GROUND_GLOW?$AA@ DB 'id=$GROUND_GLOW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OLIHIIHD@$GROUND_STRIKE_NOFIRE?$AA@
CONST	SEGMENT
??_C@_0BG@OLIHIIHD@$GROUND_STRIKE_NOFIRE?$AA@ DB '$GROUND_STRIKE_NOFIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
CONST	SEGMENT
??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@ DB 'emissionveloci'
	DB	'ty = 100 25', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPAIFPGJ@$GROUNDBURST?$AA@
CONST	SEGMENT
??_C@_0N@FPAIFPGJ@$GROUNDBURST?$AA@ DB '$GROUNDBURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KOJDHOAJ@emissiontarget?$DNsphere?50?50?50?5275?5@
CONST	SEGMENT
??_C@_0CK@KOJDHOAJ@emissiontarget?$DNsphere?50?50?50?5275?5@ DB 'emission'
	DB	'target=sphere 0 0 0 275 275 -1150', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCPICGHD@$AIRBURST?$AA@
CONST	SEGMENT
??_C@_09HCPICGHD@$AIRBURST?$AA@ DB '$AIRBURST', 00H	; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 150 150 -200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BADNCOKI@$NAPALM?$AA@
CONST	SEGMENT
??_C@_07BADNCOKI@$NAPALM?$AA@ DB '$NAPALM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IOBLKNA@emissiondomain?$DNsphere?50?50?50?525?52@
CONST	SEGMENT
??_C@_0CG@IOBLKNA@emissiondomain?$DNsphere?50?50?50?525?52@ DB 'emissiond'
	DB	'omain=sphere 0 0 0 25 25 -25', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CIEAMLJP@$DUSTCLOUD?$AA@
CONST	SEGMENT
??_C@_0L@CIEAMLJP@$DUSTCLOUD?$AA@ DB '$DUSTCLOUD', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OMPPJJON@emissiontarget?$DNsphere?50?50?50?5450?5@
CONST	SEGMENT
??_C@_0CJ@OMPPJJON@emissiontarget?$DNsphere?50?50?50?5450?5@ DB 'emission'
	DB	'target=sphere 0 0 0 450 450 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BHNOJPJD@$ARTILLERY_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BF@BHNOJPJD@$ARTILLERY_EXPLOSION?$AA@ DB '$ARTILLERY_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NHKHNBBK@id?$DN$GROUND_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BF@NHKHNBBK@id?$DN$GROUND_EXPLOSION?$AA@ DB 'id=$GROUND_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BAJMGNIB@$SPARKS?$AA@
CONST	SEGMENT
??_C@_07BAJMGNIB@$SPARKS?$AA@ DB '$SPARKS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EDOLNOCG@emissiontarget?$DNsphere?50?50?50?580?58@
CONST	SEGMENT
??_C@_0CH@EDOLNOCG@emissiontarget?$DNsphere?50?50?50?580?58@ DB 'emission'
	DB	'target=sphere 0 0 0 80 80 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KDFPOMNC@$HIT_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0P@KDFPOMNC@$HIT_EXPLOSION?$AA@ DB '$HIT_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IGCMJGFD@id?$DN$FIRESMOKE?$AA@
CONST	SEGMENT
??_C@_0O@IGCMJGFD@id?$DN$FIRESMOKE?$AA@ DB 'id=$FIRESMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LLBANLKI@$BILLOWING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BB@LLBANLKI@$BILLOWING_SMOKE?$AA@ DB '$BILLOWING_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CJIAKJJM@emissiontarget?$DNsphere?50?50?50?540?54@
CONST	SEGMENT
??_C@_0CH@CJIAKJJM@emissiontarget?$DNsphere?50?50?50?540?54@ DB 'emission'
	DB	'target=sphere 0 0 0 40 40 -400', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LIEKLBKJ@$TRAIL_FIRE?$AA@
CONST	SEGMENT
??_C@_0M@LIEKLBKJ@$TRAIL_FIRE?$AA@ DB '$TRAIL_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NCIFHANK@lifespan?$DN8?55?$AA@
CONST	SEGMENT
??_C@_0N@NCIFHANK@lifespan?$DN8?55?$AA@ DB 'lifespan=8 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENJJHMJP@$VERTICAL_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BA@ENJJHMJP@$VERTICAL_SMOKE?$AA@ DB '$VERTICAL_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IHNEPFAK@id?$DN$FLAME?$AA@
CONST	SEGMENT
??_C@_09IHNEPFAK@id?$DN$FLAME?$AA@ DB 'id=$FLAME', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JFMJLKCD@$WATER_STRIKE?$AA@
CONST	SEGMENT
??_C@_0O@JFMJLKCD@$WATER_STRIKE?$AA@ DB '$WATER_STRIKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 20 20 100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HDAOEOMN@$GROUND_STRIKE?$AA@
CONST	SEGMENT
??_C@_0P@HDAOEOMN@$GROUND_STRIKE?$AA@ DB '$GROUND_STRIKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@
CONST	SEGMENT
??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@ DB 'gravity= .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BJJOCLM@$FIRE?$AA@
CONST	SEGMENT
??_C@_05BJJOCLM@$FIRE?$AA@ DB '$FIRE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
CONST	SEGMENT
??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@ DB 'size[1] = 80', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PBPCLLCB@$TRACER_FIRE?$AA@
CONST	SEGMENT
??_C@_0N@PBPCLLCB@$TRACER_FIRE?$AA@ DB '$TRACER_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
CONST	SEGMENT
??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@ DB 'alpha[1]=.05 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IJBBCBME@$DIST_INFANTRY?$AA@
CONST	SEGMENT
??_C@_0P@IJBBCBME@$DIST_INFANTRY?$AA@ DB '$DIST_INFANTRY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OBNHMAPM@id?$DN$FLAMING_PART?$AA@
CONST	SEGMENT
??_C@_0BB@OBNHMAPM@id?$DN$FLAMING_PART?$AA@ DB 'id=$FLAMING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MIOPLGGI@$DIST_ARMOR?$AA@
CONST	SEGMENT
??_C@_0M@MIOPLGGI@$DIST_ARMOR?$AA@ DB '$DIST_ARMOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@ DB 'emission'
	DB	'target=sphere 0 0 0 100 100 -350', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IDJMABAJ@$MOVING_BSP?$AA@
CONST	SEGMENT
??_C@_0M@IDJMABAJ@$MOVING_BSP?$AA@ DB '$MOVING_BSP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@
CONST	SEGMENT
??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@ DB 'alpha[1]=0.1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KKLDEHHG@$GROUND_EXPLOSION_NO_CRATER?$AA@
CONST	SEGMENT
??_C@_0BM@KKLDEHHG@$GROUND_EXPLOSION_NO_CRATER?$AA@ DB '$GROUND_EXPLOSION'
	DB	'_NO_CRATER', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ELAALOKM@id?$DN$FIRETRAIL?$AA@
CONST	SEGMENT
??_C@_0O@ELAALOKM@id?$DN$FIRETRAIL?$AA@ DB 'id=$FIRETRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CAEEEBDJ@$RAND_CRATER?$AA@
CONST	SEGMENT
??_C@_0N@CAEEEBDJ@$RAND_CRATER?$AA@ DB '$RAND_CRATER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
CONST	SEGMENT
??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@ DB 'initialvelocity=5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IOFDNHFB@$WATER_WAKE_LARGE?$AA@
CONST	SEGMENT
??_C@_0BC@IOFDNHFB@$WATER_WAKE_LARGE?$AA@ DB '$WATER_WAKE_LARGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
CONST	SEGMENT
??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@ DB 'color=1 0 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KIGPJNOO@$DIST_AALAUNCHES?$AA@
CONST	SEGMENT
??_C@_0BB@KIGPJNOO@$DIST_AALAUNCHES?$AA@ DB '$DIST_AALAUNCHES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
CONST	SEGMENT
??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@ DB 'alpha[0]=.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JEIFIDEK@$DIST_SAMLAUNCHES?$AA@
CONST	SEGMENT
??_C@_0BC@JEIFIDEK@$DIST_SAMLAUNCHES?$AA@ DB '$DIST_SAMLAUNCHES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGIGCBGC@id?$DN$FIRE_HOT?$AA@
CONST	SEGMENT
??_C@_0N@MGIGCBGC@id?$DN$FIRE_HOT?$AA@ DB 'id=$FIRE_HOT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KMAOCHEK@$DIST_GROUNDBURSTS?$AA@
CONST	SEGMENT
??_C@_0BD@KMAOCHEK@$DIST_GROUNDBURSTS?$AA@ DB '$DIST_GROUNDBURSTS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@
CONST	SEGMENT
??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@ DB 'emissionvelocit'
	DB	'y = 20 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OFIMOCKA@$DIST_AIRBURSTS?$AA@
CONST	SEGMENT
??_C@_0BA@OFIMOCKA@$DIST_AIRBURSTS?$AA@ DB '$DIST_AIRBURSTS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LFLEDPLF@emissiontarget?$DNsphere?50?50?50?580?58@
CONST	SEGMENT
??_C@_0CI@LFLEDPLF@emissiontarget?$DNsphere?50?50?50?580?58@ DB 'emission'
	DB	'target=sphere 0 0 0 80 80 -1100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MDPLNMK@$TIMER?$AA@
CONST	SEGMENT
??_C@_06MDPLNMK@$TIMER?$AA@ DB '$TIMER', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IAFKDPAA@color?$DN0?51?51?5?$AA@
CONST	SEGMENT
??_C@_0N@IAFKDPAA@color?$DN0?51?51?5?$AA@ DB 'color=0 1 1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HHIKPMDO@$WATER_WAKE_MEDIUM?$AA@
CONST	SEGMENT
??_C@_0BD@HHIKPMDO@$WATER_WAKE_MEDIUM?$AA@ DB '$WATER_WAKE_MEDIUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMEHIOPA@alpha?$FL1?$FN?$DN?409?$AA@
CONST	SEGMENT
??_C@_0N@PMEHIOPA@alpha?$FL1?$FN?$DN?409?$AA@ DB 'alpha[1]=.09', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EJLCHAON@$CHAFF?$AA@
CONST	SEGMENT
??_C@_06EJLCHAON@$CHAFF?$AA@ DB '$CHAFF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCFLMPMM@lifespan?$DN6?04?$AA@
CONST	SEGMENT
??_C@_0N@CCFLMPMM@lifespan?$DN6?04?$AA@ DB 'lifespan=6,4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EJALBEFN@$DUST1?$AA@
CONST	SEGMENT
??_C@_06EJALBEFN@$DUST1?$AA@ DB '$DUST1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGANEGNH@id?$DN$FIRE_MED?$AA@
CONST	SEGMENT
??_C@_0N@LGANEGNH@id?$DN$FIRE_MED?$AA@ DB 'id=$FIRE_MED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBJOGJFA@$MISSILE_LAUNCH?$AA@
CONST	SEGMENT
??_C@_0BA@EBJOGJFA@$MISSILE_LAUNCH?$AA@ DB '$MISSILE_LAUNCH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@
CONST	SEGMENT
??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@ DB 'emissionvelocity '
	DB	'= 100', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKAJFEHD@$SAM_LAUNCH?$AA@
CONST	SEGMENT
??_C@_0M@CKAJFEHD@$SAM_LAUNCH?$AA@ DB '$SAM_LAUNCH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BDMECEEP@emissiontarget?$DNsphere?50?50?50?5300?5@
CONST	SEGMENT
??_C@_0CK@BDMECEEP@emissiontarget?$DNsphere?50?50?50?5300?5@ DB 'emission'
	DB	'target=sphere 0 0 0 300 300 -1100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JNBBHBJO@$WATER_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BB@JNBBHBJO@$WATER_EXPLOSION?$AA@ DB '$WATER_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
CONST	SEGMENT
??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@ DB 'emission'
	DB	'target=sphere 0 0 0 80 80 -120', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IMOMFIOL@$FEATURE_CHAIN_REACTION?$AA@
CONST	SEGMENT
??_C@_0BI@IMOMFIOL@$FEATURE_CHAIN_REACTION?$AA@ DB '$FEATURE_CHAIN_REACTI'
	DB	'ON', 00H					; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ??_C@_07NGIJIABG@drag?$DN?44?$AA@
CONST	SEGMENT
??_C@_07NGIJIABG@drag?$DN?44?$AA@ DB 'drag=.4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HCJFKFMG@$GUNFIRE?$AA@
CONST	SEGMENT
??_C@_08HCJFKFMG@$GUNFIRE?$AA@ DB '$GUNFIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHCBAOIP@alpha?$DN?49?$AA@
CONST	SEGMENT
??_C@_08EHCBAOIP@alpha?$DN?49?$AA@ DB 'alpha=.9', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGDMIIG@$AIR_SMOKECLOUD2?$AA@
CONST	SEGMENT
??_C@_0BB@KGDMIIG@$AIR_SMOKECLOUD2?$AA@ DB '$AIR_SMOKECLOUD2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMLEKKEF@id?$DN$FIRE5?$AA@
CONST	SEGMENT
??_C@_09CMLEKKEF@id?$DN$FIRE5?$AA@ DB 'id=$FIRE5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PBANNOMA@$GUNSMOKE?$AA@
CONST	SEGMENT
??_C@_09PBANNOMA@$GUNSMOKE?$AA@ DB '$GUNSMOKE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@
CONST	SEGMENT
??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@ DB 'emission'
	DB	'target=sphere 0 0 0 400 400 -1100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HNEALOIJ@$AIR_DUSTCLOUD?$AA@
CONST	SEGMENT
??_C@_0P@HNEALOIJ@$AIR_DUSTCLOUD?$AA@ DB '$AIR_DUSTCLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'domain=sphere 0 0 0 10 10 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GMLDLKPI@$WATERCLOUD?$AA@
CONST	SEGMENT
??_C@_0M@GMLDLKPI@$WATERCLOUD?$AA@ DB '$WATERCLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@ DB 'emission'
	DB	'target=sphere 0 0 0 20 20 -20', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MAGGMNBJ@$EJECT2?$AA@
CONST	SEGMENT
??_C@_07MAGGMNBJ@$EJECT2?$AA@ DB '$EJECT2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
CONST	SEGMENT
??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@ DB 'emissionrate=60', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OLELJONK@$EJECT1?$AA@
CONST	SEGMENT
??_C@_07OLELJONK@$EJECT1?$AA@ DB '$EJECT1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
CONST	SEGMENT
??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@ DB 'inheritvelocity=.25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCDELGHC@$AIR_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0P@OCDELGHC@$AIR_EXPLOSION?$AA@ DB '$AIR_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ??_C@_07BJOHGHI@alpha?$DN1?$AA@
CONST	SEGMENT
??_C@_07BJOHGHI@alpha?$DN1?$AA@ DB 'alpha=1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PANAOCHF@$CLUSTER_BURST?$AA@
CONST	SEGMENT
??_C@_0P@PANAOCHF@$CLUSTER_BURST?$AA@ DB '$CLUSTER_BURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFKPJLAE@id?$DN$FIRE4?$AA@
CONST	SEGMENT
??_C@_09DFKPJLAE@id?$DN$FIRE4?$AA@ DB 'id=$FIRE4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBNECFDH@$MISSILE_BURST?$AA@
CONST	SEGMENT
??_C@_0P@MBNECFDH@$MISSILE_BURST?$AA@ DB '$MISSILE_BURST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PFDALCIF@emissiontarget?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CH@PFDALCIF@emissiontarget?$DNsphere?50?50?50?520?52@ DB 'emission'
	DB	'target=sphere 0 0 0 20 20 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPAEBOEF@$TRAIL_FIREBALL?$AA@
CONST	SEGMENT
??_C@_0BA@BPAEBOEF@$TRAIL_FIREBALL?$AA@ DB '$TRAIL_FIREBALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DNKAEFDE@emissiontarget?$DNsphere?50?50?50?530?53@
CONST	SEGMENT
??_C@_0CH@DNKAEFDE@emissiontarget?$DNsphere?50?50?50?530?53@ DB 'emission'
	DB	'target=sphere 0 0 0 30 30 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@INPGLAPB@$TRAIL_SMOKECLOUD?$AA@
CONST	SEGMENT
??_C@_0BC@INPGLAPB@$TRAIL_SMOKECLOUD?$AA@ DB '$TRAIL_SMOKECLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ??_C@_0L@JLPHPABM@gravity?$DN?92?$AA@
CONST	SEGMENT
??_C@_0L@JLPHPABM@gravity?$DN?92?$AA@ DB 'gravity=-2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELLNPPHI@$GROUND_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BC@ELLNPPHI@$GROUND_EXPLOSION?$AA@ DB '$GROUND_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
CONST	SEGMENT
??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@ DB 'size[0] = 20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DGAJIJII@$FLAMING_PART?$AA@
CONST	SEGMENT
??_C@_0O@DGAJIJII@$FLAMING_PART?$AA@ DB '$FLAMING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POMJLDMH@alpha?$FL?475?$FN?5?$DN?5?415?$AA@
CONST	SEGMENT
??_C@_0BB@POMJLDMH@alpha?$FL?475?$FN?5?$DN?5?415?$AA@ DB 'alpha[.75] = .1'
	DB	'5', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLOMILGP@$SMOKING_PART?$AA@
CONST	SEGMENT
??_C@_0O@FLOMILGP@$SMOKING_PART?$AA@ DB '$SMOKING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
CONST	SEGMENT
??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@ DB 'lifespan=4 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KLLBPAAO@$AIR_SMOKECLOUD?$AA@
CONST	SEGMENT
??_C@_0BA@KLLBPAAO@$AIR_SMOKECLOUD?$AA@ DB '$AIR_SMOKECLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ??_C@_09HKOOANMD@id?$DN$FIRE3?$AA@
CONST	SEGMENT
??_C@_09HKOOANMD@id?$DN$FIRE3?$AA@ DB 'id=$FIRE3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HMHIKDHH@$SMALL_HIT_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BF@HMHIKDHH@$SMALL_HIT_EXPLOSION?$AA@ DB '$SMALL_HIT_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@ DB 'emission'
	DB	'domain=sphere 0 0 0 100 100 -200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOMIFAD@$AC_AIR_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BC@BOMIFAD@$AC_AIR_EXPLOSION?$AA@ DB '$AC_AIR_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
CONST	SEGMENT
??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@ DB 'emissionrate=100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BLOKMLF@$NONE?$AA@
CONST	SEGMENT
??_C@_05BLOKMLF@$NONE?$AA@ DB '$NONE', 00H		; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
CONST	SEGMENT
??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@ DB 'emissionid=fire'
	DB	'ball-small', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GNJILJBE@gravity?$DN?5?9?43?$AA@
CONST	SEGMENT
??_C@_0N@GNJILJBE@gravity?$DN?5?9?43?$AA@ DB 'gravity= -.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@
CONST	SEGMENT
??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@ DB 'size[1] =  40', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ??_C@_0O@JDHBNMAE@size?$FL0?$FN?5?$DN?5?510?$AA@
CONST	SEGMENT
??_C@_0O@JDHBNMAE@size?$FL0?$FN?5?$DN?5?510?$AA@ DB 'size[0] =  10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@
CONST	SEGMENT
??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@ DB 'lifespan=5 3', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
CONST	SEGMENT
??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@ DB 'alpha[1]=.2 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GOKLGAMC@light?$FL1?40?5?$FN?$DN0?5?50?5?50?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BH@GOKLGAMC@light?$FL1?40?5?$FN?$DN0?5?50?5?50?5?5?5?$AA@ DB 'ligh'
	DB	't[1.0 ]=0  0  0   ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GKPBPABK@light?$FL0?475?$FN?$DN1?5?51?5?51?5?$AA@
CONST	SEGMENT
??_C@_0BF@GKPBPABK@light?$FL0?475?$FN?$DN1?5?51?5?51?5?$AA@ DB 'light[0.7'
	DB	'5]=1  1  1 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09GDPFDMIC@id?$DN$FIRE2?$AA@
CONST	SEGMENT
??_C@_09GDPFDMIC@id?$DN$FIRE2?$AA@ DB 'id=$FIRE2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
CONST	SEGMENT
??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@ DB 'initialvelocity=-5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
CONST	SEGMENT
??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@ DB 'lifespan=1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EINIGPEB@id?$DN$FIRE1?$AA@
CONST	SEGMENT
??_C@_09EINIGPEB@id?$DN$FIRE1?$AA@ DB 'id=$FIRE1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NKNINEEN@initialvelocity?$DN10?550?$AA@
CONST	SEGMENT
??_C@_0BG@NKNINEEN@initialvelocity?$DN10?550?$AA@ DB 'initialvelocity=10 '
	DB	'50', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LLACFKBM@gravity?$DN?5?9?415?$AA@
CONST	SEGMENT
??_C@_0O@LLACFKBM@gravity?$DN?5?9?415?$AA@ DB 'gravity= -.15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@
CONST	SEGMENT
??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@ DB 'lifespan=7 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
CONST	SEGMENT
??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@ DB 'alpha[1]=.15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DLIHAKJN@id?$DN$FIRE?$AA@
CONST	SEGMENT
??_C@_08DLIHAKJN@id?$DN$FIRE?$AA@ DB 'id=$FIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
CONST	SEGMENT
??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@ DB 'emissionid=fireba'
	DB	'll-air', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGJNJBIA@gravity?$DN?9?415?$AA@
CONST	SEGMENT
??_C@_0N@MGJNJBIA@gravity?$DN?9?415?$AA@ DB 'gravity=-.15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NIPOOLFL@initialvelocity?$DN?55?$AA@
CONST	SEGMENT
??_C@_0BD@NIPOOLFL@initialvelocity?$DN?55?$AA@ DB 'initialvelocity= 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLFFMKNL@lifespan?$DN10?$AA@
CONST	SEGMENT
??_C@_0M@JLFFMKNL@lifespan?$DN10?$AA@ DB 'lifespan=10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MPJCLBFH@drag?$DN?45?$AA@
CONST	SEGMENT
??_C@_07MPJCLBFH@drag?$DN?45?$AA@ DB 'drag=.5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
CONST	SEGMENT
??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@ DB 'size[0] = 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
CONST	SEGMENT
??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@ DB 'color = 0, 0, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFHFPADP@alpha?5?$DN?5?46?$AA@
CONST	SEGMENT
??_C@_0L@FFHFPADP@alpha?5?$DN?5?46?$AA@ DB 'alpha = .6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POMBHPNK@id?$DN$FIRE_NOSMOKE?$AA@
CONST	SEGMENT
??_C@_0BB@POMBHPNK@id?$DN$FIRE_NOSMOKE?$AA@ DB 'id=$FIRE_NOSMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
CONST	SEGMENT
??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@ DB 'emissionveloci'
	DB	'ty = 50 25', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GBAJKOAH@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CK@GBAJKOAH@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -1100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@
CONST	SEGMENT
??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@ DB 'emission'
	DB	'target=sphere 0 0 0 350 350 -600', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
CONST	SEGMENT
??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@ DB 'emissionrate=20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
CONST	SEGMENT
??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@ DB 'emissionveloci'
	DB	'ty = 25 10', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@
CONST	SEGMENT
??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@ DB 'emission'
	DB	'target=sphere 0 0 0 400 400 -500', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
CONST	SEGMENT
??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@ DB 'emissionid=sh'
	DB	'ockring-medium', 00H			; `string'
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
CONST	SEGMENT
??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@ DB 'lifespan=5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KLIGICB@soundid?$DN44?$AA@
CONST	SEGMENT
??_C@_0L@KLIGICB@soundid?$DN44?$AA@ DB 'soundid=44', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@
CONST	SEGMENT
??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@ DB 'inheritvelocity=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HMIMJBLA@id?$DN$FEATURE_CHAIN_REACTION?$AA@
CONST	SEGMENT
??_C@_0BL@HMIMJBLA@id?$DN$FEATURE_CHAIN_REACTION?$AA@ DB 'id=$FEATURE_CHA'
	DB	'IN_REACTION', 00H				; `string'
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@
CONST	SEGMENT
??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@ DB 'emissi'
	DB	'ontarget=sphere 0 0 0 .5 .5 -.5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@ DB 'size[1] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
CONST	SEGMENT
??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@ DB 'size[0] = .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DEJOAEPI@alpha?$FL1?$FN?$DN?401?$AA@
CONST	SEGMENT
??_C@_0N@DEJOAEPI@alpha?$FL1?$FN?$DN?401?$AA@ DB 'alpha[1]=.01', 00H ; `string'
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
CONST	SEGMENT
??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@ DB 'alpha[0]=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBJHNIIK@lifespan?$DN1?5?$AA@
CONST	SEGMENT
??_C@_0M@NBJHNIIK@lifespan?$DN1?5?$AA@ DB 'lifespan=1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NOKOEKKI@id?$DN$DIST_INFANTRY?$AA@
CONST	SEGMENT
??_C@_0BC@NOKOEKKI@id?$DN$DIST_INFANTRY?$AA@ DB 'id=$DIST_INFANTRY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
CONST	SEGMENT
??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@ DB 'emissionveloc'
	DB	'ity = 100 50', 00H				; `string'
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@
CONST	SEGMENT
??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@ DB 'emission'
	DB	'target=sphere 0 0 0 500 500 -500', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@
CONST	SEGMENT
??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@ DB 'visibledistance=500', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
CONST	SEGMENT
??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@ DB 'lifespan=4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PCODNBA@id?$DN$DIST_GROUNDBURSTS?$AA@
CONST	SEGMENT
??_C@_0BG@PCODNBA@id?$DN$DIST_GROUNDBURSTS?$AA@ DB 'id=$DIST_GROUNDBURSTS'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ??_C@_0P@IFIBKMAP@id?$DN$DIST_ARMOR?$AA@
CONST	SEGMENT
??_C@_0P@IFIBKMAP@id?$DN$DIST_ARMOR?$AA@ DB 'id=$DIST_ARMOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@
CONST	SEGMENT
??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 3 3 -3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KBNPHALI@id?$DN$DIST_AIRBURSTS?$AA@
CONST	SEGMENT
??_C@_0BD@KBNPHALI@id?$DN$DIST_AIRBURSTS?$AA@ DB 'id=$DIST_AIRBURSTS', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ??_C@_0CH@GGJKHFMB@emissiontarget?$DNsphere?50?50?50?570?57@
CONST	SEGMENT
??_C@_0CH@GGJKHFMB@emissiontarget?$DNsphere?50?50?50?570?57@ DB 'emission'
	DB	'target=sphere 0 0 0 70 70 -70 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
CONST	SEGMENT
??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@ DB 'emissionid=smoke-gr'
	DB	'ey', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NGNKADPG@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@NGNKADPG@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -50 ', 00H	; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ??_C@_0BA@IDFBJCNA@emissionrate?$DN35?$AA@
CONST	SEGMENT
??_C@_0BA@IDFBJCNA@emissionrate?$DN35?$AA@ DB 'emissionrate=35', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NJLOPFGB@trailid?5?$DN?523?$AA@
CONST	SEGMENT
??_C@_0N@NJLOPFGB@trailid?5?$DN?523?$AA@ DB 'trailid = 23', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
CONST	SEGMENT
??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@ DB 'size[1] = 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJOAOLP@lifespan?$DN3?05?$AA@
CONST	SEGMENT
??_C@_0N@MJOAOLP@lifespan?$DN3?05?$AA@ DB 'lifespan=3,5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PDEKPAAI@id?$DN$DEBRISTRAIL?$AA@
CONST	SEGMENT
??_C@_0BA@PDEKPAAI@id?$DN$DEBRISTRAIL?$AA@ DB 'id=$DEBRISTRAIL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
CONST	SEGMENT
??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@ DB 'emission'
	DB	'target=sphere 0 0 0 200 200 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -60', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
CONST	SEGMENT
??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@ DB 'emissionid=bu'
	DB	'rning_trail_bomb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
CONST	SEGMENT
??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@ DB 'emissionveloci'
	DB	'ty = 50 10', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@ DB 'emission'
	DB	'target=sphere 0 0 0 100 100 -100', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NJELLOMM@visibledistance?$DN30000?5?5?$AA@
CONST	SEGMENT
??_C@_0BI@NJELLOMM@visibledistance?$DN30000?5?5?$AA@ DB 'visibledistance='
	DB	'30000  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
CONST	SEGMENT
??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@ DB 'lifespan=6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
CONST	SEGMENT
??_C@_08NJKCCDAB@alpha?$DN?47?$AA@ DB 'alpha=.7', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
CONST	SEGMENT
??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@ DB 'inheritvelocity=.01', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EPCFCMCG@id?$DN$CAMP_HIT_EXPLOSION_DEBRISTRA@
CONST	SEGMENT
??_C@_0CD@EPCFCMCG@id?$DN$CAMP_HIT_EXPLOSION_DEBRISTRA@ DB 'id=$CAMP_HIT_'
	DB	'EXPLOSION_DEBRISTRAIL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -150', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
CONST	SEGMENT
??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@ DB 'emissionid=fireba'
	DB	'll-med', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GGNPEICK@initialvelocity?$DN4?510?$AA@
CONST	SEGMENT
??_C@_0BF@GGNPEICK@initialvelocity?$DN4?510?$AA@ DB 'initialvelocity=4 10'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
CONST	SEGMENT
??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@ DB 'gravity= .3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@
CONST	SEGMENT
??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@ DB 'lifespan=10 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
CONST	SEGMENT
??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@ DB 'alpha[0]=.6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HNCOFJKI@id?$DN$CAMP_FIRE?$AA@
CONST	SEGMENT
??_C@_0O@HNCOFJKI@id?$DN$CAMP_FIRE?$AA@ DB 'id=$CAMP_FIRE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KFPBDCCM@emissiontarget?$DNsphere?50?50?50?570?57@
CONST	SEGMENT
??_C@_0CH@KFPBDCCM@emissiontarget?$DNsphere?50?50?50?570?57@ DB 'emission'
	DB	'target=sphere 0 0 0 70 70 -350', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
CONST	SEGMENT
??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@ DB 'emissionid='
	DB	'ground-explosion-smoke', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 50 50 -250', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
CONST	SEGMENT
??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@ DB 'emissionid=fi'
	DB	'reball-nosmoke', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
CONST	SEGMENT
??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@ DB 'initialvelocity=10 5'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
CONST	SEGMENT
??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@ DB 'texture=fire1.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
CONST	SEGMENT
??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@ DB 'gravity= -.7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
CONST	SEGMENT
??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@ DB 'size[1] = 40', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ??_C@_0O@BBGGNNJM@lifespan?$DN4?5?45?$AA@
CONST	SEGMENT
??_C@_0O@BBGGNNJM@lifespan?$DN4?5?45?$AA@ DB 'lifespan=4 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
CONST	SEGMENT
??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@ DB 'color=0  0  0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
CONST	SEGMENT
??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@ DB 'alpha[1]=.1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@ DB 'ligh'
	DB	't[1.0 ]=1  0  0   ', 00H			; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
CONST	SEGMENT
??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@ DB 'light[0'
	DB	'.75]=1  1  .8 ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
CONST	SEGMENT
??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@ DB 'light[0.0 '
	DB	']=1  1  1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMPMGEMO@id?$DN$BURNING_PART?$AA@
CONST	SEGMENT
??_C@_0BB@GMPMGEMO@id?$DN$BURNING_PART?$AA@ DB 'id=$BURNING_PART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
CONST	SEGMENT
??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@ DB 'emissionrate=50', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
CONST	SEGMENT
??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@ DB 'gravity=-.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
CONST	SEGMENT
??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@ DB 'color=.2 .2 .2 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BJHHFECK@lifespan?$DN6?56?$AA@
CONST	SEGMENT
??_C@_0N@BJHHFECK@lifespan?$DN6?56?$AA@ DB 'lifespan=6 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIDCMKOG@id?$DN$BIG_SMOKE?$AA@
CONST	SEGMENT
??_C@_0O@HIDCMKOG@id?$DN$BIG_SMOKE?$AA@ DB 'id=$BIG_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 -1200', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
CONST	SEGMENT
??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@ DB 'gravity=-.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCLOICNF@drag?$DN?425?$AA@
CONST	SEGMENT
??_C@_08FCLOICNF@drag?$DN?425?$AA@ DB 'drag=.25', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
CONST	SEGMENT
??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@ DB 'color=0 0 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOHBDNAM@alpha?$FL1?$FN?$DN?412?$AA@
CONST	SEGMENT
??_C@_0N@BOHBDNAM@alpha?$FL1?$FN?$DN?412?$AA@ DB 'alpha[1]=.12', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
CONST	SEGMENT
??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@ DB 'alpha[0]=.25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CLEBDGKI@lifespan?$DN6?54?$AA@
CONST	SEGMENT
??_C@_0N@CLEBDGKI@lifespan?$DN6?54?$AA@ DB 'lifespan=6 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KIDIBAGM@id?$DN$BILLOWING_SMOKE?$AA@
CONST	SEGMENT
??_C@_0BE@KIDIBAGM@id?$DN$BILLOWING_SMOKE?$AA@ DB 'id=$BILLOWING_SMOKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
CONST	SEGMENT
??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@ DB 'emissionveloci'
	DB	'ty = 100 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
CONST	SEGMENT
??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@ DB 'emissionrate=40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MMKGBMKL@emissionid?$DNartillery?9explosion?9s@
CONST	SEGMENT
??_C@_0CF@MMKGBMKL@emissionid?$DNartillery?9explosion?9s@ DB 'emissionid='
	DB	'artillery-explosion-smoke', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EBHOHBC@emissiontarget?$DNsphere?50?50?50?560?56@
CONST	SEGMENT
??_C@_0CH@EBHOHBC@emissiontarget?$DNsphere?50?50?50?560?56@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 60 60 -100', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CILPDGMJ@emissionid?$DNburning_trail_artille@
CONST	SEGMENT
??_C@_0CD@CILPDGMJ@emissionid?$DNburning_trail_artille@ DB 'emissionid=bu'
	DB	'rning_trail_artillery', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MHDLGOGF@emissionvelocity?5?$DN?550?$AA@
CONST	SEGMENT
??_C@_0BG@MHDLGOGF@emissionvelocity?5?$DN?550?$AA@ DB 'emissionvelocity ='
	DB	' 50', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
CONST	SEGMENT
??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@ DB 'emissionid=fireba'
	DB	'll-mav', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@
CONST	SEGMENT
??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@ DB 'emissionvelocity '
	DB	'= 200', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@
CONST	SEGMENT
??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@ DB 'emission'
	DB	'target=sphere 0 0 0 250 250 -300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
CONST	SEGMENT
??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@ DB 'emissionid=shockring', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
CONST	SEGMENT
??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@ DB 'drawtype=none', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
CONST	SEGMENT
??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@ DB 'lifespan=7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
CONST	SEGMENT
??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@ DB 'soundid=30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
CONST	SEGMENT
??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@ DB 'visibledistance=1500'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
CONST	SEGMENT
??_C@_07BIIFEHDJ@alpha?$DN0?$AA@ DB 'alpha=0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KKOIHABH@id?$DN$ARTILLERY_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BI@KKOIHABH@id?$DN$ARTILLERY_EXPLOSION?$AA@ DB 'id=$ARTILLERY_EXPL'
	DB	'OSION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
CONST	SEGMENT
??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@ DB 'emissionid=willie_'
	DB	'peter', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
CONST	SEGMENT
??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@ DB 'size[1] = 60', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
CONST	SEGMENT
??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@ DB 'size[0] = 30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEMGFPBA@id?$DN$AIR_SMOKECLOUD2?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BH@LEMGFPBA@id?$DN$AIR_SMOKECLOUD2?5?5?5?$AA@ DB 'id=$AIR_SMOKECLO'
	DB	'UD2   ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@
CONST	SEGMENT
??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 3 3 -20', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
CONST	SEGMENT
??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@ DB 'emissionrate=5', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
CONST	SEGMENT
??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@ DB 'emissionmode=EMITON'
	DB	'OCE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@
CONST	SEGMENT
??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@ DB 'emissionrate=4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
CONST	SEGMENT
??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@ DB 'color= 1,1,1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OPOCGCBG@id?$DN$AIR_SMOKECLOUD?$AA@
CONST	SEGMENT
??_C@_0BD@OPOCGCBG@id?$DN$AIR_SMOKECLOUD?$AA@ DB 'id=$AIR_SMOKECLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'target=sphere 0 0 0 50 50 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
CONST	SEGMENT
??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@ DB 'emissionid=flash-air'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
CONST	SEGMENT
??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@ DB 'initialvelocity=30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
CONST	SEGMENT
??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@ DB 'gravity=-.75', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
CONST	SEGMENT
??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@ DB 'size[1] = 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
CONST	SEGMENT
??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@ DB 'size[0] = 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PAKJMFCI@color?$DN?50?0?50?0?50?$AA@
CONST	SEGMENT
??_C@_0P@PAKJMFCI@color?$DN?50?0?50?0?50?$AA@ DB 'color= 0, 0, 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@
CONST	SEGMENT
??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@ DB 'lifespan=2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMBAKCOF@id?$DN$AIR_PENETRATION?$AA@
CONST	SEGMENT
??_C@_0BE@LMBAKCOF@id?$DN$AIR_PENETRATION?$AA@ DB 'id=$AIR_PENETRATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
CONST	SEGMENT
??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@ DB 'emissionvelocit'
	DB	'y = 200 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PLBMAEHF@emissiontarget?$DNsphere?50?50?50?5350?5@
CONST	SEGMENT
??_C@_0CK@PLBMAEHF@emissiontarget?$DNsphere?50?50?50?5350?5@ DB 'emission'
	DB	'target=sphere 0 0 0 350 350 -350 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PCHDIJHE@emissionrate?$DN80?$AA@
CONST	SEGMENT
??_C@_0BA@PCHDIJHE@emissionrate?$DN80?$AA@ DB 'emissionrate=80', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
CONST	SEGMENT
??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@ DB 'emissionid=s'
	DB	'moke-black-light', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EEIOAMFK@emissionvelocity?5?$DN?5200?5?5?$AA@
CONST	SEGMENT
??_C@_0BJ@EEIOAMFK@emissionvelocity?5?$DN?5200?5?5?$AA@ DB 'emissionveloc'
	DB	'ity = 200  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@ECBEFOL@emissiontarget?$DNsphere?50?50?50?5100?5@
CONST	SEGMENT
??_C@_0CK@ECBEFOL@emissiontarget?$DNsphere?50?50?50?5100?5@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 100 100 -100 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
CONST	SEGMENT
??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@ DB 'emissionrate=70', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@
CONST	SEGMENT
??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@ DB 'emissionid=bu'
	DB	'rning_trail_air', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
CONST	SEGMENT
??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@ DB 'emission'
	DB	'target=sphere 0 0 0 250 250 -250', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
CONST	SEGMENT
??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@ DB 'emission'
	DB	'domain=sphere 0 0 0 15 15 -15', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
CONST	SEGMENT
??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@ DB 'emissionrate=6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
CONST	SEGMENT
??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@ DB 'emission'
	DB	'target=sphere 0 0 0 900 900 -900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'domain=sphere 0 0 0 50 50 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
CONST	SEGMENT
??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@ DB 'emissionrate=1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
CONST	SEGMENT
??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@ DB 'emissionid=sho'
	DB	'ckring-large', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ELDBEALN@inheritvelocity?5?$DN?91?$AA@
CONST	SEGMENT
??_C@_0BE@ELDBEALN@inheritvelocity?5?$DN?91?$AA@ DB 'inheritvelocity =-1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@
CONST	SEGMENT
??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@ DB 'soundid=32', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GNGNJCIK@size?$FL1?$FN?5?$DN?5100?$AA@
CONST	SEGMENT
??_C@_0O@GNGNJCIK@size?$FL1?$FN?5?$DN?5100?$AA@ DB 'size[1] = 100', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@
CONST	SEGMENT
??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@ DB 'size[0] = 50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DCFKAHOJ@lifespan?$DN6?55?$AA@
CONST	SEGMENT
??_C@_0N@DCFKAHOJ@lifespan?$DN6?55?$AA@ DB 'lifespan=6 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ELDMECJF@id?$DN$AIR_HANGING_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BK@ELDMECJF@id?$DN$AIR_HANGING_EXPLOSION?$AA@ DB 'id=$AIR_HANGING_'
	DB	'EXPLOSION', 00H				; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'target=sphere 0 0 0 10 10 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
CONST	SEGMENT
??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@ DB 'emissionrate=10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
CONST	SEGMENT
??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@ DB 'emissionid=smoke-b'
	DB	'lack', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
CONST	SEGMENT
??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@ DB 'emission'
	DB	'target=sphere 0 0 0 30 30 -30', 00H		; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
CONST	SEGMENT
??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 0 0 0 ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
CONST	SEGMENT
??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@ DB 'emissionrate=15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
CONST	SEGMENT
??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@ DB 'emissionid=fire'
	DB	'work-shell', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
CONST	SEGMENT
??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@ DB 'size[1] = 10', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
CONST	SEGMENT
??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@ DB 'alpha[1]=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@ DB 'alpha[0]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
CONST	SEGMENT
??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@ DB 'lifespan=1 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFILNNBO@id?$DN$AIR_EXPLOSION?$AA@
CONST	SEGMENT
??_C@_0BC@LFILNNBO@id?$DN$AIR_EXPLOSION?$AA@ DB 'id=$AIR_EXPLOSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
CONST	SEGMENT
??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@ DB 'emissio'
	DB	'ntarget=sphere 0 0 0 5 5 -5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
CONST	SEGMENT
??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@ DB 'emissiond'
	DB	'omain=sphere 0 0 0 0 0 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
CONST	SEGMENT
??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@ DB 'emissionrate=1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
CONST	SEGMENT
??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@ DB 'emissionmode=EMITP'
	DB	'ERSEC', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
CONST	SEGMENT
??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@ DB 'emissionid=dust-bro'
	DB	'wn', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@
CONST	SEGMENT
??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@ DB 'initialvelocity=2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
CONST	SEGMENT
??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@ DB 'visibledistance=30000'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@
CONST	SEGMENT
??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@ DB 'gravity=.9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
CONST	SEGMENT
??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@ DB 'texture=smoke1.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDCHPOFL@drag?$DN?49?$AA@
CONST	SEGMENT
??_C@_07GDCHPOFL@drag?$DN?49?$AA@ DB 'drag=.9', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
CONST	SEGMENT
??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@ DB 'size[1] = 20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
CONST	SEGMENT
??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@ DB 'size[0] = 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@
CONST	SEGMENT
??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@ DB 'color=.9 .8 .7 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
CONST	SEGMENT
??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@ DB 'alpha[1]=.05', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@ DB 'alpha[0]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PENCCBL@lifespan?$DN5?53?5?$AA@
CONST	SEGMENT
??_C@_0O@PENCCBL@lifespan?$DN5?53?5?$AA@ DB 'lifespan=5 3 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CKPPNFOF@id?$DN$AIR_DUSTCLOUD?$AA@
CONST	SEGMENT
??_C@_0BC@CKPPNFOF@id?$DN$AIR_DUSTCLOUD?$AA@ DB 'id=$AIR_DUSTCLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GNCLOJNJ@emissiontarget?$DNsphere?50?50?50?510?51@
CONST	SEGMENT
??_C@_0CH@GNCLOJNJ@emissiontarget?$DNsphere?50?50?50?510?51@ DB 'emission'
	DB	'target=sphere 0 0 0 10 10 -10 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
CONST	SEGMENT
??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@ DB 'emissionrate=30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
CONST	SEGMENT
??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@ DB 'emissionid=smoke_wh'
	DB	'ite', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GIPDCHNF@emissiontarget?$DNsphere?50?50?50?520?52@
CONST	SEGMENT
??_C@_0CH@GIPDCHNF@emissiontarget?$DNsphere?50?50?50?520?52@ DB 'emission'
	DB	'target=sphere 0 0 0 20 20 -20 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
CONST	SEGMENT
??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@ DB 'emissio'
	DB	'ndomain=sphere 0 0 0 5 5 -5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
CONST	SEGMENT
??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@ DB 'emissionrate=25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
CONST	SEGMENT
??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@ DB 'emissionmode=EMITONCE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
CONST	SEGMENT
??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@ DB 'emissionid=bu'
	DB	'rning_trail_airburst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DKCKMNFK@addemitter?$AA@
CONST	SEGMENT
??_C@_0L@DKCKMNFK@addemitter?$AA@ DB 'addemitter', 00H	; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
CONST	SEGMENT
??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@ DB 'initialvelocity=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
CONST	SEGMENT
??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@ DB 'drawtype=poly', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LNJCKABN@gravity?$DN1?$AA@
CONST	SEGMENT
??_C@_09LNJCKABN@gravity?$DN1?$AA@ DB 'gravity=1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
CONST	SEGMENT
??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@ DB 'visibledistance=1000'
	DB	'0', 00H					; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
CONST	SEGMENT
??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@ DB 'texture=flare1.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
CONST	SEGMENT
??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@ DB 'soundlooped=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MPCIFFLN@soundid?$DN2?$AA@
CONST	SEGMENT
??_C@_09MPCIFFLN@soundid?$DN2?$AA@ DB 'soundid=2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGDODENE@size?$FL1?$FN?5?$DN?546?$AA@
CONST	SEGMENT
??_C@_0N@MGDODENE@size?$FL1?$FN?5?$DN?546?$AA@ DB 'size[1] = 46', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
CONST	SEGMENT
??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@ DB 'size[0] = 10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
CONST	SEGMENT
??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@ DB 'light=1 1 1  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@ DB 'alpha[1]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
CONST	SEGMENT
??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@ DB 'alpha[0]=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
CONST	SEGMENT
??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@ DB 'lifespan=1 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NPMKIJFN@id?$DN$AIRBURST?$AA@
CONST	SEGMENT
??_C@_0N@NPMKIJFN@id?$DN$AIRBURST?$AA@ DB 'id=$AIRBURST', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@IPOEFCOH@trailid?5?$DN?525?$AA@
CONST	SEGMENT
??_C@_0N@IPOEFCOH@trailid?5?$DN?525?$AA@ DB 'trailid = 25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KPINDPFA@lifespan?$DN1?55?$AA@
CONST	SEGMENT
??_C@_0N@KPINDPFA@lifespan?$DN1?55?$AA@ DB 'lifespan=1 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGKJBPIL@texture?$DNSUN?4dds?$AA@
CONST	SEGMENT
??_C@_0BA@CGKJBPIL@texture?$DNSUN?4dds?$AA@ DB 'texture=SUN.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFLJHAPA@size?$FL1?$FN?5?$DN?5?44?$AA@
CONST	SEGMENT
??_C@_0N@OFLJHAPA@size?$FL1?$FN?5?$DN?5?44?$AA@ DB 'size[1] = .4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPCBHEBN@id?$DNburning_trail_x?$AA@
CONST	SEGMENT
??_C@_0BD@PPCBHEBN@id?$DNburning_trail_x?$AA@ DB 'id=burning_trail_x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IJDPELMB@initialvelocity?$DN200?0?550?$AA@
CONST	SEGMENT
??_C@_0BI@IJDPELMB@initialvelocity?$DN200?0?550?$AA@ DB 'initialvelocity='
	DB	'200, 50', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEFKEBGA@size?$FL?44?$FN?5?$DN?51?$AA@
CONST	SEGMENT
??_C@_0N@KEFKEBGA@size?$FL?44?$FN?5?$DN?51?$AA@ DB 'size[.4] = 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJBLKOK@size?$FL?43?$FN?5?$DN?55?$AA@
CONST	SEGMENT
??_C@_0N@FJBLKOK@size?$FL?43?$FN?5?$DN?55?$AA@ DB 'size[.3] = 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDHFIMFM@size?$FL?42?$FN?5?$DN10?$AA@
CONST	SEGMENT
??_C@_0N@MDHFIMFM@size?$FL?42?$FN?5?$DN10?$AA@ DB 'size[.2] =10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KHMHPHML@size?$FL?41?$FN?5?$DN?515?$AA@
CONST	SEGMENT
??_C@_0O@KHMHPHML@size?$FL?41?$FN?5?$DN?515?$AA@ DB 'size[.1] = 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@POHLHPOG@color?$FL?44?$FN?$DN0?50?50?$AA@
CONST	SEGMENT
??_C@_0BA@POHLHPOG@color?$FL?44?$FN?$DN0?50?50?$AA@ DB 'color[.4]=0 0 0', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_Q_SCALE DD	03a51b717r			; 0.0008
_TRAILFILE DB	'particlesys.ini', 00H
_TrailsTable DB	'TRAIL_CONTRAIL', 00H
	ORG $+49
	DD	00H
	DB	'TRAIL_VORTEX', 00H
	ORG $+51
	DD	01H
	DB	'TRAIL_SAM', 00H
	ORG $+54
	DD	02H
	DB	'TRAIL_AIM120', 00H
	ORG $+51
	DD	03H
	DB	'TRAIL_MAVERICK', 00H
	ORG $+49
	DD	04H
	DB	'TRAIL_SMOKE', 00H
	ORG $+52
	DD	05H
	DB	'TRAIL_MEDIUM_SAM', 00H
	ORG $+47
	DD	06H
	DB	'TRAIL_LARGE_AGM', 00H
	ORG $+48
	DD	07H
	DB	'TRAIL_GUN2', 00H
	ORG $+53
	DD	08H
	DB	'TRAIL_SARH_MISSILE', 00H
	ORG $+45
	DD	09H
	DB	'TRAIL_GUN3', 00H
	ORG $+53
	DD	0aH
	DB	'TRAIL_GUN', 00H
	ORG $+54
	DD	0bH
	DB	'TRAIL_LWING', 00H
	ORG $+52
	DD	0cH
	DB	'TRAIL_RWING', 00H
	ORG $+52
	DD	0dH
	DB	'TRAIL_ROCKET', 00H
	ORG $+51
	DD	0eH
	DB	'TRAIL_MISLSMOKE', 00H
	ORG $+48
	DD	0fH
	DB	'TRAIL_IR_MISSILE', 00H
	ORG $+47
	DD	010H
	DB	'TRAIL_DARKSMOKE', 00H
	ORG $+48
	DD	011H
	DB	'TRAIL_FIRE2', 00H
	ORG $+52
	DD	012H
	DB	'TRAIL_WINGTIPVTX', 00H
	ORG $+47
	DD	013H
	DB	'TRAIL_A10CANNON1', 00H
	ORG $+47
	DD	014H
	DB	'TRAIL_ENGINE_SMOKE_LIGHT', 00H
	ORG $+39
	DD	015H
	DB	'TRAIL_FEATURESMOKE', 00H
	ORG $+45
	DD	016H
	DB	'TRAIL_BURNINGDEBRIS', 00H
	ORG $+44
	DD	017H
	DB	'TRAIL_FLARE', 00H
	ORG $+52
	DD	018H
	DB	'TRAIL_FLAREGLOW', 00H
	ORG $+48
	DD	019H
	DB	'TRAIL_CONTAIL_SHORT', 00H
	ORG $+44
	DD	01aH
	DB	'TRAIL_WING_COLOR', 00H
	ORG $+47
	DD	01bH
	DB	'TRAIL_MISSILEHIT_FIRE', 00H
	ORG $+42
	DD	01cH
	DB	'TRAIL_BURNING_SMOKE', 00H
	ORG $+44
	DD	01dH
	DB	'TRAIL_BURNING_SMOKE2', 00H
	ORG $+43
	DD	01eH
	DB	'TRAIL_BURNING_FIRE', 00H
	ORG $+45
	DD	01fH
	DB	'TRAIL_ENGINE_SMOKE_SHARED', 00H
	ORG $+38
	DD	020H
	DB	'TRAIL_GROUND_EXP_SMOKE', 00H
	ORG $+41
	DD	021H
	DB	'TRAIL_DUSTCLOUD', 00H
	ORG $+48
	DD	022H
	DB	'TRAIL_MISTCLOUD', 00H
	ORG $+48
	DD	023H
	DB	'TRAIL_LINGERINGSMOKE', 00H
	ORG $+43
	DD	024H
	DB	'TRAIL_GROUNDVDUSTCLOUD', 00H
	ORG $+41
	DD	025H
	DB	'TRAIL_B52H_ENGINE_SMOKE', 00H
	ORG $+40
	DD	026H
	DB	'TRAIL_F4_ENGINE_SMOKE', 00H
	ORG $+42
	DD	027H
	DB	'TRAIL_COLOR_0', 00H
	ORG $+50
	DD	028H
	DB	'TRAIL_COLOR_1', 00H
	ORG $+50
	DD	029H
	DB	'TRAIL_COLOR_2', 00H
	ORG $+50
	DD	02aH
	DB	'TRAIL_COLOR_3', 00H
	ORG $+50
	DD	02bH
	DB	'TRAIL_RWING_COLOR_0', 00H
	ORG $+44
	DD	02cH
	DB	'TRAIL_RWING_COLOR_1', 00H
	ORG $+44
	DD	02dH
	DB	'TRAIL_RWING_COLOR_2', 00H
	ORG $+44
	DD	02eH
	DB	'TRAIL_RWING_COLOR_3', 00H
	ORG $+44
	DD	02fH
	DB	'TRAIL_RWING_COLOR_4', 00H
	ORG $+44
	DD	030H
	DB	'TRAIL_LWING_COLOR_0', 00H
	ORG $+44
	DD	031H
	DB	'TRAIL_LWING_COLOR_1', 00H
	ORG $+44
	DD	032H
	DB	'TRAIL_LWING_COLOR_2', 00H
	ORG $+44
	DD	033H
	DB	'TRAIL_LWING_COLOR_3', 00H
	ORG $+44
	DD	034H
	DB	'TRAIL_LWING_COLOR_4', 00H
	ORG $+44
	DD	035H
	DB	'TRAIL_VORTEX_LARGE', 00H
	ORG $+45
	DD	036H
	DB	00H
	ORG $+63
	DD	00H
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ??_C@_0BA@FBEGMBIK@color?$FL?43?$FN?$DN1?50?50?$AA@
CONST	SEGMENT
??_C@_0BA@FBEGMBIK@color?$FL?43?$FN?$DN1?50?50?$AA@ DB 'color[.3]=1 0 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OHJKIDON@color?$FL?42?$FN?$DN1?51?51?$AA@
CONST	SEGMENT
??_C@_0BA@OHJKIDON@color?$FL?42?$FN?$DN1?51?51?$AA@ DB 'color[.2]=1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JMENNIGA@color?$FL?41?$FN?$DN1?50?50?5?$AA@
CONST	SEGMENT
??_C@_0BB@JMENNIGA@color?$FL?41?$FN?$DN1?50?50?5?$AA@ DB 'color[.1]=1 0 0'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EFNAGJAA@color?$FL0?5?$FN?$DN1?51?50?$AA@
CONST	SEGMENT
??_C@_0BA@EFNAGJAA@color?$FL0?5?$FN?$DN1?51?50?$AA@ DB 'color[0 ]=1 1 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFODNFIJ@alpha?$FL?44?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0N@HFODNFIJ@alpha?$FL?44?$FN?$DN?43?$AA@ DB 'alpha[.4]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHKHHDPG@alpha?$FL?43?$FN?$DN?44?$AA@
CONST	SEGMENT
??_C@_0N@CHKHHDPG@alpha?$FL?43?$FN?$DN?44?$AA@ DB 'alpha[.3]=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NOMNMCNB@alpha?$FL?42?$FN?$DN?46?$AA@
CONST	SEGMENT
??_C@_0N@NOMNMCNB@alpha?$FL?42?$FN?$DN?46?$AA@ DB 'alpha[.2]=.6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EBECIBDO@alpha?$FL?41?$FN?$DN?47?$AA@
CONST	SEGMENT
??_C@_0N@EBECIBDO@alpha?$FL?41?$FN?$DN?47?$AA@ DB 'alpha[.1]=.7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJLBKLFM@alpha?$FL0?5?$FN?$DN?48?$AA@
CONST	SEGMENT
??_C@_0N@DJLBKLFM@alpha?$FL0?5?$FN?$DN?48?$AA@ DB 'alpha[0 ]=.8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BBHPEBOH@lifespan?$DN1?51?51?51?51?$AA@
CONST	SEGMENT
??_C@_0BD@BBHPEBOH@lifespan?$DN1?51?51?51?51?$AA@ DB 'lifespan=1 1 1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IEBPLOFD@id?$DNburning_trail_xx?$AA@
CONST	SEGMENT
??_C@_0BE@IEBPLOFD@id?$DNburning_trail_xx?$AA@ DB 'id=burning_trail_xx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IACGPHBJ@color?$DN?45?5?45?5?45?5?$AA@
CONST	SEGMENT
??_C@_0BA@IACGPHBJ@color?$DN?45?5?45?5?45?5?$AA@ DB 'color=.5 .5 .5 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCGMGDGK@alpha?$FL1?40?5?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0O@HCGMGDGK@alpha?$FL1?40?5?$FN?$DN0?$AA@ DB 'alpha[1.0 ]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IFCCKIGM@alpha?$FL0?425?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0P@IFCCKIGM@alpha?$FL0?425?$FN?$DN?42?$AA@ DB 'alpha[0.25]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOMGGDPE@alpha?$FL0?40?5?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0O@LOMGGDPE@alpha?$FL0?40?5?$FN?$DN0?$AA@ DB 'alpha[0.0 ]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LNDIJALO@lifespan?$DN2?55?$AA@
CONST	SEGMENT
??_C@_0N@LNDIJALO@lifespan?$DN2?55?$AA@ DB 'lifespan=2 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DNPIEFEN@id?$DNsmoke?9grey?$AA@
CONST	SEGMENT
??_C@_0O@DNPIEFEN@id?$DNsmoke?9grey?$AA@ DB 'id=smoke-grey', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ??_C@_0N@FIEPHNL@lifespan?$DN3?55?$AA@
CONST	SEGMENT
??_C@_0N@FIEPHNL@lifespan?$DN3?55?$AA@ DB 'lifespan=3 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MEMGKMLI@id?$DNsmoke?9black?9thick?$AA@
CONST	SEGMENT
??_C@_0BF@MEMGKMLI@id?$DNsmoke?9black?9thick?$AA@ DB 'id=smoke-black-thic'
	DB	'k', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DFPCLLAB@alpha?$FL0?41?$FN?$DN?44?$AA@
CONST	SEGMENT
??_C@_0O@DFPCLLAB@alpha?$FL0?41?$FN?$DN?44?$AA@ DB 'alpha[0.1]=.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IPIGBJPC@alpha?$FL0?40?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0N@IPIGBJPC@alpha?$FL0?40?$FN?$DN0?$AA@ DB 'alpha[0.0]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ??_C@_0N@IEBOHKDE@lifespan?$DN10?5?$AA@
CONST	SEGMENT
??_C@_0N@IEBOHKDE@lifespan?$DN10?5?$AA@ DB 'lifespan=10 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PAHGCIEN@id?$DNsmoke?9grey?9low?$AA@
CONST	SEGMENT
??_C@_0BC@PAHGCIEN@id?$DNsmoke?9grey?9low?$AA@ DB 'id=smoke-grey-low', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGDJENFA@gravity?$DN?9?48?$AA@
CONST	SEGMENT
??_C@_0M@BGDJENFA@gravity?$DN?9?48?$AA@ DB 'gravity=-.8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HKDMMPBK@drag?$DN?48?$AA@
CONST	SEGMENT
??_C@_07HKDMMPBK@drag?$DN?48?$AA@ DB 'drag=.8', 00H	; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@DPFFLKMN@size?$FL?45?$FN?$DN?530?$AA@
CONST	SEGMENT
??_C@_0N@DPFFLKMN@size?$FL?45?$FN?$DN?530?$AA@ DB 'size[.5]= 30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNMDFKMI@color?$DN?44?5?44?5?44?5?$AA@
CONST	SEGMENT
??_C@_0BA@FNMDFKMI@color?$DN?44?5?44?5?44?5?$AA@ DB 'color=.4 .4 .4 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGKHCLE@alpha?$FL1?40?$FN?$DN?401?$AA@
CONST	SEGMENT
??_C@_0P@HGKHCLE@alpha?$FL1?40?$FN?$DN?401?$AA@ DB 'alpha[1.0]=.01', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MEOFPNMN@lifespan?$DN6?55?52?$AA@
CONST	SEGMENT
??_C@_0P@MEOFPNMN@lifespan?$DN6?55?52?$AA@ DB 'lifespan=6 5 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GJHEPAMG@id?$DNsmoke?9grey?9high?$AA@
CONST	SEGMENT
??_C@_0BD@GJHEPAMG@id?$DNsmoke?9grey?9high?$AA@ DB 'id=smoke-grey-high', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DCEJGBCB@?5addemitter?$AA@
CONST	SEGMENT
??_C@_0M@DCEJGBCB@?5addemitter?$AA@ DB ' addemitter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CDALMLLL@size?$FL1?$FN?5?$DN5?$AA@
CONST	SEGMENT
??_C@_0L@CDALMLLL@size?$FL1?$FN?5?$DN5?$AA@ DB 'size[1] =5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIKFOEFM@size?$FL0?$FN?5?$DN?45?$AA@
CONST	SEGMENT
??_C@_0M@EIKFOEFM@size?$FL0?$FN?5?$DN?45?$AA@ DB 'size[0] =.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CBCMCADK@size?$FL0?$FN?5?$DN30?$AA@
CONST	SEGMENT
??_C@_0M@CBCMCADK@size?$FL0?$FN?5?$DN30?$AA@ DB 'size[0] =30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DKBAPKPK@size?$FL1?$FN?5?$DN4?$AA@
CONST	SEGMENT
??_C@_0L@DKBAPKPK@size?$FL1?$FN?5?$DN4?$AA@ DB 'size[1] =4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@
CONST	SEGMENT
??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@ DB 'size[0] =2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HPILLKLD@emissionrate?$DN5?51?$AA@
CONST	SEGMENT
??_C@_0BB@HPILLKLD@emissionrate?$DN5?51?$AA@ DB 'emissionrate=5 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JOHFGIBM@emissionid?$DNcbu?9sparkle?$AA@
CONST	SEGMENT
??_C@_0BH@JOHFGIBM@emissionid?$DNcbu?9sparkle?$AA@ DB 'emissionid=cbu-spa'
	DB	'rkle', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LILAHGMN@emissionid?$DNcbu?9spark?$AA@
CONST	SEGMENT
??_C@_0BF@LILAHGMN@emissionid?$DNcbu?9spark?$AA@ DB 'emissionid=cbu-spark'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@
CONST	SEGMENT
??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@ DB 'size[1] =1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LNOKJHOI@lifespan?$DN1?5?41?$AA@
CONST	SEGMENT
??_C@_0O@LNOKJHOI@lifespan?$DN1?5?41?$AA@ DB 'lifespan=1 .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LKMFPJKO@id?$DNfirework?9small?$AA@
CONST	SEGMENT
??_C@_0BC@LKMFPJKO@id?$DNfirework?9small?$AA@ DB 'id=firework-small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJEBMCHJ@emissiontarget?$DNsphere?50?50?55?5100?5@
CONST	SEGMENT
??_C@_0CJ@FJEBMCHJ@emissiontarget?$DNsphere?50?50?55?5100?5@ DB 'emission'
	DB	'target=sphere 0 0 5 100 100 -310', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGDFIOHH@id?$DNfire?960?9small?$AA@
CONST	SEGMENT
??_C@_0BB@MGDFIOHH@id?$DNfire?960?9small?$AA@ DB 'id=fire-60-small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PPIPKKH@emissiontarget?$DNsphere?50?50?50?570?57@
CONST	SEGMENT
??_C@_0CH@PPIPKKH@emissiontarget?$DNsphere?50?50?50?570?57@ DB 'emissiont'
	DB	'arget=sphere 0 0 0 70 70 -150', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBCEBKNA@id?$DNfire?9short?9small?$AA@
CONST	SEGMENT
??_C@_0BE@GBCEBKNA@id?$DNfire?9short?9small?$AA@ DB 'id=fire-short-small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GHGKJEFA@emissionrate?$DN10?5?45?$AA@
CONST	SEGMENT
??_C@_0BD@GHGKJEFA@emissionrate?$DN10?5?45?$AA@ DB 'emissionrate=10 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCNMOJLH@emissionrate?$DN1?5?45?$AA@
CONST	SEGMENT
??_C@_0BC@BCNMOJLH@emissionrate?$DN1?5?45?$AA@ DB 'emissionrate=1 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OAJKJPGL@emissionid?$DNsmoke?9lt?9brown?$AA@
CONST	SEGMENT
??_C@_0BK@OAJKJPGL@emissionid?$DNsmoke?9lt?9brown?$AA@ DB 'emissionid=smo'
	DB	'ke-lt-brown', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PAPJLOCE@id?$DNfireball?960?$AA@
CONST	SEGMENT
??_C@_0P@PAPJLOCE@id?$DNfireball?960?$AA@ DB 'id=fireball-60', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HJADMJJP@size?$FL1?$FN?5?$DN150?$AA@
CONST	SEGMENT
??_C@_0N@HJADMJJP@size?$FL1?$FN?5?$DN150?$AA@ DB 'size[1] =150', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@INBMONCC@initialvelocity?$DN40?510?$AA@
CONST	SEGMENT
??_C@_0BG@INBMONCC@initialvelocity?$DN40?510?$AA@ DB 'initialvelocity=40 '
	DB	'10', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NEPAJHIE@lifespan?$DN2?0?45?$AA@
CONST	SEGMENT
??_C@_0O@NEPAJHIE@lifespan?$DN2?0?45?$AA@ DB 'lifespan=2,.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KJPGNPAO@id?$DNfireball?9short?$AA@
CONST	SEGMENT
??_C@_0BC@KJPGNPAO@id?$DNfireball?9short?$AA@ DB 'id=fireball-short', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHIAKKMG@id?$DNfireball?9mis?$AA@
CONST	SEGMENT
??_C@_0BA@EHIAKKMG@id?$DNfireball?9mis?$AA@ DB 'id=fireball-mis', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@
CONST	SEGMENT
??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@ DB 'size[1] =50', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
CONST	SEGMENT
??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@ DB 'size[0] =20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
CONST	SEGMENT
??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@ DB 'light[1.0 ]=1 '
	DB	'0 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HDEMNDH@size?$FL?49?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0O@HDEMNDH@size?$FL?49?$FN?5?$DN?5?41?$AA@ DB 'size[.9] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ??_C@_0N@COIPIHDO@size?$FL?48?$FN?5?$DN47?$AA@
CONST	SEGMENT
??_C@_0N@COIPIHDO@size?$FL?48?$FN?5?$DN47?$AA@ DB 'size[.8] =47', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCLONPAF@size?$FL?47?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0O@BCLONPAF@size?$FL?47?$FN?5?$DN?5?41?$AA@ DB 'size[.7] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CMGHCHFH@size?$FL?46?$FN?5?$DN21?$AA@
CONST	SEGMENT
??_C@_0N@CMGHCHFH@size?$FL?46?$FN?5?$DN21?$AA@ DB 'size[.6] =21', 00H ; `string'
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ??_C@_0O@FAJLNIHI@size?$FL?45?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0O@FAJLNIHI@size?$FL?45?$FN?5?$DN?5?41?$AA@ DB 'size[.5] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@MHENKIAM@size?$FL?44?$FN?5?$DN34?$AA@
CONST	SEGMENT
??_C@_0N@MHENKIAM@size?$FL?44?$FN?5?$DN34?$AA@ DB 'size[.4] =34', 00H ; `string'
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ??_C@_0O@JGPENBPP@size?$FL?43?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0O@JGPENBPP@size?$FL?43?$FN?5?$DN?5?41?$AA@ DB 'size[.3] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMEEMGEA@size?$FL?42?$FN?5?$DN25?$AA@
CONST	SEGMENT
??_C@_0N@LMEEMGEA@size?$FL?42?$FN?5?$DN25?$AA@ DB 'size[.2] =25', 00H ; `string'
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ??_C@_0O@NENBNGIC@size?$FL?41?$FN?5?$DN?5?41?$AA@
CONST	SEGMENT
??_C@_0O@NENBNGIC@size?$FL?41?$FN?5?$DN?5?41?$AA@ DB 'size[.1] = .1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEGDDGLP@size?$FL0?$FN?5?$DN40?$AA@
CONST	SEGMENT
??_C@_0M@CEGDDGLP@size?$FL0?$FN?5?$DN40?$AA@ DB 'size[0] =40', 00H ; `string'
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ??_C@_0O@OKBFEBGM@light?$DN?48?5?49?51?$AA@
CONST	SEGMENT
??_C@_0O@OKBFEBGM@light?$DN?48?5?49?51?$AA@ DB 'light=.8 .9 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOCKAJLP@alpha?$FL?49?$FN?$DN0?5?$AA@
CONST	SEGMENT
??_C@_0N@LOCKAJLP@alpha?$FL?49?$FN?$DN0?5?$AA@ DB 'alpha[.9]=0 ', 00H ; `string'
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ??_C@_0N@BLDKCELD@alpha?$FL?48?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0N@BLDKCELD@alpha?$FL?48?$FN?$DN?42?$AA@ DB 'alpha[.8]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KFEHDBNL@alpha?$FL?47?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0M@KFEHDBNL@alpha?$FL?47?$FN?$DN0?$AA@ DB 'alpha[.7]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ??_C@_0O@JHMIIHON@alpha?$FL?46?$FN?$DN?42?5?$AA@
CONST	SEGMENT
??_C@_0O@JHMIIHON@alpha?$FL?46?$FN?$DN?42?5?$AA@ DB 'alpha[.6]=.2 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJOIMJME@alpha?$FL?45?$FN?$DN0?5?$AA@
CONST	SEGMENT
??_C@_0N@MJOIMJME@alpha?$FL?45?$FN?$DN0?5?$AA@ DB 'alpha[.5]=0 ', 00H ; `string'
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ??_C@_0N@GMPIOEMI@alpha?$FL?44?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0N@GMPIOEMI@alpha?$FL?44?$FN?$DN?42?$AA@ DB 'alpha[.4]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAMHJHBL@alpha?$FL?43?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0M@FAMHJHBL@alpha?$FL?43?$FN?$DN0?$AA@ DB 'alpha[.3]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ??_C@_0M@CKAHMEHL@alpha?$FL?41?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0M@CKAHMEHL@alpha?$FL?41?$FN?$DN0?$AA@ DB 'alpha[.1]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PKPHANAA@alpha?$FL0?5?$FN?$DN?42?5?$AA@
CONST	SEGMENT
??_C@_0O@PKPHANAA@alpha?$FL0?5?$FN?$DN?42?5?$AA@ DB 'alpha[0 ]=.2 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMBBHLJD@lifespan?$DN1?0?42?$AA@
CONST	SEGMENT
??_C@_0O@NMBBHLJD@lifespan?$DN1?0?42?$AA@ DB 'lifespan=1,.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IGDAMGOC@id?$DNelectrical?9flash?$AA@
CONST	SEGMENT
??_C@_0BE@IGDAMGOC@id?$DNelectrical?9flash?$AA@ DB 'id=electrical-flash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OJEFFKCJ@id?$DNdust?9trail?$AA@
CONST	SEGMENT
??_C@_0O@OJEFFKCJ@id?$DNdust?9trail?$AA@ DB 'id=dust-trail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPNPAABB@size?$FL0?$FN?5?$DN15?$AA@
CONST	SEGMENT
??_C@_0M@FPNPAABB@size?$FL0?$FN?5?$DN15?$AA@ DB 'size[0] =15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAFLDAMI@lifespan?$DN1?52?56?$AA@
CONST	SEGMENT
??_C@_0P@CAFLDAMI@lifespan?$DN1?52?56?$AA@ DB 'lifespan=1 2 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OAPPKFNP@id?$DNdust?9CBU?$AA@
CONST	SEGMENT
??_C@_0M@OAPPKFNP@id?$DNdust?9CBU?$AA@ DB 'id=dust-CBU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MHJFEBFH@light?$FL1?$FN?$DN1?51?5?45?$AA@
CONST	SEGMENT
??_C@_0BA@MHJFEBFH@light?$FL1?$FN?$DN1?51?5?45?$AA@ DB 'light[1]=1 1 .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PHCCNOCP@lifespan?$DN?45?5?43?$AA@
CONST	SEGMENT
??_C@_0P@PHCCNOCP@lifespan?$DN?45?5?43?$AA@ DB 'lifespan=.5 .3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFFKOIMK@id?$DNcbu?9spark?$AA@
CONST	SEGMENT
??_C@_0N@JFFKOIMK@id?$DNcbu?9spark?$AA@ DB 'id=cbu-spark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGIDGNHC@id?$DNcbu?9sparkle?$AA@
CONST	SEGMENT
??_C@_0P@MGIDGNHC@id?$DNcbu?9sparkle?$AA@ DB 'id=cbu-sparkle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ODJDKCAL@emissiondomain?$DNsphere?50?50?500?50?50@
CONST	SEGMENT
??_C@_0CB@ODJDKCAL@emissiondomain?$DNsphere?50?50?500?50?50@ DB 'emission'
	DB	'domain=sphere 0 0 00 0 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CKEDNFGC@id?$DNburning?9trail?$AA@
CONST	SEGMENT
??_C@_0BB@CKEDNFGC@id?$DNburning?9trail?$AA@ DB 'id=burning-trail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IPJEEECA@initialvelocity?5?$DN?5300?$AA@
CONST	SEGMENT
??_C@_0BG@IPJEEECA@initialvelocity?5?$DN?5300?$AA@ DB 'initialvelocity = '
	DB	'300', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LCNPKBND@initialvelocity?5?$DN?550?0?55?$AA@
CONST	SEGMENT
??_C@_0BI@LCNPKBND@initialvelocity?5?$DN?550?0?55?$AA@ DB 'initialvelocit'
	DB	'y = 50, 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@
CONST	SEGMENT
??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@ DB 'alpha= .4', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ??_C@_0BJ@BDNEGNNK@id?$DNburning_trail_missile?$AA@
CONST	SEGMENT
??_C@_0BJ@BDNEGNNK@id?$DNburning_trail_missile?$AA@ DB 'id=burning_trail_'
	DB	'missile', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIOGNKIB@gravity?$DN?5?44?$AA@
CONST	SEGMENT
??_C@_0M@EIOGNKIB@gravity?$DN?5?44?$AA@ DB 'gravity= .4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLMGPHNJ@lifespan?$DN?55?$AA@
CONST	SEGMENT
??_C@_0M@PLMGPHNJ@lifespan?$DN?55?$AA@ DB 'lifespan= 5', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ??_C@_08IFGGKJIN@alpha?$DN?51?$AA@
CONST	SEGMENT
??_C@_08IFGGKJIN@alpha?$DN?51?$AA@ DB 'alpha= 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKNALIAD@gravity?$DN?5?46?$AA@
CONST	SEGMENT
??_C@_0M@HKNALIAD@gravity?$DN?5?46?$AA@ DB 'gravity= .6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CGMHLPMP@alpha?$DN?5?45?$AA@
CONST	SEGMENT
??_C@_09CGMHLPMP@alpha?$DN?5?45?$AA@ DB 'alpha= .5', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
CONST	SEGMENT
??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@ DB 'trailid = 29', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LEIHGBBO@lifespan?$DN?52?$AA@
CONST	SEGMENT
??_C@_0M@LEIHGBBO@lifespan?$DN?52?$AA@ DB 'lifespan= 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
CONST	SEGMENT
??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@ DB 'color= 1,0,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FJAAHLBF@emissiontarget?$DNsphere?50?50?50?530?53@
CONST	SEGMENT
??_C@_0CG@FJAAHLBF@emissiontarget?$DNsphere?50?50?50?530?53@ DB 'emission'
	DB	'target=sphere 0 0 0 30 30 -50', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CFLFOFGH@emissiontarget?$DNsphere?50?50?50?530?53@
CONST	SEGMENT
??_C@_0CG@CFLFOFGH@emissiontarget?$DNsphere?50?50?50?530?53@ DB 'emission'
	DB	'target=sphere 0 0 0 30 30 -45', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@
CONST	SEGMENT
??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@ DB 'size[0] =1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPKGOBOP@soundid?$DN171?$AA@
CONST	SEGMENT
??_C@_0M@LPKGOBOP@soundid?$DN171?$AA@ DB 'soundid=171', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCCCCNAL@size?$FL1?$FN?5?$DN?570?$AA@
CONST	SEGMENT
??_C@_0N@JCCCCNAL@size?$FL1?$FN?5?$DN?570?$AA@ DB 'size[1] = 70', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HHAMCFBE@emissionid?$DNdust?9trail?$AA@
CONST	SEGMENT
??_C@_0BG@HHAMCFBE@emissionid?$DNdust?9trail?$AA@ DB 'emissionid=dust-tra'
	DB	'il', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FMLMLDCN@size?$FL?45?$FN?5?$DN?520?$AA@
CONST	SEGMENT
??_C@_0O@FMLMLDCN@size?$FL?45?$FN?5?$DN?520?$AA@ DB 'size[.5] = 20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKBPOAAH@lifespan?$DN2?53?52?$AA@
CONST	SEGMENT
??_C@_0P@HKBPOAAH@lifespan?$DN2?53?52?$AA@ DB 'lifespan=2 3 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DPKOPDIK@id?$DN$TRAILDUST?$AA@
CONST	SEGMENT
??_C@_0O@DPKOPDIK@id?$DN$TRAILDUST?$AA@ DB 'id=$TRAILDUST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OIFHBIBO@size?$FL0?$FN?5?$DN5?$AA@
CONST	SEGMENT
??_C@_0L@OIFHBIBO@size?$FL0?$FN?5?$DN5?$AA@ DB 'size[0] =5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@
CONST	SEGMENT
??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@ DB 'color= 1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JLNJNLCC@id?$DN$LONG_HANGING_SMOKE2?$AA@
CONST	SEGMENT
??_C@_0BI@JLNJNLCC@id?$DN$LONG_HANGING_SMOKE2?$AA@ DB 'id=$LONG_HANGING_S'
	DB	'MOKE2', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BOENNBLF@id?$DN$HIT_EXPLOSION_NOSMOKE?$AA@
CONST	SEGMENT
??_C@_0BK@BOENNBLF@id?$DN$HIT_EXPLOSION_NOSMOKE?$AA@ DB 'id=$HIT_EXPLOSIO'
	DB	'N_NOSMOKE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEJJDDDL@size?$FL1?$FN?5?$DN?512?$AA@
CONST	SEGMENT
??_C@_0N@KEJJDDDL@size?$FL1?$FN?5?$DN?512?$AA@ DB 'size[1] = 12', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GJBGJKJF@size?$FL0?$FN?5?$DN?56?$AA@
CONST	SEGMENT
??_C@_0M@GJBGJKJF@size?$FL0?$FN?5?$DN?56?$AA@ DB 'size[0] = 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PCLMKNOH@gravity?$DN?9?4025?$AA@
CONST	SEGMENT
??_C@_0O@PCLMKNOH@gravity?$DN?9?4025?$AA@ DB 'gravity=-.025', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PGIFMKEI@alpha?$FL0?$FN?$DN?405?$AA@
CONST	SEGMENT
??_C@_0N@PGIFMKEI@alpha?$FL0?$FN?$DN?405?$AA@ DB 'alpha[0]=.05', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IMIJGEKO@alpha?$FL?45?$FN?$DN?41?$AA@
CONST	SEGMENT
??_C@_0N@IMIJGEKO@alpha?$FL?45?$FN?$DN?41?$AA@ DB 'alpha[.5]=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMNPBENO@lifespan?$DN1?54?54?5?$AA@
CONST	SEGMENT
??_C@_0BA@IMNPBENO@lifespan?$DN1?54?54?5?$AA@ DB 'lifespan=1 4 4 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EINDNJOB@id?$DN$GROUND_DUSTCLOUD?$AA@
CONST	SEGMENT
??_C@_0BF@EINDNJOB@id?$DN$GROUND_DUSTCLOUD?$AA@ DB 'id=$GROUND_DUSTCLOUD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 350', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LHMMPMII@emissiontarget?$DNsphere?50?50?50?5150?5@
CONST	SEGMENT
??_C@_0CI@LHMMPMII@emissiontarget?$DNsphere?50?50?50?5150?5@ DB 'emission'
	DB	'target=sphere 0 0 0 150 150 900', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JLJIHBEI@emissiontarget?$DNsphere?50?50?5?95?5450@
CONST	SEGMENT
??_C@_0CJ@JLJIHBEI@emissiontarget?$DNsphere?50?50?5?95?5450@ DB 'emission'
	DB	'target=sphere 0 0 -5 450 450 300', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LLKDFFFO@emissiontarget?$DNsphere?50?50?50?5275?5@
CONST	SEGMENT
??_C@_0CJ@LLKDFFFO@emissiontarget?$DNsphere?50?50?50?5275?5@ DB 'emission'
	DB	'target=sphere 0 0 0 275 275 1150', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
CONST	SEGMENT
??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@ DB 'size[1] =40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
CONST	SEGMENT
??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@ DB 'size[0] =10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BNINOCFC@light?$FL1?40?5?$FN?$DN000?$AA@
CONST	SEGMENT
??_C@_0BA@BNINOCFC@light?$FL1?40?5?$FN?$DN000?$AA@ DB 'light[1.0 ]=000', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ??_C@_0BB@FFGDADM@light?$FL0?475?$FN?$DN111?5?$AA@
CONST	SEGMENT
??_C@_0BB@FFGDADM@light?$FL0?475?$FN?$DN111?5?$AA@ DB 'light[0.75]=111 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ELJIBEEI@color?$DN000?$AA@
CONST	SEGMENT
??_C@_09ELJIBEEI@color?$DN000?$AA@ DB 'color=000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
CONST	SEGMENT
??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@ DB 'light[1.0 ]=100', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
CONST	SEGMENT
??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@ DB 'light[0.75]=11.'
	DB	'8 ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
CONST	SEGMENT
??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@ DB 'light[0.0 ]=111', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@
CONST	SEGMENT
??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@ DB 'emissionrate=8', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0BE@BJELADEC@id?$DN$AIR_SMOKECLOUD2?$AA@
CONST	SEGMENT
??_C@_0BE@BJELADEC@id?$DN$AIR_SMOKECLOUD2?$AA@ DB 'id=$AIR_SMOKECLOUD2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
CONST	SEGMENT
??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@ DB 'light=1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JMGAKCCH@END?$AA@
CONST	SEGMENT
??_C@_03JMGAKCCH@END?$AA@ DB 'END', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@
CONST	SEGMENT
??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@ DB 'initialveloc'
	DB	'ity = 300, 50', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@
CONST	SEGMENT
??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@ DB 'color= 1,1,0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JAJHDPCO@id?$DNwillie_peter?$AA@
CONST	SEGMENT
??_C@_0BA@JAJHDPCO@id?$DNwillie_peter?$AA@ DB 'id=willie_peter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOKGBELC@initialvelocity?$DN40?$AA@
CONST	SEGMENT
??_C@_0BD@LOKGBELC@initialvelocity?$DN40?$AA@ DB 'initialvelocity=40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FOPKKJCB@size?$FL0?$FN?5?$DN?5?51?$AA@
CONST	SEGMENT
??_C@_0N@FOPKKJCB@size?$FL0?$FN?5?$DN?5?51?$AA@ DB 'size[0] =  1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BFINHBFN@color?$FL0?$FN?$DN?49?5?492?5?492?5?$AA@
CONST	SEGMENT
??_C@_0BF@BFINHBFN@color?$FL0?$FN?$DN?49?5?492?5?492?5?$AA@ DB 'color[0]='
	DB	'.9 .92 .92 ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GONGNDCP@id?$DNwater?9mist?$AA@
CONST	SEGMENT
??_C@_0O@GONGNDCP@id?$DNwater?9mist?$AA@ DB 'id=water-mist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KLPPPOIA@emissionmode?$DNEMITONWATERIMPACT?$AA@
CONST	SEGMENT
??_C@_0BP@KLPPPOIA@emissionmode?$DNEMITONWATERIMPACT?$AA@ DB 'emissionmod'
	DB	'e=EMITONWATERIMPACT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PAJPKMBC@emissionid?$DNwater?9mist?$AA@
CONST	SEGMENT
??_C@_0BG@PAJPKMBC@emissionid?$DNwater?9mist?$AA@ DB 'emissionid=water-mi'
	DB	'st', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@
CONST	SEGMENT
??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@ DB 'emission'
	DB	'target=sphere 0 0 2.5 25 25 -25', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CCCKONJB@emissionmode?$DNEMITONGROUNDIMPACT?$AA@
CONST	SEGMENT
??_C@_0CA@CCCKONJB@emissionmode?$DNEMITONGROUNDIMPACT?$AA@ DB 'emissionmo'
	DB	'de=EMITONGROUNDIMPACT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KLGIFKNB@inheritvelocity?5?$DN?5500?$AA@
CONST	SEGMENT
??_C@_0BG@KLGIFKNB@inheritvelocity?5?$DN?5500?$AA@ DB 'inheritvelocity = '
	DB	'500', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DKAELHAL@id?$DNsurface?9disturbance?$AA@
CONST	SEGMENT
??_C@_0BH@DKAELHAL@id?$DNsurface?9disturbance?$AA@ DB 'id=surface-disturb'
	DB	'ance', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OBFEHICO@color?$DN?48?5?475?5?47?5?$AA@
CONST	SEGMENT
??_C@_0BB@OBFEHICO@color?$DN?48?5?475?5?47?5?$AA@ DB 'color=.8 .75 .7 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@
CONST	SEGMENT
??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@ DB 'alpha[1.0]=0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@
CONST	SEGMENT
??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@ DB 'alpha[0.1]=.05', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBKKADNB@lifespan?$DN30?515?$AA@
CONST	SEGMENT
??_C@_0P@MBKKADNB@lifespan?$DN30?515?$AA@ DB 'lifespan=30 15', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ILHKNKHF@id?$DNsmoke?9lt?9brown?$AA@
CONST	SEGMENT
??_C@_0BC@ILHKNKHF@id?$DNsmoke?9lt?9brown?$AA@ DB 'id=smoke-lt-brown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DHPDJDLC@id?$DNsmoke?9black?9light?$AA@
CONST	SEGMENT
??_C@_0BF@DHPDJDLC@id?$DNsmoke?9black?9light?$AA@ DB 'id=smoke-black-ligh'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KIPDNKMJ@id?$DNsmoke?9black?9die?$AA@
CONST	SEGMENT
??_C@_0BD@KIPDNKMJ@id?$DNsmoke?9black?9die?$AA@ DB 'id=smoke-black-die', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PAEONPFN@id?$DNsmoke?9bomb?$AA@
CONST	SEGMENT
??_C@_0O@PAEONPFN@id?$DNsmoke?9bomb?$AA@ DB 'id=smoke-bomb', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JPJHHOKF@id?$DNsmoke?9black?$AA@
CONST	SEGMENT
??_C@_0P@JPJHHOKF@id?$DNsmoke?9black?$AA@ DB 'id=smoke-black', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EGFFABKB@size?$FL2?$FN?5?$DN?5200?$AA@
CONST	SEGMENT
??_C@_0O@EGFFABKB@size?$FL2?$FN?5?$DN?5200?$AA@ DB 'size[2] = 200', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GOOJEGOE@size?$FL1?$FN?5?$DN?5120?$AA@
CONST	SEGMENT
??_C@_0O@GOOJEGOE@size?$FL1?$FN?5?$DN?5120?$AA@ DB 'size[1] = 120', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JPIGPCNB@lifespan?$DN3?56?53?$AA@
CONST	SEGMENT
??_C@_0P@JPIGPCNB@lifespan?$DN3?56?53?$AA@ DB 'lifespan=3 6 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDAAIHCO@id?$DNsmoke_white_large?$AA@
CONST	SEGMENT
??_C@_0BF@HDAAIHCO@id?$DNsmoke_white_large?$AA@ DB 'id=smoke_white_large', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ??_C@_0N@BOOLJELB@size?$FL2?$FN?5?$DN?540?$AA@
CONST	SEGMENT
??_C@_0N@BOOLJELB@size?$FL2?$FN?5?$DN?540?$AA@ DB 'size[2] = 40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
CONST	SEGMENT
??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@ DB 'alpha[0.0]=.75', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FDGMOGLE@lifespan?$DN3?06?03?$AA@
CONST	SEGMENT
??_C@_0P@FDGMOGLE@lifespan?$DN3?06?03?$AA@ DB 'lifespan=3,6,3', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ??_C@_0P@KFDKNL@id?$DNsmoke_white?$AA@
CONST	SEGMENT
??_C@_0P@KFDKNL@id?$DNsmoke_white?$AA@ DB 'id=smoke_white', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DFBKCPDF@size?$FL1?$FN?5?$DN?520?5?$AA@
CONST	SEGMENT
??_C@_0O@DFBKCPDF@size?$FL1?$FN?5?$DN?520?5?$AA@ DB 'size[1] = 20 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCAOKLMD@size?$FL?41?$FN?5?$DN?55?$AA@
CONST	SEGMENT
??_C@_0N@JCAOKLMD@size?$FL?41?$FN?5?$DN?55?$AA@ DB 'size[.1] = 5', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0BA@CFLCCLMG@color?$DN?5?42?5?42?5?42?$AA@
CONST	SEGMENT
??_C@_0BA@CFLCCLMG@color?$DN?5?42?5?42?5?42?$AA@ DB 'color= .2 .2 .2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
CONST	SEGMENT
??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@ DB 'alpha[1.0]=.05', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@ DB 'alpha[0.1]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ??_C@_0BA@DLBOKEAJ@lifespan?$DN10?53?52?$AA@
CONST	SEGMENT
??_C@_0BA@DLBOKEAJ@lifespan?$DN10?53?52?$AA@ DB 'lifespan=10 3 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OPLCJMLD@id?$DNsmoke?9gun?$AA@
CONST	SEGMENT
??_C@_0N@OPLCJMLD@id?$DNsmoke?9gun?$AA@ DB 'id=smoke-gun', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLKGFAGB@size?$FL1?$FN?5?$DN?5150?$AA@
CONST	SEGMENT
??_C@_0O@GLKGFAGB@size?$FL1?$FN?5?$DN?5150?$AA@ DB 'size[1] = 150', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JDPNFBMN@lifespan?$DN7?54?$AA@
CONST	SEGMENT
??_C@_0N@JDPNFBMN@lifespan?$DN7?54?$AA@ DB 'lifespan=7 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PPIIMMGF@id?$DNsmoke?9napalm?$AA@
CONST	SEGMENT
??_C@_0BA@PPIIMMGF@id?$DNsmoke?9napalm?$AA@ DB 'id=smoke-napalm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCOOOPAE@id?$DNsmoke_light?$AA@
CONST	SEGMENT
??_C@_0P@PCOOOPAE@id?$DNsmoke_light?$AA@ DB 'id=smoke_light', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MLICHAJO@initialvelocity?$DN150?$AA@
CONST	SEGMENT
??_C@_0BE@MLICHAJO@initialvelocity?$DN150?$AA@ DB 'initialvelocity=150', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLANFECF@size?$FL1?$FN?5?$DN?52?$AA@
CONST	SEGMENT
??_C@_0M@KLANFECF@size?$FL1?$FN?5?$DN?52?$AA@ DB 'size[1] = 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@
CONST	SEGMENT
??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@ DB 'light[0]=1 1 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCKBLHOJ@id?$DNspark?$AA@
CONST	SEGMENT
??_C@_08FCKBLHOJ@id?$DNspark?$AA@ DB 'id=spark', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OFODHABP@emissiontarget?$DNsphere?50?50?50?5500?5@
CONST	SEGMENT
??_C@_0CK@OFODHABP@emissiontarget?$DNsphere?50?50?50?5500?5@ DB 'emission'
	DB	'target=sphere 0 0 0 500 500 -1825', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IGCOKIIN@emissiondomain?$DNsphere?50?50?50?5300?5@
CONST	SEGMENT
??_C@_0CJ@IGCOKIIN@emissiondomain?$DNsphere?50?50?50?5300?5@ DB 'emission'
	DB	'domain=sphere 0 0 0 300 300 -360', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FFNKHGDP@emissionid?$DNsmoke?9napalm?$AA@
CONST	SEGMENT
??_C@_0BI@FFNKHGDP@emissionid?$DNsmoke?9napalm?$AA@ DB 'emissionid=smoke-'
	DB	'napalm', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GODONKPG@emissionvelocity?5?$DN?5500?55?$AA@
CONST	SEGMENT
??_C@_0BJ@GODONKPG@emissionvelocity?5?$DN?5500?55?$AA@ DB 'emissionveloci'
	DB	'ty = 500 5', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CPKHOEDC@emissiontarget?$DNsphere?50?50?50?5300?5@
CONST	SEGMENT
??_C@_0CI@CPKHOEDC@emissiontarget?$DNsphere?50?50?50?5300?5@ DB 'emission'
	DB	'target=sphere 0 0 0 300 200 -50', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EKPBABMH@emissiondomain?$DNsphere?50?50?50?550?55@
CONST	SEGMENT
??_C@_0CG@EKPBABMH@emissiondomain?$DNsphere?50?50?50?550?55@ DB 'emission'
	DB	'domain=sphere 0 0 0 50 50 -10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LGLHINMO@emissionmode?$DNGROUNDIMPACT?$AA@
CONST	SEGMENT
??_C@_0BK@LGLHINMO@emissionmode?$DNGROUNDIMPACT?$AA@ DB 'emissionmode=GRO'
	DB	'UNDIMPACT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FOAJLFDI@emissionid?$DNfireball?9napalm?$AA@
CONST	SEGMENT
??_C@_0BL@FOAJLFDI@emissionid?$DNfireball?9napalm?$AA@ DB 'emissionid=fir'
	DB	'eball-napalm', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PGDMGMLL@size?$FL1?$FN?5?$DN?5?55?$AA@
CONST	SEGMENT
??_C@_0N@PGDMGMLL@size?$FL1?$FN?5?$DN?5?55?$AA@ DB 'size[1] =  5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JFLKBOOP@size?$FL0?$FN?5?$DN?5?540?$AA@
CONST	SEGMENT
??_C@_0O@JFLKBOOP@size?$FL0?$FN?5?$DN?5?540?$AA@ DB 'size[0] =  40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEDKNJPL@color?5?$DN?51?01?0?49?$AA@
CONST	SEGMENT
??_C@_0P@JEDKNJPL@color?5?$DN?51?01?0?49?$AA@ DB 'color = 1,1,.9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FJFLNPO@bounce?5?$DN?50?$AA@
CONST	SEGMENT
??_C@_0L@FJFLNPO@bounce?5?$DN?50?$AA@ DB 'bounce = 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GEFEOLOH@drag?5?$DN?5?425?$AA@
CONST	SEGMENT
??_C@_0L@GEFEOLOH@drag?5?$DN?5?425?$AA@ DB 'drag = .25', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NJJHFDJE@inheritvelocity?5?$DN?5?46?$AA@
CONST	SEGMENT
??_C@_0BF@NJJHFDJE@inheritvelocity?5?$DN?5?46?$AA@ DB 'inheritvelocity = '
	DB	'.6', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NFAAAKMP@id?$DNmk77fuel?$AA@
CONST	SEGMENT
??_C@_0M@NFAAAKMP@id?$DNmk77fuel?$AA@ DB 'id=mk77fuel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@
CONST	SEGMENT
??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@ DB 'initialvelocity=20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLFHFHAM@bounce?$DN?475?$AA@
CONST	SEGMENT
??_C@_0L@LLFHFHAM@bounce?$DN?475?$AA@ DB 'bounce=.75', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COBHKNCF@size?$FL1?$FN?5?$DN?5?41?5?$AA@
CONST	SEGMENT
??_C@_0O@COBHKNCF@size?$FL1?$FN?5?$DN?5?41?5?$AA@ DB 'size[1] = .1 ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJHMMMAM@size?$FL0?$FN?5?$DN?5?5?45?$AA@
CONST	SEGMENT
??_C@_0O@PJHMMMAM@size?$FL0?$FN?5?$DN?5?5?45?$AA@ DB 'size[0] =  .5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOPILEMA@light?$FL1?$FN?$DN1?5?42?50?5?$AA@
CONST	SEGMENT
??_C@_0BB@GOPILEMA@light?$FL1?$FN?$DN1?5?42?50?5?$AA@ DB 'light[1]=1 .2 0'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NOKCLINA@light?$FL0?$FN?$DN1?5?475?5?425?$AA@
CONST	SEGMENT
??_C@_0BD@NOKCLINA@light?$FL0?$FN?$DN1?5?475?5?425?$AA@ DB 'light[0]=1 .7'
	DB	'5 .25', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MNCFFKAH@lifespan?$DN?45?0?425?$AA@
CONST	SEGMENT
??_C@_0BA@MNCFFKAH@lifespan?$DN?45?0?425?$AA@ DB 'lifespan=.5,.25', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ??_C@_0P@OFCMCIFC@id?$DNmetal?9spark?$AA@
CONST	SEGMENT
??_C@_0P@OFCMCIFC@id?$DNmetal?9spark?$AA@ DB 'id=metal-spark', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
CONST	SEGMENT
??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@ DB 'gravity=-.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@INLOMCHG@size?$FL?44?$FN?5?$DN?5200?$AA@
CONST	SEGMENT
??_C@_0P@INLOMCHG@size?$FL?44?$FN?5?$DN?5200?$AA@ DB 'size[.4] = 200', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJCMLOAI@size?$FL?43?$FN?5?$DN?5130?$AA@
CONST	SEGMENT
??_C@_0P@PJCMLOAI@size?$FL?43?$FN?5?$DN?5130?$AA@ DB 'size[.3] = 130', 00H ; `string'
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ??_C@_0O@FLOODPOC@size?$FL?42?$FN?5?$DN?580?$AA@
CONST	SEGMENT
??_C@_0O@FLOODPOC@size?$FL?42?$FN?5?$DN?580?$AA@ DB 'size[.2] = 80', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
?PS_Data_High@@3PAPADA DD FLAT:??_C@_0N@NPMKIJFN@id?$DN$AIRBURST?$AA@ ; PS_Data_High
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@MGDODENE@size?$FL1?$FN?5?$DN?546?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@GIPDCHNF@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@GNCLOJNJ@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BC@CKPPNFOF@id?$DN$AIR_DUSTCLOUD?$AA@
	DD	FLAT:??_C@_0O@PENCCBL@lifespan?$DN5?53?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0BC@LFILNNBO@id?$DN$AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BK@ELDMECJF@id?$DN$AIR_HANGING_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@DCFKAHOJ@lifespan?$DN6?55?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_0O@GNGNJCIK@size?$FL1?$FN?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BE@ELDBEALN@inheritvelocity?5?$DN?91?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@ECBEFOL@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PCHDIJHE@emissionrate?$DN80?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CK@PLBMAEHF@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0BE@LMBAKCOF@id?$DN$AIR_PENETRATION?$AA@
	DD	FLAT:??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@PAKJMFCI@color?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BD@OPOCGCBG@id?$DN$AIR_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BE@BJELADEC@id?$DN$AIR_SMOKECLOUD2?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BI@KKOIHABH@id?$DN$ARTILLERY_EXPLOSION?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BG@MHDLGOGF@emissionvelocity?5?$DN?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CD@CILPDGMJ@emissionid?$DNburning_trail_artille@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@EBHOHBC@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CF@MMKGBMKL@emissionid?$DNartillery?9explosion?9s@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BE@KIDIBAGM@id?$DN$BILLOWING_SMOKE?$AA@
	DD	FLAT:??_C@_0N@CLEBDGKI@lifespan?$DN6?54?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0N@BOHBDNAM@alpha?$FL1?$FN?$DN?412?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0O@HIDCMKOG@id?$DN$BIG_SMOKE?$AA@
	DD	FLAT:??_C@_0N@BJHHFECK@lifespan?$DN6?56?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BB@GMPMGEMO@id?$DN$BURNING_PART?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0O@BBGGNNJM@lifespan?$DN4?5?45?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@KFPBDCCM@emissiontarget?$DNsphere?50?50?50?570?57@
	DD	FLAT:??_C@_0O@HNCOFJKI@id?$DN$CAMP_FIRE?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BF@GGNPEICK@initialvelocity?$DN4?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CD@EPCFCMCG@id?$DN$CAMP_HIT_EXPLOSION_DEBRISTRA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BA@PDEKPAAI@id?$DN$DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0N@MJOAOLP@lifespan?$DN3?05?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@NJLOPFGB@trailid?5?$DN?523?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@NGNKADPG@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@GGJKHFMB@emissiontarget?$DNsphere?50?50?50?570?57@
	DD	FLAT:??_C@_0BD@KBNPHALI@id?$DN$DIST_AIRBURSTS?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0P@IFIBKMAP@id?$DN$DIST_ARMOR?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BG@PCODNBA@id?$DN$DIST_GROUNDBURSTS?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
	DD	FLAT:??_C@_0BC@NOKOEKKI@id?$DN$DIST_INFANTRY?$AA@
	DD	FLAT:??_C@_0M@NBJHNIIK@lifespan?$DN1?5?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@DEJOAEPI@alpha?$FL1?$FN?$DN?401?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@
	DD	FLAT:??_C@_0BL@HMIMJBLA@id?$DN$FEATURE_CHAIN_REACTION?$AA@
	DD	FLAT:??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@GBAJKOAH@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0BB@POMBHPNK@id?$DN$FIRE_NOSMOKE?$AA@
	DD	FLAT:??_C@_0L@FFHFPADP@alpha?5?$DN?5?46?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0M@JLFFMKNL@lifespan?$DN10?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BD@NIPOOLFL@initialvelocity?$DN?55?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@MGJNJBIA@gravity?$DN?9?415?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_08DLIHAKJN@id?$DN$FIRE?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@LLACFKBM@gravity?$DN?5?9?415?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NKNINEEN@initialvelocity?$DN10?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_09EINIGPEB@id?$DN$FIRE1?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_09GDPFDMIC@id?$DN$FIRE2?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BB@FFGDADM@light?$FL0?475?$FN?$DN111?5?$AA@
	DD	FLAT:??_C@_0BA@BNINOCFC@light?$FL1?40?5?$FN?$DN000?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@GNJILJBE@gravity?$DN?5?9?43?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_09HKOOANMD@id?$DN$FIRE3?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0BB@POMJLDMH@alpha?$FL?475?$FN?5?$DN?5?415?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@JLPHPABM@gravity?$DN?92?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@DNKAEFDE@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@PFDALCIF@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_09DFKPJLAE@id?$DN$FIRE4?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_09CMLEKKEF@id?$DN$FIRE5?$AA@
	DD	FLAT:??_C@_08EHCBAOIP@alpha?$DN?49?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@BDMECEEP@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0N@LGANEGNH@id?$DN$FIRE_MED?$AA@
	DD	FLAT:??_C@_0N@CCFLMPMM@lifespan?$DN6?04?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@PMEHIOPA@alpha?$FL1?$FN?$DN?409?$AA@
	DD	FLAT:??_C@_0N@IAFKDPAA@color?$DN0?51?51?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CI@LFLEDPLF@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@
	DD	FLAT:??_C@_0N@MGIGCBGC@id?$DN$FIRE_HOT?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0O@ELAALOKM@id?$DN$FIRETRAIL?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BB@OBNHMAPM@id?$DN$FLAMING_PART?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_09IHNEPFAK@id?$DN$FLAME?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0N@NCIFHANK@lifespan?$DN8?55?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@CJIAKJJM@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0O@IGCMJGFD@id?$DN$FIRESMOKE?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@EDOLNOCG@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0BF@NHKHNBBK@id?$DN$GROUND_EXPLOSION?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OMPPJJON@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@IOBLKNA@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@LLKDFFFO@emissiontarget?$DNsphere?50?50?50?5275?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BA@KHCMDJFE@id?$DN$GROUND_GLOW?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@
	DD	FLAT:??_C@_0BC@CELBCFKB@id?$DN$GROUND_STRIKE?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MAANALKL@emissiontarget?$DNsphere?50?50?50?575?57@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BJ@BOPPJKF@id?$DN$GROUND_STRIKE_NOFIRE?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@CJEICDMN@emissiondomain?$DNsphere?50?50?5?95?50?50@
	DD	FLAT:??_C@_0CJ@JLJIHBEI@emissiontarget?$DNsphere?50?50?5?95?5450@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CI@LHMMPMII@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BA@IMJDMFII@id?$DN$GROUNDBURST?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0L@DJEMGAJE@soundid?$DN56?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BF@EINDNJOB@id?$DN$GROUND_DUSTCLOUD?$AA@
	DD	FLAT:??_C@_0BA@IMNPBENO@lifespan?$DN1?54?54?5?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@IMIJGEKO@alpha?$FL?45?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@PGIFMKEI@alpha?$FL0?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0O@PCLMKNOH@gravity?$DN?9?4025?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BH@NBMKEJOG@id?$DN$GROUND_PENETRATION?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@CBCCDJGD@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BI@MBDBIDEG@emissionvelocity?5?$DN?5150?5?$AA@
	DD	FLAT:??_C@_0O@MLKAKLOM@id?$DN$GUN_SMOKE?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CF@MGAFKFD@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CF@JHPBBIEF@emissiontarget?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0P@GMFJCJGA@id?$DN$GUN_TRACER?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0O@NONFMPNI@color?$DN1?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BB@HIILHAJD@id?$DN$GROUND_FLASH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@GJBGJKJF@size?$FL0?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0N@KEJJDDDL@size?$FL1?$FN?5?$DN?512?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PMABBLCN@emissiontarget?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0BK@BOENNBLF@id?$DN$HIT_EXPLOSION_NOSMOKE?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@IDCGFJI@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@DHFAAKPP@emissionrate?$DN8?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BC@PEOAIHLO@id?$DN$HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OPEDEGMO@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BO@LCJKCFLC@id?$DN$HIT_EXPLOSION_DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BJ@LDJIOIJ@id?$DN$INCENDIARY_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GCDCFMMJ@emissiontarget?$DNsphere?50?50?50?5225?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@LGCGLIND@emissiontarget?$DNsphere?50?50?50?575?57@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CG@HANJFIBA@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@FHEMAIGA@emissionvelocity?5?$DN?5150?525?$AA@
	DD	FLAT:??_C@_0BA@PMLMOFPL@id?$DN$LIGHT_CLOUD?$AA@
	DD	FLAT:??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@
	DD	FLAT:??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@KKBIOKGK@emissionid?$DNsmoke_light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0BH@HFMOMDEA@id?$DN$LONG_HANGING_SMOKE?$AA@
	DD	FLAT:??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@DFJBCOME@gravity?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MJKNMKND@emissionid?$DNfireball?9airburst?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BI@JLNJNLCC@id?$DN$LONG_HANGING_SMOKE2?$AA@
	DD	FLAT:??_C@_0N@JIFDMPGC@lifespan?$DN4?55?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BC@JGGLEOFL@id?$DN$MISSILE_BURST?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0O@HEKHADOL@size?$FL0?$FN?5?$DN?5?450?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@NGPANIIC@gravity?$DN?45?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BF@HFJCNHA@inheritvelocity?5?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@ONNCBAJM@emissionid?$DNfireball?9mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LEOEHEME@emissionrate?$DN3?5?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DEOLNCLL@emissionid?$DNfirework?9mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@LHGLIMAG@emissionid?$DNburning_trail_mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BG@MADCMGLJ@emissionvelocity?5?$DN?510?$AA@
	DD	FLAT:??_C@_0BD@FMNPLEI@id?$DN$MISSILE_LAUNCH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0M@PKILIDLA@soundid?$DN267?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CE@KGGMINGB@id?$DN$RISING_GROUNDHIT_EXPLOSION_D@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08FODKDPMO@alpha?$DN?48?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HLDEAHKB@emissionvelocity?5?$DN?5100?530?$AA@
	DD	FLAT:??_C@_0P@GHGHEOBE@id?$DN$SAM_LAUNCH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0M@PKILIDLA@soundid?$DN267?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PAJIFLGH@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@GBHEDIKD@emissiontarget?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0N@DHONCOBK@id?$DNshockring?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0L@OIFHBIBO@size?$FL0?$FN?5?$DN5?$AA@
	DD	FLAT:??_C@_0P@FAGEKMHO@size?$FL1?$FN?5?$DN?5400?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BE@DLGOHGKO@id?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0P@CKKEPPBO@size?$FL1?$FN?5?$DN?5600?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_0M@GFIIHJFL@gravity?$DN0?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BD@DIKHDJLI@id?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0N@NEBGBGGP@color?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0P@KIPEGIMP@size?$FL1?$FN?5?$DN?5900?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BI@IACFBGFD@id?$DN$SMALL_AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@LGJGAOBB@lifespan?$DN1?54?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@BNEILPAD@emissionid?$DNfirework?9airburst?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BI@MBEOEMPD@id?$DN$SMALL_HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@GDFOKGMP@gravity?$DN?48?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@NHAAPNBM@emissiontarget?$DNsphere?50?50?50?58?58?5@
	DD	FLAT:??_C@_0L@DCNCCIDG@id?$DN$SPARKS?$AA@
	DD	FLAT:??_C@_0L@CIACAEHK@alpha?5?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BB@IMDCMCBL@id?$DN$SMOKING_PART?$AA@
	DD	FLAT:??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BA@CCGJCBMA@id?$DN$TRACER_FIRE?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0O@BCHPMPEG@color?$DN0?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0O@DPKOPDIK@id?$DN$TRAILDUST?$AA@
	DD	FLAT:??_C@_0P@HKBPOAAH@lifespan?$DN2?53?52?$AA@
	DD	FLAT:??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0O@FMLMLDCN@size?$FL?45?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0O@PCLMKNOH@gravity?$DN?9?4025?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@HHAMCFBE@emissionid?$DNdust?9trail?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BF@BBOMJOJD@id?$DN$TRAIL_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0N@CAOPKIAH@lifespan?$DN5?55?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@GCMEKDHO@alpha?$FL1?$FN?$DN?407?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0M@OEEMMCOC@size?$FL1?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0P@PFCEKLMO@id?$DN$TRAIL_FIRE?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BD@FLFHIMFN@id?$DN$TRAIL_FIREBALL?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BD@EPCLPLBJ@id?$DN$VEHICLE_DIEING?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@LDJADCPG@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BF@FGHJFBEN@id?$DN$VEHICLE_DIE_FIRE?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0BJ@FMCCLCMF@id?$DN$VEHICLE_DIE_FIREBALL?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CDJJNGAN@alpha?$FL1?$FN?$DN?406?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@GCCEAPM@id?$DN$VEHICLE_DIE_FIREBALL2?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@JKOHNLFP@alpha?$FL1?$FN?$DN?417?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@NBOEIEFC@inheritvelocity?5?$DN?5?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CC@FBDJCNMJ@id?$DN$VEHICLE_DIE_INTERMITTENT_FIR@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JCCCCNAL@size?$FL1?$FN?5?$DN?570?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@IPLMLIDI@initialvelocity?$DN?9100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@LAMIBGDA@emissionrate?$DN7?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0BG@ILEDGIJM@id?$DN$VEHICLE_DIE_SMOKE?$AA@
	DD	FLAT:??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BH@BEECMIHG@id?$DN$VEHICLE_DIE_SMOKE2?$AA@
	DD	FLAT:??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@LDJLPAEP@id?$DN$VEHICLE_TAIL_SCRAPE?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_09BGBMLHEA@size?5?$DN?550?$AA@
	DD	FLAT:??_C@_0BD@FKECPACN@inheritvelocity?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@LNNKCNDM@emissionid?$DNmetal?9spark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BD@JMKOOIH@id?$DN$VERTICAL_SMOKE?$AA@
	DD	FLAT:??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BB@BPKOJNKP@id?$DN$CLUSTER_BOMB?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@MLOBPKFE@lifespan?$DN1?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@ILAIBNFH@emissionid?$DNcbu?9submunition?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BE@HHMLCPEK@emissionrate?$DN100?0?41?$AA@
	DD	FLAT:??_C@_0CE@JKGCHAKG@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@KKEODCGE@emissiontarget?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@ENGLOHLM@emissionid?$DNcbu?9smoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HCNHCNKD@emissiontarget?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0BD@HBGMMAHB@id?$DNcbu?9submunition?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0P@CKHNHCMM@lifespan?$DN200?01?$AA@
	DD	FLAT:??_C@_08DCMNPAHH@size?5?$DN?51?$AA@
	DD	FLAT:??_C@_0L@DLMPKIN@drag?5?$DN?5?401?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0M@LPKGOBOP@soundid?$DN171?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BE@MNEJLCHF@initialvelocity?$DN100?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@NJGOBMAE@emissionid?$DNcbu?9sub?9explosion?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@LHAOCJMH@emissiondomain?$DNsphere?50?50?5?910?50?5@
	DD	FLAT:??_C@_0CI@EPCCHEFC@emissiontarget?$DNsphere?50?50?5?910?520@
	DD	FLAT:??_C@_0BD@CAACFALA@id?$DN$GUN_HIT_OBJECT?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@
	DD	FLAT:??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@CFJKPIKN@emissionid?$DNdust?9grey?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BD@MKNIEFKB@id?$DN$GUN_HIT_GROUND?$AA@
	DD	FLAT:??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@MBIFHKL@inheritvelocity?$DN?43?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MMCCCLNN@emissiontarget?$DNsphere?50?50?50?5?42?5?4@
	DD	FLAT:??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@MCFIACLE@emissionid?$DNsmoke?9gun?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0O@MKHNPICB@id?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0M@JLIFJGOA@id?$DNgun_dust?$AA@
	DD	FLAT:??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BB@KJPMHGJF@color?5?$DN?5?46?5?45?5?44?$AA@
	DD	FLAT:??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0P@NPCEFJNO@size?$FL1?$FN?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@CKMJOPJM@gravity?$DN0?46?$AA@
	DD	FLAT:??_C@_0BG@EKIHLOI@visabledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0BB@NMDNBHOL@id?$DN$ROCKET_BURST?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@EDOJNDOO@inheritvelocity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@LLHMOCAM@emissionid?$DNrocket_impact?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BB@DAGIAIFM@id?$DNrocket_impact?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@BMLFHELP@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BE@GNAKLHLJ@emissionvelocity?$DN25?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BF@CHFECFDN@emissionvelocity?$DN25?5?$AA@
	DD	FLAT:??_C@_08GIDCOGNC@id?$DNagm88?$AA@
	DD	FLAT:??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BF@LNPLJGJA@inheritvelocity?5?$DN?5?42?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@MANNLPLE@emissionid?$DNagm88?9impact?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0M@HMAGMDHJ@id?$DNDURANDAL?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@PNJIPNLE@emissionvelocity?5?$DN?5125?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CI@NOLKNOAH@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0N@GNMLDDOC@id?$DNlarge_agm?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@CBJFDLOC@soundid?$DN47?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDFJMBGM@inheritvelocity?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EGLBOBOE@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@FMPCAODC@emissionvelocity?5?$DN?550?520?$AA@
	DD	FLAT:??_C@_07NIOJMECE@id?$DNmk82?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_08LNMOOGAF@alpha?$DN?43?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@
	DD	FLAT:??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@GFFGMMFB@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_07IOLDGDKC@id?$DNmk84?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0N@IJHCHBHP@dieonground?$DN?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OBBBJMFK@emissiontarget?$DNsphere?50?50?50?5750?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NDLIHBKA@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OJIIIECF@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@GLPAMNPG@emissionvelocity?5?$DN?5150?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NIJNLGPM@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@OAGMBNOM@emissionvelocity?5?$DN?580?520?$AA@
	DD	FLAT:??_C@_07IJGHPIOH@id?$DNm118?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@JDEADGPJ@emissiontarget?$DNsphere?50?50?50?5650?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BOKAPILO@emissiontarget?$DNsphere?50?50?50?5540?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@BNKLJNDA@emissiontarget?$DNsphere?50?50?50?5600?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0M@CDJJPCCG@id?$DNmaverick?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@CFLFOFGH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FJAAHLBF@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0BB@KGHELNPN@id?$DNmaverick_miss?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@
	DD	FLAT:??_C@_0P@DFJFBNFK@alpha?$FL1?$FN?$DN0?401?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@LJNNGPGP@emissionrate?$DN15?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_07KOMCHHFM@id?$DNmk77?$AA@
	DD	FLAT:??_C@_0BF@MAIMGCNF@inheritvelocity?5?$DN?5?47?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@BMLJPFMH@color?5?$DN?51?0?51?0?50?$AA@
	DD	FLAT:??_C@_0L@CGOOPMID@size?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0N@KPHNFHD@bounce?5?$DN?5?425?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0BA@NCDHFMME@soundlooped?$DN114?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@DNHBIADA@emissionid?$DNmk77fuel?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0BE@BNOKMGCK@emissionvelocity?$DN80?$AA@
	DD	FLAT:??_C@_0CG@EEBDAJGB@emissiondomain?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0CJ@CBCLODIM@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0L@LELJMOEK@id?$DNNUCLEAR?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@GHMOJGKO@visibledistance?$DN80000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CM@HOFBLKHD@emissiontarget?$DNsphere?50?50?50?56500@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CM@FPMPMBKK@emissiontarget?$DNsphere?50?50?50?53000@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CN@CCEGGAGB@emissiontarget?$DNsphere?50?50?50?53000@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_05HBLEPGBM@id?$DNwp?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@FHPPCBKL@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@HPPIHIOD@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@OHGBBADL@emissionrate?$DN200?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@
	DD	FLAT:??_C@_0M@EGNFGPPD@id?$DNwp_small?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@JCCMOMIF@emissiontarget?$DNsphere?50?50?50?5175?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IOIKBCND@emissiontarget?$DNsphere?50?50?50?5175?5@
	DD	FLAT:??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@
	DD	FLAT:??_C@_0BA@GKIPAFOO@id?$DNagm88?9impact?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BF@EIHPOAKB@inheritvelocity?$DN?4001?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BN@PPACACIE@id?$DNartillery?9explosion?9smoke?$AA@
	DD	FLAT:??_C@_0N@MOAJGIOE@lifespan?$DN4?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@NPBKNFNG@id?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0M@LEIHGBBO@lifespan?$DN?52?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BK@KIPCPPCG@id?$DNburning_trail_airburst?$AA@
	DD	FLAT:??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BL@EMFDDKCN@id?$DNburning_trail_artillery?$AA@
	DD	FLAT:??_C@_09CGMHLPMP@alpha?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@
	DD	FLAT:??_C@_0M@HKNALIAD@gravity?$DN?5?46?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BG@ENBFKFFA@id?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_08IFGGKJIN@alpha?$DN?51?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0M@PLMGPHNJ@lifespan?$DN?55?$AA@
	DD	FLAT:??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BK@LABOKNDE@id?$DNburning_trail_durandal?$AA@
	DD	FLAT:??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@
	DD	FLAT:??_C@_0N@HCAHIHIL@color?$DN?50?00?00?$AA@
	DD	FLAT:??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@KFHEHHEO@initialvelocity?5?$DN?580?0?530?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@
	DD	FLAT:??_C@_0BK@JACNKCEM@id?$DNburning_trail_maverick?$AA@
	DD	FLAT:??_C@_09CGMHLPMP@alpha?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@
	DD	FLAT:??_C@_0M@EIOGNKIB@gravity?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BJ@BDNEGNNK@id?$DNburning_trail_missile?$AA@
	DD	FLAT:??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BI@LCNPKBND@initialvelocity?5?$DN?550?0?55?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BF@IMNHFLCP@id?$DNburning_trail_mis?$AA@
	DD	FLAT:??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BG@IPJEEECA@initialvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0BB@CKEDNFGC@id?$DNburning?9trail?$AA@
	DD	FLAT:??_C@_09DPNMIOIO@alpha?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@LJFLFECO@color?$DN?51?00?00?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@CDFBBNOL@trailid?5?$DN?529?$AA@
	DD	FLAT:??_C@_0N@GAIBHJLL@id?$DNcbu?9smoke?$AA@
	DD	FLAT:??_C@_0P@FPIJOBBG@lifespan?$DN5?02?45?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BA@BIMKDNBC@color?$DN?49?5?49?5?49?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_08PCFOCCDI@drag?$DN?499?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0BF@OCNCMLCN@id?$DNcbu?9sub?9explosion?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@GHLDOAGA@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@FHACCPMI@emissionid?$DNfireball?9cbu?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@HDEADFCB@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BP@GGPFFECL@emissionid?$DNsurface?9disturbance?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CB@ODJDKCAL@emissiondomain?$DNsphere?50?50?500?50?50@
	DD	FLAT:??_C@_0CH@OAELAPM@emissiontarget?$DNsphere?50?50?510?560?5@
	DD	FLAT:??_C@_0P@MGIDGNHC@id?$DNcbu?9sparkle?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@
	DD	FLAT:??_C@_0N@JFFKOIMK@id?$DNcbu?9spark?$AA@
	DD	FLAT:??_C@_0P@PHCCNOCP@lifespan?$DN?45?5?43?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BA@MHJFEBFH@light?$FL1?$FN?$DN1?51?5?45?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@
	DD	FLAT:??_C@_0M@OAPPKFNP@id?$DNdust?9CBU?$AA@
	DD	FLAT:??_C@_0P@CAFLDAMI@lifespan?$DN1?52?56?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@IMIJGEKO@alpha?$FL?45?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0O@PIJLCAGE@id?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0P@LHGGDAL@lifespan?$DN1?52?55?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@LOLPAGCM@alpha?$FL?45?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@
	DD	FLAT:??_C@_0M@FPNPAABB@size?$FL0?$FN?5?$DN15?$AA@
	DD	FLAT:??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0O@LKHILIGC@size?$FL1?$FN?5?$DN?560?5?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0N@IHAGGKK@id?$DNdust?9grey?$AA@
	DD	FLAT:??_C@_0P@LBEDDDKC@lifespan?$DN3?53?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@NCBGGIAI@color?$DN?5?45?5?45?5?45?$AA@
	DD	FLAT:??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0O@BAHBHAOJ@size?$FL1?$FN?5?$DN?540?5?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0O@OJEFFKCJ@id?$DNdust?9trail?$AA@
	DD	FLAT:??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0BE@IGDAMGOC@id?$DNelectrical?9flash?$AA@
	DD	FLAT:??_C@_0O@NMBBHLJD@lifespan?$DN1?0?42?$AA@
	DD	FLAT:??_C@_0O@PKPHANAA@alpha?$FL0?5?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@CKAHMEHL@alpha?$FL?41?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@FAMHJHBL@alpha?$FL?43?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0N@GMPIOEMI@alpha?$FL?44?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@MJOIMJME@alpha?$FL?45?$FN?$DN0?5?$AA@
	DD	FLAT:??_C@_0O@JHMIIHON@alpha?$FL?46?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@KFEHDBNL@alpha?$FL?47?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0N@BLDKCELD@alpha?$FL?48?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@LOCKAJLP@alpha?$FL?49?$FN?$DN0?5?$AA@
	DD	FLAT:??_C@_0O@OKBFEBGM@light?$DN?48?5?49?51?$AA@
	DD	FLAT:??_C@_0M@CEGDDGLP@size?$FL0?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0O@NENBNGIC@size?$FL?41?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0N@LMEEMGEA@size?$FL?42?$FN?5?$DN25?$AA@
	DD	FLAT:??_C@_0O@JGPENBPP@size?$FL?43?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0N@MHENKIAM@size?$FL?44?$FN?5?$DN34?$AA@
	DD	FLAT:??_C@_0O@FAJLNIHI@size?$FL?45?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0N@CMGHCHFH@size?$FL?46?$FN?5?$DN21?$AA@
	DD	FLAT:??_C@_0O@BCLONPAF@size?$FL?47?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0N@COIPIHDO@size?$FL?48?$FN?5?$DN47?$AA@
	DD	FLAT:??_C@_0O@HDEMNDH@size?$FL?49?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BA@BEENCEDP@id?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@
	DD	FLAT:??_C@_0BF@PCBBBNPK@id?$DNfireball?9airburst?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@PNFAJFJC@id?$DNfireball?9cbu?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@OMNBANCA@size?$FL1?$FN?5?$DN?555?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BE@OHECPIEH@id?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BD@FPEKHDAD@id?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0O@BKBOGFHE@color?$DN?48?5?45?50?$AA@
	DD	FLAT:??_C@_0N@HPKPPGOF@lifespan?$DN5?03?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@ILDHADJ@id?$DNfireball?9muzzle?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0M@FBOCLMKP@size?$FL1?$FN?5?$DN?58?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BB@JEAIKIHN@id?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@GPCLCMND@size?$FL1?$FN?5?$DN?5130?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@JABJNNJK@initialvelocity?$DN30?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FICPDDBL@emissionid?$DNflash?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@DEOEAPDL@id?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BPAIPMIP@emissionid?$DNflash?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@ELBJNHDE@id?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@OEFDJFIN@gravity?$DN?5?48?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@LFADNEAB@initialvelocity?$DN1?54?$AA@
	DD	FLAT:??_C@_0BC@BFGKDBGO@id?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BA@EHIAKKMG@id?$DNfireball?9mis?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0M@IDNGFHDM@size?$FL1?$FN?5?$DN50?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@KJPGNPAO@id?$DNfireball?9short?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0O@NEPAJHIE@lifespan?$DN2?0?45?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0M@ICBEDNAL@size?$FL1?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@INBMONCC@initialvelocity?$DN40?510?$AA@
	DD	FLAT:??_C@_0BD@KEGNGIBO@id?$DNfireball?9napalm?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@EKEEBNKJ@alpha?$FL1?$FN?$DN0?43?5?$AA@
	DD	FLAT:??_C@_09ELJIBEEI@color?$DN000?$AA@
	DD	FLAT:??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@
	DD	FLAT:??_C@_0M@CCKIPEFE@size?$FL0?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0N@HJADMJJP@size?$FL1?$FN?5?$DN150?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@NMGOPFII@gravity?$DN?55?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0P@PAPJLOCE@id?$DNfireball?960?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@OAJKJPGL@emissionid?$DNsmoke?9lt?9brown?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BC@BCNMOJLH@emissionrate?$DN1?5?45?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BD@GHGKJEFA@emissionrate?$DN10?5?45?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FJAAHLBF@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BE@GBCEBKNA@id?$DNfire?9short?9small?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CH@PPIPKKH@emissiontarget?$DNsphere?50?50?50?570?57@
	DD	FLAT:??_C@_0BB@MGDFIOHH@id?$DNfire?960?9small?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@FJEBMCHJ@emissiontarget?$DNsphere?50?50?55?5100?5@
	DD	FLAT:??_C@_0BC@LKMFPJKO@id?$DNfirework?9small?$AA@
	DD	FLAT:??_C@_0O@LNOKJHOI@lifespan?$DN1?5?41?$AA@
	DD	FLAT:??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@LILAHGMN@emissionid?$DNcbu?9spark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@JOHFGIBM@emissionid?$DNcbu?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@HPILLKLD@emissionrate?$DN5?51?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BF@CGPEGICK@id?$DNfirework?9airburst?$AA@
	DD	FLAT:??_C@_0N@EEIDGNAD@lifespan?$DN5?51?$AA@
	DD	FLAT:??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@
	DD	FLAT:??_C@_0L@DKBAPKPK@size?$FL1?$FN?5?$DN4?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0BC@PNEHOBIJ@id?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@
	DD	FLAT:??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BA@JOLJGIOB@id?$DNfirework?9mis?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0L@KHBGIONJ@size?$FL0?$FN?5?$DN2?$AA@
	DD	FLAT:??_C@_0L@EHGHAOLP@size?$FL1?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@NPPMBNJL@initialvelocity?$DN200?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BE@OJKMCAOI@id?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@
	DD	FLAT:??_C@_0M@HJNKMLLN@alpha?$FL0?$FN?$DN?51?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0P@LAOOHOMB@id?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BA@FCCKLFHP@light?$FL0?40?5?$FN?$DN111?$AA@
	DD	FLAT:??_C@_0BC@KAKBLLBE@light?$FL0?475?$FN?$DN11?48?5?$AA@
	DD	FLAT:??_C@_0BA@KFDBIFDH@light?$FL1?40?5?$FN?$DN100?$AA@
	DD	FLAT:??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@
	DD	FLAT:??_C@_0O@EPALALCM@alpha?$FL1?$FN?$DN0?44?5?$AA@
	DD	FLAT:??_C@_0M@BKJLBNNM@color?$DN1?01?00?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0N@FFNEGKKI@size?$FL0?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@PNNNILEB@gravity?$DN?46?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@PKNJGIMD@initialvelocity?$DN10?51?$AA@
	DD	FLAT:??_C@_08IOEFGHLG@id?$DNflash?$AA@
	DD	FLAT:??_C@_0P@CLKPKFHG@lifespan?$DN?43?0?42?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0M@CBCMCADK@size?$FL0?$FN?5?$DN30?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0N@BCELEJIM@id?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@MGGGEMCG@id?$DNflash?9bomb?$AA@
	DD	FLAT:??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0N@DCOCGCII@id?$DNflash?9mav?$AA@
	DD	FLAT:??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0M@EACBBCGB@id?$DNflash?960?$AA@
	DD	FLAT:??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@NMHEPABG@alpha?$FL1?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0M@PKFPCHD@light?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JFCLIFNH@size?$FL1?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BK@GNIJFPPC@id?$DNground?9explosion?9smoke?$AA@
	DD	FLAT:??_C@_0BB@NKAHJMFH@lifespan?$DN2?52?52?51?$AA@
	DD	FLAT:??_C@_0N@IMBPNFBB@alpha?$FL0?5?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0N@CFCOEEDK@alpha?$FL?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FKNAIHLD@alpha?$FL?43?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@DEGGKELO@alpha?$FL?44?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0O@FLOODPOC@size?$FL?42?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0P@PJCMLOAI@size?$FL?43?$FN?5?$DN?5130?$AA@
	DD	FLAT:??_C@_0P@INLOMCHG@size?$FL?44?$FN?5?$DN?5200?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@OFCMCIFC@id?$DNmetal?9spark?$AA@
	DD	FLAT:??_C@_0BA@MNCFFKAH@lifespan?$DN?45?0?425?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0BD@NOKCLINA@light?$FL0?$FN?$DN1?5?475?5?425?$AA@
	DD	FLAT:??_C@_0BB@GOPILEMA@light?$FL1?$FN?$DN1?5?42?50?5?$AA@
	DD	FLAT:??_C@_0M@EIKFOEFM@size?$FL0?$FN?5?$DN?45?$AA@
	DD	FLAT:??_C@_0O@COBHKNCF@size?$FL1?$FN?5?$DN?5?41?5?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@LLFHFHAM@bounce?$DN?475?$AA@
	DD	FLAT:??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@
	DD	FLAT:??_C@_0M@NFAAAKMP@id?$DNmk77fuel?$AA@
	DD	FLAT:??_C@_0BF@NJJHFDJE@inheritvelocity?5?$DN?5?46?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0L@GEFEOLOH@drag?5?$DN?5?425?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0L@FJFLNPO@bounce?5?$DN?50?$AA@
	DD	FLAT:??_C@_0P@JEDKNJPL@color?5?$DN?51?01?0?49?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0M@CEGDDGLP@size?$FL0?$FN?5?$DN40?$AA@
	DD	FLAT:??_C@_0L@CDALMLLL@size?$FL1?$FN?5?$DN5?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@
	DD	FLAT:??_C@_0M@DCEJGBCB@?5addemitter?$AA@
	DD	FLAT:??_C@_0BL@FOAJLFDI@emissionid?$DNfireball?9napalm?$AA@
	DD	FLAT:??_C@_0BK@LGLHINMO@emissionmode?$DNGROUNDIMPACT?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@EKPBABMH@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CI@CPKHOEDC@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BJ@GODONKPG@emissionvelocity?5?$DN?5500?55?$AA@
	DD	FLAT:??_C@_0M@DCEJGBCB@?5addemitter?$AA@
	DD	FLAT:??_C@_0BI@FFNKHGDP@emissionid?$DNsmoke?9napalm?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CJ@IGCOKIIN@emissiondomain?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0CK@OFODHABP@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_08FCKBLHOJ@id?$DNspark?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@MLICHAJO@initialvelocity?$DN150?$AA@
	DD	FLAT:??_C@_0BD@GJHEPAMG@id?$DNsmoke?9grey?9high?$AA@
	DD	FLAT:??_C@_0P@MEOFPNMN@lifespan?$DN6?55?52?$AA@
	DD	FLAT:??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0P@HGKHCLE@alpha?$FL1?40?$FN?$DN?401?$AA@
	DD	FLAT:??_C@_0BA@FNMDFKMI@color?$DN?44?5?44?5?44?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@DPFFLKMN@size?$FL?45?$FN?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07HKDMMPBK@drag?$DN?48?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@BGDJENFA@gravity?$DN?9?48?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0P@PCOOOPAE@id?$DNsmoke_light?$AA@
	DD	FLAT:??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@
	DD	FLAT:??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@
	DD	FLAT:??_C@_0BA@PPIIMMGF@id?$DNsmoke?9napalm?$AA@
	DD	FLAT:??_C@_0N@JDPNFBMN@lifespan?$DN7?54?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_0O@GLKGFAGB@size?$FL1?$FN?5?$DN?5150?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@PAHGCIEN@id?$DNsmoke?9grey?9low?$AA@
	DD	FLAT:??_C@_0N@IEBOHKDE@lifespan?$DN10?5?$AA@
	DD	FLAT:??_C@_0N@IPIGBJPC@alpha?$FL0?40?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0O@DFPCLLAB@alpha?$FL0?41?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08PCFOCCDI@drag?$DN?499?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0N@OPLCJMLD@id?$DNsmoke?9gun?$AA@
	DD	FLAT:??_C@_0BA@DLBOKEAJ@lifespan?$DN10?53?52?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@CFLCCLMG@color?$DN?5?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0N@JCAOKLMD@size?$FL?41?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0O@DFBKCPDF@size?$FL1?$FN?5?$DN?520?5?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0P@KFDKNL@id?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0P@FDGMOGLE@lifespan?$DN3?06?03?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@BOOLJELB@size?$FL2?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0BF@HDAAIHCO@id?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0P@JPIGPCNB@lifespan?$DN3?56?53?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@GOOJEGOE@size?$FL1?$FN?5?$DN?5120?$AA@
	DD	FLAT:??_C@_0O@EGFFABKB@size?$FL2?$FN?5?$DN?5200?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0P@JPJHHOKF@id?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@KIPDNKMJ@id?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@DHPDJDLC@id?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@MEMGKMLI@id?$DNsmoke?9black?9thick?$AA@
	DD	FLAT:??_C@_0N@FIEPHNL@lifespan?$DN3?55?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0O@DNPIEFEN@id?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0N@LNDIJALO@lifespan?$DN2?55?$AA@
	DD	FLAT:??_C@_0O@LOMGGDPE@alpha?$FL0?40?5?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0P@IFCCKIGM@alpha?$FL0?425?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@HCGMGDGK@alpha?$FL1?40?5?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0BA@IACGPHBJ@color?$DN?45?5?45?5?45?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0BC@ILHKNKHF@id?$DNsmoke?9lt?9brown?$AA@
	DD	FLAT:??_C@_0P@MBKKADNB@lifespan?$DN30?515?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0BB@OBFEHICO@color?$DN?48?5?475?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0BH@DKAELHAL@id?$DNsurface?9disturbance?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BG@KLGIFKNB@inheritvelocity?5?$DN?5500?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0CA@CCCKONJB@emissionmode?$DNEMITONGROUNDIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@PAJPKMBC@emissionid?$DNwater?9mist?$AA@
	DD	FLAT:??_C@_0BP@KLPPPOIA@emissionmode?$DNEMITONWATERIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@
	DD	FLAT:??_C@_0O@GONGNDCP@id?$DNwater?9mist?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BF@BFINHBFN@color?$FL0?$FN?$DN?49?5?492?5?492?5?$AA@
	DD	FLAT:??_C@_0L@IMDLNNBK@size?$FL0?$FN?5?$DN1?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LOKGBELC@initialvelocity?$DN40?$AA@
	DD	FLAT:??_C@_0BA@JAJHDPCO@id?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@
	DD	FLAT:??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@
	DD	FLAT:??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0BE@IEBPLOFD@id?$DNburning_trail_xx?$AA@
	DD	FLAT:??_C@_0BD@BBHPEBOH@lifespan?$DN1?51?51?51?51?$AA@
	DD	FLAT:??_C@_0N@DJLBKLFM@alpha?$FL0?5?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0N@EBECIBDO@alpha?$FL?41?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0N@NOMNMCNB@alpha?$FL?42?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@CHKHHDPG@alpha?$FL?43?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@HFODNFIJ@alpha?$FL?44?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0BA@EFNAGJAA@color?$FL0?5?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0BB@JMENNIGA@color?$FL?41?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BA@OHJKIDON@color?$FL?42?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BA@FBEGMBIK@color?$FL?43?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0BA@POHLHPOG@color?$FL?44?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0O@OKBFEBGM@light?$DN?48?5?49?51?$AA@
	DD	FLAT:??_C@_0M@CAOOEKAN@size?$FL0?$FN?5?$DN20?$AA@
	DD	FLAT:??_C@_0O@KHMHPHML@size?$FL?41?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@MDHFIMFM@size?$FL?42?$FN?5?$DN10?$AA@
	DD	FLAT:??_C@_0N@FJBLKOK@size?$FL?43?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@KEFKEBGA@size?$FL?44?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BI@IJDPELMB@initialvelocity?$DN200?0?550?$AA@
	DD	FLAT:??_C@_0BD@PPCBHEBN@id?$DNburning_trail_x?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BC@IKDOJFDL@light?$FL1?40?5?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0N@OFLJHAPA@size?$FL1?$FN?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BA@CGKJBPIL@texture?$DNSUN?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0N@KPINDPFA@lifespan?$DN1?55?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0N@IPOEFCOH@trailid?5?$DN?525?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_03JMGAKCCH@END?$AA@
?Reverse@@3_NA DB 01H					; Reverse
	ORG $+3
?PS_Data_Low@@3PAPADA DD FLAT:??_C@_0N@NPMKIJFN@id?$DN$AIRBURST?$AA@ ; PS_Data_Low
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@MGDODENE@size?$FL1?$FN?5?$DN?546?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@GIPDCHNF@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@GNCLOJNJ@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BC@CKPPNFOF@id?$DN$AIR_DUSTCLOUD?$AA@
	DD	FLAT:??_C@_0O@PENCCBL@lifespan?$DN5?53?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@NJAIMDLN@color?$DN?49?5?48?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@NNIHDFFI@initialvelocity?$DN2?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0BC@LFILNNBO@id?$DN$AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BK@ELDMECJF@id?$DN$AIR_HANGING_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@DCFKAHOJ@lifespan?$DN6?55?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_0O@GNGNJCIK@size?$FL1?$FN?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BE@ELDBEALN@inheritvelocity?5?$DN?91?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@ECBEFOL@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@EEIOAMFK@emissionvelocity?5?$DN?5200?5?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PCHDIJHE@emissionrate?$DN80?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CK@PLBMAEHF@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0BE@LMBAKCOF@id?$DN$AIR_PENETRATION?$AA@
	DD	FLAT:??_C@_0L@DMPMAIKP@lifespan?$DN2?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@PAKJMFCI@color?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BD@OPOCGCBG@id?$DN$AIR_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@JLOFEFPD@emissionrate?$DN4?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BH@LEMGFPBA@id?$DN$AIR_SMOKECLOUD2?5?5?5?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PBKKADAC@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BI@KKOIHABH@id?$DN$ARTILLERY_EXPLOSION?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0BH@HPIOKAPD@emissionvelocity?5?$DN?5200?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BG@MHDLGOGF@emissionvelocity?5?$DN?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CD@CILPDGMJ@emissionid?$DNburning_trail_artille@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@EBHOHBC@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CF@MMKGBMKL@emissionid?$DNartillery?9explosion?9s@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BE@KIDIBAGM@id?$DN$BILLOWING_SMOKE?$AA@
	DD	FLAT:??_C@_0N@CLEBDGKI@lifespan?$DN6?54?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0N@BOHBDNAM@alpha?$FL1?$FN?$DN?412?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0O@HIDCMKOG@id?$DN$BIG_SMOKE?$AA@
	DD	FLAT:??_C@_0N@BJHHFECK@lifespan?$DN6?56?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@LDFCGJGN@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BB@GMPMGEMO@id?$DN$BURNING_PART?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0O@BBGGNNJM@lifespan?$DN4?5?45?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@KFPBDCCM@emissiontarget?$DNsphere?50?50?50?570?57@
	DD	FLAT:??_C@_0O@HNCOFJKI@id?$DN$CAMP_FIRE?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BF@GGNPEICK@initialvelocity?$DN4?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CD@EPCFCMCG@id?$DN$CAMP_HIT_EXPLOSION_DEBRISTRA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BI@NJELLOMM@visibledistance?$DN30000?5?5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BA@PDEKPAAI@id?$DN$DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0N@MJOAOLP@lifespan?$DN3?05?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@NJLOPFGB@trailid?5?$DN?523?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IDFBJCNA@emissionrate?$DN35?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@NGNKADPG@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@GGJKHFMB@emissiontarget?$DNsphere?50?50?50?570?57@
	DD	FLAT:??_C@_0BD@KBNPHALI@id?$DN$DIST_AIRBURSTS?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0P@IFIBKMAP@id?$DN$DIST_ARMOR?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@EBCDEBDM@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BG@PCODNBA@id?$DN$DIST_GROUNDBURSTS?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BC@NOKOEKKI@id?$DN$DIST_INFANTRY?$AA@
	DD	FLAT:??_C@_0M@NBJHNIIK@lifespan?$DN1?5?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@DEJOAEPI@alpha?$FL1?$FN?$DN?401?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BE@GEEJCFFJ@visibledistance?$DN500?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@
	DD	FLAT:??_C@_0BL@HMIMJBLA@id?$DN$FEATURE_CHAIN_REACTION?$AA@
	DD	FLAT:??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@GBAJKOAH@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0BB@POMBHPNK@id?$DN$FIRE_NOSMOKE?$AA@
	DD	FLAT:??_C@_0L@FFHFPADP@alpha?5?$DN?5?46?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0M@JLFFMKNL@lifespan?$DN10?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BD@NIPOOLFL@initialvelocity?$DN?55?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@MGJNJBIA@gravity?$DN?9?415?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_08DLIHAKJN@id?$DN$FIRE?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@LLACFKBM@gravity?$DN?5?9?415?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NKNINEEN@initialvelocity?$DN10?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_09EINIGPEB@id?$DN$FIRE1?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_09GDPFDMIC@id?$DN$FIRE2?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BF@GKPBPABK@light?$FL0?475?$FN?$DN1?5?51?5?51?5?$AA@
	DD	FLAT:??_C@_0BH@GOKLGAMC@light?$FL1?40?5?$FN?$DN0?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@
	DD	FLAT:??_C@_0O@JDHBNMAE@size?$FL0?$FN?5?$DN?5?510?$AA@
	DD	FLAT:??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@GNJILJBE@gravity?$DN?5?9?43?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_09HKOOANMD@id?$DN$FIRE3?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0BB@POMJLDMH@alpha?$FL?475?$FN?5?$DN?5?415?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@JLPHPABM@gravity?$DN?92?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@LOBPJOGF@emissionid?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@DNKAEFDE@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@PFDALCIF@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_09DFKPJLAE@id?$DN$FIRE4?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_09CMLEKKEF@id?$DN$FIRE5?$AA@
	DD	FLAT:??_C@_08EHCBAOIP@alpha?$DN?49?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@BDMECEEP@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0N@LGANEGNH@id?$DN$FIRE_MED?$AA@
	DD	FLAT:??_C@_0N@CCFLMPMM@lifespan?$DN6?04?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@PMEHIOPA@alpha?$FL1?$FN?$DN?409?$AA@
	DD	FLAT:??_C@_0N@IAFKDPAA@color?$DN0?51?51?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CI@LFLEDPLF@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@
	DD	FLAT:??_C@_0N@MGIGCBGC@id?$DN$FIRE_HOT?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@EAGPAKEI@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0O@ELAALOKM@id?$DN$FIRETRAIL?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BB@OBNHMAPM@id?$DN$FLAMING_PART?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@FBPNOLMA@gravity?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MLBDBFD@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BI@LBEPAJKE@emissionvelocity?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_09IHNEPFAK@id?$DN$FLAME?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0N@NCIFHANK@lifespan?$DN8?55?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@CJIAKJJM@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0O@IGCMJGFD@id?$DN$FIRESMOKE?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JGKPFBLJ@size?$FL1?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@EDOLNOCG@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0BF@NHKHNBBK@id?$DN$GROUND_EXPLOSION?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OMPPJJON@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@IOBLKNA@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CK@KOJDHOAJ@emissiontarget?$DNsphere?50?50?50?5275?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BA@KHCMDJFE@id?$DN$GROUND_GLOW?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_07MPJCLBFH@drag?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@OCPLMKLG@inheritvelocity?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CK@JENFJFPG@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BI@JKNMEMMA@emissionvelocity?5?$DN?520?55?$AA@
	DD	FLAT:??_C@_0BC@CELBCFKB@id?$DN$GROUND_STRIKE?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MAANALKL@emissiontarget?$DNsphere?50?50?50?575?57@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BJ@BOPPJKF@id?$DN$GROUND_STRIKE_NOFIRE?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@CJEICDMN@emissiondomain?$DNsphere?50?50?5?95?50?50@
	DD	FLAT:??_C@_0CK@GKLPOBCN@emissiontarget?$DNsphere?50?50?5?95?5450@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@NEPKIPNF@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BA@IMJDMFII@id?$DN$GROUNDBURST?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0L@DJEMGAJE@soundid?$DN56?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BH@NBMKEJOG@id?$DN$GROUND_PENETRATION?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DIIOAKKD@soundid?$DN46?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@CBCCDJGD@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BI@MBDBIDEG@emissionvelocity?5?$DN?5150?5?$AA@
	DD	FLAT:??_C@_0O@MLKAKLOM@id?$DN$GUN_SMOKE?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CF@MGAFKFD@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CF@JHPBBIEF@emissiontarget?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0P@GMFJCJGA@id?$DN$GUN_TRACER?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0O@NONFMPNI@color?$DN1?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BB@HIILHAJD@id?$DN$GROUND_FLASH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0M@BEGBGONA@size?$FL0?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0M@MPGBJBCB@size?$FL1?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PMABBLCN@emissiontarget?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0BM@MFKPMELA@id?$DN$HIT_EXPLOSION_NOSMOKE?5?5?$AA@
	DD	FLAT:??_C@_09PDEJEECL@alpha?$DN1?5?5?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@IDCGFJI@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CF@JFHFKPKJ@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CH@DANKBLMH@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IDFBJCNA@emissionrate?$DN35?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BC@PEOAIHLO@id?$DN$HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08MLFLEDNK@alpha?$DN1?5?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OPEDEGMO@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@LLEHGPLB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CJ@HELFCOJH@emissiondomain?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BO@LCJKCFLC@id?$DN$HIT_EXPLOSION_DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08NJKCCDAB@alpha?$DN?47?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BI@NJELLOMM@visibledistance?$DN30000?5?5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DFIIIADB@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0BJ@LDJIOIJ@id?$DN$INCENDIARY_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@FIJAMNKL@lifespan?$DN6?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@FJKNNJCC@soundid?$DN32?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GCDCFMMJ@emissiontarget?$DNsphere?50?50?50?5225?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@LGCGLIND@emissiontarget?$DNsphere?50?50?50?575?57@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CG@HANJFIBA@emissiondomain?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@FHEMAIGA@emissionvelocity?5?$DN?5150?525?$AA@
	DD	FLAT:??_C@_0BA@PMLMOFPL@id?$DN$LIGHT_CLOUD?$AA@
	DD	FLAT:??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@
	DD	FLAT:??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@KKBIOKGK@emissionid?$DNsmoke_light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BH@HFMOMDEA@id?$DN$LONG_HANGING_SMOKE?$AA@
	DD	FLAT:??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_09MPCIFFLN@soundid?$DN2?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@DFJBCOME@gravity?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MJKNMKND@emissionid?$DNfireball?9airburst?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BJ@EAHPLMJN@id?$DN$LONG_HANGING_SMOKE2?5?$AA@
	DD	FLAT:??_C@_0N@JIFDMPGC@lifespan?$DN4?55?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BC@JGGLEOFL@id?$DN$MISSILE_BURST?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@BHCICDLD@alpha?$FL0?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0O@HEKHADOL@size?$FL0?$FN?5?$DN?5?450?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@NGPANIIC@gravity?$DN?45?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BF@HFJCNHA@inheritvelocity?5?$DN?425?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@ONNCBAJM@emissionid?$DNfireball?9mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LEOEHEME@emissionrate?$DN3?5?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DEOLNCLL@emissionid?$DNfirework?9mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@OEKGACPP@emissionid?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BH@GNDLAPBN@emissionvelocity?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@LHGLIMAG@emissionid?$DNburning_trail_mis?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BG@MADCMGLJ@emissionvelocity?5?$DN?510?$AA@
	DD	FLAT:??_C@_0BD@FMNPLEI@id?$DN$MISSILE_LAUNCH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0M@PKILIDLA@soundid?$DN267?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CE@KGGMINGB@id?$DN$RISING_GROUNDHIT_EXPLOSION_D@
	DD	FLAT:??_C@_0BE@IFBDNLNM@inheritvelocity?$DN?401?$AA@
	DD	FLAT:??_C@_08FODKDPMO@alpha?$DN?48?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OFGCIHNE@emissiontarget?$DNsphere?50?50?50?5900?5@
	DD	FLAT:??_C@_0BK@HPLJHLBD@emissionvelocity?5?$DN?5100?550?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CG@ENPIKJBL@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@BJNHLPEF@emissiontarget?$DNsphere?50?50?50?5400?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CH@NKAMJAOB@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CJ@MCDDACEO@emissiontarget?$DNsphere?50?50?50?5350?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@LHFFIFKO@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@IAPOKGKK@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BK@HLDEAHKB@emissionvelocity?5?$DN?5100?530?$AA@
	DD	FLAT:??_C@_0P@GHGHEOBE@id?$DN$SAM_LAUNCH?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@HNCEIIEM@color?$DN?51?0?51?0?51?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OLNIKFPM@size?$FL1?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0M@PKILIDLA@soundid?$DN267?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PAJIFLGH@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@GBHEDIKD@emissiontarget?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0N@DHONCOBK@id?$DNshockring?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0P@PJKDGOCH@alpha?$FL1?$FN?$DN?405?5?5?$AA@
	DD	FLAT:??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0P@BDOKFEA@size?$FL0?$FN?5?$DN?5?55?5?5?$AA@
	DD	FLAT:??_C@_0P@FAGEKMHO@size?$FL1?$FN?5?$DN?5400?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BE@DLGOHGKO@id?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0BA@DAHHDCKH@alpha?$FL1?$FN?$DN?405?5?5?5?$AA@
	DD	FLAT:??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0BA@EGMAKKMI@size?$FL0?$FN?5?$DN?5?510?5?5?$AA@
	DD	FLAT:??_C@_0P@CKKEPPBO@size?$FL1?$FN?5?$DN?5600?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_0M@GFIIHJFL@gravity?$DN0?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BD@DIKHDJLI@id?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0N@PCHJAGHJ@lifespan?$DN2?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0BA@DAHHDCKH@alpha?$FL1?$FN?$DN?405?5?5?5?$AA@
	DD	FLAT:??_C@_0BA@HAIEFBKL@color?5?5?5?$DN?51?51?51?$AA@
	DD	FLAT:??_C@_0P@GLGAOLEA@size?$FL0?$FN?5?$DN?510?5?5?$AA@
	DD	FLAT:??_C@_0P@KIPEGIMP@size?$FL1?$FN?5?$DN?5900?5?$AA@
	DD	FLAT:??_C@_0BG@FLGEDFE@texture?$DNshockring?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BH@MHDCMHJG@emissionvelocity?5?$DN?5300?$AA@
	DD	FLAT:??_C@_0BI@IACFBGFD@id?$DN$SMALL_AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@LGJGAOBB@lifespan?$DN1?54?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@BNEILPAD@emissionid?$DNfirework?9airburst?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BI@MBEOEMPD@id?$DN$SMALL_HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OJJOBLKF@size?$FL1?$FN?5?$DN?525?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@GDFOKGMP@gravity?$DN?48?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@CPFGNLDP@emissionid?$DNburning_trail_airburs@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@FIFDDPLF@emissionid?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CD@NHAAPNBM@emissiontarget?$DNsphere?50?50?50?58?58?5@
	DD	FLAT:??_C@_0L@DCNCCIDG@id?$DN$SPARKS?$AA@
	DD	FLAT:??_C@_0L@CIACAEHK@alpha?5?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BB@IMDCMCBL@id?$DN$SMOKING_PART?$AA@
	DD	FLAT:??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@BPLDFHDL@alpha?$FL1?$FN?$DN?402?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HAEOLPF@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BA@CCGJCBMA@id?$DN$TRACER_FIRE?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0O@BCHPMPEG@color?$DN0?0?50?0?50?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@KIKJLOCE@texture?$DNTracer?4dds?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@BBOMJOJD@id?$DN$TRAIL_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0N@CAOPKIAH@lifespan?$DN5?55?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@GCMEKDHO@alpha?$FL1?$FN?$DN?407?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0M@OEEMMCOC@size?$FL1?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0P@PFCEKLMO@id?$DN$TRAIL_FIRE?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0O@EJMAMJMH@alpha?$FL1?$FN?$DN0?41?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@GNMPNECO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BD@FLFHIMFN@id?$DN$TRAIL_FIREBALL?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@JPEHMBA@gravity?$DN?5?9?47?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BD@EPCLPLBJ@id?$DN$VEHICLE_DIEING?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@LDJADCPG@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BF@FGHJFBEN@id?$DN$VEHICLE_DIE_FIRE?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0N@DJPEJJEG@lifespan?$DN5?54?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@LIACDAIM@gravity?$DN?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0BJ@FMCCLCMF@id?$DN$VEHICLE_DIE_FIREBALL?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@CDJJNGAN@alpha?$FL1?$FN?$DN?406?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0O@DANEJEJI@size?$FL0?$FN?5?$DN?510?5?$AA@
	DD	FLAT:??_C@_0P@EMECAPAO@size?$FL1?$FN?5?$DN?540?5?5?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@KIIKPFEF@initialvelocity?$DN?910?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DFLFBJGH@emissionid?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BB@LPBGKNIE@emissionrate?$DN10?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@GCCEAPM@id?$DN$VEHICLE_DIE_FIREBALL2?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@JKOHNLFP@alpha?$FL1?$FN?$DN?417?5?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@NBOEIEFC@inheritvelocity?5?$DN?5?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0N@DPMCBEAH@?$CD?$CDaddemitter?$AA@
	DD	FLAT:??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PLGJHABA@emissionrate?$DN40?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CC@FBDJCNMJ@id?$DN$VEHICLE_DIE_INTERMITTENT_FIR@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0BG@HNFFALHI@size?$FL0?$FN?5?$DN?530?5?5?5?$CD?$CD60?$CD?$CD?$AA@
	DD	FLAT:??_C@_0BH@JAEIMPNK@size?$FL1?$FN?5?$DN?570?5?5?5?$CD?$CD100?$CD?$CD?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@IPLMLIDI@initialvelocity?$DN?9100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@KFCOKOCF@emissionid?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@LAMIBGDA@emissionrate?$DN7?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@HJDDDHM@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0BG@ILEDGIJM@id?$DN$VEHICLE_DIE_SMOKE?$AA@
	DD	FLAT:??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BH@BEECMIHG@id?$DN$VEHICLE_DIE_SMOKE2?$AA@
	DD	FLAT:??_C@_0O@IDHFKPGC@lifespan?$DN?53?52?$AA@
	DD	FLAT:??_C@_0M@HDEEOGLH@alpha?$FL0?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@OAJMKKPK@color?$DN?47?5?47?5?47?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@FCJHAHOP@emissionid?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@LDJLPAEP@id?$DN$VEHICLE_TAIL_SCRAPE?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_09BGBMLHEA@size?5?$DN?550?$AA@
	DD	FLAT:??_C@_0BD@FKECPACN@inheritvelocity?$DN?45?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@LNNKCNDM@emissionid?$DNmetal?9spark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BD@JMKOOIH@id?$DN$VERTICAL_SMOKE?$AA@
	DD	FLAT:??_C@_0O@IDABCIHJ@lifespan?$DN10?55?$AA@
	DD	FLAT:??_C@_0N@PFABBOCG@alpha?$FL0?$FN?$DN?425?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@KDJHDDBN@gravity?$DN?9?45?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@MEPEEJL@emissionid?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@LJHDEOHL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BB@BPKOJNKP@id?$DN$CLUSTER_BOMB?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@MLOBPKFE@lifespan?$DN1?51?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@ILAIBNFH@emissionid?$DNcbu?9submunition?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BE@HHMLCPEK@emissionrate?$DN100?0?41?$AA@
	DD	FLAT:??_C@_0CE@JKGCHAKG@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@KKEODCGE@emissiontarget?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@ENGLOHLM@emissionid?$DNcbu?9smoke?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HCNHCNKD@emissiontarget?$DNsphere?50?50?50?525?52@
	DD	FLAT:??_C@_0BD@HBGMMAHB@id?$DNcbu?9submunition?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0P@CKHNHCMM@lifespan?$DN200?01?$AA@
	DD	FLAT:??_C@_08DCMNPAHH@size?5?$DN?51?$AA@
	DD	FLAT:??_C@_0L@DLMPKIN@drag?5?$DN?5?401?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0BB@DBEKPKL@soundid?$DN114?5?5?$CD2?$CD?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BE@MNEJLCHF@initialvelocity?$DN100?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@NJGOBMAE@emissionid?$DNcbu?9sub?9explosion?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@LHAOCJMH@emissiondomain?$DNsphere?50?50?5?910?50?5@
	DD	FLAT:??_C@_0CI@EPCCHEFC@emissiontarget?$DNsphere?50?50?5?910?520@
	DD	FLAT:??_C@_0BD@CAACFALA@id?$DN$GUN_HIT_OBJECT?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BC@DNNNPDAO@emitonerandomly?$DN1?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@PKAHOAGL@emissiontarget?$DNsphere?50?50?50?5?45?5?4@
	DD	FLAT:??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@CFJKPIKN@emissionid?$DNdust?9grey?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BD@MKNIEFKB@id?$DN$GUN_HIT_GROUND?$AA@
	DD	FLAT:??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@
	DD	FLAT:??_C@_0N@LIFFAPIH@lifespan?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@MBIFHKL@inheritvelocity?$DN?43?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_09OEAFAGHO@soundid?$DN1?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FEDEIHBM@emissionid?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CD@PLOJCGCA@emissiontarget?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MMCCCLNN@emissiontarget?$DNsphere?50?50?50?5?42?5?4@
	DD	FLAT:??_C@_0BH@KEDCEIOF@emissionvelocity?$DN25?525?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@MCFIACLE@emissionid?$DNsmoke?9gun?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BC@CCJFEKCI@emissionrate?$DN2?5?50?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0O@MKHNPICB@id?$DNgun_sparks?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@CBNJNMHH@color?5?$DN?51?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@KGGCCAF@emissionid?$DNflash?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0M@JLIFJGOA@id?$DNgun_dust?$AA@
	DD	FLAT:??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@JBDLMBEE@alpha?$FL1?$FN?$DN?42?5?5?$AA@
	DD	FLAT:??_C@_0BB@KJPMHGJF@color?5?$DN?5?46?5?45?5?44?$AA@
	DD	FLAT:??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@
	DD	FLAT:??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0P@NPCEFJNO@size?$FL1?$FN?5?$DN?5200?5?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@CKMJOPJM@gravity?$DN0?46?$AA@
	DD	FLAT:??_C@_0BG@EKIHLOI@visabledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0BB@NMDNBHOL@id?$DN$ROCKET_BURST?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@EDOJNDOO@inheritvelocity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@LLHMOCAM@emissionid?$DNrocket_impact?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0BC@GFDFDAPI@emissionrate?$DN1?5?50?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BB@DAGIAIFM@id?$DNrocket_impact?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0BD@DOCODFCJ@inheritvelocity?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@EFPJPOOG@soundid?$DN43?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@BMLFHELP@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@HOIKHEHA@emissionid?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@JDJMGHP@emissionrate?$DN3?5?5?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BE@GNAKLHLJ@emissionvelocity?$DN25?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@JEOOPOMG@emissionrate?$DN4?5?5?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BF@CHFECFDN@emissionvelocity?$DN25?5?$AA@
	DD	FLAT:??_C@_08GIDCOGNC@id?$DNagm88?$AA@
	DD	FLAT:??_C@_09HCDGILLA@alpha?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BF@LNPLJGJA@inheritvelocity?5?$DN?5?42?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@MANNLPLE@emissionid?$DNagm88?9impact?$AA@
	DD	FLAT:??_C@_0BK@CJKLODPO@emissionmode?$DNEMITONIMPACT?$AA@
	DD	FLAT:??_C@_0BB@KDDAAOPE@emissionrate?$DN1?5?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BB@KMGHPMKC@id?$DN$DURANDAL?9OFF?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JBKGPJGF@size?$FL1?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_08FKBHHFLG@soundid?$DN?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@PCNHKNBP@emissionid?$DNfireball?9muzzle?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@KDLBDKHA@emissionid?$DNsmoke?9grey?$AA@
	DD	FLAT:??_C@_0BH@BKIIPKHI@emissionmode?$DNEMITONOCE?$AA@
	DD	FLAT:??_C@_0BA@PKKLBKCH@emissionrate?$DN50?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CC@PDKGIMOB@emissiontarget?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0M@HMAGMDHJ@id?$DNDURANDAL?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@HDLNJOGI@lifespan?$DN5?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPLAINE@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@DHLKIJCN@emissionid?$DNburning_trail_duranda@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@POCGGGJF@emissionrate?$DN30?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BMPCJBO@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BK@PNJIPNLE@emissionvelocity?5?$DN?5125?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CG@GIMFDCLF@emissiondomain?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0CJ@LNIMKNFK@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BJ@CBIFPKHH@emissionvelocity?5?$DN?550?525?$AA@
	DD	FLAT:??_C@_0N@GNMLDDOC@id?$DNlarge_agm?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@CBJFDLOC@soundid?$DN47?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BD@EDFJMBGM@inheritvelocity?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EGLBOBOE@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@FMPCAODC@emissionvelocity?5?$DN?550?520?$AA@
	DD	FLAT:??_C@_07NIOJMECE@id?$DNmk82?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_08LNMOOGAF@alpha?$DN?43?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@
	DD	FLAT:??_C@_0M@IJBNPPNP@soundid?$DN113?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@KIJLIKBL@emissionvelocity?5?$DN?550?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@GFFGMMFB@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@ICJDPIOH@emissionrate?$DN25?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PIONKEHO@emissionrate?$DN60?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CGJAFHAI@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_07IOLDGDKC@id?$DNmk84?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0N@IJHCHBHP@dieonground?$DN?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OBBBJMFK@emissiontarget?$DNsphere?50?50?50?5750?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NDLIHBKA@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@KJNDCHHB@emissionrate?$DN6?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@OJIIIECF@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@EOGPEJBJ@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0BH@GLPAMNPG@emissionvelocity?5?$DN?5150?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CE@IFEGEHKN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NIJNLGPM@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@OAGMBNOM@emissionvelocity?5?$DN?580?520?$AA@
	DD	FLAT:??_C@_07IJGHPIOH@id?$DNm118?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@EBILPMOK@lifespan?$DN7?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@JDEADGPJ@emissiontarget?$DNsphere?50?50?50?5650?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BJ@BPBMECCN@emissionid?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@NDDKHCID@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BO@PJMIBOL@emissionid?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IGBOIEFF@emissionrate?$DN45?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BOKAPILO@emissiontarget?$DNsphere?50?50?50?5540?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CJ@BNKLJNDA@emissiontarget?$DNsphere?50?50?50?5600?5@
	DD	FLAT:??_C@_0BK@HIBJJND@emissionvelocity?5?$DN?5100?525?$AA@
	DD	FLAT:??_C@_0M@CDJJPCCG@id?$DNmaverick?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0L@GKKGKPCJ@lifespan?$DN4?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@BHIFGFNB@emissiontarget?$DNsphere?50?50?50?5150?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@KLDPEHEL@emissiontarget?$DNsphere?50?50?50?580?58@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@EJDNBOED@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PPOEAMKC@emissionrate?$DN20?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0BB@KGHELNPN@id?$DNmaverick_miss?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@
	DD	FLAT:??_C@_0P@DFJFBNFK@alpha?$FL1?$FN?$DN0?401?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0L@KLIGICB@soundid?$DN44?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BE@KODOIIBP@inheritvelocity?$DN?402?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@OPFHCBKP@emissiontarget?$DNsphere?50?50?50?560?56@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@BHIJIGFF@emissionid?$DNburning_trail_maveric@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@LJNNGPGP@emissionrate?$DN15?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BDHKIGPA@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@NAGMFEGB@emissionvelocity?5?$DN?580?55?$AA@
	DD	FLAT:??_C@_07KOMCHHFM@id?$DNmk77?$AA@
	DD	FLAT:??_C@_0BF@MAIMGCNF@inheritvelocity?5?$DN?5?47?$AA@
	DD	FLAT:??_C@_0L@HOFIKDPM@alpha?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@BMLJPFMH@color?5?$DN?51?0?51?0?50?$AA@
	DD	FLAT:??_C@_0L@CGOOPMID@size?5?$DN?5100?$AA@
	DD	FLAT:??_C@_0N@KPHNFHD@bounce?5?$DN?5?425?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0BA@NCDHFMME@soundlooped?$DN114?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@DNHBIADA@emissionid?$DNmk77fuel?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0BE@BNOKMGCK@emissionvelocity?$DN80?$AA@
	DD	FLAT:??_C@_0CG@EEBDAJGB@emissiondomain?$DNsphere?50?50?50?510?55@
	DD	FLAT:??_C@_0CJ@CBCLODIM@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0L@LELJMOEK@id?$DNNUCLEAR?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0M@JAAGMOJO@soundid?$DN112?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0BG@GHMOJGKO@visibledistance?$DN80000?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CM@HOFBLKHD@emissiontarget?$DNsphere?50?50?50?56500@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@OBELGNGO@emissionid?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PFNELPNF@emissionrate?$DN100?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CM@FPMPMBKK@emissiontarget?$DNsphere?50?50?50?53000@
	DD	FLAT:??_C@_0BJ@FOLELAGL@emissionvelocity?5?$DN?550?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CG@LFBDDLPH@emissiondomain?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0CN@CCEGGAGB@emissiontarget?$DNsphere?50?50?50?53000@
	DD	FLAT:??_C@_0BI@PGOPHDHE@emissionvelocity?5?$DN?5100?5?$AA@
	DD	FLAT:??_C@_05HBLEPGBM@id?$DNwp?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@MCMDOEJO@emissionid?$DNshockring?9large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@ECIJFGMN@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@HHODGDLP@emissiontarget?$DNsphere?50?50?50?5450?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@FHPPCBKL@emissiontarget?$DNsphere?50?50?50?5200?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@HPPIHIOD@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@DPAADPLK@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@OHGBBADL@emissionrate?$DN200?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@
	DD	FLAT:??_C@_0M@EGNFGPPD@id?$DNwp_small?$AA@
	DD	FLAT:??_C@_0BE@ENMKFBNE@inheritvelocity?$DN?409?$AA@
	DD	FLAT:??_C@_07BJOHGHI@alpha?$DN1?$AA@
	DD	FLAT:??_C@_0M@ICEOPLJK@lifespan?$DN11?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@BAAMFGNF@visibledistance?$DN40000?$AA@
	DD	FLAT:??_C@_0M@MGFMGJBI@soundid?$DN114?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@OJJJJHIO@emissionid?$DNshockring?9medium?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@CFKOILAI@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@OIBIHLKP@emissionid?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@PLBKCACN@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CJ@JCCMOMIF@emissiontarget?$DNsphere?50?50?50?5175?5@
	DD	FLAT:??_C@_0BJ@ILFBAPKD@emissionvelocity?5?$DN?525?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BK@JGKHKEJH@emissionid?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@NEKENDDE@emissionrate?$DN3?$AA@
	DD	FLAT:??_C@_0CG@NAHIKFBH@emissiondomain?$DNsphere?50?50?50?515?51@
	DD	FLAT:??_C@_0CJ@IBHHJKDE@emissiontarget?$DNsphere?50?50?50?5250?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@DKMFIFHE@emissionid?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PDBPHNDO@emissionrate?$DN150?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@IOIKBCND@emissiontarget?$DNsphere?50?50?50?5175?5@
	DD	FLAT:??_C@_0BJ@HDDLOKEO@emissionvelocity?5?$DN?5200?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BN@EILMFAAH@emissionid?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@DHMODOGI@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BI@CIPMJANA@emissionvelocity?5?$DN?550?55?$AA@
	DD	FLAT:??_C@_0BA@GKIPAFOO@id?$DNagm88?9impact?$AA@
	DD	FLAT:??_C@_07BIIFEHDJ@alpha?$DN0?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BF@EIHPOAKB@inheritvelocity?$DN?4001?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@GLJLLLKA@soundid?$DN30?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BKAHLABN@emissionid?$DNshockring?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CJ@MBANNOEO@emissiontarget?$DNsphere?50?50?50?5100?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@JOLGLFGB@emissionid?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@HPLJDENF@emissiontarget?$DNsphere?50?50?50?540?54@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0CC@OKCNHLOL@emissionid?$DNground?9explosion?9smok@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@BFLBEEBL@emissiontarget?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_0BN@PPACACIE@id?$DNartillery?9explosion?9smoke?$AA@
	DD	FLAT:??_C@_0N@MOAJGIOE@lifespan?$DN4?53?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@NPBKNFNG@id?$DNburning_trail_air?$AA@
	DD	FLAT:??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BK@KIPCPPCG@id?$DNburning_trail_airburst?$AA@
	DD	FLAT:??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BL@EMFDDKCN@id?$DNburning_trail_artillery?$AA@
	DD	FLAT:??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BG@ENBFKFFA@id?$DNburning_trail_bomb?$AA@
	DD	FLAT:??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@JEPJCAOE@lifespan?$DN2?52?54?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@CKMECHKA@initialvelocity?5?$DN?5200?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BK@LABOKNDE@id?$DNburning_trail_durandal?$AA@
	DD	FLAT:??_C@_09JDGJMBIC@alpha?$DN?5?48?$AA@
	DD	FLAT:??_C@_0N@HCAHIHIL@color?$DN?50?00?00?$AA@
	DD	FLAT:??_C@_0M@NAOLKEBK@lifespan?$DN?56?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@KFHEHHEO@initialvelocity?5?$DN?580?0?530?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@
	DD	FLAT:??_C@_0BK@JACNKCEM@id?$DNburning_trail_maverick?$AA@
	DD	FLAT:??_C@_0BC@NKMHAKPB@light?$FL0?40?5?$FN?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@ENGMNMBD@size?$FL?45?$FN?5?$DN?56?$AA@
	DD	FLAT:??_C@_0O@GKCOILF@size?$FL1?$FN?5?$DN?51?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BJ@MHCHMCOA@initialvelocity?5?$DN?550?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GOAHKAGA@emissionid?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BF@IMNHFLCP@id?$DNburning_trail_mis?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BD@BBCPHFLJ@light?$FL0?475?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0BF@EOOFKPMH@light?$FL1?40?5?$FN?$DN1?51?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@MDMIPCGJ@alpha?$FL?45?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@DABLCIFG@size?$FL?45?$FN?5?$DN?53?$AA@
	DD	FLAT:??_C@_0N@PMKCEBLB@size?$FL1?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0BA@CLFCNCPH@texture?$DNSUN?4DDS?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@MCKDIHGC@lifespan?$DN2?52?52?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@PBHKKHDI@initialvelocity?5?$DN?5150?0?510?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_0N@GAIBHJLL@id?$DNcbu?9smoke?$AA@
	DD	FLAT:??_C@_0P@FPIJOBBG@lifespan?$DN5?02?45?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BA@BIMKDNBC@color?$DN?49?5?49?5?49?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_08PCFOCCDI@drag?$DN?499?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@LANKKDNP@gravity?$DN?91?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0BF@OCNCMLCN@id?$DNcbu?9sub?9explosion?$AA@
	DD	FLAT:??_C@_09GLCNLKPB@alpha?5?$DN?50?$AA@
	DD	FLAT:??_C@_0BA@ONHDNMOJ@color?5?$DN?50?0?50?0?50?$AA@
	DD	FLAT:??_C@_0O@OOHHBEBJ@lifespan?$DN10?01?$AA@
	DD	FLAT:??_C@_0BC@MFNNMNAC@inheritvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0L@KCIAFLJP@soundid?$DN28?$AA@
	DD	FLAT:??_C@_0O@CEKNNJCO@soundlooped?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@ICPOHELC@emissionrate?$DN5?$AA@
	DD	FLAT:??_C@_0CC@BKMEBECF@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BE@KIFAJIJO@emissionid?$DNflash?960?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@MNLPOCHF@emissionrate?$DN2?$AA@
	DD	FLAT:??_C@_0CC@GHLDOAGA@emissiondomain?$DNsphere?50?50?50?55?55?5@
	DD	FLAT:??_C@_0CH@JKCOOLLP@emissiontarget?$DNsphere?50?50?5?95?510?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@FHACCPMI@emissionid?$DNfireball?9cbu?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BC@GFDFDAPI@emissionrate?$DN1?5?50?$AA@
	DD	FLAT:??_C@_0CC@HDEADFCB@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BP@GGPFFECL@emissionid?$DNsurface?9disturbance?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CD@EAJMLJKE@emissiondomain?$DNsphere?50?50?50?5?50?50@
	DD	FLAT:??_C@_0CH@OAELAPM@emissiontarget?$DNsphere?50?50?510?560?5@
	DD	FLAT:??_C@_0O@PIJLCAGE@id?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0P@LHGGDAL@lifespan?$DN1?52?55?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@LOLPAGCM@alpha?$FL?45?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@CBNPGIFE@alpha?$FL1?$FN?$DN?405?5?$AA@
	DD	FLAT:??_C@_0BD@MLCGJPPJ@color?$DN?5?48?0?5?475?0?5?47?$AA@
	DD	FLAT:??_C@_0O@OOAGCIEB@size?$FL0?$FN?5?$DN?5?515?$AA@
	DD	FLAT:??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0O@LKHILIGC@size?$FL1?$FN?5?$DN?560?5?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0BG@JGJICEHL@visibledistance?$DN70000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0N@IHAGGKK@id?$DNdust?9grey?$AA@
	DD	FLAT:??_C@_0P@LBEDDDKC@lifespan?$DN3?53?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@KHKEDHGN@alpha?$FL?45?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BC@IEFICJJL@alpha?$FL1?$FN?$DN?405?5?5?5?5?5?$AA@
	DD	FLAT:??_C@_0BA@NCBGGIAI@color?$DN?5?45?5?45?5?45?$AA@
	DD	FLAT:??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@
	DD	FLAT:??_C@_0O@NIPGLNNH@size?$FL?41?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0O@BAHBHAOJ@size?$FL1?$FN?5?$DN?540?5?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0BA@BEENCEDP@id?$DNfireball?9air?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@IDADGAJL@size?$FL1?$FN?5?$DN?5?550?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@
	DD	FLAT:??_C@_0BF@PCBBBNPK@id?$DNfireball?9airburst?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@DPKBNHIL@emissionid?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@PNFAJFJC@id?$DNfireball?9cbu?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GEMDPDIG@alpha?$FL1?$FN?$DN?42?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@OMNBANCA@size?$FL1?$FN?5?$DN?555?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BE@OHECPIEH@id?$DNfireball?9nosmoke?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@HGLFAPIB@lifespan?$DN5?53?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BD@FPEKHDAD@id?$DNfireball?9nsmoke?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0O@BKBOGFHE@color?$DN?48?5?45?50?$AA@
	DD	FLAT:??_C@_0N@HPKPPGOF@lifespan?$DN5?03?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@OIFMHBJC@size?$FL1?$FN?5?$DN?535?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@ILDHADJ@id?$DNfireball?9muzzle?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@GOMNGONM@color?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@PJNHJING@lifespan?$DN1?53?$AA@
	DD	FLAT:??_C@_0M@NHKFPJB@size?$FL0?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0M@FBOCLMKP@size?$FL1?$FN?5?$DN?58?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0M@MHPLPGBJ@gravity?$DN?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@KAGJABEB@initialvelocity?$DN30?522?$AA@
	DD	FLAT:??_C@_0BB@JEAIKIHN@id?$DNfireball?9bomb?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@GPCLCMND@size?$FL1?$FN?5?$DN?5130?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@HKEFJHIO@gravity?$DN?49?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@JABJNNJK@initialvelocity?$DN30?510?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@FICPDDBL@emissionid?$DNflash?9bomb?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@DEOEAPDL@id?$DNfireball?9mav?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@PNEIKEMM@gravity?$DN?5?49?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BF@BPAIPMIP@emissionid?$DNflash?9mav?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@FNINAHKH@emissiontarget?$DNsphere?50?50?50?530?53@
	DD	FLAT:??_C@_0BA@ELBJNHDE@id?$DNfireball?9med?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_0O@KDEGABIM@lifespan?$DN3?5?45?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@ICMBAKKM@size?$FL1?$FN?5?$DN?5?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0M@OEFDJFIN@gravity?$DN?5?48?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@LFADNEAB@initialvelocity?$DN1?54?$AA@
	DD	FLAT:??_C@_0BC@BFGKDBGO@id?$DNfireball?9small?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@DMAFHAHA@alpha?$FL0?$FN?$DN?46?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0BA@BIPOCDNI@lifespan?$DN?475?5?45?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@IDADGAJL@size?$FL1?$FN?5?$DN?5?550?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0N@FPKONLJG@gravity?$DN?5?9?41?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BG@NPJHMCMI@initialvelocity?$DN10?520?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BH@MHGBHLML@emissionid?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@LHGAKAKK@emissionrate?$DN1?5?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CH@DOJHMLNC@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BD@KEGNGIBO@id?$DNfireball?9napalm?$AA@
	DD	FLAT:??_C@_0BC@LADMIPHA@light?$FL0?40?5?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BE@EOIHABDO@light?$FL0?475?$FN?$DN1?51?5?48?5?$AA@
	DD	FLAT:??_C@_0BF@OIJCKEHD@light?$FL1?40?5?$FN?$DN1?50?50?5?5?5?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@EKEEBNKJ@alpha?$FL1?$FN?$DN0?43?5?$AA@
	DD	FLAT:??_C@_0O@JPAJBKIK@color?$DN0?5?50?5?50?$AA@
	DD	FLAT:??_C@_0O@NJIGFCOM@lifespan?$DN1?5?45?$AA@
	DD	FLAT:??_C@_0O@JDHBNMAE@size?$FL0?$FN?5?$DN?5?510?$AA@
	DD	FLAT:??_C@_0P@DBLBCKOD@size?$FL1?$FN?5?$DN?5?5150?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0L@NMGOPFII@gravity?$DN?55?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@JOLFKNMH@initialvelocity?$DN10?55?$AA@
	DD	FLAT:??_C@_0BF@CGPEGICK@id?$DNfirework?9airburst?$AA@
	DD	FLAT:??_C@_0N@EEIDGNAD@lifespan?$DN5?51?$AA@
	DD	FLAT:??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@
	DD	FLAT:??_C@_0N@OPCHFNPK@size?$FL1?$FN?5?$DN?5?54?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LPGEHOIF@initialvelocity?$DN50?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CG@BFPKANBK@emissiontarget?$DNsphere?50?50?50?520?52@
	DD	FLAT:??_C@_0BC@PNEHOBIJ@id?$DNfirework?9shell?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0N@MEHPDKNJ@alpha?$FL0?$FN?$DN?47?5?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@
	DD	FLAT:??_C@_0N@JCFAKJLP@size?$FL1?$FN?5?$DN?5?51?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@GHEAHKPO@initialvelocity?$DN300?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@IANFEGLO@emissionrate?$DN15?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CE@PDOMLNFL@emissiontarget?$DNsphere?50?50?50?53?53?5@
	DD	FLAT:??_C@_0BA@JOLJGIOB@id?$DNfirework?9mis?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0M@DHOHCBOK@alpha?$FL0?$FN?$DN1?5?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0P@NHGAAMME@light?$FL0?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0P@HIKHHPOC@light?$FL1?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0N@HFNHPKOC@size?$FL0?$FN?5?$DN?5?52?$AA@
	DD	FLAT:??_C@_0N@JCFAKJLP@size?$FL1?$FN?5?$DN?5?51?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BE@NPPMBNJL@initialvelocity?$DN200?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BB@NGICPCFK@emissionid?$DNspark?$AA@
	DD	FLAT:??_C@_0BI@LGKIHFHK@emissionmode?$DNEMITPERSEC?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BM@DLFLMBMI@emissionid?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0CD@JOLJGHPK@emissiondomain?$DNsphere?50?50?50?51?51?5@
	DD	FLAT:??_C@_0CG@MNGDBCNN@emissiontarget?$DNsphere?50?50?50?510?51@
	DD	FLAT:??_C@_0BE@OJKMCAOI@id?$DNfirework?9sparkle?$AA@
	DD	FLAT:??_C@_0N@NAEOKMNO@lifespan?$DN2?01?$AA@
	DD	FLAT:??_C@_0M@HJNKMLLN@alpha?$FL0?$FN?$DN?51?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0M@KCCHHKLJ@color?$DN1?00?00?$AA@
	DD	FLAT:??_C@_0BB@INPADOAA@light?$FL0?40?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BB@GGMACNGL@light?$FL0?45?$FN?$DN1?50?50?$AA@
	DD	FLAT:??_C@_0BB@FFGFNAIB@light?$FL1?40?$FN?$DN1?51?50?$AA@
	DD	FLAT:??_C@_0N@DAAIEBCP@size?$FL0?$FN?5?$DN?5?45?$AA@
	DD	FLAT:??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LLOJACDH@initialvelocity?$DN30?$AA@
	DD	FLAT:??_C@_0P@LAOOHOMB@id?$DNfireball_wp?$AA@
	DD	FLAT:??_C@_0BE@NBIHEJNP@light?$FL0?40?5?$FN?$DN1?5?51?5?51?$AA@
	DD	FLAT:??_C@_0BG@HCMDJJCJ@light?$FL0?475?$FN?$DN1?5?51?5?5?48?5?$AA@
	DD	FLAT:??_C@_0BH@KPCFLPAC@light?$FL1?40?5?$FN?$DN1?5?50?5?50?5?5?5?$AA@
	DD	FLAT:??_C@_0O@PDAKJIIP@alpha?$FL0?$FN?$DN1?400?$AA@
	DD	FLAT:??_C@_0O@EPALALCM@alpha?$FL1?$FN?$DN0?44?5?$AA@
	DD	FLAT:??_C@_0M@BKJLBNNM@color?$DN1?01?00?$AA@
	DD	FLAT:??_C@_0N@GBOIDCNP@lifespan?$DN3?51?$AA@
	DD	FLAT:??_C@_0N@FFNEGKKI@size?$FL0?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0BC@EPMMIIJE@texture?$DNfire1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0L@PNNNILEB@gravity?$DN?46?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@PKNJGIMD@initialvelocity?$DN10?51?$AA@
	DD	FLAT:??_C@_08IOEFGHLG@id?$DNflash?$AA@
	DD	FLAT:??_C@_0P@CLKPKFHG@lifespan?$DN?43?0?42?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FBDAKLML@alpha?$FL1?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0O@JAPFAIGK@size?$FL0?$FN?5?$DN?5?530?$AA@
	DD	FLAT:??_C@_0N@JIMOIELF@size?$FL1?$FN?5?$DN?5?41?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0N@BCELEJIM@id?$DNflash?9air?$AA@
	DD	FLAT:??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0O@MGGGEMCG@id?$DNflash?9bomb?$AA@
	DD	FLAT:??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0N@DCOCGCII@id?$DNflash?9mav?$AA@
	DD	FLAT:??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@
	DD	FLAT:??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
	DD	FLAT:??_C@_0M@MFGPMBFH@alpha?$FL1?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0M@EACBBCGB@id?$DNflash?960?$AA@
	DD	FLAT:??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0M@NMHEPABG@alpha?$FL1?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0O@PKGINEOC@light?$DN1?51?51?5?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JFCLIFNH@size?$FL1?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@OPLBFHNK@initialvelocity?$DN0?$AA@
	DD	FLAT:??_C@_0BK@GNIJFPPC@id?$DNground?9explosion?9smoke?$AA@
	DD	FLAT:??_C@_0BB@NKAHJMFH@lifespan?$DN2?52?52?51?$AA@
	DD	FLAT:??_C@_0N@IMBPNFBB@alpha?$FL0?5?$FN?$DN?45?$AA@
	DD	FLAT:??_C@_0N@CFCOEEDK@alpha?$FL?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FKNAIHLD@alpha?$FL?43?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@DEGGKELO@alpha?$FL?44?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0O@JBDHGCFN@size?$FL0?$FN?5?$DN?5?520?$AA@
	DD	FLAT:??_C@_0O@NMHLMBGF@size?$FL?41?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_0O@FLOODPOC@size?$FL?42?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_0P@PJCMLOAI@size?$FL?43?$FN?5?$DN?5130?$AA@
	DD	FLAT:??_C@_0P@INLOMCHG@size?$FL?44?$FN?5?$DN?5200?$AA@
	DD	FLAT:??_C@_0M@KFJBLNHJ@color?$DN0?50?50?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NIOMNJKF@visibledistance?$DN45000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0P@OFCMCIFC@id?$DNmetal?9spark?$AA@
	DD	FLAT:??_C@_0BA@MNCFFKAH@lifespan?$DN?45?0?425?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GGIFENNP@alpha?$FL1?$FN?$DN?41?5?$AA@
	DD	FLAT:??_C@_0BD@NOKCLINA@light?$FL0?$FN?$DN1?5?475?5?425?$AA@
	DD	FLAT:??_C@_0BB@GOPILEMA@light?$FL1?$FN?$DN1?5?42?50?5?$AA@
	DD	FLAT:??_C@_0O@PJHMMMAM@size?$FL0?$FN?5?$DN?5?5?45?$AA@
	DD	FLAT:??_C@_0O@COBHKNCF@size?$FL1?$FN?5?$DN?5?41?5?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0L@LLFHFHAM@bounce?$DN?475?$AA@
	DD	FLAT:??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@
	DD	FLAT:??_C@_0M@NFAAAKMP@id?$DNmk77fuel?$AA@
	DD	FLAT:??_C@_0BF@NJJHFDJE@inheritvelocity?5?$DN?5?46?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0L@GEFEOLOH@drag?5?$DN?5?425?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0L@FJFLNPO@bounce?5?$DN?50?$AA@
	DD	FLAT:??_C@_0P@JEDKNJPL@color?5?$DN?51?01?0?49?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0O@JFLKBOOP@size?$FL0?$FN?5?$DN?5?540?$AA@
	DD	FLAT:??_C@_0N@PGDMGMLL@size?$FL1?$FN?5?$DN?5?55?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@LKCLGIAA@initialvelocity?$DN20?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BL@FOAJLFDI@emissionid?$DNfireball?9napalm?$AA@
	DD	FLAT:??_C@_0BK@LGLHINMO@emissionmode?$DNGROUNDIMPACT?$AA@
	DD	FLAT:??_C@_0BA@PJCPMOEJ@emissionrate?$DN70?$AA@
	DD	FLAT:??_C@_0CG@EKPBABMH@emissiondomain?$DNsphere?50?50?50?550?55@
	DD	FLAT:??_C@_0CI@CPKHOEDC@emissiontarget?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0BJ@GODONKPG@emissionvelocity?5?$DN?5500?55?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BI@FFNKHGDP@emissionid?$DNsmoke?9napalm?$AA@
	DD	FLAT:??_C@_0BG@LNIOOOJ@emissionmode?$DNEMITONCE?$AA@
	DD	FLAT:??_C@_0BB@PGFAGLLL@emissionrate?$DN120?$AA@
	DD	FLAT:??_C@_0CJ@IGCOKIIN@emissiondomain?$DNsphere?50?50?50?5300?5@
	DD	FLAT:??_C@_0CK@OFODHABP@emissiontarget?$DNsphere?50?50?50?5500?5@
	DD	FLAT:??_C@_0BJ@PFKPJIOA@emissionvelocity?5?$DN?5100?55?$AA@
	DD	FLAT:??_C@_08FCKBLHOJ@id?$DNspark?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0L@EHEDKCD@alpha?$FL0?$FN?$DN1?$AA@
	DD	FLAT:??_C@_0N@GBIMOFAD@alpha?$FL1?$FN?$DN?45?5?$AA@
	DD	FLAT:??_C@_0P@MOHLDNIF@light?$FL0?$FN?$DN1?51?51?$AA@
	DD	FLAT:??_C@_0BA@NLPIAAIJ@light?$FL1?$FN?$DN1?50?50?5?$AA@
	DD	FLAT:??_C@_0M@CGFHAMFC@size?$FL0?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_0M@KLANFECF@size?$FL1?$FN?5?$DN?52?$AA@
	DD	FLAT:??_C@_0BD@NIBFLENF@texture?$DNflare1?4dds?$AA@
	DD	FLAT:??_C@_09LNJCKABN@gravity?$DN1?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@MLICHAJO@initialvelocity?$DN150?$AA@
	DD	FLAT:??_C@_0P@PCOOOPAE@id?$DNsmoke_light?$AA@
	DD	FLAT:??_C@_0P@CCNCAHAE@lifespan?$DN3?52?51?$AA@
	DD	FLAT:??_C@_0O@LBOPPOGD@alpha?$FL0?40?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0O@GDKIBMIH@alpha?$FL0?41?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0O@EPHDJMHP@alpha?$FL1?40?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0O@CDINPJDB@size?$FL?45?$FN?5?$DN?515?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@HKHEMEG@gravity?$DN?5?43?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BE@CECOOILI@initialvelocity?$DN?510?$AA@
	DD	FLAT:??_C@_0BA@PPIIMMGF@id?$DNsmoke?9napalm?$AA@
	DD	FLAT:??_C@_0N@JDPNFBMN@lifespan?$DN7?54?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0P@IPFKLBJD@color?$DN?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0N@FNAMPJPL@size?$FL0?$FN?5?$DN?550?$AA@
	DD	FLAT:??_C@_0O@GLKGFAGB@size?$FL1?$FN?5?$DN?5150?$AA@
	DD	FLAT:??_C@_07NGIJIABG@drag?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@PFMNJEJL@gravity?$DN?9?43?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0N@OPLCJMLD@id?$DNsmoke?9gun?$AA@
	DD	FLAT:??_C@_0BA@DLBOKEAJ@lifespan?$DN10?53?52?$AA@
	DD	FLAT:??_C@_0M@ODDBCPC@alpha?$FL0?$FN?$DN?44?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@CFLCCLMG@color?$DN?5?42?5?42?5?42?$AA@
	DD	FLAT:??_C@_0P@IOFMDCBH@size?$FL0?$FN?5?$DN?5?51?5?5?$AA@
	DD	FLAT:??_C@_0N@JCAOKLMD@size?$FL?41?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0O@DFBKCPDF@size?$FL1?$FN?5?$DN?520?5?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_0M@HMJDEIBK@gravity?$DN0?40?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LIGNNGFJ@initialvelocity?$DN10?$AA@
	DD	FLAT:??_C@_0P@KFDKNL@id?$DNsmoke_white?$AA@
	DD	FLAT:??_C@_0P@FDGMOGLE@lifespan?$DN3?06?03?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@BOOLJELB@size?$FL2?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0BF@HDAAIHCO@id?$DNsmoke_white_large?$AA@
	DD	FLAT:??_C@_0P@JPIGPCNB@lifespan?$DN3?56?53?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0O@HKLDCNMG@alpha?$FL0?41?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0P@GDAGLHLA@alpha?$FL1?40?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0O@HFEJDBLO@color?$DN?51?01?01?5?$AA@
	DD	FLAT:??_C@_0N@FPEKEHKC@size?$FL0?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_0O@GOOJEGOE@size?$FL1?$FN?5?$DN?5120?$AA@
	DD	FLAT:??_C@_0O@EGFFABKB@size?$FL2?$FN?5?$DN?5200?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@JCMGKDJP@initialvelocity?$DN5?$AA@
	DD	FLAT:??_C@_0P@JPJHHOKF@id?$DNsmoke?9black?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0N@PHEHKAHP@alpha?$FL0?$FN?$DN?415?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FJIBIFEJ@size?$FL0?$FN?5?$DN?530?$AA@
	DD	FLAT:??_C@_0N@JDOAEHDM@size?$FL1?$FN?5?$DN?560?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@LKIMACFM@gravity?$DN?9?44?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0O@PAEONPFN@id?$DNsmoke?9bomb?$AA@
	DD	FLAT:??_C@_0N@OAMMKJJH@lifespan?$DN1?52?$AA@
	DD	FLAT:??_C@_0M@EBHCIEDF@alpha?$FL0?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0M@LIBIDFBC@alpha?$FL1?$FN?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FKAFFBCH@size?$FL0?$FN?5?$DN?510?$AA@
	DD	FLAT:??_C@_0M@IACAAHOG@size?$FL1?$FN?5?$DN?51?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0L@LCJMBNIG@gravity?$DN?41?$AA@
	DD	FLAT:??_C@_0BA@PNKCLCPL@emissionrate?$DN10?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@KIPDNKMJ@id?$DNsmoke?9black?9die?$AA@
	DD	FLAT:??_C@_0N@NHBCFJKF@lifespan?$DN4?52?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0M@ECDLMJFG@size?$FL0?$FN?5?$DN?55?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BG@IICBEIBG@visibledistance?$DN15000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BF@DHPDJDLC@id?$DNsmoke?9black?9light?$AA@
	DD	FLAT:??_C@_0M@FIGJLFHE@alpha?$FL0?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0N@FAPCMBPM@alpha?$FL1?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0BA@PMANLMON@color?$DN?42?5?42?5?42?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JJHOGKDG@size?$FL1?$FN?5?$DN?580?$AA@
	DD	FLAT:??_C@_08FCLOICNF@drag?$DN?425?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0M@OMNGKFNK@gravity?$DN?9?42?$AA@
	DD	FLAT:??_C@_0BF@MNJFJGIG@visibledistance?$DN5000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BC@ILHKNKHF@id?$DNsmoke?9lt?9brown?$AA@
	DD	FLAT:??_C@_0P@MBKKADNB@lifespan?$DN30?515?$AA@
	DD	FLAT:??_C@_0P@HBDCLFHG@alpha?$FL0?40?$FN?$DN?475?$AA@
	DD	FLAT:??_C@_0P@NCAKKIEH@alpha?$FL0?41?$FN?$DN?405?$AA@
	DD	FLAT:??_C@_0N@CJPBBCEG@alpha?$FL1?40?$FN?$DN0?$AA@
	DD	FLAT:??_C@_0BB@OBFEHICO@color?$DN?48?5?475?5?47?5?$AA@
	DD	FLAT:??_C@_0N@FIEDOPHO@size?$FL0?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0N@JAGEJDFC@size?$FL1?$FN?5?$DN?540?$AA@
	DD	FLAT:??_C@_07GDCHPOFL@drag?$DN?49?$AA@
	DD	FLAT:??_C@_0BD@EDEAEGPA@texture?$DNsmoke1?4dds?$AA@
	DD	FLAT:??_C@_0N@MCBAONDC@gravity?$DN?9?475?$AA@
	DD	FLAT:??_C@_0BG@EAMBMHGG@visibledistance?$DN10000?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@NACGHIAI@initialvelocity?$DN?95?$AA@
	DD	FLAT:??_C@_0BH@DKAELHAL@id?$DNsurface?9disturbance?$AA@
	DD	FLAT:??_C@_0L@BHNBFLGM@lifespan?$DN1?$AA@
	DD	FLAT:??_C@_0O@GGOBJGO@dieonground?$DN1?$AA@
	DD	FLAT:??_C@_0M@FAMNPLP@gravity?5?$DN?51?$AA@
	DD	FLAT:??_C@_0O@HEGPMJKO@drawtype?$DNnone?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BG@KLGIFKNB@inheritvelocity?5?$DN?5500?$AA@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@GGNCFPFJ@emissionid?$DNdust?9brown?$AA@
	DD	FLAT:??_C@_0CA@CCCKONJB@emissionmode?$DNEMITONGROUNDIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@
	DD	FLAT:??_C@_0L@DKCKMNFK@addemitter?$AA@
	DD	FLAT:??_C@_0BG@PAJPKMBC@emissionid?$DNwater?9mist?$AA@
	DD	FLAT:??_C@_0BP@KLPPPOIA@emissionmode?$DNEMITONWATERIMPACT?$AA@
	DD	FLAT:??_C@_0P@OGJCLBLG@emissionrate?$DN1?$AA@
	DD	FLAT:??_C@_0CC@KAIBOB@emissiondomain?$DNsphere?50?50?50?50?50?5@
	DD	FLAT:??_C@_0CI@BGLCMOAL@emissiontarget?$DNsphere?50?50?52?45?525@
	DD	FLAT:??_C@_0O@GONGNDCP@id?$DNwater?9mist?$AA@
	DD	FLAT:??_C@_0N@NJFEFFLK@lifespan?$DN2?51?$AA@
	DD	FLAT:??_C@_0M@CFBOEBDB@alpha?$FL0?$FN?$DN?47?$AA@
	DD	FLAT:??_C@_0M@JDDFGGNB@alpha?$FL1?$FN?$DN?42?$AA@
	DD	FLAT:??_C@_0BF@BFINHBFN@color?$FL0?$FN?$DN?49?5?492?5?492?5?$AA@
	DD	FLAT:??_C@_0N@FOPKKJCB@size?$FL0?$FN?5?$DN?5?51?$AA@
	DD	FLAT:??_C@_0N@JEOJOPOA@size?$FL1?$FN?5?$DN?520?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BD@GIPNMDIP@texture?$DNtrail0?4dds?$AA@
	DD	FLAT:??_C@_09KEIJJBFM@gravity?$DN0?$AA@
	DD	FLAT:??_C@_0O@EOEMGJHO@drawtype?$DNpoly?$AA@
	DD	FLAT:??_C@_0BD@LOKGBELC@initialvelocity?$DN40?$AA@
	DD	FLAT:??_C@_0BA@JAJHDPCO@id?$DNwillie_peter?$AA@
	DD	FLAT:??_C@_0M@KCIGFNPO@alpha?$FL0?$FN?$DN?48?$AA@
	DD	FLAT:??_C@_0M@IKCOFHJA@alpha?$FL1?$FN?$DN?43?$AA@
	DD	FLAT:??_C@_0N@BOHDDEL@color?$DN?51?01?00?$AA@
	DD	FLAT:??_C@_0N@NMLMMHAK@lifespan?$DN7?53?$AA@
	DD	FLAT:??_C@_0L@MPOLOJMD@gravity?$DN?44?$AA@
	DD	FLAT:??_C@_0BG@NAJGGGN@visibledistance?$DN30000?$AA@
	DD	FLAT:??_C@_0BK@OGGOCHDO@initialvelocity?5?$DN?5300?0?550?$AA@
	DD	FLAT:??_C@_09DPKKEELM@drag?5?$DN?5?44?$AA@
	DD	FLAT:??_C@_0M@DEILAFDE@trailid?5?$DN?59?$AA@
	DD	FLAT:??_C@_0BE@CNBLDLOA@inheritvelocity?5?$DN?45?$AA@
	DD	FLAT:??_C@_03JMGAKCCH@END?$AA@
?Limit@@3MA DD	041200000r			; 10	; Limit
?VLev@@3MA DD	03e4ccccdr			; 0.2	; VLev
?gParticleSysLitColor@@3UTcolor@@A DD 03f800000r ; 1	; gParticleSysLitColor
	DD	03f800000r			; 1
	DD	03f800000r			; 1
?Kx@@3MA DD	041200000r			; 10	; Kx
?nameListCount@DrawableParticleSys@@0HA DD 08cH		; DrawableParticleSys::nameListCount
?nameList@DrawableParticleSys@@0PAPADA DD FLAT:??_C@_05BLOKMLF@$NONE?$AA@ ; DrawableParticleSys::nameList
	DD	FLAT:??_C@_0BC@BOMIFAD@$AC_AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BF@HMHIKDHH@$SMALL_HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BA@KLLBPAAO@$AIR_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0O@FLOMILGP@$SMOKING_PART?$AA@
	DD	FLAT:??_C@_0O@DGAJIJII@$FLAMING_PART?$AA@
	DD	FLAT:??_C@_0BC@ELLNPPHI@$GROUND_EXPLOSION?$AA@
	DD	FLAT:??_C@_0BC@INPGLAPB@$TRAIL_SMOKECLOUD?$AA@
	DD	FLAT:??_C@_0BA@BPAEBOEF@$TRAIL_FIREBALL?$AA@
	DD	FLAT:??_C@_0P@MBNECFDH@$MISSILE_BURST?$AA@
	DD	FLAT:??_C@_0P@PANAOCHF@$CLUSTER_BURST?$AA@
	DD	FLAT:??_C@_0P@OCDELGHC@$AIR_EXPLOSION?$AA@
	DD	FLAT:??_C@_07OLELJONK@$EJECT1?$AA@
	DD	FLAT:??_C@_07MAGGMNBJ@$EJECT2?$AA@
	DD	FLAT:??_C@_0M@GMLDLKPI@$WATERCLOUD?$AA@
	DD	FLAT:??_C@_0P@HNEALOIJ@$AIR_DUSTCLOUD?$AA@
	DD	FLAT:??_C@_09PBANNOMA@$GUNSMOKE?$AA@
	DD	FLAT:??_C@_0BB@KGDMIIG@$AIR_SMOKECLOUD2?$AA@
	DD	FLAT:??_C@_08HCJFKFMG@$GUNFIRE?$AA@
	DD	FLAT:??_C@_0BI@IMOMFIOL@$FEATURE_CHAIN_REACTION?$AA@
	DD	FLAT:??_C@_0BB@JNBBHBJO@$WATER_EXPLOSION?$AA@
	DD	FLAT:??_C@_0M@CKAJFEHD@$SAM_LAUNCH?$AA@
	DD	FLAT:??_C@_0BA@EBJOGJFA@$MISSILE_LAUNCH?$AA@
	DD	FLAT:??_C@_06EJALBEFN@$DUST1?$AA@
	DD	FLAT:??_C@_06EJLCHAON@$CHAFF?$AA@
	DD	FLAT:??_C@_0BD@HHIKPMDO@$WATER_WAKE_MEDIUM?$AA@
	DD	FLAT:??_C@_06MDPLNMK@$TIMER?$AA@
	DD	FLAT:??_C@_0BA@OFIMOCKA@$DIST_AIRBURSTS?$AA@
	DD	FLAT:??_C@_0BD@KMAOCHEK@$DIST_GROUNDBURSTS?$AA@
	DD	FLAT:??_C@_0BC@JEIFIDEK@$DIST_SAMLAUNCHES?$AA@
	DD	FLAT:??_C@_0BB@KIGPJNOO@$DIST_AALAUNCHES?$AA@
	DD	FLAT:??_C@_0BC@IOFDNHFB@$WATER_WAKE_LARGE?$AA@
	DD	FLAT:??_C@_0N@CAEEEBDJ@$RAND_CRATER?$AA@
	DD	FLAT:??_C@_0BM@KKLDEHHG@$GROUND_EXPLOSION_NO_CRATER?$AA@
	DD	FLAT:??_C@_0M@IDJMABAJ@$MOVING_BSP?$AA@
	DD	FLAT:??_C@_0M@MIOPLGGI@$DIST_ARMOR?$AA@
	DD	FLAT:??_C@_0P@IJBBCBME@$DIST_INFANTRY?$AA@
	DD	FLAT:??_C@_0N@PBPCLLCB@$TRACER_FIRE?$AA@
	DD	FLAT:??_C@_05BJJOCLM@$FIRE?$AA@
	DD	FLAT:??_C@_0P@HDAOEOMN@$GROUND_STRIKE?$AA@
	DD	FLAT:??_C@_0O@JFMJLKCD@$WATER_STRIKE?$AA@
	DD	FLAT:??_C@_0BA@ENJJHMJP@$VERTICAL_SMOKE?$AA@
	DD	FLAT:??_C@_0M@LIEKLBKJ@$TRAIL_FIRE?$AA@
	DD	FLAT:??_C@_0BB@LLBANLKI@$BILLOWING_SMOKE?$AA@
	DD	FLAT:??_C@_0P@KDFPOMNC@$HIT_EXPLOSION?$AA@
	DD	FLAT:??_C@_07BAJMGNIB@$SPARKS?$AA@
	DD	FLAT:??_C@_0BF@BHNOJPJD@$ARTILLERY_EXPLOSION?$AA@
	DD	FLAT:??_C@_0L@CIEAMLJP@$DUSTCLOUD?$AA@
	DD	FLAT:??_C@_07BADNCOKI@$NAPALM?$AA@
	DD	FLAT:??_C@_09HCPICGHD@$AIRBURST?$AA@
	DD	FLAT:??_C@_0N@FPAIFPGJ@$GROUNDBURST?$AA@
	DD	FLAT:??_C@_0BG@OLIHIIHD@$GROUND_STRIKE_NOFIRE?$AA@
	DD	FLAT:??_C@_0BE@PONDFLLA@$LONG_HANGING_SMOKE?$AA@
	DD	FLAT:??_C@_0M@KDAJPJMF@$SMOKETRAIL?$AA@
	DD	FLAT:??_C@_0N@CANBGKOJ@$DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0BD@HECFDDBO@$VEHICLE_EXPLOSION?$AA@
	DD	FLAT:??_C@_0CB@KNKGFLCK@$RISING_GROUNDHIT_EXPLOSION_DEBR@
	DD	FLAT:??_C@_0L@JHHLIBMM@$FIRETRAIL?$AA@
	DD	FLAT:??_C@_0O@CJBPDGKO@$FIRE_NOSMOKE?$AA@
	DD	FLAT:??_C@_0P@EPEFGGK@$LANDING_SMOKE?$AA@
	DD	FLAT:??_C@_0N@BDNHADJG@$WATER_CLOUD?$AA@
	DD	FLAT:??_C@_0M@JAIKAGBH@$WATERTRAIL?$AA@
	DD	FLAT:??_C@_0M@CBDHDDAH@$GUN_TRACER?$AA@
	DD	FLAT:??_C@_0L@PKGHLOBN@$AC_DEBRIS?$AA@
	DD	FLAT:??_C@_0M@IEJMGEJC@$CAT_LAUNCH?$AA@
	DD	FLAT:??_C@_0L@LNCCIKDA@$FLARE_GFX?$AA@
	DD	FLAT:??_C@_0BC@BPDJLEJM@$SPARKS_NO_DEBRIS?$AA@
	DD	FLAT:??_C@_0O@LLCCCNLK@$BURNING_PART?$AA@
	DD	FLAT:??_C@_0BG@EMKCJDNK@$AIR_EXPLOSION_NOGLOW?$AA@
	DD	FLAT:??_C@_0BG@GLFGBCCB@$HIT_EXPLOSION_NOGLOW?$AA@
	DD	FLAT:??_C@_0BC@LDJPHPGH@$SHOCK_RING_SMALL?$AA@
	DD	FLAT:??_C@_0BD@FKCLKDOC@$FAST_FADING_SMOKE?$AA@
	DD	FLAT:??_C@_0BF@CGOPDEKG@$LONG_HANGING_SMOKE2?$AA@
	DD	FLAT:??_C@_0P@MDLBFKBD@$AAA_EXPLOSION?$AA@
	DD	FLAT:??_C@_06MLIHPLLM@$FLAME?$AA@
	DD	FLAT:??_C@_0BB@KPDIGJCB@$AIR_PENETRATION?$AA@
	DD	FLAT:??_C@_0BE@FKNHNBBG@$GROUND_PENETRATION?$AA@
	DD	FLAT:??_C@_0BC@HEMFHKOO@$DEBRISTRAIL_DUST?$AA@
	DD	FLAT:??_C@_0N@FHLBFGCP@$FIRE_EXPAND?$AA@
	DD	FLAT:??_C@_0BF@IGFDDP@$FIRE_EXPAND_NOSMOKE?$AA@
	DD	FLAT:??_C@_0BC@NEMJPHID@$GROUND_DUSTCLOUD?$AA@
	DD	FLAT:??_C@_0BE@PMFDBDAM@$SHAPED_FIRE_DEBRIS?$AA@
	DD	FLAT:??_C@_09GLLEIOEM@$FIRE_HOT?$AA@
	DD	FLAT:??_C@_09BLDPOJPJ@$FIRE_MED?$AA@
	DD	FLAT:??_C@_0L@EEGOMELM@$FIRE_COOL?$AA@
	DD	FLAT:??_C@_09OJBLEPF@$FIREBALL?$AA@
	DD	FLAT:??_C@_06EILGBPH@$FIRE1?$AA@
	DD	FLAT:??_C@_0BD@BLIFMAPH@$SHIP_BURNING_FIRE?$AA@
	DD	FLAT:??_C@_0BC@FNCHPLGF@$CAT_RANDOM_STEAM?$AA@
	DD	FLAT:??_C@_0L@MFGEBACB@$CAT_STEAM?$AA@
	DD	FLAT:??_C@_06GAOHKEPD@$FIRE5?$AA@
	DD	FLAT:??_C@_06ELMKPHDA@$FIRE6?$AA@
	DD	FLAT:??_C@_0L@FKFHKJDD@$FIRESMOKE?$AA@
	DD	FLAT:??_C@_0M@IOMEIHOA@$TRAILSMOKE?$AA@
	DD	FLAT:??_C@_0O@GGEMIMEL@$VEHICLE_DUST?$AA@
	DD	FLAT:??_C@_06FCNBMGHB@$FIRE7?$AA@
	DD	FLAT:??_C@_0M@DAEACMEC@$BLUE_CLOUD?$AA@
	DD	FLAT:??_C@_0BA@EEAINKAO@$WATER_FIREBALL?$AA@
	DD	FLAT:??_C@_0BD@KOMHHAE@$LINKED_PERSISTANT?$AA@
	DD	FLAT:??_C@_0BC@FCGFHKGE@$TIMED_PERSISTANT?$AA@
	DD	FLAT:??_C@_0O@MIHANENL@$CLUSTER_BOMB?$AA@
	DD	FLAT:??_C@_0BB@OHHMLBBB@$SMOKING_FEATURE?$AA@
	DD	FLAT:??_C@_0BC@CEOOMEA@$STEAMING_FEATURE?$AA@
	DD	FLAT:??_C@_0N@PPGLMIDN@$STEAM_CLOUD?$AA@
	DD	FLAT:??_C@_0O@KPFFDJOH@$GROUND_FLASH?$AA@
	DD	FLAT:??_C@_0BD@OPAAFBCL@$FEATURE_EXPLOSION?$AA@
	DD	FLAT:??_C@_0P@PMPIOGGN@$MESSAGE_TIMER?$AA@
	DD	FLAT:??_C@_09GKBEHEGB@$DURANDAL?$AA@
	DD	FLAT:??_C@_08PCKGLDAM@$CRATER2?$AA@
	DD	FLAT:??_C@_08OLLNICEN@$CRATER3?$AA@
	DD	FLAT:??_C@_08KEPMBEIK@$CRATER4?$AA@
	DD	FLAT:??_C@_0L@KEEJPFIG@$BIG_SMOKE?$AA@
	DD	FLAT:??_C@_09BIMDOBB@$BIG_DUST?$AA@
	DD	FLAT:??_C@_0BH@HBBHMOCF@$HIT_EXPLOSION_NOSMOKE?$AA@
	DD	FLAT:??_C@_0O@LODFOJP@$ROCKET_BURST?$AA@
	DD	FLAT:??_C@_0CA@FOCMEGOJ@$CAMP_HIT_EXPLOSION_DEBRISTRAIL?$AA@
	DD	FLAT:??_C@_0BB@JANAIDAF@$VEHICLE_BURNING?$AA@
	DD	FLAT:??_C@_0BG@OBFBPPFP@$INCENDIARY_EXPLOSION?$AA@
	DD	FLAT:??_C@_0O@IMGDAOCN@$SPARK_TRACER?$AA@
	DD	FLAT:??_C@_0BC@CGBICGMH@$WATER_WAKE_SMALL?$AA@
	DD	FLAT:??_C@_0P@JKPKOBK@?9?9?9?5kludge?5?9?9?9?$AA@
	DD	FLAT:??_C@_0BA@IOILNHLJ@$GUN_HIT_GROUND?$AA@
	DD	FLAT:??_C@_0BA@GEFBMCKI@$GUN_HIT_OBJECT?$AA@
	DD	FLAT:??_C@_0P@BNFGAEGO@$GUN_HIT_WATER?$AA@
	DD	FLAT:??_C@_0BA@LHIGJAB@$VEHICLE_DIEING?$AA@
	DD	FLAT:??_C@_0BC@BHEEALFD@$AC_EARLY_BURNING?$AA@
	DD	FLAT:??_C@_0O@PPHLOPDL@$AC_BURNING_1?$AA@
	DD	FLAT:??_C@_0O@NEFGLMPI@$AC_BURNING_2?$AA@
	DD	FLAT:??_C@_0O@MNENINLJ@$AC_BURNING_3?$AA@
	DD	FLAT:??_C@_0O@ICAMBLHO@$AC_BURNING_4?$AA@
	DD	FLAT:??_C@_0O@JLBHCKDP@$AC_BURNING_5?$AA@
	DD	FLAT:??_C@_0O@LADKHJPM@$AC_BURNING_6?$AA@
	DD	FLAT:??_C@_0L@BHNLJEIM@$GUN_SMOKE?$AA@
	DD	FLAT:??_C@_05DINBNJKF@$NUKE?$AA@
	DD	FLAT:??_C@_0P@ILCDNDIG@$VORTEX_STRONG?$AA@
	DD	FLAT:??_C@_0P@FEBPHMMO@$VORTEX_MEDIUM?$AA@
	DD	FLAT:??_C@_0N@EPFGNHEC@$VORTEX_WEAK?$AA@
	DD	FLAT:??_C@_0BF@KBPBAPEK@$VORTEX_LARGE_STRONG?$AA@
	DD	FLAT:??_C@_0BF@HOMNKAAC@$VORTEX_LARGE_MEDIUM?$AA@
	DD	FLAT:??_C@_0BD@FPMDALC@$VORTEX_LARGE_WEAK?$AA@
?rotation@ParticleNode@@2PAUTrotation@@A DD FLAT:?psIRotation@@3UTrotation@@A ; ParticleNode::rotation
_DATA	ENDS
;	COMDAT ??_C@_0O@DEGGKELO@alpha?$FL?44?$FN?$DN?405?$AA@
CONST	SEGMENT
??_C@_0O@DEGGKELO@alpha?$FL?44?$FN?$DN?405?$AA@ DB 'alpha[.4]=.05', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FKNAIHLD@alpha?$FL?43?$FN?$DN?41?$AA@
CONST	SEGMENT
??_C@_0N@FKNAIHLD@alpha?$FL?43?$FN?$DN?41?$AA@ DB 'alpha[.3]=.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@
CONST	SEGMENT
??_C@_0N@LKKBAHNF@alpha?$FL?42?$FN?$DN?42?$AA@ DB 'alpha[.2]=.2', 00H ; `string'
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0N@CFCOEEDK@alpha?$FL?41?$FN?$DN?43?$AA@
CONST	SEGMENT
??_C@_0N@CFCOEEDK@alpha?$FL?41?$FN?$DN?43?$AA@ DB 'alpha[.1]=.3', 00H ; `string'
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ??_C@_0N@IMBPNFBB@alpha?$FL0?5?$FN?$DN?45?$AA@
CONST	SEGMENT
??_C@_0N@IMBPNFBB@alpha?$FL0?5?$FN?$DN?45?$AA@ DB 'alpha[0 ]=.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NKAHJMFH@lifespan?$DN2?52?52?51?$AA@
CONST	SEGMENT
??_C@_0BB@NKAHJMFH@lifespan?$DN2?52?52?51?$AA@ DB 'lifespan=2 2 2 1', 00H ; `string'
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ??_C@_0BK@GNIJFPPC@id?$DNground?9explosion?9smoke?$AA@
CONST	SEGMENT
??_C@_0BK@GNIJFPPC@id?$DNground?9explosion?9smoke?$AA@ DB 'id=ground-expl'
	DB	'osion-smoke', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFCLIFNH@size?$FL1?$FN?5?$DN?530?$AA@
CONST	SEGMENT
??_C@_0N@JFCLIFNH@size?$FL1?$FN?5?$DN?530?$AA@ DB 'size[1] = 30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NMHEPABG@alpha?$FL1?$FN?$DN?45?$AA@
CONST	SEGMENT
??_C@_0M@NMHEPABG@alpha?$FL1?$FN?$DN?45?$AA@ DB 'alpha[1]=.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EACBBCGB@id?$DNflash?960?$AA@
CONST	SEGMENT
??_C@_0M@EACBBCGB@id?$DNflash?960?$AA@ DB 'id=flash-60', 00H ; `string'
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ??_C@_0N@DCOCGCII@id?$DNflash?9mav?$AA@
CONST	SEGMENT
??_C@_0N@DCOCGCII@id?$DNflash?9mav?$AA@ DB 'id=flash-mav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@
CONST	SEGMENT
??_C@_0N@FMMOJDMM@size?$FL0?$FN?5?$DN?540?$AA@ DB 'size[0] = 40', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@
CONST	SEGMENT
??_C@_0P@KCFDDOB@lifespan?$DN?48?0?44?$AA@ DB 'lifespan=.8,.4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGGGEMCG@id?$DNflash?9bomb?$AA@
CONST	SEGMENT
??_C@_0O@MGGGEMCG@id?$DNflash?9bomb?$AA@ DB 'id=flash-bomb', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@
CONST	SEGMENT
??_C@_0M@LLJNGMLP@alpha?$FL0?$FN?$DN?49?$AA@ DB 'alpha[0]=.9', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@
CONST	SEGMENT
??_C@_0P@EAPDIMFJ@lifespan?$DN?48?5?44?$AA@ DB 'lifespan=.8 .4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BCELEJIM@id?$DNflash?9air?$AA@
CONST	SEGMENT
??_C@_0N@BCELEJIM@id?$DNflash?9air?$AA@ DB 'id=flash-air', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JAPFAIGK@size?$FL0?$FN?5?$DN?5?530?$AA@
CONST	SEGMENT
??_C@_0O@JAPFAIGK@size?$FL0?$FN?5?$DN?5?530?$AA@ DB 'size[0] =  30', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CLKPKFHG@lifespan?$DN?43?0?42?$AA@
CONST	SEGMENT
??_C@_0P@CLKPKFHG@lifespan?$DN?43?0?42?$AA@ DB 'lifespan=.3,.2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOEFGHLG@id?$DNflash?$AA@
CONST	SEGMENT
??_C@_08IOEFGHLG@id?$DNflash?$AA@ DB 'id=flash', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PKNJGIMD@initialvelocity?$DN10?51?$AA@
CONST	SEGMENT
??_C@_0BF@PKNJGIMD@initialvelocity?$DN10?51?$AA@ DB 'initialvelocity=10 1'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PNNNILEB@gravity?$DN?46?$AA@
CONST	SEGMENT
??_C@_0L@PNNNILEB@gravity?$DN?46?$AA@ DB 'gravity=.6', 00H ; `string'
CONST	ENDS
PUBLIC	_fabsf
PUBLIC	_asinf
PUBLIC	_cosf
PUBLIC	_log10f
PUBLIC	_sinf
PUBLIC	?abs@@YAMM@Z					; abs
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	?log10@@YAMM@Z					; log10
PUBLIC	?pow@@YAMMH@Z					; pow
PUBLIC	??$_Pow_int@M@@YAMMH@Z				; _Pow_int<float>
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??0DrawableObject@@QAE@M@Z			; DrawableObject::DrawableObject
PUBLIC	??1DrawableObject@@UAE@XZ			; DrawableObject::~DrawableObject
PUBLIC	?GetRadarSign@DrawableObject@@UAEMXZ		; DrawableObject::GetRadarSign
PUBLIC	?SetLabel@DrawableObject@@UAEXPADK@Z		; DrawableObject::SetLabel
PUBLIC	?SetInhibitFlag@DrawableObject@@UAEXH@Z		; DrawableObject::SetInhibitFlag
PUBLIC	?Draw@DrawableObject@@UAEXPAVRender3D@@@Z	; DrawableObject::Draw
PUBLIC	?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z ; DrawableObject::GetRayHit
PUBLIC	?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z ; DrawableObject::SetParentList
PUBLIC	?SetPosition@DrawableObject@@QAEXPAUTpoint@@@Z	; DrawableObject::SetPosition
PUBLIC	??_GDrawableObject@@UAEPAXI@Z			; DrawableObject::`scalar deleting destructor'
PUBLIC	?CompareWith@ANode@@UAEHPAV1@@Z			; ANode::CompareWith
PUBLIC	??1AList@@QAE@XZ				; AList::~AList
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@XZ			; D3DXVECTOR3::operator-
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z		; D3DXVec3Dot
PUBLIC	?D3DXMatrixIdentity@@YAPAUD3DXMATRIX@@PAU1@@Z	; D3DXMatrixIdentity
PUBLIC	?F_I32@@YAKM@Z					; F_I32
PUBLIC	?F_ABS@@YAMM@Z					; F_ABS
PUBLIC	?GetState@CDXEngine@@QAE?AW4DX_StateType@@XZ	; CDXEngine::GetState
PUBLIC	?LODBiasCx@CDXEngine@@QAEMXZ			; CDXEngine::LODBiasCx
PUBLIC	?GenerateFastRandom@@YAJXZ			; GenerateFastRandom
PUBLIC	?PRANDFloat@@YAMXZ				; PRANDFloat
PUBLIC	?PRANDFloatPos@@YAMXZ				; PRANDFloatPos
PUBLIC	?mlSinCos@@YAXPAUmlTrig@@M@Z			; mlSinCos
PUBLIC	?checked_atan2@@YANNN@Z				; checked_atan2
PUBLIC	??0DPS_Node@@QAE@XZ				; DPS_Node::DPS_Node
PUBLIC	??1DPS_Node@@QAE@XZ				; DPS_Node::~DPS_Node
PUBLIC	?GetRandomDirection@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomDirection
PUBLIC	?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomPosition
PUBLIC	?Parse@ParticleDomain@@QAEXXZ			; ParticleDomain::Parse
PUBLIC	?Run@ParticleAnimationNode@@QAEHAAHAAMMAAUTpoint@@1@Z ; ParticleAnimationNode::Run
PUBLIC	??0ParticleAnimationNode@@QAE@XZ		; ParticleAnimationNode::ParticleAnimationNode
PUBLIC	??0DrawableParticleSys@@QAE@HM@Z		; DrawableParticleSys::DrawableParticleSys
PUBLIC	??1DrawableParticleSys@@UAE@XZ			; DrawableParticleSys::~DrawableParticleSys
PUBLIC	?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z ; DrawableParticleSys::AddParticle
PUBLIC	?AddParticle@DrawableParticleSys@@QAEXPAUTpoint@@0@Z ; DrawableParticleSys::AddParticle
PUBLIC	?Exec@DrawableParticleSys@@QAEXXZ		; DrawableParticleSys::Exec
PUBLIC	?Draw@DrawableParticleSys@@UAEXPAVRenderOTW@@H@Z ; DrawableParticleSys::Draw
PUBLIC	?HasParticles@DrawableParticleSys@@QAEHXZ	; DrawableParticleSys::HasParticles
PUBLIC	?LoadParameters@DrawableParticleSys@@SA_NXZ	; DrawableParticleSys::LoadParameters
PUBLIC	?UnloadParameters@DrawableParticleSys@@SAXXZ	; DrawableParticleSys::UnloadParameters
PUBLIC	?SetGreenMode@DrawableParticleSys@@SAXH@Z	; DrawableParticleSys::SetGreenMode
PUBLIC	?SetCloudColor@DrawableParticleSys@@SAXPAUTcolor@@@Z ; DrawableParticleSys::SetCloudColor
PUBLIC	?ClearParticleList@DrawableParticleSys@@SAXXZ	; DrawableParticleSys::ClearParticleList
PUBLIC	?GetErrorMessage@DrawableParticleSys@@SAPADXZ	; DrawableParticleSys::GetErrorMessage
PUBLIC	?PS_AddParticleEx@DrawableParticleSys@@SAXHPAUTpoint@@0@Z ; DrawableParticleSys::PS_AddParticleEx
PUBLIC	?SetHeadVelocity@DrawableParticleSys@@QAEXPAUTpoint@@@Z ; DrawableParticleSys::SetHeadVelocity
PUBLIC	?ClearParticles@DrawableParticleSys@@AAEXXZ	; DrawableParticleSys::ClearParticles
PUBLIC	?FindTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::FindTextureNode
PUBLIC	?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::GetTextureNode
PUBLIC	?GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z ; DrawableParticleSys::GetFramesList
PUBLIC	?FindAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ; DrawableParticleSys::FindAnimationNode
PUBLIC	?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ; DrawableParticleSys::GetAnimationNode
PUBLIC	?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z ; DrawableParticleSys::FindGroupNode
PUBLIC	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z	; DrawableParticleSys::PS_ListInit
PUBLIC	?PS_ListsInit@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_ListsInit
PUBLIC	?PS_ListsRelease@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_ListsRelease
PUBLIC	?PS_AddItem@DrawableParticleSys@@CAKK@Z		; DrawableParticleSys::PS_AddItem
PUBLIC	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z	; DrawableParticleSys::PS_RemoveItem
PUBLIC	?PS_LoadParameters@DrawableParticleSys@@CA_NXZ	; DrawableParticleSys::PS_LoadParameters
PUBLIC	?PS_AddParticle@DrawableParticleSys@@CAXHPAUTpoint@@00MKK@Z ; DrawableParticleSys::PS_AddParticle
PUBLIC	?PS_ParticleRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_ParticleRun
PUBLIC	?PS_AddTrail@DrawableParticleSys@@CAKHPAUTpoint@@K_NMM@Z ; DrawableParticleSys::PS_AddTrail
PUBLIC	?PS_TrailRun@DrawableParticleSys@@CAXXZ		; DrawableParticleSys::PS_TrailRun
PUBLIC	?PS_TrailsClear@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_TrailsClear
PUBLIC	?PS_AddSubTrail@DrawableParticleSys@@CAXAAUTrailSubPartType@@HMMPAUTpoint@@11K@Z ; DrawableParticleSys::PS_AddSubTrail
PUBLIC	?PS_SubTrailRun@DrawableParticleSys@@CAXPAUTrailSubPartType@@AAUD3DXVECTOR3@@AAK2KK@Z ; DrawableParticleSys::PS_SubTrailRun
PUBLIC	?PS_AddSound@DrawableParticleSys@@CAXKK@Z	; DrawableParticleSys::PS_AddSound
PUBLIC	?PS_SoundRun@DrawableParticleSys@@CAXXZ		; DrawableParticleSys::PS_SoundRun
PUBLIC	?PS_LightsRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_LightsRun
PUBLIC	?PS_AddPoly@DrawableParticleSys@@CAXKK@Z	; DrawableParticleSys::PS_AddPoly
PUBLIC	?PS_PolyRun@DrawableParticleSys@@CAXXZ		; DrawableParticleSys::PS_PolyRun
PUBLIC	?PS_ClustersReset@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_ClustersReset
PUBLIC	?PS_ClustersRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_ClustersRun
PUBLIC	?PS_EmitterRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_EmitterRun
PUBLIC	?PS_GenerateEmitters@DrawableParticleSys@@CAXKAAUPS_PPType@@@Z ; DrawableParticleSys::PS_GenerateEmitters
PUBLIC	?PS_AddEmitter@DrawableParticleSys@@CAXKPAUParticleEmitterParam@@K@Z ; DrawableParticleSys::PS_AddEmitter
PUBLIC	?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedLinLogFloat
PUBLIC	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
PUBLIC	?PS_EvalTimedRGB@DrawableParticleSys@@CA?AUpsRGB@@MAAHHPAUtimedRGB@@@Z ; DrawableParticleSys::PS_EvalTimedRGB
PUBLIC	?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ; DrawableParticleSys::SetupTexturesOnDevice
PUBLIC	?ReleaseTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ; DrawableParticleSys::ReleaseTexturesOnDevice
PUBLIC	?IsValidPSId@DrawableParticleSys@@SAHH@Z	; DrawableParticleSys::IsValidPSId
PUBLIC	?GetNameId@DrawableParticleSys@@SAHPAD@Z	; DrawableParticleSys::GetNameId
PUBLIC	?PS_Exec@DrawableParticleSys@@SAXPAVRenderOTW@@@Z ; DrawableParticleSys::PS_Exec
PUBLIC	?PS_KillTrail@DrawableParticleSys@@SAXK@Z	; DrawableParticleSys::PS_KillTrail
PUBLIC	?PS_EmitTrail@DrawableParticleSys@@SAKKHMMMMM@Z	; DrawableParticleSys::PS_EmitTrail
PUBLIC	??_GDrawableParticleSys@@UAEPAXI@Z		; DrawableParticleSys::`scalar deleting destructor'
PUBLIC	?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ; CTimeOfDay::GetTextureLightingColor
PUBLIC	?GetClockTime@TimeManager@@QAEKXZ		; TimeManager::GetClockTime
PUBLIC	?X@Render3D@@QAEMXZ				; Render3D::X
PUBLIC	?Y@Render3D@@QAEMXZ				; Render3D::Y
PUBLIC	?Z@Render3D@@QAEMXZ				; Render3D::Z
PUBLIC	?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ	; RealWeather::GetWindVector
PUBLIC	?GetFPS@OTWDriverClass@@QAEMXZ			; OTWDriverClass::GetFPS
PUBLIC	?RED_Distance3D@@YAMPAUD3DXVECTOR3@@0@Z		; RED_Distance3D
PUBLIC	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z		; RED_Lenght3D
PUBLIC	?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z	; RED_NormalizeVector
PUBLIC	?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z		; RED_Normal
PUBLIC	??0ParticleTextureNode@@QAE@XZ			; ParticleTextureNode::ParticleTextureNode
PUBLIC	??1ParticleTextureNode@@QAE@XZ			; ParticleTextureNode::~ParticleTextureNode
PUBLIC	??_GParticleTextureNode@@QAEPAXI@Z		; ParticleTextureNode::`scalar deleting destructor'
PUBLIC	?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ	; ParticleGroupNode::GetRandomArgument
PUBLIC	??0ParticleGroupNode@@QAE@PAD@Z			; ParticleGroupNode::ParticleGroupNode
PUBLIC	??0ParticleParamNode@@QAE@XZ			; ParticleParamNode::ParticleParamNode
PUBLIC	??1ParticleParamNode@@QAE@XZ			; ParticleParamNode::~ParticleParamNode
PUBLIC	??_GParticleParamNode@@QAEPAXI@Z		; ParticleParamNode::`scalar deleting destructor'
PUBLIC	??0ParticleNode@@QAE@HPAUTpoint@@00M@Z		; ParticleNode::ParticleNode
PUBLIC	??1ParticleNode@@QAE@XZ				; ParticleNode::~ParticleNode
PUBLIC	?Draw@ParticleNode@@QAEXPAVRenderOTW@@H@Z	; ParticleNode::Draw
PUBLIC	?IsDead@ParticleNode@@QAEHXZ			; ParticleNode::IsDead
PUBLIC	?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z	; ParticleNode::Init
PUBLIC	?EvalTimedLinLogFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedLinLogFloat
PUBLIC	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
PUBLIC	?EvalTimedRGBA@ParticleNode@@QAE?AUpsRGBA@@AAHHPAUtimedRGBA@@@Z ; ParticleNode::EvalTimedRGBA
PUBLIC	?EvalTimedRGB@ParticleNode@@QAE?AUpsRGB@@AAHHPAUtimedRGB@@@Z ; ParticleNode::EvalTimedRGB
PUBLIC	??_GParticleNode@@QAEPAXI@Z			; ParticleNode::`scalar deleting destructor'
PUBLIC	??0SubPart@@QAE@PAVParticleNode@@@Z		; SubPart::SubPart
PUBLIC	??0SubPart@@QAE@XZ				; SubPart::SubPart
PUBLIC	??1SubPart@@UAE@XZ				; SubPart::~SubPart
PUBLIC	?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z	; SubPart::IsRunning
PUBLIC	??_GSubPart@@UAEPAXI@Z				; SubPart::`scalar deleting destructor'
PUBLIC	??0SubPartMovementOrientation@@QAE@PAVParticleNode@@@Z ; SubPartMovementOrientation::SubPartMovementOrientation
PUBLIC	?Run@SubPartMovementOrientation@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartMovementOrientation::Run
PUBLIC	??1SubPartMovementOrientation@@UAE@XZ		; SubPartMovementOrientation::~SubPartMovementOrientation
PUBLIC	??_GSubPartMovementOrientation@@UAEPAXI@Z	; SubPartMovementOrientation::`scalar deleting destructor'
PUBLIC	??0SubPartPoly@@QAE@PAVParticleNode@@@Z		; SubPartPoly::SubPartPoly
PUBLIC	?Run@SubPartPoly@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartPoly::Run
PUBLIC	??1SubPartPoly@@UAE@XZ				; SubPartPoly::~SubPartPoly
PUBLIC	??_GSubPartPoly@@UAEPAXI@Z			; SubPartPoly::`scalar deleting destructor'
PUBLIC	??0SubPartTrail@@QAE@PAVParticleNode@@@Z	; SubPartTrail::SubPartTrail
PUBLIC	??1SubPartTrail@@UAE@XZ				; SubPartTrail::~SubPartTrail
PUBLIC	?Run@SubPartTrail@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartTrail::Run
PUBLIC	?IsRunning@SubPartTrail@@UAEHPAVParticleNode@@@Z ; SubPartTrail::IsRunning
PUBLIC	??_GSubPartTrail@@UAEPAXI@Z			; SubPartTrail::`scalar deleting destructor'
PUBLIC	??0SubPartBSP@@QAE@PAVParticleNode@@@Z		; SubPartBSP::SubPartBSP
PUBLIC	??1SubPartBSP@@UAE@XZ				; SubPartBSP::~SubPartBSP
PUBLIC	?Run@SubPartBSP@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartBSP::Run
PUBLIC	??_GSubPartBSP@@UAEPAXI@Z			; SubPartBSP::`scalar deleting destructor'
PUBLIC	??0SubPartSound@@QAE@PAVParticleNode@@@Z	; SubPartSound::SubPartSound
PUBLIC	??1SubPartSound@@UAE@XZ				; SubPartSound::~SubPartSound
PUBLIC	?Run@SubPartSound@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartSound::Run
PUBLIC	?IsRunning@SubPartSound@@UAEHPAVParticleNode@@@Z ; SubPartSound::IsRunning
PUBLIC	??_GSubPartSound@@UAEPAXI@Z			; SubPartSound::`scalar deleting destructor'
PUBLIC	??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z ; SubEmitter::SubEmitter
PUBLIC	??1SubEmitter@@UAE@XZ				; SubEmitter::~SubEmitter
PUBLIC	?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubEmitter::Run
PUBLIC	??_GSubEmitter@@UAEPAXI@Z			; SubEmitter::`scalar deleting destructor'
PUBLIC	??0SubPartEmitter@@QAE@PAVParticleNode@@@Z	; SubPartEmitter::SubPartEmitter
PUBLIC	??1SubPartEmitter@@UAE@XZ			; SubPartEmitter::~SubPartEmitter
PUBLIC	?Run@SubPartEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ; SubPartEmitter::Run
PUBLIC	??_GSubPartEmitter@@UAEPAXI@Z			; SubPartEmitter::`scalar deleting destructor'
PUBLIC	?MatchString@@YAHPADPAPAD@Z			; MatchString
PUBLIC	?trim@@YAPADPAD@Z				; trim
PUBLIC	??$AddPart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@K@Z ; AddPart<ParticleNodeType>
PUBLIC	??$AddPart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@K@Z ; AddPart<PolySubPartType>
PUBLIC	??$AddPart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@K@Z ; AddPart<EmitterPartType>
PUBLIC	??$AddPart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@K@Z ; AddPart<SoundSubPartType>
PUBLIC	??$AddPart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@K@Z ; AddPart<LightPartType>
PUBLIC	??$AddPart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@K@Z ; AddPart<TrailEmitterType>
PUBLIC	??$AddPart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@K@Z ; AddPart<ClusterPosType>
PUBLIC	??$RemovePart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@KK@Z ; RemovePart<ParticleNodeType>
PUBLIC	??$RemovePart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@KK@Z ; RemovePart<PolySubPartType>
PUBLIC	??$RemovePart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@KK@Z ; RemovePart<EmitterPartType>
PUBLIC	??$RemovePart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@KK@Z ; RemovePart<SoundSubPartType>
PUBLIC	??$RemovePart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@KK@Z ; RemovePart<LightPartType>
PUBLIC	??$RemovePart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@KK@Z ; RemovePart<TrailEmitterType>
PUBLIC	??$RemovePart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@KK@Z ; RemovePart<ClusterPosType>
PUBLIC	?GetCollisionPoint@@YAMUD3DXVECTOR3@@0M@Z	; GetCollisionPoint
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7DrawableObject@@6B@				; DrawableObject::`vftable'
PUBLIC	?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA	; `GenerateFastRandom'::`2'::LastRandom
PUBLIC	??_7DPS_Node@@6B@				; DPS_Node::`vftable'
PUBLIC	??_7ParticleAnimationNode@@6B@			; ParticleAnimationNode::`vftable'
PUBLIC	?dpsList@DrawableParticleSys@@0VAList@@A	; DrawableParticleSys::dpsList
PUBLIC	?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
PUBLIC	?AnimationsList@DrawableParticleSys@@0VAList@@A	; DrawableParticleSys::AnimationsList
PUBLIC	?textureList@DrawableParticleSys@@0VAList@@A	; DrawableParticleSys::textureList
PUBLIC	??_7DrawableParticleSys@@6B@			; DrawableParticleSys::`vftable'
PUBLIC	??_7ParticleTextureNode@@6B@			; ParticleTextureNode::`vftable'
PUBLIC	??_7ParticleParamNode@@6B@			; ParticleParamNode::`vftable'
PUBLIC	??_7ParticleNode@@6B@				; ParticleNode::`vftable'
PUBLIC	?psIRotation@@3UTrotation@@A			; psIRotation
PUBLIC	??_7SubPart@@6B@				; SubPart::`vftable'
PUBLIC	??_7SubPartMovementOrientation@@6B@		; SubPartMovementOrientation::`vftable'
PUBLIC	??_7SubPartPoly@@6B@				; SubPartPoly::`vftable'
PUBLIC	??_7SubPartTrail@@6B@				; SubPartTrail::`vftable'
PUBLIC	??_7SubPartBSP@@6B@				; SubPartBSP::`vftable'
PUBLIC	??_7SubPartSound@@6B@				; SubPartSound::`vftable'
PUBLIC	??_7SubEmitter@@6B@				; SubEmitter::`vftable'
PUBLIC	??_7SubPartEmitter@@6B@				; SubPartEmitter::`vftable'
PUBLIC	??_C@_03DKIFGDMI@?4?0?5?$AA@			; `string'
PUBLIC	??_C@_05GNFDEJMB@_?$CF03d?$AA@			; `string'
PUBLIC	??_C@_06FOHEPPJH@sphere?$AA@			; `string'
PUBLIC	??_C@_05MAIECAHP@plane?$AA@			; `string'
PUBLIC	??_C@_03OLPJGAII@box?$AA@			; `string'
PUBLIC	??_C@_04LPJPOBEM@blob?$AA@			; `string'
PUBLIC	??_C@_08GNLJBPEP@cylinder?$AA@			; `string'
PUBLIC	??_C@_04NOMJJLOC@cone?$AA@			; `string'
PUBLIC	??_C@_08FOPOJBJM@triangle?$AA@			; `string'
PUBLIC	??_C@_09KEGCCCGI@rectangle?$AA@			; `string'
PUBLIC	??_C@_04LCGIPIL@disc?$AA@			; `string'
PUBLIC	??_C@_04HJPCFDOP@line?$AA@			; `string'
PUBLIC	??_C@_05BBEJFBFA@point?$AA@			; `string'
PUBLIC	?PS_LightRot@@3UD3DXMATRIX@@A			; PS_LightRot
PUBLIC	??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_02NGOCLIKE@?$DN?6?$AA@			; `string'
PUBLIC	??_C@_02NCJKDDL@?6?$AA?$AA@			; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN?$AA@			; `string'
PUBLIC	??_C@_02EGCJHIOB@id?$AA@			; `string'
PUBLIC	??_C@_05FAEIOGEG@trail?$AA@			; `string'
PUBLIC	??_C@_05MGJOOGAJ@group?$AA@			; `string'
PUBLIC	??_C@_09KCBFNMAJ@animation?$AA@			; `string'
PUBLIC	??_C@_0M@EFBLJAJ@texturefile?$AA@		; `string'
PUBLIC	??_C@_07NKHKICEG@cluster?$AA@			; `string'
PUBLIC	??_C@_07GAJCJCGI@windoff?$AA@			; `string'
PUBLIC	??_C@_0L@COKNODCN@windFactor?$AA@		; `string'
PUBLIC	??_C@_08LLHMBIPK@lifespan?$AA@			; `string'
PUBLIC	??_C@_05PEENBMOG@color?$AA@			; `string'
PUBLIC	??_C@_07KOBECPDD@3dlight?$AA@			; `string'
PUBLIC	??_C@_05OEPGNJB@light?$AA@			; `string'
PUBLIC	??_C@_04IAGNFIBA@size?$AA@			; `string'
PUBLIC	??_C@_05GECEPKB@flags?$AA@			; `string'
PUBLIC	??_C@_02MHMEOBLM@MG?$AA@			; `string'
PUBLIC	??_C@_07NLKEJFGN@animate?$AA@			; `string'
PUBLIC	??_C@_07JDHEGGGP@texture?$AA@			; `string'
PUBLIC	??_C@_07GFBFDLBM@gravity?$AA@			; `string'
PUBLIC	??_C@_05IAEKHIAN@alpha?$AA@			; `string'
PUBLIC	??_C@_04PHPAONAP@drag?$AA@			; `string'
PUBLIC	??_C@_06DPMIMFNG@bounce?$AA@			; `string'
PUBLIC	??_C@_0L@DHIKPAKB@emissionid?$AA@		; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_0N@HPHEJFOB@emissionmode?$AA@		; `string'
PUBLIC	??_C@_08CHFNGICB@EMITONCE?$AA@			; `string'
PUBLIC	??_C@_0L@LBFACCKM@EMITPERSEC?$AA@		; `string'
PUBLIC	??_C@_0N@LMGECMI@EMITONIMPACT?$AA@		; `string'
PUBLIC	??_C@_0BC@CMAJKLGA@EMITONEARTHIMPACT?$AA@	; `string'
PUBLIC	??_C@_0BC@JHPENDJF@EMITONWATERIMPACT?$AA@	; `string'
PUBLIC	??_C@_04GHGHGAKN@ONCE?$AA@			; `string'
PUBLIC	??_C@_06CILNDNOD@PERSEC?$AA@			; `string'
PUBLIC	??_C@_06LHHGFCMD@IMPACT?$AA@			; `string'
PUBLIC	??_C@_0M@IGOONCEK@EARTHIMPACT?$AA@		; `string'
PUBLIC	??_C@_0M@DNBDKKLP@WATERIMPACT?$AA@		; `string'
PUBLIC	??_C@_0P@GMJCNMGB@emissiondomain?$AA@		; `string'
PUBLIC	??_C@_0P@EPKKHNOP@emissiontarget?$AA@		; `string'
PUBLIC	??_C@_0N@GBDNEBPB@emissionrate?$AA@		; `string'
PUBLIC	??_C@_0BB@GGKJGFL@emissionvelocity?$AA@		; `string'
PUBLIC	??_C@_0M@CKPIOCGF@emissionrnd?$AA@		; `string'
PUBLIC	??_C@_0N@OKFAMOHD@acceleration?$AA@		; `string'
PUBLIC	??_C@_0BA@HDJODILK@inheritvelocity?$AA@		; `string'
PUBLIC	??_C@_0BA@PGMBENJL@initialVelocity?$AA@		; `string'
PUBLIC	??_C@_0N@BEJFKOMN@RotationRate?$AA@		; `string'
PUBLIC	??_C@_08JLPEIJJH@drawtype?$AA@			; `string'
PUBLIC	??_C@_04BMHKPPID@poly?$AA@			; `string'
PUBLIC	??_C@_06KEDCNBMH@zplane?$AA@			; `string'
PUBLIC	??_C@_07EKMCOBOP@soundid?$AA@			; `string'
PUBLIC	??_C@_0M@EONGMOLH@soundlooped?$AA@		; `string'
PUBLIC	??_C@_0M@CFLDNOLA@soundVolume?$AA@		; `string'
PUBLIC	??_C@_0L@EILMMHCP@soundPitch?$AA@		; `string'
PUBLIC	??_C@_07KJNNKBIK@trailid?$AA@			; `string'
PUBLIC	??_C@_0P@BGBNAPAB@groundfriction?$AA@		; `string'
PUBLIC	??_C@_0BA@LDFGJJKA@visibledistance?$AA@		; `string'
PUBLIC	??_C@_0M@PJDCNDII@dieonground?$AA@		; `string'
PUBLIC	??_C@_07BOEIJNLB@modelct?$AA@			; `string'
PUBLIC	??_C@_0M@KPMDGEHG@orientation?$AA@		; `string'
PUBLIC	??_C@_08ONAKKFI@movement?$AA@			; `string'
PUBLIC	??_C@_0BA@DOOGDKOH@emitonerandomly?$AA@		; `string'
PUBLIC	??_C@_06OLAPKHEJ@frames?$AA@			; `string'
PUBLIC	??_C@_09PLDKGHKD@framerate?$AA@			; `string'
PUBLIC	??_C@_03PBBLKBDM@LUD?$AA@			; `string'
PUBLIC	??_C@_08NIIIOFCG@emittime?$AA@			; `string'
PUBLIC	??_C@_06CMCBKMCB@weight?$AA@			; `string'
PUBLIC	??_C@_07LAAKACNI@trailnr?$AA@			; `string'
PUBLIC	??_C@_04HCCHHEEF@rate?$AA@			; `string'
PUBLIC	??_C@_0L@ILHIIPPP@fragradius?$AA@		; `string'
PUBLIC	??_C@_06NLFCANPD@random?$AA@			; `string'
PUBLIC	??_C@_0BE@KBCJIILC@Animation?5?$CFs?5Failed?$AA@ ; `string'
PUBLIC	??_C@_0M@CFLADCE@Feb?518?52013?$AA@		; `string'
PUBLIC	??_C@_0BE@CLILDDMP@DrawParticleSys?4cpp?$AA@	; `string'
PUBLIC	??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DrawableObject@@6B@			; DrawableObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawableObject@@@8			; DrawableObject `RTTI Type Descriptor'
PUBLIC	??_R3DrawableObject@@8				; DrawableObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableObject@@8				; DrawableObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableObject@@8			; DrawableObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ParticleNode@@6B@				; ParticleNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParticleNode@@@8			; ParticleNode `RTTI Type Descriptor'
PUBLIC	??_R3ParticleNode@@8				; ParticleNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParticleNode@@8				; ParticleNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParticleNode@@8			; ParticleNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ANode@@8				; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVANode@@@8				; ANode `RTTI Type Descriptor'
PUBLIC	??_R3ANode@@8					; ANode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ANode@@8					; ANode::`RTTI Base Class Array'
PUBLIC	??_R4ParticleTextureNode@@6B@			; ParticleTextureNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParticleTextureNode@@@8			; ParticleTextureNode `RTTI Type Descriptor'
PUBLIC	??_R3ParticleTextureNode@@8			; ParticleTextureNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParticleTextureNode@@8			; ParticleTextureNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParticleTextureNode@@8		; ParticleTextureNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ParticleAnimationNode@@6B@			; ParticleAnimationNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParticleAnimationNode@@@8		; ParticleAnimationNode `RTTI Type Descriptor'
PUBLIC	??_R3ParticleAnimationNode@@8			; ParticleAnimationNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParticleAnimationNode@@8			; ParticleAnimationNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParticleAnimationNode@@8		; ParticleAnimationNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DPS_Node@@6B@				; DPS_Node::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDPS_Node@@@8				; DPS_Node `RTTI Type Descriptor'
PUBLIC	??_R3DPS_Node@@8				; DPS_Node::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DPS_Node@@8				; DPS_Node::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DPS_Node@@8			; DPS_Node::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DrawableParticleSys@@6B@			; DrawableParticleSys::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawableParticleSys@@@8			; DrawableParticleSys `RTTI Type Descriptor'
PUBLIC	??_R3DrawableParticleSys@@8			; DrawableParticleSys::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawableParticleSys@@8			; DrawableParticleSys::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawableParticleSys@@8		; DrawableParticleSys::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ParticleParamNode@@6B@			; ParticleParamNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParticleParamNode@@@8			; ParticleParamNode `RTTI Type Descriptor'
PUBLIC	??_R3ParticleParamNode@@8			; ParticleParamNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParticleParamNode@@8			; ParticleParamNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParticleParamNode@@8		; ParticleParamNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPart@@6B@				; SubPart::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPart@@@8				; SubPart `RTTI Type Descriptor'
PUBLIC	??_R3SubPart@@8					; SubPart::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPart@@8					; SubPart::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPart@@8			; SubPart::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartMovementOrientation@@6B@		; SubPartMovementOrientation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartMovementOrientation@@@8		; SubPartMovementOrientation `RTTI Type Descriptor'
PUBLIC	??_R3SubPartMovementOrientation@@8		; SubPartMovementOrientation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartMovementOrientation@@8		; SubPartMovementOrientation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartMovementOrientation@@8	; SubPartMovementOrientation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartPoly@@6B@				; SubPartPoly::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartPoly@@@8				; SubPartPoly `RTTI Type Descriptor'
PUBLIC	??_R3SubPartPoly@@8				; SubPartPoly::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartPoly@@8				; SubPartPoly::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartPoly@@8			; SubPartPoly::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartTrail@@6B@				; SubPartTrail::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartTrail@@@8			; SubPartTrail `RTTI Type Descriptor'
PUBLIC	??_R3SubPartTrail@@8				; SubPartTrail::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartTrail@@8				; SubPartTrail::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartTrail@@8			; SubPartTrail::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartBSP@@6B@				; SubPartBSP::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartBSP@@@8				; SubPartBSP `RTTI Type Descriptor'
PUBLIC	??_R3SubPartBSP@@8				; SubPartBSP::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartBSP@@8				; SubPartBSP::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartBSP@@8			; SubPartBSP::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartSound@@6B@				; SubPartSound::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartSound@@@8			; SubPartSound `RTTI Type Descriptor'
PUBLIC	??_R3SubPartSound@@8				; SubPartSound::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartSound@@8				; SubPartSound::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartSound@@8			; SubPartSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubEmitter@@6B@				; SubEmitter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubEmitter@@@8				; SubEmitter `RTTI Type Descriptor'
PUBLIC	??_R3SubEmitter@@8				; SubEmitter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubEmitter@@8				; SubEmitter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubEmitter@@8			; SubEmitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SubPartEmitter@@6B@			; SubPartEmitter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSubPartEmitter@@@8			; SubPartEmitter `RTTI Type Descriptor'
PUBLIC	??_R3SubPartEmitter@@8				; SubPartEmitter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SubPartEmitter@@8				; SubPartEmitter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SubPartEmitter@@8			; SubPartEmitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3a03126f
PUBLIC	__real@3a83126f
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3c23d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e19999a
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f2e147b
PUBLIC	__real@3f400000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f59999a
PUBLIC	__real@3f666666
PUBLIC	__real@3f733333
PUBLIC	__real@3f800000
PUBLIC	__real@3f828f5c
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc90fd9
PUBLIC	__real@3fddb22d
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@40000000
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@40490fdb
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41700000
PUBLIC	__real@41a00000
PUBLIC	__real@41f00000
PUBLIC	__real@42000000
PUBLIC	__real@42480000
PUBLIC	__real@42c80000
PUBLIC	__real@43340000
PUBLIC	__real@437f0000
PUBLIC	__real@437fe666
PUBLIC	__real@43960000
PUBLIC	__real@43f98000
PUBLIC	__real@43fa0000
PUBLIC	__real@44400000
PUBLIC	__real@447a0000
PUBLIC	__real@44960000
PUBLIC	__real@461c4000
PUBLIC	__real@46fffe00
PUBLIC	__real@477fff00
PUBLIC	__real@47800000
PUBLIC	__real@497423f0
PUBLIC	__real@51ba43b7
PUBLIC	__real@8000000000000000
PUBLIC	__real@bf800000
PUBLIC	__real@bff921fb54442d18
PUBLIC	__real@c61c4000
PUBLIC	__real@c7c34f80
PUBLIC	__real@d1ba43b7
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_asin:PROC
EXTRN	_atan:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_log10:PROC
EXTRN	_sin:PROC
EXTRN	_exit:PROC
EXTRN	_rand:PROC
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_strncmp:PROC
EXTRN	_strncpy:PROC
EXTRN	_strtok:PROC
EXTRN	_stricmp:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fopen:PROC
EXTRN	_sprintf:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SelectTexture1@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectTexture1
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	??_EDrawableObject@@UAEPAXI@Z:PROC		; DrawableObject::`vector deleting destructor'
EXTRN	??0DrawableBSP@@QAE@HPBUTpoint@@PBUTrotation@@M@Z:PROC ; DrawableBSP::DrawableBSP
EXTRN	??0ANode@@QAE@XZ:PROC				; ANode::ANode
EXTRN	?GetSucc@ANode@@QAEPAXXZ:PROC			; ANode::GetSucc
EXTRN	?Remove@ANode@@QAEPAXXZ:PROC			; ANode::Remove
EXTRN	?InsertAfter@ANode@@QAEXPAV1@@Z:PROC		; ANode::InsertAfter
EXTRN	??1ANode@@QAE@XZ:PROC				; ANode::~ANode
EXTRN	??0AList@@QAE@XZ:PROC				; AList::AList
EXTRN	?RemHead@AList@@QAEPAXXZ:PROC			; AList::RemHead
EXTRN	?AddHead@AList@@QAEXPAVANode@@@Z:PROC		; AList::AddHead
EXTRN	?GetHead@AList@@QAEPAXXZ:PROC			; AList::GetHead
EXTRN	??0ProtectedAList@@QAE@XZ:PROC			; ProtectedAList::ProtectedAList
EXTRN	??1ProtectedAList@@QAE@XZ:PROC			; ProtectedAList::~ProtectedAList
EXTRN	?Lock@ProtectedAList@@QAEXXZ:PROC		; ProtectedAList::Lock
EXTRN	?Unlock@ProtectedAList@@QAEXXZ:PROC		; ProtectedAList::Unlock
EXTRN	??0F4SoundPos@@QAE@XZ:PROC			; F4SoundPos::F4SoundPos
EXTRN	??1F4SoundPos@@QAE@XZ:PROC			; F4SoundPos::~F4SoundPos
EXTRN	?UpdatePos@F4SoundPos@@QAEXMMMMMM@Z:PROC	; F4SoundPos::UpdatePos
EXTRN	?Sfx@F4SoundPos@@QAEXHHMM@Z:PROC		; F4SoundPos::Sfx
EXTRN	?IsPlaying@F4SoundPos@@QAE_NHH@Z:PROC		; F4SoundPos::IsPlaying
EXTRN	?AddDynamicLight@CDXLight@@QAEKKPAUDXLightType@@PAUD3DXMATRIX@@PAU_D3DVECTOR@@M@Z:PROC ; CDXLight::AddDynamicLight
EXTRN	?Draw3DPoint@CDXEngine@@QAEXPAU_D3DVECTOR@@K_N1@Z:PROC ; CDXEngine::Draw3DPoint
EXTRN	?LoadTexture@CDXEngine@@QAEXPAD@Z:PROC		; CDXEngine::LoadTexture
EXTRN	?GetTextureHandle@CDXEngine@@QAEKPAD@Z:PROC	; CDXEngine::GetTextureHandle
EXTRN	?DX2D_GetTextureItem@CDXEngine@@QAEPAVCTextureItem@@PAD@Z:PROC ; CDXEngine::DX2D_GetTextureItem
EXTRN	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z:PROC ; CDXEngine::DX2D_GetTextureUV
EXTRN	?ComputeSphereVisibility@CDXEngine@@QAEKPAU_D3DVECTOR@@PAMK@Z:PROC ; CDXEngine::ComputeSphereVisibility
EXTRN	?DX2D_GetVisibility@CDXEngine@@QAE_NPAUD3DXVECTOR3@@MK@Z:PROC ; CDXEngine::DX2D_GetVisibility
EXTRN	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@MK@Z:PROC ; CDXEngine::DX2D_GetDistance
EXTRN	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z:PROC ; CDXEngine::DX2D_GetDistance
EXTRN	?DX2D_GetRelativePosition@CDXEngine@@QAEXPAUD3DXVECTOR3@@@Z:PROC ; CDXEngine::DX2D_GetRelativePosition
EXTRN	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z:PROC ; CDXEngine::DX2D_AddQuad
EXTRN	?DX2D_AddBi@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z:PROC ; CDXEngine::DX2D_AddBi
EXTRN	?DX2D_AddSingle@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z:PROC ; CDXEngine::DX2D_AddSingle
EXTRN	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z:PROC	; CDXEngine::DX2D_SetupSquareCx
EXTRN	?DX2D_MakeCameraSpace@CDXEngine@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CDXEngine::DX2D_MakeCameraSpace
EXTRN	??_EDrawableParticleSys@@UAEPAXI@Z:PROC		; DrawableParticleSys::`vector deleting destructor'
EXTRN	?TokenF@@YAMM@Z:PROC				; TokenF
EXTRN	?TokenI@@YAHH@Z:PROC				; TokenI
EXTRN	?TokenFlags@@YAHHPAD@Z:PROC			; TokenFlags
EXTRN	?TokenStr@@YAPADPAD@Z:PROC			; TokenStr
EXTRN	?TokenF@@YAMPADM@Z:PROC				; TokenF
EXTRN	?TokenEnum@@YAHPAPADH@Z:PROC			; TokenEnum
EXTRN	?SetTokenString@@YAXPAD@Z:PROC			; SetTokenString
EXTRN	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z:PROC ; MatrixMult
EXTRN	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z:PROC ; Render3D::TransformPointToView
EXTRN	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z:PROC ; Render3D::TransformBillboardPoint
EXTRN	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z:PROC ; Render3D::DrawSquare
EXTRN	?WindSpeedInFeetPerSecond@WeatherClass@@QAEMPBUTpoint@@@Z:PROC ; WeatherClass::WindSpeedInFeetPerSecond
EXTRN	?WindHeadingAt@WeatherClass@@QAEMPBUTpoint@@@Z:PROC ; WeatherClass::WindHeadingAt
EXTRN	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z:PROC ; OTWDriverClass::GetGroundLevel
EXTRN	?GetGroundType@OTWDriverClass@@QAEHMM@Z:PROC	; OTWDriverClass::GetGroundType
EXTRN	??0DrawableTrail@@QAE@HM@Z:PROC			; DrawableTrail::DrawableTrail
EXTRN	?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z:PROC ; DrawableTrail::AddPointAtHead
EXTRN	?IsTrailEmpty@DrawableTrail@@QAEHXZ:PROC	; DrawableTrail::IsTrailEmpty
EXTRN	??_ESubPart@@UAEPAXI@Z:PROC			; SubPart::`vector deleting destructor'
EXTRN	??_ESubPartMovementOrientation@@UAEPAXI@Z:PROC	; SubPartMovementOrientation::`vector deleting destructor'
EXTRN	??_ESubPartPoly@@UAEPAXI@Z:PROC			; SubPartPoly::`vector deleting destructor'
EXTRN	??_ESubPartTrail@@UAEPAXI@Z:PROC		; SubPartTrail::`vector deleting destructor'
EXTRN	??_ESubPartBSP@@UAEPAXI@Z:PROC			; SubPartBSP::`vector deleting destructor'
EXTRN	??_ESubPartSound@@UAEPAXI@Z:PROC		; SubPartSound::`vector deleting destructor'
EXTRN	??_ESubEmitter@@UAEPAXI@Z:PROC			; SubEmitter::`vector deleting destructor'
EXTRN	??_ESubPartEmitter@@UAEPAXI@Z:PROC		; SubPartEmitter::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheLightEngine@@3VCDXLight@@A:BYTE		; TheLightEngine
EXTRN	?m_LODBiasCx@CDXEngine@@0MA:DWORD		; CDXEngine::m_LODBiasCx
EXTRN	?m_RenderState@CDXEngine@@0W4DX_StateType@@A:DWORD ; CDXEngine::m_RenderState
EXTRN	?TheDXEngine@@3VCDXEngine@@A:BYTE		; TheDXEngine
EXTRN	?TheTimeOfDay@@3VCTimeOfDay@@A:BYTE		; TheTimeOfDay
EXTRN	?TheTimeManager@@3VTimeManager@@A:BYTE		; TheTimeManager
EXTRN	?IMatrix@@3UTrotation@@B:BYTE			; IMatrix
EXTRN	?realWeather@@3PAVRealWeather@@A:DWORD		; realWeather
EXTRN	?OTWDriver@@3VOTWDriverClass@@A:BYTE		; OTWDriver
EXTRN	?ObserverPosition@@3UTpoint@@A:BYTE		; ObserverPosition
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?g_nGfxFix@@3HA:DWORD				; g_nGfxFix
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?g_nPSPurgeInterval@@3HA:DWORD			; g_nPSPurgeInterval
EXTRN	?g_nPSKillFPS@@3HA:DWORD			; g_nPSKillFPS
EXTRN	?g_bHighSFX@@3_NA:BYTE				; g_bHighSFX
EXTRN	?g_bGreyMFD@@3_NA:BYTE				; g_bGreyMFD
EXTRN	?bNVGmode@@3_NA:BYTE				; bNVGmode
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA
_BSS	SEGMENT
?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA DD 01H DUP (?) ; `GenerateFastRandom'::`2'::LastRandom
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?dpsList@DrawableParticleSys@@0VAList@@A DB 018H DUP (?) ; DrawableParticleSys::dpsList
?paramList@DrawableParticleSys@@0VProtectedAList@@A DB 01cH DUP (?) ; DrawableParticleSys::paramList
?AnimationsList@DrawableParticleSys@@0VAList@@A DB 018H DUP (?) ; DrawableParticleSys::AnimationsList
?textureList@DrawableParticleSys@@0VAList@@A DB 018H DUP (?) ; DrawableParticleSys::textureList
_ParticleFilterCount DW 01H DUP (?)
	ALIGN	4

_PurgeTimeInc DD 01H DUP (?)
_PurgeAllTimeInc DD 01H DUP (?)
_ErrorMessage DB 080H DUP (?)
?psIRotation@@3UTrotation@@A DB 024H DUP (?)		; psIRotation
_BSS	ENDS
;	COMDAT ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
_BSS	SEGMENT
?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A DD 01H DUP (?) ; `DrawableParticleSys::GetFramesList'::`2'::List
_BSS	ENDS
;	COMDAT ?BaseList@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
_BSS	SEGMENT
?BaseList@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A DD 01H DUP (?) ; `DrawableParticleSys::GetFramesList'::`2'::BaseList
_BSS	ENDS
_BSS	SEGMENT
?PS_LightRot@@3UD3DXMATRIX@@A DB 040H DUP (?)		; PS_LightRot
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@d1ba43b7
CONST	SEGMENT
__real@d1ba43b7 DD 0d1ba43b7r			; -1e+011
CONST	ENDS
;	COMDAT __real@c7c34f80
CONST	SEGMENT
__real@c7c34f80 DD 0c7c34f80r			; -99999
CONST	ENDS
;	COMDAT __real@c61c4000
CONST	SEGMENT
__real@c61c4000 DD 0c61c4000r			; -10000
CONST	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@51ba43b7
CONST	SEGMENT
__real@51ba43b7 DD 051ba43b7r			; 1e+011
CONST	ENDS
;	COMDAT __real@497423f0
CONST	SEGMENT
__real@497423f0 DD 0497423f0r			; 999999
CONST	ENDS
;	COMDAT __real@47800000
CONST	SEGMENT
__real@47800000 DD 047800000r			; 65536
CONST	ENDS
;	COMDAT __real@477fff00
CONST	SEGMENT
__real@477fff00 DD 0477fff00r			; 65535
CONST	ENDS
;	COMDAT __real@46fffe00
CONST	SEGMENT
__real@46fffe00 DD 046fffe00r			; 32767
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@44960000
CONST	SEGMENT
__real@44960000 DD 044960000r			; 1200
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44400000
CONST	SEGMENT
__real@44400000 DD 044400000r			; 768
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@43f98000
CONST	SEGMENT
__real@43f98000 DD 043f98000r			; 499
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@437fe666
CONST	SEGMENT
__real@437fe666 DD 0437fe666r			; 255.9
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fddb22d
CONST	SEGMENT
__real@3fddb22d DD 03fddb22dr			; 1.732
CONST	ENDS
;	COMDAT __real@3fc90fd9
CONST	SEGMENT
__real@3fc90fd9 DD 03fc90fd9r			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f828f5c
CONST	SEGMENT
__real@3f828f5c DD 03f828f5cr			; 1.02
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f2e147b
CONST	SEGMENT
__real@3f2e147b DD 03f2e147br			; 0.68
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@3a03126f
CONST	SEGMENT
__real@3a03126f DD 03a03126fr			; 0.0005
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartEmitter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartEmitter@@8 DD FLAT:??_R0?AVSubPartEmitter@@@8 ; SubPartEmitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartEmitter@@8
rdata$r	SEGMENT
??_R2SubPartEmitter@@8 DD FLAT:??_R1A@?0A@EA@SubPartEmitter@@8 ; SubPartEmitter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartEmitter@@8
rdata$r	SEGMENT
??_R3SubPartEmitter@@8 DD 00H				; SubPartEmitter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartEmitter@@@8
_DATA	SEGMENT
??_R0?AVSubPartEmitter@@@8 DD FLAT:??_7type_info@@6B@	; SubPartEmitter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartEmitter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartEmitter@@6B@
rdata$r	SEGMENT
??_R4SubPartEmitter@@6B@ DD 00H				; SubPartEmitter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartEmitter@@@8
	DD	FLAT:??_R3SubPartEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubEmitter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubEmitter@@8 DD FLAT:??_R0?AVSubEmitter@@@8 ; SubEmitter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R2SubEmitter@@8
rdata$r	SEGMENT
??_R2SubEmitter@@8 DD FLAT:??_R1A@?0A@EA@SubEmitter@@8	; SubEmitter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubEmitter@@8
rdata$r	SEGMENT
??_R3SubEmitter@@8 DD 00H				; SubEmitter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubEmitter@@@8
_DATA	SEGMENT
??_R0?AVSubEmitter@@@8 DD FLAT:??_7type_info@@6B@	; SubEmitter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubEmitter@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubEmitter@@6B@
rdata$r	SEGMENT
??_R4SubEmitter@@6B@ DD 00H				; SubEmitter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubEmitter@@@8
	DD	FLAT:??_R3SubEmitter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartSound@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartSound@@8 DD FLAT:??_R0?AVSubPartSound@@@8 ; SubPartSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartSound@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartSound@@8
rdata$r	SEGMENT
??_R2SubPartSound@@8 DD FLAT:??_R1A@?0A@EA@SubPartSound@@8 ; SubPartSound::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartSound@@8
rdata$r	SEGMENT
??_R3SubPartSound@@8 DD 00H				; SubPartSound::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartSound@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartSound@@@8
_DATA	SEGMENT
??_R0?AVSubPartSound@@@8 DD FLAT:??_7type_info@@6B@	; SubPartSound `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartSound@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartSound@@6B@
rdata$r	SEGMENT
??_R4SubPartSound@@6B@ DD 00H				; SubPartSound::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartSound@@@8
	DD	FLAT:??_R3SubPartSound@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartBSP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartBSP@@8 DD FLAT:??_R0?AVSubPartBSP@@@8 ; SubPartBSP::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartBSP@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartBSP@@8
rdata$r	SEGMENT
??_R2SubPartBSP@@8 DD FLAT:??_R1A@?0A@EA@SubPartBSP@@8	; SubPartBSP::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartBSP@@8
rdata$r	SEGMENT
??_R3SubPartBSP@@8 DD 00H				; SubPartBSP::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartBSP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartBSP@@@8
_DATA	SEGMENT
??_R0?AVSubPartBSP@@@8 DD FLAT:??_7type_info@@6B@	; SubPartBSP `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartBSP@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartBSP@@6B@
rdata$r	SEGMENT
??_R4SubPartBSP@@6B@ DD 00H				; SubPartBSP::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartBSP@@@8
	DD	FLAT:??_R3SubPartBSP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartTrail@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartTrail@@8 DD FLAT:??_R0?AVSubPartTrail@@@8 ; SubPartTrail::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartTrail@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartTrail@@8
rdata$r	SEGMENT
??_R2SubPartTrail@@8 DD FLAT:??_R1A@?0A@EA@SubPartTrail@@8 ; SubPartTrail::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartTrail@@8
rdata$r	SEGMENT
??_R3SubPartTrail@@8 DD 00H				; SubPartTrail::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartTrail@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartTrail@@@8
_DATA	SEGMENT
??_R0?AVSubPartTrail@@@8 DD FLAT:??_7type_info@@6B@	; SubPartTrail `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartTrail@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartTrail@@6B@
rdata$r	SEGMENT
??_R4SubPartTrail@@6B@ DD 00H				; SubPartTrail::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartTrail@@@8
	DD	FLAT:??_R3SubPartTrail@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartPoly@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartPoly@@8 DD FLAT:??_R0?AVSubPartPoly@@@8 ; SubPartPoly::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartPoly@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartPoly@@8
rdata$r	SEGMENT
??_R2SubPartPoly@@8 DD FLAT:??_R1A@?0A@EA@SubPartPoly@@8 ; SubPartPoly::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartPoly@@8
rdata$r	SEGMENT
??_R3SubPartPoly@@8 DD 00H				; SubPartPoly::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartPoly@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartPoly@@@8
_DATA	SEGMENT
??_R0?AVSubPartPoly@@@8 DD FLAT:??_7type_info@@6B@	; SubPartPoly `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartPoly@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartPoly@@6B@
rdata$r	SEGMENT
??_R4SubPartPoly@@6B@ DD 00H				; SubPartPoly::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartPoly@@@8
	DD	FLAT:??_R3SubPartPoly@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPartMovementOrientation@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPartMovementOrientation@@8 DD FLAT:??_R0?AVSubPartMovementOrientation@@@8 ; SubPartMovementOrientation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPartMovementOrientation@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPartMovementOrientation@@8
rdata$r	SEGMENT
??_R2SubPartMovementOrientation@@8 DD FLAT:??_R1A@?0A@EA@SubPartMovementOrientation@@8 ; SubPartMovementOrientation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R3SubPartMovementOrientation@@8
rdata$r	SEGMENT
??_R3SubPartMovementOrientation@@8 DD 00H		; SubPartMovementOrientation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SubPartMovementOrientation@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPartMovementOrientation@@@8
_DATA	SEGMENT
??_R0?AVSubPartMovementOrientation@@@8 DD FLAT:??_7type_info@@6B@ ; SubPartMovementOrientation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPartMovementOrientation@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPartMovementOrientation@@6B@
rdata$r	SEGMENT
??_R4SubPartMovementOrientation@@6B@ DD 00H		; SubPartMovementOrientation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPartMovementOrientation@@@8
	DD	FLAT:??_R3SubPartMovementOrientation@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SubPart@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SubPart@@8 DD FLAT:??_R0?AVSubPart@@@8	; SubPart::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R2SubPart@@8
rdata$r	SEGMENT
??_R2SubPart@@8 DD FLAT:??_R1A@?0A@EA@SubPart@@8	; SubPart::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SubPart@@8
rdata$r	SEGMENT
??_R3SubPart@@8 DD 00H					; SubPart::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSubPart@@@8
_DATA	SEGMENT
??_R0?AVSubPart@@@8 DD FLAT:??_7type_info@@6B@		; SubPart `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSubPart@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SubPart@@6B@
rdata$r	SEGMENT
??_R4SubPart@@6B@ DD 00H				; SubPart::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSubPart@@@8
	DD	FLAT:??_R3SubPart@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParticleParamNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParticleParamNode@@8 DD FLAT:??_R0?AVParticleParamNode@@@8 ; ParticleParamNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParticleParamNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ParticleParamNode@@8
rdata$r	SEGMENT
??_R2ParticleParamNode@@8 DD FLAT:??_R1A@?0A@EA@ParticleParamNode@@8 ; ParticleParamNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3ParticleParamNode@@8
rdata$r	SEGMENT
??_R3ParticleParamNode@@8 DD 00H			; ParticleParamNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ParticleParamNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParticleParamNode@@@8
_DATA	SEGMENT
??_R0?AVParticleParamNode@@@8 DD FLAT:??_7type_info@@6B@ ; ParticleParamNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParticleParamNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParticleParamNode@@6B@
rdata$r	SEGMENT
??_R4ParticleParamNode@@6B@ DD 00H			; ParticleParamNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParticleParamNode@@@8
	DD	FLAT:??_R3ParticleParamNode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableParticleSys@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableParticleSys@@8 DD FLAT:??_R0?AVDrawableParticleSys@@@8 ; DrawableParticleSys::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableParticleSys@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableParticleSys@@8
rdata$r	SEGMENT
??_R2DrawableParticleSys@@8 DD FLAT:??_R1A@?0A@EA@DrawableParticleSys@@8 ; DrawableParticleSys::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R3DrawableParticleSys@@8
rdata$r	SEGMENT
??_R3DrawableParticleSys@@8 DD 00H			; DrawableParticleSys::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DrawableParticleSys@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableParticleSys@@@8
_DATA	SEGMENT
??_R0?AVDrawableParticleSys@@@8 DD FLAT:??_7type_info@@6B@ ; DrawableParticleSys `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableParticleSys@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DrawableParticleSys@@6B@
rdata$r	SEGMENT
??_R4DrawableParticleSys@@6B@ DD 00H			; DrawableParticleSys::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawableParticleSys@@@8
	DD	FLAT:??_R3DrawableParticleSys@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DPS_Node@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DPS_Node@@8 DD FLAT:??_R0?AVDPS_Node@@@8	; DPS_Node::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DPS_Node@@8
rdata$r	ENDS
;	COMDAT ??_R2DPS_Node@@8
rdata$r	SEGMENT
??_R2DPS_Node@@8 DD FLAT:??_R1A@?0A@EA@DPS_Node@@8	; DPS_Node::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3DPS_Node@@8
rdata$r	SEGMENT
??_R3DPS_Node@@8 DD 00H					; DPS_Node::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DPS_Node@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDPS_Node@@@8
_DATA	SEGMENT
??_R0?AVDPS_Node@@@8 DD FLAT:??_7type_info@@6B@		; DPS_Node `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDPS_Node@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DPS_Node@@6B@
rdata$r	SEGMENT
??_R4DPS_Node@@6B@ DD 00H				; DPS_Node::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDPS_Node@@@8
	DD	FLAT:??_R3DPS_Node@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParticleAnimationNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParticleAnimationNode@@8 DD FLAT:??_R0?AVParticleAnimationNode@@@8 ; ParticleAnimationNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParticleAnimationNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ParticleAnimationNode@@8
rdata$r	SEGMENT
??_R2ParticleAnimationNode@@8 DD FLAT:??_R1A@?0A@EA@ParticleAnimationNode@@8 ; ParticleAnimationNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3ParticleAnimationNode@@8
rdata$r	SEGMENT
??_R3ParticleAnimationNode@@8 DD 00H			; ParticleAnimationNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ParticleAnimationNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParticleAnimationNode@@@8
_DATA	SEGMENT
??_R0?AVParticleAnimationNode@@@8 DD FLAT:??_7type_info@@6B@ ; ParticleAnimationNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParticleAnimationNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParticleAnimationNode@@6B@
rdata$r	SEGMENT
??_R4ParticleAnimationNode@@6B@ DD 00H			; ParticleAnimationNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParticleAnimationNode@@@8
	DD	FLAT:??_R3ParticleAnimationNode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParticleTextureNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParticleTextureNode@@8 DD FLAT:??_R0?AVParticleTextureNode@@@8 ; ParticleTextureNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParticleTextureNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ParticleTextureNode@@8
rdata$r	SEGMENT
??_R2ParticleTextureNode@@8 DD FLAT:??_R1A@?0A@EA@ParticleTextureNode@@8 ; ParticleTextureNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3ParticleTextureNode@@8
rdata$r	SEGMENT
??_R3ParticleTextureNode@@8 DD 00H			; ParticleTextureNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ParticleTextureNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParticleTextureNode@@@8
_DATA	SEGMENT
??_R0?AVParticleTextureNode@@@8 DD FLAT:??_7type_info@@6B@ ; ParticleTextureNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParticleTextureNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParticleTextureNode@@6B@
rdata$r	SEGMENT
??_R4ParticleTextureNode@@6B@ DD 00H			; ParticleTextureNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParticleTextureNode@@@8
	DD	FLAT:??_R3ParticleTextureNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ANode@@8
rdata$r	SEGMENT
??_R2ANode@@8 DD FLAT:??_R1A@?0A@EA@ANode@@8		; ANode::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ANode@@8
rdata$r	SEGMENT
??_R3ANode@@8 DD 00H					; ANode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ANode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVANode@@@8
_DATA	SEGMENT
??_R0?AVANode@@@8 DD FLAT:??_7type_info@@6B@		; ANode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVANode@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ANode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ANode@@8 DD FLAT:??_R0?AVANode@@@8	; ANode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ANode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParticleNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParticleNode@@8 DD FLAT:??_R0?AVParticleNode@@@8 ; ParticleNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParticleNode@@8
rdata$r	ENDS
;	COMDAT ??_R2ParticleNode@@8
rdata$r	SEGMENT
??_R2ParticleNode@@8 DD FLAT:??_R1A@?0A@EA@ParticleNode@@8 ; ParticleNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ANode@@8
rdata$r	ENDS
;	COMDAT ??_R3ParticleNode@@8
rdata$r	SEGMENT
??_R3ParticleNode@@8 DD 00H				; ParticleNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ParticleNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParticleNode@@@8
_DATA	SEGMENT
??_R0?AVParticleNode@@@8 DD FLAT:??_7type_info@@6B@	; ParticleNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParticleNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ParticleNode@@6B@
rdata$r	SEGMENT
??_R4ParticleNode@@6B@ DD 00H				; ParticleNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParticleNode@@@8
	DD	FLAT:??_R3ParticleNode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawableObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawableObject@@8 DD FLAT:??_R0?AVDrawableObject@@@8 ; DrawableObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawableObject@@8
rdata$r	SEGMENT
??_R2DrawableObject@@8 DD FLAT:??_R1A@?0A@EA@DrawableObject@@8 ; DrawableObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3DrawableObject@@8
rdata$r	SEGMENT
??_R3DrawableObject@@8 DD 00H				; DrawableObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawableObject@@@8
_DATA	SEGMENT
??_R0?AVDrawableObject@@@8 DD FLAT:??_7type_info@@6B@	; DrawableObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawableObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R4DrawableObject@@6B@
rdata$r	SEGMENT
??_R4DrawableObject@@6B@ DD 00H				; DrawableObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawableObject@@@8
	DD	FLAT:??_R3DrawableObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@ DB 'Error:  %'
	DB	'0d  %s  %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CLILDDMP@DrawParticleSys?4cpp?$AA@
CONST	SEGMENT
??_C@_0BE@CLILDDMP@DrawParticleSys?4cpp?$AA@ DB 'DrawParticleSys.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
CONST	SEGMENT
??_C@_0M@CFLADCE@Feb?518?52013?$AA@ DB 'Feb 18 2013', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KBCJIILC@Animation?5?$CFs?5Failed?$AA@
CONST	SEGMENT
??_C@_0BE@KBCJIILC@Animation?5?$CFs?5Failed?$AA@ DB 'Animation %s Failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLFCANPD@random?$AA@
CONST	SEGMENT
??_C@_06NLFCANPD@random?$AA@ DB 'random', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILHIIPPP@fragradius?$AA@
CONST	SEGMENT
??_C@_0L@ILHIIPPP@fragradius?$AA@ DB 'fragradius', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HCCHHEEF@rate?$AA@
CONST	SEGMENT
??_C@_04HCCHHEEF@rate?$AA@ DB 'rate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LAAKACNI@trailnr?$AA@
CONST	SEGMENT
??_C@_07LAAKACNI@trailnr?$AA@ DB 'trailnr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMCBKMCB@weight?$AA@
CONST	SEGMENT
??_C@_06CMCBKMCB@weight?$AA@ DB 'weight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NIIIOFCG@emittime?$AA@
CONST	SEGMENT
??_C@_08NIIIOFCG@emittime?$AA@ DB 'emittime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PBBLKBDM@LUD?$AA@
CONST	SEGMENT
??_C@_03PBBLKBDM@LUD?$AA@ DB 'LUD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLDKGHKD@framerate?$AA@
CONST	SEGMENT
??_C@_09PLDKGHKD@framerate?$AA@ DB 'framerate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLAPKHEJ@frames?$AA@
CONST	SEGMENT
??_C@_06OLAPKHEJ@frames?$AA@ DB 'frames', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DOOGDKOH@emitonerandomly?$AA@
CONST	SEGMENT
??_C@_0BA@DOOGDKOH@emitonerandomly?$AA@ DB 'emitonerandomly', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ONAKKFI@movement?$AA@
CONST	SEGMENT
??_C@_08ONAKKFI@movement?$AA@ DB 'movement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KPMDGEHG@orientation?$AA@
CONST	SEGMENT
??_C@_0M@KPMDGEHG@orientation?$AA@ DB 'orientation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BOEIJNLB@modelct?$AA@
CONST	SEGMENT
??_C@_07BOEIJNLB@modelct?$AA@ DB 'modelct', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PJDCNDII@dieonground?$AA@
CONST	SEGMENT
??_C@_0M@PJDCNDII@dieonground?$AA@ DB 'dieonground', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LDFGJJKA@visibledistance?$AA@
CONST	SEGMENT
??_C@_0BA@LDFGJJKA@visibledistance?$AA@ DB 'visibledistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGBNAPAB@groundfriction?$AA@
CONST	SEGMENT
??_C@_0P@BGBNAPAB@groundfriction?$AA@ DB 'groundfriction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJNNKBIK@trailid?$AA@
CONST	SEGMENT
??_C@_07KJNNKBIK@trailid?$AA@ DB 'trailid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EILMMHCP@soundPitch?$AA@
CONST	SEGMENT
??_C@_0L@EILMMHCP@soundPitch?$AA@ DB 'soundPitch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFLDNOLA@soundVolume?$AA@
CONST	SEGMENT
??_C@_0M@CFLDNOLA@soundVolume?$AA@ DB 'soundVolume', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EONGMOLH@soundlooped?$AA@
CONST	SEGMENT
??_C@_0M@EONGMOLH@soundlooped?$AA@ DB 'soundlooped', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EKMCOBOP@soundid?$AA@
CONST	SEGMENT
??_C@_07EKMCOBOP@soundid?$AA@ DB 'soundid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KEDCNBMH@zplane?$AA@
CONST	SEGMENT
??_C@_06KEDCNBMH@zplane?$AA@ DB 'zplane', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BMHKPPID@poly?$AA@
CONST	SEGMENT
??_C@_04BMHKPPID@poly?$AA@ DB 'poly', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLPEIJJH@drawtype?$AA@
CONST	SEGMENT
??_C@_08JLPEIJJH@drawtype?$AA@ DB 'drawtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BEJFKOMN@RotationRate?$AA@
CONST	SEGMENT
??_C@_0N@BEJFKOMN@RotationRate?$AA@ DB 'RotationRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PGMBENJL@initialVelocity?$AA@
CONST	SEGMENT
??_C@_0BA@PGMBENJL@initialVelocity?$AA@ DB 'initialVelocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HDJODILK@inheritvelocity?$AA@
CONST	SEGMENT
??_C@_0BA@HDJODILK@inheritvelocity?$AA@ DB 'inheritvelocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKFAMOHD@acceleration?$AA@
CONST	SEGMENT
??_C@_0N@OKFAMOHD@acceleration?$AA@ DB 'acceleration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKPIOCGF@emissionrnd?$AA@
CONST	SEGMENT
??_C@_0M@CKPIOCGF@emissionrnd?$AA@ DB 'emissionrnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGKJGFL@emissionvelocity?$AA@
CONST	SEGMENT
??_C@_0BB@GGKJGFL@emissionvelocity?$AA@ DB 'emissionvelocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBDNEBPB@emissionrate?$AA@
CONST	SEGMENT
??_C@_0N@GBDNEBPB@emissionrate?$AA@ DB 'emissionrate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EPKKHNOP@emissiontarget?$AA@
CONST	SEGMENT
??_C@_0P@EPKKHNOP@emissiontarget?$AA@ DB 'emissiontarget', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GMJCNMGB@emissiondomain?$AA@
CONST	SEGMENT
??_C@_0P@GMJCNMGB@emissiondomain?$AA@ DB 'emissiondomain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DNBDKKLP@WATERIMPACT?$AA@
CONST	SEGMENT
??_C@_0M@DNBDKKLP@WATERIMPACT?$AA@ DB 'WATERIMPACT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IGOONCEK@EARTHIMPACT?$AA@
CONST	SEGMENT
??_C@_0M@IGOONCEK@EARTHIMPACT?$AA@ DB 'EARTHIMPACT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LHHGFCMD@IMPACT?$AA@
CONST	SEGMENT
??_C@_06LHHGFCMD@IMPACT?$AA@ DB 'IMPACT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CILNDNOD@PERSEC?$AA@
CONST	SEGMENT
??_C@_06CILNDNOD@PERSEC?$AA@ DB 'PERSEC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHGHGAKN@ONCE?$AA@
CONST	SEGMENT
??_C@_04GHGHGAKN@ONCE?$AA@ DB 'ONCE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHPENDJF@EMITONWATERIMPACT?$AA@
CONST	SEGMENT
??_C@_0BC@JHPENDJF@EMITONWATERIMPACT?$AA@ DB 'EMITONWATERIMPACT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CMAJKLGA@EMITONEARTHIMPACT?$AA@
CONST	SEGMENT
??_C@_0BC@CMAJKLGA@EMITONEARTHIMPACT?$AA@ DB 'EMITONEARTHIMPACT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMGECMI@EMITONIMPACT?$AA@
CONST	SEGMENT
??_C@_0N@LMGECMI@EMITONIMPACT?$AA@ DB 'EMITONIMPACT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBFACCKM@EMITPERSEC?$AA@
CONST	SEGMENT
??_C@_0L@LBFACCKM@EMITPERSEC?$AA@ DB 'EMITPERSEC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CHFNGICB@EMITONCE?$AA@
CONST	SEGMENT
??_C@_08CHFNGICB@EMITONCE?$AA@ DB 'EMITONCE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HPHEJFOB@emissionmode?$AA@
CONST	SEGMENT
??_C@_0N@HPHEJFOB@emissionmode?$AA@ DB 'emissionmode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DHIKPAKB@emissionid?$AA@
CONST	SEGMENT
??_C@_0L@DHIKPAKB@emissionid?$AA@ DB 'emissionid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DPMIMFNG@bounce?$AA@
CONST	SEGMENT
??_C@_06DPMIMFNG@bounce?$AA@ DB 'bounce', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PHPAONAP@drag?$AA@
CONST	SEGMENT
??_C@_04PHPAONAP@drag?$AA@ DB 'drag', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAEKHIAN@alpha?$AA@
CONST	SEGMENT
??_C@_05IAEKHIAN@alpha?$AA@ DB 'alpha', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GFBFDLBM@gravity?$AA@
CONST	SEGMENT
??_C@_07GFBFDLBM@gravity?$AA@ DB 'gravity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JDHEGGGP@texture?$AA@
CONST	SEGMENT
??_C@_07JDHEGGGP@texture?$AA@ DB 'texture', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NLKEJFGN@animate?$AA@
CONST	SEGMENT
??_C@_07NLKEJFGN@animate?$AA@ DB 'animate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MHMEOBLM@MG?$AA@
CONST	SEGMENT
??_C@_02MHMEOBLM@MG?$AA@ DB 'MG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GECEPKB@flags?$AA@
CONST	SEGMENT
??_C@_05GECEPKB@flags?$AA@ DB 'flags', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IAGNFIBA@size?$AA@
CONST	SEGMENT
??_C@_04IAGNFIBA@size?$AA@ DB 'size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEPGNJB@light?$AA@
CONST	SEGMENT
??_C@_05OEPGNJB@light?$AA@ DB 'light', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOBECPDD@3dlight?$AA@
CONST	SEGMENT
??_C@_07KOBECPDD@3dlight?$AA@ DB '3dlight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEENBMOG@color?$AA@
CONST	SEGMENT
??_C@_05PEENBMOG@color?$AA@ DB 'color', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLHMBIPK@lifespan?$AA@
CONST	SEGMENT
??_C@_08LLHMBIPK@lifespan?$AA@ DB 'lifespan', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COKNODCN@windFactor?$AA@
CONST	SEGMENT
??_C@_0L@COKNODCN@windFactor?$AA@ DB 'windFactor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GAJCJCGI@windoff?$AA@
CONST	SEGMENT
??_C@_07GAJCJCGI@windoff?$AA@ DB 'windoff', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NKHKICEG@cluster?$AA@
CONST	SEGMENT
??_C@_07NKHKICEG@cluster?$AA@ DB 'cluster', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFBLJAJ@texturefile?$AA@
CONST	SEGMENT
??_C@_0M@EFBLJAJ@texturefile?$AA@ DB 'texturefile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCBFNMAJ@animation?$AA@
CONST	SEGMENT
??_C@_09KCBFNMAJ@animation?$AA@ DB 'animation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group?$AA@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group?$AA@ DB 'group', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAEIOGEG@trail?$AA@
CONST	SEGMENT
??_C@_05FAEIOGEG@trail?$AA@ DB 'trail', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EGCJHIOB@id?$AA@
CONST	SEGMENT
??_C@_02EGCJHIOB@id?$AA@ DB 'id', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN?$AA@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN?$AA@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NCJKDDL@?6?$AA?$AA@
CONST	SEGMENT
??_C@_02NCJKDDL@?6?$AA?$AA@ DB 0aH, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NGOCLIKE@?$DN?6?$AA@
CONST	SEGMENT
??_C@_02NGOCLIKE@?$DN?6?$AA@ DB '=', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@ DB '%s\terrdata\%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BBEJFBFA@point?$AA@
CONST	SEGMENT
??_C@_05BBEJFBFA@point?$AA@ DB 'point', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJPCFDOP@line?$AA@
CONST	SEGMENT
??_C@_04HJPCFDOP@line?$AA@ DB 'line', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LCGIPIL@disc?$AA@
CONST	SEGMENT
??_C@_04LCGIPIL@disc?$AA@ DB 'disc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KEGCCCGI@rectangle?$AA@
CONST	SEGMENT
??_C@_09KEGCCCGI@rectangle?$AA@ DB 'rectangle', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FOPOJBJM@triangle?$AA@
CONST	SEGMENT
??_C@_08FOPOJBJM@triangle?$AA@ DB 'triangle', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOMJJLOC@cone?$AA@
CONST	SEGMENT
??_C@_04NOMJJLOC@cone?$AA@ DB 'cone', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNLJBPEP@cylinder?$AA@
CONST	SEGMENT
??_C@_08GNLJBPEP@cylinder?$AA@ DB 'cylinder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LPJPOBEM@blob?$AA@
CONST	SEGMENT
??_C@_04LPJPOBEM@blob?$AA@ DB 'blob', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLPJGAII@box?$AA@
CONST	SEGMENT
??_C@_03OLPJGAII@box?$AA@ DB 'box', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MAIECAHP@plane?$AA@
CONST	SEGMENT
??_C@_05MAIECAHP@plane?$AA@ DB 'plane', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOHEPPJH@sphere?$AA@
CONST	SEGMENT
??_C@_06FOHEPPJH@sphere?$AA@ DB 'sphere', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GNFDEJMB@_?$CF03d?$AA@
CONST	SEGMENT
??_C@_05GNFDEJMB@_?$CF03d?$AA@ DB '_%03d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DKIFGDMI@?4?0?5?$AA@
CONST	SEGMENT
??_C@_03DKIFGDMI@?4?0?5?$AA@ DB '., ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7SubPartEmitter@@6B@
CONST	SEGMENT
??_7SubPartEmitter@@6B@ DD FLAT:??_R4SubPartEmitter@@6B@ ; SubPartEmitter::`vftable'
	DD	FLAT:??_ESubPartEmitter@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubEmitter@@6B@
CONST	SEGMENT
??_7SubEmitter@@6B@ DD FLAT:??_R4SubEmitter@@6B@	; SubEmitter::`vftable'
	DD	FLAT:??_ESubEmitter@@UAEPAXI@Z
	DD	FLAT:?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPartSound@@6B@
CONST	SEGMENT
??_7SubPartSound@@6B@ DD FLAT:??_R4SubPartSound@@6B@	; SubPartSound::`vftable'
	DD	FLAT:??_ESubPartSound@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartSound@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPartSound@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPartBSP@@6B@
CONST	SEGMENT
??_7SubPartBSP@@6B@ DD FLAT:??_R4SubPartBSP@@6B@	; SubPartBSP::`vftable'
	DD	FLAT:??_ESubPartBSP@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartBSP@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPartTrail@@6B@
CONST	SEGMENT
??_7SubPartTrail@@6B@ DD FLAT:??_R4SubPartTrail@@6B@	; SubPartTrail::`vftable'
	DD	FLAT:??_ESubPartTrail@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartTrail@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPartTrail@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPartPoly@@6B@
CONST	SEGMENT
??_7SubPartPoly@@6B@ DD FLAT:??_R4SubPartPoly@@6B@	; SubPartPoly::`vftable'
	DD	FLAT:??_ESubPartPoly@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartPoly@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPartMovementOrientation@@6B@
CONST	SEGMENT
??_7SubPartMovementOrientation@@6B@ DD FLAT:??_R4SubPartMovementOrientation@@6B@ ; SubPartMovementOrientation::`vftable'
	DD	FLAT:??_ESubPartMovementOrientation@@UAEPAXI@Z
	DD	FLAT:?Run@SubPartMovementOrientation@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7SubPart@@6B@
CONST	SEGMENT
??_7SubPart@@6B@ DD FLAT:??_R4SubPart@@6B@		; SubPart::`vftable'
	DD	FLAT:??_ESubPart@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
CONST	ENDS
;	COMDAT ??_7ParticleNode@@6B@
CONST	SEGMENT
??_7ParticleNode@@6B@ DD FLAT:??_R4ParticleNode@@6B@	; ParticleNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7ParticleParamNode@@6B@
CONST	SEGMENT
??_7ParticleParamNode@@6B@ DD FLAT:??_R4ParticleParamNode@@6B@ ; ParticleParamNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7ParticleTextureNode@@6B@
CONST	SEGMENT
??_7ParticleTextureNode@@6B@ DD FLAT:??_R4ParticleTextureNode@@6B@ ; ParticleTextureNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7DrawableParticleSys@@6B@
CONST	SEGMENT
??_7DrawableParticleSys@@6B@ DD FLAT:??_R4DrawableParticleSys@@6B@ ; DrawableParticleSys::`vftable'
	DD	FLAT:??_EDrawableParticleSys@@UAEPAXI@Z
	DD	FLAT:?GetRadarSign@DrawableObject@@UAEMXZ
	DD	FLAT:?SetLabel@DrawableObject@@UAEXPADK@Z
	DD	FLAT:?SetInhibitFlag@DrawableObject@@UAEXH@Z
	DD	FLAT:?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
	DD	FLAT:?Draw@DrawableParticleSys@@UAEXPAVRenderOTW@@H@Z
	DD	FLAT:?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
	DD	FLAT:?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
CONST	ENDS
;	COMDAT ??_7ParticleAnimationNode@@6B@
CONST	SEGMENT
??_7ParticleAnimationNode@@6B@ DD FLAT:??_R4ParticleAnimationNode@@6B@ ; ParticleAnimationNode::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7DPS_Node@@6B@
CONST	SEGMENT
??_7DPS_Node@@6B@ DD FLAT:??_R4DPS_Node@@6B@		; DPS_Node::`vftable'
	DD	FLAT:?CompareWith@ANode@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7DrawableObject@@6B@
CONST	SEGMENT
??_7DrawableObject@@6B@ DD FLAT:??_R4DrawableObject@@6B@ ; DrawableObject::`vftable'
	DD	FLAT:??_EDrawableObject@@UAEPAXI@Z
	DD	FLAT:?GetRadarSign@DrawableObject@@UAEMXZ
	DD	FLAT:?SetLabel@DrawableObject@@UAEXPADK@Z
	DD	FLAT:?SetInhibitFlag@DrawableObject@@UAEXH@Z
	DD	FLAT:?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
	DD	FLAT:__purecall
	DD	FLAT:?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
	DD	FLAT:?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??1SubPartEmitter@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SubPartEmitter@@UAE@XZ$0
__unwindtable$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z$0
__unwindtable$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z$0
__unwindtable$??1SubPartSound@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SubPartSound@@UAE@XZ$0
__unwindtable$??0SubPartSound@@QAE@PAVParticleNode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SubPartSound@@QAE@PAVParticleNode@@@Z$0
__unwindtable$??1SubPartTrail@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SubPartTrail@@UAE@XZ$0
__unwindtable$??0SubPartPoly@@QAE@PAVParticleNode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SubPartPoly@@QAE@PAVParticleNode@@@Z$0
__unwindtable$??1ParticleNode@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ParticleNode@@QAE@XZ$0
__unwindtable$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z$0
__unwindtable$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z$0
__unwindtable$?PS_AddSound@DrawableParticleSys@@CAXKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PS_AddSound@DrawableParticleSys@@CAXKK@Z$0
__unwindtable$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z$0
__unwindtable$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z$0
__unwindtable$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z$0
__unwindtable$??0SubPartTrail@@QAE@PAVParticleNode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SubPartTrail@@QAE@PAVParticleNode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SubPartTrail@@QAE@PAVParticleNode@@@Z$1
__unwindtable$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ$1
__unwindtable$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$2
__unwindtable$??1DrawableParticleSys@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$2
__unwindtable$??0DrawableParticleSys@@QAE@HM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$2
__ehfuncinfo$??1SubPartEmitter@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SubPartEmitter@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1SubPartSound@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SubPartSound@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0SubPartSound@@QAE@PAVParticleNode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SubPartSound@@QAE@PAVParticleNode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1SubPartTrail@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SubPartTrail@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0SubPartTrail@@QAE@PAVParticleNode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SubPartTrail@@QAE@PAVParticleNode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0SubPartPoly@@QAE@PAVParticleNode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SubPartPoly@@QAE@PAVParticleNode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1ParticleNode@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ParticleNode@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PS_AddSound@DrawableParticleSys@@CAXKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PS_AddSound@DrawableParticleSys@@CAXKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1DrawableParticleSys@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1DrawableParticleSys@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0DrawableParticleSys@@QAE@HM@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DrawableParticleSys@@QAE@HM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1AList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1AList@@QAE@XZ$0
__ehfuncinfo$??1AList@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1AList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_PurgeTimeInc$initializer$ DD FLAT:??__EPurgeTimeInc@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_PurgeAllTimeInc$initializer$ DD FLAT:??__EPurgeAllTimeInc@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?textureList$initializer$@DrawableParticleSys@@0P6AXXZA DD FLAT:??__E?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; DrawableParticleSys::textureList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?paramList$initializer$@DrawableParticleSys@@0P6AXXZA DD FLAT:??__E?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ ; DrawableParticleSys::paramList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?dpsList$initializer$@DrawableParticleSys@@0P6AXXZA DD FLAT:??__E?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; DrawableParticleSys::dpsList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?AnimationsList$initializer$@DrawableParticleSys@@0P6AXXZA DD FLAT:??__E?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; DrawableParticleSys::AnimationsList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_psIRotation$initializer$ DD FLAT:??__EpsIRotation@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_PS_LightRot$initializer$ DD FLAT:??__EPS_LightRot@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_A_C$ = -52						; size = 12
_A_B$ = -40						; size = 12
_AK$ = -28						; size = 4
tv154 = -24						; size = 4
_ABxAC$ = -20						; size = 4
_CP$ = -16						; size = 4
_AB$ = -12						; size = 4
_AC$ = -8						; size = 4
_AP$ = -4						; size = 4
_A$ = 8							; size = 12
_B$ = 20						; size = 12
_R$ = 32						; size = 4
?GetCollisionPoint@@YAMUD3DXVECTOR3@@0M@Z PROC		; GetCollisionPoint

; 4292 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 4293 :     D3DXVECTOR3 A_B = B - A;

	lea	eax, DWORD PTR _A$[ebp]
	push	eax
	lea	ecx, DWORD PTR _A_B$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _B$[ebp]
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-

; 4294 :     // AB lenght
; 4295 :     float AB = RED_Lenght3D(&A_B);

	lea	edx, DWORD PTR _A_B$[ebp]
	push	edx
	call	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z	; RED_Lenght3D
	add	esp, 4
	fstp	DWORD PTR _AB$[ebp]

; 4296 :     // Get the distance from A
; 4297 :     float AC = RED_Lenght3D(&A);

	lea	eax, DWORD PTR _A$[ebp]
	push	eax
	call	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z	; RED_Lenght3D
	add	esp, 4
	fstp	DWORD PTR _AC$[ebp]

; 4298 : 
; 4299 :     // if A inside radius, return 0 offset as contact from A
; 4300 :     if (AC <= R) return 0.0f;

	movss	xmm0, DWORD PTR _R$[ebp]
	comiss	xmm0, DWORD PTR _AC$[ebp]
	jb	SHORT $LN3@GetCollisi
	fldz
	jmp	$LN4@GetCollisi
$LN3@GetCollisi:

; 4301 : 
; 4302 :     // else check if a contact with segment calculating nearest segment point distance as projecttion point P on AB
; 4303 :     // AB Vector
; 4304 :     // the AC Vector
; 4305 :     D3DXVECTOR3 A_C = -A;

	lea	ecx, DWORD PTR _A_C$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _A$[ebp]
	call	??GD3DXVECTOR3@@QBE?AU0@XZ		; D3DXVECTOR3::operator-

; 4306 :     // the dot product AB*AC
; 4307 :     float ABxAC = D3DXVec3Dot(&A_C, &A_B);

	lea	edx, DWORD PTR _A_B$[ebp]
	push	edx
	lea	eax, DWORD PTR _A_C$[ebp]
	push	eax
	call	?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z	; D3DXVec3Dot
	add	esp, 8
	fstp	DWORD PTR _ABxAC$[ebp]

; 4308 :     // the distance AP
; 4309 :     float AP = ABxAC / AB;

	movss	xmm0, DWORD PTR _ABxAC$[ebp]
	divss	xmm0, DWORD PTR _AB$[ebp]
	movss	DWORD PTR _AP$[ebp], xmm0

; 4310 : 
; 4311 :     // if AP more than AB, the P is out of segment AB, so, step is the full segment
; 4312 :     if (AP < 0) return AB;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _AP$[ebp]
	jbe	SHORT $LN2@GetCollisi
	fld	DWORD PTR _AB$[ebp]
	jmp	SHORT $LN4@GetCollisi
$LN2@GetCollisi:

; 4313 : 
; 4314 :     // the distance CP
; 4315 :     float CP = sqrtf(AC * AC - AP * AP);

	movss	xmm0, DWORD PTR _AC$[ebp]
	mulss	xmm0, DWORD PTR _AC$[ebp]
	movss	xmm1, DWORD PTR _AP$[ebp]
	mulss	xmm1, DWORD PTR _AP$[ebp]
	subss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _CP$[ebp]

; 4316 : 
; 4317 :     // if CP more than R, no contact, so, full segment
; 4318 :     if (CP > R) return AB;

	movss	xmm0, DWORD PTR _CP$[ebp]
	comiss	xmm0, DWORD PTR _R$[ebp]
	jbe	SHORT $LN1@GetCollisi
	fld	DWORD PTR _AB$[ebp]
	jmp	SHORT $LN4@GetCollisi
$LN1@GetCollisi:

; 4319 : 
; 4320 :     // ok, now calculate the AK distance thru AB vector to get contact point K with circle of radius R
; 4321 :     float AK = AP - sqrtf(R * R - CP * CP);

	movss	xmm0, DWORD PTR _R$[ebp]
	mulss	xmm0, DWORD PTR _R$[ebp]
	movss	xmm1, DWORD PTR _CP$[ebp]
	mulss	xmm1, DWORD PTR _CP$[ebp]
	subss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR tv154[ebp]
	movss	xmm0, DWORD PTR _AP$[ebp]
	subss	xmm0, DWORD PTR tv154[ebp]
	movss	DWORD PTR _AK$[ebp], xmm0

; 4322 :     //if(AK > AB) return AB;
; 4323 :     // return the result
; 4324 :     return AK;

	fld	DWORD PTR _AK$[ebp]
$LN4@GetCollisi:

; 4325 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCollisionPoint@@YAMUD3DXVECTOR3@@0M@Z ENDP		; GetCollisionPoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@KK@Z PROC ; RemovePart<ClusterPosType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _Prev$[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@KK@Z ENDP ; RemovePart<ClusterPosType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@KK@Z PROC ; RemovePart<TrailEmitterType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 172				; 000000acH
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 172				; 000000acH
	mov	ecx, DWORD PTR _Prev$[ebp]
	imul	ecx, 172				; 000000acH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 172				; 000000acH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@KK@Z ENDP ; RemovePart<TrailEmitterType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@KK@Z PROC ; RemovePart<LightPartType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR _Prev$[ebp]
	imul	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@KK@Z ENDP ; RemovePart<LightPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@KK@Z PROC ; RemovePart<SoundSubPartType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _Prev$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@KK@Z ENDP ; RemovePart<SoundSubPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@KK@Z PROC ; RemovePart<EmitterPartType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _Prev$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@KK@Z ENDP ; RemovePart<EmitterPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@KK@Z PROC ; RemovePart<PolySubPartType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _Prev$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@KK@Z ENDP ; RemovePart<PolySubPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$RemovePart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@KK@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
_Prev$ = 20						; size = 4
??$RemovePart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@KK@Z PROC ; RemovePart<ParticleNodeType>, COMDAT

; 2660 : {

	push	ebp
	mov	ebp, esp
	push	esi

; 2661 :     // if LAST in List, make the Prev as Last
; 2662 :     if (List.ListEnd == Item) List.ListEnd = Prev;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Item$[ebp]
	jne	SHORT $LN2@RemovePart
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Prev$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@RemovePart:

; 2663 : 
; 2664 :     // if FIRST in List ( no previous pointer ), move the Next as 1st and exit here
; 2665 :     if (Prev == PS_NOPTR)

	cmp	DWORD PTR _Prev$[ebp], -1
	jne	SHORT $LN1@RemovePart

; 2666 :     {
; 2667 :         List.ListEntry = Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 124				; 0000007cH
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR [eax+ecx]
	mov	DWORD PTR [edx+12], ecx

; 2668 :         return List.ListEntry;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN3@RemovePart
$LN1@RemovePart:

; 2669 :     }
; 2670 : 
; 2671 :     // if in the middle
; 2672 :     Part[Prev].NEXT = Part[Item].NEXT;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 124				; 0000007cH
	mov	ecx, DWORD PTR _Prev$[ebp]
	imul	ecx, 124				; 0000007cH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	esi, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [esi+eax]
	mov	DWORD PTR [edx+ecx], eax

; 2673 :     return Part[Item].NEXT;

	mov	ecx, DWORD PTR _Item$[ebp]
	imul	ecx, 124				; 0000007cH
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
$LN3@RemovePart:

; 2674 : }

	pop	esi
	pop	ebp
	ret	0
??$RemovePart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@KK@Z ENDP ; RemovePart<ParticleNodeType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@K@Z PROC ; AddPart<ClusterPosType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	imul	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@K@Z ENDP ; AddPart<ClusterPosType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@K@Z PROC ; AddPart<TrailEmitterType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 172				; 000000acH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	imul	eax, 172				; 000000acH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@K@Z ENDP ; AddPart<TrailEmitterType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@K@Z PROC ; AddPart<LightPartType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	imul	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@K@Z ENDP ; AddPart<LightPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@K@Z PROC ; AddPart<SoundSubPartType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shl	eax, 5
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@K@Z ENDP ; AddPart<SoundSubPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@K@Z PROC ; AddPart<EmitterPartType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shl	eax, 5
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@K@Z ENDP ; AddPart<EmitterPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@K@Z PROC ; AddPart<PolySubPartType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@K@Z ENDP ; AddPart<PolySubPartType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??$AddPart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@K@Z
_TEXT	SEGMENT
_List$ = 8						; size = 4
_Part$ = 12						; size = 4
_Item$ = 16						; size = 4
??$AddPart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@K@Z PROC ; AddPart<ParticleNodeType>, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp

; 2575 :     // Next Pointer Reset
; 2576 :     Part[Item].NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _Item$[ebp]
	imul	eax, 124				; 0000007cH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+eax], -1

; 2577 : 
; 2578 :     // If no Entry Point in the List, THIS will be the one...
; 2579 :     if (List.ListEntry == PS_NOPTR) List.ListEntry = Item;

	mov	edx, DWORD PTR _List$[ebp]
	cmp	DWORD PTR [edx+12], -1
	jne	SHORT $LN2@AddPart
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+12], ecx
	jmp	SHORT $LN1@AddPart
$LN2@AddPart:

; 2580 :     // if Any List Entry, then there is an End, this Item will follow it
; 2581 :     else Part[List.ListEnd].NEXT = Item;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+24]
	imul	eax, 124				; 0000007cH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN1@AddPart:

; 2582 : 
; 2583 :     // This is the Last Item in the List
; 2584 :     List.ListEnd = Item;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [eax+24], ecx

; 2585 :     // return the ITEM
; 2586 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]

; 2587 : }

	pop	ebp
	ret	0
??$AddPart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@K@Z ENDP ; AddPart<ParticleNodeType>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__EPS_LightRot@@YAXXZ
text$yc	SEGMENT
??__EPS_LightRot@@YAXXZ PROC				; `dynamic initializer for 'PS_LightRot'', COMDAT

; 2333 : D3DXMATRIX PS_LightRot;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?PS_LightRot@@3UD3DXMATRIX@@A ; PS_LightRot
	call	??0D3DXMATRIX@@QAE@XZ			; D3DXMATRIX::D3DXMATRIX
	pop	ebp
	ret	0
??__EPS_LightRot@@YAXXZ ENDP				; `dynamic initializer for 'PS_LightRot''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_q$ = -4						; size = 4
_in$ = 8						; size = 4
?trim@@YAPADPAD@Z PROC					; trim

; 2119 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2120 :     char *q;
; 2121 : 
; 2122 :     if (!in) return 0;

	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN8@trim
	xor	eax, eax
	jmp	SHORT $LN10@trim
$LN8@trim:

; 2123 : 
; 2124 :     while (*in == ' ' || *in == '/t')

	mov	eax, DWORD PTR _in$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN6@trim
	mov	edx, DWORD PTR _in$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 12148				; 00002f74H
	jne	SHORT $LN7@trim
$LN6@trim:

; 2125 :     {
; 2126 :         in++;

	mov	ecx, DWORD PTR _in$[ebp]
	add	ecx, 1
	mov	DWORD PTR _in$[ebp], ecx

; 2127 :     }

	jmp	SHORT $LN8@trim
$LN7@trim:

; 2128 : 
; 2129 :     q = in;

	mov	edx, DWORD PTR _in$[ebp]
	mov	DWORD PTR _q$[ebp], edx
$LN5@trim:

; 2130 : 
; 2131 :     while (*q != 0)

	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@trim

; 2132 :         q++;

	mov	edx, DWORD PTR _q$[ebp]
	add	edx, 1
	mov	DWORD PTR _q$[ebp], edx
	jmp	SHORT $LN5@trim
$LN4@trim:

; 2133 : 
; 2134 :     q--;

	mov	eax, DWORD PTR _q$[ebp]
	sub	eax, 1
	mov	DWORD PTR _q$[ebp], eax
$LN3@trim:

; 2135 : 
; 2136 :     while (*q == ' ' || *q == '/t')

	mov	ecx, DWORD PTR _q$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN1@trim
	mov	eax, DWORD PTR _q$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 12148				; 00002f74H
	jne	SHORT $LN2@trim
$LN1@trim:

; 2137 :     {
; 2138 :         *q = 0;

	mov	edx, DWORD PTR _q$[ebp]
	mov	BYTE PTR [edx], 0

; 2139 :         q--;

	mov	eax, DWORD PTR _q$[ebp]
	sub	eax, 1
	mov	DWORD PTR _q$[ebp], eax

; 2140 :     }

	jmp	SHORT $LN3@trim
$LN2@trim:

; 2141 : 
; 2142 :     return(in);

	mov	eax, DWORD PTR _in$[ebp]
$LN10@trim:

; 2143 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?trim@@YAPADPAD@Z ENDP					; trim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 4
_arg$ = 8						; size = 4
_q$ = 12						; size = 4
?MatchString@@YAHPADPAPAD@Z PROC			; MatchString

; 2073 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2074 :     int i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN3@MatchStrin:

; 2075 : 
; 2076 :     while (*q)

	mov	eax, DWORD PTR _q$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@MatchStrin

; 2077 :     {
; 2078 :         i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 2079 : 
; 2080 :         if (stricmp(arg, *q) == 0)

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _arg$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@MatchStrin

; 2081 :         {
; 2082 :             return i;

	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN4@MatchStrin
$LN1@MatchStrin:

; 2083 :         }
; 2084 :     }

	jmp	SHORT $LN3@MatchStrin
$LN2@MatchStrin:

; 2085 : 
; 2086 :     return(0);

	xor	eax, eax
$LN4@MatchStrin:

; 2087 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MatchString@@YAHPADPAPAD@Z ENDP			; MatchString
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartEmitter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartEmitter@@UAEPAXI@Z PROC			; SubPartEmitter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartEmitter@@UAE@XZ		; SubPartEmitter::~SubPartEmitter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartEmitter@@UAEPAXI@Z ENDP			; SubPartEmitter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv90 = -28						; size = 4
$T1 = -24						; size = 4
_Next$2 = -20						; size = 4
_Last$3 = -16						; size = 4
$T4 = -12						; size = 4
_this$ = -8						; size = 4
_Sub$5 = -4						; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartEmitter::Run
; _this$ = ecx

; 979  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 980  : 
; 981  :     if (owner->elapsedTime)

	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN5@Run

; 982  :     {
; 983  :         // Default to die
; 984  :         Alive = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0

; 985  : 
; 986  :         SubPart *Sub = emitters, *Last = NULL, *Next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _Sub$5[ebp], edx
	mov	DWORD PTR _Last$3[ebp], 0
$LN6@Run:

; 987  : 
; 988  :         while (Sub)

	cmp	DWORD PTR _Sub$5[ebp], 0
	je	$LN5@Run

; 989  :         {
; 990  :             // get next item
; 991  :             Next = Sub->next;

	mov	eax, DWORD PTR _Sub$5[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Next$2[ebp], ecx

; 992  : 
; 993  :             // Run the Sub part
; 994  :             if (!Sub->Run(renderer, owner))

	mov	edx, DWORD PTR _owner$[ebp]
	push	edx
	mov	eax, DWORD PTR _renderer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Sub$5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Sub$5[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Run

; 995  :             {
; 996  :                 // if it's dead remove it from list
; 997  :                 if (Last) Last->next = Next;

	cmp	DWORD PTR _Last$3[ebp], 0
	je	SHORT $LN3@Run
	mov	edx, DWORD PTR _Last$3[ebp]
	mov	eax, DWORD PTR _Next$2[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN2@Run
$LN3@Run:

; 998  :                 else emitters = Next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Next$2[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN2@Run:

; 999  : 
; 1000 :                 // and kill it
; 1001 :                 delete Sub;

	mov	eax, DWORD PTR _Sub$5[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN10@Run
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN11@Run
$LN10@Run:
	mov	DWORD PTR tv90[ebp], 0
$LN11@Run:

; 1002 :             }
; 1003 :             else

	jmp	SHORT $LN1@Run
$LN4@Run:

; 1004 :             {
; 1005 :                 // Ok, a subEmitter running, we r still alive
; 1006 :                 Alive = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1

; 1007 :                 Last = Sub;

	mov	ecx, DWORD PTR _Sub$5[ebp]
	mov	DWORD PTR _Last$3[ebp], ecx
$LN1@Run:

; 1008 :             }
; 1009 : 
; 1010 :             Sub = Next;

	mov	edx, DWORD PTR _Next$2[ebp]
	mov	DWORD PTR _Sub$5[ebp], edx

; 1011 :         }

	jmp	$LN6@Run
$LN5@Run:

; 1012 : 
; 1013 :     }
; 1014 : 
; 1015 :     return Alive;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+8]

; 1016 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartEmitter::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
_emit$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SubPartEmitter@@UAE@XZ PROC				; SubPartEmitter::~SubPartEmitter
; _this$ = ecx

; 968  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SubPartEmitter@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPartEmitter@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN2@SubPartEmi:

; 969  :     SubPart *emit;
; 970  : 
; 971  :     while (emit = emitters)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _emit$[ebp], edx
	cmp	DWORD PTR _emit$[ebp], 0
	je	SHORT $LN3@SubPartEmi

; 972  :     {
; 973  :         emitters = emit->next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _emit$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], edx

; 974  :         delete emit;

	mov	eax, DWORD PTR _emit$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@SubPartEmi
	push	1
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN6@SubPartEmi
$LN5@SubPartEmi:
	mov	DWORD PTR tv84[ebp], 0
$LN6@SubPartEmi:

; 975  :     }

	jmp	SHORT $LN2@SubPartEmi
$LN3@SubPartEmi:

; 976  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1SubPartEmitter@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??1SubPartEmitter@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SubPartEmitter@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SubPartEmitter@@UAE@XZ ENDP				; SubPartEmitter::~SubPartEmitter
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -56						; size = 4
$T3 = -52						; size = 4
_l$4 = -48						; size = 4
_sub$5 = -44						; size = 4
tv207 = -40						; size = 4
$T6 = -36						; size = 4
_Test$7 = -32						; size = 4
_sub$8 = -28						; size = 4
tv154 = -24						; size = 4
$T9 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
??0SubPartEmitter@@QAE@PAVParticleNode@@@Z PROC		; SubPartEmitter::SubPartEmitter
; _this$ = ecx

; 931  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubPartEmitter@@6B@

; 932  :     emitters = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 933  :     count = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 934  : 
; 935  :     if (owner->ppn->emitOneRandomly)

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	DWORD PTR [edx+1784], 0
	je	$LN10@SubPartEmi

; 936  :     {
; 937  :         for (count = 0; owner->ppn->emitter[count].stages && count < PSMAX_EMITTERS; count++);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	jmp	SHORT $LN9@SubPartEmi
$LN8@SubPartEmi:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
$LN9@SubPartEmi:
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	imul	ecx, 368				; 00000170H
	cmp	DWORD PTR [edx+ecx+1976], 0
	je	SHORT $LN7@SubPartEmi
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 10			; 0000000aH
	jge	SHORT $LN7@SubPartEmi
	jmp	SHORT $LN8@SubPartEmi
$LN7@SubPartEmi:

; 938  : 
; 939  :         if (count)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN6@SubPartEmi

; 940  :         {
; 941  :             int l = rand() % count;

	call	_rand
	mov	ecx, DWORD PTR _this$[ebp]
	cdq
	idiv	DWORD PTR [ecx+16]
	mov	DWORD PTR _l$4[ebp], edx

; 942  :             SubPart *sub = new SubEmitter(owner, &owner->ppn->emitter[l]);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN13@SubPartEmi
	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _l$4[ebp]
	imul	ecx, 368				; 00000170H
	lea	edx, DWORD PTR [eax+ecx+1788]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z ; SubEmitter::SubEmitter
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN14@SubPartEmi
$LN13@SubPartEmi:
	mov	DWORD PTR tv154[ebp], 0
$LN14@SubPartEmi:
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _sub$8[ebp], edx

; 943  :             sub->next = emitters;

	mov	eax, DWORD PTR _sub$8[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+4], edx

; 944  :             emitters = sub;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sub$8[ebp]
	mov	DWORD PTR [eax+12], ecx

; 945  :             count = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 1
$LN6@SubPartEmi:

; 946  :         }
; 947  :     }
; 948  :     else

	jmp	$LN2@SubPartEmi
$LN10@SubPartEmi:

; 949  :     {
; 950  : 
; 951  :         float Test = PRANDFloatPos();

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR _Test$7[ebp]

; 952  : 
; 953  :         for (count = 0; owner->ppn->emitter[count].stages && count < PSMAX_EMITTERS; count++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	jmp	SHORT $LN4@SubPartEmi
$LN3@SubPartEmi:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
$LN4@SubPartEmi:
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	imul	ecx, 368				; 00000170H
	cmp	DWORD PTR [edx+ecx+1976], 0
	je	$LN2@SubPartEmi
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 10			; 0000000aH
	jge	$LN2@SubPartEmi

; 954  :         {
; 955  :             // Ok... check the probability to enable this emitter...
; 956  :             if (Test >= owner->ppn->ParticleEmitterMin[count] && Test < owner->ppn->ParticleEmitterMax[count])

	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	movss	xmm0, DWORD PTR _Test$7[ebp]
	comiss	xmm0, DWORD PTR [ecx+eax*4+5468]
	jb	$LN1@SubPartEmi
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	movss	xmm0, DWORD PTR [edx+ecx*4+5508]
	comiss	xmm0, DWORD PTR _Test$7[ebp]
	jbe	SHORT $LN1@SubPartEmi

; 957  :             {
; 958  :                 SubPart *sub = new SubEmitter(owner, &owner->ppn->emitter[count]);

	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN15@SubPartEmi
	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	imul	edx, 368				; 00000170H
	lea	eax, DWORD PTR [eax+edx+1788]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z ; SubEmitter::SubEmitter
	mov	DWORD PTR tv207[ebp], eax
	jmp	SHORT $LN16@SubPartEmi
$LN15@SubPartEmi:
	mov	DWORD PTR tv207[ebp], 0
$LN16@SubPartEmi:
	mov	edx, DWORD PTR tv207[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _sub$5[ebp], eax

; 959  :                 sub->next = emitters;

	mov	ecx, DWORD PTR _sub$5[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+4], eax

; 960  :                 emitters = sub;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _sub$5[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN1@SubPartEmi:

; 961  :             }
; 962  :         }

	jmp	$LN3@SubPartEmi
$LN2@SubPartEmi:

; 963  :     }
; 964  : 
; 965  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$1:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SubPartEmitter@@QAE@PAVParticleNode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SubPartEmitter@@QAE@PAVParticleNode@@@Z ENDP		; SubPartEmitter::SubPartEmitter
; Function compile flags: /Odtp
;	COMDAT ??_GSubEmitter@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubEmitter@@UAEPAXI@Z PROC				; SubEmitter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubEmitter@@UAE@XZ			; SubEmitter::~SubEmitter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubEmitter@@UAEPAXI@Z ENDP				; SubEmitter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -132						; size = 4
tv425 = -128						; size = 4
_n$3 = -124						; size = 4
_GroundLevel$4 = -120					; size = 4
tv286 = -116						; size = 4
_gtype$5 = -112						; size = 4
tv68 = -108						; size = 4
_GroundLevel$6 = -104					; size = 4
_gtype$7 = -100						; size = 4
_GroundLevel$8 = -96					; size = 4
$T9 = -92						; size = 4
_v$10 = -88						; size = 4
_qty$ = -84						; size = 4
_this$ = -80						; size = 4
_w$11 = -76						; size = 12
_aim$12 = -64						; size = 12
_pos$13 = -52						; size = 12
_epos$ = -40						; size = 12
_subvel$14 = -28					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubEmitter::Run
; _this$ = ecx

; 1036 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1037 :     //START_PROFILE("PARTICLE EMITTER");
; 1038 : 
; 1039 :     Tpoint epos = owner->pos;

	mov	eax, DWORD PTR _owner$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _epos$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _epos$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _epos$[ebp+8], eax

; 1040 :     float qty = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _qty$[ebp], xmm0

; 1041 : 
; 1042 :     switch (pep->mode)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 4
	ja	$LN18@Run
	mov	ecx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN26@Run[ecx*4]
$LN17@Run:

; 1043 :     {
; 1044 :         case PSEM_IMPACT:
; 1045 :         {
; 1046 :             float GroundLevel = DrawableParticleSys::groundLevel;

	movss	xmm0, DWORD PTR ?groundLevel@DrawableParticleSys@@2MA
	movss	DWORD PTR _GroundLevel$8[ebp], xmm0

; 1047 : 
; 1048 :             if (owner->pos.z >= GroundLevel)

	mov	edx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR [edx+68]
	comiss	xmm0, DWORD PTR _GroundLevel$8[ebp]
	jb	SHORT $LN16@Run

; 1049 :             {
; 1050 :                 epos.z = GroundLevel;

	movss	xmm0, DWORD PTR _GroundLevel$8[ebp]
	movss	DWORD PTR _epos$[ebp+8], xmm0

; 1051 :                 qty += pep->rate[0].value;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	movss	xmm0, DWORD PTR _qty$[ebp]
	addss	xmm0, DWORD PTR [ecx+edx+200]
	movss	DWORD PTR _qty$[ebp], xmm0

; 1052 :                 // ok... done... then die...!!!
; 1053 :                 Alive = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN16@Run:

; 1054 :             }
; 1055 :         }
; 1056 :         break;

	jmp	$LN18@Run
$LN15@Run:

; 1057 : 
; 1058 :         case PSEM_EARTHIMPACT:
; 1059 :         {
; 1060 :             float GroundLevel = DrawableParticleSys::groundLevel;

	movss	xmm0, DWORD PTR ?groundLevel@DrawableParticleSys@@2MA
	movss	DWORD PTR _GroundLevel$6[ebp], xmm0

; 1061 : 
; 1062 :             if (owner->pos.z >= GroundLevel)

	mov	ecx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR [ecx+68]
	comiss	xmm0, DWORD PTR _GroundLevel$6[ebp]
	jb	SHORT $LN13@Run

; 1063 :             {
; 1064 :                 int gtype = OTWDriver.GetGroundType(owner->pos.x, owner->pos.y);

	mov	edx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundType@OTWDriverClass@@QAEHMM@Z	; OTWDriverClass::GetGroundType
	mov	DWORD PTR _gtype$5[ebp], eax

; 1065 :                 epos.z = GroundLevel;

	movss	xmm0, DWORD PTR _GroundLevel$6[ebp]
	movss	DWORD PTR _epos$[ebp+8], xmm0

; 1066 : 
; 1067 : 
; 1068 :                 if (!(gtype == COVERAGE_WATER || gtype == COVERAGE_RIVER))

	cmp	DWORD PTR _gtype$5[ebp], 1
	je	SHORT $LN13@Run
	cmp	DWORD PTR _gtype$5[ebp], 2
	je	SHORT $LN13@Run

; 1069 :                 {
; 1070 :                     qty += pep->rate[0].value;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	xmm0, DWORD PTR _qty$[ebp]
	addss	xmm0, DWORD PTR [edx+eax+200]
	movss	DWORD PTR _qty$[ebp], xmm0

; 1071 :                     // ok... done... then die...!!!
; 1072 :                     Alive = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 0
$LN13@Run:

; 1073 :                 }
; 1074 :             }
; 1075 :         }
; 1076 :         break;

	jmp	$LN18@Run
$LN12@Run:

; 1077 : 
; 1078 :         case PSEM_WATERIMPACT:
; 1079 :         {
; 1080 :             float GroundLevel = DrawableParticleSys::groundLevel;

	movss	xmm0, DWORD PTR ?groundLevel@DrawableParticleSys@@2MA
	movss	DWORD PTR _GroundLevel$4[ebp], xmm0

; 1081 : 
; 1082 :             if (owner->pos.z >= GroundLevel)

	mov	edx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR [edx+68]
	comiss	xmm0, DWORD PTR _GroundLevel$4[ebp]
	jb	SHORT $LN10@Run

; 1083 :             {
; 1084 :                 int gtype = OTWDriver.GetGroundType(owner->pos.x, owner->pos.y);

	mov	eax, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundType@OTWDriverClass@@QAEHMM@Z	; OTWDriverClass::GetGroundType
	mov	DWORD PTR _gtype$7[ebp], eax

; 1085 :                 epos.z = GroundLevel;

	movss	xmm0, DWORD PTR _GroundLevel$4[ebp]
	movss	DWORD PTR _epos$[ebp+8], xmm0

; 1086 : 
; 1087 : 
; 1088 :                 if ((gtype == COVERAGE_WATER || gtype == COVERAGE_RIVER))

	cmp	DWORD PTR _gtype$7[ebp], 1
	je	SHORT $LN9@Run
	cmp	DWORD PTR _gtype$7[ebp], 2
	jne	SHORT $LN10@Run
$LN9@Run:

; 1089 :                 {
; 1090 :                     qty += pep->rate[0].value;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	movss	xmm0, DWORD PTR _qty$[ebp]
	addss	xmm0, DWORD PTR [eax+ecx+200]
	movss	DWORD PTR _qty$[ebp], xmm0

; 1091 :                     // ok... done... then die...!!!
; 1092 :                     Alive = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 0
$LN10@Run:

; 1093 :                 }
; 1094 :             }
; 1095 :         }
; 1096 :         break;

	jmp	$LN18@Run
$LN8@Run:

; 1097 : 
; 1098 :         case PSEM_ONCE:
; 1099 :         {
; 1100 :             while (LastStage < pep->stages && (pep->rate[LastStage].time + RndTime) <= owner->life)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	cmp	eax, DWORD PTR [ecx+188]
	jge	$LN6@Run
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shl	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx+196]
	addss	xmm0, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _owner$[ebp]
	movss	xmm1, DWORD PTR [ecx+28]
	comiss	xmm1, xmm0
	jb	SHORT $LN6@Run

; 1101 :             {
; 1102 :                 // Add quantity and go to next stage
; 1103 :                 qty += pep->rate[LastStage++].value;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shl	edx, 4
	movss	xmm0, DWORD PTR _qty$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+200]
	movss	DWORD PTR _qty$[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx

; 1104 :                 // Ok, recalculate random timing for next stage
; 1105 :                 RndTime = PRANDFloat() * RndTimeCx;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv425[ebp]
	movss	xmm0, DWORD PTR tv425[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+20], xmm0

; 1106 :             }

	jmp	$LN8@Run
$LN6@Run:

; 1107 : 
; 1108 :             // if gone past last stage, die..!!!
; 1109 :             if (LastStage >= pep->stages) Alive = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	cmp	edx, DWORD PTR [eax+188]
	jl	SHORT $LN5@Run
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN5@Run:

; 1110 : 
; 1111 :         }
; 1112 :         break;

	jmp	SHORT $LN18@Run
$LN4@Run:

; 1113 : 
; 1114 :         case PSEM_PERSEC:
; 1115 :             qty = owner->EvalTimedFloat(LastStage, pep->stages, pep->rate);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 192				; 000000c0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
	fstp	DWORD PTR _qty$[ebp]

; 1116 :             qty = qty * owner->elapsedTime + rollover;

	movss	xmm0, DWORD PTR _qty$[ebp]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+16]
	movss	DWORD PTR _qty$[ebp], xmm0

; 1117 : 
; 1118 :             // if gone past last stage, die..!!!
; 1119 :             if (LastStage >= pep->stages) Alive = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	cmp	edx, DWORD PTR [eax+188]
	jl	SHORT $LN3@Run
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN3@Run:
$LN18@Run:

; 1120 :     }
; 1121 : 
; 1122 : 
; 1123 :     while (qty >= 1)

	movss	xmm0, DWORD PTR _qty$[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	$LN1@Run

; 1124 :     {
; 1125 :         float v;
; 1126 :         Tpoint w, pos, aim, subvel;
; 1127 : 
; 1128 :         pep->domain.GetRandomPosition(&w);

	lea	ecx, DWORD PTR _w$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	add	ecx, 4
	call	?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomPosition

; 1129 :         MatrixMult(owner->rotation, &w, &pos);

	lea	eax, DWORD PTR _pos$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _w$11[ebp]
	push	ecx
	mov	edx, DWORD PTR ?rotation@ParticleNode@@2PAUTrotation@@A ; ParticleNode::rotation
	push	edx
	call	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z ; MatrixMult
	add	esp, 12					; 0000000cH

; 1130 : 
; 1131 :         pep->target.GetRandomDirection(&w);

	lea	eax, DWORD PTR _w$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	add	ecx, 44					; 0000002cH
	call	?GetRandomDirection@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomDirection

; 1132 :         MatrixMult(owner->rotation, &w, &aim);

	lea	edx, DWORD PTR _aim$12[ebp]
	push	edx
	lea	eax, DWORD PTR _w$11[ebp]
	push	eax
	mov	ecx, DWORD PTR ?rotation@ParticleNode@@2PAUTrotation@@A ; ParticleNode::rotation
	push	ecx
	call	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z ; MatrixMult
	add	esp, 12					; 0000000cH

; 1133 : 
; 1134 :         v = pep->velocity + pep->velVariation * NRAND;

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [eax+12]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [edi+356]
	addss	xmm1, DWORD PTR [esi+352]
	movss	DWORD PTR _v$10[ebp], xmm1

; 1135 : 
; 1136 :         subvel.x = aim.x * v;

	movss	xmm0, DWORD PTR _aim$12[ebp]
	mulss	xmm0, DWORD PTR _v$10[ebp]
	movss	DWORD PTR _subvel$14[ebp], xmm0

; 1137 :         subvel.y = aim.y * v;

	movss	xmm0, DWORD PTR _aim$12[ebp+4]
	mulss	xmm0, DWORD PTR _v$10[ebp]
	movss	DWORD PTR _subvel$14[ebp+4], xmm0

; 1138 :         subvel.z = aim.z * v;

	movss	xmm0, DWORD PTR _aim$12[ebp+8]
	mulss	xmm0, DWORD PTR _v$10[ebp]
	movss	DWORD PTR _subvel$14[ebp+8], xmm0

; 1139 : 
; 1140 :         subvel.x += owner->vel.x;

	mov	ecx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR _subvel$14[ebp]
	addss	xmm0, DWORD PTR [ecx+72]
	movss	DWORD PTR _subvel$14[ebp], xmm0

; 1141 :         subvel.y += owner->vel.y;

	mov	edx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR _subvel$14[ebp+4]
	addss	xmm0, DWORD PTR [edx+76]
	movss	DWORD PTR _subvel$14[ebp+4], xmm0

; 1142 :         subvel.z += owner->vel.z;

	mov	eax, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR _subvel$14[ebp+8]
	addss	xmm0, DWORD PTR [eax+80]
	movss	DWORD PTR _subvel$14[ebp+8], xmm0

; 1143 : 
; 1144 :         pos.x += epos.x;

	movss	xmm0, DWORD PTR _pos$13[ebp]
	addss	xmm0, DWORD PTR _epos$[ebp]
	movss	DWORD PTR _pos$13[ebp], xmm0

; 1145 :         pos.y += epos.y;

	movss	xmm0, DWORD PTR _pos$13[ebp+4]
	addss	xmm0, DWORD PTR _epos$[ebp+4]
	movss	DWORD PTR _pos$13[ebp+4], xmm0

; 1146 :         pos.z += epos.z;

	movss	xmm0, DWORD PTR _pos$13[ebp+8]
	addss	xmm0, DWORD PTR _epos$[ebp+8]
	movss	DWORD PTR _pos$13[ebp+8], xmm0

; 1147 : 
; 1148 :         ParticleNode *n = new ParticleNode(pep->id, &pos, &subvel, &aim);

	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN22@Run
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _aim$12[ebp]
	push	ecx
	lea	edx, DWORD PTR _subvel$14[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$13[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0ParticleNode@@QAE@HPAUTpoint@@00M@Z	; ParticleNode::ParticleNode
	mov	DWORD PTR tv286[ebp], eax
	jmp	SHORT $LN23@Run
$LN22@Run:
	mov	DWORD PTR tv286[ebp], 0
$LN23@Run:
	mov	ecx, DWORD PTR tv286[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _n$3[ebp], edx

; 1149 :         n->InsertAfter((ANode *)owner);

	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$3[ebp]
	call	?InsertAfter@ANode@@QAEXPAV1@@Z		; ANode::InsertAfter

; 1150 :         qty -= 1.0f;

	movss	xmm0, DWORD PTR _qty$[ebp]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _qty$[ebp], xmm0

; 1151 :     }

	jmp	$LN18@Run
$LN1@Run:

; 1152 : 
; 1153 :     rollover = qty;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _qty$[ebp]
	movss	DWORD PTR [ecx+16], xmm0

; 1154 : 
; 1155 :     //STOP_PROFILE("PARTICLE EMITTER");
; 1156 :     return Alive;

	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+8]

; 1157 : 
; 1158 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN26@Run:
	DD	$LN8@Run
	DD	$LN4@Run
	DD	$LN17@Run
	DD	$LN15@Run
	DD	$LN12@Run
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z$0:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Run@SubEmitter@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubEmitter::Run
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SubEmitter@@UAE@XZ PROC				; SubEmitter::~SubEmitter
; _this$ = ecx

; 1032 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubEmitter@@6B@

; 1033 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	esp, ebp
	pop	ebp
	ret	0
??1SubEmitter@@UAE@XZ ENDP				; SubEmitter::~SubEmitter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv135 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
_EP$ = 12						; size = 4
??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z PROC ; SubEmitter::SubEmitter
; _this$ = ecx

; 1020 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubEmitter@@6B@

; 1021 :     rollover  = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+16], xmm0

; 1022 :     pep       = EP;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _EP$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 1023 :     LastStage = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0

; 1024 :     // Get the randomic time CX
; 1025 :     RndTimeCx = EP->TimeVariation;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _EP$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	DWORD PTR [eax+24], edx

; 1026 :     // set the Random Time for 1st emission
; 1027 :     RndTime = PRANDFloat() * RndTimeCx;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv135[ebp]
	movss	xmm0, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+20], xmm0

; 1028 : 
; 1029 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SubEmitter@@QAE@PAVParticleNode@@PAUParticleEmitterParam@@@Z ENDP ; SubEmitter::SubEmitter
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartSound@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartSound@@UAEPAXI@Z PROC			; SubPartSound::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartSound@@UAE@XZ			; SubPartSound::~SubPartSound
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartSound@@UAEPAXI@Z ENDP			; SubPartSound::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
?IsRunning@SubPartSound@@UAEHPAVParticleNode@@@Z PROC	; SubPartSound::IsRunning
; _this$ = ecx

; 690  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 691  :     return soundPos.IsPlaying(owner->ppn->sndId, 0);

	push	0
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+1420]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?IsPlaying@F4SoundPos@@QAE_NHH@Z	; F4SoundPos::IsPlaying
	movzx	eax, al

; 692  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsRunning@SubPartSound@@UAEHPAVParticleNode@@@Z ENDP	; SubPartSound::IsRunning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_sndPitch$1 = -12					; size = 4
_sndVol$2 = -8						; size = 4
_this$ = -4						; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartSound@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartSound::Run
; _this$ = ecx

; 670  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 671  :     if (playSound && owner->elapsedTime)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN1@Run
	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN1@Run

; 672  :     {
; 673  :         float sndVol, sndPitch;
; 674  :         sndVol = owner->EvalTimedFloat(VolumeStage, owner->ppn->sndVolStages,   owner->ppn->sndVol);

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1596				; 0000063cH
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+1592]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
	fstp	DWORD PTR _sndVol$2[ebp]

; 675  :         sndPitch = owner->EvalTimedFloat(PitchStage, owner->ppn->sndPitchStages, owner->ppn->sndPitch);

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1432				; 00000598H
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+1428]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
	fstp	DWORD PTR _sndPitch$1[ebp]

; 676  : 
; 677  :         soundPos.UpdatePos(owner->pos.x, owner->pos.y, owner->pos.z, owner->vel.x, owner->vel.y, owner->vel.z);

	mov	ecx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+80]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+76]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+68]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?UpdatePos@F4SoundPos@@QAEXMMMMMM@Z	; F4SoundPos::UpdatePos

; 678  :         soundPos.Sfx(owner->ppn->sndId, 0, sndPitch, sndVol);

	push	ecx
	movss	xmm0, DWORD PTR _sndVol$2[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _sndPitch$1[ebp]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+1420]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Sfx@F4SoundPos@@QAEXHHMM@Z		; F4SoundPos::Sfx

; 679  : 
; 680  :         if (!owner->ppn->sndLooped)

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	DWORD PTR [edx+1424], 0
	jne	SHORT $LN1@Run

; 681  :             playSound = 0; // so we only play it once

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN1@Run:

; 682  :     }/* else
; 683  : 
; 684  :  Alive = soundPos.IsPlaying(owner->ppn->sndId,0);*/
; 685  :     return Alive;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+8]

; 686  : 
; 687  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartSound@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartSound::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SubPartSound@@UAE@XZ PROC				; SubPartSound::~SubPartSound
; _this$ = ecx

; 666  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SubPartSound@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPartSound@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 667  : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1F4SoundPos@@QAE@XZ			; F4SoundPos::~F4SoundPos
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1SubPartSound@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??1SubPartSound@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SubPartSound@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SubPartSound@@UAE@XZ ENDP				; SubPartSound::~SubPartSound
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
??0SubPartSound@@QAE@PAVParticleNode@@@Z PROC		; SubPartSound::SubPartSound
; _this$ = ecx

; 660  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SubPartSound@@QAE@PAVParticleNode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubPartSound@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0F4SoundPos@@QAE@XZ			; F4SoundPos::F4SoundPos

; 661  :     playSound = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 1

; 662  :     VolumeStage = PitchStage = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 663  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SubPartSound@@QAE@PAVParticleNode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??0SubPartSound@@QAE@PAVParticleNode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SubPartSound@@QAE@PAVParticleNode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SubPartSound@@QAE@PAVParticleNode@@@Z ENDP		; SubPartSound::SubPartSound
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartBSP@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartBSP@@UAEPAXI@Z PROC				; SubPartBSP::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartBSP@@UAE@XZ			; SubPartBSP::~SubPartBSP
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartBSP@@UAEPAXI@Z ENDP				; SubPartBSP::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartBSP@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartBSP::Run
; _this$ = ecx

; 921  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 922  :     owner->ppn->bspObj->orientation = *(owner->rotation);

	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edi, DWORD PTR [ecx+5632]
	add	edi, 48					; 00000030H
	mov	ecx, 9
	mov	esi, DWORD PTR ?rotation@ParticleNode@@2PAUTrotation@@A ; ParticleNode::rotation
	rep movsd

; 923  :     owner->ppn->bspObj->SetPosition(&owner->pos);

	mov	edx, DWORD PTR _owner$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [ecx+5632]
	call	?SetPosition@DrawableObject@@QAEXPAUTpoint@@@Z ; DrawableObject::SetPosition

; 924  :     owner->ppn->bspObj->Draw(renderer);

	mov	edx, DWORD PTR _renderer$[ebp]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+5632]
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+5632]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 925  :     return Alive;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+8]

; 926  : 
; 927  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartBSP@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartBSP::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SubPartBSP@@UAE@XZ PROC				; SubPartBSP::~SubPartBSP
; _this$ = ecx

; 917  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPartBSP@@6B@

; 918  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	esp, ebp
	pop	ebp
	ret	0
??1SubPartBSP@@UAE@XZ ENDP				; SubPartBSP::~SubPartBSP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
??0SubPartBSP@@QAE@PAVParticleNode@@@Z PROC		; SubPartBSP::SubPartBSP
; _this$ = ecx

; 913  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubPartBSP@@6B@

; 914  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0SubPartBSP@@QAE@PAVParticleNode@@@Z ENDP		; SubPartBSP::SubPartBSP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartTrail@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartTrail@@UAEPAXI@Z PROC			; SubPartTrail::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartTrail@@UAE@XZ			; SubPartTrail::~SubPartTrail
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartTrail@@UAEPAXI@Z ENDP			; SubPartTrail::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_owner$ = 8						; size = 4
?IsRunning@SubPartTrail@@UAEHPAVParticleNode@@@Z PROC	; SubPartTrail::IsRunning
; _this$ = ecx

; 653  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 654  :     return !trailObj->IsTrailEmpty();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?IsTrailEmpty@DrawableTrail@@QAEHXZ	; DrawableTrail::IsTrailEmpty
	test	eax, eax
	jne	SHORT $LN3@IsRunning
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsRunning
$LN3@IsRunning:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsRunning:
	mov	eax, DWORD PTR tv68[ebp]

; 655  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsRunning@SubPartTrail@@UAEHPAVParticleNode@@@Z ENDP	; SubPartTrail::IsRunning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartTrail@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartTrail::Run
; _this$ = ecx

; 644  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 645  :     //START_PROFILE("PS_TRAIL");
; 646  :     trailObj->AddPointAtHead(&owner->pos, 0);

	push	0
	mov	eax, DWORD PTR _owner$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?AddPointAtHead@DrawableTrail@@QAEXPAUTpoint@@K@Z ; DrawableTrail::AddPointAtHead

; 647  :     trailObj->Draw(renderer, 1);

	push	1
	mov	edx, DWORD PTR _renderer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR [eax+20]
	call	edx

; 648  :     //STOP_PROFILE("PS_TRAIL");
; 649  :     return Alive;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+8]

; 650  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartTrail@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartTrail::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv85 = -28						; size = 4
$T2 = -24						; size = 4
_this$ = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SubPartTrail@@UAE@XZ PROC				; SubPartTrail::~SubPartTrail
; _this$ = ecx

; 639  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SubPartTrail@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPartTrail@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 640  :     delete trailObj;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@SubPartTra
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN1@SubPartTra
$LN3@SubPartTra:
	mov	DWORD PTR tv85[ebp], 0
$LN1@SubPartTra:

; 641  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1SubPartTrail@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??1SubPartTrail@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SubPartTrail@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SubPartTrail@@UAE@XZ ENDP				; SubPartTrail::~SubPartTrail
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv129 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
??0SubPartTrail@@QAE@PAVParticleNode@@@Z PROC		; SubPartTrail::SubPartTrail
; _this$ = ecx

; 631  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SubPartTrail@@QAE@PAVParticleNode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubPartTrail@@6B@

; 632  :     if (owner->ppn->trailId && owner->elapsedTime)

	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	DWORD PTR [eax+1756], 0
	je	SHORT $LN1@SubPartTra
	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@SubPartTra

; 633  :     {
; 634  :         trailObj = new DrawableTrail(owner->ppn->trailId, 1);

	push	320					; 00000140H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@SubPartTra
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+1756]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DrawableTrail@@QAE@HM@Z		; DrawableTrail::DrawableTrail
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN5@SubPartTra
$LN4@SubPartTra:
	mov	DWORD PTR tv129[ebp], 0
$LN5@SubPartTra:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+12], eax
$LN1@SubPartTra:

; 635  :     }
; 636  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SubPartTrail@@QAE@PAVParticleNode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__unwindfunclet$??0SubPartTrail@@QAE@PAVParticleNode@@@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0SubPartTrail@@QAE@PAVParticleNode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SubPartTrail@@QAE@PAVParticleNode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SubPartTrail@@QAE@PAVParticleNode@@@Z ENDP		; SubPartTrail::SubPartTrail
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartPoly@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartPoly@@UAEPAXI@Z PROC				; SubPartPoly::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartPoly@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartPoly@@UAEPAXI@Z ENDP				; SubPartPoly::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1SubPartPoly@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SubPartPoly@@UAE@XZ PROC				; SubPartPoly::~SubPartPoly, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	esp, ebp
	pop	ebp
	ret	0
??1SubPartPoly@@UAE@XZ ENDP				; SubPartPoly::~SubPartPoly
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_Alpha$1 = -180						; size = 4
tv840 = -176						; size = 4
tv874 = -172						; size = 4
_Alpha$2 = -168						; size = 4
tv832 = -164						; size = 4
_Color$3 = -160						; size = 4
tv531 = -156						; size = 4
tv575 = -152						; size = 4
_LoColor$4 = -148					; size = 4
tv604 = -144						; size = 4
_HiColor$5 = -140					; size = 4
tv145 = -136						; size = 4
_DistCx$ = -132						; size = 4
tv589 = -128						; size = 4
tv163 = -124						; size = 4
tv546 = -120						; size = 4
tv162 = -116						; size = 4
tv560 = -112						; size = 4
_LiteColor$6 = -108					; size = 4
_PPN$7 = -104						; size = 4
_size$ = -100						; size = 4
_RotCx$ = -96						; size = 8
tv716 = -87						; size = 1
tv786 = -86						; size = 1
tv646 = -85						; size = 1
_alpha$ = -84						; size = 4
_this$ = -80						; size = 4
$T8 = -76						; size = 12
$T9 = -64						; size = 12
_pv$ = -52						; size = 12
_light$ = -40						; size = 12
_color$ = -28						; size = 12
_os$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartPoly@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartPoly::Run
; _this$ = ecx

; 744  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 
; 746  : 
; 747  :     float size, alpha;
; 748  :     psRGB color, light;
; 749  :     // these must be computed even while paused, the renderer needs them
; 750  :     //START_PROFILE("SCALING");
; 751  :     size = owner->EvalTimedLinLogFloat(SizeStage, owner->ppn->sizeStages,  owner->ppn->size) * SizeRandom;

	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 768				; 00000300H
	push	ecx
	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+764]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedLinLogFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedLinLogFloat
	fstp	DWORD PTR tv832[ebp]
	movss	xmm0, DWORD PTR tv832[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [eax+240]
	movss	DWORD PTR _size$[ebp], xmm0

; 752  :     //STOP_PROFILE("SCALING");
; 753  : 
; 754  :     // Visibility Check, exit if not in the FOV
; 755  :     if (TheDXEngine.DX2D_GetDistance((D3DXVECTOR3*)&owner->pos, size) < 0.0f) return Alive;

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _size$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _owner$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@MK@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR tv840[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR tv840[ebp]
	jbe	SHORT $LN9@Run
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+8]
	jmp	$LN10@Run
$LN9@Run:

; 756  : 
; 757  : 
; 758  :     //START_PROFILE("SCALING");
; 759  :     alpha = owner->EvalTimedLinLogFloat(AlphaStage, owner->ppn->alphaStages, owner->ppn->alpha);

	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 932				; 000003a4H
	push	ecx
	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+928]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedLinLogFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedLinLogFloat
	fstp	DWORD PTR _alpha$[ebp]

; 760  :     //STOP_PROFILE("SCALING");
; 761  :     alpha = min(alpha, min(1.0f, owner->ppn->visibleDistance / (DrawableParticleSys::cameraDistance * DrawableParticleSys::cameraDistance / 1000.0f)));

	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	divss	xmm0, DWORD PTR __real@447a0000
	movss	xmm1, DWORD PTR [ecx+1776]
	divss	xmm1, xmm0
	comiss	xmm1, DWORD PTR __real@3f800000
	jbe	SHORT $LN12@Run
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv145[ebp], xmm0
	jmp	SHORT $LN13@Run
$LN12@Run:
	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	divss	xmm0, DWORD PTR __real@447a0000
	movss	xmm1, DWORD PTR [eax+1776]
	divss	xmm1, xmm0
	movss	DWORD PTR tv145[ebp], xmm1
$LN13@Run:
	movss	xmm0, DWORD PTR tv145[ebp]
	comiss	xmm0, DWORD PTR _alpha$[ebp]
	jbe	SHORT $LN16@Run
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR tv163[ebp], xmm0
	jmp	SHORT $LN17@Run
$LN16@Run:
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	divss	xmm0, DWORD PTR __real@447a0000
	movss	xmm1, DWORD PTR [edx+1776]
	divss	xmm1, xmm0
	comiss	xmm1, DWORD PTR __real@3f800000
	jbe	SHORT $LN14@Run
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv162[ebp], xmm0
	jmp	SHORT $LN15@Run
$LN14@Run:
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	divss	xmm0, DWORD PTR __real@447a0000
	movss	xmm1, DWORD PTR [ecx+1776]
	divss	xmm1, xmm0
	movss	DWORD PTR tv162[ebp], xmm1
$LN15@Run:
	movss	xmm0, DWORD PTR tv162[ebp]
	movss	DWORD PTR tv163[ebp], xmm0
$LN17@Run:
	movss	xmm0, DWORD PTR tv163[ebp]
	movss	DWORD PTR _alpha$[ebp], xmm0

; 762  : 
; 763  :     if (alpha < 0.01f) return Alive;

	movss	xmm0, DWORD PTR __real@3c23d70a
	comiss	xmm0, DWORD PTR _alpha$[ebp]
	jbe	SHORT $LN8@Run
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+8]
	jmp	$LN10@Run
$LN8@Run:

; 764  : 
; 765  :     // Calculate a distance CX for far view
; 766  :     float DistCx = size / (DrawableParticleSys::cameraDistance * TheDXEngine.LODBiasCx());

	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?LODBiasCx@CDXEngine@@QAEMXZ		; CDXEngine::LODBiasCx
	fstp	DWORD PTR tv874[ebp]
	movss	xmm0, DWORD PTR tv874[ebp]
	mulss	xmm0, DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA
	movss	xmm1, DWORD PTR _size$[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _DistCx$[ebp], xmm1

; 767  : 
; 768  :     // if less than 0.003 arbitrary
; 769  :     if (DistCx < 0.005f)

	movss	xmm0, DWORD PTR __real@3ba3d70a
	comiss	xmm0, DWORD PTR _DistCx$[ebp]
	jbe	SHORT $LN7@Run

; 770  :     {
; 771  : 
; 772  :         // if less than 0.0002 arbitrary do not draw
; 773  :         if (DistCx < 0.0005f) return Alive;

	movss	xmm0, DWORD PTR __real@3a03126f
	comiss	xmm0, DWORD PTR _DistCx$[ebp]
	jbe	SHORT $LN6@Run
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+8]
	jmp	$LN10@Run
$LN6@Run:

; 774  : 
; 775  :         DWORD Alpha = FloatToInt32(255.0f * alpha /*RESCALE(DistCx, 0.001f, 0.005f, 0.3f, 1.0f)*/);

	movss	xmm0, DWORD PTR __real@437f0000
	mulss	xmm0, DWORD PTR _alpha$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _Alpha$2[ebp], eax

; 776  :         DWORD Color = 0x00202020 | (Alpha << 24);

	mov	ecx, DWORD PTR _Alpha$2[ebp]
	shl	ecx, 24					; 00000018H
	or	ecx, 2105376				; 00202020H
	mov	DWORD PTR _Color$3[ebp], ecx

; 777  :         TheDXEngine.Draw3DPoint((D3DVECTOR*)&owner->pos, Color);

	push	0
	push	0
	mov	edx, DWORD PTR _Color$3[ebp]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?Draw3DPoint@CDXEngine@@QAEXPAU_D3DVECTOR@@K_N1@Z ; CDXEngine::Draw3DPoint

; 778  : 
; 779  :         return Alive;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+8]
	jmp	$LN10@Run
$LN7@Run:

; 780  :     }
; 781  : 
; 782  :     //if(DrawableParticleSys::cameraDistance>owner->ppn->visibleDistance)
; 783  :     // return ;
; 784  : 
; 785  : 
; 786  :     //START_PROFILE("SCALING");
; 787  :     color = owner->EvalTimedRGB(ColorStage, owner->ppn->colorStages, owner->ppn->color);

	mov	edx, DWORD PTR _owner$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 116				; 00000074H
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedRGB@ParticleNode@@QAE?AUpsRGB@@AAHHPAUtimedRGB@@@Z ; ParticleNode::EvalTimedRGB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _color$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _color$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _color$[ebp+8], eax

; 788  :     light = owner->EvalTimedRGB(LightStage, owner->ppn->lightStages, owner->ppn->light);

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 440				; 000001b8H
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+436]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	ecx, DWORD PTR _owner$[ebp]
	call	?EvalTimedRGB@ParticleNode@@QAE?AUpsRGB@@AAHHPAUtimedRGB@@@Z ; ParticleNode::EvalTimedRGB
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _light$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _light$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _light$[ebp+8], edx

; 789  :     //STOP_PROFILE("SCALING");
; 790  : 
; 791  : 
; 792  :     //START_PROFILE("PS DRAW");
; 793  :     Tpoint os, pv;
; 794  :     // COBRA - RED - Rotation, get the radius and angle
; 795  :     mlTrig RotCx;
; 796  :     mlSinCos(&RotCx, owner->Rotation);

	mov	eax, DWORD PTR _owner$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+88]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _RotCx$[ebp]
	push	ecx
	call	?mlSinCos@@YAXPAUmlTrig@@M@Z		; mlSinCos
	add	esp, 8

; 797  :     RotCx.cos *= size;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	mulss	xmm0, DWORD PTR _size$[ebp]
	movss	DWORD PTR _RotCx$[ebp+4], xmm0

; 798  :     RotCx.sin *= size;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	mulss	xmm0, DWORD PTR _size$[ebp]
	movss	DWORD PTR _RotCx$[ebp], xmm0

; 799  : 
; 800  :     if (DXMode)

	movzx	edx, BYTE PTR ?DXMode@@3_NA		; DXMode
	test	edx, edx
	je	$LN5@Run

; 801  :     {
; 802  : 
; 803  : 
; 804  :         DWORD Alpha = F_TO_A(alpha);

	movss	xmm0, DWORD PTR _alpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 24					; 00000018H
	mov	DWORD PTR _Alpha$1[ebp], eax

; 805  :         DWORD HiColor = F_TO_ARGB(alpha, color.r, color.g, color.b);

	movss	xmm0, DWORD PTR _alpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR _color$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR _color$[ebp+4]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR _color$[ebp+8]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _HiColor$5[ebp], esi

; 806  :         DWORD LoColor = F_TO_ARGB(alpha, (color.r * 0.68f), (color.g * 0.68f), (color.b * 0.68f));

	movss	xmm0, DWORD PTR _alpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR _color$[ebp]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR _color$[ebp+4]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR _color$[ebp+8]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _LoColor$4[ebp], esi

; 807  :         DWORD LiteColor = F_TO_RGB(light.r, light.g, light.b);

	movss	xmm0, DWORD PTR _light$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 16					; 00000010H
	movss	xmm0, DWORD PTR _light$[ebp+4]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	esi, eax
	movss	xmm0, DWORD PTR _light$[ebp+8]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	esi, eax
	mov	DWORD PTR _LiteColor$6[ebp], esi

; 808  : 
; 809  :         Quad[0].pos.x = Quad[1].pos.x = Quad[2].pos.x = Quad[3].pos.x = 0.f;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+eax+248], xmm0
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+edx+248], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+ecx+248], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+eax+248], xmm0

; 810  :         Quad[0].pos.y = RotCx.cos;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	movss	DWORD PTR [eax+edx+252], xmm0

; 811  :         Quad[0].pos.z = RotCx.sin;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _RotCx$[ebp]
	movss	DWORD PTR [edx+ecx+256], xmm0

; 812  :         Quad[1].pos.y = RotCx.sin;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _RotCx$[ebp]
	movss	DWORD PTR [ecx+eax+252], xmm0

; 813  :         Quad[1].pos.z = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+edx+256], xmm0

; 814  :         Quad[2].pos.y = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+ecx+252], xmm0

; 815  :         Quad[2].pos.z = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+eax+256], xmm0

; 816  :         Quad[3].pos.y = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+edx+252], xmm0

; 817  :         Quad[3].pos.z = RotCx.cos;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	movss	DWORD PTR [edx+ecx+256], xmm0

; 818  : 
; 819  :         Quad[0].dwColour = Quad[1].dwColour = HiColor;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _HiColor$5[ebp]
	mov	DWORD PTR [ecx+eax+260], edx
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _HiColor$5[ebp]
	mov	DWORD PTR [ecx+eax+260], edx

; 820  :         Quad[2].dwColour = Quad[3].dwColour = LoColor;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LoColor$4[ebp]
	mov	DWORD PTR [ecx+eax+260], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LoColor$4[ebp]
	mov	DWORD PTR [ecx+eax+260], edx

; 821  :         Quad[0].dwSpecular = Quad[1].dwSpecular = Quad[2].dwSpecular = Quad[3].dwSpecular = LiteColor;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LiteColor$6[ebp]
	mov	DWORD PTR [ecx+eax+264], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LiteColor$6[ebp]
	mov	DWORD PTR [ecx+eax+264], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LiteColor$6[ebp]
	mov	DWORD PTR [ecx+eax+264], edx
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _LiteColor$6[ebp]
	mov	DWORD PTR [ecx+eax+264], edx

; 822  :         // draw with BillBoard and declare as VISIBLE, the Visibility test was at function entry point ( DX2D_GetDistance()>0)
; 823  :         TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_BB | POLY_VISIBLE, (D3DXVECTOR3*)&owner->pos, Quad, size, TexHandle);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _size$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 248				; 000000f8H
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	push	5
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad

; 824  : 
; 825  :     }
; 826  :     else

	jmp	$LN1@Run
$LN5@Run:

; 827  :     {
; 828  : 
; 829  : 
; 830  : 
; 831  :         renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD);

	push	32					; 00000020H
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 832  :         ParticleParamNode *PPN = owner->ppn;

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _PPN$7[ebp], edx

; 833  : 
; 834  :         renderer->TransformPointToView(&owner->pos, &pv);

	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 835  : 
; 836  :         os.x = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$[ebp], xmm0

; 837  :         os.y = RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	movss	DWORD PTR _os$[ebp+4], xmm0

; 838  :         os.z = RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	movss	DWORD PTR _os$[ebp+8], xmm0

; 839  :         renderer->TransformBillboardPoint(&os, &pv, &v0);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 840  : 
; 841  :         os.x = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$[ebp], xmm0

; 842  :         os.y = RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	movss	DWORD PTR _os$[ebp+4], xmm0

; 843  :         os.z = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$[ebp+8], xmm0

; 844  :         renderer->TransformBillboardPoint(&os, &pv, &v1);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 845  : 
; 846  :         os.x = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$[ebp], xmm0

; 847  :         os.y = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$[ebp+4], xmm0

; 848  :         os.z = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$[ebp+8], xmm0

; 849  :         renderer->TransformBillboardPoint(&os, &pv, &v2);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 132				; 00000084H
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 850  : 
; 851  :         os.x =  0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _os$[ebp], xmm0

; 852  :         os.y = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _os$[ebp+4], xmm0

; 853  :         os.z = RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$[ebp+4]
	movss	DWORD PTR _os$[ebp+8], xmm0

; 854  :         renderer->TransformBillboardPoint(&os, &pv, &v3);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 184				; 000000b8H
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _os$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 855  : 
; 856  :         v0.q = v0.csZ * Q_SCALE;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+60], xmm0

; 857  :         v1.q = v1.csZ * Q_SCALE;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+128]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+112], xmm0

; 858  :         v2.q = v2.csZ * Q_SCALE;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+180]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+164], xmm0

; 859  :         v3.q = v3.csZ * Q_SCALE;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+232]
	mulss	xmm0, DWORD PTR _Q_SCALE
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+216], xmm0

; 860  : 
; 861  :         /* if(PS_NVG || PS_TV)
; 862  :          {
; 863  :          v0.r = v1.r = v2.r = v3.r = 0.f;
; 864  :          v0.g = v1.g = v2.g = v3.g = .4f;
; 865  :          v0.b = v1.b = v2.b = v3.b = 0.f;
; 866  :          }
; 867  :          else
; 868  :          { */
; 869  :         v0.r = v1.r = gParticleSysLitColor.r * color.r + light.r;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A
	mulss	xmm0, DWORD PTR _color$[ebp]
	addss	xmm0, DWORD PTR _light$[ebp]
	movss	DWORD PTR tv531[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv531[ebp]
	movss	DWORD PTR [ecx+88], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv531[ebp]
	movss	DWORD PTR [edx+36], xmm0

; 870  :         v2.r = v3.r = gParticleSysLitColor.r * color.r * .68f + light.r;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A
	mulss	xmm0, DWORD PTR _color$[ebp]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _light$[ebp]
	movss	DWORD PTR tv546[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv546[ebp]
	movss	DWORD PTR [eax+192], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv546[ebp]
	movss	DWORD PTR [ecx+140], xmm0

; 871  : 
; 872  :         v0.g = v1.g = gParticleSysLitColor.g * color.g + light.g;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A+4
	mulss	xmm0, DWORD PTR _color$[ebp+4]
	addss	xmm0, DWORD PTR _light$[ebp+4]
	movss	DWORD PTR tv560[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv560[ebp]
	movss	DWORD PTR [edx+92], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv560[ebp]
	movss	DWORD PTR [eax+40], xmm0

; 873  :         v2.g = v3.g = gParticleSysLitColor.g * color.g * .68f + light.g;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A+4
	mulss	xmm0, DWORD PTR _color$[ebp+4]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _light$[ebp+4]
	movss	DWORD PTR tv575[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv575[ebp]
	movss	DWORD PTR [ecx+196], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv575[ebp]
	movss	DWORD PTR [edx+144], xmm0

; 874  : 
; 875  :         v0.b = v1.b = gParticleSysLitColor.b * color.b + light.b;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A+8
	mulss	xmm0, DWORD PTR _color$[ebp+8]
	addss	xmm0, DWORD PTR _light$[ebp+8]
	movss	DWORD PTR tv589[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv589[ebp]
	movss	DWORD PTR [eax+96], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv589[ebp]
	movss	DWORD PTR [ecx+44], xmm0

; 876  :         v2.b = v3.b = gParticleSysLitColor.b * color.b * .68f + light.b;

	movss	xmm0, DWORD PTR ?gParticleSysLitColor@@3UTcolor@@A+8
	mulss	xmm0, DWORD PTR _color$[ebp+8]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	addss	xmm0, DWORD PTR _light$[ebp+8]
	movss	DWORD PTR tv604[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv604[ebp]
	movss	DWORD PTR [edx+200], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR tv604[ebp]
	movss	DWORD PTR [eax+148], xmm0

; 877  :         // }
; 878  : 
; 879  : 
; 880  :         if (TexHandle)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+236], 0
	je	$LN3@Run

; 881  :         {
; 882  :             v0.a = v1.a = v2.a = v3.a = alpha;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [edx+204], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [eax+152], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx+100], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [edx+48], xmm0

; 883  :             renderer->context.SelectTexture1(TexHandle); // COBRA - RED - Simple Texture

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+236]
	push	ecx
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 884  :             renderer->DrawSquare(&v0, &v1, &v2, &v3, CULL_ALLOW_ALL, (g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN18@Run
	mov	BYTE PTR tv646[ebp], 1
	jmp	SHORT $LN19@Run
$LN18@Run:
	mov	BYTE PTR tv646[ebp], 0
$LN19@Run:
	push	0
	movzx	edx, BYTE PTR tv646[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare
$LN3@Run:

; 885  :         }
; 886  : 
; 887  :         if (PPN->Animation[0])  // COBRA - RED - Frames Sequence

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _PPN$7[ebp]
	cmp	DWORD PTR [edx+ecx+5640], 0
	je	$LN2@Run

; 888  :         {
; 889  :             renderer->context.SelectTexture1(PPN->Animation[0]->Run(owner->FrameNr[0],
; 890  :                                              owner->LastTimeRest[0], owner->elapsedTime, owner->pos, alpha)); // Selects It

	lea	eax, DWORD PTR _alpha$[ebp]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _owner$[ebp]
	lea	ecx, DWORD PTR [eax+edx+32]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _owner$[ebp]
	lea	ecx, DWORD PTR [eax+edx+40]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _PPN$7[ebp]
	mov	ecx, DWORD PTR [eax+edx+5640]
	call	?Run@ParticleAnimationNode@@QAEHAAHAAMMAAUTpoint@@1@Z ; ParticleAnimationNode::Run
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 891  :             v0.a = v1.a = v2.a = v3.a = alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx+204], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [edx+152], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [eax+100], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx+48], xmm0

; 892  :             renderer->DrawSquare(&v0, &v1, &v2, &v3, CULL_ALLOW_ALL, (g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN20@Run
	mov	BYTE PTR tv716[ebp], 1
	jmp	SHORT $LN21@Run
$LN20@Run:
	mov	BYTE PTR tv716[ebp], 0
$LN21@Run:
	push	0
	movzx	edx, BYTE PTR tv716[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare
$LN2@Run:

; 893  :         }
; 894  : 
; 895  :         if (PPN->Animation[1])  // COBRA - RED - Frames Sequence

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _PPN$7[ebp]
	cmp	DWORD PTR [edx+ecx+5640], 0
	je	$LN1@Run

; 896  :         {
; 897  :             renderer->context.SelectTexture1(PPN->Animation[1]->Run(owner->FrameNr[1],
; 898  :                                              owner->LastTimeRest[1], owner->elapsedTime, owner->pos, alpha)); // Selects It

	lea	eax, DWORD PTR _alpha$[ebp]
	push	eax
	mov	ecx, DWORD PTR _owner$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	movss	DWORD PTR [esp], xmm0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _owner$[ebp]
	lea	ecx, DWORD PTR [eax+edx+32]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _owner$[ebp]
	lea	ecx, DWORD PTR [eax+edx+40]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _PPN$7[ebp]
	mov	ecx, DWORD PTR [eax+edx+5640]
	call	?Run@ParticleAnimationNode@@QAEHAAHAAMMAAUTpoint@@1@Z ; ParticleAnimationNode::Run
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 899  :             v0.a = v1.a = v2.a = v3.a = alpha;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx+204], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [edx+152], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [eax+100], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx+48], xmm0

; 900  :             renderer->DrawSquare(&v0, &v1, &v2, &v3, CULL_ALLOW_ALL, (g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN22@Run
	mov	BYTE PTR tv786[ebp], 1
	jmp	SHORT $LN23@Run
$LN22@Run:
	mov	BYTE PTR tv786[ebp], 0
$LN23@Run:
	push	0
	movzx	edx, BYTE PTR tv786[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 184				; 000000b8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare
$LN1@Run:

; 901  :         }
; 902  :     }
; 903  : 
; 904  :     //STOP_PROFILE("PS DRAW");
; 905  : 
; 906  :     return Alive;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [ecx+8]
$LN10@Run:

; 907  : 
; 908  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartPoly@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartPoly::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv297 = -28						; size = 4
_ppn$ = -24						; size = 4
_pt$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
??0SubPartPoly@@QAE@PAVParticleNode@@@Z PROC		; SubPartPoly::SubPartPoly
; _this$ = ecx

; 698  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SubPartPoly@@QAE@PAVParticleNode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@XZ			; SubPart::SubPart
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPartPoly@@6B@

; 699  :     ParticleParamNode *ppn = owner->ppn;

	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _ppn$[ebp], edx

; 700  : 
; 701  : 
; 702  :     // Setup the Size Cx
; 703  :     SizeRandom = 1.0f + PRANDFloatPos() * ppn->SizeRandom;

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv297[ebp]
	movss	xmm0, DWORD PTR tv297[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mulss	xmm0, DWORD PTR [eax+760]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+240], xmm0

; 704  : 
; 705  :     // initialize variables
; 706  :     next = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 707  :     AlphaStage = ColorStage = SizeStage = LightStage = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 708  :     // Link here the Texture and get its U/V Coord
; 709  : 
; 710  :     ParticleTextureNode *pt = ppn->Texture;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+5620]
	mov	DWORD PTR _pt$[ebp], edx

; 711  : 
; 712  :     // check if depending on group texture
; 713  :     if (ppn->GroupFlags & GRP_TEXTURE)

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	and	ecx, 1
	je	SHORT $LN2@SubPartPol

; 714  :     {
; 715  :         // if depending from a group, ask for a random texture node
; 716  :         pt = (ParticleTextureNode*)(((ParticleGroupNode*)(ppn->Texture))->GetRandomArgument());

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [edx+5620]
	call	?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ ; ParticleGroupNode::GetRandomArgument
	mov	DWORD PTR _pt$[ebp], eax
$LN2@SubPartPol:

; 717  :         // Security check
; 718  :     }
; 719  : 
; 720  :     if (pt)

	cmp	DWORD PTR _pt$[ebp], 0
	je	$LN1@SubPartPol

; 721  :     {
; 722  :         // use the PPN texture node
; 723  :         TexHandle = pt->TexHandle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+236], edx

; 724  :         TexItem = pt->TexItem;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+244], edx

; 725  : 
; 726  :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 0, v0.u, v0.v);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	push	0
	mov	edx, DWORD PTR _pt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 727  :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 1, v1.u, v1.v);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	push	edx
	push	1
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 728  :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 2, v2.u, v2.v);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 160				; 000000a0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	push	2
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 729  :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 3, v3.u, v3.v);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 212				; 000000d4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	push	ecx
	push	3
	mov	edx, DWORD PTR _pt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 730  : 
; 731  :         Quad[0].tu = v0.u, Quad[0].tv = v0.v;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
	mov	DWORD PTR [edx+ecx+268], eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	mov	DWORD PTR [edx+ecx+272], eax

; 732  :         Quad[1].tu = v1.u, Quad[1].tv = v1.v;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	DWORD PTR [edx+ecx+268], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	DWORD PTR [edx+ecx+272], eax

; 733  :         Quad[2].tu = v2.u, Quad[2].tv = v2.v;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+156]
	mov	DWORD PTR [edx+ecx+268], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+160]
	mov	DWORD PTR [edx+ecx+272], eax

; 734  :         Quad[3].tu = v3.u, Quad[3].tv = v3.v;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+208]
	mov	DWORD PTR [edx+ecx+268], eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+212]
	mov	DWORD PTR [edx+ecx+272], eax
$LN1@SubPartPol:

; 735  : 
; 736  :     }
; 737  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0SubPartPoly@@QAE@PAVParticleNode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SubPart@@UAE@XZ			; SubPart::~SubPart
__ehhandler$??0SubPartPoly@@QAE@PAVParticleNode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SubPartPoly@@QAE@PAVParticleNode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SubPartPoly@@QAE@PAVParticleNode@@@Z ENDP		; SubPartPoly::SubPartPoly
; Function compile flags: /Odtp
;	COMDAT ??_GSubPartMovementOrientation@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPartMovementOrientation@@UAEPAXI@Z PROC		; SubPartMovementOrientation::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPartMovementOrientation@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPartMovementOrientation@@UAEPAXI@Z ENDP		; SubPartMovementOrientation::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1SubPartMovementOrientation@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SubPartMovementOrientation@@UAE@XZ PROC		; SubPartMovementOrientation::~SubPartMovementOrientation, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	esp, ebp
	pop	ebp
	ret	0
??1SubPartMovementOrientation@@UAE@XZ ENDP		; SubPartMovementOrientation::~SubPartMovementOrientation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv208 = -48						; size = 8
_y$ = -40						; size = 4
_r$ = -36						; size = 4
_p$ = -32						; size = 4
_costha$ = -28						; size = 4
_cosphi$ = -24						; size = 4
_sintha$ = -20						; size = 4
_sinpsi$ = -16						; size = 4
_sinphi$ = -12						; size = 4
_cospsi$ = -8						; size = 4
_this$ = -4						; size = 4
_renderer$ = 8						; size = 4
_owner$ = 12						; size = 4
?Run@SubPartMovementOrientation@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z PROC ; SubPartMovementOrientation::Run
; _this$ = ecx

; 596  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	DWORD PTR _this$[ebp], ecx

; 597  :     owner->rotation = &rotation;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR ?rotation@ParticleNode@@2PAUTrotation@@A, eax ; ParticleNode::rotation

; 598  : 
; 599  :     float costha, sintha, cosphi, sinphi, cospsi, sinpsi;
; 600  :     float p, r, y;
; 601  : 
; 602  :     y = (float)atan2(owner->vel.y, owner->vel.x);

	mov	ecx, DWORD PTR _owner$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+72]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _owner$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+76]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _y$[ebp]

; 603  :     r = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _r$[ebp], xmm0

; 604  :     p = (float)atan2(sqrt(owner->vel.x * owner->vel.x + owner->vel.y * owner->vel.y), owner->vel.z) - 90 * DTR;

	mov	eax, DWORD PTR _owner$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+80]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _owner$[ebp]
	mov	edx, DWORD PTR _owner$[ebp]
	movss	xmm0, DWORD PTR [ecx+72]
	mulss	xmm0, DWORD PTR [edx+72]
	mov	eax, DWORD PTR _owner$[ebp]
	mov	ecx, DWORD PTR _owner$[ebp]
	movss	xmm1, DWORD PTR [eax+76]
	mulss	xmm1, DWORD PTR [ecx+76]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, -4					; fffffffcH
	fstp	QWORD PTR [esp]
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	QWORD PTR tv208[ebp]
	movsd	xmm0, QWORD PTR tv208[ebp]
	cvtsd2ss xmm0, xmm0
	subss	xmm0, DWORD PTR __real@3fc90fd9
	movss	DWORD PTR _p$[ebp], xmm0

; 605  : 
; 606  :     costha = cosf(p);

	push	ecx
	movss	xmm0, DWORD PTR _p$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _costha$[ebp]

; 607  :     sintha = sinf(p);

	push	ecx
	movss	xmm0, DWORD PTR _p$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _sintha$[ebp]

; 608  :     cosphi = cosf(r);

	push	ecx
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _cosphi$[ebp]

; 609  :     sinphi = sinf(r);

	push	ecx
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _sinphi$[ebp]

; 610  :     cospsi = cosf(y);

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	fstp	DWORD PTR _cospsi$[ebp]

; 611  :     sinpsi = sinf(y);

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	fstp	DWORD PTR _sinpsi$[ebp]

; 612  : 
; 613  :     rotation.M11 = cospsi * costha;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+12], xmm0

; 614  :     rotation.M21 = sinpsi * costha;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+24], xmm0

; 615  :     rotation.M31 = -sintha;

	movss	xmm0, DWORD PTR _sintha$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+36], xmm0

; 616  : 
; 617  :     rotation.M12 = -sinpsi * cosphi + cospsi * sintha * sinphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+16], xmm0

; 618  :     rotation.M22 = cospsi * cosphi + sinpsi * sintha * sinphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+28], xmm0

; 619  :     rotation.M32 = costha * sinphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+40], xmm0

; 620  : 
; 621  :     rotation.M13 = sinpsi * sinphi + cospsi * sintha * cosphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 622  :     rotation.M23 = -cospsi * sinphi + sinpsi * sintha * cosphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+32], xmm0

; 623  :     rotation.M33 = costha * cosphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+44], xmm0

; 624  : 
; 625  :     return true;

	mov	al, 1

; 626  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Run@SubPartMovementOrientation@@UAE_NPAVRenderOTW@@PAVParticleNode@@@Z ENDP ; SubPartMovementOrientation::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??0SubPartMovementOrientation@@QAE@PAVParticleNode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
??0SubPartMovementOrientation@@QAE@PAVParticleNode@@@Z PROC ; SubPartMovementOrientation::SubPartMovementOrientation, COMDAT
; _this$ = ecx

; 507  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SubPart@@QAE@PAVParticleNode@@@Z	; SubPart::SubPart
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7SubPartMovementOrientation@@6B@

; 508  :         rotation = IMatrix;

	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 12					; 0000000cH
	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	rep movsd

; 509  :     };

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0SubPartMovementOrientation@@QAE@PAVParticleNode@@@Z ENDP ; SubPartMovementOrientation::SubPartMovementOrientation
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSubPart@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSubPart@@UAEPAXI@Z PROC				; SubPart::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SubPart@@UAE@XZ			; SubPart::~SubPart
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSubPart@@UAEPAXI@Z ENDP				; SubPart::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z PROC	; SubPart::IsRunning, COMDAT
; _this$ = ecx

; 496  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  :         return 0;

	xor	eax, eax

; 498  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsRunning@SubPart@@UAEHPAVParticleNode@@@Z ENDP	; SubPart::IsRunning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??1SubPart@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SubPart@@UAE@XZ PROC					; SubPart::~SubPart, COMDAT
; _this$ = ecx

; 491  :     virtual ~SubPart() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPart@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1SubPart@@UAE@XZ ENDP					; SubPart::~SubPart
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??0SubPart@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SubPart@@QAE@XZ PROC					; SubPart::SubPart, COMDAT
; _this$ = ecx

; 486  :     SubPart()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPart@@6B@

; 487  :     {
; 488  :         next = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 489  :         Alive = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 1

; 490  :     };

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SubPart@@QAE@XZ ENDP					; SubPart::SubPart
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??0SubPart@@QAE@PAVParticleNode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_owner$ = 8						; size = 4
??0SubPart@@QAE@PAVParticleNode@@@Z PROC		; SubPart::SubPart, COMDAT
; _this$ = ecx

; 481  :     SubPart(ParticleNode *owner)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SubPart@@6B@

; 482  :     {
; 483  :         next = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 484  :         Alive = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 1

; 485  :     };

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0SubPart@@QAE@PAVParticleNode@@@Z ENDP		; SubPart::SubPart
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__EpsIRotation@@YAXXZ
text$yc	SEGMENT
??__EpsIRotation@@YAXXZ PROC				; `dynamic initializer for 'psIRotation'', COMDAT

; 468  : Trotation psIRotation = IMatrix;

	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	mov	edi, OFFSET ?psIRotation@@3UTrotation@@A ; psIRotation
	rep movsd
	pop	edi
	pop	esi
	pop	ebp
	ret	0
??__EpsIRotation@@YAXXZ ENDP				; `dynamic initializer for 'psIRotation''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GParticleNode@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GParticleNode@@QAEPAXI@Z PROC			; ParticleNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParticleNode@@QAE@XZ			; ParticleNode::~ParticleNode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParticleNode@@QAEPAXI@Z ENDP			; ParticleNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -24						; size = 4
_elapsed$ = -20						; size = 4
_retVal$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_LastStage$ = 12					; size = 4
_Count$ = 16						; size = 4
_input$ = 20						; size = 4
?EvalTimedRGB@ParticleNode@@QAE?AUpsRGB@@AAHHPAUtimedRGB@@@Z PROC ; ParticleNode::EvalTimedRGB
; _this$ = ecx

; 1406 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1407 :     // Get the 1st value if just one stage
; 1408 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN4@EvalTimedR
	mov	eax, 32					; 00000020H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN4@EvalTimedR:

; 1409 : 
; 1410 :     // if past the end of stages, return last stage value
; 1411 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN3@EvalTimedR
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN3@EvalTimedR:

; 1412 : 
; 1413 :     // if Life past the Stage Time update to the next Stage
; 1414 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jbe	SHORT $LN2@EvalTimedR
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@EvalTimedR:

; 1415 : 
; 1416 :     // again the check for the end of stages, return last stage value
; 1417 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN1@EvalTimedR
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN1@EvalTimedR:

; 1418 : 
; 1419 :     psRGB retVal;
; 1420 :     /*retVal.r=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.r, input[LastStage+1].value.r);
; 1421 :     retVal.g=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.g, input[LastStage+1].value.g);
; 1422 :     retVal.b=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.b, input[LastStage+1].value.b);*/
; 1423 : 
; 1424 :     float elapsed = life - input[LastStage].time;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	subss	xmm0, DWORD PTR [edx+eax+4]
	movss	DWORD PTR _elapsed$[ebp], xmm0

; 1425 :     retVal.r = elapsed * input[LastStage].K.r + input[LastStage].value.r;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [edx+ecx+20]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR _retVal$[ebp], xmm0

; 1426 :     retVal.g = elapsed * input[LastStage].K.g + input[LastStage].value.g;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [edx+ecx+24]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+12]
	movss	DWORD PTR _retVal$[ebp+4], xmm0

; 1427 :     retVal.b = elapsed * input[LastStage].K.b + input[LastStage].value.b;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [edx+ecx+28]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+16]
	movss	DWORD PTR _retVal$[ebp+8], xmm0

; 1428 :     return (retVal);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _retVal$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _retVal$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _retVal$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@EvalTimedR:

; 1429 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EvalTimedRGB@ParticleNode@@QAE?AUpsRGB@@AAHHPAUtimedRGB@@@Z ENDP ; ParticleNode::EvalTimedRGB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -24						; size = 4
_retVal$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_LastStage$ = 12					; size = 4
_Count$ = 16						; size = 4
_input$ = 20						; size = 4
?EvalTimedRGBA@ParticleNode@@QAE?AUpsRGBA@@AAHHPAUtimedRGBA@@@Z PROC ; ParticleNode::EvalTimedRGBA
; _this$ = ecx

; 1383 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1384 :     // Get the 1st value if just one stage
; 1385 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN4@EvalTimedR
	mov	eax, 40					; 00000028H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN4@EvalTimedR:

; 1386 : 
; 1387 :     // if past the end of stages, return last stage value
; 1388 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN3@EvalTimedR
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN3@EvalTimedR:

; 1389 : 
; 1390 :     // if Life past the Stage Time update to the next Stage
; 1391 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	comiss	xmm0, DWORD PTR [edx+eax+4]
	jbe	SHORT $LN2@EvalTimedR
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@EvalTimedR:

; 1392 : 
; 1393 :     // again the check for the end of stages, return last stage value
; 1394 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN1@EvalTimedR
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@EvalTimedR
$LN1@EvalTimedR:

; 1395 : 
; 1396 :     psRGBA retVal;
; 1397 :     retVal.r = RESCALE(life, input[LastStage].time, input[LastStage + 1].time, input[LastStage].value.r, input[LastStage + 1].value.r);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+28]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm0, DWORD PTR [edx+ecx+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+8]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [edx+ecx+8]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [edx+ecx+4]
	divss	xmm0, xmm1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR _retVal$[ebp], xmm0

; 1398 :     retVal.g = RESCALE(life, input[LastStage].time, input[LastStage + 1].time, input[LastStage].value.g, input[LastStage + 1].value.g);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	subss	xmm0, DWORD PTR [eax+edx+4]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+12]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [eax+edx+12]
	mulss	xmm0, xmm1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+4]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [eax+edx+4]
	divss	xmm0, xmm1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, 40					; 00000028H
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+12]
	movss	DWORD PTR _retVal$[ebp+4], xmm0

; 1399 :     retVal.b = RESCALE(life, input[LastStage].time, input[LastStage + 1].time, input[LastStage].value.b, input[LastStage + 1].value.b);

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	subss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [ecx+eax+16]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [ecx+eax+16]
	mulss	xmm0, xmm1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [ecx+eax+4]
	divss	xmm0, xmm1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+16]
	movss	DWORD PTR _retVal$[ebp+8], xmm0

; 1400 :     retVal.a = RESCALE(life, input[LastStage].time, input[LastStage + 1].time, input[LastStage].value.a, input[LastStage + 1].value.a);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+28]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm0, DWORD PTR [edx+ecx+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+20]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [edx+ecx+20]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	subss	xmm1, DWORD PTR [edx+ecx+4]
	divss	xmm0, xmm1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 40					; 00000028H
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+20]
	movss	DWORD PTR _retVal$[ebp+12], xmm0

; 1401 : 
; 1402 :     return (retVal);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _retVal$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _retVal$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _retVal$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _retVal$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@EvalTimedR:

; 1403 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EvalTimedRGBA@ParticleNode@@QAE?AUpsRGBA@@AAHHPAUtimedRGBA@@@Z ENDP ; ParticleNode::EvalTimedRGBA
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv178 = -20						; size = 4
tv164 = -16						; size = 4
tv151 = -12						; size = 4
tv144 = -8						; size = 4
_this$ = -4						; size = 4
_LastStage$ = 8						; size = 4
_Count$ = 12						; size = 4
_input$ = 16						; size = 4
?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z PROC ; ParticleNode::EvalTimedFloat
; _this$ = ecx

; 1364 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 1365 :     // Get the 1st value if just one stage
; 1366 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN4@EvalTimedF
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv144[ebp], xmm0
	fld	DWORD PTR tv144[ebp]
	jmp	$LN5@EvalTimedF
$LN4@EvalTimedF:

; 1367 : 
; 1368 :     // if past the end of stages, return last stage value
; 1369 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [eax], edx
	jl	SHORT $LN3@EvalTimedF
	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR tv151[ebp], xmm0
	fld	DWORD PTR tv151[ebp]
	jmp	$LN5@EvalTimedF
$LN3@EvalTimedF:

; 1370 : 
; 1371 :     // if Life past the Stage Time update to the next Stage
; 1372 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+28]
	comiss	xmm0, DWORD PTR [eax+ecx+4]
	jbe	SHORT $LN2@EvalTimedF
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [eax], edx
$LN2@EvalTimedF:

; 1373 : 
; 1374 :     // again the check for the end of stages, return last stage value
; 1375 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [edx], ecx
	jl	SHORT $LN1@EvalTimedF
	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv164[ebp], xmm0
	fld	DWORD PTR tv164[ebp]
	jmp	SHORT $LN5@EvalTimedF
$LN1@EvalTimedF:

; 1376 : 
; 1377 :     // return the result
; 1378 :     return (life - input[LastStage].time) * input[LastStage].K + input[LastStage].value;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	subss	xmm0, DWORD PTR [edx+eax+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	mulss	xmm0, DWORD PTR [edx+ecx+12]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR tv178[ebp], xmm0
	fld	DWORD PTR tv178[ebp]
$LN5@EvalTimedF:

; 1379 :     //return ( RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value, input[LastStage+1].value));
; 1380 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ENDP ; ParticleNode::EvalTimedFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv291 = -56						; size = 4
tv289 = -52						; size = 4
tv299 = -48						; size = 4
_RelValue$ = -44					; size = 4
tv279 = -40						; size = 4
tv297 = -36						; size = 4
tv271 = -32						; size = 4
tv249 = -28						; size = 4
tv247 = -24						; size = 4
tv295 = -20						; size = 4
tv202 = -16						; size = 4
_Idx$ = -12						; size = 4
_Time$ = -8						; size = 4
_this$ = -4						; size = 4
_LastStage$ = 8						; size = 4
_Count$ = 12						; size = 4
_input$ = 16						; size = 4
?EvalTimedLinLogFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z PROC ; ParticleNode::EvalTimedLinLogFloat
; _this$ = ecx

; 1328 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1329 :     // Get the 1st value if just one stage
; 1330 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN6@EvalTimedL
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv202[ebp], xmm0
	fld	DWORD PTR tv202[ebp]
	jmp	$LN7@EvalTimedL
$LN6@EvalTimedL:

; 1331 : 
; 1332 :     // if past the end of stages, return last stage value
; 1333 :     if (LastStage >= Count - 1) return fabs(input[Count - 1].value);

	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [eax], edx
	jl	SHORT $LN5@EvalTimedL
	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	jmp	$LN7@EvalTimedL
$LN5@EvalTimedL:

; 1334 : 
; 1335 :     // if Life past the Stage Time update to the next Stage
; 1336 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+28]
	comiss	xmm0, DWORD PTR [eax+ecx+4]
	jbe	SHORT $LN4@EvalTimedL
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [eax], edx
$LN4@EvalTimedL:

; 1337 : 
; 1338 :     // again the check for the end of stages, return last stage value
; 1339 :     if (LastStage >= Count - 1) return fabs(input[Count - 1].value);

	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [edx], ecx
	jl	SHORT $LN3@EvalTimedL
	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	jmp	$LN7@EvalTimedL
$LN3@EvalTimedL:

; 1340 : 
; 1341 :     // return the result
; 1342 :     if (input[LastStage + 1].value >= 0) return (life - input[LastStage].time) * input[LastStage].K + fabs(input[LastStage].value);

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN2@EvalTimedL
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	subss	xmm0, DWORD PTR [edx+eax+4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	mulss	xmm0, DWORD PTR [edx+ecx+12]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv295[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv247[ebp]
	movss	xmm0, DWORD PTR tv295[ebp]
	addss	xmm0, DWORD PTR tv247[ebp]
	movss	DWORD PTR tv249[ebp], xmm0
	fld	DWORD PTR tv249[ebp]
	jmp	$LN7@EvalTimedL
$LN2@EvalTimedL:

; 1343 : 
; 1344 :     //return ( RESCALE(life, input[LastStage].time, input[LastStage+1].time, fabs(input[LastStage].value), fabs(input[LastStage+1].value)));
; 1345 : 
; 1346 :     // get the time difference
; 1347 :     float Time = (input[LastStage + 1].time - input[LastStage].time);

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	edx, DWORD PTR _input$[ebp]
	mov	esi, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx+4]
	subss	xmm0, DWORD PTR [esi+eax+4]
	movss	DWORD PTR _Time$[ebp], xmm0

; 1348 :     // Calculate the Time Position btw 1 and 0
; 1349 :     Time = (life - input[LastStage].time) / Time;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+28]
	subss	xmm0, DWORD PTR [eax+ecx+4]
	divss	xmm0, DWORD PTR _Time$[ebp]
	movss	DWORD PTR _Time$[ebp], xmm0

; 1350 :     // scale to 100 to get a Log10 Array index
; 1351 :     int   Idx = (int)(Time * LOG10_ARRAY_ITEMS);

	movss	xmm0, DWORD PTR _Time$[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	cvttss2si ecx, xmm0
	mov	DWORD PTR _Idx$[ebp], ecx

; 1352 : 
; 1353 :     // limit check
; 1354 :     if (Idx >= LOG10_ARRAY_ITEMS) Idx = LOG10_ARRAY_ITEMS - 1;

	cmp	DWORD PTR _Idx$[ebp], 500		; 000001f4H
	jl	SHORT $LN1@EvalTimedL
	mov	DWORD PTR _Idx$[ebp], 499		; 000001f3H
$LN1@EvalTimedL:

; 1355 : 
; 1356 :     // get the Value difference btw In and Out
; 1357 :     float RelValue = fabs(input[LastStage].value) - fabs(input[LastStage + 1].value);

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv271[ebp]
	movss	xmm0, DWORD PTR tv271[ebp]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv297[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv279[ebp]
	movss	xmm0, DWORD PTR tv297[ebp]
	subss	xmm0, DWORD PTR tv279[ebp]
	movss	DWORD PTR _RelValue$[ebp], xmm0

; 1358 :     // return the value
; 1359 :     return RelValue * DrawableParticleSys::Log10Array[Idx] + fabs(input[LastStage + 1].value);

	mov	edx, DWORD PTR _Idx$[ebp]
	movss	xmm0, DWORD PTR _RelValue$[ebp]
	mulss	xmm0, DWORD PTR ?Log10Array@DrawableParticleSys@@2PAMA[edx*4]
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv299[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv289[ebp]
	movss	xmm0, DWORD PTR tv299[ebp]
	addss	xmm0, DWORD PTR tv289[ebp]
	movss	DWORD PTR tv291[ebp], xmm0
	fld	DWORD PTR tv291[ebp]
$LN7@EvalTimedL:

; 1360 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?EvalTimedLinLogFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ENDP ; ParticleNode::EvalTimedLinLogFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv533 = -140						; size = 4
tv524 = -136						; size = 4
$T2 = -132						; size = 4
tv257 = -128						; size = 4
$T3 = -124						; size = 4
$T4 = -120						; size = 4
$T5 = -116						; size = 4
$T6 = -112						; size = 4
$T7 = -108						; size = 4
tv326 = -104						; size = 4
tv277 = -100						; size = 4
_sub$8 = -96						; size = 4
tv269 = -92						; size = 4
$T9 = -88						; size = 4
_sub$10 = -84						; size = 4
tv251 = -80						; size = 4
$T11 = -76						; size = 4
_sub$12 = -72						; size = 4
tv230 = -68						; size = 4
$T13 = -64						; size = 4
_sub$14 = -60						; size = 4
tv212 = -56						; size = 4
$T15 = -52						; size = 4
_sub$16 = -48						; size = 4
tv194 = -44						; size = 4
$T17 = -40						; size = 4
_sub$18 = -36						; size = 4
tv176 = -32						; size = 4
$T19 = -28						; size = 4
_v$20 = -24						; size = 4
_v$21 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_Pos$ = 12						; size = 4
_Vel$ = 16						; size = 4
_Aim$ = 20						; size = 4
_fRotationRate$ = 24					; size = 4
?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z PROC		; ParticleNode::Init
; _this$ = ecx

; 1221 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1222 :     lastTime = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 1223 :     firstSubPart = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0

; 1224 : 
; 1225 :     ppn = PPN[ID];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	edx, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [eax+12], ecx

; 1226 : 
; 1227 :     pos = *Pos;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _Pos$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 1228 : 
; 1229 :     if (Vel)

	cmp	DWORD PTR _Vel$[ebp], 0
	je	SHORT $LN12@Init

; 1230 :     {
; 1231 :         float v = ppn->velInherit;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movss	xmm0, DWORD PTR [edx+1768]
	movss	DWORD PTR _v$21[ebp], xmm0

; 1232 :         vel.x = Vel->x * v;

	mov	eax, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _v$21[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 1233 :         vel.y = Vel->y * v;

	mov	edx, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR _v$21[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 1234 :         vel.z = Vel->z * v;

	mov	ecx, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, DWORD PTR _v$21[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+80], xmm0

; 1235 :     }
; 1236 :     else

	jmp	SHORT $LN11@Init
$LN12@Init:

; 1237 :         vel.x = vel.y = vel.z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+80], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+76], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+72], xmm0
$LN11@Init:

; 1238 : 
; 1239 :     if (Aim)

	cmp	DWORD PTR _Aim$[ebp], 0
	je	$LN10@Init

; 1240 :     {
; 1241 :         float v;
; 1242 : 
; 1243 :         v = ppn->velInitial + ppn->velVariation * NRAND;

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [ecx+12]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [edi+1764]
	addss	xmm1, DWORD PTR [esi+1760]
	movss	DWORD PTR _v$20[ebp], xmm1

; 1244 :         vel.x += Aim->x * v;

	mov	edx, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _v$20[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+72]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 1245 :         vel.y += Aim->y * v;

	mov	edx, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR _v$20[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+76]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+76], xmm0

; 1246 :         vel.z += Aim->z * v;

	mov	edx, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR _v$20[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+80], xmm0
$LN10@Init:

; 1247 : 
; 1248 :     }
; 1249 : 
; 1250 :     // note, subparts are execute in the opposite order as they are attached
; 1251 :     if (ppn->drawType == PSDT_POLY)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	DWORD PTR [eax+108], 1
	jne	SHORT $LN9@Init

; 1252 :     {
; 1253 :         SubPart *sub = new SubPartPoly(this);

	push	360					; 00000168H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN15@Init
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0SubPartPoly@@QAE@PAVParticleNode@@@Z	; SubPartPoly::SubPartPoly
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN16@Init
$LN15@Init:
	mov	DWORD PTR tv176[ebp], 0
$LN16@Init:
	mov	edx, DWORD PTR tv176[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR _sub$18[ebp], eax

; 1254 :         sub->next = firstSubPart;

	mov	ecx, DWORD PTR _sub$18[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR [ecx+4], eax

; 1255 :         firstSubPart = sub;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _sub$18[ebp]
	mov	DWORD PTR [ecx+84], edx
$LN9@Init:

; 1256 :     }
; 1257 : 
; 1258 :     if (ppn->bspObj)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+5632], 0
	je	SHORT $LN8@Init

; 1259 :     {
; 1260 :         SubPart *sub = new SubPartBSP(this);

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T17[ebp], 0
	je	SHORT $LN17@Init
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T17[ebp]
	call	??0SubPartBSP@@QAE@PAVParticleNode@@@Z	; SubPartBSP::SubPartBSP
	mov	DWORD PTR tv194[ebp], eax
	jmp	SHORT $LN18@Init
$LN17@Init:
	mov	DWORD PTR tv194[ebp], 0
$LN18@Init:
	mov	eax, DWORD PTR tv194[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR _sub$16[ebp], ecx

; 1261 :         sub->next = firstSubPart;

	mov	edx, DWORD PTR _sub$16[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR [edx+4], ecx

; 1262 :         firstSubPart = sub;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _sub$16[ebp]
	mov	DWORD PTR [edx+84], eax
$LN8@Init:

; 1263 :     }
; 1264 : 
; 1265 :     if (ppn->sndId)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	DWORD PTR [edx+1420], 0
	je	SHORT $LN7@Init

; 1266 :     {
; 1267 :         SubPart *sub = new SubPartSound(this);

	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T15[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T15[ebp], 0
	je	SHORT $LN19@Init
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T15[ebp]
	call	??0SubPartSound@@QAE@PAVParticleNode@@@Z ; SubPartSound::SubPartSound
	mov	DWORD PTR tv212[ebp], eax
	jmp	SHORT $LN20@Init
$LN19@Init:
	mov	DWORD PTR tv212[ebp], 0
$LN20@Init:
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _sub$14[ebp], edx

; 1268 :         sub->next = firstSubPart;

	mov	eax, DWORD PTR _sub$14[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+4], edx

; 1269 :         firstSubPart = sub;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sub$14[ebp]
	mov	DWORD PTR [eax+84], ecx
$LN7@Init:

; 1270 :     }
; 1271 : 
; 1272 :     if (ppn->trailId >= 0)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	DWORD PTR [eax+1756], 0
	jl	SHORT $LN6@Init

; 1273 :     {
; 1274 :         SubPart *sub = new SubPartTrail(this);

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T13[ebp], 0
	je	SHORT $LN21@Init
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T13[ebp]
	call	??0SubPartTrail@@QAE@PAVParticleNode@@@Z ; SubPartTrail::SubPartTrail
	mov	DWORD PTR tv230[ebp], eax
	jmp	SHORT $LN22@Init
$LN21@Init:
	mov	DWORD PTR tv230[ebp], 0
$LN22@Init:
	mov	edx, DWORD PTR tv230[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _sub$12[ebp], eax

; 1275 :         sub->next = firstSubPart;

	mov	ecx, DWORD PTR _sub$12[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR [ecx+4], eax

; 1276 :         firstSubPart = sub;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _sub$12[ebp]
	mov	DWORD PTR [ecx+84], edx
$LN6@Init:

; 1277 :     }
; 1278 : 
; 1279 :     if (ppn->emitter[0].stages) // we have atleast 1 emitter

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, 368				; 00000170H
	imul	edx, 0
	cmp	DWORD PTR [ecx+edx+1976], 0
	je	SHORT $LN5@Init

; 1280 :     {
; 1281 :         SubPart *sub = new SubPartEmitter(this);

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T11[ebp], 0
	je	SHORT $LN23@Init
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T11[ebp]
	call	??0SubPartEmitter@@QAE@PAVParticleNode@@@Z ; SubPartEmitter::SubPartEmitter
	mov	DWORD PTR tv251[ebp], eax
	jmp	SHORT $LN24@Init
$LN23@Init:
	mov	DWORD PTR tv251[ebp], 0
$LN24@Init:
	mov	ecx, DWORD PTR tv251[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _sub$10[ebp], edx

; 1282 :         sub->next = firstSubPart;

	mov	eax, DWORD PTR _sub$10[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+4], edx

; 1283 :         firstSubPart = sub;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sub$10[ebp]
	mov	DWORD PTR [eax+84], ecx
$LN5@Init:

; 1284 :     }
; 1285 : 
; 1286 :     /*int l;
; 1287 :     for(l = 0; ppn->emitter[l].stages && l<PSMAX_EMITTERS; l++)
; 1288 :     {
; 1289 :      SubPart *sub = new SubPartEmitter(this);
; 1290 :      sub->next = firstSubPart;
; 1291 :      firstSubPart = sub;
; 1292 :     }*/
; 1293 : 
; 1294 : 
; 1295 :     switch (ppn->orientation)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+5636]
	mov	DWORD PTR tv257[ebp], ecx
	cmp	DWORD PTR tv257[ebp], 1
	je	SHORT $LN2@Init
	jmp	SHORT $LN1@Init
$LN2@Init:

; 1296 :     {
; 1297 :         case PSO_MOVEMENT:
; 1298 :         {
; 1299 :             SubPart *sub = new SubPartMovementOrientation(this);

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN25@Init
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0SubPartMovementOrientation@@QAE@PAVParticleNode@@@Z ; SubPartMovementOrientation::SubPartMovementOrientation
	mov	DWORD PTR tv269[ebp], eax
	jmp	SHORT $LN26@Init
$LN25@Init:
	mov	DWORD PTR tv269[ebp], 0
$LN26@Init:
	mov	eax, DWORD PTR tv269[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _sub$8[ebp], ecx

; 1300 :             sub->next = firstSubPart;

	mov	edx, DWORD PTR _sub$8[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR [edx+4], ecx

; 1301 :             firstSubPart = sub;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _sub$8[ebp]
	mov	DWORD PTR [edx+84], eax
$LN1@Init:

; 1302 :         }
; 1303 :         break;
; 1304 : 
; 1305 :         default :
; 1306 :             break;
; 1307 :     }
; 1308 : 
; 1309 :     lastTime = birthTime = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR tv277[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv277[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv277[ebp]
	mov	DWORD PTR [eax+20], ecx

; 1310 :     lifespan  = ppn->lifespan + ppn->lifespanvariation * NRAND;

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [eax+12]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [edi+92]
	addss	xmm1, DWORD PTR [esi+88]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+24], xmm1

; 1311 :     plife = life = 0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+28], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+48], xmm0

; 1312 :     FrameNr[0] = FrameNr[1] = 0;

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+40], 0
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax+40], 0

; 1313 :     LastTimeRest[0] = LastTimeRest[1] = 0;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+edx+32], xmm0
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+ecx+32], xmm0

; 1314 :     GravityStage = AccelStage = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], 0

; 1315 :     // No rotation at start
; 1316 :     Rotation = 0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+88], xmm0

; 1317 :     // Randomic rate btw Max and Min
; 1318 :     RotationRate = (PRANDFloatPos() * (ppn->RotationRateMax - ppn->RotationRateMin) + ppn->RotationRateMin);

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv524[ebp]
	movss	xmm0, DWORD PTR tv524[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR [ecx+5652]
	subss	xmm1, DWORD PTR [eax+5648]
	mulss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	addss	xmm0, DWORD PTR [edx+5648]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+92], xmm0

; 1319 :     // randomic Sign
; 1320 :     RotationRate *= (PRANDFloat() >= 0.0f) ? 1.0f : -1.0f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv533[ebp]
	movss	xmm0, DWORD PTR tv533[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN27@Init
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv326[ebp], xmm0
	jmp	SHORT $LN28@Init
$LN27@Init:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv326[ebp], xmm0
$LN28@Init:
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+92]
	mulss	xmm0, DWORD PTR tv326[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+92], xmm0

; 1321 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$0:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$1:
	mov	eax, DWORD PTR $T17[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$2:
	mov	eax, DWORD PTR $T15[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$3:
	mov	eax, DWORD PTR $T13[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$4:
	mov	eax, DWORD PTR $T11[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z$5:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z ENDP		; ParticleNode::Init
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sub$1 = -4						; size = 4
?IsDead@ParticleNode@@QAEHXZ PROC			; ParticleNode::IsDead
; _this$ = ecx

; 1447 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1448 :     if (life > 1.0 || life < 0.0)

	mov	eax, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [eax+28]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	ja	SHORT $LN4@IsDead
	mov	ecx, DWORD PTR _this$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+28]
	movsd	xmm1, QWORD PTR __real@0000000000000000
	comisd	xmm1, xmm0
	jbe	SHORT $LN5@IsDead
$LN4@IsDead:

; 1449 :     {
; 1450 :         SubPart *sub = firstSubPart;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR _sub$1[ebp], eax
$LN3@IsDead:

; 1451 : 
; 1452 :         while (sub)

	cmp	DWORD PTR _sub$1[ebp], 0
	je	SHORT $LN2@IsDead

; 1453 :         {
; 1454 :             if (sub->IsRunning(this))

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sub$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sub$1[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	test	eax, eax
	je	SHORT $LN1@IsDead

; 1455 :                 return 0;

	xor	eax, eax
	jmp	SHORT $LN6@IsDead
$LN1@IsDead:

; 1456 : 
; 1457 :             sub = sub->next;

	mov	eax, DWORD PTR _sub$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _sub$1[ebp], ecx

; 1458 :         }

	jmp	SHORT $LN3@IsDead
$LN2@IsDead:

; 1459 : 
; 1460 :         return 1;

	mov	eax, 1
	jmp	SHORT $LN6@IsDead
$LN5@IsDead:

; 1461 :     }
; 1462 : 
; 1463 :     return 0;

	xor	eax, eax
$LN6@IsDead:

; 1464 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsDead@ParticleNode@@QAEHXZ ENDP			; ParticleNode::IsDead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv379 = -92						; size = 8
tv369 = -84						; size = 8
tv348 = -76						; size = 4
$T1 = -72						; size = 4
_gravity$2 = -68					; size = 4
_accel$3 = -64						; size = 4
tv376 = -60						; size = 4
tv366 = -56						; size = 4
_Next$ = -52						; size = 4
_Last$ = -48						; size = 4
$T4 = -44						; size = 4
_GroundLevel$5 = -40					; size = 4
_age$ = -36						; size = 4
_Drag_x_Time$6 = -32					; size = 4
_curTime$ = -28						; size = 4
_d$7 = -24						; size = 4
_d$8 = -20						; size = 4
_fps$9 = -16						; size = 4
_Sub$ = -12						; size = 4
_fps$10 = -8						; size = 4
_this$ = -4						; size = 4
_renderer$ = 8						; size = 4
_LOD$ = 12						; size = 4
?Draw@ParticleNode@@QAEXPAVRenderOTW@@H@Z PROC		; ParticleNode::Draw
; _this$ = ecx

; 1467 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	DWORD PTR _this$[ebp], ecx

; 1468 :     if (lifespan <= 0) return;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+24]
	jb	SHORT $LN20@Draw
	jmp	$LN21@Draw
$LN20@Draw:

; 1469 : 
; 1470 :     // COUNT_PROFILE("PARTICLES");
; 1471 : 
; 1472 :     float age;
; 1473 :     DWORD curTime;
; 1474 : 
; 1475 :     curTime     = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR _curTime$[ebp], eax

; 1476 :     age         = (float)(curTime - birthTime) * .001f;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _curTime$[ebp]
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv366[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv366[ebp]
	mov	eax, DWORD PTR tv366[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv369[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv369[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR _age$[ebp], xmm0

; 1477 :     elapsedTime = (float)(curTime - lastTime) * .001f;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _curTime$[ebp]
	sub	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv376[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv376[ebp]
	mov	eax, DWORD PTR tv376[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv379[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv379[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR ?elapsedTime@ParticleNode@@2MA, xmm0

; 1478 :     life        = age / lifespan;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _age$[ebp]
	divss	xmm0, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+28], xmm0

; 1479 : 
; 1480 :     if (life > 1.0f && plife < 1.0f)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN19@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [ecx+48]
	jbe	SHORT $LN19@Draw

; 1481 :     {
; 1482 :         life = 1.0f; // just to make sure we do the last stages

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+28], xmm0

; 1483 :     }
; 1484 :     else // COBRA - RED - If returns before die, will not append new emitters or nodes

	jmp	SHORT $LN17@Draw
$LN19@Draw:

; 1485 :     {
; 1486 :         if (life > 1.0f) // waiting to die

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN17@Draw

; 1487 :             return;

	jmp	$LN21@Draw
$LN17@Draw:

; 1488 :     }
; 1489 : 
; 1490 :     // COBRA - RED - End
; 1491 :     if (elapsedTime)

	movss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN16@Draw

; 1492 :     {
; 1493 :         // we only need to run this if some time has elapsed
; 1494 :         float gravity, accel;
; 1495 :         lastTime = (int)curTime;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _curTime$[ebp]
	mov	DWORD PTR [ecx+20], edx

; 1496 : 
; 1497 :         gravity = EvalTimedFloat(GravityStage, ppn->gravityStages, ppn->gravity);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1096				; 00000448H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+1092]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
	fstp	DWORD PTR _gravity$2[ebp]

; 1498 :         accel = EvalTimedFloat(AccelStage, ppn->accelStages, ppn->accel);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1260				; 000004ecH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+1256]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EvalTimedFloat@ParticleNode@@QAEMAAHHPAUtimedFloat@@@Z ; ParticleNode::EvalTimedFloat
	fstp	DWORD PTR _accel$3[ebp]

; 1499 : 
; 1500 : 
; 1501 :         if (ppn->simpleDrag)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR [ecx+1780]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN15@Draw

; 1502 :         {
; 1503 :             float Drag_x_Time = ppn->simpleDrag * elapsedTime; // COBRA - RED - Cached same Value

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movss	xmm0, DWORD PTR [eax+1780]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	movss	DWORD PTR _Drag_x_Time$6[ebp], xmm0

; 1504 : 
; 1505 :             vel.x -= (vel.x - DrawableParticleSys::winddx) * Drag_x_Time;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+72]
	subss	xmm0, DWORD PTR ?winddx@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR _Drag_x_Time$6[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+72]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+72], xmm1

; 1506 :             vel.y -= (vel.y - DrawableParticleSys::winddy) * Drag_x_Time;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+76]
	subss	xmm0, DWORD PTR ?winddy@DrawableParticleSys@@2MA
	mulss	xmm0, DWORD PTR _Drag_x_Time$6[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+76], xmm1

; 1507 :             vel.z -= vel.z * Drag_x_Time;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+80]
	mulss	xmm0, DWORD PTR _Drag_x_Time$6[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+80]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+80], xmm1
$LN15@Draw:

; 1508 :             // Go to reach the wind speed
; 1509 :             //vel.x+=(DrawableParticleSys::winddx - vel.x)/10 * elapsedTime;
; 1510 :             //vel.y+=(DrawableParticleSys::winddy - vel.y)/10 * elapsedTime;
; 1511 : 
; 1512 :         }
; 1513 : 
; 1514 :         // update velocity values
; 1515 :         vel.z += (32 * elapsedTime) * gravity;

	movss	xmm0, DWORD PTR __real@42000000
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mulss	xmm0, DWORD PTR _gravity$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+80], xmm0

; 1516 : 
; 1517 :         if (accel)

	movss	xmm0, DWORD PTR _accel$3[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN12@Draw

; 1518 :         {
; 1519 :             float fps = (accel * elapsedTime);

	movss	xmm0, DWORD PTR _accel$3[ebp]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	movss	DWORD PTR _fps$10[ebp], xmm0

; 1520 :             float d = sqrt(vel.x * vel.x + vel.y * vel.y + vel.z * vel.z);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	mulss	xmm1, DWORD PTR [eax+76]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+80]
	mulss	xmm1, DWORD PTR [edx+80]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _d$8[ebp]

; 1521 :             fps = d + fps;

	movss	xmm0, DWORD PTR _d$8[ebp]
	addss	xmm0, DWORD PTR _fps$10[ebp]
	movss	DWORD PTR _fps$10[ebp], xmm0

; 1522 : 
; 1523 :             if (fps < 0)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _fps$10[ebp]
	jbe	SHORT $LN13@Draw

; 1524 :                 fps = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _fps$10[ebp], xmm0
$LN13@Draw:

; 1525 : 
; 1526 :             if (d)

	movss	xmm0, DWORD PTR _d$8[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN12@Draw

; 1527 :             {
; 1528 :                 vel.x = (vel.x / d) * fps;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	divss	xmm0, DWORD PTR _d$8[ebp]
	mulss	xmm0, DWORD PTR _fps$10[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 1529 :                 vel.y = (vel.y / d) * fps;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	divss	xmm0, DWORD PTR _d$8[ebp]
	mulss	xmm0, DWORD PTR _fps$10[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 1530 :                 vel.z = (vel.z / d) * fps;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+80]
	divss	xmm0, DWORD PTR _d$8[ebp]
	mulss	xmm0, DWORD PTR _fps$10[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+80], xmm0
$LN12@Draw:

; 1531 :             }
; 1532 :         }
; 1533 : 
; 1534 : 
; 1535 :         pos.x += vel.x * elapsedTime;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+60]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+60], xmm0

; 1536 :         pos.y += vel.y * elapsedTime;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+76]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+64], xmm0

; 1537 :         pos.z += vel.z * elapsedTime;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+80]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+68], xmm0

; 1538 : 
; 1539 :         float GroundLevel = DrawableParticleSys::groundLevel = OTWDriver.GetGroundLevel(pos.x, pos.y);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+64]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z ; OTWDriverClass::GetGroundLevel
	fstp	DWORD PTR ?groundLevel@DrawableParticleSys@@2MA ; DrawableParticleSys::groundLevel
	movss	xmm0, DWORD PTR ?groundLevel@DrawableParticleSys@@2MA
	movss	DWORD PTR _GroundLevel$5[ebp], xmm0

; 1540 : 
; 1541 :         if (pos.z >= GroundLevel)

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+68]
	comiss	xmm0, DWORD PTR _GroundLevel$5[ebp]
	jb	SHORT $LN10@Draw

; 1542 :         {
; 1543 :             pos.z = GroundLevel;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _GroundLevel$5[ebp]
	movss	DWORD PTR [eax+68], xmm0

; 1544 :             vel.z *= -ppn->bounce;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movss	xmm0, DWORD PTR [edx+5548]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+80], xmm0

; 1545 : 
; 1546 :             if (ppn->dieOnGround && lifespan > age) // this will make the particle die

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movss	xmm0, DWORD PTR [eax+5552]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN10@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+24]
	comiss	xmm0, DWORD PTR _age$[ebp]
	jbe	SHORT $LN10@Draw

; 1547 :             {
; 1548 :                 // will also run the emitters
; 1549 : 
; 1550 :                 lifespan = age;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _age$[ebp]
	movss	DWORD PTR [edx+24], xmm0
$LN10@Draw:

; 1551 :             }
; 1552 :         }
; 1553 : 
; 1554 : 
; 1555 :         if (pos.z == GroundLevel)

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+68]
	ucomiss	xmm0, DWORD PTR _GroundLevel$5[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	$LN7@Draw

; 1556 :         {
; 1557 :             float fps = (ppn->groundFriction * elapsedTime);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movss	xmm0, DWORD PTR [edx+1772]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	movss	DWORD PTR _fps$9[ebp], xmm0

; 1558 :             float d = sqrt(vel.x * vel.x + vel.y * vel.y + vel.z * vel.z);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	mulss	xmm1, DWORD PTR [eax+76]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+80]
	mulss	xmm1, DWORD PTR [edx+80]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _d$7[ebp]

; 1559 :             fps = d + fps;

	movss	xmm0, DWORD PTR _d$7[ebp]
	addss	xmm0, DWORD PTR _fps$9[ebp]
	movss	DWORD PTR _fps$9[ebp], xmm0

; 1560 : 
; 1561 :             if (fps < 0)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _fps$9[ebp]
	jbe	SHORT $LN8@Draw

; 1562 :                 fps = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _fps$9[ebp], xmm0
$LN8@Draw:

; 1563 : 
; 1564 :             if (d)

	movss	xmm0, DWORD PTR _d$7[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@Draw

; 1565 :             {
; 1566 :                 vel.x = (vel.x / d) * fps;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	divss	xmm0, DWORD PTR _d$7[ebp]
	mulss	xmm0, DWORD PTR _fps$9[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 1567 :                 vel.y = (vel.y / d) * fps;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	divss	xmm0, DWORD PTR _d$7[ebp]
	mulss	xmm0, DWORD PTR _fps$9[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+76], xmm0
$LN7@Draw:

; 1568 :                 //vel.z += (vel.z / d) * fps;
; 1569 :             }
; 1570 :         }
; 1571 : 
; 1572 :         // COBRA - RED - The rotation Stuff
; 1573 :         Rotation += RotationRate * elapsedTime;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+92]
	mulss	xmm0, DWORD PTR ?elapsedTime@ParticleNode@@2MA
	mov	edx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [edx+88]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+88], xmm0
$LN16@Draw:

; 1574 : 
; 1575 :         // end of the "Exec" section
; 1576 :     }
; 1577 : 
; 1578 : #ifdef DEBUG_PS_ID
; 1579 : 
; 1580 :     if (DrawableBSP::drawLabels/* && ppn->name[0]=='$'*/)
; 1581 :     {
; 1582 :         // Now compute the starting location for our label text
; 1583 :         ThreeDVertex labelPoint;
; 1584 :         float x, y;
; 1585 :         renderer->TransformPoint(&pos, &labelPoint);
; 1586 : 
; 1587 :         if (labelPoint.clipFlag == ON_SCREEN)
; 1588 :         {
; 1589 :             x = labelPoint.x - 32; // Centers text
; 1590 :             y = labelPoint.y - 12; // Place text above center of object
; 1591 :             renderer->SetColor(ppn->name[0] == '$' ?  0xff0000ff : 0xffff0000);
; 1592 :             renderer->SetFont(2);
; 1593 :             renderer->ScreenText(x, y, ppn->name);
; 1594 :         }
; 1595 :     }
; 1596 : 
; 1597 : #endif
; 1598 : 
; 1599 :     rotation = &psIRotation;

	mov	DWORD PTR ?rotation@ParticleNode@@2PAUTrotation@@A, OFFSET ?psIRotation@@3UTrotation@@A ; ParticleNode::rotation, psIRotation

; 1600 : 
; 1601 :     SubPart *Sub = firstSubPart, *Last = NULL, *Next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR _Sub$[ebp], edx
	mov	DWORD PTR _Last$[ebp], 0
$LN6@Draw:

; 1602 : 
; 1603 :     while (Sub)

	cmp	DWORD PTR _Sub$[ebp], 0
	je	SHORT $LN5@Draw

; 1604 :     {
; 1605 : 
; 1606 :         // get next item
; 1607 :         Next = Sub->next;

	mov	eax, DWORD PTR _Sub$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _Next$[ebp], ecx

; 1608 : 
; 1609 :         // Run the Sub part
; 1610 :         if (!Sub->Run(renderer, this))

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _renderer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Sub$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _Sub$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@Draw

; 1611 :         {
; 1612 :             // if it's dead remove it from list
; 1613 :             if (Last) Last->next = Next;

	cmp	DWORD PTR _Last$[ebp], 0
	je	SHORT $LN3@Draw
	mov	edx, DWORD PTR _Last$[ebp]
	mov	eax, DWORD PTR _Next$[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN2@Draw
$LN3@Draw:

; 1614 :             else firstSubPart = Next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Next$[ebp]
	mov	DWORD PTR [ecx+84], edx
$LN2@Draw:

; 1615 : 
; 1616 :             // and kill it
; 1617 :             delete Sub;

	mov	eax, DWORD PTR _Sub$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN23@Draw
	push	1
	mov	edx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR tv348[ebp], eax
	jmp	SHORT $LN24@Draw
$LN23@Draw:
	mov	DWORD PTR tv348[ebp], 0
$LN24@Draw:

; 1618 :         }
; 1619 :         else

	jmp	SHORT $LN1@Draw
$LN4@Draw:

; 1620 :         {
; 1621 :             Last = Sub;

	mov	eax, DWORD PTR _Sub$[ebp]
	mov	DWORD PTR _Last$[ebp], eax
$LN1@Draw:

; 1622 :         }
; 1623 : 
; 1624 :         Sub = Next;

	mov	ecx, DWORD PTR _Next$[ebp]
	mov	DWORD PTR _Sub$[ebp], ecx

; 1625 :     }

	jmp	$LN6@Draw
$LN5@Draw:

; 1626 : 
; 1627 :     plife = life;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+48], ecx
$LN21@Draw:

; 1628 : 
; 1629 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@ParticleNode@@QAEXPAVRenderOTW@@H@Z ENDP		; ParticleNode::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_next$2 = -36						; size = 4
tv83 = -32						; size = 4
$T3 = -28						; size = 4
_this$ = -24						; size = 4
$T4 = -20						; size = 4
_sub$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ParticleNode@@QAE@XZ PROC				; ParticleNode::~ParticleNode
; _this$ = ecx

; 1432 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ParticleNode@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParticleNode@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1433 :     SubPart *sub = firstSubPart;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR _sub$[ebp], edx
$LN2@ParticleNo:

; 1434 : 
; 1435 :     /* if(ppn->Frames){ // COBRA - RED - If sequence
; 1436 :      free ((void*)ppn->texture); // delete Frames List from memory
; 1437 :      }*/
; 1438 :     while (sub)

	cmp	DWORD PTR _sub$[ebp], 0
	je	SHORT $LN3@ParticleNo

; 1439 :     {
; 1440 :         SubPart *next = sub->next;

	mov	eax, DWORD PTR _sub$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _next$2[ebp], ecx

; 1441 :         delete sub;

	mov	edx, DWORD PTR _sub$[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T4[ebp], eax
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@ParticleNo
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T4[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN6@ParticleNo
$LN5@ParticleNo:
	mov	DWORD PTR tv83[ebp], 0
$LN6@ParticleNo:

; 1442 :         sub = next;

	mov	ecx, DWORD PTR _next$2[ebp]
	mov	DWORD PTR _sub$[ebp], ecx

; 1443 :     }

	jmp	SHORT $LN2@ParticleNo
$LN3@ParticleNo:

; 1444 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1ParticleNode@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??1ParticleNode@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ParticleNode@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ParticleNode@@QAE@XZ ENDP				; ParticleNode::~ParticleNode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_Pos$ = 12						; size = 4
_Vel$ = 16						; size = 4
_Aim$ = 20						; size = 4
_fRotationRate$ = 24					; size = 4
??0ParticleNode@@QAE@HPAUTpoint@@00M@Z PROC		; ParticleNode::ParticleNode
; _this$ = ecx

; 1215 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParticleNode@@6B@

; 1216 :     Init(ID, Pos, Vel, Aim, RotationRate);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+92]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Aim$[ebp]
	push	edx
	mov	eax, DWORD PTR _Vel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@ParticleNode@@QAEXHPAUTpoint@@00M@Z ; ParticleNode::Init

; 1217 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ParticleNode@@QAE@HPAUTpoint@@00M@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ParticleNode@@QAE@HPAUTpoint@@00M@Z ENDP		; ParticleNode::ParticleNode
; Function compile flags: /Odtp
;	COMDAT ??_GParticleParamNode@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GParticleParamNode@@QAEPAXI@Z PROC			; ParticleParamNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParticleParamNode@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParticleParamNode@@QAEPAXI@Z ENDP			; ParticleParamNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ParticleParamNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ParticleParamNode@@QAE@XZ PROC			; ParticleParamNode::~ParticleParamNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	esp, ebp
	pop	ebp
	ret	0
??1ParticleParamNode@@QAE@XZ ENDP			; ParticleParamNode::~ParticleParamNode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ParticleParamNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ParticleParamNode@@QAE@XZ PROC			; ParticleParamNode::ParticleParamNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParticleParamNode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ParticleParamNode@@QAE@XZ ENDP			; ParticleParamNode::ParticleParamNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??0ParticleGroupNode@@QAE@PAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
??0ParticleGroupNode@@QAE@PAD@Z PROC			; ParticleGroupNode::ParticleGroupNode, COMDAT
; _this$ = ecx

; 299  :     ParticleGroupNode(char *name)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 300  :     {
; 301  :         Items = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0

; 302  :         strcpy(Name, name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	_strcpy
	add	esp, 8

; 303  :         Next = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 304  :         Type = GRP_NONE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 305  :     };

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ParticleGroupNode@@QAE@PAD@Z ENDP			; ParticleGroupNode::ParticleGroupNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ
_TEXT	SEGMENT
tv86 = -20						; size = 8
tv79 = -12						; size = 4
_this$ = -8						; size = 4
tv82 = -4						; size = 4
?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ PROC	; ParticleGroupNode::GetRandomArgument, COMDAT
; _this$ = ecx

; 290  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 291  :         return ptr[(int)(PRANDFloatPos() * ((float)Items - 0.1f))];

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv79[ebp]
	movss	xmm0, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR tv82[ebp], ecx
	cvtsi2sd xmm1, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR tv82[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv86[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv86[ebp]
	subss	xmm1, DWORD PTR __real@3dcccccd
	mulss	xmm0, xmm1
	cvttss2si eax, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+76]

; 292  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ ENDP	; ParticleGroupNode::GetRandomArgument
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GParticleTextureNode@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GParticleTextureNode@@QAEPAXI@Z PROC			; ParticleTextureNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ParticleTextureNode@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GParticleTextureNode@@QAEPAXI@Z ENDP			; ParticleTextureNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ParticleTextureNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ParticleTextureNode@@QAE@XZ PROC			; ParticleTextureNode::~ParticleTextureNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	esp, ebp
	pop	ebp
	ret	0
??1ParticleTextureNode@@QAE@XZ ENDP			; ParticleTextureNode::~ParticleTextureNode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ParticleTextureNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ParticleTextureNode@@QAE@XZ PROC			; ParticleTextureNode::ParticleTextureNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParticleTextureNode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ParticleTextureNode@@QAE@XZ ENDP			; ParticleTextureNode::ParticleTextureNode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yd	SEGMENT
??__F?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'DrawableParticleSys::AnimationsList'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AnimationsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::AnimationsList
	call	??1AList@@QAE@XZ
	pop	ebp
	ret	0
??__F?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'DrawableParticleSys::AnimationsList''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__E?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yc	SEGMENT
??__E?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic initializer for 'DrawableParticleSys::AnimationsList'', COMDAT

; 236  : AList DrawableParticleSys::AnimationsList;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?AnimationsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::AnimationsList
	call	??0AList@@QAE@XZ			; AList::AList
	push	OFFSET ??__F?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; `dynamic atexit destructor for 'DrawableParticleSys::AnimationsList''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?AnimationsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic initializer for 'DrawableParticleSys::AnimationsList''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yd	SEGMENT
??__F?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'DrawableParticleSys::dpsList'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?dpsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::dpsList
	call	??1AList@@QAE@XZ
	pop	ebp
	ret	0
??__F?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'DrawableParticleSys::dpsList''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__E?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yc	SEGMENT
??__E?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic initializer for 'DrawableParticleSys::dpsList'', COMDAT

; 229  : AList DrawableParticleSys::dpsList;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?dpsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::dpsList
	call	??0AList@@QAE@XZ			; AList::AList
	push	OFFSET ??__F?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; `dynamic atexit destructor for 'DrawableParticleSys::dpsList''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?dpsList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic initializer for 'DrawableParticleSys::dpsList''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ
text$yd	SEGMENT
??__F?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'DrawableParticleSys::paramList'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	??1ProtectedAList@@QAE@XZ		; ProtectedAList::~ProtectedAList
	pop	ebp
	ret	0
??__F?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'DrawableParticleSys::paramList''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__E?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ
text$yc	SEGMENT
??__E?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ PROC ; `dynamic initializer for 'DrawableParticleSys::paramList'', COMDAT

; 228  : ProtectedAList DrawableParticleSys::paramList;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	??0ProtectedAList@@QAE@XZ		; ProtectedAList::ProtectedAList
	push	OFFSET ??__F?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ ; `dynamic atexit destructor for 'DrawableParticleSys::paramList''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?paramList@DrawableParticleSys@@0VProtectedAList@@A@@YAXXZ ENDP ; `dynamic initializer for 'DrawableParticleSys::paramList''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yd	SEGMENT
??__F?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'DrawableParticleSys::textureList'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	??1AList@@QAE@XZ
	pop	ebp
	ret	0
??__F?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'DrawableParticleSys::textureList''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__E?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ
text$yc	SEGMENT
??__E?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ PROC ; `dynamic initializer for 'DrawableParticleSys::textureList'', COMDAT

; 227  : AList DrawableParticleSys::textureList;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	??0AList@@QAE@XZ			; AList::AList
	push	OFFSET ??__F?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ ; `dynamic atexit destructor for 'DrawableParticleSys::textureList''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?textureList@DrawableParticleSys@@0VAList@@A@@YAXXZ ENDP ; `dynamic initializer for 'DrawableParticleSys::textureList''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__EPurgeAllTimeInc@@YAXXZ
text$yc	SEGMENT
tv67 = -4						; size = 4
??__EPurgeAllTimeInc@@YAXXZ PROC			; `dynamic initializer for 'PurgeAllTimeInc'', COMDAT

; 66   : static DWORD PurgeAllTimeInc = max(g_nPSPurgeInterval * 10, 600000);

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	eax, DWORD PTR ?g_nPSPurgeInterval@@3HA	; g_nPSPurgeInterval
	imul	eax, 10					; 0000000aH
	cmp	eax, 600000				; 000927c0H
	jle	SHORT $LN3@dynamic
	mov	ecx, DWORD PTR ?g_nPSPurgeInterval@@3HA	; g_nPSPurgeInterval
	imul	ecx, 10					; 0000000aH
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN4@dynamic
$LN3@dynamic:
	mov	DWORD PTR tv67[ebp], 600000		; 000927c0H
$LN4@dynamic:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _PurgeAllTimeInc, edx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EPurgeAllTimeInc@@YAXXZ ENDP			; `dynamic initializer for 'PurgeAllTimeInc''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ??__EPurgeTimeInc@@YAXXZ
text$yc	SEGMENT
??__EPurgeTimeInc@@YAXXZ PROC				; `dynamic initializer for 'PurgeTimeInc'', COMDAT

; 64   : static DWORD PurgeTimeInc = g_nPSPurgeInterval;

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?g_nPSPurgeInterval@@3HA	; g_nPSPurgeInterval
	mov	DWORD PTR _PurgeTimeInc, eax
	pop	ebp
	ret	0
??__EPurgeTimeInc@@YAXXZ ENDP				; `dynamic initializer for 'PurgeTimeInc''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\redmacros.h
;	COMDAT ?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z
_TEXT	SEGMENT
_V$ = -16						; size = 12
_Norm$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_S0$ = 12						; size = 4
_S1$ = 16						; size = 4
?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z PROC		; RED_Normal, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 50   : 	D3DXVECTOR3 V;

	lea	ecx, DWORD PTR _V$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 51   : 
; 52   : 	// * CALCULATE THE CROSS PRODUCT BTW S0 and S1
; 53   : 	V.x = S0.y * S1.z - S0.z * S1.y; 

	mov	eax, DWORD PTR _S0$[ebp]
	mov	ecx, DWORD PTR _S1$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _S0$[ebp]
	mov	eax, DWORD PTR _S1$[ebp]
	movss	xmm1, DWORD PTR [edx+8]
	mulss	xmm1, DWORD PTR [eax+4]
	subss	xmm0, xmm1
	movss	DWORD PTR _V$[ebp], xmm0

; 54   : 	V.y = S0.z * S1.x - S0.x * S1.z; 

	mov	ecx, DWORD PTR _S0$[ebp]
	mov	edx, DWORD PTR _S1$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, DWORD PTR [edx]
	mov	eax, DWORD PTR _S0$[ebp]
	mov	ecx, DWORD PTR _S1$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mulss	xmm1, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR _V$[ebp+4], xmm0

; 55   : 	V.z = S0.x * S1.y - S0.y * S1.x; 

	mov	edx, DWORD PTR _S0$[ebp]
	mov	eax, DWORD PTR _S1$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _S0$[ebp]
	mov	edx, DWORD PTR _S1$[ebp]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [edx]
	subss	xmm0, xmm1
	movss	DWORD PTR _V$[ebp+8], xmm0

; 56   : 
; 57   : 	// * THE NORMALIZED CROSS PRODUCT 
; 58   : 	float Norm= sqrt(V.x * V.x + V.y * V.y + V.z * V.z);

	movss	xmm0, DWORD PTR _V$[ebp]
	mulss	xmm0, DWORD PTR _V$[ebp]
	movss	xmm1, DWORD PTR _V$[ebp+4]
	mulss	xmm1, DWORD PTR _V$[ebp+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _V$[ebp+8]
	mulss	xmm1, DWORD PTR _V$[ebp+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _Norm$[ebp]

; 59   : 	V.x/=Norm, V.y/=Norm, V.z/=Norm; 

	movss	xmm0, DWORD PTR _V$[ebp]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _V$[ebp], xmm0
	movss	xmm0, DWORD PTR _V$[ebp+4]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _V$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _V$[ebp+8]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _V$[ebp+8], xmm0

; 60   : 
; 61   : 	return V;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _V$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _V$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _V$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z ENDP		; RED_Normal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\redmacros.h
;	COMDAT ?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z
_TEXT	SEGMENT
_R$ = -16						; size = 12
_Norm$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_V$ = 12						; size = 4
?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z PROC	; RED_NormalizeVector, COMDAT

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 27   : 	D3DXVECTOR3 R;

	lea	ecx, DWORD PTR _R$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 28   : 	
; 29   : 	float	Norm = sqrtf(V->x * V->x + V->y * V->y + V->z * V->z);

	mov	eax, DWORD PTR _V$[ebp]
	mov	ecx, DWORD PTR _V$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _V$[ebp]
	mov	eax, DWORD PTR _V$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _V$[ebp]
	mov	edx, DWORD PTR _V$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _Norm$[ebp]

; 30   : 	if(!Norm) R.x = R.y = R.z =0;

	movss	xmm0, DWORD PTR _Norm$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@RED_Normal
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _R$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _R$[ebp+8]
	movss	DWORD PTR _R$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _R$[ebp+4]
	movss	DWORD PTR _R$[ebp], xmm0
	jmp	SHORT $LN1@RED_Normal
$LN2@RED_Normal:

; 31   : 	else R.x = V->x / Norm, R.y = V->y / Norm, R.z = V->z / Norm;

	mov	eax, DWORD PTR _V$[ebp]
	movss	xmm0, DWORD PTR [eax]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _R$[ebp], xmm0
	mov	ecx, DWORD PTR _V$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _R$[ebp+4], xmm0
	mov	edx, DWORD PTR _V$[ebp]
	movss	xmm0, DWORD PTR [edx+8]
	divss	xmm0, DWORD PTR _Norm$[ebp]
	movss	DWORD PTR _R$[ebp+8], xmm0
$LN1@RED_Normal:

; 32   : 	return R;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _R$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _R$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _R$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 33   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z ENDP	; RED_NormalizeVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\redmacros.h
;	COMDAT ?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_V$ = 8							; size = 4
?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z PROC		; RED_Lenght3D, COMDAT

; 19   : {

	push	ebp
	mov	ebp, esp

; 20   : 	return sqrtf( V->x * V->x + V->y * V->y + V->z * V->z);

	mov	eax, DWORD PTR _V$[ebp]
	mov	ecx, DWORD PTR _V$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _V$[ebp]
	mov	eax, DWORD PTR _V$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _V$[ebp]
	mov	edx, DWORD PTR _V$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4

; 21   : }

	pop	ebp
	ret	0
?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z ENDP		; RED_Lenght3D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\redmacros.h
;	COMDAT ?RED_Distance3D@@YAMPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_dz$ = -12						; size = 4
_dy$ = -8						; size = 4
_dx$ = -4						; size = 4
_V1$ = 8						; size = 4
_V2$ = 12						; size = 4
?RED_Distance3D@@YAMPAUD3DXVECTOR3@@0@Z PROC		; RED_Distance3D, COMDAT

; 7    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 8    : 	float	dx = V1->x - V2->x;

	mov	eax, DWORD PTR _V1$[ebp]
	mov	ecx, DWORD PTR _V2$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR _dx$[ebp], xmm0

; 9    : 	float	dy = V1->y - V2->y;

	mov	edx, DWORD PTR _V1$[ebp]
	mov	eax, DWORD PTR _V2$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR _dy$[ebp], xmm0

; 10   : 	float	dz = V1->z - V2->z;

	mov	ecx, DWORD PTR _V1$[ebp]
	mov	edx, DWORD PTR _V2$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR _dz$[ebp], xmm0

; 11   : 
; 12   : 	return sqrtf( dx * dx + dy * dy + dz * dz);

	movss	xmm0, DWORD PTR _dx$[ebp]
	mulss	xmm0, DWORD PTR _dx$[ebp]
	movss	xmm1, DWORD PTR _dy$[ebp]
	mulss	xmm1, DWORD PTR _dy$[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _dz$[ebp]
	mulss	xmm1, DWORD PTR _dz$[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4

; 13   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RED_Distance3D@@YAMPAUD3DXVECTOR3@@0@Z ENDP		; RED_Distance3D
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\sim\include\otwdrive.h
;	COMDAT ?GetFPS@OTWDriverClass@@QAEMXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetFPS@OTWDriverClass@@QAEMXZ PROC			; OTWDriverClass::GetFPS, COMDAT
; _this$ = ecx

; 625  : 	float GetFPS(){return (currentFPS);};//Cobra

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+32324]
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFPS@OTWDriverClass@@QAEMXZ ENDP			; OTWDriverClass::GetFPS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\realweather.h
;	COMDAT ?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ PROC	; RealWeather::GetWindVector, COMDAT
; _this$ = ecx

; 141  : 	Tpoint	GetWindVector(void) { return WindVector; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 15772				; 00003d9cH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ ENDP	; RealWeather::GetWindVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Z@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Z@Render3D@@QAEMXZ PROC				; Render3D::Z, COMDAT
; _this$ = ecx

; 80   : 	float	Z( void )	{ return cameraPos.z; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262932]
	mov	esp, ebp
	pop	ebp
	ret	0
?Z@Render3D@@QAEMXZ ENDP				; Render3D::Z
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?Y@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Y@Render3D@@QAEMXZ PROC				; Render3D::Y, COMDAT
; _this$ = ecx

; 79   : 	float	Y( void )	{ return cameraPos.y; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262928]
	mov	esp, ebp
	pop	ebp
	ret	0
?Y@Render3D@@QAEMXZ ENDP				; Render3D::Y
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?X@Render3D@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?X@Render3D@@QAEMXZ PROC				; Render3D::X, COMDAT
; _this$ = ecx

; 78   : 	float	X( void )	{ return cameraPos.x; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+262924]
	mov	esp, ebp
	pop	ebp
	ret	0
?X@Render3D@@QAEMXZ ENDP				; Render3D::X
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\timemgr.h
;	COMDAT ?GetClockTime@TimeManager@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClockTime@TimeManager@@QAEKXZ PROC			; TimeManager::GetClockTime, COMDAT
; _this$ = ecx

; 48   : 	DWORD	GetClockTime( void )		{ return currentTime; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClockTime@TimeManager@@QAEKXZ ENDP			; TimeManager::GetClockTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rgb$ = 8						; size = 4
?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z PROC ; CTimeOfDay::GetTextureLightingColor, COMDAT
; _this$ = ecx

; 94   : 	void GetTextureLightingColor(Tcolor *rgb)	{ *rgb = TextureLighting; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 196				; 000000c4H
	mov	ecx, DWORD PTR _rgb$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ENDP ; CTimeOfDay::GetTextureLightingColor
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDrawableParticleSys@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawableParticleSys@@UAEPAXI@Z PROC			; DrawableParticleSys::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableParticleSys@@UAE@XZ		; DrawableParticleSys::~DrawableParticleSys
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawableParticleSys@@UAEPAXI@Z ENDP			; DrawableParticleSys::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_ID$ = -28						; size = 4
_TrailNr$ = -24						; size = 4
_Trail$1 = -20						; size = 4
_Pos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_Handle$ = 8						; size = 4
_TrailId$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_AlphaCx$ = 28						; size = 4
_SizeCx$ = 32						; size = 4
?PS_EmitTrail@DrawableParticleSys@@SAKKHMMMMM@Z PROC	; DrawableParticleSys::PS_EmitTrail

; 4870 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4871 :     // RV - I-Hawk - CTD fix on vortex trails. probably caused by bad conversion from DWORD to int
; 4872 :     // So this will cause the emitter to cut and start another trail, but won't be noticed anyway...
; 4873 :     if (TrailId < 0 || TrailId > TRAIL_MAX - 1)

	cmp	DWORD PTR _TrailId$[ebp], 0
	jl	SHORT $LN3@PS_EmitTra
	cmp	DWORD PTR _TrailId$[ebp], 149		; 00000095H
	jle	SHORT $LN4@PS_EmitTra
$LN3@PS_EmitTra:

; 4874 :     {
; 4875 :         return NULL;

	xor	eax, eax
	jmp	$LN5@PS_EmitTra
$LN4@PS_EmitTra:

; 4876 :     }
; 4877 : 
; 4878 :     // Get the trail Number form the Handle, and the corresponding trails ID
; 4879 :     DWORD TrailNr = Handle & (PS_MAX_TRAILS - 1), ID = PS_TrailsID[TrailId];

	mov	eax, DWORD PTR _Handle$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _TrailNr$[ebp], eax
	mov	ecx, DWORD PTR _TrailId$[ebp]
	mov	edx, DWORD PTR ?PS_TrailsID@DrawableParticleSys@@0PAKA[ecx*4]
	mov	DWORD PTR _ID$[ebp], edx

; 4880 : 
; 4881 :     // Check it is an acceptable Trail Refernce
; 4882 :     if (Handle && TrailNr < PS_MAX_TRAILS)

	cmp	DWORD PTR _Handle$[ebp], 0
	je	$LN1@PS_EmitTra
	cmp	DWORD PTR _TrailNr$[ebp], 256		; 00000100H
	jae	$LN1@PS_EmitTra

; 4883 :     {
; 4884 :         // Get the trail
; 4885 :         TrailEmitterType &Trail = (((TrailEmitterType*)PS_Lists[PS_TRAILS_IDX].ObjectList)[TrailNr]);

	mov	eax, 28					; 0000001cH
	imul	eax, 5
	mov	ecx, DWORD PTR _TrailNr$[ebp]
	imul	ecx, 172				; 000000acH
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _Trail$1[ebp], ecx

; 4886 : 
; 4887 :         // if Handle ok Update the Emitter
; 4888 :         if (Trail.Handle == Handle)

	mov	edx, DWORD PTR _Trail$1[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _Handle$[ebp]
	jne	$LN1@PS_EmitTra

; 4889 :         {
; 4890 :             Trail.Alive = true;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	mov	dl, BYTE PTR [ecx+168]
	or	dl, 1
	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	BYTE PTR [eax+168], dl

; 4891 :             Trail.Run = true;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	mov	dl, BYTE PTR [ecx+168]
	or	dl, 4
	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	BYTE PTR [eax+168], dl

; 4892 :             Trail.Updated = true;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	mov	dl, BYTE PTR [ecx+168]
	or	dl, 8
	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	BYTE PTR [eax+168], dl

; 4893 :             Trail.Pos.x = x, Trail.Pos.y = y, Trail.Pos.z = z;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [ecx+36], xmm0
	mov	edx, DWORD PTR _Trail$1[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [edx+40], xmm0
	mov	eax, DWORD PTR _Trail$1[ebp]
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR [eax+44], xmm0

; 4894 :             Trail.AlphaCx = AlphaCx;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	movss	xmm0, DWORD PTR _AlphaCx$[ebp]
	movss	DWORD PTR [ecx+144], xmm0

; 4895 :             Trail.SizeCx = SizeCx;

	mov	edx, DWORD PTR _Trail$1[ebp]
	movss	xmm0, DWORD PTR _SizeCx$[ebp]
	movss	DWORD PTR [edx+140], xmm0

; 4896 : 
; 4897 :             // Return the Handle
; 4898 :             return Handle;

	mov	eax, DWORD PTR _Handle$[ebp]
	jmp	SHORT $LN5@PS_EmitTra
$LN1@PS_EmitTra:

; 4899 :         }
; 4900 :     }
; 4901 : 
; 4902 :     // if Here, we need to create a new trail
; 4903 :     Tpoint Pos = {x, y, z};

	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR _Pos$[ebp], xmm0
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _Pos$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z$[ebp]
	movss	DWORD PTR _Pos$[ebp+8], xmm0

; 4904 :     // Return the Handle for the newly created Trail
; 4905 :     return PS_AddTrail(ID, &Pos, PS_NOPTR, false, AlphaCx, SizeCx);

	push	ecx
	movss	xmm0, DWORD PTR _SizeCx$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _AlphaCx$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	0
	push	-1
	lea	eax, DWORD PTR _Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?PS_AddTrail@DrawableParticleSys@@CAKHPAUTpoint@@K_NMM@Z ; DrawableParticleSys::PS_AddTrail
	add	esp, 24					; 00000018H
$LN5@PS_EmitTra:

; 4906 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PS_EmitTrail@DrawableParticleSys@@SAKKHMMMMM@Z ENDP	; DrawableParticleSys::PS_EmitTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_TrailNr$ = -8						; size = 4
_Trail$1 = -4						; size = 4
_Handle$ = 8						; size = 4
?PS_KillTrail@DrawableParticleSys@@SAXK@Z PROC		; DrawableParticleSys::PS_KillTrail

; 4911 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 4912 :     // Get the trail Number form the Handle, and the corresponding trails ID
; 4913 :     DWORD TrailNr = Handle & (PS_MAX_TRAILS - 1);

	mov	eax, DWORD PTR _Handle$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _TrailNr$[ebp], eax

; 4914 : 
; 4915 :     // Check it is an acceptable Trail Refernce
; 4916 :     if (Handle && TrailNr < PS_MAX_TRAILS)

	cmp	DWORD PTR _Handle$[ebp], 0
	je	SHORT $LN3@PS_KillTra
	cmp	DWORD PTR _TrailNr$[ebp], 256		; 00000100H
	jae	SHORT $LN3@PS_KillTra

; 4917 :     {
; 4918 :         // Get the trail
; 4919 :         TrailEmitterType &Trail = (((TrailEmitterType*)PS_Lists[PS_TRAILS_IDX].ObjectList)[TrailNr]);

	mov	ecx, 28					; 0000001cH
	imul	ecx, 5
	mov	edx, DWORD PTR _TrailNr$[ebp]
	imul	edx, 172				; 000000acH
	add	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Trail$1[ebp], edx

; 4920 : 
; 4921 :         // if same Handle, kill the Trail
; 4922 :         if (Trail.Handle == Handle)

	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _Handle$[ebp]
	jne	SHORT $LN3@PS_KillTra

; 4923 :         {
; 4924 :             Trail.Alive = false;

	mov	edx, DWORD PTR _Trail$1[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -2					; fffffffeH
	mov	ecx, DWORD PTR _Trail$1[ebp]
	mov	BYTE PTR [ecx+168], al

; 4925 :             Trail.Handle = NULL;

	mov	edx, DWORD PTR _Trail$1[ebp]
	mov	DWORD PTR [edx+16], 0
$LN3@PS_KillTra:

; 4926 :         }
; 4927 :     }
; 4928 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_KillTrail@DrawableParticleSys@@SAXK@Z ENDP		; DrawableParticleSys::PS_KillTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv89 = -16						; size = 8
tv73 = -8						; size = 4
tv86 = -4						; size = 4
_renderer$ = 8						; size = 4
?PS_Exec@DrawableParticleSys@@SAXPAVRenderOTW@@@Z PROC	; DrawableParticleSys::PS_Exec

; 4936 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 4937 :     //START_PROFILE("New PS");
; 4938 : 
; 4939 :     PS_Renderer = renderer;

	mov	eax, DWORD PTR _renderer$[ebp]
	mov	DWORD PTR ?PS_Renderer@DrawableParticleSys@@0PAVRenderOTW@@A, eax ; DrawableParticleSys::PS_Renderer

; 4940 : 
; 4941 :     // Update Timing Stuff
; 4942 :     PS_RunTime = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA, eax ; DrawableParticleSys::PS_RunTime

; 4943 :     PS_ElapsedTime = (float)(PS_RunTime - PS_LastTime) * .001f;

	mov	ecx, DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_RunTime
	sub	ecx, DWORD PTR ?PS_LastTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_LastTime
	mov	DWORD PTR tv86[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv89[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv89[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA, xmm0

; 4944 :     PS_LastTime = PS_RunTime;

	mov	eax, DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_RunTime
	mov	DWORD PTR ?PS_LastTime@DrawableParticleSys@@0KA, eax ; DrawableParticleSys::PS_LastTime

; 4945 : 
; 4946 :     // Setup Colors
; 4947 :     TheTimeOfDay.GetTextureLightingColor(&PS_HiLightCx);

	push	OFFSET ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A ; DrawableParticleSys::PS_HiLightCx
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ; CTimeOfDay::GetTextureLightingColor

; 4948 : 
; 4949 :     // Setup type of rendering
; 4950 :     PS_NVG = PS_TV = false;

	mov	BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA, 0 ; DrawableParticleSys::PS_TV
	mov	cl, BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA ; DrawableParticleSys::PS_TV
	mov	BYTE PTR ?PS_NVG@DrawableParticleSys@@0_NA, cl ; DrawableParticleSys::PS_NVG

; 4951 : 
; 4952 :     switch (TheDXEngine.GetState())

	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?GetState@CDXEngine@@QAE?AW4DX_StateType@@XZ ; CDXEngine::GetState
	mov	DWORD PTR tv73[ebp], eax
	cmp	DWORD PTR tv73[ebp], 1
	je	SHORT $LN5@PS_Exec
	cmp	DWORD PTR tv73[ebp], 2
	je	$LN2@PS_Exec
	jmp	$LN1@PS_Exec
$LN5@PS_Exec:

; 4953 :     {
; 4954 :         case DX_TV:
; 4955 :                 PS_TV = true;

	mov	BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA, 1 ; DrawableParticleSys::PS_TV

; 4956 : 
; 4957 :             if ((g_bGreyMFD) && (!bNVGmode))

	movzx	edx, BYTE PTR ?g_bGreyMFD@@3_NA		; g_bGreyMFD
	test	edx, edx
	je	SHORT $LN4@PS_Exec
	movzx	eax, BYTE PTR ?bNVGmode@@3_NA		; bNVGmode
	test	eax, eax
	jne	SHORT $LN4@PS_Exec

; 4958 :                 PS_HiLightCx.r = 0.2f, PS_HiLightCx.g = 0.2f, PS_HiLightCx.b = 0.2f, PS_LoLightCx = PS_HiLightCx;

	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A, xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4, xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8, xmm0
	mov	ecx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A, ecx
	mov	edx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+4, edx
	mov	eax, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+8, eax

; 4959 :             else

	jmp	SHORT $LN3@PS_Exec
$LN4@PS_Exec:

; 4960 :                 PS_HiLightCx.r = 0.0f, PS_HiLightCx.g = 1.0f, PS_HiLightCx.b = 0.0f, PS_LoLightCx = PS_HiLightCx;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4, xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8, xmm0
	mov	ecx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A, ecx
	mov	edx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+4, edx
	mov	eax, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+8, eax
$LN3@PS_Exec:

; 4961 : 
; 4962 :             break;

	jmp	$LN6@PS_Exec
$LN2@PS_Exec:

; 4963 : 
; 4964 :         case DX_NVG:
; 4965 :                 PS_NVG = true;

	mov	BYTE PTR ?PS_NVG@DrawableParticleSys@@0_NA, 1 ; DrawableParticleSys::PS_NVG

; 4966 :             PS_HiLightCx.r = 0.0f, PS_HiLightCx.g = 1.0f, PS_HiLightCx.b = 0.0f, PS_LoLightCx = PS_HiLightCx;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A, xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4, xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8, xmm0
	mov	ecx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A, ecx
	mov	edx, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+4, edx
	mov	eax, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	mov	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+8, eax

; 4967 :             break;

	jmp	SHORT $LN6@PS_Exec
$LN1@PS_Exec:

; 4968 : 
; 4969 :         default:
; 4970 :                 PS_NVG = PS_TV = false;

	mov	BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA, 0 ; DrawableParticleSys::PS_TV
	mov	cl, BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA ; DrawableParticleSys::PS_TV
	mov	BYTE PTR ?PS_NVG@DrawableParticleSys@@0_NA, cl ; DrawableParticleSys::PS_NVG

; 4971 :             PS_LoLightCx.r = PS_HiLightCx.r * 0.68f, PS_LoLightCx.g = PS_HiLightCx.g * 0.68f, PS_LoLightCx.b = PS_HiLightCx.b * 0.68f;

	movss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	mulss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A, xmm0
	movss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	mulss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+4, xmm0
	movss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	mulss	xmm0, DWORD PTR __real@3f2e147b
	movss	DWORD PTR ?PS_LoLightCx@DrawableParticleSys@@0UTcolor@@A+8, xmm0
$LN6@PS_Exec:

; 4972 :     }
; 4973 : 
; 4974 : 
; 4975 :     // Reset clusters Stuff
; 4976 :     PS_ClustersReset();

	call	?PS_ClustersReset@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_ClustersReset

; 4977 : 
; 4978 :     // Parse for Patticles as 1st
; 4979 :     PS_ParticleRun();

	call	?PS_ParticleRun@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_ParticleRun

; 4980 : #ifdef DEBUG_NEW_PS_TRAILS
; 4981 :     //START_PROFILE("NEW PS TRAILS RUN");
; 4982 :     PS_SubTrails = 0;

	mov	DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_SubTrails

; 4983 : #endif
; 4984 :     // Trails
; 4985 :     PS_TrailRun();

	call	?PS_TrailRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_TrailRun

; 4986 : 
; 4987 :     // PS_SubTrailRun();
; 4988 : #ifdef DEBUG_NEW_PS_TRAILS
; 4989 :     //REPORT_VALUE("NEW PS TRAILS", PS_SubTrails);
; 4990 :     //STOP_PROFILE("NEW PS TRAILS RUN");
; 4991 : #endif
; 4992 : 
; 4993 :     // Update cluster visibility
; 4994 :     PS_ClustersRun();

	call	?PS_ClustersRun@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_ClustersRun

; 4995 : 
; 4996 : #ifdef DEBUG_NEW_PS_POLYS
; 4997 :     //START_PROFILE("NEW PS POLY TIME");
; 4998 : #endif
; 4999 :     // Polys
; 5000 :     PS_PolyRun();

	call	?PS_PolyRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_PolyRun

; 5001 : #ifdef DEBUG_NEW_PS_POLYS
; 5002 :     //STOP_PROFILE("NEW PS POLY TIME");
; 5003 : #endif
; 5004 : 
; 5005 :     // Emitters
; 5006 :     PS_EmitterRun();

	call	?PS_EmitterRun@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_EmitterRun

; 5007 : 
; 5008 :     // Lights
; 5009 :     PS_LightsRun();

	call	?PS_LightsRun@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_LightsRun

; 5010 : 
; 5011 :     // Sounds
; 5012 :     PS_SoundRun();

	call	?PS_SoundRun@DrawableParticleSys@@CAXXZ	; DrawableParticleSys::PS_SoundRun

; 5013 : 
; 5014 :     //STOP_PROFILE("New PS");
; 5015 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_Exec@DrawableParticleSys@@SAXPAVRenderOTW@@@Z ENDP	; DrawableParticleSys::PS_Exec
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_l$ = -4						; size = 4
_name$ = 8						; size = 4
?GetNameId@DrawableParticleSys@@SAHPAD@Z PROC		; DrawableParticleSys::GetNameId

; 2169 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2170 :     int l;
; 2171 : 
; 2172 :     for (l = 0; l < PPNCount; l++)

	mov	DWORD PTR _l$[ebp], 0
	jmp	SHORT $LN4@GetNameId
$LN3@GetNameId:
	mov	eax, DWORD PTR _l$[ebp]
	add	eax, 1
	mov	DWORD PTR _l$[ebp], eax
$LN4@GetNameId:
	mov	ecx, DWORD PTR _l$[ebp]
	cmp	ecx, DWORD PTR ?PPNCount@@3HA		; PPNCount
	jge	SHORT $LN2@GetNameId

; 2173 :     {
; 2174 : #ifdef USE_NEW_PS
; 2175 : 
; 2176 :         if (PPN[l] && PS_PPN[(DWORD)PPN[l]].name && stricmp(name, PS_PPN[(DWORD)PPN[l]].name) == 0) 
; 2177 :             return l;
; 2178 : 
; 2179 : #else
; 2180 : 
; 2181 :         if (PPN[l] && PPN[l]->name && stricmp(name, PPN[l]->name) == 0) 

	mov	edx, DWORD PTR _l$[ebp]
	mov	eax, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	cmp	DWORD PTR [eax+edx*4], 0
	je	SHORT $LN1@GetNameId
	mov	ecx, DWORD PTR _l$[ebp]
	mov	edx, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 12					; 0000000cH
	je	SHORT $LN1@GetNameId
	mov	ecx, DWORD PTR _l$[ebp]
	mov	edx, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@GetNameId

; 2182 :             return l;

	mov	eax, DWORD PTR _l$[ebp]
	jmp	SHORT $LN5@GetNameId
$LN1@GetNameId:

; 2183 : 
; 2184 : #endif
; 2185 :     }

	jmp	SHORT $LN3@GetNameId
$LN2@GetNameId:

; 2186 : 
; 2187 :     return 0;

	xor	eax, eax
$LN5@GetNameId:

; 2188 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNameId@DrawableParticleSys@@SAHPAD@Z ENDP		; DrawableParticleSys::GetNameId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_id$ = 8						; size = 4
?IsValidPSId@DrawableParticleSys@@SAHH@Z PROC		; DrawableParticleSys::IsValidPSId

; 2159 : {

	push	ebp
	mov	ebp, esp

; 2160 :     if (id < PPNCount && PPN[id])

	mov	eax, DWORD PTR _id$[ebp]
	cmp	eax, DWORD PTR ?PPNCount@@3HA		; PPNCount
	jge	SHORT $LN1@IsValidPSI
	mov	ecx, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	cmp	DWORD PTR [edx+ecx*4], 0
	je	SHORT $LN1@IsValidPSI

; 2161 :     {
; 2162 :         return 1;

	mov	eax, 1
	jmp	SHORT $LN2@IsValidPSI
$LN1@IsValidPSI:

; 2163 :     }
; 2164 : 
; 2165 :     return 0;

	xor	eax, eax
$LN2@IsValidPSI:

; 2166 : }

	pop	ebp
	ret	0
?IsValidPSId@DrawableParticleSys@@SAHH@Z ENDP		; DrawableParticleSys::IsValidPSId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv95 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_n$ = -8						; size = 4
_ppn$ = -4						; size = 4
_rc$ = 8						; size = 4
?ReleaseTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z PROC ; DrawableParticleSys::ReleaseTexturesOnDevice

; 2034 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2035 :     psContext = 0;

	mov	DWORD PTR ?psContext@DrawableParticleSys@@1PAVDXContext@@A, 0 ; DrawableParticleSys::psContext

; 2036 : 
; 2037 :     ParticleTextureNode *n;
; 2038 : 
; 2039 :     n = (ParticleTextureNode *)textureList.GetHead();

	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN5@ReleaseTex:

; 2040 : 
; 2041 :     while (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN4@ReleaseTex

; 2042 :     {
; 2043 :         n->TexHandle = 0;

	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [eax+44], 0

; 2044 :         n->TexItem = NULL;

	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+48], 0

; 2045 :         n = (ParticleTextureNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax

; 2046 :     }

	jmp	SHORT $LN5@ReleaseTex
$LN4@ReleaseTex:

; 2047 : 
; 2048 :     ParticleParamNode *ppn;
; 2049 : 
; 2050 :     ppn = (ParticleParamNode *)paramList.GetHead();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _ppn$[ebp], eax
$LN3@ReleaseTex:

; 2051 : 
; 2052 :     while (ppn)

	cmp	DWORD PTR _ppn$[ebp], 0
	je	SHORT $LN6@ReleaseTex

; 2053 :     {
; 2054 :         if (ppn->bspObj)

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+5632], 0
	je	SHORT $LN1@ReleaseTex

; 2055 :         {
; 2056 :             delete ppn->bspObj;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+5632]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN8@ReleaseTex
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN9@ReleaseTex
$LN8@ReleaseTex:
	mov	DWORD PTR tv95[ebp], 0
$LN9@ReleaseTex:

; 2057 :             ppn->bspObj = 0;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+5632], 0
$LN1@ReleaseTex:

; 2058 :         }
; 2059 : 
; 2060 :         ppn = (ParticleParamNode *)ppn->GetSucc();

	mov	ecx, DWORD PTR _ppn$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _ppn$[ebp], eax

; 2061 :     }

	jmp	SHORT $LN3@ReleaseTex
$LN6@ReleaseTex:

; 2062 : 
; 2063 : 
; 2064 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ReleaseTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ENDP ; DrawableParticleSys::ReleaseTexturesOnDevice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -84						; size = 4
$T3 = -80						; size = 4
tv144 = -76						; size = 4
_n$ = -72						; size = 4
_ppn$ = -68						; size = 4
_rot$ = -64						; size = 36
_pos$ = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rc$ = 8						; size = 4
?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z PROC ; DrawableParticleSys::SetupTexturesOnDevice

; 1997 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1998 :     psContext = rc;

	mov	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR ?psContext@DrawableParticleSys@@1PAVDXContext@@A, eax ; DrawableParticleSys::psContext

; 1999 : 
; 2000 :     ParticleTextureNode *n;
; 2001 : 
; 2002 :     n = (ParticleTextureNode *)textureList.GetHead();

	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN5@SetupTextu:

; 2003 : 
; 2004 :     while (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN4@SetupTextu

; 2005 :     {
; 2006 :         n->TexHandle = TheDXEngine.GetTextureHandle(n->TexName);

	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?GetTextureHandle@CDXEngine@@QAEKPAD@Z	; CDXEngine::GetTextureHandle
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+44], eax

; 2007 :         n->TexItem = TheDXEngine.DX2D_GetTextureItem(n->TexName);

	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureItem@CDXEngine@@QAEPAVCTextureItem@@PAD@Z ; CDXEngine::DX2D_GetTextureItem
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 2008 :         n = (ParticleTextureNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax

; 2009 :     }

	jmp	SHORT $LN5@SetupTextu
$LN4@SetupTextu:

; 2010 : 
; 2011 :     ParticleParamNode *ppn;
; 2012 : 
; 2013 :     ppn = (ParticleParamNode *)paramList.GetHead();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _ppn$[ebp], eax

; 2014 : 
; 2015 :     Tpoint    pos;
; 2016 :     Trotation rot = IMatrix;

	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	lea	edi, DWORD PTR _rot$[ebp]
	rep movsd
$LN3@SetupTextu:

; 2017 : 
; 2018 :     while (ppn)

	cmp	DWORD PTR _ppn$[ebp], 0
	je	$LN2@SetupTextu

; 2019 :     {
; 2020 :         if (ppn->bspCTID)

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+5624], 0
	je	$LN1@SetupTextu

; 2021 :         {
; 2022 :             ppn->bspObj   = new DrawableBSP(Falcon4ClassTable[ppn->bspCTID].visType[ppn->bspVisType],
; 2023 :                                             &pos,
; 2024 :                                             &rot);

	push	172					; 000000acH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN8@SetupTextu
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _rot$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+5624]
	imul	eax, 81					; 00000051H
	add	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+5628]
	movsx	eax, WORD PTR [eax+edx*2+60]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DrawableBSP@@QAE@HPBUTpoint@@PBUTrotation@@M@Z ; DrawableBSP::DrawableBSP
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN9@SetupTextu
$LN8@SetupTextu:
	mov	DWORD PTR tv144[ebp], 0
$LN9@SetupTextu:
	mov	ecx, DWORD PTR tv144[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [edx+5632], eax
$LN1@SetupTextu:

; 2025 :         }
; 2026 : 
; 2027 :         ppn = (ParticleParamNode *)ppn->GetSucc();

	mov	ecx, DWORD PTR _ppn$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _ppn$[ebp], eax

; 2028 :     }

	jmp	$LN3@SetupTextu
$LN2@SetupTextu:

; 2029 : 
; 2030 : 
; 2031 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ENDP ; DrawableParticleSys::SetupTexturesOnDevice
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ?PS_EvalTimedRGB@DrawableParticleSys@@CA?AUpsRGB@@MAAHHPAUtimedRGB@@@Z
_TEXT	SEGMENT
_elapsed$ = -20						; size = 4
_retVal$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
$T1 = 8							; size = 4
_life$ = 12						; size = 4
_LastStage$ = 16					; size = 4
_Count$ = 20						; size = 4
_input$ = 24						; size = 4
?PS_EvalTimedRGB@DrawableParticleSys@@CA?AUpsRGB@@MAAHHPAUtimedRGB@@@Z PROC ; DrawableParticleSys::PS_EvalTimedRGB, COMDAT

; 2418 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2419 :     // Get the 1st value if just one stage
; 2420 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN4@PS_EvalTim
	mov	eax, 32					; 00000020H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	lea	edx, DWORD PTR [ecx+eax+8]
	mov	eax, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR $T1[ebp]
	jmp	$LN5@PS_EvalTim
$LN4@PS_EvalTim:

; 2421 : 
; 2422 :     // if past the end of stages, return last stage value
; 2423 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN3@PS_EvalTim
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	lea	ecx, DWORD PTR [eax+edx+8]
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR $T1[ebp]
	jmp	$LN5@PS_EvalTim
$LN3@PS_EvalTim:

; 2424 : 
; 2425 :     // if Life past the Stage Time update to the next Stage
; 2426 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	comiss	xmm0, DWORD PTR [ecx+eax+4]
	jbe	SHORT $LN2@PS_EvalTim
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@PS_EvalTim:

; 2427 : 
; 2428 :     // again the check for the end of stages, return last stage value
; 2429 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [eax], edx
	jl	SHORT $LN1@PS_EvalTim
	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	shl	ecx, 5
	mov	edx, DWORD PTR _input$[ebp]
	lea	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T1[ebp]
	jmp	$LN5@PS_EvalTim
$LN1@PS_EvalTim:

; 2430 : 
; 2431 :     psRGB retVal;
; 2432 :     /*retVal.r=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.r, input[LastStage+1].value.r);
; 2433 :     retVal.g=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.g, input[LastStage+1].value.g);
; 2434 :     retVal.b=RESCALE(life, input[LastStage].time, input[LastStage+1].time, input[LastStage].value.b, input[LastStage+1].value.b);*/
; 2435 : 
; 2436 :     float elapsed = life - input[LastStage].time;

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	subss	xmm0, DWORD PTR [eax+edx+4]
	movss	DWORD PTR _elapsed$[ebp], xmm0

; 2437 :     retVal.r = elapsed * input[LastStage].K.r + input[LastStage].value.r;

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx+20]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+8]
	movss	DWORD PTR _retVal$[ebp], xmm0

; 2438 :     retVal.g = elapsed * input[LastStage].K.g + input[LastStage].value.g;

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx+24]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+12]
	movss	DWORD PTR _retVal$[ebp+4], xmm0

; 2439 :     retVal.b = elapsed * input[LastStage].K.b + input[LastStage].value.b;

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _elapsed$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx+28]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 5
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+16]
	movss	DWORD PTR _retVal$[ebp+8], xmm0

; 2440 :     return (retVal);

	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR _retVal$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _retVal$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _retVal$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T1[ebp]
$LN5@PS_EvalTim:

; 2441 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PS_EvalTimedRGB@DrawableParticleSys@@CA?AUpsRGB@@MAAHHPAUtimedRGB@@@Z ENDP ; DrawableParticleSys::PS_EvalTimedRGB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z
_TEXT	SEGMENT
tv174 = -16						; size = 4
tv161 = -12						; size = 4
tv149 = -8						; size = 4
tv142 = -4						; size = 4
_life$ = 8						; size = 4
_LastStage$ = 12					; size = 4
_Count$ = 16						; size = 4
_input$ = 20						; size = 4
?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z PROC ; DrawableParticleSys::PS_EvalTimedFloat, COMDAT

; 2375 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2376 :     // Get the 1st value if just one stage
; 2377 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN4@PS_EvalTim
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv142[ebp], xmm0
	fld	DWORD PTR tv142[ebp]
	jmp	$LN5@PS_EvalTim
$LN4@PS_EvalTim:

; 2378 : 
; 2379 :     // if past the end of stages, return last stage value
; 2380 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [eax], edx
	jl	SHORT $LN3@PS_EvalTim
	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx+8]
	movss	DWORD PTR tv149[ebp], xmm0
	fld	DWORD PTR tv149[ebp]
	jmp	$LN5@PS_EvalTim
$LN3@PS_EvalTim:

; 2381 : 
; 2382 :     // if Life past the Stage Time update to the next Stage
; 2383 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	comiss	xmm0, DWORD PTR [edx+ecx+4]
	jbe	SHORT $LN2@PS_EvalTim
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@PS_EvalTim:

; 2384 : 
; 2385 :     // again the check for the end of stages, return last stage value
; 2386 :     if (LastStage >= Count - 1) return(input[Count - 1].value);

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN1@PS_EvalTim
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [eax+edx+8]
	movss	DWORD PTR tv161[ebp], xmm0
	fld	DWORD PTR tv161[ebp]
	jmp	SHORT $LN5@PS_EvalTim
$LN1@PS_EvalTim:

; 2387 : 
; 2388 :     // return the result
; 2389 :     return (life - input[LastStage].time) * input[LastStage].K + input[LastStage].value;

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	subss	xmm0, DWORD PTR [eax+edx+4]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	mulss	xmm0, DWORD PTR [eax+edx+12]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+8]
	movss	DWORD PTR tv174[ebp], xmm0
	fld	DWORD PTR tv174[ebp]
$LN5@PS_EvalTim:

; 2390 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ENDP ; DrawableParticleSys::PS_EvalTimedFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
;	COMDAT ?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z
_TEXT	SEGMENT
tv238 = -24						; size = 4
_RelValue$ = -20					; size = 4
tv214 = -16						; size = 4
tv184 = -12						; size = 4
_Idx$ = -8						; size = 4
_Time$ = -4						; size = 4
_life$ = 8						; size = 4
_LastStage$ = 12					; size = 4
_Count$ = 16						; size = 4
_input$ = 20						; size = 4
?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z PROC ; DrawableParticleSys::PS_EvalTimedLinLogFloat, COMDAT

; 2340 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 2341 :     // Get the 1st value if just one stage
; 2342 :     if (Count < 2) return (input[0].value);

	cmp	DWORD PTR _Count$[ebp], 2
	jge	SHORT $LN6@PS_EvalTim
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv184[ebp], xmm0
	fld	DWORD PTR tv184[ebp]
	jmp	$LN7@PS_EvalTim
$LN6@PS_EvalTim:

; 2343 : 
; 2344 :     // if past the end of stages, return last stage value
; 2345 :     if (LastStage >= Count - 1) return input[Count - 1].value;

	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [eax], edx
	jl	SHORT $LN5@PS_EvalTim
	mov	ecx, DWORD PTR _Count$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	fld	DWORD PTR [edx+ecx+8]
	jmp	$LN7@PS_EvalTim
$LN5@PS_EvalTim:

; 2346 : 
; 2347 :     // if Life past the Stage Time update to the next Stage
; 2348 :     if (life > input[LastStage + 1].time) LastStage++;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	comiss	xmm0, DWORD PTR [edx+ecx+4]
	jbe	SHORT $LN4@PS_EvalTim
	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@PS_EvalTim:

; 2349 : 
; 2350 :     // again the check for the end of stages, return last stage value
; 2351 :     if (LastStage >= Count - 1) return input[Count - 1].value;

	mov	eax, DWORD PTR _Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _LastStage$[ebp]
	cmp	DWORD PTR [ecx], eax
	jl	SHORT $LN3@PS_EvalTim
	mov	edx, DWORD PTR _Count$[ebp]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	fld	DWORD PTR [eax+edx+8]
	jmp	$LN7@PS_EvalTim
$LN3@PS_EvalTim:

; 2352 : 
; 2353 :     // return the result
; 2354 :     if (input[LastStage + 1].LogMode == false)

	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	jne	SHORT $LN2@PS_EvalTim

; 2355 :         return (life - input[LastStage].time) * input[LastStage].K + input[LastStage].value;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	subss	xmm0, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	mulss	xmm0, DWORD PTR [ecx+eax+12]
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+8]
	movss	DWORD PTR tv214[ebp], xmm0
	fld	DWORD PTR tv214[ebp]
	jmp	$LN7@PS_EvalTim
$LN2@PS_EvalTim:

; 2356 : 
; 2357 :     // get the time difference
; 2358 :     float Time = (input[LastStage + 1].time - input[LastStage].time);

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	shl	edx, 4
	mov	ecx, DWORD PTR _input$[ebp]
	mov	esi, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+4]
	subss	xmm0, DWORD PTR [esi+edx+4]
	movss	DWORD PTR _Time$[ebp], xmm0

; 2359 :     // Calculate the Time Position btw 1 and 0
; 2360 :     Time = (life - input[LastStage].time) / Time;

	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 4
	mov	ecx, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR _life$[ebp]
	subss	xmm0, DWORD PTR [ecx+eax+4]
	divss	xmm0, DWORD PTR _Time$[ebp]
	movss	DWORD PTR _Time$[ebp], xmm0

; 2361 :     // scale to 100 to get a Log10 Array index
; 2362 :     int   Idx = (int)(Time * LOG10_ARRAY_ITEMS);

	movss	xmm0, DWORD PTR _Time$[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	cvttss2si edx, xmm0
	mov	DWORD PTR _Idx$[ebp], edx

; 2363 : 
; 2364 :     // limit check
; 2365 :     if (Idx >= LOG10_ARRAY_ITEMS) Idx = LOG10_ARRAY_ITEMS - 1;

	cmp	DWORD PTR _Idx$[ebp], 500		; 000001f4H
	jl	SHORT $LN1@PS_EvalTim
	mov	DWORD PTR _Idx$[ebp], 499		; 000001f3H
$LN1@PS_EvalTim:

; 2366 : 
; 2367 :     // get the Value difference btw In and Out
; 2368 :     float RelValue = input[LastStage].value - input[LastStage + 1].value;

	mov	eax, DWORD PTR _LastStage$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _LastStage$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	shl	eax, 4
	mov	edx, DWORD PTR _input$[ebp]
	mov	esi, DWORD PTR _input$[ebp]
	movss	xmm0, DWORD PTR [edx+ecx+8]
	subss	xmm0, DWORD PTR [esi+eax+8]
	movss	DWORD PTR _RelValue$[ebp], xmm0

; 2369 :     // return the value
; 2370 :     return RelValue * DrawableParticleSys::Log10Array[Idx] + input[LastStage + 1].value;

	mov	eax, DWORD PTR _Idx$[ebp]
	movss	xmm0, DWORD PTR _RelValue$[ebp]
	mulss	xmm0, DWORD PTR ?Log10Array@DrawableParticleSys@@2PAMA[eax*4]
	mov	ecx, DWORD PTR _LastStage$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _input$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+8]
	movss	DWORD PTR tv238[ebp], xmm0
	fld	DWORD PTR tv238[ebp]
$LN7@PS_EvalTim:

; 2371 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ENDP ; DrawableParticleSys::PS_EvalTimedLinLogFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv149 = -12						; size = 4
_ptr$ = -8						; size = 4
_pn$ = -4						; size = 4
_owner$ = 8						; size = 4
_PEP$ = 12						; size = 4
_Light$ = 16						; size = 4
?PS_AddEmitter@DrawableParticleSys@@CAXKPAUParticleEmitterParam@@K@Z PROC ; DrawableParticleSys::PS_AddEmitter

; 3325 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3326 :     // Get a free slot
; 3327 :     PS_PTR ptr = PS_AddItem(PS_EMITTERS_IDX);

	push	2
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _ptr$[ebp], eax

; 3328 : 
; 3329 :     // security check
; 3330 :     if (ptr == PS_NOPTR) return;

	cmp	DWORD PTR _ptr$[ebp], -1
	jne	SHORT $LN2@PS_AddEmit
	jmp	$LN3@PS_AddEmit
$LN2@PS_AddEmit:

; 3331 : 
; 3332 :     // Get the pointer in the list
; 3333 :     EmitterPartType &pn = (((EmitterPartType*)PS_Lists[PS_EMITTERS_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _ptr$[ebp]
	shl	ecx, 5
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _pn$[ebp], ecx

; 3334 : 
; 3335 :     // assign the PEP
; 3336 :     pn.PEP = PEP;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	eax, DWORD PTR _PEP$[ebp]
	mov	DWORD PTR [edx+28], eax

; 3337 :     // assign the OWNER
; 3338 :     pn.OWNER = owner;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 3339 :     // and Light
; 3340 :     pn.LIGHT = Light;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	ecx, DWORD PTR _Light$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 3341 : 
; 3342 :     if (pn.LIGHT != PS_NOPTR)((LightPartType*)PS_Lists[PS_LIGHTS_IDX].ObjectList)[pn.LIGHT].Light = 0.0f;

	mov	edx, DWORD PTR _pn$[ebp]
	cmp	DWORD PTR [edx+8], -1
	je	SHORT $LN1@PS_AddEmit
	mov	eax, 28					; 0000001cH
	shl	eax, 2
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 44					; 0000002cH
	mov	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+edx+20], xmm0
$LN1@PS_AddEmit:

; 3343 : 
; 3344 :     // initialize variables
; 3345 :     pn.rollover  = 0;

	mov	ecx, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+12], xmm0

; 3346 :     pn.LastStage = 0;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+24], 0

; 3347 :     // Get the randomic time CX
; 3348 :     pn.RndTimeCx = PEP->TimeVariation;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	ecx, DWORD PTR _PEP$[ebp]
	mov	edx, DWORD PTR [ecx+360]
	mov	DWORD PTR [eax+20], edx

; 3349 :     // set the Random Time for 1st emission
; 3350 :     pn.RndTime = PRANDFloat() * pn.RndTimeCx;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv149[ebp]
	movss	xmm0, DWORD PTR tv149[ebp]
	mov	eax, DWORD PTR _pn$[ebp]
	mulss	xmm0, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [ecx+16], xmm0
$LN3@PS_AddEmit:

; 3351 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_AddEmitter@DrawableParticleSys@@CAXKPAUParticleEmitterParam@@K@Z ENDP ; DrawableParticleSys::PS_AddEmitter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_l$1 = -16						; size = 4
_Test$2 = -12						; size = 4
_Light$ = -8						; size = 4
_count$ = -4						; size = 4
_owner$ = 8						; size = 4
_PPN$ = 12						; size = 4
?PS_GenerateEmitters@DrawableParticleSys@@CAXKAAUPS_PPType@@@Z PROC ; DrawableParticleSys::PS_GenerateEmitters

; 3357 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 3358 :     int count;
; 3359 :     PS_PTR Light;
; 3360 :     // Get light status from parent
; 3361 :     Light = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[owner]).LIGHT;

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _owner$[ebp]
	imul	ecx, 124				; 0000007cH
	mov	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	eax, DWORD PTR [edx+ecx+12]
	mov	DWORD PTR _Light$[ebp], eax

; 3362 : 
; 3363 :     // if not a light already assigned and a light Root, get a new light to pass to emitters
; 3364 :     if (Light == PS_NOPTR && PPN.LightRoot) Light = PS_AddItem(PS_LIGHTS_IDX);

	cmp	DWORD PTR _Light$[ebp], -1
	jne	SHORT $LN11@PS_Generat
	mov	ecx, DWORD PTR _PPN$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	shl	dl, 5
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN11@PS_Generat
	push	4
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _Light$[ebp], eax
$LN11@PS_Generat:

; 3365 : 
; 3366 :     // just one Random Emitter
; 3367 :     if (PPN.emitOneRandomly)

	mov	ecx, DWORD PTR _PPN$[ebp]
	cmp	DWORD PTR [ecx+1672], 0
	je	SHORT $LN10@PS_Generat

; 3368 :     {
; 3369 :         for (count = 0; PPN.emitter[count].stages && count < PSMAX_EMITTERS; count++);

	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN9@PS_Generat
$LN8@PS_Generat:
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx
$LN9@PS_Generat:
	mov	eax, DWORD PTR _count$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _PPN$[ebp]
	cmp	DWORD PTR [ecx+eax+1864], 0
	je	SHORT $LN7@PS_Generat
	cmp	DWORD PTR _count$[ebp], 10		; 0000000aH
	jge	SHORT $LN7@PS_Generat
	jmp	SHORT $LN8@PS_Generat
$LN7@PS_Generat:

; 3370 : 
; 3371 :         if (count)

	cmp	DWORD PTR _count$[ebp], 0
	je	SHORT $LN6@PS_Generat

; 3372 :         {
; 3373 :             int l = rand() % count;

	call	_rand
	cdq
	idiv	DWORD PTR _count$[ebp]
	mov	DWORD PTR _l$1[ebp], edx

; 3374 :             PS_AddEmitter(owner, &PPN.emitter[l], Light);

	mov	edx, DWORD PTR _Light$[ebp]
	push	edx
	mov	eax, DWORD PTR _l$1[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _PPN$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1676]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	call	?PS_AddEmitter@DrawableParticleSys@@CAXKPAUParticleEmitterParam@@K@Z ; DrawableParticleSys::PS_AddEmitter
	add	esp, 12					; 0000000cH
$LN6@PS_Generat:

; 3375 :         }
; 3376 :     }
; 3377 :     else

	jmp	$LN2@PS_Generat
$LN10@PS_Generat:

; 3378 :     {
; 3379 :         // More randomic emitters
; 3380 :         float Test = PRANDFloatPos();

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR _Test$2[ebp]

; 3381 : 
; 3382 :         for (count = 0; PPN.emitter[count].stages && count < PSMAX_EMITTERS; count++)

	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN4@PS_Generat
$LN3@PS_Generat:
	mov	ecx, DWORD PTR _count$[ebp]
	add	ecx, 1
	mov	DWORD PTR _count$[ebp], ecx
$LN4@PS_Generat:
	mov	edx, DWORD PTR _count$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _PPN$[ebp]
	cmp	DWORD PTR [eax+edx+1864], 0
	je	SHORT $LN2@PS_Generat
	cmp	DWORD PTR _count$[ebp], 10		; 0000000aH
	jge	SHORT $LN2@PS_Generat

; 3383 :         {
; 3384 :             // Ok... check the probability to enable this emitter...
; 3385 :             if (Test >= PPN.ParticleEmitterMin[count] && Test < PPN.ParticleEmitterMax[count]) PS_AddEmitter(owner, &PPN.emitter[count], Light);

	mov	ecx, DWORD PTR _count$[ebp]
	mov	edx, DWORD PTR _PPN$[ebp]
	movss	xmm0, DWORD PTR _Test$2[ebp]
	comiss	xmm0, DWORD PTR [edx+ecx*4+5356]
	jb	SHORT $LN1@PS_Generat
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _PPN$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax*4+5396]
	comiss	xmm0, DWORD PTR _Test$2[ebp]
	jbe	SHORT $LN1@PS_Generat
	mov	edx, DWORD PTR _Light$[ebp]
	push	edx
	mov	eax, DWORD PTR _count$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _PPN$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1676]
	push	edx
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	call	?PS_AddEmitter@DrawableParticleSys@@CAXKPAUParticleEmitterParam@@K@Z ; DrawableParticleSys::PS_AddEmitter
	add	esp, 12					; 0000000cH
$LN1@PS_Generat:

; 3386 :         }

	jmp	SHORT $LN3@PS_Generat
$LN2@PS_Generat:

; 3387 :     }
; 3388 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_GenerateEmitters@DrawableParticleSys@@CAXKAAUPS_PPType@@@Z ENDP ; DrawableParticleSys::PS_GenerateEmitters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_Life$1 = -112						; size = 4
tv438 = -108						; size = 4
_gtype$2 = -104						; size = 4
tv142 = -100						; size = 4
_gtype$3 = -96						; size = 4
_LastPtr$ = -92						; size = 4
_v$4 = -88						; size = 4
_ptr$ = -84						; size = 4
_qty$5 = -80						; size = 4
_Part$6 = -76						; size = 4
_Alive$7 = -69						; size = 1
_Emitter$8 = -68					; size = 4
_w$9 = -64						; size = 12
_aim$10 = -52						; size = 12
_pos$11 = -40						; size = 12
_subvel$12 = -28					; size = 12
_epos$13 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?PS_EmitterRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_EmitterRun

; 3181 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 3182 : #ifdef DEBUG_NEW_PS_EMITTERS
; 3183 :     DWORD Count = 0;
; 3184 : #endif
; 3185 :     // Get the List entry
; 3186 :     PS_PTR ptr = PS_Lists[PS_EMITTERS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN28@PS_Emitter:

; 3187 : 
; 3188 :     // thru all the list
; 3189 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN24@PS_Emitter

; 3190 :     {
; 3191 : #ifdef DEBUG_NEW_PS_EMITTERS
; 3192 :         Count++;
; 3193 : #endif;
; 3194 :         // The Emitter
; 3195 :         EmitterPartType &Emitter = (((EmitterPartType*)PS_Lists[PS_EMITTERS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR _ptr$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Emitter$8[ebp], eax

; 3196 :         // Pointer to particle
; 3197 :         ParticleNodeType &Part = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[Emitter.OWNER]);

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 124				; 0000007cH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Part$6[ebp], eax

; 3198 : 
; 3199 :         // If Particle already dead, end here and go to next
; 3200 :         if (!Part.Alive)

	mov	ecx, DWORD PTR _Part$6[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN23@PS_Emitter

; 3201 :         {
; 3202 :             ptr = PS_RemoveItem(PS_EMITTERS_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	2
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 3203 :             continue;

	jmp	SHORT $LN28@PS_Emitter
$LN23@PS_Emitter:

; 3204 :         }
; 3205 : 
; 3206 :         // The Life
; 3207 :         float Life = Part.life;

	mov	eax, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR _Life$1[ebp], xmm0

; 3208 : 
; 3209 :         // if a light assigned, confirm still alive
; 3210 :         if (Emitter.LIGHT != PS_NOPTR)((LightPartType*)PS_Lists[PS_LIGHTS_IDX].ObjectList)[Emitter.LIGHT].Alive = true;

	mov	ecx, DWORD PTR _Emitter$8[ebp]
	cmp	DWORD PTR [ecx+8], -1
	je	SHORT $LN22@PS_Emitter
	mov	edx, 28					; 0000001cH
	shl	edx, 2
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+8]
	imul	ecx, 44					; 0000002cH
	mov	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	al, BYTE PTR [edx+ecx+28]
	or	al, 1
	mov	ecx, 28					; 0000001cH
	shl	ecx, 2
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [edx+8]
	imul	edx, 44					; 0000002cH
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	BYTE PTR [ecx+edx+28], al
$LN22@PS_Emitter:

; 3211 : 
; 3212 :         // cache the Position from the OWNER
; 3213 :         Tpoint epos = Part.pos;

	mov	edx, DWORD PTR _Part$6[ebp]
	add	edx, 56					; 00000038H
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _epos$13[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _epos$13[ebp+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR _epos$13[ebp+8], edx

; 3214 :         float qty = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _qty$5[ebp], xmm0

; 3215 :         bool Alive = true;

	mov	BYTE PTR _Alive$7[ebp], 1

; 3216 : 
; 3217 :         // check for EMITTER MODE
; 3218 :         switch (Emitter.PEP->mode)

	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv142[ebp], edx
	cmp	DWORD PTR tv142[ebp], 4
	ja	$LN20@PS_Emitter
	mov	eax, DWORD PTR tv142[ebp]
	jmp	DWORD PTR $LN29@PS_Emitter[eax*4]
$LN19@PS_Emitter:

; 3219 :         {
; 3220 : 
; 3221 :                 // * EMIT ON GROUND * if hit the ground emit the requested quantity and die
; 3222 :             case PSEM_IMPACT:
; 3223 :                     if (epos.z >= Part.GroundLevel) epos.z = Part.GroundLevel, qty += Emitter.PEP->rate[0].value, Alive = false;

	mov	ecx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _epos$13[ebp+8]
	comiss	xmm0, DWORD PTR [ecx+108]
	jb	SHORT $LN18@PS_Emitter
	mov	edx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR [edx+108]
	movss	DWORD PTR _epos$13[ebp+8], xmm0
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, 16					; 00000010H
	imul	edx, 0
	movss	xmm0, DWORD PTR _qty$5[ebp]
	addss	xmm0, DWORD PTR [ecx+edx+200]
	movss	DWORD PTR _qty$5[ebp], xmm0
	mov	BYTE PTR _Alive$7[ebp], 0
$LN18@PS_Emitter:

; 3224 : 
; 3225 :                 break;

	jmp	$LN20@PS_Emitter
$LN17@PS_Emitter:

; 3226 : 
; 3227 : 
; 3228 :                 // * EARTH IMPACT * if on ground
; 3229 :             case PSEM_EARTHIMPACT:
; 3230 :                     if (epos.z >= Part.GroundLevel)

	mov	eax, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _epos$13[ebp+8]
	comiss	xmm0, DWORD PTR [eax+108]
	jb	SHORT $LN15@PS_Emitter

; 3231 :                     {
; 3232 :                         epos.z = Part.GroundLevel;

	mov	ecx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR [ecx+108]
	movss	DWORD PTR _epos$13[ebp+8], xmm0

; 3233 :                         // get ground type
; 3234 :                         int gtype = OTWDriver.GetGroundType(epos.x, epos.y);

	push	ecx
	movss	xmm0, DWORD PTR _epos$13[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _epos$13[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundType@OTWDriverClass@@QAEHMM@Z	; OTWDriverClass::GetGroundType
	mov	DWORD PTR _gtype$3[ebp], eax

; 3235 : 
; 3236 :                         // if on WATER or RIVER add the quantity and die
; 3237 :                         if (!(gtype == COVERAGE_WATER || gtype == COVERAGE_RIVER)) qty += Emitter.PEP->rate[0].value, Alive = false;

	cmp	DWORD PTR _gtype$3[ebp], 1
	je	SHORT $LN15@PS_Emitter
	cmp	DWORD PTR _gtype$3[ebp], 2
	je	SHORT $LN15@PS_Emitter
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	movss	xmm0, DWORD PTR _qty$5[ebp]
	addss	xmm0, DWORD PTR [eax+ecx+200]
	movss	DWORD PTR _qty$5[ebp], xmm0
	mov	BYTE PTR _Alive$7[ebp], 0
$LN15@PS_Emitter:

; 3238 :                     }
; 3239 : 
; 3240 :                 break;

	jmp	$LN20@PS_Emitter
$LN14@PS_Emitter:

; 3241 : 
; 3242 :                 // * WATER IMPACT *
; 3243 :             case PSEM_WATERIMPACT:
; 3244 :                     if (epos.z >= Part.GroundLevel)

	mov	edx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _epos$13[ebp+8]
	comiss	xmm0, DWORD PTR [edx+108]
	jb	SHORT $LN12@PS_Emitter

; 3245 :                     {
; 3246 :                         epos.z = Part.GroundLevel;

	mov	eax, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR [eax+108]
	movss	DWORD PTR _epos$13[ebp+8], xmm0

; 3247 :                         // get ground type
; 3248 :                         int gtype = OTWDriver.GetGroundType(epos.x, epos.y);

	push	ecx
	movss	xmm0, DWORD PTR _epos$13[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _epos$13[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundType@OTWDriverClass@@QAEHMM@Z	; OTWDriverClass::GetGroundType
	mov	DWORD PTR _gtype$2[ebp], eax

; 3249 : 
; 3250 :                         // if on WATER or RIVER add the quantity and die
; 3251 :                         if (gtype == COVERAGE_WATER || gtype == COVERAGE_RIVER) qty += Emitter.PEP->rate[0].value, Alive = false;

	cmp	DWORD PTR _gtype$2[ebp], 1
	je	SHORT $LN11@PS_Emitter
	cmp	DWORD PTR _gtype$2[ebp], 2
	jne	SHORT $LN12@PS_Emitter
$LN11@PS_Emitter:
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, 16					; 00000010H
	imul	eax, 0
	movss	xmm0, DWORD PTR _qty$5[ebp]
	addss	xmm0, DWORD PTR [edx+eax+200]
	movss	DWORD PTR _qty$5[ebp], xmm0
	mov	BYTE PTR _Alive$7[ebp], 0
$LN12@PS_Emitter:

; 3252 :                     }
; 3253 : 
; 3254 :                 break;

	jmp	$LN20@PS_Emitter
$LN10@PS_Emitter:

; 3255 : 
; 3256 :                 // * ONCE EMISSION *
; 3257 :             case PSEM_ONCE:
; 3258 :                     while (Emitter.LastStage < Emitter.PEP->stages && (Emitter.PEP->rate[Emitter.LastStage].time + Emitter.RndTime) <= Part.life)

	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR [edx+188]
	jge	$LN8@PS_Emitter
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+24]
	shl	edx, 4
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	movss	xmm0, DWORD PTR [eax+edx+196]
	addss	xmm0, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR _Part$6[ebp]
	movss	xmm1, DWORD PTR [edx+28]
	comiss	xmm1, xmm0
	jb	SHORT $LN8@PS_Emitter

; 3259 :                     {
; 3260 :                         // Add quantity and go to next stage
; 3261 :                         qty += Emitter.PEP->rate[Emitter.LastStage++].value;

	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+24]
	shl	eax, 4
	movss	xmm0, DWORD PTR _qty$5[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+200]
	movss	DWORD PTR _qty$5[ebp], xmm0
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	DWORD PTR [eax+24], edx

; 3262 :                         // Ok, recalculate random timing for next stage
; 3263 :                         Emitter.RndTime = PRANDFloat() * Emitter.RndTimeCx;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv438[ebp]
	movss	xmm0, DWORD PTR tv438[ebp]
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mulss	xmm0, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _Emitter$8[ebp]
	movss	DWORD PTR [edx+16], xmm0

; 3264 :                     }

	jmp	$LN10@PS_Emitter
$LN8@PS_Emitter:

; 3265 : 
; 3266 :                 // if gone past last stage, die..!!!
; 3267 :                 if (Emitter.LastStage >= Emitter.PEP->stages) Alive = false;

	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	eax, DWORD PTR [ecx+188]
	jl	SHORT $LN7@PS_Emitter
	mov	BYTE PTR _Alive$7[ebp], 0
$LN7@PS_Emitter:

; 3268 : 
; 3269 :                 break;

	jmp	SHORT $LN20@PS_Emitter
$LN6@PS_Emitter:

; 3270 : 
; 3271 :                 // * EMISSION PER SECONDS *
; 3272 :             case PSEM_PERSEC:
; 3273 :                     qty = PS_EvalTimedFloat(Part.life, Emitter.LastStage, Emitter.PEP->stages, Emitter.PEP->rate);

	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 192				; 000000c0H
	push	edx
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx+188]
	push	edx
	mov	eax, DWORD PTR _Emitter$8[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _Part$6[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+28]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _qty$5[ebp]

; 3274 :                 qty = qty * PS_ElapsedTime + Emitter.rollover;

	movss	xmm0, DWORD PTR _qty$5[ebp]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	edx, DWORD PTR _Emitter$8[ebp]
	addss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR _qty$5[ebp], xmm0

; 3275 : 
; 3276 :                 // if gone past last stage, die..!!!
; 3277 :                 if (Emitter.LastStage >= Emitter.PEP->stages) Alive = false;

	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	eax, DWORD PTR [edx+24]
	cmp	eax, DWORD PTR [ecx+188]
	jl	SHORT $LN5@PS_Emitter
	mov	BYTE PTR _Alive$7[ebp], 0
$LN5@PS_Emitter:
$LN20@PS_Emitter:

; 3278 : 
; 3279 :                 break;
; 3280 :         }
; 3281 : 
; 3282 : 
; 3283 :         while (qty >= 1)

	movss	xmm0, DWORD PTR _qty$5[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	$LN3@PS_Emitter

; 3284 :         {
; 3285 :             float v;
; 3286 :             Tpoint pos, aim, subvel, w;
; 3287 : 
; 3288 :             Emitter.PEP->domain.GetRandomPosition(&w);

	lea	ecx, DWORD PTR _w$9[ebp]
	push	ecx
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [edx+28]
	add	ecx, 4
	call	?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomPosition

; 3289 :             MatrixMult(Part.rotation, &w, &pos);

	lea	eax, DWORD PTR _pos$11[ebp]
	push	eax
	lea	ecx, DWORD PTR _w$9[ebp]
	push	ecx
	mov	edx, DWORD PTR _Part$6[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z ; MatrixMult
	add	esp, 12					; 0000000cH

; 3290 : 
; 3291 :             Emitter.PEP->target.GetRandomDirection(&w);

	lea	ecx, DWORD PTR _w$9[ebp]
	push	ecx
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [edx+28]
	add	ecx, 44					; 0000002cH
	call	?GetRandomDirection@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomDirection

; 3292 :             MatrixMult(Part.rotation, &w, &aim);

	lea	eax, DWORD PTR _aim$10[ebp]
	push	eax
	lea	ecx, DWORD PTR _w$9[ebp]
	push	ecx
	mov	edx, DWORD PTR _Part$6[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	?MatrixMult@@YAXPBUTrotation@@PBUTpoint@@PAU2@@Z ; MatrixMult
	add	esp, 12					; 0000000cH

; 3293 : 
; 3294 :             v = Emitter.PEP->velocity + Emitter.PEP->velVariation * NRAND;

	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	esi, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _Emitter$8[ebp]
	mov	edi, DWORD PTR [edx+28]
	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR [edi+356]
	addss	xmm1, DWORD PTR [esi+352]
	movss	DWORD PTR _v$4[ebp], xmm1

; 3295 : 
; 3296 :             subvel.x = aim.x * v;

	movss	xmm0, DWORD PTR _aim$10[ebp]
	mulss	xmm0, DWORD PTR _v$4[ebp]
	movss	DWORD PTR _subvel$12[ebp], xmm0

; 3297 :             subvel.y = aim.y * v;

	movss	xmm0, DWORD PTR _aim$10[ebp+4]
	mulss	xmm0, DWORD PTR _v$4[ebp]
	movss	DWORD PTR _subvel$12[ebp+4], xmm0

; 3298 :             subvel.z = aim.z * v;

	movss	xmm0, DWORD PTR _aim$10[ebp+8]
	mulss	xmm0, DWORD PTR _v$4[ebp]
	movss	DWORD PTR _subvel$12[ebp+8], xmm0

; 3299 : 
; 3300 :             subvel.x += Part.vel.x;

	mov	eax, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _subvel$12[ebp]
	addss	xmm0, DWORD PTR [eax+72]
	movss	DWORD PTR _subvel$12[ebp], xmm0

; 3301 :             subvel.y += Part.vel.y;

	mov	ecx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _subvel$12[ebp+4]
	addss	xmm0, DWORD PTR [ecx+76]
	movss	DWORD PTR _subvel$12[ebp+4], xmm0

; 3302 :             subvel.z += Part.vel.z;

	mov	edx, DWORD PTR _Part$6[ebp]
	movss	xmm0, DWORD PTR _subvel$12[ebp+8]
	addss	xmm0, DWORD PTR [edx+80]
	movss	DWORD PTR _subvel$12[ebp+8], xmm0

; 3303 : 
; 3304 :             pos.x += epos.x;

	movss	xmm0, DWORD PTR _pos$11[ebp]
	addss	xmm0, DWORD PTR _epos$13[ebp]
	movss	DWORD PTR _pos$11[ebp], xmm0

; 3305 :             pos.y += epos.y;

	movss	xmm0, DWORD PTR _pos$11[ebp+4]
	addss	xmm0, DWORD PTR _epos$13[ebp+4]
	movss	DWORD PTR _pos$11[ebp+4], xmm0

; 3306 :             pos.z += epos.z;

	movss	xmm0, DWORD PTR _pos$11[ebp+8]
	addss	xmm0, DWORD PTR _epos$13[ebp+8]
	movss	DWORD PTR _pos$11[ebp+8], xmm0

; 3307 : 
; 3308 :             PS_AddParticle(Emitter.PEP->id, &pos, &subvel, &aim, 0, Part.CLUSTER, Emitter.LIGHT);

	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _Part$6[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _aim$10[ebp]
	push	ecx
	lea	edx, DWORD PTR _subvel$12[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _Emitter$8[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	?PS_AddParticle@DrawableParticleSys@@CAXHPAUTpoint@@00MKK@Z ; DrawableParticleSys::PS_AddParticle
	add	esp, 28					; 0000001cH

; 3309 :             qty -= 1.0f;

	movss	xmm0, DWORD PTR _qty$5[ebp]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _qty$5[ebp], xmm0

; 3310 :         }

	jmp	$LN20@PS_Emitter
$LN3@PS_Emitter:

; 3311 : 
; 3312 :         Emitter.rollover = qty;

	mov	ecx, DWORD PTR _Emitter$8[ebp]
	movss	xmm0, DWORD PTR _qty$5[ebp]
	movss	DWORD PTR [ecx+12], xmm0

; 3313 : 
; 3314 :         // If this was last time for the Emitter
; 3315 :         if (!Alive) ptr = PS_RemoveItem(PS_EMITTERS_IDX, ptr, LastPtr);

	movzx	edx, BYTE PTR _Alive$7[ebp]
	test	edx, edx
	jne	SHORT $LN2@PS_Emitter
	mov	eax, DWORD PTR _LastPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	push	2
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax
	jmp	SHORT $LN1@PS_Emitter
$LN2@PS_Emitter:

; 3316 :         else LastPtr = ptr, ptr = Emitter.NEXT;

	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], edx
	mov	eax, DWORD PTR _Emitter$8[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx
$LN1@PS_Emitter:

; 3317 :     }

	jmp	$LN28@PS_Emitter
$LN24@PS_Emitter:

; 3318 : 
; 3319 : #ifdef DEBUG_NEW_PS_EMITTERS
; 3320 :     REPORT_VALUE("NEW PS EMITTERS", Count);
; 3321 : #endif
; 3322 : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@PS_Emitter:
	DD	$LN10@PS_Emitter
	DD	$LN6@PS_Emitter
	DD	$LN19@PS_Emitter
	DD	$LN17@PS_Emitter
	DD	$LN14@PS_Emitter
?PS_EmitterRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_EmitterRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -208						; size = 16
$T2 = -192						; size = 16
$T3 = -176						; size = 16
$T4 = -160						; size = 16
$T5 = -144						; size = 16
$T6 = -128						; size = 16
$T7 = -112						; size = 16
_Radius$8 = -84						; size = 4
_Visibility$ = -80					; size = 4
_LastPtr$ = -76						; size = 4
_ptr$ = -72						; size = 4
_Cluster$9 = -68					; size = 4
_XMMPos$ = -64						; size = 16
_XMMDiv$ = -48						; size = 16
_XMMRadius$ = -32					; size = 16
__$ArrayPad$ = -4					; size = 4
?PS_ClustersRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_ClustersRun

; 3827 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 3828 :     DWORD Visibility;
; 3829 :     XMMVector XMMPos, XMMDiv, XMMRadius;
; 3830 : 
; 3831 :     XMMDiv.d3d.x = XMMDiv.d3d.y = XMMDiv.d3d.z = 2.0f;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _XMMDiv$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _XMMDiv$[ebp+8]
	movss	DWORD PTR _XMMDiv$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _XMMDiv$[ebp+4]
	movss	DWORD PTR _XMMDiv$[ebp], xmm0

; 3832 : 
; 3833 : #ifdef DEBUG_NEW_PS_CLUSTERS
; 3834 :     DWORD Count = 0, ClusterIn = 0;
; 3835 : #endif
; 3836 :     // Get the List entry
; 3837 :     PS_PTR ptr = PS_Lists[PS_CLUSTERS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	imul	eax, 7
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN12@PS_Cluster:

; 3838 : 
; 3839 :     // thru all the list
; 3840 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN7@PS_Cluster

; 3841 :     {
; 3842 :         // Get the object
; 3843 :         ClusterPosType &Cluster = (((ClusterPosType*)PS_Lists[PS_CLUSTERS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	imul	edx, 7
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 48					; 00000030H
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Cluster$9[ebp], eax

; 3844 : 
; 3845 :         if (!Cluster.Alive)

	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	dl, BYTE PTR [ecx+4]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN6@PS_Cluster

; 3846 :         {
; 3847 :             ptr = PS_RemoveItem(PS_CLUSTERS_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	7
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 3848 :             continue;

	jmp	SHORT $LN12@PS_Cluster
$LN6@PS_Cluster:

; 3849 :         }
; 3850 : 
; 3851 :         LastPtr = ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], eax

; 3852 :         ptr = Cluster.NEXT;

	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ptr$[ebp], edx

; 3853 : 
; 3854 : #ifdef DEBUG_NEW_PS_CLUSTERS
; 3855 :         Count++;
; 3856 : #endif
; 3857 : 
; 3858 :         // if this cluster is already defined as Out or In, skip any calculation
; 3859 : #ifdef VISUALIZE_CLUSTERS
; 3860 : 
; 3861 :         if (Cluster.Out) continue;
; 3862 : 
; 3863 :         XMMPos = Cluster.TLFpos;
; 3864 : #else
; 3865 : 
; 3866 :         if (Cluster.Out || Cluster.In) continue;

	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN4@PS_Cluster
	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 5
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN5@PS_Cluster
$LN4@PS_Cluster:
	jmp	$LN12@PS_Cluster
$LN5@PS_Cluster:

; 3867 : 
; 3868 : #endif
; 3869 : 
; 3870 :         // * DYNAMIC CLUSTER, calculate radius and position
; 3871 :         if (!Cluster.Static)

	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 3
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	$LN1@PS_Cluster

; 3872 :         {
; 3873 :             // calculate center of extreme coords
; 3874 :             XMMPos.Xmm = _mm_div_ps(_mm_add_ps(_mm_load_ps((float*)&Cluster.TLFpos), _mm_load_ps((float*)&Cluster.BRNpos)), XMMDiv.Xmm);

	mov	eax, DWORD PTR _Cluster$9[ebp]
	movaps	xmm0, XMMWORD PTR [eax+32]
	movaps	XMMWORD PTR $T2[ebp], xmm0
	mov	ecx, DWORD PTR _Cluster$9[ebp]
	movaps	xmm0, XMMWORD PTR [ecx+16]
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	addps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	divps	xmm0, XMMWORD PTR _XMMDiv$[ebp]
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _XMMPos$[ebp], xmm0

; 3875 :             // calculate the Radius
; 3876 :             XMMRadius.Xmm = _mm_sub_ps(_mm_load_ps((float*)&Cluster.TLFpos), XMMPos.Xmm);

	mov	edx, DWORD PTR _Cluster$9[ebp]
	movaps	xmm0, XMMWORD PTR [edx+16]
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	subps	xmm0, XMMWORD PTR _XMMPos$[ebp]
	movaps	XMMWORD PTR $T3[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _XMMRadius$[ebp], xmm0

; 3877 :             XMMRadius.Xmm = _mm_mul_ps(XMMRadius.Xmm, XMMRadius.Xmm);

	movaps	xmm0, XMMWORD PTR _XMMRadius$[ebp]
	mulps	xmm0, XMMWORD PTR _XMMRadius$[ebp]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	movaps	XMMWORD PTR _XMMRadius$[ebp], xmm0

; 3878 :             float Radius = sqrtf(XMMRadius.d3d.x + XMMRadius.d3d.y + XMMRadius.d3d.z);

	movss	xmm0, DWORD PTR _XMMRadius$[ebp]
	addss	xmm0, DWORD PTR _XMMRadius$[ebp+4]
	addss	xmm0, DWORD PTR _XMMRadius$[ebp+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _Radius$8[ebp]

; 3879 :             // check visibility
; 3880 :             Visibility = TheDXEngine.ComputeSphereVisibility((D3DVECTOR*)&XMMPos.d3d, &Radius);

	push	1
	lea	eax, DWORD PTR _Radius$8[ebp]
	push	eax
	lea	ecx, DWORD PTR _XMMPos$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?ComputeSphereVisibility@CDXEngine@@QAEKPAU_D3DVECTOR@@PAMK@Z ; CDXEngine::ComputeSphereVisibility
	mov	DWORD PTR _Visibility$[ebp], eax

; 3881 : #ifdef VISUALIZE_CLUSTERS
; 3882 :             Cluster.Radius = Radius;
; 3883 : #endif;
; 3884 :             // update results
; 3885 :             Cluster.In = Cluster.Out = false;

	mov	edx, DWORD PTR _Cluster$9[ebp]
	mov	al, BYTE PTR [edx+4]
	and	al, -3					; fffffffdH
	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	BYTE PTR [ecx+4], al
	mov	edx, DWORD PTR _Cluster$9[ebp]
	mov	al, BYTE PTR [edx+4]
	and	al, -5					; fffffffbH
	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	BYTE PTR [ecx+4], al

; 3886 : 
; 3887 :             if (!Visibility) Cluster.In = true;

	cmp	DWORD PTR _Visibility$[ebp], 0
	jne	SHORT $LN2@PS_Cluster
	mov	edx, DWORD PTR _Cluster$9[ebp]
	mov	al, BYTE PTR [edx+4]
	or	al, 4
	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	BYTE PTR [ecx+4], al
$LN2@PS_Cluster:

; 3888 : 
; 3889 :             if (Visibility & D3DSTATUS_DEFAULT) Cluster.Out = true;

	mov	edx, DWORD PTR _Visibility$[ebp]
	and	edx, 33550336				; 01fff000H
	je	SHORT $LN1@PS_Cluster
	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	or	cl, 2
	mov	edx, DWORD PTR _Cluster$9[ebp]
	mov	BYTE PTR [edx+4], cl
$LN1@PS_Cluster:

; 3890 :         }
; 3891 : 
; 3892 : 
; 3893 : 
; 3894 : #ifdef VISUALIZE_CLUSTERS
; 3895 : 
; 3896 :         if (!Cluster.Out) ClusterIn++;
; 3897 : 
; 3898 :         if (DrawableBSP::drawLabels)
; 3899 :         {
; 3900 :             D3DDYNVERTEX Quad[4];
; 3901 :             Quad[0].tu = Quad[0].tv = 0.0f;
; 3902 :             Quad[1].tu = Quad[1].tv = 0.0f;
; 3903 :             Quad[2].tu = Quad[2].tv = 0.0f;
; 3904 :             Quad[3].tu = Quad[3].tv = 0.0f;
; 3905 : 
; 3906 :             Quad[0].pos.x = Quad[1].pos.x = Quad[2].pos.x = Quad[3].pos.x = 0.f;
; 3907 :             Quad[0].pos.y = -Cluster.Radius;
; 3908 :             Quad[0].pos.z = -Cluster.Radius;
; 3909 :             Quad[1].pos.y = Cluster.Radius;
; 3910 :             Quad[1].pos.z = -Cluster.Radius;
; 3911 :             Quad[2].pos.y = Cluster.Radius;;
; 3912 :             Quad[2].pos.z = Cluster.Radius;
; 3913 :             Quad[3].pos.y = -Cluster.Radius;
; 3914 :             Quad[3].pos.z = Cluster.Radius;
; 3915 : 
; 3916 :             Quad[0].dwColour = Quad[1].dwColour = 0x40ff0000;
; 3917 :             Quad[2].dwColour = Quad[3].dwColour = 0x40ff0000;
; 3918 :             Quad[0].dwSpecular = Quad[1].dwSpecular = Quad[2].dwSpecular = Quad[3].dwSpecular = 0x40400000;
; 3919 :             // draw with BillBoard and declare as VISIBLE, the Visibility test was at function entry point ( DX2D_GetDistance()>0)
; 3920 :             TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_BB, (D3DXVECTOR3*)&XMMPos.d3d, Quad, Cluster.Radius, NULL);
; 3921 :         }
; 3922 : 
; 3923 : #endif
; 3924 :     }

	jmp	$LN12@PS_Cluster
$LN7@PS_Cluster:

; 3925 : 
; 3926 : 
; 3927 : #ifdef DEBUG_NEW_PS_CLUSTERS
; 3928 :     REPORT_VALUE("NEW PS CLUSTER", Count);
; 3929 : #endif
; 3930 : #ifdef VISUALIZE_CLUSTERS
; 3931 :     REPORT_VALUE("NEW PS CLUSTER IN", ClusterIn);
; 3932 : #endif
; 3933 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?PS_ClustersRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_ClustersRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_Cluster$1 = -4						; size = 4
?PS_ClustersReset@DrawableParticleSys@@CAXXZ PROC	; DrawableParticleSys::PS_ClustersReset

; 3802 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3803 :     // Get the List entry
; 3804 :     PS_PTR ptr = PS_Lists[PS_CLUSTERS_IDX].ListEntry;

	mov	eax, 28					; 0000001cH
	imul	eax, 7
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
$LN2@PS_Cluster:

; 3805 : 
; 3806 :     // thru all the list
; 3807 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN1@PS_Cluster

; 3808 :     {
; 3809 :         // Get the object
; 3810 :         ClusterPosType &Cluster = (((ClusterPosType*)PS_Lists[PS_CLUSTERS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	imul	edx, 7
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 48					; 00000030H
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Cluster$1[ebp], eax

; 3811 : 
; 3812 :         // reset values
; 3813 :         Cluster.Alive = Cluster.In = Cluster.Out = Cluster.LightIn = false;

	mov	ecx, DWORD PTR _Cluster$1[ebp]
	mov	dl, BYTE PTR [ecx+4]
	and	dl, -9					; fffffff7H
	mov	eax, DWORD PTR _Cluster$1[ebp]
	mov	BYTE PTR [eax+4], dl
	mov	ecx, DWORD PTR _Cluster$1[ebp]
	mov	dl, BYTE PTR [ecx+4]
	and	dl, -3					; fffffffdH
	mov	eax, DWORD PTR _Cluster$1[ebp]
	mov	BYTE PTR [eax+4], dl
	mov	ecx, DWORD PTR _Cluster$1[ebp]
	mov	dl, BYTE PTR [ecx+4]
	and	dl, -5					; fffffffbH
	mov	eax, DWORD PTR _Cluster$1[ebp]
	mov	BYTE PTR [eax+4], dl
	mov	ecx, DWORD PTR _Cluster$1[ebp]
	mov	dl, BYTE PTR [ecx+4]
	and	dl, -2					; fffffffeH
	mov	eax, DWORD PTR _Cluster$1[ebp]
	mov	BYTE PTR [eax+4], dl

; 3814 :         Cluster.TLFpos.d3d.x = Cluster.TLFpos.d3d.y = Cluster.TLFpos.d3d.z = -99999999999.0f;

	mov	ecx, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@d1ba43b7
	movss	DWORD PTR [ecx+24], xmm0
	mov	edx, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@d1ba43b7
	movss	DWORD PTR [edx+20], xmm0
	mov	eax, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@d1ba43b7
	movss	DWORD PTR [eax+16], xmm0

; 3815 :         *(float*)&Cluster.TLFpos.d3d.Flags = 0.0f; // Used as Radius

	mov	ecx, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+28], xmm0

; 3816 :         Cluster.BRNpos.d3d.x = Cluster.BRNpos.d3d.y = Cluster.BRNpos.d3d.z = 99999999999.0f;

	mov	edx, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@51ba43b7
	movss	DWORD PTR [edx+40], xmm0
	mov	eax, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@51ba43b7
	movss	DWORD PTR [eax+36], xmm0
	mov	ecx, DWORD PTR _Cluster$1[ebp]
	movss	xmm0, DWORD PTR __real@51ba43b7
	movss	DWORD PTR [ecx+32], xmm0

; 3817 : 
; 3818 :         ptr = Cluster.NEXT;

	mov	edx, DWORD PTR _Cluster$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _ptr$[ebp], eax

; 3819 : 
; 3820 :     }

	jmp	$LN2@PS_Cluster
$LN1@PS_Cluster:

; 3821 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_ClustersReset@DrawableParticleSys@@CAXXZ ENDP	; DrawableParticleSys::PS_ClustersReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -260						; size = 12
tv281 = -248						; size = 4
tv234 = -244						; size = 4
_HiColor$2 = -240					; size = 4
tv200 = -236						; size = 4
_LoColor$3 = -232					; size = 4
tv169 = -228						; size = 4
_alpha$4 = -224						; size = 4
tv147 = -220						; size = 4
tv263 = -216						; size = 4
_LastPtr$ = -212					; size = 4
_Life$5 = -208						; size = 4
_Distance$6 = -204					; size = 4
_LiteColor$7 = -200					; size = 4
_LightRadius$8 = -196					; size = 4
_Cluster$9 = -192					; size = 4
_ptr$ = -188						; size = 4
_size$10 = -184						; size = 4
_Light$11 = -180					; size = 4
_RotCx$12 = -176					; size = 8
_Flash$13 = -168					; size = 4
_light$ = -164						; size = 4
_ppn$14 = -160						; size = 4
_Part$15 = -156						; size = 4
_LightIn$16 = -149					; size = 1
_Poly$17 = -148						; size = 4
_Visible$18 = -141					; size = 1
$T19 = -140						; size = 12
_HifColor$ = -128					; size = 12
_Quad$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
?PS_PolyRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_PolyRun

; 2951 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 2952 : #ifdef DEBUG_NEW_PS_POLYS
; 2953 :     DWORD Count = 0;
; 2954 : #endif
; 2955 :     // Get the List entry
; 2956 :     PS_PTR ptr = PS_Lists[PS_POLYS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN46@PS_PolyRun:

; 2957 :     psRGB HifColor;
; 2958 :     float light;
; 2959 :     D3DDYNVERTEX Quad[4];
; 2960 : 
; 2961 :     // thru all the list
; 2962 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN30@PS_PolyRun

; 2963 :     {
; 2964 : #ifdef DEBUG_NEW_PS_POLYS
; 2965 :         Count++;
; 2966 : #endif;
; 2967 :         // The Poly
; 2968 :         PolySubPartType &Poly = (((PolySubPartType*)PS_Lists[PS_POLYS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 68					; 00000044H
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Poly$17[ebp], eax

; 2969 :         // Pointer to particle
; 2970 :         ParticleNodeType &Part = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[Poly.OWNER]);

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _Poly$17[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 124				; 0000007cH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Part$15[ebp], eax

; 2971 : 
; 2972 :         // If Particle already dead, end here and go to next
; 2973 :         if (!Part.Alive)

	mov	ecx, DWORD PTR _Part$15[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN29@PS_PolyRun

; 2974 :         {
; 2975 :             ptr = PS_RemoveItem(PS_POLYS_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	1
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 2976 :             continue;

	jmp	SHORT $LN46@PS_PolyRun
$LN29@PS_PolyRun:

; 2977 :         }
; 2978 : 
; 2979 :         // The Life
; 2980 :         float Life = Part.life;

	mov	eax, DWORD PTR _Part$15[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR _Life$5[ebp], xmm0

; 2981 :         // Pointer to particle parametes
; 2982 :         PS_PPType &ppn = PS_PPN[Poly.PPN];

	mov	ecx, DWORD PTR _Poly$17[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$14[ebp], edx

; 2983 : 
; 2984 :         float Distance;
; 2985 :         float size = Part.Radius;

	mov	eax, DWORD PTR _Part$15[ebp]
	movss	xmm0, DWORD PTR [eax+68]
	movss	DWORD PTR _size$10[ebp], xmm0

; 2986 : 
; 2987 :         // Default as a light is not in range, and object is Visible
; 2988 :         bool LightIn = false;

	mov	BYTE PTR _LightIn$16[ebp], 0

; 2989 :         bool Visible = true;

	mov	BYTE PTR _Visible$18[ebp], 1

; 2990 :         float LightRadius = size * LIGHT_SIZE_CX;

	movss	xmm0, DWORD PTR _size$10[ebp]
	mulss	xmm0, DWORD PTR __real@41700000
	movss	DWORD PTR _LightRadius$8[ebp], xmm0

; 2991 : 
; 2992 :         /////////////////////////////////////////// * CLUSTERING * \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 2993 :         // Check for Clustering enabled, if so
; 2994 :         // if whole cluster is OUTSIDE FOV, skip, nothing is visible
; 2995 :         // if whole cluster is INSIDE FOV, just update distance, no visibility check
; 2996 :         // if NOT FULLY INSIDE FOV, make visibility checks
; 2997 :         if (Part.Cluster)

	mov	ecx, DWORD PTR _Part$15[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 6
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	$LN28@PS_PolyRun

; 2998 :         {
; 2999 :             // The cluster assigned
; 3000 :             ClusterPosType &Cluster = ((ClusterPosType*)PS_Lists[PS_CLUSTERS_IDX].ObjectList)[Part.CLUSTER];

	mov	ecx, 28					; 0000001cH
	imul	ecx, 7
	mov	edx, DWORD PTR _Part$15[ebp]
	mov	eax, DWORD PTR [edx+8]
	imul	eax, 48					; 00000030H
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Cluster$9[ebp], eax

; 3001 : 
; 3002 :             // Update light in status if an emitting poly
; 3003 :             LightIn = Cluster.LightIn && ppn.EmitLight;

	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	dl, BYTE PTR [ecx+4]
	shl	dl, 4
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN34@PS_PolyRun
	mov	ecx, DWORD PTR _ppn$14[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	shl	dl, 6
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN34@PS_PolyRun
	mov	DWORD PTR tv147[ebp], 1
	jmp	SHORT $LN35@PS_PolyRun
$LN34@PS_PolyRun:
	mov	DWORD PTR tv147[ebp], 0
$LN35@PS_PolyRun:
	mov	cl, BYTE PTR tv147[ebp]
	mov	BYTE PTR _LightIn$16[ebp], cl

; 3004 : 
; 3005 :             // 2 cases, based on light in stuff
; 3006 :             // ************* NOT IN LIGHT RANGE *************
; 3007 :             if (!LightIn)

	movzx	edx, BYTE PTR _LightIn$16[ebp]
	test	edx, edx
	jne	$LN27@PS_PolyRun

; 3008 :             {
; 3009 :                 // Full out of FOV, skip
; 3010 :                 if (Cluster.Out) goto Skip;

	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN26@PS_PolyRun
	jmp	$LN25@PS_PolyRun
	jmp	$Skip$47
$LN26@PS_PolyRun:

; 3011 : 
; 3012 :                 // if not fully in, check for visibility
; 3013 :                 if (!Cluster.In)

	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 5
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN23@PS_PolyRun

; 3014 :                     if (!TheDXEngine.DX2D_GetVisibility((D3DXVECTOR3*) &Part.pos, (ppn.EmitLight) ? size : LightRadius)) goto Skip;

	mov	eax, DWORD PTR _ppn$14[ebp]
	mov	cl, BYTE PTR [eax+5548]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN36@PS_PolyRun
	movss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR tv169[ebp], xmm0
	jmp	SHORT $LN37@PS_PolyRun
$LN36@PS_PolyRun:
	movss	xmm0, DWORD PTR _LightRadius$8[ebp]
	movss	DWORD PTR tv169[ebp], xmm0
$LN37@PS_PolyRun:
	push	0
	push	ecx
	movss	xmm0, DWORD PTR tv169[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Part$15[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetVisibility@CDXEngine@@QAE_NPAUD3DXVECTOR3@@MK@Z ; CDXEngine::DX2D_GetVisibility
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN23@PS_PolyRun
	jmp	$LN22@PS_PolyRun
	jmp	$Skip$47
$LN23@PS_PolyRun:

; 3015 : 
; 3016 :                 // Ok, if here, it's in, compute distance
; 3017 :                 Distance = TheDXEngine.DX2D_GetDistance((D3DXVECTOR3*)&Part.pos);

	push	0
	mov	edx, DWORD PTR _Part$15[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR _Distance$6[ebp]

; 3018 :             }
; 3019 :             // ************ LIGHT IN RANGE **************
; 3020 :             else

	jmp	$LN17@PS_PolyRun
$LN27@PS_PolyRun:

; 3021 :             {
; 3022 :                 // Full out of FOV, mark as not visible
; 3023 :                 if (Cluster.Out) Visible = false;

	mov	eax, DWORD PTR _Cluster$9[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN20@PS_PolyRun
	mov	BYTE PTR _Visible$18[ebp], 0
$LN20@PS_PolyRun:

; 3024 : 
; 3025 :                 // if not fully in but visible, check for visibility
; 3026 :                 if (Visible && !Cluster.In)

	movzx	eax, BYTE PTR _Visible$18[ebp]
	test	eax, eax
	je	$LN18@PS_PolyRun
	mov	ecx, DWORD PTR _Cluster$9[ebp]
	mov	dl, BYTE PTR [ecx+4]
	shl	dl, 5
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN18@PS_PolyRun

; 3027 :                     if (!TheDXEngine.DX2D_GetVisibility((D3DXVECTOR3*) &Part.pos, (ppn.EmitLight) ? size : LightRadius)) Visible = false;

	mov	ecx, DWORD PTR _ppn$14[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	shl	dl, 6
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN38@PS_PolyRun
	movss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR tv200[ebp], xmm0
	jmp	SHORT $LN39@PS_PolyRun
$LN38@PS_PolyRun:
	movss	xmm0, DWORD PTR _LightRadius$8[ebp]
	movss	DWORD PTR tv200[ebp], xmm0
$LN39@PS_PolyRun:
	push	0
	push	ecx
	movss	xmm0, DWORD PTR tv200[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Part$15[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetVisibility@CDXEngine@@QAE_NPAUD3DXVECTOR3@@MK@Z ; CDXEngine::DX2D_GetVisibility
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN18@PS_PolyRun
	mov	BYTE PTR _Visible$18[ebp], 0
$LN18@PS_PolyRun:

; 3028 : 
; 3029 :                 // if still visible, compute distance
; 3030 :                 if (Visible) Distance = TheDXEngine.DX2D_GetDistance((D3DXVECTOR3*)&Part.pos);

	movzx	eax, BYTE PTR _Visible$18[ebp]
	test	eax, eax
	je	SHORT $LN17@PS_PolyRun
	push	0
	mov	ecx, DWORD PTR _Part$15[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR _Distance$6[ebp]
$LN17@PS_PolyRun:

; 3031 : 
; 3032 :             }
; 3033 :         }
; 3034 :         else

	jmp	$LN11@PS_PolyRun
$LN28@PS_PolyRun:

; 3035 :         {
; 3036 :             // CLUSTER NOT USED, ALWAYS PERFORM VISIBILITY CHECK
; 3037 :             // Get the Distance
; 3038 :             Distance = TheDXEngine.DX2D_GetDistance((D3DXVECTOR3*)&Part.pos);

	push	0
	mov	edx, DWORD PTR _Part$15[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR _Distance$6[ebp]

; 3039 : 
; 3040 :             // if out of Distance, end here
; 3041 :             if (Distance > ppn.visibleDistance) goto Skip;

	mov	eax, DWORD PTR _ppn$14[ebp]
	movss	xmm0, DWORD PTR _Distance$6[ebp]
	comiss	xmm0, DWORD PTR [eax+1664]
	jbe	SHORT $LN15@PS_PolyRun
	jmp	$LN14@PS_PolyRun
	jmp	$Skip$47
$LN15@PS_PolyRun:

; 3042 : 
; 3043 :             // Update light in parameter if an emissive poly
; 3044 :             if (ppn.EmitLight && Distance < LightRadius) LightIn = true;

	mov	ecx, DWORD PTR _ppn$14[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	shl	dl, 6
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN13@PS_PolyRun
	movss	xmm0, DWORD PTR _LightRadius$8[ebp]
	comiss	xmm0, DWORD PTR _Distance$6[ebp]
	jbe	SHORT $LN13@PS_PolyRun
	mov	BYTE PTR _LightIn$16[ebp], 1
$LN13@PS_PolyRun:

; 3045 : 
; 3046 :             // Perform visibility check
; 3047 :             if (!TheDXEngine.DX2D_GetVisibility((D3DXVECTOR3*) &Part.pos, (ppn.EmitLight) ? size : LightRadius)) Visible = false;

	mov	ecx, DWORD PTR _ppn$14[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	shl	dl, 6
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN40@PS_PolyRun
	movss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR tv234[ebp], xmm0
	jmp	SHORT $LN41@PS_PolyRun
$LN40@PS_PolyRun:
	movss	xmm0, DWORD PTR _LightRadius$8[ebp]
	movss	DWORD PTR tv234[ebp], xmm0
$LN41@PS_PolyRun:
	push	0
	push	ecx
	movss	xmm0, DWORD PTR tv234[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Part$15[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetVisibility@CDXEngine@@QAE_NPAUD3DXVECTOR3@@MK@Z ; CDXEngine::DX2D_GetVisibility
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN12@PS_PolyRun
	mov	BYTE PTR _Visible$18[ebp], 0
$LN12@PS_PolyRun:

; 3048 : 
; 3049 :             // skip all if not visible and not even in light range
; 3050 :             if (!Visible && !LightIn) goto Skip;

	movzx	eax, BYTE PTR _Visible$18[ebp]
	test	eax, eax
	jne	SHORT $LN11@PS_PolyRun
	movzx	ecx, BYTE PTR _LightIn$16[ebp]
	test	ecx, ecx
	jne	SHORT $LN11@PS_PolyRun
	jmp	$LN10@PS_PolyRun
	jmp	$Skip$47
$LN11@PS_PolyRun:

; 3051 :         }
; 3052 : 
; 3053 :         /////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 3054 : 
; 3055 : 
; 3056 :         ////////////////////////////////// * UPDATE START * \\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 3057 :         // 1st of all, Update colors, as, even if poly is not visible, they may affect any light
; 3058 :         // and processor may be here just as a 'Light In Range' is present
; 3059 : 
; 3060 :         light = PS_EvalTimedFloat(Life, Poly.LightStage, ppn.lightStages, ppn.light);

	mov	edx, DWORD PTR _ppn$14[ebp]
	add	edx, 424				; 000001a8H
	push	edx
	mov	eax, DWORD PTR _ppn$14[ebp]
	mov	ecx, DWORD PTR [eax+420]
	push	ecx
	mov	edx, DWORD PTR _Poly$17[ebp]
	add	edx, 20					; 00000014H
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _Life$5[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _light$[ebp]

; 3061 :         HifColor = PS_EvalTimedRGB(Life, Poly.ColorStage, ppn.colorStages, ppn.color);

	mov	eax, DWORD PTR _ppn$14[ebp]
	add	eax, 100				; 00000064H
	push	eax
	mov	ecx, DWORD PTR _ppn$14[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	mov	eax, DWORD PTR _Poly$17[ebp]
	add	eax, 16					; 00000010H
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _Life$5[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?PS_EvalTimedRGB@DrawableParticleSys@@CA?AUpsRGB@@MAAHHPAUtimedRGB@@@Z ; DrawableParticleSys::PS_EvalTimedRGB
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T19[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T19[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T19[ebp+8], edx
	mov	eax, DWORD PTR $T19[ebp]
	mov	DWORD PTR _HifColor$[ebp], eax
	mov	ecx, DWORD PTR $T19[ebp+4]
	mov	DWORD PTR _HifColor$[ebp+4], ecx
	mov	edx, DWORD PTR $T19[ebp+8]
	mov	DWORD PTR _HifColor$[ebp+8], edx

; 3062 : 
; 3063 :         // Flash value goes from 0.5 to 1.0
; 3064 :         float Flash = (max(light, 0.5f) - 0.5f);

	movss	xmm0, DWORD PTR _light$[ebp]
	comiss	xmm0, DWORD PTR __real@3f000000
	jbe	SHORT $LN42@PS_PolyRun
	movss	xmm0, DWORD PTR _light$[ebp]
	movss	DWORD PTR tv263[ebp], xmm0
	jmp	SHORT $LN43@PS_PolyRun
$LN42@PS_PolyRun:
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv263[ebp], xmm0
$LN43@PS_PolyRun:
	movss	xmm0, DWORD PTR tv263[ebp]
	subss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _Flash$13[ebp], xmm0

; 3065 :         // Subract from Light the Flash value
; 3066 :         light = (light - Flash) * 2;

	movss	xmm0, DWORD PTR _light$[ebp]
	subss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _light$[ebp], xmm0

; 3067 :         DWORD LiteColor;
; 3068 : 
; 3069 :         if (PS_NVG || PS_TV)

	movzx	eax, BYTE PTR ?PS_NVG@DrawableParticleSys@@0_NA ; DrawableParticleSys::PS_NVG
	test	eax, eax
	jne	SHORT $LN8@PS_PolyRun
	movzx	ecx, BYTE PTR ?PS_TV@DrawableParticleSys@@0_NA ; DrawableParticleSys::PS_TV
	test	ecx, ecx
	je	$LN9@PS_PolyRun
$LN8@PS_PolyRun:

; 3070 :         {
; 3071 :             // NVG View
; 3072 :             HifColor.r = HifColor.r * PS_HiLightCx.r;

	movss	xmm0, DWORD PTR _HifColor$[ebp]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	movss	DWORD PTR _HifColor$[ebp], xmm0

; 3073 :             HifColor.g = HifColor.g * PS_HiLightCx.g;

	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	movss	DWORD PTR _HifColor$[ebp+4], xmm0

; 3074 :             HifColor.b = HifColor.b * PS_HiLightCx.b;

	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	movss	DWORD PTR _HifColor$[ebp+8], xmm0

; 3075 :             Flash = min(255.0f, Flash * 768.0f);

	movss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@44400000
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN44@PS_PolyRun
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv281[ebp], xmm0
	jmp	SHORT $LN45@PS_PolyRun
$LN44@PS_PolyRun:
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@44400000
	movss	DWORD PTR tv281[ebp], xmm0
$LN45@PS_PolyRun:
	movss	xmm0, DWORD PTR tv281[ebp]
	movss	DWORD PTR _Flash$13[ebp], xmm0

; 3076 :             LiteColor = F_TO_UARGB(1.0f, Flash * .90f,  Flash,  Flash * .95f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@3f666666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@3f733333
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _LiteColor$7[ebp], esi

; 3077 :         }
; 3078 :         else

	jmp	$LN7@PS_PolyRun
$LN9@PS_PolyRun:

; 3079 :         {
; 3080 :             // NORMAL VIEW
; 3081 :             Flash *= 255.9f;

	movss	xmm0, DWORD PTR _Flash$13[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	movss	DWORD PTR _Flash$13[ebp], xmm0

; 3082 :             LiteColor = F_TO_UARGB(1.0f, Flash,  Flash,  Flash);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _Flash$13[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _LiteColor$7[ebp], esi

; 3083 :             HifColor.r = (HifColor.r - HifColor.r * light) * PS_HiLightCx.r + HifColor.r * light;

	movss	xmm0, DWORD PTR _HifColor$[ebp]
	mulss	xmm0, DWORD PTR _light$[ebp]
	movss	xmm1, DWORD PTR _HifColor$[ebp]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	movss	xmm0, DWORD PTR _HifColor$[ebp]
	mulss	xmm0, DWORD PTR _light$[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _HifColor$[ebp], xmm1

; 3084 :             HifColor.g = (HifColor.g - HifColor.g * light) * PS_HiLightCx.g + HifColor.g * light;

	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	mulss	xmm0, DWORD PTR _light$[ebp]
	movss	xmm1, DWORD PTR _HifColor$[ebp+4]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	mulss	xmm0, DWORD PTR _light$[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _HifColor$[ebp+4], xmm1

; 3085 :             HifColor.b = (HifColor.b - HifColor.b * light) * PS_HiLightCx.b + HifColor.b * light;

	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	mulss	xmm0, DWORD PTR _light$[ebp]
	movss	xmm1, DWORD PTR _HifColor$[ebp+8]
	subss	xmm1, xmm0
	mulss	xmm1, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	mulss	xmm0, DWORD PTR _light$[ebp]
	addss	xmm1, xmm0
	movss	DWORD PTR _HifColor$[ebp+8], xmm1
$LN7@PS_PolyRun:

; 3086 :         }
; 3087 : 
; 3088 :         // if a light assigned
; 3089 :         if (ppn.EmitLight && Part.LIGHT != PS_NOPTR)

	mov	edx, DWORD PTR _ppn$14[ebp]
	mov	al, BYTE PTR [edx+5548]
	shl	al, 6
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@PS_PolyRun
	mov	edx, DWORD PTR _Part$15[ebp]
	cmp	DWORD PTR [edx+12], -1
	je	$LN5@PS_PolyRun

; 3090 :         {
; 3091 :             LightPartType &Light = (((LightPartType*)PS_Lists[PS_LIGHTS_IDX].ObjectList)[Part.LIGHT]);

	mov	eax, 28					; 0000001cH
	shl	eax, 2
	mov	ecx, DWORD PTR _Part$15[ebp]
	mov	edx, DWORD PTR [ecx+12]
	imul	edx, 44					; 0000002cH
	add	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _Light$11[ebp], edx

; 3092 :             Light.Alive = true;

	mov	eax, DWORD PTR _Light$11[ebp]
	mov	cl, BYTE PTR [eax+28]
	or	cl, 1
	mov	edx, DWORD PTR _Light$11[ebp]
	mov	BYTE PTR [edx+28], cl

; 3093 : 
; 3094 :             // if this light more intense
; 3095 :             if (Light.Light < light)

	mov	eax, DWORD PTR _Light$11[ebp]
	movss	xmm0, DWORD PTR _light$[ebp]
	comiss	xmm0, DWORD PTR [eax+20]
	jbe	$LN5@PS_PolyRun

; 3096 :             {
; 3097 :                 Light.Radius = LightRadius * light;

	movss	xmm0, DWORD PTR _LightRadius$8[ebp]
	mulss	xmm0, DWORD PTR _light$[ebp]
	mov	ecx, DWORD PTR _Light$11[ebp]
	movss	DWORD PTR [ecx+24], xmm0

; 3098 :                 Light.Color.r = HifColor.r * HifColor.r / 65536.0f;

	movss	xmm0, DWORD PTR _HifColor$[ebp]
	mulss	xmm0, DWORD PTR _HifColor$[ebp]
	divss	xmm0, DWORD PTR __real@47800000
	mov	edx, DWORD PTR _Light$11[ebp]
	movss	DWORD PTR [edx+4], xmm0

; 3099 :                 Light.Color.g = HifColor.g * HifColor.g / 65536.0f;

	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	mulss	xmm0, DWORD PTR _HifColor$[ebp+4]
	divss	xmm0, DWORD PTR __real@47800000
	mov	eax, DWORD PTR _Light$11[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 3100 :                 Light.Color.b = HifColor.b * HifColor.b / 65536.0f;

	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	mulss	xmm0, DWORD PTR _HifColor$[ebp+8]
	divss	xmm0, DWORD PTR __real@47800000
	mov	ecx, DWORD PTR _Light$11[ebp]
	movss	DWORD PTR [ecx+12], xmm0

; 3101 :                 Light.Light = light;

	mov	edx, DWORD PTR _Light$11[ebp]
	movss	xmm0, DWORD PTR _light$[ebp]
	movss	DWORD PTR [edx+20], xmm0

; 3102 :                 Light.Pos = Part.pos;

	mov	eax, DWORD PTR _Part$15[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _Light$11[ebp]
	add	ecx, 32					; 00000020H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
$LN5@PS_PolyRun:

; 3103 :             }
; 3104 :         }
; 3105 : 
; 3106 :         // ok, if not visible, skip all the rest
; 3107 :         if (!Visible) goto Skip;

	movzx	ecx, BYTE PTR _Visible$18[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@PS_PolyRun
	jmp	$LN3@PS_PolyRun
	jmp	$Skip$47
$LN4@PS_PolyRun:

; 3108 : 
; 3109 :         // compute Alpha of the Poly
; 3110 :         float alpha = PS_EvalTimedLinLogFloat(Life, Poly.AlphaStage, ppn.alphaStages, ppn.alpha);

	mov	edx, DWORD PTR _ppn$14[ebp]
	add	edx, 756				; 000002f4H
	push	edx
	mov	eax, DWORD PTR _ppn$14[ebp]
	mov	ecx, DWORD PTR [eax+752]
	push	ecx
	mov	edx, DWORD PTR _Poly$17[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _Life$5[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedLinLogFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _alpha$4[ebp]

; 3111 : 
; 3112 :         DWORD HiColor = F_TO_UARGB(alpha, HifColor.r, HifColor.g, HifColor.b);

	push	ecx
	movss	xmm0, DWORD PTR _alpha$4[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _HifColor$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _HiColor$2[ebp], esi

; 3113 :         DWORD LoColor = F_TO_UARGB(alpha, HifColor.r * .68f, HifColor.g * .68f, HifColor.b * .68f);

	push	ecx
	movss	xmm0, DWORD PTR _alpha$4[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR _HifColor$[ebp]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR _HifColor$[ebp+4]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR _HifColor$[ebp+8]
	mulss	xmm0, DWORD PTR __real@3f2e147b
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR _LoColor$3[ebp], esi

; 3114 : 
; 3115 :         // Rotation stuff
; 3116 :         Poly.Rotation += Poly.RotationRate * PS_ElapsedTime;

	mov	eax, DWORD PTR _Poly$17[ebp]
	movss	xmm0, DWORD PTR [eax+64]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	ecx, DWORD PTR _Poly$17[ebp]
	addss	xmm0, DWORD PTR [ecx+60]
	mov	edx, DWORD PTR _Poly$17[ebp]
	movss	DWORD PTR [edx+60], xmm0

; 3117 : 
; 3118 :         Quad[0].dwColour = Quad[1].dwColour = HiColor;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _HiColor$2[ebp]
	mov	DWORD PTR _Quad$[ebp+eax+12], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _HiColor$2[ebp]
	mov	DWORD PTR _Quad$[ebp+edx+12], eax

; 3119 :         Quad[2].dwColour = Quad[3].dwColour = LoColor;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	edx, DWORD PTR _LoColor$3[ebp]
	mov	DWORD PTR _Quad$[ebp+ecx+12], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _LoColor$3[ebp]
	mov	DWORD PTR _Quad$[ebp+eax+12], ecx

; 3120 :         Quad[0].dwSpecular = Quad[1].dwSpecular = Quad[2].dwSpecular = Quad[3].dwSpecular = LiteColor;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR _LiteColor$7[ebp]
	mov	DWORD PTR _Quad$[ebp+edx+16], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _LiteColor$7[ebp]
	mov	DWORD PTR _Quad$[ebp+ecx+16], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _LiteColor$7[ebp]
	mov	DWORD PTR _Quad$[ebp+eax+16], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _LiteColor$7[ebp]
	mov	DWORD PTR _Quad$[ebp+edx+16], eax

; 3121 : 
; 3122 :         // Assign drawing data
; 3123 :         Quad[0].tu = Poly.tu[0], Quad[0].tv = Poly.tv[0];

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _Poly$17[ebp]
	mov	ecx, DWORD PTR [eax+ecx+28]
	mov	DWORD PTR _Quad$[ebp+edx+20], ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _Poly$17[ebp]
	mov	edx, DWORD PTR [ecx+edx+44]
	mov	DWORD PTR _Quad$[ebp+eax+24], edx

; 3124 :         Quad[1].tu = Poly.tu[1], Quad[1].tv = Poly.tv[1];

	mov	eax, 4
	shl	eax, 0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _Poly$17[ebp]
	mov	eax, DWORD PTR [edx+eax+28]
	mov	DWORD PTR _Quad$[ebp+ecx+20], eax
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR _Poly$17[ebp]
	mov	ecx, DWORD PTR [eax+ecx+44]
	mov	DWORD PTR _Quad$[ebp+edx+24], ecx

; 3125 :         Quad[2].tu = Poly.tu[2], Quad[2].tv = Poly.tv[2];

	mov	edx, 4
	shl	edx, 1
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _Poly$17[ebp]
	mov	edx, DWORD PTR [ecx+edx+28]
	mov	DWORD PTR _Quad$[ebp+eax+20], edx
	mov	eax, 4
	shl	eax, 1
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _Poly$17[ebp]
	mov	eax, DWORD PTR [edx+eax+44]
	mov	DWORD PTR _Quad$[ebp+ecx+24], eax

; 3126 :         Quad[3].tu = Poly.tu[3], Quad[3].tv = Poly.tv[3];

	mov	ecx, 4
	imul	ecx, 3
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR _Poly$17[ebp]
	mov	ecx, DWORD PTR [eax+ecx+28]
	mov	DWORD PTR _Quad$[ebp+edx+20], ecx
	mov	edx, 4
	imul	edx, 3
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _Poly$17[ebp]
	mov	edx, DWORD PTR [ecx+edx+44]
	mov	DWORD PTR _Quad$[ebp+eax+24], edx

; 3127 : 
; 3128 :         // COBRA - RED - Rotation, get the radius and angle
; 3129 :         mlTrig RotCx;
; 3130 :         mlSinCos(&RotCx, Poly.Rotation);

	mov	eax, DWORD PTR _Poly$17[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _RotCx$12[ebp]
	push	ecx
	call	?mlSinCos@@YAXPAUmlTrig@@M@Z		; mlSinCos
	add	esp, 8

; 3131 :         RotCx.cos *= size;

	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	mulss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR _RotCx$12[ebp+4], xmm0

; 3132 :         RotCx.sin *= size;

	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	mulss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR _RotCx$12[ebp], xmm0

; 3133 : 
; 3134 :         if (ppn.ZPoly)

	mov	edx, DWORD PTR _ppn$14[ebp]
	mov	al, BYTE PTR [edx+5548]
	shl	al, 7
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	je	$LN2@PS_PolyRun

; 3135 :         {
; 3136 :             Quad[0].pos.z = Quad[1].pos.z = Quad[2].pos.z = Quad[3].pos.z = 0.f;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 3137 :             Quad[0].pos.y = RotCx.cos;

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0

; 3138 :             Quad[0].pos.x = RotCx.sin;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0

; 3139 :             Quad[1].pos.y = RotCx.sin;

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0

; 3140 :             Quad[1].pos.x = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	DWORD PTR _Quad$[ebp+eax], xmm0

; 3141 :             Quad[2].pos.y = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0

; 3142 :             Quad[2].pos.x = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	DWORD PTR _Quad$[ebp+edx], xmm0

; 3143 :             Quad[3].pos.y = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0

; 3144 :             Quad[3].pos.x = RotCx.cos;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0

; 3145 :             // draw and declare as VISIBLE, the Visibility test was at function entry point ( DX2D_GetDistance()>0)
; 3146 :             TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_VISIBLE, (D3DXVECTOR3*)&Part.pos, Quad, size, Poly.TexHandle);

	mov	edx, DWORD PTR _Poly$17[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Quad$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Part$15[ebp]
	add	edx, 56					; 00000038H
	push	edx
	push	4
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad

; 3147 :         }
; 3148 :         else

	jmp	$LN1@PS_PolyRun
$LN2@PS_PolyRun:

; 3149 :         {
; 3150 :             Quad[0].pos.x = Quad[1].pos.x = Quad[2].pos.x = Quad[3].pos.x = 0.f;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0

; 3151 :             Quad[0].pos.y = RotCx.cos;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0

; 3152 :             Quad[0].pos.z = RotCx.sin;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 3153 :             Quad[1].pos.y = RotCx.sin;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0

; 3154 :             Quad[1].pos.z = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0

; 3155 :             Quad[2].pos.y = -RotCx.cos;

	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0

; 3156 :             Quad[2].pos.z = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 3157 :             Quad[3].pos.y = -RotCx.sin;

	movss	xmm0, DWORD PTR _RotCx$12[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0

; 3158 :             Quad[3].pos.z = RotCx.cos;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR _RotCx$12[ebp+4]
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 3159 : 
; 3160 :             // draw with BillBoard and declare as VISIBLE, the Visibility test was at function entry point ( DX2D_GetDistance()>0)
; 3161 :             TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_BB | POLY_VISIBLE, (D3DXVECTOR3*)&Part.pos, Quad, size, Poly.TexHandle);

	mov	eax, DWORD PTR _Poly$17[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _size$10[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	mov	eax, DWORD PTR _Part$15[ebp]
	add	eax, 56					; 00000038H
	push	eax
	push	5
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad
$LN1@PS_PolyRun:
$LN3@PS_PolyRun:
$LN10@PS_PolyRun:
$LN14@PS_PolyRun:
$LN22@PS_PolyRun:
$LN25@PS_PolyRun:
$Skip$47:

; 3162 :         }
; 3163 : 
; 3164 :         Skip:
; 3165 :         LastPtr = ptr;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], ecx

; 3166 :         ptr = Poly.NEXT;

	mov	edx, DWORD PTR _Poly$17[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _ptr$[ebp], eax

; 3167 :     }

	jmp	$LN46@PS_PolyRun
$LN30@PS_PolyRun:

; 3168 : 
; 3169 : #ifdef DEBUG_NEW_PS_POLYS
; 3170 :     REPORT_VALUE("NEW PS POLYS", Count);
; 3171 : #endif
; 3172 : 
; 3173 : 
; 3174 : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PS_PolyRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_PolyRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv249 = -28						; size = 4
tv240 = -24						; size = 4
tv184 = -20						; size = 4
_ptr$ = -16						; size = 4
_ppn$ = -12						; size = 4
_pt$ = -8						; size = 4
_pn$ = -4						; size = 4
_owner$ = 8						; size = 4
_ID$ = 12						; size = 4
?PS_AddPoly@DrawableParticleSys@@CAXKK@Z PROC		; DrawableParticleSys::PS_AddPoly

; 2898 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 2899 :     // Get a free slot
; 2900 :     PS_PTR ptr = PS_AddItem(PS_POLYS_IDX);

	push	1
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _ptr$[ebp], eax

; 2901 : 
; 2902 :     // security check
; 2903 :     if (ptr == PS_NOPTR) return;

	cmp	DWORD PTR _ptr$[ebp], -1
	jne	SHORT $LN3@PS_AddPoly
	jmp	$LN4@PS_AddPoly
$LN3@PS_AddPoly:

; 2904 : 
; 2905 :     // Get the pointer in the list
; 2906 :     PolySubPartType &pn = (((PolySubPartType*)PS_Lists[PS_POLYS_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _ptr$[ebp]
	imul	ecx, 68					; 00000044H
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _pn$[ebp], ecx

; 2907 :     // the owner
; 2908 :     pn.OWNER = owner;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	eax, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [edx+4], eax

; 2909 :     // The assigned Particle Node Parameter
; 2910 :     pn.PPN = ID;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 2911 :     // last in List
; 2912 :     pn.NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax], -1

; 2913 : 
; 2914 :     // Pointer to particle parametes
; 2915 :     PS_PPType &ppn = PS_PPN[ID];

	mov	ecx, DWORD PTR _ID$[ebp]
	imul	ecx, 5560				; 000015b8H
	add	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$[ebp], ecx

; 2916 :     // Ok, setup the parameters
; 2917 : 
; 2918 :     // initialize variables
; 2919 :     pn.AlphaStage = pn.ColorStage = pn.LightStage = 0;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 2920 : 
; 2921 :     // Link here the Texture and get its U/V Coord
; 2922 :     ParticleTextureNode *pt = ppn.Texture;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+5508]
	mov	DWORD PTR _pt$[ebp], eax

; 2923 : 
; 2924 :     // check if depending on group texture
; 2925 :     if (ppn.GroupFlags & GRP_TEXTURE)

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	and	edx, 1
	je	SHORT $LN2@PS_AddPoly

; 2926 :         // if depending from a group, ask for a random texture node
; 2927 :         pt = (ParticleTextureNode*)(((ParticleGroupNode*)(ppn.Texture))->GetRandomArgument());

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+5508]
	call	?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ ; ParticleGroupNode::GetRandomArgument
	mov	DWORD PTR _pt$[ebp], eax
$LN2@PS_AddPoly:

; 2928 : 
; 2929 :     if (pt)

	cmp	DWORD PTR _pt$[ebp], 0
	je	$LN1@PS_AddPoly

; 2930 :     {
; 2931 :         // use the PPN texture node
; 2932 :         pn.TexHandle = pt->TexHandle;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _pt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+24], eax

; 2933 :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 0, pn.tu[0], pn.tv[0]);

	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _pn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+44]
	push	eax
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _pn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+28]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 2934 :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 1, pn.tu[1], pn.tv[1]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _pn$[ebp]
	lea	edx, DWORD PTR [ecx+eax+44]
	push	edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _pn$[ebp]
	lea	edx, DWORD PTR [ecx+eax+28]
	push	edx
	push	1
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 2935 :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 2, pn.tu[2], pn.tv[2]);

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _pn$[ebp]
	lea	ecx, DWORD PTR [eax+edx+44]
	push	ecx
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _pn$[ebp]
	lea	ecx, DWORD PTR [eax+edx+28]
	push	ecx
	push	2
	mov	edx, DWORD PTR _pt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 2936 :         TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 3, pn.tu[3], pn.tv[3]);

	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _pn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+44]
	push	eax
	mov	ecx, 4
	imul	ecx, 3
	mov	edx, DWORD PTR _pn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+28]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV
$LN1@PS_AddPoly:

; 2937 :     }
; 2938 : 
; 2939 :     // reset rotation
; 2940 :     pn.Rotation = 0.0f;

	mov	eax, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+60], xmm0

; 2941 :     // Randomic rate btw Max and Min
; 2942 :     pn.RotationRate = (PRANDFloatPos() * (ppn.RotationRateMax - ppn.RotationRateMin) + ppn.RotationRateMin);

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv240[ebp]
	movss	xmm0, DWORD PTR tv240[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [ecx+5540]
	subss	xmm1, DWORD PTR [edx+5536]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR _ppn$[ebp]
	addss	xmm0, DWORD PTR [eax+5536]
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [ecx+64], xmm0

; 2943 :     // randomic Sign
; 2944 :     pn.RotationRate *= (PRANDFloat() >= 0.0f) ? 1.0f : -1.0f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv249[ebp]
	movss	xmm0, DWORD PTR tv249[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN6@PS_AddPoly
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv184[ebp], xmm0
	jmp	SHORT $LN7@PS_AddPoly
$LN6@PS_AddPoly:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv184[ebp], xmm0
$LN7@PS_AddPoly:
	mov	edx, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR [edx+64]
	mulss	xmm0, DWORD PTR tv184[ebp]
	mov	eax, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [eax+64], xmm0
$LN4@PS_AddPoly:

; 2945 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_AddPoly@DrawableParticleSys@@CAXKK@Z ENDP		; DrawableParticleSys::PS_AddPoly
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_k$1 = -28						; size = 12
_Distance$2 = -16					; size = 4
_LastPtr$ = -12						; size = 4
_ptr$ = -8						; size = 4
_Light$3 = -4						; size = 4
?PS_LightsRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_LightsRun

; 2841 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 2842 : #ifdef DEBUG_NEW_PS_LIGHTS
; 2843 :     DWORD Count = 0;
; 2844 : #endif
; 2845 :     // Get the List entry
; 2846 :     PS_PTR ptr = PS_Lists[PS_LIGHTS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	shl	eax, 2
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN7@PS_LightsR:

; 2847 : 
; 2848 : 
; 2849 :     // thru all the list
; 2850 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN3@PS_LightsR

; 2851 :     {
; 2852 : #ifdef DEBUG_NEW_PS_LIGHTS
; 2853 :         Count++;
; 2854 : #endif;
; 2855 :         // The Poly
; 2856 :         LightPartType &Light = (((LightPartType*)PS_Lists[PS_LIGHTS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	shl	edx, 2
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 44					; 0000002cH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Light$3[ebp], eax

; 2857 : 
; 2858 :         // If Particle already dead, end here and go to next
; 2859 :         if (!Light.Alive)

	mov	ecx, DWORD PTR _Light$3[ebp]
	mov	dl, BYTE PTR [ecx+28]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN2@PS_LightsR

; 2860 :         {
; 2861 :             ptr = PS_RemoveItem(PS_LIGHTS_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	4
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 2862 :             continue;

	jmp	SHORT $LN7@PS_LightsR
$LN2@PS_LightsR:

; 2863 :         }
; 2864 : 
; 2865 :         // if a light value present
; 2866 :         if (Light.Light)

	mov	eax, DWORD PTR _Light$3[ebp]
	movss	xmm0, DWORD PTR [eax+20]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN1@PS_LightsR

; 2867 :         {
; 2868 :             float Distance = TheDXEngine.DX2D_GetDistance((D3DXVECTOR3*)&Light.Pos);

	push	0
	mov	ecx, DWORD PTR _Light$3[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR _Distance$2[ebp]

; 2869 :             D3DXVECTOR3 k;

	lea	ecx, DWORD PTR _k$1[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 2870 :             TheDXEngine.DX2D_GetRelativePosition(&k);

	lea	edx, DWORD PTR _k$1[ebp]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetRelativePosition@CDXEngine@@QAEXPAUD3DXVECTOR3@@@Z ; CDXEngine::DX2D_GetRelativePosition

; 2871 :             PS_Light.Light.dcvDiffuse = Light.Color;

	mov	eax, DWORD PTR _Light$3[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+20, ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+24, edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+28, ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+32, edx

; 2872 :             PS_Light.Light.dvRange = Light.Radius;

	mov	eax, DWORD PTR _Light$3[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+92, xmm0

; 2873 :             PS_Light.Light.dvAttenuation1 = 20.0f / Light.Radius;

	mov	ecx, DWORD PTR _Light$3[ebp]
	movss	xmm0, DWORD PTR __real@41a00000
	divss	xmm0, DWORD PTR [ecx+24]
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+104, xmm0

; 2874 :             TheLightEngine.AddDynamicLight(-1, &PS_Light, &PS_LightRot, (D3DVECTOR*)&k, Distance);

	push	ecx
	movss	xmm0, DWORD PTR _Distance$2[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _k$1[ebp]
	push	edx
	push	OFFSET ?PS_LightRot@@3UD3DXMATRIX@@A	; PS_LightRot
	push	OFFSET ?PS_Light@@3UDXLightType@@A	; PS_Light
	push	-1
	mov	ecx, OFFSET ?TheLightEngine@@3VCDXLight@@A ; TheLightEngine
	call	?AddDynamicLight@CDXLight@@QAEKKPAUDXLightType@@PAUD3DXMATRIX@@PAU_D3DVECTOR@@M@Z ; CDXLight::AddDynamicLight
$LN1@PS_LightsR:

; 2875 :         }
; 2876 : 
; 2877 :         Light.Alive = false;

	mov	eax, DWORD PTR _Light$3[ebp]
	mov	cl, BYTE PTR [eax+28]
	and	cl, -2					; fffffffeH
	mov	edx, DWORD PTR _Light$3[ebp]
	mov	BYTE PTR [edx+28], cl

; 2878 :         Light.Light = 0;

	mov	eax, DWORD PTR _Light$3[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+20], xmm0

; 2879 : 
; 2880 :         LastPtr = ptr;

	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], ecx

; 2881 :         ptr = Light.NEXT;

	mov	edx, DWORD PTR _Light$3[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _ptr$[ebp], eax

; 2882 :     }

	jmp	$LN7@PS_LightsR
$LN3@PS_LightsR:

; 2883 : 
; 2884 : #ifdef DEBUG_NEW_PS_LIGHTS
; 2885 :     REPORT_VALUE("NEW PS LIGHTS", Count);
; 2886 : #endif
; 2887 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_LightsRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_LightsRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_SndPitch$ = -32					; size = 4
_SndVol$ = -28						; size = 4
_Life$1 = -24						; size = 4
_LastPtr$ = -20						; size = 4
_ppn$2 = -16						; size = 4
_ptr$ = -12						; size = 4
_Part$3 = -8						; size = 4
_Sound$4 = -4						; size = 4
?PS_SoundRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_SoundRun

; 2778 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2779 : #ifdef DEBUG_NEW_PS_SOUNDS
; 2780 :     DWORD Count = 0;
; 2781 : #endif
; 2782 :     // Get the List entry
; 2783 :     PS_PTR ptr = PS_Lists[PS_SOUNDS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN9@PS_SoundRu:

; 2784 : 
; 2785 :     float SndVol, SndPitch;
; 2786 : 
; 2787 :     // thru all the list
; 2788 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN4@PS_SoundRu

; 2789 :     {
; 2790 : #ifdef DEBUG_NEW_PS_SOUNDS
; 2791 :         Count++;
; 2792 : #endif;
; 2793 :         // The Poly
; 2794 :         SoundSubPartType &Sound = (((SoundSubPartType*)PS_Lists[PS_SOUNDS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR _ptr$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Sound$4[ebp], eax

; 2795 :         // Pointer to particle
; 2796 :         ParticleNodeType &Part = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[Sound.OWNER]);

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _Sound$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 124				; 0000007cH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Part$3[ebp], eax

; 2797 : 
; 2798 :         // If Particle already dead, end here and go to next
; 2799 :         if (!Part.Alive)

	mov	ecx, DWORD PTR _Part$3[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN3@PS_SoundRu

; 2800 :         {
; 2801 :             ptr = PS_RemoveItem(PS_SOUNDS_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	3
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 2802 :             continue;

	jmp	SHORT $LN9@PS_SoundRu
$LN3@PS_SoundRu:

; 2803 :         }
; 2804 : 
; 2805 :         // The Life
; 2806 :         float Life = Part.life;

	mov	eax, DWORD PTR _Part$3[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR _Life$1[ebp], xmm0

; 2807 :         // Pointer to particle parametes
; 2808 :         PS_PPType &ppn = PS_PPN[Sound.PPN];

	mov	ecx, DWORD PTR _Sound$4[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$2[ebp], edx

; 2809 : 
; 2810 :         // * OK, the SOUND STUFF *
; 2811 :         if (Sound.Play && PS_ElapsedTime)

	mov	eax, DWORD PTR _Sound$4[ebp]
	mov	cl, BYTE PTR [eax+12]
	shl	cl, 7
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	$LN1@PS_SoundRu
	movss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN1@PS_SoundRu

; 2812 :         {
; 2813 :             SndVol = PS_EvalTimedFloat(Life, Sound.VolumeStage, ppn.sndVolStages,   ppn.sndVol);

	mov	eax, DWORD PTR _ppn$2[ebp]
	add	eax, 1420				; 0000058cH
	push	eax
	mov	ecx, DWORD PTR _ppn$2[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	push	edx
	mov	eax, DWORD PTR _Sound$4[ebp]
	add	eax, 16					; 00000010H
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _Life$1[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _SndVol$[ebp]

; 2814 :             SndPitch = PS_EvalTimedFloat(Life, Sound.PitchStage, ppn.sndPitchStages,  ppn.sndPitch);

	mov	ecx, DWORD PTR _ppn$2[ebp]
	add	ecx, 1256				; 000004e8H
	push	ecx
	mov	edx, DWORD PTR _ppn$2[ebp]
	mov	eax, DWORD PTR [edx+1252]
	push	eax
	mov	ecx, DWORD PTR _Sound$4[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _Life$1[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _SndPitch$[ebp]

; 2815 : 
; 2816 :             Sound.SoundPos->UpdatePos(Part.pos.x, Part.pos.y, Part.pos.z, Part.vel.x, Part.vel.y, Part.vel.z);

	mov	edx, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+80]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+76]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+72]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+64]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Part$3[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+56]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Sound$4[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?UpdatePos@F4SoundPos@@QAEXMMMMMM@Z	; F4SoundPos::UpdatePos

; 2817 :             Sound.SoundPos->Sfx(Sound.SoundId, 0, SndPitch, SndVol);

	push	ecx
	movss	xmm0, DWORD PTR _SndVol$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _SndPitch$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	eax, DWORD PTR _Sound$4[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _Sound$4[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Sfx@F4SoundPos@@QAEXHHMM@Z		; F4SoundPos::Sfx

; 2818 : 
; 2819 :             if (!Sound.Looped)

	mov	eax, DWORD PTR _Sound$4[ebp]
	mov	cl, BYTE PTR [eax+12]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN1@PS_SoundRu

; 2820 :             {
; 2821 :                 ptr = PS_RemoveItem(PS_SOUNDS_IDX, ptr, LastPtr);

	mov	eax, DWORD PTR _LastPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	push	3
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 2822 :                 continue;

	jmp	$LN9@PS_SoundRu
$LN1@PS_SoundRu:

; 2823 :             }
; 2824 : 
; 2825 :         }
; 2826 : 
; 2827 :         LastPtr = ptr;

	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], edx

; 2828 :         ptr = Sound.NEXT;

	mov	eax, DWORD PTR _Sound$4[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx

; 2829 :     }

	jmp	$LN9@PS_SoundRu
$LN4@PS_SoundRu:

; 2830 : 
; 2831 : #ifdef DEBUG_NEW_PS_SOUNDS
; 2832 :     REPORT_VALUE("NEW PS SOUNDS", Count);
; 2833 : #endif
; 2834 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_SoundRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_SoundRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -40						; size = 4
tv133 = -36						; size = 4
$T3 = -32						; size = 4
_ppn$ = -28						; size = 4
_ptr$ = -24						; size = 4
_pn$ = -20						; size = 4
tv87 = -13						; size = 1
__$EHRec$ = -12						; size = 12
_owner$ = 8						; size = 4
_ID$ = 12						; size = 4
?PS_AddSound@DrawableParticleSys@@CAXKK@Z PROC		; DrawableParticleSys::PS_AddSound

; 2740 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PS_AddSound@DrawableParticleSys@@CAXKK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2741 :     // Get a free slot
; 2742 :     PS_PTR ptr = PS_AddItem(PS_SOUNDS_IDX);

	push	3
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _ptr$[ebp], eax

; 2743 : 
; 2744 :     // security check
; 2745 :     if (ptr == PS_NOPTR) return;

	cmp	DWORD PTR _ptr$[ebp], -1
	jne	SHORT $LN1@PS_AddSoun
	jmp	$LN2@PS_AddSoun
$LN1@PS_AddSoun:

; 2746 : 
; 2747 :     // Get the pointer in the list
; 2748 :     SoundSubPartType &pn = (((SoundSubPartType*)PS_Lists[PS_SOUNDS_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _ptr$[ebp]
	shl	ecx, 5
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _pn$[ebp], ecx

; 2749 :     // the owner
; 2750 :     pn.OWNER = owner;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	eax, DWORD PTR _owner$[ebp]
	mov	DWORD PTR [edx+4], eax

; 2751 :     // The assigned Particle Node Parameter
; 2752 :     pn.PPN = ID;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 2753 :     // last in List
; 2754 :     pn.NEXT = PS_NOPTR;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax], -1

; 2755 : 
; 2756 :     // Pointer to particle parametes
; 2757 :     PS_PPType &ppn = PS_PPN[ID];

	mov	ecx, DWORD PTR _ID$[ebp]
	imul	ecx, 5560				; 000015b8H
	add	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$[ebp], ecx

; 2758 :     // Ok, setup the parameters
; 2759 : 
; 2760 :     // The sound is active
; 2761 :     pn.Play = true;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	al, BYTE PTR [edx+12]
	or	al, 1
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [ecx+12], al

; 2762 :     // Stages
; 2763 :     pn.VolumeStage = pn.PitchStage = 0;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax+16], 0

; 2764 :     // The sound stuff
; 2765 :     pn.SoundId = ppn.sndId;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1244]
	mov	DWORD PTR [ecx+24], eax

; 2766 :     pn.Looped = ppn.sndLooped ? true : false;

	mov	ecx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [ecx+1248], 0
	je	SHORT $LN4@PS_AddSoun
	mov	BYTE PTR tv87[ebp], 1
	jmp	SHORT $LN5@PS_AddSoun
$LN4@PS_AddSoun:
	mov	BYTE PTR tv87[ebp], 0
$LN5@PS_AddSoun:
	mov	dl, BYTE PTR tv87[ebp]
	and	dl, 1
	shl	dl, 1
	mov	eax, DWORD PTR _pn$[ebp]
	mov	cl, BYTE PTR [eax+12]
	and	cl, -3					; fffffffdH
	or	cl, dl
	mov	edx, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [edx+12], cl

; 2767 : 
; 2768 :     pn.SoundPos = new F4SoundPos();

	push	148					; 00000094H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN6@PS_AddSoun
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0F4SoundPos@@QAE@XZ			; F4SoundPos::F4SoundPos
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN7@PS_AddSoun
$LN6@PS_AddSoun:
	mov	DWORD PTR tv133[ebp], 0
$LN7@PS_AddSoun:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+28], edx
$LN2@PS_AddSoun:

; 2769 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PS_AddSound@DrawableParticleSys@@CAXKK@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PS_AddSound@DrawableParticleSys@@CAXKK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PS_AddSound@DrawableParticleSys@@CAXKK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PS_AddSound@DrawableParticleSys@@CAXKK@Z ENDP		; DrawableParticleSys::PS_AddSound
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -892						; size = 12
$T2 = -880						; size = 12
$T3 = -868						; size = 12
$T4 = -856						; size = 12
$T5 = -844						; size = 12
$T6 = -832						; size = 16
$T7 = -816						; size = 16
$T8 = -800						; size = 16
$T9 = -784						; size = 16
$T10 = -768						; size = 16
$T11 = -752						; size = 16
$T12 = -736						; size = 16
$T13 = -720						; size = 16
$T14 = -704						; size = 16
$T15 = -688						; size = 16
_S1_Distance$ = -660					; size = 4
tv1335 = -656						; size = 8
_TimeStep$ = -648					; size = 4
_LifeSpan$ = -644					; size = 4
_FragMixSpan$ = -640					; size = 4
_TexHandle$ = -636					; size = 4
tv1989 = -632						; size = 4
_SizeStep$16 = -628					; size = 4
_TexStep$17 = -624					; size = 4
tv415 = -620						; size = 4
_SizeRate$ = -616					; size = 4
tv772 = -612						; size = 4
_LastSegAlpha$ = -608					; size = 4
tv769 = -604						; size = 4
tv871 = -600						; size = 4
_BiasCx$ = -596						; size = 4
_LifeStep$18 = -592					; size = 4
tv745 = -588						; size = 4
tv524 = -584						; size = 4
tv689 = -580						; size = 4
_dwColor$ = -576					; size = 4
tv535 = -572						; size = 4
tv1332 = -568						; size = 4
_SL$ = -564						; size = 12
tv532 = -548						; size = 4
tv490 = -544						; size = 4
_QuadIdx$19 = -540					; size = 4
tv482 = -536						; size = 4
_SideTexHandle$ = -532					; size = 4
_Part$20 = -528						; size = 4
tv978 = -524						; size = 4
_BaseSize$ = -520					; size = 4
tv760 = -516						; size = 4
_S1$ = -512						; size = 12
_Life$ = -496						; size = 4
_IntegrateDistance$ = -492				; size = 4
_Ix$21 = -488						; size = 4
_SegAlpha$22 = -484					; size = 4
_WindStep$23 = -480					; size = 4
_Rcos$24 = -476						; size = 4
_SegmentDone$25 = -472					; size = 4
_Rsin$26 = -468						; size = 4
_SVector$ = -464					; size = 12
_FragMixOut$ = -452					; size = 4
_LineDistance$ = -448					; size = 4
tv1115 = -444						; size = 4
_OutDistance$ = -440					; size = 4
_V1$ = -436						; size = 12
_ST$ = -424						; size = 12
_NewTex$27 = -408					; size = 4
_AlphaMixCx$28 = -404					; size = 4
_S0$ = -400						; size = 12
_LastSU$ = -384						; size = 4
_NewIndex$29 = -380					; size = 4
_Size$30 = -376						; size = 4
_FragRadius$ = -372					; size = 4
_InvLogLife$31 = -368					; size = 4
_ST_Distance$ = -364					; size = 4
_Alpha$ = -360						; size = 4
_LastSize$ = -356					; size = 4
_Integrate$ = -352					; size = 4
_Index$ = -348						; size = 4
_S0_Distance$ = -344					; size = 4
_pt$ = -340						; size = 4
_XAngle$32 = -336					; size = 4
_NewSize$33 = -332					; size = 4
_TPN$ = -328						; size = 4
_SegmentSize$ = -324					; size = 4
_SegmentStep$34 = -320					; size = 4
_EntrySegment$ = -315					; size = 1
_TrailCompleted$ = -314					; size = 1
_TrailValid$ = -313					; size = 1
_Part$35 = -312						; size = 4
_LineMode$ = -307					; size = 1
_Flip$ = -306						; size = 1
_RecalcP1$ = -305					; size = 1
_Div2$ = -304						; size = 16
_ColorStep$ = -288					; size = 16
_XMMPos$ = -272						; size = 16
_Color$ = -256						; size = 16
_LastColor$ = -240					; size = 16
_ColorNew$ = -224					; size = 16
_Quad$ = -208						; size = 112
_su$ = -92						; size = 16
_sv$ = -76						; size = 16
_Side$ = -60						; size = 56
__$ArrayPad$ = -4					; size = 4
_Trail$ = 8						; size = 4
_Origin$ = 12						; size = 4
_Entry$ = 16						; size = 4
_Exit$ = 20						; size = 4
_Elements$ = 24						; size = 4
_tpn$ = 28						; size = 4
?PS_SubTrailRun@DrawableParticleSys@@CAXPAUTrailSubPartType@@AAUD3DXVECTOR3@@AAK2KK@Z PROC ; DrawableParticleSys::PS_SubTrailRun

; 4330 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 904				; 00000388H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi

; 4331 :     float Life, Alpha;
; 4332 :     XMMVector XMMPos, Div2;
; 4333 :     float TimeStep = PS_ElapsedTime, LastSize;

	movss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	movss	DWORD PTR _TimeStep$[ebp], xmm0

; 4334 :     bool TrailValid = false, EntrySegment = true, TrailCompleted = false, RecalcP1 = true, LineMode = false;

	mov	BYTE PTR _TrailValid$[ebp], 0
	mov	BYTE PTR _EntrySegment$[ebp], 1
	mov	BYTE PTR _TrailCompleted$[ebp], 0
	mov	BYTE PTR _RecalcP1$[ebp], 1
	mov	BYTE PTR _LineMode$[ebp], 0

; 4335 :     DWORD Index = Entry;

	mov	eax, DWORD PTR _Entry$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Index$[ebp], ecx

; 4336 :     psRGBA Color, LastColor, ColorStep, ColorNew;
; 4337 : 
; 4338 :     // Get the Trail parameter Node
; 4339 :     PS_TPType &TPN = PS_TPN[tpn];

	mov	edx, DWORD PTR _tpn$[ebx]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _TPN$[ebp], edx

; 4340 :     float BaseSize = TPN.Size[0];

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [ecx+eax+80]
	movss	DWORD PTR _BaseSize$[ebp], xmm0

; 4341 :     float SizeRate = TPN.SizeRate;

	mov	edx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [edx+88]
	movss	DWORD PTR _SizeRate$[ebp], xmm0

; 4342 :     float LifeSpan = TPN.LifeSpan;

	mov	eax, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [eax+68]
	movss	DWORD PTR _LifeSpan$[ebp], xmm0

; 4343 :     float BiasCx = 1.0f ;//+ ( 1.0f / TheDXEngine.LODBiasCx()) / 10.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _BiasCx$[ebp], xmm0

; 4344 :     float FragRadius = TPN.FragRadius * BiasCx;

	mov	ecx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [ecx+296]
	mulss	xmm0, DWORD PTR _BiasCx$[ebp]
	movss	DWORD PTR _FragRadius$[ebp], xmm0

; 4345 :     float FragMixOut = FragRadius * 0.75f;

	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	mulss	xmm0, DWORD PTR __real@3f400000
	movss	DWORD PTR _FragMixOut$[ebp], xmm0

; 4346 :     float FragMixSpan = FragRadius - FragMixOut;

	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	subss	xmm0, DWORD PTR _FragMixOut$[ebp]
	movss	DWORD PTR _FragMixSpan$[ebp], xmm0

; 4347 :     float LineDistance = TPN.LineDistance * BiasCx;

	mov	edx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [edx+292]
	mulss	xmm0, DWORD PTR _BiasCx$[ebp]
	movss	DWORD PTR _LineDistance$[ebp], xmm0

; 4348 :     float OutDistance = TPN.VisibleDistance;

	mov	eax, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [eax+92]
	movss	DWORD PTR _OutDistance$[ebp], xmm0

; 4349 :     float IntegrateDistance = TPN.IntegrateDistance;

	mov	ecx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [ecx+96]
	movss	DWORD PTR _IntegrateDistance$[ebp], xmm0

; 4350 :     DWORD Integrate = 0;

	mov	DWORD PTR _Integrate$[ebp], 0

; 4351 : 
; 4352 :     // * GEOMETRIC STUFF *
; 4353 :     D3DDYNVERTEX Quad[4];
; 4354 :     D3DDYNVERTEX Side[2];
; 4355 :     D3DXVECTOR3 S0, S1, ST, SL, V1, SVector;

	lea	ecx, DWORD PTR _S0$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _S1$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _ST$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _SL$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _V1$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _SVector$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 4356 :     DWORD dwColor;
; 4357 :     float LastSU, LastSegAlpha, ST_Distance, S0_Distance, SegmentSize, S1_Distance;
; 4358 :     bool Flip = false;

	mov	BYTE PTR _Flip$[ebp], 0

; 4359 : 
; 4360 : 
; 4361 :     // Setup the Faces with default values
; 4362 :     memset(Quad, 0, sizeof(Quad));

	push	112					; 00000070H
	push	0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 4363 :     memset(Side, 0, sizeof(Side));

	push	56					; 00000038H
	push	0
	lea	eax, DWORD PTR _Side$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4364 : 
; 4365 :     // Link here the Texture and get its U/V Coord
; 4366 :     // The BB Surfaces texture
; 4367 :     ParticleTextureNode *pt = TPN.Texture;

	mov	ecx, DWORD PTR _TPN$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	mov	DWORD PTR _pt$[ebp], edx

; 4368 :     DWORD TexHandle = pt->TexHandle;

	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _TexHandle$[ebp], ecx

; 4369 :     float su[4], sv[4];
; 4370 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 0, Quad[0].tu, Quad[0].tv);

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	lea	eax, DWORD PTR _Quad$[ebp+edx+24]
	push	eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	lea	edx, DWORD PTR _Quad$[ebp+ecx+20]
	push	edx
	push	0
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4371 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 1, Quad[1].tu, Quad[1].tv);

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	lea	eax, DWORD PTR _Quad$[ebp+edx+24]
	push	eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	lea	edx, DWORD PTR _Quad$[ebp+ecx+20]
	push	edx
	push	1
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4372 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 2, Quad[2].tu, Quad[2].tv);

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	lea	eax, DWORD PTR _Quad$[ebp+edx+24]
	push	eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	lea	edx, DWORD PTR _Quad$[ebp+ecx+20]
	push	edx
	push	2
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4373 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 3, Quad[3].tu, Quad[3].tv);

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	lea	eax, DWORD PTR _Quad$[ebp+edx+24]
	push	eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	lea	edx, DWORD PTR _Quad$[ebp+ecx+20]
	push	edx
	push	3
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4374 : 
; 4375 :     // The SIDE Texture
; 4376 :     pt = TPN.SideTexture;

	mov	edx, DWORD PTR _TPN$[ebp]
	mov	eax, DWORD PTR [edx+316]
	mov	DWORD PTR _pt$[ebp], eax

; 4377 :     DWORD SideTexHandle = pt->TexHandle;

	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _SideTexHandle$[ebp], edx

; 4378 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 0, su[0], sv[0]);

	mov	eax, 4
	imul	eax, 0
	lea	ecx, DWORD PTR _sv$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	lea	eax, DWORD PTR _su$[ebp+edx]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4379 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 1, su[1], sv[1]);

	mov	eax, 4
	shl	eax, 0
	lea	ecx, DWORD PTR _sv$[ebp+eax]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	lea	eax, DWORD PTR _su$[ebp+edx]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4380 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 2, su[2], sv[2]);

	mov	eax, 4
	shl	eax, 1
	lea	ecx, DWORD PTR _sv$[ebp+eax]
	push	ecx
	mov	edx, 4
	shl	edx, 1
	lea	eax, DWORD PTR _su$[ebp+edx]
	push	eax
	push	2
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4381 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 3, su[3], sv[3]);

	mov	eax, 4
	imul	eax, 3
	lea	ecx, DWORD PTR _sv$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	edx, 3
	lea	eax, DWORD PTR _su$[ebp+edx]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 4382 : 
; 4383 :     // The used divisor
; 4384 :     Div2.d3d.x = Div2.d3d.y = Div2.d3d.z = 2.0f;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _Div2$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _Div2$[ebp+8]
	movss	DWORD PTR _Div2$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _Div2$[ebp+4]
	movss	DWORD PTR _Div2$[ebp], xmm0
$LN81@PS_SubTrai:

; 4385 : 
; 4386 :     // thru all the list
; 4387 :     while (!TrailCompleted /*&& PS_SubTrails<14200*/)

	movzx	eax, BYTE PTR _TrailCompleted$[ebp]
	test	eax, eax
	jne	$LN52@PS_SubTrai

; 4388 :     {
; 4389 : 
; 4390 : #ifdef DEBUG_NEW_PS_TRAILS
; 4391 :         PS_SubTrails++;

	mov	ecx, DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_SubTrails
	add	ecx, 1
	mov	DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA, ecx ; DrawableParticleSys::PS_SubTrails

; 4392 : #endif
; 4393 : 
; 4394 :         // Check if last node, assert it
; 4395 :         if (Index == Exit) TrailCompleted = true;

	mov	edx, DWORD PTR _Exit$[ebx]
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN51@PS_SubTrai
	mov	BYTE PTR _TrailCompleted$[ebp], 1
$LN51@PS_SubTrai:

; 4396 : 
; 4397 :         // Get the node data, and check for index rollover
; 4398 :         TrailSubPartType &Part = Trail[Index++];

	mov	ecx, DWORD PTR _Index$[ebp]
	imul	ecx, 72					; 00000048H
	add	ecx, DWORD PTR _Trail$[ebx]
	mov	DWORD PTR _Part$35[ebp], ecx
	mov	edx, DWORD PTR _Index$[ebp]
	add	edx, 1
	mov	DWORD PTR _Index$[ebp], edx

; 4399 : 
; 4400 :         // * NOTE * Index points to the NEXT item in the segments list, not the present one
; 4401 :         if (Index >= Elements) Index = 0;

	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Elements$[ebx]
	jb	SHORT $LN50@PS_SubTrai
	mov	DWORD PTR _Index$[ebp], 0
$LN50@PS_SubTrai:

; 4402 : 
; 4403 :         // Calculate S0 Position
; 4404 :         S0 = *((D3DXVECTOR3*)&Part.Pos) + Origin;

	mov	ecx, DWORD PTR _Origin$[ebx]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _Part$35[ebp]
	add	ecx, 12					; 0000000cH
	call	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator+
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _S0$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _S0$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _S0$[ebp+8], eax

; 4405 :         // The Distance from S0 ( AKA Pos )
; 4406 :         S0_Distance = RED_Lenght3D(&S0);

	lea	ecx, DWORD PTR _S0$[ebp]
	push	ecx
	call	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z	; RED_Lenght3D
	add	esp, 4
	fstp	DWORD PTR _S0_Distance$[ebp]

; 4407 : 
; 4408 :         // if out of View Distance, go to next node
; 4409 :         if (S0_Distance > OutDistance)

	movss	xmm0, DWORD PTR _S0_Distance$[ebp]
	comiss	xmm0, DWORD PTR _OutDistance$[ebp]
	jbe	SHORT $LN49@PS_SubTrai

; 4410 :         {
; 4411 :             TrailValid = false;

	mov	BYTE PTR _TrailValid$[ebp], 0

; 4412 :             EntrySegment = false, RecalcP1 = true;

	mov	BYTE PTR _EntrySegment$[ebp], 0
	mov	BYTE PTR _RecalcP1$[ebp], 1

; 4413 :             continue;

	jmp	$LN81@PS_SubTrai
$LN49@PS_SubTrai:

; 4414 :         }
; 4415 : 
; 4416 : 
; 4417 : 
; 4418 :         //***************************** LIFE STUFF *****************************************
; 4419 : 
; 4420 :         // get elapsed time in mSeconds
; 4421 :         float LifeStep = (float)(PS_RunTime - Part.Birth) / 1000.0f;

	mov	edx, DWORD PTR _Part$35[ebp]
	mov	eax, DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_RunTime
	sub	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv1332[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv1332[ebp]
	mov	ecx, DWORD PTR tv1332[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv1335[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv1335[ebp]
	divss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR _LifeStep$18[ebp], xmm0

; 4422 :         // Calculate Lifespan from 0.0 to 1.0
; 4423 :         Life =  LifeStep / LifeSpan;

	movss	xmm0, DWORD PTR _LifeStep$18[ebp]
	divss	xmm0, DWORD PTR _LifeSpan$[ebp]
	movss	DWORD PTR _Life$[ebp], xmm0

; 4424 : 
; 4425 :         // check if life is over, if so, skip
; 4426 :         if (Life >= 1.0f)

	movss	xmm0, DWORD PTR _Life$[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN48@PS_SubTrai

; 4427 :         {
; 4428 :             if (!TrailCompleted) Entry = Index;

	movzx	edx, BYTE PTR _TrailCompleted$[ebp]
	test	edx, edx
	jne	SHORT $LN47@PS_SubTrai
	mov	eax, DWORD PTR _Entry$[ebx]
	mov	ecx, DWORD PTR _Index$[ebp]
	mov	DWORD PTR [eax], ecx
$LN47@PS_SubTrai:

; 4429 : 
; 4430 :             TrailValid = LineMode = false, RecalcP1 = true;

	mov	BYTE PTR _LineMode$[ebp], 0
	mov	dl, BYTE PTR _LineMode$[ebp]
	mov	BYTE PTR _TrailValid$[ebp], dl
	mov	BYTE PTR _RecalcP1$[ebp], 1

; 4431 :             Integrate = 0;

	mov	DWORD PTR _Integrate$[ebp], 0

; 4432 :             goto Skip;

	jmp	$LN46@PS_SubTrai
	jmp	$Skip$82
$LN48@PS_SubTrai:

; 4433 :         }
; 4434 : 
; 4435 :         // the logarithmic life stuff...
; 4436 :         float InvLogLife = SizeArray[F_I32(((float)SIZE_ARRAY_ITEMS * Life))];

	movss	xmm0, DWORD PTR __real@43fa0000
	mulss	xmm0, DWORD PTR _Life$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	movss	xmm0, DWORD PTR ?SizeArray@DrawableParticleSys@@2PAMA[eax*4]
	movss	DWORD PTR _InvLogLife$31[ebp], xmm0

; 4437 :         // the Wind step applied to the segment
; 4438 :         float WindStep = LifeStep * InvLogLife;//LifeStep * min(1.0f, LifeStep/0.003f) ;

	movss	xmm0, DWORD PTR _LifeStep$18[ebp]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	movss	DWORD PTR _WindStep$23[ebp], xmm0

; 4439 : 
; 4440 :         //**********************************************************************************
; 4441 : 
; 4442 :         // Update Size
; 4443 :         float   Size = (BaseSize + SizeRate * InvLogLife) * Part.SizeRnd;

	movss	xmm0, DWORD PTR _SizeRate$[ebp]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	addss	xmm0, DWORD PTR _BaseSize$[ebp]
	mov	eax, DWORD PTR _Part$35[ebp]
	mulss	xmm0, DWORD PTR [eax+48]
	movss	DWORD PTR _Size$30[ebp], xmm0

; 4444 : 
; 4445 :         // Update position...
; 4446 :         S0.x += Part.Offset.x * InvLogLife + Part.Wind.x * WindStep;

	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [ecx+36]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	edx, DWORD PTR _Part$35[ebp]
	movss	xmm1, DWORD PTR [edx+24]
	mulss	xmm1, DWORD PTR _WindStep$23[ebp]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR _S0$[ebp]
	movss	DWORD PTR _S0$[ebp], xmm0

; 4447 :         S0.y += Part.Offset.y * InvLogLife + Part.Wind.y * WindStep;

	mov	eax, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [eax+40]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm1, DWORD PTR [ecx+28]
	mulss	xmm1, DWORD PTR _WindStep$23[ebp]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR _S0$[ebp+4]
	movss	DWORD PTR _S0$[ebp+4], xmm0

; 4448 :         S0.z += Part.Offset.z * InvLogLife + Part.Wind.z * WindStep;

	mov	edx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [edx+44]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	eax, DWORD PTR _Part$35[ebp]
	movss	xmm1, DWORD PTR [eax+32]
	mulss	xmm1, DWORD PTR _WindStep$23[ebp]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR _S0$[ebp+8]
	movss	DWORD PTR _S0$[ebp+8], xmm0

; 4449 : 
; 4450 :         // Update Color
; 4451 :         Color.r = (TPN.Color[0].r + TPN.ColorRate.r * InvLogLife * Part.ColorRnd) * PS_HiLightCx.r;

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [edx+132]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	eax, DWORD PTR _Part$35[ebp]
	mulss	xmm0, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _TPN$[ebp]
	addss	xmm0, DWORD PTR [edx+ecx+100]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A
	movss	DWORD PTR _Color$[ebp], xmm0

; 4452 :         Color.g = (TPN.Color[0].g + TPN.ColorRate.g * InvLogLife * Part.ColorRnd) * PS_HiLightCx.g;

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [ecx+136]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	edx, DWORD PTR _Part$35[ebp]
	mulss	xmm0, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR _TPN$[ebp]
	addss	xmm0, DWORD PTR [ecx+eax+104]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+4
	movss	DWORD PTR _Color$[ebp+4], xmm0

; 4453 :         Color.b = (TPN.Color[0].b + TPN.ColorRate.b * InvLogLife * Part.ColorRnd) * PS_HiLightCx.b;

	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, DWORD PTR _TPN$[ebp]
	movss	xmm0, DWORD PTR [eax+140]
	mulss	xmm0, DWORD PTR _InvLogLife$31[ebp]
	mov	ecx, DWORD PTR _Part$35[ebp]
	mulss	xmm0, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR _TPN$[ebp]
	addss	xmm0, DWORD PTR [eax+edx+108]
	mulss	xmm0, DWORD PTR ?PS_HiLightCx@DrawableParticleSys@@0UTcolor@@A+8
	movss	DWORD PTR _Color$[ebp+8], xmm0

; 4454 : 
; 4455 :         Alpha = TPN.Alpha * Part.AlphaRnd * FadeArray[F_I32(((float)FADE_ARRAY_ITEMS * Life))];

	mov	ecx, DWORD PTR _TPN$[ebp]
	mov	edx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [ecx+148]
	mulss	xmm0, DWORD PTR [edx+56]
	movss	xmm1, DWORD PTR __real@43fa0000
	mulss	xmm1, DWORD PTR _Life$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv1989[ebp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	movss	xmm0, DWORD PTR tv1989[ebp]
	mulss	xmm0, DWORD PTR ?FadeArray@DrawableParticleSys@@2PAMA[eax*4]
	movss	DWORD PTR _Alpha$[ebp], xmm0

; 4456 : 
; 4457 :         if (Alpha < 0.0f) Alpha = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _Alpha$[ebp]
	jbe	SHORT $LN45@PS_SubTrai
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Alpha$[ebp], xmm0
$LN45@PS_SubTrai:

; 4458 : 
; 4459 :         if (Alpha > 255.0f) Alpha = 255.0f;

	movss	xmm0, DWORD PTR _Alpha$[ebp]
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN44@PS_SubTrai
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _Alpha$[ebp], xmm0
$LN44@PS_SubTrai:

; 4460 : 
; 4461 :         // Overrides for last point in list
; 4462 :         if (TrailCompleted) Size = BaseSize * Part.SizeRnd/*, Alpha=0.0f*/;

	movzx	eax, BYTE PTR _TrailCompleted$[ebp]
	test	eax, eax
	je	SHORT $LN43@PS_SubTrai
	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR _BaseSize$[ebp]
	mulss	xmm0, DWORD PTR [ecx+48]
	movss	DWORD PTR _Size$30[ebp], xmm0
$LN43@PS_SubTrai:

; 4463 : 
; 4464 :         // Overrides for 1st point in list
; 4465 :         if (Part.Entry || Part.Split || Part.Exit) Size = 0.0f, Alpha = 0.0f, Integrate = 0;

	mov	edx, DWORD PTR _Part$35[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 1
	jne	SHORT $LN41@PS_SubTrai
	mov	ecx, DWORD PTR _Part$35[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 2
	and	edx, 1
	jne	SHORT $LN41@PS_SubTrai
	mov	eax, DWORD PTR _Part$35[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 1
	and	ecx, 1
	je	SHORT $LN42@PS_SubTrai
$LN41@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Size$30[ebp], xmm0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Alpha$[ebp], xmm0
	mov	DWORD PTR _Integrate$[ebp], 0
$LN42@PS_SubTrai:

; 4466 : 
; 4467 :         // if entry, no trail is valid now
; 4468 :         if (Part.Entry) TrailValid = LineMode = false, RecalcP1 = true;

	mov	edx, DWORD PTR _Part$35[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 1
	je	SHORT $LN40@PS_SubTrai
	mov	BYTE PTR _LineMode$[ebp], 0
	mov	cl, BYTE PTR _LineMode$[ebp]
	mov	BYTE PTR _TrailValid$[ebp], cl
	mov	BYTE PTR _RecalcP1$[ebp], 1
$LN40@PS_SubTrai:

; 4469 : 
; 4470 :         Color.a = Alpha;

	movss	xmm0, DWORD PTR _Alpha$[ebp]
	movss	DWORD PTR _Color$[ebp+12], xmm0

; 4471 : 
; 4472 : 
; 4473 :         // Execute only if a trail is Valid ( i.e. we have at least 2 nodes to draw a segment )
; 4474 :         if (TrailValid)

	movzx	edx, BYTE PTR _TrailValid$[ebp]
	test	edx, edx
	je	$LN39@PS_SubTrai

; 4475 :         {
; 4476 : 
; 4477 :             //*************************** START WITH VISIBILITY CHECKS ****************************************
; 4478 : 
; 4479 : 
; 4480 :             // if to be integrated, Skip the requested nodes
; 4481 :             /* if(Integrate && !TrailCompleted){
; 4482 :              // 1 less, as the index is alerady postincremented in upper function code
; 4483 :              Integrate-=1;
; 4484 :              // theck for Exit Index as limit
; 4485 :              if(Exit >= Index){
; 4486 :              // if exit has an higher value then Exit is the Limit
; 4487 :              Index += Integrate;
; 4488 :              } else {
; 4489 :              // if exit has a lower value then Elemts is the Limit
; 4490 :              Index += Integrate;
; 4491 :              if(Index>=Elements) Index-=Elements;
; 4492 :              }
; 4493 :             // Used to calculate the effective expected number of Segments
; 4494 :              PS_SubTrails+=Integrate;
; 4495 :              // Exit check, never close an integration on the EXIT segment, it has Alpha = 0
; 4496 :              // so there is a risk to get invisble segments
; 4497 :              if(Index>Exit) Index=Exit - 1;
; 4498 :              // correct any underflow
; 4499 :              if(Index==-1) Index = Elements-1;
; 4500 :              // reset skip value
; 4501 :              Integrate=0;
; 4502 :              // loop
; 4503 :              continue;
; 4504 :              }*/
; 4505 : 
; 4506 :             // if to be integrated, Skip the requested nodes
; 4507 :             if (Integrate && !TrailCompleted && Index != Exit)

	cmp	DWORD PTR _Integrate$[ebp], 0
	je	$LN38@PS_SubTrai
	movzx	eax, BYTE PTR _TrailCompleted$[ebp]
	test	eax, eax
	jne	$LN38@PS_SubTrai
	mov	ecx, DWORD PTR _Exit$[ebx]
	mov	edx, DWORD PTR _Index$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	$LN38@PS_SubTrai

; 4508 :             {
; 4509 :                 // 1 less, as the index is alerady postincremented in upper function code
; 4510 :                 Integrate -= 1;

	mov	eax, DWORD PTR _Integrate$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Integrate$[ebp], eax

; 4511 :                 // the new incoming index
; 4512 :                 DWORD NewIndex = Index;

	mov	ecx, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _NewIndex$29[ebp], ecx
$LN37@PS_SubTrai:

; 4513 : 
; 4514 :                 // execute steps
; 4515 :                 while (Integrate--)

	mov	edx, DWORD PTR _Integrate$[ebp]
	mov	DWORD PTR tv415[ebp], edx
	mov	eax, DWORD PTR _Integrate$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Integrate$[ebp], eax
	cmp	DWORD PTR tv415[ebp], 0
	je	$LN36@PS_SubTrai

; 4516 :                 {
; 4517 :                     TrailSubPartType &Part = Trail[NewIndex];

	mov	ecx, DWORD PTR _NewIndex$29[ebp]
	imul	ecx, 72					; 00000048H
	add	ecx, DWORD PTR _Trail$[ebx]
	mov	DWORD PTR _Part$20[ebp], ecx

; 4518 : 
; 4519 :                     // an integration can not end on trail ends
; 4520 :                     // if segment is a split/exit, then stop here and keep old Index as good value
; 4521 :                     if (Part.Split || Part.Exit || NewIndex == Exit) break;

	mov	edx, DWORD PTR _Part$20[ebp]
	mov	eax, DWORD PTR [edx+8]
	shr	eax, 2
	and	eax, 1
	jne	SHORT $LN34@PS_SubTrai
	mov	ecx, DWORD PTR _Part$20[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shr	edx, 1
	and	edx, 1
	jne	SHORT $LN34@PS_SubTrai
	mov	eax, DWORD PTR _Exit$[ebx]
	mov	ecx, DWORD PTR _NewIndex$29[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN35@PS_SubTrai
$LN34@PS_SubTrai:
	jmp	SHORT $LN36@PS_SubTrai
$LN35@PS_SubTrai:

; 4522 : 
; 4523 :                     // ok, the step
; 4524 :                     Index = NewIndex;

	mov	edx, DWORD PTR _NewIndex$29[ebp]
	mov	DWORD PTR _Index$[ebp], edx

; 4525 : #ifdef DEBUG_NEW_PS_TRAILS
; 4526 :                     PS_SubTrails++;

	mov	eax, DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_SubTrails
	add	eax, 1
	mov	DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA, eax ; DrawableParticleSys::PS_SubTrails

; 4527 : #endif
; 4528 :                     // check new incoming segment
; 4529 :                     NewIndex++;

	mov	ecx, DWORD PTR _NewIndex$29[ebp]
	add	ecx, 1
	mov	DWORD PTR _NewIndex$29[ebp], ecx

; 4530 : 
; 4531 :                     if (NewIndex >= Elements) NewIndex = 0;

	mov	edx, DWORD PTR _NewIndex$29[ebp]
	cmp	edx, DWORD PTR _Elements$[ebx]
	jb	SHORT $LN33@PS_SubTrai
	mov	DWORD PTR _NewIndex$29[ebp], 0
$LN33@PS_SubTrai:

; 4532 :                 }

	jmp	$LN37@PS_SubTrai
$LN36@PS_SubTrai:

; 4533 : 
; 4534 :                 // reset skip value in any case
; 4535 :                 Integrate = 0;

	mov	DWORD PTR _Integrate$[ebp], 0

; 4536 :                 // loop
; 4537 :                 continue;

	jmp	$LN81@PS_SubTrai
$LN38@PS_SubTrai:

; 4538 :             }
; 4539 : 
; 4540 :             // Calculate the next integration step
; 4541 :             if (S0_Distance > IntegrateDistance) Integrate = F_I32((S0_Distance - IntegrateDistance) / IntegrateDistance);

	movss	xmm0, DWORD PTR _S0_Distance$[ebp]
	comiss	xmm0, DWORD PTR _IntegrateDistance$[ebp]
	jbe	SHORT $LN32@PS_SubTrai
	movss	xmm0, DWORD PTR _S0_Distance$[ebp]
	subss	xmm0, DWORD PTR _IntegrateDistance$[ebp]
	divss	xmm0, DWORD PTR _IntegrateDistance$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	DWORD PTR _Integrate$[ebp], eax
$LN32@PS_SubTrai:

; 4542 : 
; 4543 :             // ******************************** CHECK FOR SEGMENT VISIBILITY *********************************
; 4544 : 
; 4545 :             // * CALCULATE THE TRAIL VECTOR *
; 4546 :             SVector = S0 - S1;

	lea	eax, DWORD PTR _S1$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _S0$[ebp]
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _SVector$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _SVector$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _SVector$[ebp+8], edx

; 4547 :             // Get the Trail Lenght
; 4548 :             SegmentSize = RED_Lenght3D(&SVector);

	lea	eax, DWORD PTR _SVector$[ebp]
	push	eax
	call	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z	; RED_Lenght3D
	add	esp, 4
	fstp	DWORD PTR _SegmentSize$[ebp]

; 4549 :             // Get the middle of present segment extremities, that is the position of the segment
; 4550 :             XMMPos.Xmm = _mm_div_ps(_mm_add_ps(_mm_loadu_ps((float*)&S0), _mm_loadu_ps((float*)&S1)), _mm_load_ps((float*)&Div2.Xmm));

	movaps	xmm0, XMMWORD PTR _Div2$[ebp]
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movups	xmm0, XMMWORD PTR _S1$[ebp]
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movups	xmm0, XMMWORD PTR _S0$[ebp]
	movaps	XMMWORD PTR $T15[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T15[ebp]
	addps	xmm0, XMMWORD PTR $T9[ebp]
	movaps	XMMWORD PTR $T11[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T11[ebp]
	divps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR $T14[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T14[ebp]
	movaps	XMMWORD PTR _XMMPos$[ebp], xmm0

; 4551 : 
; 4552 :             // Skip if the segment is not fully visible
; 4553 :             if (!TheDXEngine.DX2D_GetVisibility((D3DXVECTOR3*)&XMMPos.d3d, SegmentSize / 2.0f, CAMERA_VERTICES))

	push	8
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	divss	xmm0, DWORD PTR __real@40000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _XMMPos$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetVisibility@CDXEngine@@QAE_NPAUD3DXVECTOR3@@MK@Z ; CDXEngine::DX2D_GetVisibility
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN31@PS_SubTrai

; 4554 :             {
; 4555 :                 RecalcP1 = true;

	mov	BYTE PTR _RecalcP1$[ebp], 1

; 4556 :                 goto Skip;

	jmp	$LN30@PS_SubTrai
	jmp	$Skip$82
$LN31@PS_SubTrai:

; 4557 :             }
; 4558 : 
; 4559 : 
; 4560 :             //******************************** CHECK IF JUST A LINE  ****************************************
; 4561 : 
; 4562 :             // Get the NORMALIZED angle btw View and Vector
; 4563 :             float XAngle = F_ABS(SVector.x * S0.x + SVector.y * S0.y + SVector.z + S0.z);

	movss	xmm0, DWORD PTR _SVector$[ebp]
	mulss	xmm0, DWORD PTR _S0$[ebp]
	movss	xmm1, DWORD PTR _SVector$[ebp+4]
	mulss	xmm1, DWORD PTR _S0$[ebp+4]
	addss	xmm0, xmm1
	addss	xmm0, DWORD PTR _SVector$[ebp+8]
	addss	xmm0, DWORD PTR _S0$[ebp+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_ABS@@YAMM@Z				; F_ABS
	add	esp, 4
	fstp	DWORD PTR _XAngle$32[ebp]

; 4564 :             XAngle = min(1.0f,  XAngle / (SegmentSize * S0_Distance));

	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	mulss	xmm0, DWORD PTR _S0_Distance$[ebp]
	movss	xmm1, DWORD PTR _XAngle$32[ebp]
	divss	xmm1, xmm0
	comiss	xmm1, DWORD PTR __real@3f800000
	jbe	SHORT $LN56@PS_SubTrai
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv482[ebp], xmm0
	jmp	SHORT $LN57@PS_SubTrai
$LN56@PS_SubTrai:
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	mulss	xmm0, DWORD PTR _S0_Distance$[ebp]
	movss	xmm1, DWORD PTR _XAngle$32[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR tv482[ebp], xmm1
$LN57@PS_SubTrai:
	movss	xmm0, DWORD PTR tv482[ebp]
	movss	DWORD PTR _XAngle$32[ebp], xmm0

; 4565 :             XAngle = PS_NORM_ASIN(XAngle);

	movss	xmm0, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	cmp	eax, 499				; 000001f3H
	jbe	SHORT $LN58@PS_SubTrai
	mov	DWORD PTR tv490[ebp], 499		; 000001f3H
	jmp	SHORT $LN59@PS_SubTrai
$LN58@PS_SubTrai:
	movss	xmm0, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, DWORD PTR __real@43fa0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	DWORD PTR tv490[ebp], eax
$LN59@PS_SubTrai:
	mov	eax, DWORD PTR tv490[ebp]
	movss	xmm0, DWORD PTR ?ASinArray@DrawableParticleSys@@2PAMA[eax*4]
	movss	DWORD PTR _XAngle$32[ebp], xmm0

; 4566 : 
; 4567 : 
; 4568 :             //******************************** LINE MODE DRAWING **********************************************
; 4569 :             // Check if a line is enough
; 4570 :             if (S0_Distance > LineDistance)

	movss	xmm0, DWORD PTR _S0_Distance$[ebp]
	comiss	xmm0, DWORD PTR _LineDistance$[ebp]
	jbe	$LN29@PS_SubTrai

; 4571 :             {
; 4572 :                 // Alpha is more intense is segment is seen frontally, and less intense with Distance
; 4573 :                 Color.a = min(255.0f, Color.a * (1.0f + 1.0f * XAngle * LineDistance / S0_Distance) * ((OutDistance - S0_Distance) / (OutDistance - LineDistance)));

	movss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, DWORD PTR _LineDistance$[ebp]
	divss	xmm0, DWORD PTR _S0_Distance$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _Color$[ebp+12]
	movss	xmm1, DWORD PTR _OutDistance$[ebp]
	subss	xmm1, DWORD PTR _S0_Distance$[ebp]
	movss	xmm2, DWORD PTR _OutDistance$[ebp]
	subss	xmm2, DWORD PTR _LineDistance$[ebp]
	divss	xmm1, xmm2
	mulss	xmm0, xmm1
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN60@PS_SubTrai
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv524[ebp], xmm0
	jmp	SHORT $LN61@PS_SubTrai
$LN60@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, DWORD PTR _LineDistance$[ebp]
	divss	xmm0, DWORD PTR _S0_Distance$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _Color$[ebp+12]
	movss	xmm1, DWORD PTR _OutDistance$[ebp]
	subss	xmm1, DWORD PTR _S0_Distance$[ebp]
	movss	xmm2, DWORD PTR _OutDistance$[ebp]
	subss	xmm2, DWORD PTR _LineDistance$[ebp]
	divss	xmm1, xmm2
	mulss	xmm0, xmm1
	movss	DWORD PTR tv524[ebp], xmm0
$LN61@PS_SubTrai:
	movss	xmm0, DWORD PTR tv524[ebp]
	movss	DWORD PTR _Color$[ebp+12], xmm0

; 4574 : 
; 4575 :                 if (DebugTrail)

	movzx	ecx, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	ecx, ecx
	je	$LN28@PS_SubTrai

; 4576 :                 {
; 4577 :                     Flip ^= true;

	movzx	edx, BYTE PTR _Flip$[ebp]
	xor	edx, 1
	mov	BYTE PTR _Flip$[ebp], dl

; 4578 :                     Color.r = 255.0f;

	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _Color$[ebp], xmm0

; 4579 :                     Color.g = Flip ? 0.0f : 255.0f;

	movzx	eax, BYTE PTR _Flip$[ebp]
	test	eax, eax
	je	SHORT $LN62@PS_SubTrai
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv532[ebp], xmm0
	jmp	SHORT $LN63@PS_SubTrai
$LN62@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv532[ebp], xmm0
$LN63@PS_SubTrai:
	movss	xmm0, DWORD PTR tv532[ebp]
	movss	DWORD PTR _Color$[ebp+4], xmm0

; 4580 :                     Color.b = Flip ? 0.0f : 255.0f;

	movzx	ecx, BYTE PTR _Flip$[ebp]
	test	ecx, ecx
	je	SHORT $LN64@PS_SubTrai
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv535[ebp], xmm0
	jmp	SHORT $LN65@PS_SubTrai
$LN64@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv535[ebp], xmm0
$LN65@PS_SubTrai:
	movss	xmm0, DWORD PTR tv535[ebp]
	movss	DWORD PTR _Color$[ebp+8], xmm0

; 4581 :                     Color.a = 255.0f;

	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _Color$[ebp+12], xmm0
$LN28@PS_SubTrai:

; 4582 :                 }
; 4583 : 
; 4584 :                 // Draw only if any of the vertices has Alpha > 1
; 4585 :                 if (Color.a > 1.0 || LastColor.a > 1.0f)

	cvtss2sd xmm0, DWORD PTR _Color$[ebp+12]
	comisd	xmm0, QWORD PTR __real@3ff0000000000000
	ja	SHORT $LN26@PS_SubTrai
	movss	xmm0, DWORD PTR _LastColor$[ebp+12]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	$LN27@PS_SubTrai
$LN26@PS_SubTrai:

; 4586 :                 {
; 4587 :                     // if not a Line already started
; 4588 :                     if (!LineMode)

	movzx	edx, BYTE PTR _LineMode$[ebp]
	test	edx, edx
	jne	$LN25@PS_SubTrai

; 4589 :                     {
; 4590 :                         // Create the entry point for the line
; 4591 :                         Side[0].pos = *(D3DVECTOR*)&S1, Side[0].dwColour = F_TO_UARGB(LastColor.a, LastColor.r, LastColor.g, LastColor.b);

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	lea	ecx, DWORD PTR _Side$[ebp+eax]
	mov	edx, DWORD PTR _S1$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _S1$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _S1$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp+12]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	DWORD PTR _Side$[ebp+eax+12], esi

; 4592 :                         // Put the vertex in the Buffer
; 4593 :                         TheDXEngine.DX2D_AddSingle(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_LINE | TAPE_ENTRY, (D3DXVECTOR3*)&XMMPos.d3d, Side, 0, NULL);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Side$[ebp]
	push	ecx
	lea	edx, DWORD PTR _XMMPos$[ebp]
	push	edx
	push	8388668					; 0080003cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddSingle@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddSingle

; 4594 :                         // now we are in Line Mode
; 4595 :                         LineMode = true;

	mov	BYTE PTR _LineMode$[ebp], 1
$LN25@PS_SubTrai:

; 4596 :                     }
; 4597 : 
; 4598 :                     // Create the Next point for the line
; 4599 :                     Side[0].pos = *(D3DVECTOR*)&S0, Side[0].dwColour = F_TO_UARGB(Color.a, Color.r, Color.g, Color.b);

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	lea	ecx, DWORD PTR _Side$[ebp+eax]
	mov	edx, DWORD PTR _S0$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _S0$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _S0$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	push	ecx
	movss	xmm0, DWORD PTR _Color$[ebp+12]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _Color$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _Color$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _Color$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	DWORD PTR _Side$[ebp+eax+12], esi

; 4600 :                     // Put the vertex in the Buffer
; 4601 :                     TheDXEngine.DX2D_AddSingle(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_LINE | POLY_TAPE, (D3DXVECTOR3*)&XMMPos.d3d, Side, 0, NULL);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Side$[ebp]
	push	ecx
	lea	edx, DWORD PTR _XMMPos$[ebp]
	push	edx
	push	12582940				; 00c0001cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddSingle@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddSingle
$LN27@PS_SubTrai:

; 4602 :                 }
; 4603 : 
; 4604 :                 // The go to next segment
; 4605 :                 EntrySegment = false;

	mov	BYTE PTR _EntrySegment$[ebp], 0

; 4606 :                 RecalcP1 = true;

	mov	BYTE PTR _RecalcP1$[ebp], 1

; 4607 :                 goto Skip;

	jmp	$LN24@PS_SubTrai
	jmp	$Skip$82
$LN29@PS_SubTrai:

; 4608 :             }
; 4609 : 
; 4610 : 
; 4611 :             //******************************** POLY MODE DRAWING **********************************************
; 4612 :             // if here, we are no more in Line Mode;
; 4613 :             LineMode = false;

	mov	BYTE PTR _LineMode$[ebp], 0

; 4614 : 
; 4615 : 
; 4616 :             //******************************** IF HERE, WE HAVE A TAPE/BB SURFACE ****************************
; 4617 : 
; 4618 :             /* // Assign BB Texture
; 4619 :              Quad[0].tu=tu[0], Quad[0].tv=tv[0];
; 4620 :              Quad[1].tu=tu[1], Quad[1].tv=tv[1];
; 4621 :              Quad[2].tu=tu[2], Quad[2].tv=tv[2];
; 4622 :              Quad[3].tu=tu[3], Quad[3].tv=tv[3];
; 4623 :             */
; 4624 : 
; 4625 :             float TexStep, NewTex, SizeStep, NewSize;
; 4626 :             float SegmentStep, SegmentDone;
; 4627 : 
; 4628 :             // Check if segment or part of it inside frag radius
; 4629 :             SegmentStep = GetCollisionPoint(S1, S0, FragRadius);

	push	ecx
	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	movss	DWORD PTR [esp], xmm0
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _S0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _S0$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _S0$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR _S1$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _S1$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _S1$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	call	?GetCollisionPoint@@YAMUD3DXVECTOR3@@0M@Z ; GetCollisionPoint
	add	esp, 28					; 0000001cH
	fstp	DWORD PTR _SegmentStep$34[ebp]

; 4630 :             SegmentDone = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _SegmentDone$25[ebp], xmm0

; 4631 : 
; 4632 :             // if not SegmentStep, means the S1 point is INSIDE RANGE, so not a 1st step needed
; 4633 :             // calculate the step by usual stepping rule
; 4634 :             if (!SegmentStep) SegmentStep = Size / 2.0f + 0.5f; //min( Size / 2.0f + 0.5f, max( RED_Lenght3D(&S0) / FragRadius * 10, 1.0f));

	movss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN23@PS_SubTrai
	movss	xmm0, DWORD PTR _Size$30[ebp]
	divss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _SegmentStep$34[ebp], xmm0
$LN23@PS_SubTrai:

; 4635 : 
; 4636 :             // if we are going to Step calculate Step advances for parameters
; 4637 :             if (SegmentStep < SegmentSize)

	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	comiss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	jbe	$LN22@PS_SubTrai

; 4638 :             {
; 4639 :                 // Calculate Texture U Steps...
; 4640 :                 TexStep = (Part.SideTexIndex - LastSU) / SegmentSize;

	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [ecx+68]
	subss	xmm0, DWORD PTR _LastSU$[ebp]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _TexStep$17[ebp], xmm0

; 4641 :                 SizeStep = (Size - LastSize) / SegmentSize;

	movss	xmm0, DWORD PTR _Size$30[ebp]
	subss	xmm0, DWORD PTR _LastSize$[ebp]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _SizeStep$16[ebp], xmm0

; 4642 :                 ColorStep.a = (Color.a - LastColor.a) / SegmentSize;

	movss	xmm0, DWORD PTR _Color$[ebp+12]
	subss	xmm0, DWORD PTR _LastColor$[ebp+12]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _ColorStep$[ebp+12], xmm0

; 4643 :                 ColorStep.r = (Color.r - LastColor.r) / SegmentSize;

	movss	xmm0, DWORD PTR _Color$[ebp]
	subss	xmm0, DWORD PTR _LastColor$[ebp]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _ColorStep$[ebp], xmm0

; 4644 :                 ColorStep.g = (Color.g - LastColor.g) / SegmentSize;

	movss	xmm0, DWORD PTR _Color$[ebp+4]
	subss	xmm0, DWORD PTR _LastColor$[ebp+4]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _ColorStep$[ebp+4], xmm0

; 4645 :                 ColorStep.b = (Color.b - LastColor.b) / SegmentSize;

	movss	xmm0, DWORD PTR _Color$[ebp+8]
	subss	xmm0, DWORD PTR _LastColor$[ebp+8]
	divss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR _ColorStep$[ebp+8], xmm0
$LN22@PS_SubTrai:

; 4646 :             }
; 4647 : 
; 4648 :             DWORD Ix = 0;

	mov	DWORD PTR _Ix$21[ebp], 0

; 4649 : 
; 4650 :             // we start stepping from S1 and its parameters
; 4651 :             ST = S1;

	mov	edx, DWORD PTR _S1$[ebp]
	mov	DWORD PTR _ST$[ebp], edx
	mov	eax, DWORD PTR _S1$[ebp+4]
	mov	DWORD PTR _ST$[ebp+4], eax
	mov	ecx, DWORD PTR _S1$[ebp+8]
	mov	DWORD PTR _ST$[ebp+8], ecx

; 4652 :             NewTex = LastSU;

	movss	xmm0, DWORD PTR _LastSU$[ebp]
	movss	DWORD PTR _NewTex$27[ebp], xmm0

; 4653 :             NewSize = LastSize;

	movss	xmm0, DWORD PTR _LastSize$[ebp]
	movss	DWORD PTR _NewSize$33[ebp], xmm0

; 4654 :             ColorNew = LastColor;

	mov	edx, DWORD PTR _LastColor$[ebp]
	mov	DWORD PTR _ColorNew$[ebp], edx
	mov	eax, DWORD PTR _LastColor$[ebp+4]
	mov	DWORD PTR _ColorNew$[ebp+4], eax
	mov	ecx, DWORD PTR _LastColor$[ebp+8]
	mov	DWORD PTR _ColorNew$[ebp+8], ecx
	mov	edx, DWORD PTR _LastColor$[ebp+12]
	mov	DWORD PTR _ColorNew$[ebp+12], edx

; 4655 : 
; 4656 :             // Normalize the direction Vector
; 4657 :             SVector = RED_NormalizeVector(&SVector);

	lea	eax, DWORD PTR _SVector$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z ; RED_NormalizeVector
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _SVector$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _SVector$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _SVector$[ebp+8], edx
$LN21@PS_SubTrai:

; 4658 : 
; 4659 :             // for each requested Segment
; 4660 :             while (SegmentDone < SegmentSize)

	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	comiss	xmm0, DWORD PTR _SegmentDone$25[ebp]
	jbe	$LN20@PS_SubTrai

; 4661 :             {
; 4662 : 
; 4663 :                 // update last point
; 4664 :                 SL = ST;

	mov	eax, DWORD PTR _ST$[ebp]
	mov	DWORD PTR _SL$[ebp], eax
	mov	ecx, DWORD PTR _ST$[ebp+4]
	mov	DWORD PTR _SL$[ebp+4], ecx
	mov	edx, DWORD PTR _ST$[ebp+8]
	mov	DWORD PTR _SL$[ebp+8], edx

; 4665 : 
; 4666 :                 // if at the end, go forward to S0
; 4667 :                 if ((SegmentDone + SegmentStep) >= SegmentSize)

	movss	xmm0, DWORD PTR _SegmentDone$25[ebp]
	addss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	comiss	xmm0, DWORD PTR _SegmentSize$[ebp]
	jb	SHORT $LN19@PS_SubTrai

; 4668 :                 {
; 4669 :                     ST = S0;

	mov	eax, DWORD PTR _S0$[ebp]
	mov	DWORD PTR _ST$[ebp], eax
	mov	ecx, DWORD PTR _S0$[ebp+4]
	mov	DWORD PTR _ST$[ebp+4], ecx
	mov	edx, DWORD PTR _S0$[ebp+8]
	mov	DWORD PTR _ST$[ebp+8], edx

; 4670 :                     ColorNew = Color;

	mov	eax, DWORD PTR _Color$[ebp]
	mov	DWORD PTR _ColorNew$[ebp], eax
	mov	ecx, DWORD PTR _Color$[ebp+4]
	mov	DWORD PTR _ColorNew$[ebp+4], ecx
	mov	edx, DWORD PTR _Color$[ebp+8]
	mov	DWORD PTR _ColorNew$[ebp+8], edx
	mov	eax, DWORD PTR _Color$[ebp+12]
	mov	DWORD PTR _ColorNew$[ebp+12], eax

; 4671 :                     NewSize = Size;

	movss	xmm0, DWORD PTR _Size$30[ebp]
	movss	DWORD PTR _NewSize$33[ebp], xmm0

; 4672 :                     NewTex = Part.SideTexIndex;

	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [ecx+68]
	movss	DWORD PTR _NewTex$27[ebp], xmm0

; 4673 :                 }
; 4674 :                 else

	jmp	$LN18@PS_SubTrai
$LN19@PS_SubTrai:

; 4675 :                 {
; 4676 :                     //calculate new position
; 4677 :                     ST.x += SVector.x * SegmentStep;

	movss	xmm0, DWORD PTR _SVector$[ebp]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp]
	movss	DWORD PTR _ST$[ebp], xmm0

; 4678 :                     ST.y += SVector.y * SegmentStep;

	movss	xmm0, DWORD PTR _SVector$[ebp+4]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp+4]
	movss	DWORD PTR _ST$[ebp+4], xmm0

; 4679 :                     ST.z += SVector.z * SegmentStep;

	movss	xmm0, DWORD PTR _SVector$[ebp+8]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp+8]
	movss	DWORD PTR _ST$[ebp+8], xmm0

; 4680 :                     NewTex += TexStep * SegmentStep;

	movss	xmm0, DWORD PTR _TexStep$17[ebp]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _NewTex$27[ebp]
	movss	DWORD PTR _NewTex$27[ebp], xmm0

; 4681 :                     NewSize += SizeStep * SegmentStep;

	movss	xmm0, DWORD PTR _SizeStep$16[ebp]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR _NewSize$33[ebp], xmm0

; 4682 :                     ColorNew.a += ColorStep.a * SegmentStep;

	movss	xmm0, DWORD PTR _ColorStep$[ebp+12]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	movss	DWORD PTR _ColorNew$[ebp+12], xmm0

; 4683 :                     ColorNew.r += ColorStep.r * SegmentStep;

	movss	xmm0, DWORD PTR _ColorStep$[ebp]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ColorNew$[ebp]
	movss	DWORD PTR _ColorNew$[ebp], xmm0

; 4684 :                     ColorNew.g += ColorStep.g * SegmentStep;

	movss	xmm0, DWORD PTR _ColorStep$[ebp+4]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ColorNew$[ebp+4]
	movss	DWORD PTR _ColorNew$[ebp+4], xmm0

; 4685 :                     ColorNew.b += ColorStep.b * SegmentStep;

	movss	xmm0, DWORD PTR _ColorStep$[ebp+8]
	mulss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	addss	xmm0, DWORD PTR _ColorNew$[ebp+8]
	movss	DWORD PTR _ColorNew$[ebp+8], xmm0
$LN18@PS_SubTrai:

; 4686 :                     // Step thru segment
; 4687 :                 }
; 4688 : 
; 4689 : 
; 4690 :                 // Update the done step
; 4691 :                 SegmentDone += SegmentStep;

	movss	xmm0, DWORD PTR _SegmentDone$25[ebp]
	addss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	movss	DWORD PTR _SegmentDone$25[ebp], xmm0

; 4692 : 
; 4693 : 
; 4694 :                 ST_Distance = RED_Lenght3D(&ST);

	lea	edx, DWORD PTR _ST$[ebp]
	push	edx
	call	?RED_Lenght3D@@YAMPAUD3DXVECTOR3@@@Z	; RED_Lenght3D
	add	esp, 4
	fstp	DWORD PTR _ST_Distance$[ebp]

; 4695 :                 SegmentStep = (ST_Distance >= (FragRadius * 1.02f)) ? SegmentSize : SegmentStep = Size / 2.0f + 0.5f;  //min( Size / 2.0f + 0.5f, max( ST_Distance / FragRadius * 10, 1.0f));

	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	mulss	xmm0, DWORD PTR __real@3f828f5c
	movss	xmm1, DWORD PTR _ST_Distance$[ebp]
	comiss	xmm1, xmm0
	jb	SHORT $LN66@PS_SubTrai
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR tv689[ebp], xmm0
	jmp	SHORT $LN67@PS_SubTrai
$LN66@PS_SubTrai:
	movss	xmm0, DWORD PTR _Size$30[ebp]
	divss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _SegmentStep$34[ebp], xmm0
	movss	xmm0, DWORD PTR _SegmentStep$34[ebp]
	movss	DWORD PTR tv689[ebp], xmm0
$LN67@PS_SubTrai:
	movss	xmm0, DWORD PTR tv689[ebp]
	movss	DWORD PTR _SegmentStep$34[ebp], xmm0

; 4696 : 
; 4697 :                 // NOW, SL HOLDS PREVIOUS POINT AND ST THE INCOMING ONE
; 4698 : 
; 4699 : 
; 4700 : 
; 4701 :                 // Update Alpha based on distance
; 4702 :                 float SegAlpha, AlphaMixCx;//, AlphaMixCx3;
; 4703 :                 // Update the Alpha Mix CX
; 4704 :                 AlphaMixCx = ((ST_Distance - FragMixOut) / FragMixSpan);

	movss	xmm0, DWORD PTR _ST_Distance$[ebp]
	subss	xmm0, DWORD PTR _FragMixOut$[ebp]
	divss	xmm0, DWORD PTR _FragMixSpan$[ebp]
	movss	DWORD PTR _AlphaMixCx$28[ebp], xmm0

; 4705 :                 // to be used Cubed
; 4706 :                 //AlphaMixCx3 = AlphaMixCx * AlphaMixCx;
; 4707 :                 // to be used squared
; 4708 :                 AlphaMixCx *= AlphaMixCx;

	movss	xmm0, DWORD PTR _AlphaMixCx$28[ebp]
	mulss	xmm0, DWORD PTR _AlphaMixCx$28[ebp]
	movss	DWORD PTR _AlphaMixCx$28[ebp], xmm0

; 4709 : 
; 4710 :                 if (ST_Distance >= FragRadius) SegAlpha = min(255.0f, ColorNew.a * (1.0f + FragRadius / ST_Distance) * (1.0f + XAngle));

	movss	xmm0, DWORD PTR _ST_Distance$[ebp]
	comiss	xmm0, DWORD PTR _FragRadius$[ebp]
	jb	$LN17@PS_SubTrai
	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	divss	xmm0, DWORD PTR _ST_Distance$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, xmm1
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN68@PS_SubTrai
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv745[ebp], xmm0
	jmp	SHORT $LN69@PS_SubTrai
$LN68@PS_SubTrai:
	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	divss	xmm0, DWORD PTR _ST_Distance$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, xmm1
	movss	DWORD PTR tv745[ebp], xmm0
$LN69@PS_SubTrai:
	movss	xmm0, DWORD PTR tv745[ebp]
	movss	DWORD PTR _SegAlpha$22[ebp], xmm0
	jmp	$LN15@PS_SubTrai
$LN17@PS_SubTrai:

; 4711 :                 else if (ST_Distance >= FragMixOut) SegAlpha = min(255.0f, ColorNew.a * 2 * AlphaMixCx * (1.0f + XAngle));

	movss	xmm0, DWORD PTR _ST_Distance$[ebp]
	comiss	xmm0, DWORD PTR _FragMixOut$[ebp]
	jb	$LN15@PS_SubTrai
	movss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	mulss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR _AlphaMixCx$28[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, xmm1
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN70@PS_SubTrai
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv760[ebp], xmm0
	jmp	SHORT $LN71@PS_SubTrai
$LN70@PS_SubTrai:
	movss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	mulss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR _AlphaMixCx$28[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, DWORD PTR _XAngle$32[ebp]
	mulss	xmm0, xmm1
	movss	DWORD PTR tv760[ebp], xmm0
$LN71@PS_SubTrai:
	movss	xmm0, DWORD PTR tv760[ebp]
	movss	DWORD PTR _SegAlpha$22[ebp], xmm0
$LN15@PS_SubTrai:

; 4712 : 
; 4713 :                 //************************************* DRAW THE TAPE IF OUTSIDE MIXOUT DISTANCE *****************************************
; 4714 :                 if (ST_Distance >= FragMixOut)

	movss	xmm0, DWORD PTR _ST_Distance$[ebp]
	comiss	xmm0, DWORD PTR _FragMixOut$[ebp]
	jb	$LN14@PS_SubTrai

; 4715 :                 {
; 4716 : 
; 4717 :                     if (DebugTrail)

	movzx	eax, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	eax, eax
	je	$LN13@PS_SubTrai

; 4718 :                     {
; 4719 :                         Flip ^= true;

	movzx	ecx, BYTE PTR _Flip$[ebp]
	xor	ecx, 1
	mov	BYTE PTR _Flip$[ebp], cl

; 4720 :                         ColorNew.r = Flip ? 0.0f : 255.0f;

	movzx	edx, BYTE PTR _Flip$[ebp]
	test	edx, edx
	je	SHORT $LN72@PS_SubTrai
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv769[ebp], xmm0
	jmp	SHORT $LN73@PS_SubTrai
$LN72@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv769[ebp], xmm0
$LN73@PS_SubTrai:
	movss	xmm0, DWORD PTR tv769[ebp]
	movss	DWORD PTR _ColorNew$[ebp], xmm0

; 4721 :                         ColorNew.g = 255.0f;

	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR _ColorNew$[ebp+4], xmm0

; 4722 :                         ColorNew.b = Flip ? 0.0f : 255.0f;

	movzx	eax, BYTE PTR _Flip$[ebp]
	test	eax, eax
	je	SHORT $LN74@PS_SubTrai
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv772[ebp], xmm0
	jmp	SHORT $LN75@PS_SubTrai
$LN74@PS_SubTrai:
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR tv772[ebp], xmm0
$LN75@PS_SubTrai:
	movss	xmm0, DWORD PTR tv772[ebp]
	movss	DWORD PTR _ColorNew$[ebp+8], xmm0

; 4723 :                         LastColor = ColorNew;

	mov	ecx, DWORD PTR _ColorNew$[ebp]
	mov	DWORD PTR _LastColor$[ebp], ecx
	mov	edx, DWORD PTR _ColorNew$[ebp+4]
	mov	DWORD PTR _LastColor$[ebp+4], edx
	mov	eax, DWORD PTR _ColorNew$[ebp+8]
	mov	DWORD PTR _LastColor$[ebp+8], eax
	mov	ecx, DWORD PTR _ColorNew$[ebp+12]
	mov	DWORD PTR _LastColor$[ebp+12], ecx
$LN13@PS_SubTrai:

; 4724 :                     }
; 4725 : 
; 4726 :                     // Get the middle of present segment extremities, that is the position of the segment
; 4727 :                     XMMPos.Xmm = _mm_div_ps(_mm_add_ps(_mm_loadu_ps((float*)&ST), _mm_loadu_ps((float*)&SL)), _mm_load_ps((float*)&Div2.Xmm));

	movaps	xmm0, XMMWORD PTR _Div2$[ebp]
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movups	xmm0, XMMWORD PTR _SL$[ebp]
	movaps	XMMWORD PTR $T10[ebp], xmm0
	movups	xmm0, XMMWORD PTR _ST$[ebp]
	movaps	XMMWORD PTR $T12[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T12[ebp]
	addps	xmm0, XMMWORD PTR $T10[ebp]
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	divps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR $T13[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T13[ebp]
	movaps	XMMWORD PTR _XMMPos$[ebp], xmm0

; 4728 : 
; 4729 :                     // if this is the START OF A TAPE, Means, we have no previous node to link to and to get parameters from
; 4730 :                     // so, calculate if from scratch
; 4731 :                     if (RecalcP1)

	movzx	edx, BYTE PTR _RecalcP1$[ebp]
	test	edx, edx
	je	$LN9@PS_SubTrai

; 4732 :                     {
; 4733 : 
; 4734 :                         RecalcP1 = false;

	mov	BYTE PTR _RecalcP1$[ebp], 0

; 4735 : 
; 4736 :                         // if not entry segment, we already have an Alpha Value
; 4737 :                         if (!EntrySegment) LastSegAlpha = LastColor.a;

	movzx	eax, BYTE PTR _EntrySegment$[ebp]
	test	eax, eax
	jne	SHORT $LN11@PS_SubTrai
	movss	xmm0, DWORD PTR _LastColor$[ebp+12]
	movss	DWORD PTR _LastSegAlpha$[ebp], xmm0
$LN11@PS_SubTrai:

; 4738 : 
; 4739 :                         // * CALCULATE THE NORMAL VECTOR BTW CAMERA ( the origin )AND THE SL POINT *
; 4740 :                         V1 = RED_Normal(SVector, SL);

	lea	ecx, DWORD PTR _SL$[ebp]
	push	ecx
	lea	edx, DWORD PTR _SVector$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z	; RED_Normal
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _V1$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _V1$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _V1$[ebp+8], eax

; 4741 : 
; 4742 :                         // Assign directly parameters to the Segment end side
; 4743 :                         Side[0].pos.x = V1.x * LastSize + SL.x, Side[0].pos.y = V1.y * LastSize + SL.y, Side[0].pos.z = V1.z * LastSize + SL.z;

	movss	xmm0, DWORD PTR _V1$[ebp]
	mulss	xmm0, DWORD PTR _LastSize$[ebp]
	addss	xmm0, DWORD PTR _SL$[ebp]
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	DWORD PTR _Side$[ebp+ecx], xmm0
	movss	xmm0, DWORD PTR _V1$[ebp+4]
	mulss	xmm0, DWORD PTR _LastSize$[ebp]
	addss	xmm0, DWORD PTR _SL$[ebp+4]
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	DWORD PTR _Side$[ebp+edx+4], xmm0
	movss	xmm0, DWORD PTR _V1$[ebp+8]
	mulss	xmm0, DWORD PTR _LastSize$[ebp]
	addss	xmm0, DWORD PTR _SL$[ebp+8]
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	DWORD PTR _Side$[ebp+eax+8], xmm0

; 4744 :                         Side[1].pos.x = V1.x * -LastSize + SL.x, Side[1].pos.y = V1.y * -LastSize + SL.y, Side[1].pos.z = V1.z * -LastSize + SL.z;

	movss	xmm0, DWORD PTR _LastSize$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp]
	addss	xmm0, DWORD PTR _SL$[ebp]
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _Side$[ebp+ecx], xmm0
	movss	xmm0, DWORD PTR _LastSize$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp+4]
	addss	xmm0, DWORD PTR _SL$[ebp+4]
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	DWORD PTR _Side$[ebp+edx+4], xmm0
	movss	xmm0, DWORD PTR _LastSize$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp+8]
	addss	xmm0, DWORD PTR _SL$[ebp+8]
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	DWORD PTR _Side$[ebp+eax+8], xmm0

; 4745 : 
; 4746 :                         Side[0].tu = LastSU, Side[0].tv = sv[1];

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR _LastSU$[ebp]
	movss	DWORD PTR _Side$[ebp+ecx+20], xmm0
	mov	edx, 4
	shl	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _sv$[ebp+edx]
	mov	DWORD PTR _Side$[ebp+eax+24], ecx

; 4747 :                         Side[1].tu = LastSU, Side[1].tv = sv[2];

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR _LastSU$[ebp]
	movss	DWORD PTR _Side$[ebp+edx+20], xmm0
	mov	eax, 4
	shl	eax, 1
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _sv$[ebp+eax]
	mov	DWORD PTR _Side$[ebp+ecx+24], edx

; 4748 : 
; 4749 :                         Side[0].dwColour = Side[1].dwColour = F_TO_UARGB(LastSegAlpha, LastColor.r, LastColor.g, LastColor.b);

	push	ecx
	movss	xmm0, DWORD PTR _LastSegAlpha$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _LastColor$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR tv871[ebp], esi
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR tv871[ebp]
	mov	DWORD PTR _Side$[ebp+eax+12], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR tv871[ebp]
	mov	DWORD PTR _Side$[ebp+edx+12], eax

; 4750 : 
; 4751 :                         // Draw the 2 side surfaces
; 4752 :                         if (DebugTrail)

	movzx	ecx, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	ecx, ecx
	je	SHORT $LN10@PS_SubTrai

; 4753 :                         {
; 4754 :                             TheDXEngine.DX2D_AddBi(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_TAPE | TAPE_ENTRY, (D3DXVECTOR3*)&XMMPos.d3d, Side, SegmentSize, NULL);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Side$[ebp]
	push	edx
	lea	eax, DWORD PTR _XMMPos$[ebp]
	push	eax
	push	4194364					; 0040003cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddBi@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddBi

; 4755 :                         }
; 4756 :                         else

	jmp	SHORT $LN9@PS_SubTrai
$LN10@PS_SubTrai:

; 4757 :                             TheDXEngine.DX2D_AddBi(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_TAPE | TAPE_ENTRY, (D3DXVECTOR3*)&XMMPos.d3d, Side, SegmentSize, SideTexHandle);

	mov	ecx, DWORD PTR _SideTexHandle$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Side$[ebp]
	push	edx
	lea	eax, DWORD PTR _XMMPos$[ebp]
	push	eax
	push	4194364					; 0040003cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddBi@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddBi
$LN9@PS_SubTrai:

; 4758 : 
; 4759 :                     }
; 4760 : 
; 4761 :                     // ********************** SETUP PRESENT POINT ST PARAMETERS ****************************************************
; 4762 : 
; 4763 :                     // * CALCULATE THE NORMAL VECTOR BTW CAMERA ( the origin )AND THE ST POINT *
; 4764 :                     V1 = RED_Normal(SVector, ST);

	lea	ecx, DWORD PTR _ST$[ebp]
	push	ecx
	lea	edx, DWORD PTR _SVector$[ebp]
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?RED_Normal@@YA?AUD3DXVECTOR3@@AAU1@0@Z	; RED_Normal
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _V1$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _V1$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _V1$[ebp+8], eax

; 4765 : 
; 4766 :                     Side[0].pos.x = V1.x * NewSize + ST.x;

	movss	xmm0, DWORD PTR _V1$[ebp]
	mulss	xmm0, DWORD PTR _NewSize$33[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp]
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	DWORD PTR _Side$[ebp+ecx], xmm0

; 4767 :                     Side[0].pos.y = V1.y * NewSize + ST.y;

	movss	xmm0, DWORD PTR _V1$[ebp+4]
	mulss	xmm0, DWORD PTR _NewSize$33[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp+4]
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	DWORD PTR _Side$[ebp+edx+4], xmm0

; 4768 :                     Side[0].pos.z = V1.z * NewSize + ST.z;

	movss	xmm0, DWORD PTR _V1$[ebp+8]
	mulss	xmm0, DWORD PTR _NewSize$33[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp+8]
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	DWORD PTR _Side$[ebp+eax+8], xmm0

; 4769 : 
; 4770 :                     Side[1].pos.x = V1.x * -NewSize + ST.x;

	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp]
	addss	xmm0, DWORD PTR _ST$[ebp]
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _Side$[ebp+ecx], xmm0

; 4771 :                     Side[1].pos.y = V1.y * -NewSize + ST.y;

	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp+4]
	addss	xmm0, DWORD PTR _ST$[ebp+4]
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	DWORD PTR _Side$[ebp+edx+4], xmm0

; 4772 :                     Side[1].pos.z = V1.z * -NewSize + ST.z;

	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _V1$[ebp+8]
	addss	xmm0, DWORD PTR _ST$[ebp+8]
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	DWORD PTR _Side$[ebp+eax+8], xmm0

; 4773 : 
; 4774 :                     // Assign drawing data
; 4775 :                     Side[0].tu = NewTex, Side[0].tv = sv[0];

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR _NewTex$27[ebp]
	movss	DWORD PTR _Side$[ebp+ecx+20], xmm0
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _sv$[ebp+edx]
	mov	DWORD PTR _Side$[ebp+eax+24], ecx

; 4776 :                     Side[1].tu = NewTex, Side[1].tv = sv[3];

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR _NewTex$27[ebp]
	movss	DWORD PTR _Side$[ebp+edx+20], xmm0
	mov	eax, 4
	imul	eax, 3
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _sv$[ebp+eax]
	mov	DWORD PTR _Side$[ebp+ecx+24], edx

; 4777 : 
; 4778 :                     dwColor = (DebugTrail) ? F_TO_UARGB(255.0f, ColorNew.r, ColorNew.g, ColorNew.b) : F_TO_UARGB(SegAlpha, ColorNew.r, ColorNew.g, ColorNew.b);

	movzx	eax, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	eax, eax
	je	SHORT $LN76@PS_SubTrai
	push	ecx
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR tv978[ebp], esi
	jmp	SHORT $LN77@PS_SubTrai
$LN76@PS_SubTrai:
	push	ecx
	movss	xmm0, DWORD PTR _SegAlpha$22[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR tv978[ebp], esi
$LN77@PS_SubTrai:
	mov	ecx, DWORD PTR tv978[ebp]
	mov	DWORD PTR _dwColor$[ebp], ecx

; 4779 : 
; 4780 :                     Side[0].dwColour = Side[1].dwColour = dwColor;

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR _dwColor$[ebp]
	mov	DWORD PTR _Side$[ebp+edx+12], eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _dwColor$[ebp]
	mov	DWORD PTR _Side$[ebp+ecx+12], edx

; 4781 : 
; 4782 :                     // Draw the 2 side surfaces
; 4783 :                     if (DebugTrail)

	movzx	eax, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	eax, eax
	je	SHORT $LN8@PS_SubTrai

; 4784 :                     {
; 4785 :                         TheDXEngine.DX2D_AddBi(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_TAPE, (D3DXVECTOR3*)&XMMPos.d3d, Side, SegmentSize, NULL);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Side$[ebp]
	push	ecx
	lea	edx, DWORD PTR _XMMPos$[ebp]
	push	edx
	push	4194332					; 0040001cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddBi@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddBi

; 4786 :                     }
; 4787 :                     else

	jmp	SHORT $LN7@PS_SubTrai
$LN8@PS_SubTrai:

; 4788 :                         TheDXEngine.DX2D_AddBi(LAYER_AUTO, CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE | POLY_TAPE, (D3DXVECTOR3*)&XMMPos.d3d, Side, SegmentSize, SideTexHandle);

	mov	eax, DWORD PTR _SideTexHandle$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _SegmentSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Side$[ebp]
	push	ecx
	lea	edx, DWORD PTR _XMMPos$[ebp]
	push	edx
	push	4194332					; 0040001cH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddBi@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddBi
$LN7@PS_SubTrai:

; 4789 :                 }
; 4790 :                 else

	jmp	SHORT $LN6@PS_SubTrai
$LN14@PS_SubTrai:

; 4791 :                     RecalcP1 = true;

	mov	BYTE PTR _RecalcP1$[ebp], 1
$LN6@PS_SubTrai:

; 4792 : 
; 4793 :                 LastSegAlpha = SegAlpha;

	movss	xmm0, DWORD PTR _SegAlpha$22[ebp]
	movss	DWORD PTR _LastSegAlpha$[ebp], xmm0

; 4794 :                 float Rcos, Rsin;
; 4795 :                 DWORD QuadIdx = (Part.QuadListIndex + Ix * Part.QuadListStep) % PS_MAXQUADRNDLIST;

	mov	eax, DWORD PTR _Part$35[ebp]
	mov	ecx, DWORD PTR _Ix$21[ebp]
	imul	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR _Part$35[ebp]
	mov	eax, DWORD PTR [edx+60]
	add	eax, ecx
	xor	edx, edx
	mov	ecx, 1024				; 00000400H
	div	ecx
	mov	DWORD PTR _QuadIdx$19[ebp], edx

; 4796 : 
; 4797 : 
; 4798 :                 if (ST_Distance <= FragRadius)

	movss	xmm0, DWORD PTR _FragRadius$[ebp]
	comiss	xmm0, DWORD PTR _ST_Distance$[ebp]
	jb	$LN1@PS_SubTrai

; 4799 :                 {
; 4800 : 
; 4801 :                     if (ST_Distance <= FragMixOut) Alpha = ColorNew.a; //(ST_Distance > FragRadius) ? 0 : min(255, ColorNew.a * (2.0f - ST_Distance / FragRadius));

	movss	xmm0, DWORD PTR _FragMixOut$[ebp]
	comiss	xmm0, DWORD PTR _ST_Distance$[ebp]
	jb	SHORT $LN4@PS_SubTrai
	movss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	movss	DWORD PTR _Alpha$[ebp], xmm0
	jmp	SHORT $LN3@PS_SubTrai
$LN4@PS_SubTrai:

; 4802 :                     else Alpha = ColorNew.a * (1.0f  - AlphaMixCx/*3*/);

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR _AlphaMixCx$28[ebp]
	mulss	xmm0, DWORD PTR _ColorNew$[ebp+12]
	movss	DWORD PTR _Alpha$[ebp], xmm0
$LN3@PS_SubTrai:

; 4803 : 
; 4804 :                     Rcos = PS_QuadRndList[QuadIdx].RotCx.cos * NewSize;

	mov	edx, DWORD PTR _QuadIdx$19[ebp]
	imul	edx, 12					; 0000000cH
	movss	xmm0, DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[edx+8]
	mulss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR _Rcos$24[ebp], xmm0

; 4805 :                     Rsin = PS_QuadRndList[QuadIdx].RotCx.sin * NewSize;

	mov	eax, DWORD PTR _QuadIdx$19[ebp]
	imul	eax, 12					; 0000000cH
	movss	xmm0, DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[eax+4]
	mulss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR _Rsin$26[ebp], xmm0

; 4806 : 
; 4807 :                     Quad[0].pos.y = Rcos;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR _Rcos$24[ebp]
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0

; 4808 :                     Quad[0].pos.z = Rsin;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR _Rsin$26[ebp]
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 4809 :                     Quad[1].pos.y = Rsin;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	xmm0, DWORD PTR _Rsin$26[ebp]
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0

; 4810 :                     Quad[1].pos.z = -Rcos;

	movss	xmm0, DWORD PTR _Rcos$24[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0

; 4811 :                     Quad[2].pos.y = -Rcos;

	movss	xmm0, DWORD PTR _Rcos$24[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0

; 4812 :                     Quad[2].pos.z = -Rsin;

	movss	xmm0, DWORD PTR _Rsin$26[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 4813 :                     Quad[3].pos.y = -Rsin;

	movss	xmm0, DWORD PTR _Rsin$26[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0

; 4814 :                     Quad[3].pos.z = Rcos;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR _Rcos$24[ebp]
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 4815 : 
; 4816 :                     Quad[0].pos.x = Quad[1].pos.x = Quad[2].pos.x = Quad[3].pos.x = 0.0f;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0

; 4817 : 
; 4818 :                     Quad[0].dwColour = Quad[1].dwColour = Quad[2].dwColour = Quad[3].dwColour = DebugTrail ? F_TO_UARGB(255, 0, 0, 255) : F_TO_UARGB(Alpha, ColorNew.r, ColorNew.g, ColorNew.b);

	movzx	ecx, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	ecx, ecx
	je	SHORT $LN78@PS_SubTrai
	push	ecx
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR tv1115[ebp], esi
	jmp	SHORT $LN79@PS_SubTrai
$LN78@PS_SubTrai:
	push	ecx
	movss	xmm0, DWORD PTR _Alpha$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	push	ecx
	movss	xmm0, DWORD PTR _ColorNew$[ebp+8]
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	DWORD PTR tv1115[ebp], esi
$LN79@PS_SubTrai:
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR tv1115[ebp]
	mov	DWORD PTR _Quad$[ebp+edx+12], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR tv1115[ebp]
	mov	DWORD PTR _Quad$[ebp+ecx+12], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR tv1115[ebp]
	mov	DWORD PTR _Quad$[ebp+eax+12], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR tv1115[ebp]
	mov	DWORD PTR _Quad$[ebp+edx+12], eax

; 4819 : 
; 4820 :                     // Draw the ROMB
; 4821 :                     if (DebugTrail)

	movzx	ecx, BYTE PTR ?DebugTrail@@3_NA		; DebugTrail
	test	ecx, ecx
	je	SHORT $LN2@PS_SubTrai

; 4822 :                     {
; 4823 :                         TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_BB | CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE, &ST, Quad, NewSize, NULL);

	push	0
	push	ecx
	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	lea	eax, DWORD PTR _ST$[ebp]
	push	eax
	push	29					; 0000001dH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad

; 4824 :                     }
; 4825 :                     else

	jmp	SHORT $LN1@PS_SubTrai
$LN2@PS_SubTrai:

; 4826 :                         TheDXEngine.DX2D_AddQuad(LAYER_AUTO, POLY_BB | CAMERA_VERTICES | POLY_VISIBLE | CALC_DISTANCE, &ST, Quad, NewSize, /*Part.*/TexHandle);

	mov	ecx, DWORD PTR _TexHandle$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	lea	eax, DWORD PTR _ST$[ebp]
	push	eax
	push	29					; 0000001dH
	push	6
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad
$LN1@PS_SubTrai:

; 4827 :                 }
; 4828 : 
; 4829 : 
; 4830 :                 /* // ok, next is no more an entry
; 4831 :                  EntrySegment=false;*/
; 4832 :                 // Color Alpha must be updated with segments one, as it is connected to next segment
; 4833 :                 LastColor = ColorNew;

	mov	ecx, DWORD PTR _ColorNew$[ebp]
	mov	DWORD PTR _LastColor$[ebp], ecx
	mov	edx, DWORD PTR _ColorNew$[ebp+4]
	mov	DWORD PTR _LastColor$[ebp+4], edx
	mov	eax, DWORD PTR _ColorNew$[ebp+8]
	mov	DWORD PTR _LastColor$[ebp+8], eax
	mov	ecx, DWORD PTR _ColorNew$[ebp+12]
	mov	DWORD PTR _LastColor$[ebp+12], ecx

; 4834 :                 // Copy Last Point data
; 4835 :                 LastSU = NewTex, LastSize = NewSize, Ix++, LastColor = ColorNew;

	movss	xmm0, DWORD PTR _NewTex$27[ebp]
	movss	DWORD PTR _LastSU$[ebp], xmm0
	movss	xmm0, DWORD PTR _NewSize$33[ebp]
	movss	DWORD PTR _LastSize$[ebp], xmm0
	mov	edx, DWORD PTR _Ix$21[ebp]
	add	edx, 1
	mov	DWORD PTR _Ix$21[ebp], edx
	mov	eax, DWORD PTR _ColorNew$[ebp]
	mov	DWORD PTR _LastColor$[ebp], eax
	mov	ecx, DWORD PTR _ColorNew$[ebp+4]
	mov	DWORD PTR _LastColor$[ebp+4], ecx
	mov	edx, DWORD PTR _ColorNew$[ebp+8]
	mov	DWORD PTR _LastColor$[ebp+8], edx
	mov	eax, DWORD PTR _ColorNew$[ebp+12]
	mov	DWORD PTR _LastColor$[ebp+12], eax

; 4836 : 
; 4837 :             }

	jmp	$LN21@PS_SubTrai
$LN20@PS_SubTrai:

; 4838 : 
; 4839 :             LastSU = Part.SideTexIndex;

	mov	ecx, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [ecx+68]
	movss	DWORD PTR _LastSU$[ebp], xmm0

; 4840 :             Color = ColorNew;

	mov	edx, DWORD PTR _ColorNew$[ebp]
	mov	DWORD PTR _Color$[ebp], edx
	mov	eax, DWORD PTR _ColorNew$[ebp+4]
	mov	DWORD PTR _Color$[ebp+4], eax
	mov	ecx, DWORD PTR _ColorNew$[ebp+8]
	mov	DWORD PTR _Color$[ebp+8], ecx
	mov	edx, DWORD PTR _ColorNew$[ebp+12]
	mov	DWORD PTR _Color$[ebp+12], edx
$LN39@PS_SubTrai:

; 4841 :         }
; 4842 : 
; 4843 :         // if here, still a trail node is valid
; 4844 :         TrailValid = true;

	mov	BYTE PTR _TrailValid$[ebp], 1
$LN24@PS_SubTrai:
$LN30@PS_SubTrai:
$LN46@PS_SubTrai:
$Skip$82:

; 4845 : 
; 4846 :         Skip:
; 4847 :         // ok, next is no more an entry
; 4848 :         EntrySegment = false;

	mov	BYTE PTR _EntrySegment$[ebp], 0

; 4849 :         S1_Distance = S0_Distance;

	movss	xmm0, DWORD PTR _S0_Distance$[ebp]
	movss	DWORD PTR _S1_Distance$[ebp], xmm0

; 4850 :         S1 = S0;

	mov	eax, DWORD PTR _S0$[ebp]
	mov	DWORD PTR _S1$[ebp], eax
	mov	ecx, DWORD PTR _S0$[ebp+4]
	mov	DWORD PTR _S1$[ebp+4], ecx
	mov	edx, DWORD PTR _S0$[ebp+8]
	mov	DWORD PTR _S1$[ebp+8], edx

; 4851 :         LastSU = Part.SideTexIndex;

	mov	eax, DWORD PTR _Part$35[ebp]
	movss	xmm0, DWORD PTR [eax+68]
	movss	DWORD PTR _LastSU$[ebp], xmm0

; 4852 :         LastColor = Color;

	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR _LastColor$[ebp], ecx
	mov	edx, DWORD PTR _Color$[ebp+4]
	mov	DWORD PTR _LastColor$[ebp+4], edx
	mov	eax, DWORD PTR _Color$[ebp+8]
	mov	DWORD PTR _LastColor$[ebp+8], eax
	mov	ecx, DWORD PTR _Color$[ebp+12]
	mov	DWORD PTR _LastColor$[ebp+12], ecx

; 4853 :         LastSize = Size;

	movss	xmm0, DWORD PTR _Size$30[ebp]
	movss	DWORD PTR _LastSize$[ebp], xmm0

; 4854 :     }

	jmp	$LN81@PS_SubTrai
$LN52@PS_SubTrai:

; 4855 : 
; 4856 : 
; 4857 : 
; 4858 : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?PS_SubTrailRun@DrawableParticleSys@@CAXPAUTrailSubPartType@@AAUD3DXVECTOR3@@AAK2KK@Z ENDP ; DrawableParticleSys::PS_SubTrailRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_pt$ = -20						; size = 4
tv222 = -16						; size = 4
tv216 = -12						; size = 4
tv206 = -8						; size = 4
_TPN$ = -4						; size = 4
_Part$ = 8						; size = 4
_ID$ = 12						; size = 4
_AlphaCx$ = 16						; size = 4
_SizeCx$ = 20						; size = 4
_Pos$ = 24						; size = 4
_Wind$ = 28						; size = 4
_Offset$ = 32						; size = 4
_CLUSTER$ = 36						; size = 4
?PS_AddSubTrail@DrawableParticleSys@@CAXAAUTrailSubPartType@@HMMPAUTpoint@@11K@Z PROC ; DrawableParticleSys::PS_AddSubTrail

; 4244 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 4245 : 
; 4246 :     // Pointer to trail parametes
; 4247 :     // Part.TPN=ID;
; 4248 :     PS_TPType &TPN = PS_TPN[ID];

	mov	eax, DWORD PTR _ID$[ebp]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _TPN$[ebp], eax

; 4249 : 
; 4250 :     // setup parameters
; 4251 :     Part.CLUSTER = CLUSTER;

	mov	ecx, DWORD PTR _Part$[ebp]
	mov	edx, DWORD PTR _CLUSTER$[ebp]
	mov	DWORD PTR [ecx], edx

; 4252 :     Part.Pos = *Pos;

	mov	eax, DWORD PTR _Part$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _Pos$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx

; 4253 :     Part.Wind = *Wind;

	mov	edx, DWORD PTR _Part$[ebp]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _Wind$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 4254 : 
; 4255 :     if (Offset) Part.Offset = *Offset;

	cmp	DWORD PTR _Offset$[ebp], 0
	je	SHORT $LN3@PS_AddSubT
	mov	ecx, DWORD PTR _Part$[ebp]
	add	ecx, 36					; 00000024H
	mov	edx, DWORD PTR _Offset$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN2@PS_AddSubT
$LN3@PS_AddSubT:

; 4256 :     else Part.Offset.x = Part.Offset.y = Part.Offset.z = 0.0f;

	mov	eax, DWORD PTR _Part$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+44], xmm0
	mov	ecx, DWORD PTR _Part$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+40], xmm0
	mov	edx, DWORD PTR _Part$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+36], xmm0
$LN2@PS_AddSubT:

; 4257 : 
; 4258 :     Part.Wind.z += TPN.Weight * (0.9f + PRANDFloatPos() * 0.1f);

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv206[ebp]
	movss	xmm0, DWORD PTR tv206[ebp]
	mulss	xmm0, DWORD PTR __real@3dcccccd
	addss	xmm0, DWORD PTR __real@3f666666
	mov	eax, DWORD PTR _TPN$[ebp]
	mulss	xmm0, DWORD PTR [eax+152]
	mov	ecx, DWORD PTR _Part$[ebp]
	addss	xmm0, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _Part$[ebp]
	movss	DWORD PTR [edx+32], xmm0

; 4259 : 
; 4260 :     Part.SizeRnd = SizeCx + PRANDFloat() * 0.2f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv216[ebp]
	movss	xmm0, DWORD PTR tv216[ebp]
	mulss	xmm0, DWORD PTR __real@3e4ccccd
	addss	xmm0, DWORD PTR _SizeCx$[ebp]
	mov	eax, DWORD PTR _Part$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 4261 :     Part.ColorRnd = 0.8f + PRANDFloat() * 0.2f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv222[ebp]
	movss	xmm0, DWORD PTR tv222[ebp]
	mulss	xmm0, DWORD PTR __real@3e4ccccd
	addss	xmm0, DWORD PTR __real@3f4ccccd
	mov	ecx, DWORD PTR _Part$[ebp]
	movss	DWORD PTR [ecx+52], xmm0

; 4262 :     Part.AlphaRnd = AlphaCx;

	mov	edx, DWORD PTR _Part$[ebp]
	movss	xmm0, DWORD PTR _AlphaCx$[ebp]
	movss	DWORD PTR [edx+56], xmm0

; 4263 :     Part.Birth = PS_RunTime;

	mov	eax, DWORD PTR _Part$[ebp]
	mov	ecx, DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_RunTime
	mov	DWORD PTR [eax+4], ecx

; 4264 :     Part.Split = Part.Entry = Part.Exit = false;

	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, -3					; fffffffdH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, -2					; fffffffeH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR _Part$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, -5					; fffffffbH
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 4265 : 
; 4266 :     ParticleTextureNode *pt = TPN.SideTexture;

	mov	edx, DWORD PTR _TPN$[ebp]
	mov	eax, DWORD PTR [edx+316]
	mov	DWORD PTR _pt$[ebp], eax

; 4267 : 
; 4268 :     // check if depending on group texture
; 4269 :     if (TPN.GroupFlags & GRP_TEXTURE2)

	mov	ecx, DWORD PTR _TPN$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	and	edx, 2
	je	SHORT $LN1@PS_AddSubT

; 4270 :         // if depending from a group, ask for a random texture node
; 4271 :         pt = (ParticleTextureNode*)(((ParticleGroupNode*)(TPN.SideTexture))->GetRandomArgument());

	mov	eax, DWORD PTR _TPN$[ebp]
	mov	ecx, DWORD PTR [eax+316]
	call	?GetRandomArgument@ParticleGroupNode@@QAEPAXXZ ; ParticleGroupNode::GetRandomArgument
	mov	DWORD PTR _pt$[ebp], eax
$LN1@PS_AddSubT:

; 4272 : 
; 4273 :     Part.QuadListIndex = rand() % PS_MAXQUADRNDLIST;

	call	_rand
	and	eax, -2147482625			; 800003ffH
	jns	SHORT $LN6@PS_AddSubT
	dec	eax
	or	eax, -1024				; fffffc00H
	inc	eax
$LN6@PS_AddSubT:
	mov	ecx, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [ecx+60], eax

; 4274 :     Part.QuadListStep = rand() % 7 + 1;

	call	_rand
	cdq
	mov	ecx, 7
	idiv	ecx
	add	edx, 1
	mov	eax, DWORD PTR _Part$[ebp]
	mov	DWORD PTR [eax+64], edx

; 4275 : 
; 4276 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_AddSubTrail@DrawableParticleSys@@CAXAAUTrailSubPartType@@HMMPAUTpoint@@11K@Z ENDP ; DrawableParticleSys::PS_AddSubTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_LastPtr$ = -12						; size = 4
_ptr$ = -8						; size = 4
_Trail$1 = -4						; size = 4
?PS_TrailsClear@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_TrailsClear

; 4005 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 4006 :     // Get the List entry
; 4007 :     PS_PTR ptr = PS_Lists[PS_TRAILS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	imul	eax, 5
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN3@PS_TrailsC:

; 4008 : 
; 4009 :     // thru all the list
; 4010 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	SHORT $LN4@PS_TrailsC

; 4011 :     {
; 4012 :         TrailEmitterType &Trail = (((TrailEmitterType*)PS_Lists[PS_TRAILS_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	imul	edx, 5
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 172				; 000000acH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Trail$1[ebp], eax

; 4013 :         Trail.Handle = NULL;

	mov	ecx, DWORD PTR _Trail$1[ebp]
	mov	DWORD PTR [ecx+16], 0

; 4014 : 
; 4015 :         if (Trail.TRAIL) free(Trail.TRAIL);

	mov	edx, DWORD PTR _Trail$1[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN1@PS_TrailsC
	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_free
	add	esp, 4
$LN1@PS_TrailsC:

; 4016 : 
; 4017 :         Trail.TRAIL = NULL;

	mov	edx, DWORD PTR _Trail$1[ebp]
	mov	DWORD PTR [edx+20], 0

; 4018 :         ptr = Trail.NEXT;

	mov	eax, DWORD PTR _Trail$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx

; 4019 :     }

	jmp	SHORT $LN3@PS_TrailsC
$LN4@PS_TrailsC:

; 4020 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_TrailsClear@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_TrailsClear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -184						; size = 12
$T2 = -172						; size = 12
$T3 = -160						; size = 12
_Life$4 = -148						; size = 4
_Life$5 = -144						; size = 4
_Origin$ = -140						; size = 12
tv856 = -128						; size = 4
tv847 = -124						; size = 4
tv747 = -120						; size = 4
_Distance$6 = -116					; size = 4
tv824 = -112						; size = 4
tv741 = -108						; size = 4
_YRand$7 = -104						; size = 4
_SubPos$ = -100						; size = 12
tv361 = -88						; size = 4
_Offset$ = -84						; size = 12
_LastPtr$ = -72						; size = 4
_TexSeg$8 = -68						; size = 4
tv185 = -64						; size = 4
_TrailEmitters$ = -60					; size = 4
_Part$9 = -56						; size = 4
_PN$10 = -52						; size = 4
_XRand$11 = -48						; size = 4
_SV$ = -44						; size = 12
_ptr$ = -32						; size = 4
_Part$12 = -28						; size = 4
_TPN$13 = -24						; size = 4
_Trail$14 = -20						; size = 4
$T15 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?PS_TrailRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_TrailRun

; 4024 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi

; 4025 : #ifdef DEBUG_NEW_PS_TRAILS
; 4026 :     DWORD TrailEmitters = 0;

	mov	DWORD PTR _TrailEmitters$[ebp], 0

; 4027 : #endif
; 4028 : 
; 4029 :     D3DXVECTOR3 Origin, SubPos;

	lea	ecx, DWORD PTR _Origin$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3
	lea	ecx, DWORD PTR _SubPos$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 4030 :     D3DXVECTOR3 Offset;

	lea	ecx, DWORD PTR _Offset$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 4031 :     D3DXVECTOR3 SV;

	lea	ecx, DWORD PTR _SV$[ebp]
	call	??0D3DXVECTOR3@@QAE@XZ			; D3DXVECTOR3::D3DXVECTOR3

; 4032 : 
; 4033 :     // Get the List entry
; 4034 :     PS_PTR ptr = PS_Lists[PS_TRAILS_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	imul	eax, 5
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN39@PS_TrailRu:

; 4035 : 
; 4036 :     // thru all the list
; 4037 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN31@PS_TrailRu

; 4038 :     {
; 4039 : 
; 4040 : #ifdef DEBUG_NEW_PS_TRAILS
; 4041 :         TrailEmitters ++;

	mov	edx, DWORD PTR _TrailEmitters$[ebp]
	add	edx, 1
	mov	DWORD PTR _TrailEmitters$[ebp], edx

; 4042 : #endif
; 4043 :         TrailEmitterType &Trail = (((TrailEmitterType*)PS_Lists[PS_TRAILS_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	imul	eax, 5
	mov	ecx, DWORD PTR _ptr$[ebp]
	imul	ecx, 172				; 000000acH
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _Trail$14[ebp], ecx

; 4044 :         PS_TPType &TPN = PS_TPN[Trail.ID];

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+148]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _TPN$13[ebp], eax

; 4045 : 
; 4046 :         // If part is dead, remove it, all last stages have been already killed/exucuted
; 4047 :         if (Trail.OWNER != PS_NOPTR && !(((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[Trail.OWNER]).Alive) Trail.Alive = false;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	cmp	DWORD PTR [ecx+4], -1
	je	SHORT $LN30@PS_TrailRu
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 124				; 0000007cH
	mov	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	al, BYTE PTR [edx+ecx+32]
	shl	al, 7
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN30@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -2					; fffffffeH
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al
$LN30@PS_TrailRu:

; 4048 : 
; 4049 :         if (!Trail.Run) goto Skip;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	shl	al, 5
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN29@PS_TrailRu
	jmp	$LN28@PS_TrailRu
	jmp	$Skip$41
$LN29@PS_TrailRu:

; 4050 : 
; 4051 :         // Check for emit time....
; 4052 :         Trail.Elapsed += PS_ElapsedTime;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [edx+96]
	addss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [eax+96], xmm0

; 4053 :         Trail.Wind = ((WeatherClass*)realWeather)->GetWindVector();

	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ ; RealWeather::GetWindVector
	mov	edx, DWORD PTR _Trail$14[ebp]
	add	edx, 60					; 0000003cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 4054 : 
; 4055 : 
; 4056 :         if (Trail.Alive && Trail.OWNER != PS_NOPTR)

	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	dl, BYTE PTR [ecx+168]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	$LN25@PS_TrailRu
	mov	ecx, DWORD PTR _Trail$14[ebp]
	cmp	DWORD PTR [ecx+4], -1
	je	$LN25@PS_TrailRu

; 4057 :         {
; 4058 :             Trail.Life +=  PS_ElapsedTime * Trail.LifeCx;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mulss	xmm0, DWORD PTR [edx+104]
	mov	eax, DWORD PTR _Trail$14[ebp]
	addss	xmm0, DWORD PTR [eax+108]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [ecx+108], xmm0

; 4059 : 
; 4060 :             if (Trail.Life >= 1.0f) Trail.Alive = false;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [edx+108]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN26@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	and	cl, -2					; fffffffeH
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [edx+168], cl

; 4061 :             else

	jmp	$LN25@PS_TrailRu
$LN26@PS_TrailRu:

; 4062 :             {
; 4063 :                 ParticleNodeType &PN = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[Trail.OWNER]);

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 124				; 0000007cH
	add	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _PN$10[ebp], edx

; 4064 :                 Trail.Pos = PN.pos;

	mov	eax, DWORD PTR _PN$10[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _Trail$14[ebp]
	add	ecx, 36					; 00000024H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 4065 :                 float Life = max(Trail.Life, PN.life);

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [ecx+108]
	mov	edx, DWORD PTR _PN$10[ebp]
	comiss	xmm0, DWORD PTR [edx+28]
	jbe	SHORT $LN35@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [eax+108]
	movss	DWORD PTR tv185[ebp], xmm0
	jmp	SHORT $LN36@PS_TrailRu
$LN35@PS_TrailRu:
	mov	ecx, DWORD PTR _PN$10[ebp]
	movss	xmm0, DWORD PTR [ecx+28]
	movss	DWORD PTR tv185[ebp], xmm0
$LN36@PS_TrailRu:
	movss	xmm0, DWORD PTR tv185[ebp]
	movss	DWORD PTR _Life$4[ebp], xmm0

; 4066 :                 Trail.Updated = true;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	or	al, 8
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al
$LN25@PS_TrailRu:

; 4067 :             }
; 4068 : 
; 4069 :         }
; 4070 : 
; 4071 :         if (!PS_ElapsedTime) Trail.Updated = false;

	movss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN24@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -9					; fffffff7H
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al
$LN24@PS_TrailRu:

; 4072 : 
; 4073 :         // THIS IS THE TRAIL ORIGIN, used in following calculations
; 4074 :         if (Trail.StartUp) Trail.Origin = *(D3DXVECTOR3*)&Trail.Pos;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	shl	al, 6
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
$LN23@PS_TrailRu:

; 4075 : 
; 4076 :         // Trail segments have position relative to the trail origin
; 4077 :         SubPos = *(D3DXVECTOR3*)&Trail.Pos - Trail.Origin;

	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 72					; 00000048H
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _Trail$14[ebp]
	add	ecx, 36					; 00000024H
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _SubPos$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _SubPos$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _SubPos$[ebp+8], edx

; 4078 :         // Calculate present trail vector
; 4079 :         SV = *(D3DXVECTOR3*)&Trail.Pos - *(D3DXVECTOR3*)&Trail.LastPos;

	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 48					; 00000030H
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _Trail$14[ebp]
	add	ecx, 36					; 00000024H
	call	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z		; D3DXVECTOR3::operator-
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _SV$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _SV$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _SV$[ebp+8], edx

; 4080 :         SV = RED_NormalizeVector(&SV);

	lea	eax, DWORD PTR _SV$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?RED_NormalizeVector@@YA?AUD3DXVECTOR3@@PAU1@@Z ; RED_NormalizeVector
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _SV$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _SV$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _SV$[ebp+8], edx

; 4081 : 
; 4082 :         if (Trail.Alive && Trail.Updated && Trail.Elapsed >= Trail.Interval)

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 7
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	$LN22@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 4
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	$LN22@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [eax+96]
	comiss	xmm0, DWORD PTR [ecx+100]
	jb	$LN22@PS_TrailRu

; 4083 :         {
; 4084 :             float Life = Trail.Life;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [edx+108]
	movss	DWORD PTR _Life$5[ebp], xmm0

; 4085 : 
; 4086 : 
; 4087 :             float XRand, YRand;
; 4088 : 
; 4089 :             // * RANDOMIC STUFF *
; 4090 :             XRand = PRANDFloat() * TPN.RndLimit * TPN.RndStep;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv741[ebp]
	movss	xmm0, DWORD PTR tv741[ebp]
	mov	eax, DWORD PTR _TPN$13[ebp]
	mulss	xmm0, DWORD PTR [eax+300]
	mov	ecx, DWORD PTR _TPN$13[ebp]
	mulss	xmm0, DWORD PTR [ecx+304]
	movss	DWORD PTR _XRand$11[ebp], xmm0

; 4091 :             YRand = PRANDFloat() * TPN.RndLimit * TPN.RndStep;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv747[ebp]
	movss	xmm0, DWORD PTR tv747[ebp]
	mov	edx, DWORD PTR _TPN$13[ebp]
	mulss	xmm0, DWORD PTR [edx+300]
	mov	eax, DWORD PTR _TPN$13[ebp]
	mulss	xmm0, DWORD PTR [eax+304]
	movss	DWORD PTR _YRand$7[ebp], xmm0

; 4092 :             Trail.OffsetX += XRand;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [ecx+132]
	addss	xmm0, DWORD PTR _XRand$11[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [edx+132], xmm0

; 4093 :             Trail.OffsetY += YRand;

	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [eax+136]
	addss	xmm0, DWORD PTR _YRand$7[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [ecx+136], xmm0

; 4094 : 
; 4095 :             if (Trail.OffsetX >= TPN.RndLimit) Trail.OffsetX = TPN.RndLimit - XRand;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [edx+132]
	comiss	xmm0, DWORD PTR [eax+300]
	jb	SHORT $LN21@PS_TrailRu
	mov	ecx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [ecx+300]
	subss	xmm0, DWORD PTR _XRand$11[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [edx+132], xmm0
$LN21@PS_TrailRu:

; 4096 : 
; 4097 :             if (Trail.OffsetY >= TPN.RndLimit) Trail.OffsetY = TPN.RndLimit - XRand;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [eax+136]
	comiss	xmm0, DWORD PTR [ecx+300]
	jb	SHORT $LN20@PS_TrailRu
	mov	edx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [edx+300]
	subss	xmm0, DWORD PTR _XRand$11[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [eax+136], xmm0
$LN20@PS_TrailRu:

; 4098 : 
; 4099 :             if (Trail.OffsetX <= -TPN.RndLimit) Trail.OffsetX = -TPN.RndLimit + XRand;

	mov	ecx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [ecx+300]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _Trail$14[ebp]
	comiss	xmm0, DWORD PTR [edx+132]
	jb	SHORT $LN19@PS_TrailRu
	mov	eax, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [eax+300]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR _XRand$11[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [ecx+132], xmm0
$LN19@PS_TrailRu:

; 4100 : 
; 4101 :             if (Trail.OffsetY <= -TPN.RndLimit) Trail.OffsetY = -TPN.RndLimit + XRand;

	mov	edx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [edx+300]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _Trail$14[ebp]
	comiss	xmm0, DWORD PTR [eax+136]
	jb	SHORT $LN18@PS_TrailRu
	mov	ecx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [ecx+300]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	addss	xmm0, DWORD PTR _XRand$11[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [edx+136], xmm0
$LN18@PS_TrailRu:

; 4102 : 
; 4103 :             // The Offset based on the vector
; 4104 :             Offset.x = SV.y * Trail.OffsetX + SV.z * Trail.OffsetY;

	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp+4]
	mulss	xmm0, DWORD PTR [eax+132]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp+8]
	mulss	xmm1, DWORD PTR [ecx+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp], xmm0

; 4105 :             Offset.y = SV.z * Trail.OffsetX + SV.x * Trail.OffsetY;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp+8]
	mulss	xmm0, DWORD PTR [edx+132]
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp]
	mulss	xmm1, DWORD PTR [eax+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp+4], xmm0

; 4106 :             Offset.z = SV.x * Trail.OffsetX + SV.y * Trail.OffsetY;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp]
	mulss	xmm0, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp+4]
	mulss	xmm1, DWORD PTR [edx+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp+8], xmm0

; 4107 : 
; 4108 :             // EMIT THE TRAIL SUB PART
; 4109 :             PS_AddSubTrail(Trail.TRAIL[Trail.Last], Trail.ID, Trail.AlphaCx, Trail.SizeCx, (Tpoint*)&SubPos, &Trail.Wind, (Tpoint*)&Offset, Trail.CLUSTER);

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	edx, DWORD PTR _Offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	lea	ecx, DWORD PTR _SubPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Trail$14[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+140]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Trail$14[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+144]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [ecx+148]
	push	edx
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+32]
	imul	ecx, 72					; 00000048H
	mov	edx, DWORD PTR _Trail$14[ebp]
	add	ecx, DWORD PTR [edx+20]
	push	ecx
	call	?PS_AddSubTrail@DrawableParticleSys@@CAXAAUTrailSubPartType@@HMMPAUTpoint@@11K@Z ; DrawableParticleSys::PS_AddSubTrail
	add	esp, 32					; 00000020H

; 4110 : 
; 4111 :             // Texture setting
; 4112 :             TrailSubPartType &Part = Trail.TRAIL[Trail.Last];

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+32]
	imul	ecx, 72					; 00000048H
	mov	edx, DWORD PTR _Trail$14[ebp]
	add	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR _Part$9[ebp], ecx

; 4113 : 
; 4114 :             // Get the texture coord lenght and divide it by the assigned texture rate for 100 feet
; 4115 :             float TexSeg = Trail.su[1] - Trail.su[0];

	mov	eax, 4
	shl	eax, 0
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	esi, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [edx+eax+160]
	subss	xmm0, DWORD PTR [esi+ecx+160]
	movss	DWORD PTR _TexSeg$8[ebp], xmm0

; 4116 : 
; 4117 :             // if the Trail StartUp ( 1st Node ), initialize a randomic texture start index
; 4118 :             if (Trail.StartUp || Trail.Split)

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN16@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 3
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN17@PS_TrailRu
$LN16@PS_TrailRu:

; 4119 :             {
; 4120 :                 Trail.NextTexIndex = Trail.su[0] + TexSeg * PRANDFloatPos(), Trail.StartUp = false;;

	mov	esi, 4
	imul	esi, 0
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv824[ebp]
	movss	xmm0, DWORD PTR tv824[ebp]
	mulss	xmm0, DWORD PTR _TexSeg$8[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	addss	xmm0, DWORD PTR [eax+esi+160]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [ecx+128], xmm0
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -3					; fffffffdH
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al

; 4121 :                 // ok, done
; 4122 :                 Trail.Split = Trail.StartUp = false;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -3					; fffffffdH
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -17					; ffffffefH
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al

; 4123 :                 // if coming from a Split or entry, mark the segment as entry
; 4124 :                 Part.Entry = true;

	mov	edx, DWORD PTR _Part$9[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 1
	mov	ecx, DWORD PTR _Part$9[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN17@PS_TrailRu:

; 4125 :             }
; 4126 : 
; 4127 :             Trail.TexStep = TexSeg / Trail.TexRate;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _TexSeg$8[ebp]
	divss	xmm0, DWORD PTR [edx+116]
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [eax+124], xmm0

; 4128 : 
; 4129 :             // now get the extension for this segment + a 30% randomness
; 4130 :             Trail.TexStep *=  0.85f + 0.15f * PRANDFloat();

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv847[ebp]
	movss	xmm0, DWORD PTR tv847[ebp]
	mulss	xmm0, DWORD PTR __real@3e19999a
	addss	xmm0, DWORD PTR __real@3f59999a
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mulss	xmm0, DWORD PTR [ecx+124]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [edx+124], xmm0

; 4131 :             // Setup a randomic direction
; 4132 :             Trail.TexStep *= (PRANDFloatPos() > 0.5f) ? 1.0f : -1.0f;

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv856[ebp]
	movss	xmm0, DWORD PTR tv856[ebp]
	comiss	xmm0, DWORD PTR __real@3f000000
	jbe	SHORT $LN37@PS_TrailRu
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR tv361[ebp], xmm0
	jmp	SHORT $LN38@PS_TrailRu
$LN37@PS_TrailRu:
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR tv361[ebp], xmm0
$LN38@PS_TrailRu:
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [eax+124]
	mulss	xmm0, DWORD PTR tv361[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [ecx+124], xmm0

; 4133 : 
; 4134 : 
; 4135 :             // Assign Last Texture Coords
; 4136 :             Part.SideTexIndex = Trail.NextTexIndex;

	mov	edx, DWORD PTR _Part$9[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR [edx+68], ecx

; 4137 :             //Part.su[1] = Trail.NextTexIndex;
; 4138 :             Trail.LastTexIndex = Trail.NextTexIndex;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR [edx+120], ecx

; 4139 : 
; 4140 :             // Ring the trail list
; 4141 :             Trail.Last++;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+32]
	add	eax, 1
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [ecx+32], eax

; 4142 : 
; 4143 :             if (Trail.Last >= Trail.Nodes) Trail.Last = 0;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [edx+32]
	cmp	ecx, DWORD PTR [eax+24]
	jb	SHORT $LN15@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+32], 0
$LN15@PS_TrailRu:

; 4144 : 
; 4145 :             if (Trail.Entry == Trail.Last) Trail.Entry++;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [eax+28]
	cmp	edx, DWORD PTR [ecx+32]
	jne	SHORT $LN14@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+28], ecx
$LN14@PS_TrailRu:

; 4146 : 
; 4147 :             if (Trail.Entry >= Trail.Nodes) Trail.Entry = 0;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [eax+28]
	cmp	edx, DWORD PTR [ecx+24]
	jb	SHORT $LN13@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [eax+28], 0
$LN13@PS_TrailRu:

; 4148 : 
; 4149 :             Trail.Elapsed = 0;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+96], xmm0

; 4150 :             (*(D3DXVECTOR3*)&Trail.LastPos) = (*(D3DXVECTOR3*)&Trail.Pos);// + Offset;

	mov	edx, DWORD PTR _Trail$14[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 48					; 00000030H
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 4151 : 
; 4152 :             Trail.QuadListIndex = rand() % PS_MAXQUADRNDLIST;

	call	_rand
	and	eax, -2147482625			; 800003ffH
	jns	SHORT $LN40@PS_TrailRu
	dec	eax
	or	eax, -1024				; fffffc00H
	inc	eax
$LN40@PS_TrailRu:
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [ecx+152], eax

; 4153 :             Trail.QuadListStep = rand() % 7 + 1;

	call	_rand
	cdq
	mov	ecx, 7
	idiv	ecx
	add	edx, 1
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [eax+156], edx
$LN22@PS_TrailRu:

; 4154 : 
; 4155 :         }
; 4156 : 
; 4157 :         // Get the header segment
; 4158 :         TrailSubPartType &Part = Trail.TRAIL[Trail.Last];

	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [ecx+32]
	imul	edx, 72					; 00000048H
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _Part$12[ebp], edx

; 4159 : 
; 4160 : 
; 4161 :         // if here and Trail.Elapsed is more than twice the interval, means trail may have been
; 4162 :         // suspended and splitted...
; 4163 :         if (!Trail.Split && Trail.Elapsed >= (Trail.Interval * 2))

	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	dl, BYTE PTR [ecx+168]
	shl	dl, 3
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	$LN9@PS_TrailRu
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [ecx+100]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR [edx+96]
	comiss	xmm1, xmm0
	jb	$LN9@PS_TrailRu

; 4164 :         {
; 4165 :             // flag the split
; 4166 :             Part.Exit = Part.Split = true;

	mov	eax, DWORD PTR _Part$12[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 4
	mov	edx, DWORD PTR _Part$12[ebp]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR _Part$12[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 2
	mov	edx, DWORD PTR _Part$12[ebp]
	mov	DWORD PTR [edx+8], ecx

; 4167 :             // mark the trail for being in pause
; 4168 :             Trail.Split = true;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	or	cl, 16					; 00000010H
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [edx+168], cl

; 4169 :             // Ring the List
; 4170 :             Trail.Last++;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+32], ecx

; 4171 : 
; 4172 :             if (Trail.Last >= Trail.Nodes) Trail.Last = 0;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+24]
	jb	SHORT $LN11@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [eax+32], 0
$LN11@PS_TrailRu:

; 4173 : 
; 4174 :             if (Trail.Entry == Trail.Last) Trail.Entry++;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [ecx+28]
	cmp	eax, DWORD PTR [edx+32]
	jne	SHORT $LN10@PS_TrailRu
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [eax+28], edx
$LN10@PS_TrailRu:

; 4175 : 
; 4176 :             if (Trail.Entry >= Trail.Nodes) Trail.Entry = 0;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [ecx+28]
	cmp	eax, DWORD PTR [edx+24]
	jb	SHORT $LN9@PS_TrailRu
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [ecx+28], 0
$LN9@PS_TrailRu:

; 4177 :         }
; 4178 : 
; 4179 :         // Header - execute only if not suspended
; 4180 :         if (!Trail.Split)

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	shl	al, 3
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN6@PS_TrailRu

; 4181 :         {
; 4182 : 
; 4183 :             // The Offset based on the vector
; 4184 :             Offset.x = SV.y * Trail.OffsetX + SV.z * Trail.OffsetY;

	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp+4]
	mulss	xmm0, DWORD PTR [edx+132]
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp+8]
	mulss	xmm1, DWORD PTR [eax+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp], xmm0

; 4185 :             Offset.y = SV.z * Trail.OffsetX + SV.x * Trail.OffsetY;

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp+8]
	mulss	xmm0, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp]
	mulss	xmm1, DWORD PTR [edx+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp+4], xmm0

; 4186 :             Offset.z = SV.x * Trail.OffsetX + SV.y * Trail.OffsetY;

	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR _SV$[ebp]
	mulss	xmm0, DWORD PTR [eax+132]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm1, DWORD PTR _SV$[ebp+4]
	mulss	xmm1, DWORD PTR [ecx+136]
	addss	xmm0, xmm1
	movss	DWORD PTR _Offset$[ebp+8], xmm0

; 4187 : 
; 4188 :             // UPDATE THE HEADER SUB PART
; 4189 :             if (Trail.Updated) PS_AddSubTrail(Trail.TRAIL[Trail.Last], Trail.ID, Trail.AlphaCx, Trail.SizeCx, (Tpoint*)&SubPos, &Trail.Wind, (Tpoint*)&Offset, Trail.CLUSTER);

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	shl	al, 4
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	lea	ecx, DWORD PTR _Offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Trail$14[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	lea	eax, DWORD PTR _SubPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Trail$14[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+140]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _Trail$14[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+144]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+32]
	imul	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _Trail$14[ebp]
	add	eax, DWORD PTR [ecx+20]
	push	eax
	call	?PS_AddSubTrail@DrawableParticleSys@@CAXAAUTrailSubPartType@@HMMPAUTpoint@@11K@Z ; DrawableParticleSys::PS_AddSubTrail
	add	esp, 32					; 00000020H
$LN7@PS_TrailRu:

; 4190 : 
; 4191 :             // Get the Last Emission distance
; 4192 :             float Distance = RED_Distance3D((D3DXVECTOR3*) &Trail.Pos, (D3DXVECTOR3*) &Trail.LastPos);

	mov	edx, DWORD PTR _Trail$14[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 36					; 00000024H
	push	eax
	call	?RED_Distance3D@@YAMPAUD3DXVECTOR3@@0@Z	; RED_Distance3D
	add	esp, 8
	fstp	DWORD PTR _Distance$6[ebp]

; 4193 : 
; 4194 :             // Calculate texture extension based on distance
; 4195 :             Trail.NextTexIndex = Trail.LastTexIndex + (Trail.TexStep * Distance / 100.0f);

	mov	ecx, DWORD PTR _Trail$14[ebp]
	movss	xmm0, DWORD PTR [ecx+124]
	mulss	xmm0, DWORD PTR _Distance$6[ebp]
	divss	xmm0, DWORD PTR __real@42c80000
	mov	edx, DWORD PTR _Trail$14[ebp]
	addss	xmm0, DWORD PTR [edx+120]
	mov	eax, DWORD PTR _Trail$14[ebp]
	movss	DWORD PTR [eax+128], xmm0

; 4196 :             // Assign New Texture Coords
; 4197 :             Part.SideTexIndex = Trail.NextTexIndex;

	mov	ecx, DWORD PTR _Part$12[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	DWORD PTR [ecx+68], eax

; 4198 :             // Part.su[1] = Trail.NextTexIndex;
; 4199 :             Part.QuadListIndex = Trail.QuadListIndex;

	mov	ecx, DWORD PTR _Part$12[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	DWORD PTR [ecx+60], eax

; 4200 :             Part.QuadListStep = Trail.QuadListStep ;

	mov	ecx, DWORD PTR _Part$12[ebp]
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	DWORD PTR [ecx+64], eax

; 4201 :             Part.Pos = *(Tpoint*)&SubPos;

	mov	ecx, DWORD PTR _Part$12[ebp]
	add	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _SubPos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _SubPos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _SubPos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx

; 4202 : 
; 4203 :             if (!Trail.Alive) Part.Exit = true;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 7
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN6@PS_TrailRu
	mov	eax, DWORD PTR _Part$12[ebp]
	mov	ecx, DWORD PTR [eax+8]
	or	ecx, 2
	mov	edx, DWORD PTR _Part$12[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@PS_TrailRu:

; 4204 :         }
; 4205 : 
; 4206 :         // Make origin Camera centric
; 4207 :         TheDXEngine.DX2D_MakeCameraSpace(&Origin, &Trail.Origin);

	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 72					; 00000048H
	push	eax
	lea	ecx, DWORD PTR _Origin$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_MakeCameraSpace@CDXEngine@@QAEXPAUD3DXVECTOR3@@0@Z ; CDXEngine::DX2D_MakeCameraSpace

; 4208 : 
; 4209 :         // Update the Trail if something to draw
; 4210 :         if (Trail.Entry != Trail.Last) PS_SubTrailRun(Trail.TRAIL, Origin, Trail.Entry, Trail.Last, Trail.Nodes, Trail.ID);

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [edx+28]
	cmp	ecx, DWORD PTR [eax+32]
	je	SHORT $LN5@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _Trail$14[ebp]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _Trail$14[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	lea	edx, DWORD PTR _Origin$[ebp]
	push	edx
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?PS_SubTrailRun@DrawableParticleSys@@CAXPAUTrailSubPartType@@AAUD3DXVECTOR3@@AAK2KK@Z ; DrawableParticleSys::PS_SubTrailRun
	add	esp, 24					; 00000018H
$LN5@PS_TrailRu:
$LN28@PS_TrailRu:
$Skip$41:

; 4211 : 
; 4212 :         Skip:
; 4213 :         Trail.Updated = false;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	and	al, -9					; fffffff7H
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	BYTE PTR [ecx+168], al

; 4214 : 
; 4215 :         // If trail is waiting to die, kill any possible reference to it
; 4216 :         if (!Trail.Alive) Trail.Handle = NULL;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	al, BYTE PTR [edx+168]
	shl	al, 7
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@PS_TrailRu
	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+16], 0
$LN4@PS_TrailRu:

; 4217 : 
; 4218 :         // check for dead, can be dead also when the trail time has elapsed since last Sub Part geneation
; 4219 :         if ((!Trail.Alive && Trail.Entry == Trail.Last) || Trail.Elapsed >= TPN.LifeSpan)

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	cl, BYTE PTR [eax+168]
	shl	cl, 7
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN1@PS_TrailRu
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _Trail$14[ebp]
	mov	edx, DWORD PTR [eax+28]
	cmp	edx, DWORD PTR [ecx+32]
	je	SHORT $LN2@PS_TrailRu
$LN1@PS_TrailRu:
	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR _TPN$13[ebp]
	movss	xmm0, DWORD PTR [eax+96]
	comiss	xmm0, DWORD PTR [ecx+68]
	jb	SHORT $LN3@PS_TrailRu
$LN2@PS_TrailRu:

; 4220 :         {
; 4221 :             // Release memory
; 4222 :             Trail.Handle = NULL;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+16], 0

; 4223 :             free(Trail.TRAIL);

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_free
	add	esp, 4

; 4224 :             Trail.TRAIL = NULL;

	mov	edx, DWORD PTR _Trail$14[ebp]
	mov	DWORD PTR [edx+20], 0

; 4225 :             ptr = PS_RemoveItem(PS_TRAILS_IDX, ptr, LastPtr);

	mov	eax, DWORD PTR _LastPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	push	5
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 4226 :             continue;

	jmp	$LN39@PS_TrailRu
$LN3@PS_TrailRu:

; 4227 :         }
; 4228 : 
; 4229 :         // Go for next Trail
; 4230 :         LastPtr = ptr;

	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], edx

; 4231 :         ptr = Trail.NEXT;

	mov	eax, DWORD PTR _Trail$14[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx

; 4232 :     }

	jmp	$LN39@PS_TrailRu
$LN31@PS_TrailRu:

; 4233 : 
; 4234 : #ifdef DEBUG_NEW_PS_TRAILS
; 4235 :     //REPORT_VALUE("NEW PS Trail Emitters", TrailEmitters);
; 4236 : #endif
; 4237 : }

	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?PS_TrailRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_TrailRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_SideTexHandle$ = -28					; size = 4
_Spare$ = -24						; size = 4
tv230 = -20						; size = 4
_pt$ = -16						; size = 4
_ptr$ = -12						; size = 4
_tpn$ = -8						; size = 4
_Trail$ = -4						; size = 4
_ID$ = 8						; size = 4
_Pos$ = 12						; size = 4
_OWNER$ = 16						; size = 4
_Run$ = 20						; size = 1
_AlphaCx$ = 24						; size = 4
_SizeCx$ = 28						; size = 4
?PS_AddTrail@DrawableParticleSys@@CAKHPAUTpoint@@K_NMM@Z PROC ; DrawableParticleSys::PS_AddTrail

; 3939 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3940 :     // Get a free slot
; 3941 :     PS_PTR ptr = PS_AddItem(PS_TRAILS_IDX);

	push	5
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _ptr$[ebp], eax

; 3942 : 
; 3943 :     // security check
; 3944 :     if (ptr == PS_NOPTR) return NULL;

	cmp	DWORD PTR _ptr$[ebp], -1
	jne	SHORT $LN3@PS_AddTrai
	xor	eax, eax
	jmp	$LN4@PS_AddTrai
$LN3@PS_AddTrai:

; 3945 : 
; 3946 :     // Get the pointer in the list
; 3947 :     TrailEmitterType &Trail = (((TrailEmitterType*)PS_Lists[PS_TRAILS_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	imul	eax, 5
	mov	ecx, DWORD PTR _ptr$[ebp]
	imul	ecx, 172				; 000000acH
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _Trail$[ebp], ecx

; 3948 :     // Pointer to trail parametes
; 3949 :     PS_TPType &tpn = PS_TPN[ID];

	mov	edx, DWORD PTR _ID$[ebp]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _tpn$[ebp], edx

; 3950 : 
; 3951 :     // Create the Handle
; 3952 :     TrailsHandle += PS_MAX_TRAILS;

	mov	eax, DWORD PTR ?TrailsHandle@DrawableParticleSys@@0KA ; DrawableParticleSys::TrailsHandle
	add	eax, 256				; 00000100H
	mov	DWORD PTR ?TrailsHandle@DrawableParticleSys@@0KA, eax ; DrawableParticleSys::TrailsHandle

; 3953 : 
; 3954 :     if (!TrailsHandle) TrailsHandle = 1;

	jne	SHORT $LN2@PS_AddTrai
	mov	DWORD PTR ?TrailsHandle@DrawableParticleSys@@0KA, 1 ; DrawableParticleSys::TrailsHandle
$LN2@PS_AddTrai:

; 3955 : 
; 3956 :     Trail.Handle = TrailsHandle | ptr;

	mov	ecx, DWORD PTR ?TrailsHandle@DrawableParticleSys@@0KA ; DrawableParticleSys::TrailsHandle
	or	ecx, DWORD PTR _ptr$[ebp]
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [edx+16], ecx

; 3957 :     // Thehandle can not be NULL
; 3958 : 
; 3959 :     // Assign Position
; 3960 :     Trail.Elapsed = Trail.Interval = tpn.Interval;

	mov	eax, DWORD PTR _Trail$[ebp]
	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+100], edx
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+96], edx

; 3961 :     Trail.Alive = Trail.StartUp = true;

	mov	eax, DWORD PTR _Trail$[ebp]
	mov	cl, BYTE PTR [eax+168]
	or	cl, 2
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	BYTE PTR [edx+168], cl
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	cl, BYTE PTR [eax+168]
	or	cl, 1
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	BYTE PTR [edx+168], cl

; 3962 :     Trail.Run = Run;

	mov	al, BYTE PTR _Run$[ebp]
	and	al, 1
	shl	al, 2
	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	dl, BYTE PTR [ecx+168]
	and	dl, -5					; fffffffbH
	or	dl, al
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	BYTE PTR [eax+168], dl

; 3963 :     Trail.Split = Trail.Updated = false;

	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	dl, BYTE PTR [ecx+168]
	and	dl, -9					; fffffff7H
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	BYTE PTR [eax+168], dl
	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	dl, BYTE PTR [ecx+168]
	and	dl, -17					; ffffffefH
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	BYTE PTR [eax+168], dl

; 3964 :     Trail.CLUSTER = PS_NOPTR;

	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [ecx+12], -1

; 3965 :     Trail.OWNER = OWNER;

	mov	edx, DWORD PTR _Trail$[ebp]
	mov	eax, DWORD PTR _OWNER$[ebp]
	mov	DWORD PTR [edx+4], eax

; 3966 :     Trail.ID = ID;

	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [ecx+148], edx

; 3967 :     Trail.LifeCx = tpn.LifeCx + PRANDFloat() * tpn.LifeCx * 0.4f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv230[ebp]
	movss	xmm0, DWORD PTR tv230[ebp]
	mov	eax, DWORD PTR _tpn$[ebp]
	mulss	xmm0, DWORD PTR [eax+76]
	mulss	xmm0, DWORD PTR __real@3ecccccd
	mov	ecx, DWORD PTR _tpn$[ebp]
	addss	xmm0, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _Trail$[ebp]
	movss	DWORD PTR [edx+104], xmm0

; 3968 :     Trail.OffsetX = Trail.OffsetY = 0.0f;

	mov	eax, DWORD PTR _Trail$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+136], xmm0
	mov	ecx, DWORD PTR _Trail$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+132], xmm0

; 3969 :     Trail.SizeCx = SizeCx, Trail.AlphaCx = AlphaCx;

	mov	edx, DWORD PTR _Trail$[ebp]
	movss	xmm0, DWORD PTR _SizeCx$[ebp]
	movss	DWORD PTR [edx+140], xmm0
	mov	eax, DWORD PTR _Trail$[ebp]
	movss	xmm0, DWORD PTR _AlphaCx$[ebp]
	movss	DWORD PTR [eax+144], xmm0

; 3970 : 
; 3971 :     ParticleTextureNode *pt = tpn.SideTexture;

	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	edx, DWORD PTR [ecx+316]
	mov	DWORD PTR _pt$[ebp], edx

; 3972 :     DWORD SideTexHandle = pt->TexHandle;

	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _SideTexHandle$[ebp], ecx

; 3973 :     float Spare;
; 3974 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 0, Trail.su[0], Spare);

	lea	edx, DWORD PTR _Spare$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _Trail$[ebp]
	lea	edx, DWORD PTR [ecx+eax+160]
	push	edx
	push	0
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 3975 :     TheDXEngine.DX2D_GetTextureUV(pt->TexItem, 1, Trail.su[1], Spare);

	lea	edx, DWORD PTR _Spare$[ebp]
	push	edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _Trail$[ebp]
	lea	edx, DWORD PTR [ecx+eax+160]
	push	edx
	push	1
	mov	eax, DWORD PTR _pt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureUV@CDXEngine@@QAEXPAVCTextureItem@@KAAM1@Z ; CDXEngine::DX2D_GetTextureUV

; 3976 : 
; 3977 : 
; 3978 :     // Calculate max nodes from life of trail
; 3979 :     Trail.Nodes = (int)(tpn.LifeSpan / tpn.Interval);

	mov	edx, DWORD PTR _tpn$[ebp]
	mov	eax, DWORD PTR _tpn$[ebp]
	movss	xmm0, DWORD PTR [edx+68]
	divss	xmm0, DWORD PTR [eax+72]
	cvttss2si ecx, xmm0
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [edx+24], ecx

; 3980 : 
; 3981 :     //always get even nodes number, for Odd/Even graphic stuff
; 3982 :     if (Trail.Nodes & 0x01) Trail.Nodes++;

	mov	eax, DWORD PTR _Trail$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN1@PS_AddTrai
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	eax, DWORD PTR [edx+24]
	add	eax, 1
	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN1@PS_AddTrai:

; 3983 : 
; 3984 :     // allocate memory for such nodes
; 3985 :     Trail.TRAIL = (TrailSubPartType *)calloc(Trail.Nodes, sizeof(TrailSubPartType));

	push	72					; 00000048H
	mov	edx, DWORD PTR _Trail$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_calloc
	add	esp, 8
	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 3986 :     // Start with node 0
; 3987 :     Trail.Entry = Trail.Last = 0;

	mov	edx, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _Trail$[ebp]
	mov	DWORD PTR [eax+28], 0

; 3988 :     // Texture rating
; 3989 :     Trail.TexRate = tpn.TexRate;

	mov	ecx, DWORD PTR _Trail$[ebp]
	mov	edx, DWORD PTR _tpn$[ebp]
	mov	eax, DWORD PTR [edx+288]
	mov	DWORD PTR [ecx+116], eax

; 3990 :     Trail.LastTexIndex = 0.0f;

	mov	ecx, DWORD PTR _Trail$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+120], xmm0

; 3991 : 
; 3992 :     return Trail.Handle;

	mov	edx, DWORD PTR _Trail$[ebp]
	mov	eax, DWORD PTR [edx+16]
$LN4@PS_AddTrai:

; 3993 : };

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_AddTrail@DrawableParticleSys@@CAKHPAUTpoint@@K_NMM@Z ENDP ; DrawableParticleSys::PS_AddTrail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -368						; size = 16
$T2 = -352						; size = 16
$T3 = -336						; size = 16
$T4 = -320						; size = 16
$T5 = -304						; size = 16
$T6 = -288						; size = 16
$T7 = -272						; size = 16
$T8 = -256						; size = 16
$T9 = -240						; size = 16
$T10 = -224						; size = 16
$T11 = -208						; size = 16
$T12 = -192						; size = 16
tv626 = -176						; size = 8
tv947 = -168						; size = 4
tv949 = -164						; size = 4
_gravity$13 = -160					; size = 4
tv875 = -156						; size = 4
tv655 = -152						; size = 4
tv647 = -148						; size = 4
tv823 = -144						; size = 4
tv806 = -140						; size = 4
_accel$14 = -136					; size = 4
_Visibility$15 = -132					; size = 4
tv623 = -128						; size = 4
_LastPtr$ = -124					; size = 4
_Distance$16 = -120					; size = 4
_Drag_x_Time$17 = -116					; size = 4
_d$18 = -112						; size = 4
_age$19 = -108						; size = 4
_d$20 = -104						; size = 4
_fps$21 = -100						; size = 4
_ptr$ = -96						; size = 4
_fps$22 = -92						; size = 4
_ppn$23 = -88						; size = 4
_Cluster$24 = -84					; size = 4
_Part$25 = -80						; size = 4
$T26 = -76						; size = 12
_XMMPosMax$ = -64					; size = 16
_XMMPosMin$ = -48					; size = 16
_XMMRadius$ = -32					; size = 16
__$ArrayPad$ = -4					; size = 4
?PS_ParticleRun@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_ParticleRun

; 3558 : {

	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 3559 : #ifdef DEBUG_NEW_PS_PARTICLES
; 3560 :     DWORD Count = 0;
; 3561 : #endif
; 3562 : 
; 3563 :     XMMVector XMMRadius, XMMPosMax, XMMPosMin;
; 3564 : 
; 3565 :     // Get the List entry
; 3566 :     PS_PTR ptr = PS_Lists[PS_PARTICLES_IDX].ListEntry, LastPtr = PS_NOPTR;

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+12]
	mov	DWORD PTR _ptr$[ebp], ecx
	mov	DWORD PTR _LastPtr$[ebp], -1
$LN34@PS_Particl:

; 3567 : 
; 3568 :     // thru all the list
; 3569 :     while (ptr != PS_NOPTR)

	cmp	DWORD PTR _ptr$[ebp], -1
	je	$LN30@PS_Particl

; 3570 :     {
; 3571 : #ifdef DEBUG_NEW_PS_PARTICLES
; 3572 :         Count++;
; 3573 : #endif;
; 3574 :         ParticleNodeType &Part = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[ptr]);

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _ptr$[ebp]
	imul	eax, 124				; 0000007cH
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Part$25[ebp], eax

; 3575 : 
; 3576 :         // If part is dead, remove it, all last stages have been already killed/exucuted
; 3577 :         if (!Part.Alive)

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 7
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	jne	SHORT $LN29@PS_Particl

; 3578 :         {
; 3579 :             ptr = PS_RemoveItem(PS_PARTICLES_IDX, ptr, LastPtr);

	mov	ecx, DWORD PTR _LastPtr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	push	0
	call	?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ; DrawableParticleSys::PS_RemoveItem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ptr$[ebp], eax

; 3580 :             continue;

	jmp	SHORT $LN34@PS_Particl
$LN29@PS_Particl:

; 3581 :         }
; 3582 : 
; 3583 :         // Security check, no negative life
; 3584 :         if (Part.lifespan <= 0)

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+24]
	jb	SHORT $LN28@PS_Particl

; 3585 :         {
; 3586 :             Part.Alive = false;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	dl, BYTE PTR [ecx+32]
	and	dl, -2					; fffffffeH
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	BYTE PTR [eax+32], dl

; 3587 :             goto Skip;

	jmp	$LN27@PS_Particl
	jmp	$Skip$35
$LN28@PS_Particl:

; 3588 :         }
; 3589 : 
; 3590 :         // Life calculations
; 3591 :         float age;
; 3592 :         age = (float)(PS_RunTime - Part.birthTime) * .001f;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR ?PS_RunTime@DrawableParticleSys@@0KA ; DrawableParticleSys::PS_RunTime
	sub	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv623[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv623[ebp]
	mov	eax, DWORD PTR tv623[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv626[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv626[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR _age$19[ebp], xmm0

; 3593 :         Part.life = age / Part.lifespan;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR _age$19[ebp]
	divss	xmm0, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+28], xmm0

; 3594 : 
; 3595 :         // Mark for die eventually
; 3596 :         if (Part.life >= 1.0f) Part.Alive = false;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+28]
	comiss	xmm0, DWORD PTR __real@3f800000
	jb	SHORT $LN26@PS_Particl
	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	dl, BYTE PTR [ecx+32]
	and	dl, -2					; fffffffeH
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	BYTE PTR [eax+32], dl
$LN26@PS_Particl:

; 3597 : 
; 3598 :         // Pointer to particle parametes
; 3599 :         PS_PPType &ppn = PS_PPN[Part.PPN];

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$23[ebp], edx

; 3600 : 
; 3601 : 
; 3602 :         // Check if large position change from last Calc,
; 3603 :         // if so, recalc seom parameters
; 3604 :         if (F_ABS(Part.LastCalcPos.x - Part.pos.x) >= PS_RECALC_DELTA || F_ABS(Part.LastCalcPos.y - Part.pos.y) >= PS_RECALC_DELTA)

	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+84]
	subss	xmm0, DWORD PTR [ecx+56]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_ABS@@YAMM@Z				; F_ABS
	add	esp, 4
	fstp	DWORD PTR tv647[ebp]
	movss	xmm0, DWORD PTR tv647[ebp]
	comiss	xmm0, DWORD PTR __real@43960000
	jae	SHORT $LN24@PS_Particl
	mov	edx, DWORD PTR _Part$25[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [edx+88]
	subss	xmm0, DWORD PTR [eax+60]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_ABS@@YAMM@Z				; F_ABS
	add	esp, 4
	fstp	DWORD PTR tv655[ebp]
	movss	xmm0, DWORD PTR tv655[ebp]
	comiss	xmm0, DWORD PTR __real@43960000
	jb	$LN25@PS_Particl
$LN24@PS_Particl:

; 3605 :         {
; 3606 :             // Recalc Ground position
; 3607 :             Part.LastCalcPos = Part.pos;

	mov	ecx, DWORD PTR _Part$25[ebp]
	add	ecx, 56					; 00000038H
	mov	edx, DWORD PTR _Part$25[ebp]
	add	edx, 84					; 00000054H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx

; 3608 :             Part.GroundLevel = OTWDriver.GetGroundLevel(Part.pos.x, Part.pos.y);

	push	0
	mov	edx, DWORD PTR _Part$25[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _Part$25[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z ; OTWDriverClass::GetGroundLevel
	mov	ecx, DWORD PTR _Part$25[ebp]
	fstp	DWORD PTR [ecx+108]

; 3609 :             // Recalc Wind velocity
; 3610 :             Part.Wind = ((WeatherClass*)realWeather)->GetWindVector();

	lea	edx, DWORD PTR $T26[ebp]
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?GetWindVector@RealWeather@@QAE?AUTpoint@@XZ ; RealWeather::GetWindVector
	mov	ecx, DWORD PTR _Part$25[ebp]
	add	ecx, 96					; 00000060H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 3611 :             Part.Wind.x *= ppn.WindFactor;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [ecx+96]
	mulss	xmm0, DWORD PTR [edx+5556]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+96], xmm0

; 3612 :             Part.Wind.y *= ppn.WindFactor;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [ecx+100]
	mulss	xmm0, DWORD PTR [edx+5556]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+100], xmm0

; 3613 :             Part.Wind.z *= ppn.WindFactor;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [ecx+104]
	mulss	xmm0, DWORD PTR [edx+5556]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+104], xmm0
$LN25@PS_Particl:

; 3614 :         }
; 3615 : 
; 3616 : 
; 3617 :         if (PS_ElapsedTime)

	movss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN13@PS_Particl

; 3618 :         {
; 3619 :             // we only need to run this if some time has elapsed
; 3620 :             float gravity, accel;
; 3621 : 
; 3622 :             gravity = PS_EvalTimedFloat(Part.life, Part.GravityStage, ppn.gravityStages, ppn.gravity);

	mov	ecx, DWORD PTR _ppn$23[ebp]
	add	ecx, 920				; 00000398H
	push	ecx
	mov	edx, DWORD PTR _ppn$23[ebp]
	mov	eax, DWORD PTR [edx+916]
	push	eax
	mov	ecx, DWORD PTR _Part$25[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	edx, DWORD PTR _Part$25[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+28]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _gravity$13[ebp]

; 3623 :             accel = PS_EvalTimedFloat(Part.life, Part.AccelStage, ppn.accelStages, ppn.accel);

	mov	eax, DWORD PTR _ppn$23[ebp]
	add	eax, 1084				; 0000043cH
	push	eax
	mov	ecx, DWORD PTR _ppn$23[ebp]
	mov	edx, DWORD PTR [ecx+1080]
	push	edx
	mov	eax, DWORD PTR _Part$25[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _Part$25[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+28]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _accel$14[ebp]

; 3624 : 
; 3625 : 
; 3626 :             if (ppn.simpleDrag)

	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [edx+1668]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN22@PS_Particl

; 3627 :             {
; 3628 :                 float Drag_x_Time = ppn.simpleDrag * PS_ElapsedTime; // COBRA - RED - Cached same Value

	mov	eax, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [eax+1668]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	movss	DWORD PTR _Drag_x_Time$17[ebp], xmm0

; 3629 : 
; 3630 :                 Part.vel.x -= Part.vel.x * Drag_x_Time;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [ecx+72]
	mulss	xmm0, DWORD PTR _Drag_x_Time$17[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [edx+72]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+72], xmm1

; 3631 :                 Part.vel.y -= Part.vel.y * Drag_x_Time;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [ecx+76]
	mulss	xmm0, DWORD PTR _Drag_x_Time$17[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+76], xmm1

; 3632 :                 Part.vel.z -= Part.vel.z * Drag_x_Time;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [ecx+80]
	mulss	xmm0, DWORD PTR _Drag_x_Time$17[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [edx+80]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+80], xmm1
$LN22@PS_Particl:

; 3633 :             }
; 3634 : 
; 3635 :             // update velocity values
; 3636 :             Part.vel.z += (32 * PS_ElapsedTime) * gravity;

	movss	xmm0, DWORD PTR __real@42000000
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mulss	xmm0, DWORD PTR _gravity$13[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+80], xmm0

; 3637 : 
; 3638 :             if (accel)

	movss	xmm0, DWORD PTR _accel$14[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN19@PS_Particl

; 3639 :             {
; 3640 :                 float fps = (accel * PS_ElapsedTime);

	movss	xmm0, DWORD PTR _accel$14[ebp]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	movss	DWORD PTR _fps$22[ebp], xmm0

; 3641 :                 float d = sqrt(Part.vel.x * Part.vel.x + Part.vel.y * Part.vel.y + Part.vel.z * Part.vel.z);

	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _Part$25[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	mulss	xmm1, DWORD PTR [eax+76]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [ecx+80]
	mulss	xmm1, DWORD PTR [edx+80]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _d$18[ebp]

; 3642 :                 fps = d + fps;

	movss	xmm0, DWORD PTR _d$18[ebp]
	addss	xmm0, DWORD PTR _fps$22[ebp]
	movss	DWORD PTR _fps$22[ebp], xmm0

; 3643 : 
; 3644 :                 if (fps < 0)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _fps$22[ebp]
	jbe	SHORT $LN20@PS_Particl

; 3645 :                     fps = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _fps$22[ebp], xmm0
$LN20@PS_Particl:

; 3646 : 
; 3647 :                 if (d)

	movss	xmm0, DWORD PTR _d$18[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN19@PS_Particl

; 3648 :                 {
; 3649 :                     fps /= d;

	movss	xmm0, DWORD PTR _fps$22[ebp]
	divss	xmm0, DWORD PTR _d$18[ebp]
	movss	DWORD PTR _fps$22[ebp], xmm0

; 3650 :                     Part.vel.x *= fps;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR _fps$22[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 3651 :                     Part.vel.y *= fps;

	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	mulss	xmm0, DWORD PTR _fps$22[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 3652 :                     Part.vel.z *= fps;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [ecx+80]
	mulss	xmm0, DWORD PTR _fps$22[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+80], xmm0
$LN19@PS_Particl:

; 3653 :                 }
; 3654 :             }
; 3655 : 
; 3656 : 
; 3657 :             Part.pos.x += Part.vel.x * PS_ElapsedTime;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	ecx, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [ecx+56]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+56], xmm0

; 3658 :             Part.pos.y += Part.vel.y * PS_ElapsedTime;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+76]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	ecx, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [ecx+60]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+60], xmm0

; 3659 :             Part.pos.z += Part.vel.z * PS_ElapsedTime;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+80]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	ecx, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+64], xmm0

; 3660 : 
; 3661 :             if (Part.pos.z >= Part.GroundLevel)

	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+64]
	comiss	xmm0, DWORD PTR [ecx+108]
	jb	$LN15@PS_Particl

; 3662 :             {
; 3663 :                 Part.pos.z = Part.GroundLevel;

	mov	edx, DWORD PTR _Part$25[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR [edx+64], ecx

; 3664 :                 Part.vel.z *= -ppn.bounce * PRANDFloatPos();

	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [edx+5436]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv947[ebp], xmm0
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv806[ebp]
	movss	xmm0, DWORD PTR tv947[ebp]
	mulss	xmm0, DWORD PTR tv806[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mulss	xmm0, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [ecx+80], xmm0

; 3665 : 
; 3666 :                 if (ppn.dieOnGround && Part.lifespan > age) // this will make the particle die

	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [edx+5440]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN17@PS_Particl
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+24]
	comiss	xmm0, DWORD PTR _age$19[ebp]
	jbe	SHORT $LN17@PS_Particl

; 3667 :                 {
; 3668 :                     // will also run the emitters
; 3669 : 
; 3670 :                     Part.lifespan = age;

	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR _age$19[ebp]
	movss	DWORD PTR [ecx+24], xmm0
$LN17@PS_Particl:

; 3671 :                 }
; 3672 : 
; 3673 :                 float fps = (ppn.groundFriction * PS_ElapsedTime * (0.5f + 0.5f * PRANDFloatPos()));

	mov	edx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR [edx+1660]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	movss	DWORD PTR tv949[ebp], xmm0
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv823[ebp]
	movss	xmm0, DWORD PTR tv823[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR tv949[ebp]
	mulss	xmm1, xmm0
	movss	DWORD PTR _fps$21[ebp], xmm1

; 3674 :                 float d = sqrt(Part.vel.x * Part.vel.x + Part.vel.y * Part.vel.y + Part.vel.z * Part.vel.z);

	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	mulss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _Part$25[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [edx+76]
	mulss	xmm1, DWORD PTR [eax+76]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm1, DWORD PTR [ecx+80]
	mulss	xmm1, DWORD PTR [edx+80]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _d$20[ebp]

; 3675 :                 fps = d + fps;

	movss	xmm0, DWORD PTR _d$20[ebp]
	addss	xmm0, DWORD PTR _fps$21[ebp]
	movss	DWORD PTR _fps$21[ebp], xmm0

; 3676 : 
; 3677 :                 if (fps < 0)

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _fps$21[ebp]
	jbe	SHORT $LN16@PS_Particl

; 3678 :                     fps = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _fps$21[ebp], xmm0
$LN16@PS_Particl:

; 3679 : 
; 3680 :                 if (d)

	movss	xmm0, DWORD PTR _d$20[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN15@PS_Particl

; 3681 :                 {
; 3682 :                     Part.vel.x = (Part.vel.x / d) * fps;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+72]
	divss	xmm0, DWORD PTR _d$20[ebp]
	mulss	xmm0, DWORD PTR _fps$21[ebp]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 3683 :                     Part.vel.y = (Part.vel.y / d) * fps;

	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [edx+76]
	divss	xmm0, DWORD PTR _d$20[ebp]
	mulss	xmm0, DWORD PTR _fps$21[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [eax+76], xmm0
$LN15@PS_Particl:

; 3684 :                 }
; 3685 :             }
; 3686 : 
; 3687 :             // Wind, affects anything having a Z velocity
; 3688 :             if (Part.WindAffected)

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	dl, BYTE PTR [ecx+32]
	shl	dl, 5
	sar	dl, 7
	movsx	eax, dl
	test	eax, eax
	je	SHORT $LN14@PS_Particl

; 3689 :             {
; 3690 :                 /*// if not  grounded, apply wind
; 3691 :                 Part.pos.x += Part.Wind.x * PS_ElapsedTime;
; 3692 :                 Part.pos.y += Part.Wind.y * PS_ElapsedTime;*/
; 3693 :                 // Go to reach the wind speed
; 3694 :                 Part.vel.x += (Part.Wind.x - Part.vel.x)  * PS_ElapsedTime;

	mov	ecx, DWORD PTR _Part$25[ebp]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [ecx+96]
	subss	xmm0, DWORD PTR [edx+72]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	eax, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [eax+72]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 3695 :                 Part.vel.y += (Part.Wind.x - Part.vel.y)  * PS_ElapsedTime;

	mov	edx, DWORD PTR _Part$25[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [edx+96]
	subss	xmm0, DWORD PTR [eax+76]
	mulss	xmm0, DWORD PTR ?PS_ElapsedTime@DrawableParticleSys@@0MA
	mov	ecx, DWORD PTR _Part$25[ebp]
	addss	xmm0, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [edx+76], xmm0
$LN14@PS_Particl:

; 3696 : 
; 3697 :             }
; 3698 : 
; 3699 :             // The Part Size
; 3700 :             if (ppn.drawType == PSDT_POLY)

	mov	eax, DWORD PTR _ppn$23[ebp]
	cmp	DWORD PTR [eax+92], 1
	jne	SHORT $LN13@PS_Particl

; 3701 :                 Part.Radius = PS_EvalTimedLinLogFloat(Part.life, Part.SizeStage, ppn.sizeStages,  ppn.size) * Part.SizeRandom;

	mov	ecx, DWORD PTR _ppn$23[ebp]
	add	ecx, 592				; 00000250H
	push	ecx
	mov	edx, DWORD PTR _ppn$23[ebp]
	mov	eax, DWORD PTR [edx+588]
	push	eax
	mov	ecx, DWORD PTR _Part$25[ebp]
	add	ecx, 116				; 00000074H
	push	ecx
	mov	edx, DWORD PTR _Part$25[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+28]
	movss	DWORD PTR [esp], xmm0
	call	?PS_EvalTimedLinLogFloat@DrawableParticleSys@@CAMMAAHHPAUtimedFloat@@@Z ; DrawableParticleSys::PS_EvalTimedLinLogFloat
	add	esp, 16					; 00000010H
	fstp	DWORD PTR tv875[ebp]
	movss	xmm0, DWORD PTR tv875[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mulss	xmm0, DWORD PTR [eax+120]
	mov	ecx, DWORD PTR _Part$25[ebp]
	movss	DWORD PTR [ecx+68], xmm0
$LN13@PS_Particl:

; 3702 :         }
; 3703 : 
; 3704 : #ifdef DEBUG_PS_ID
; 3705 : 
; 3706 :         if (DrawableBSP::drawLabels/* && ppn->name[0]=='$'*/)
; 3707 :         {
; 3708 :             // Now compute the starting location for our label text
; 3709 :             ThreeDVertex labelPoint;
; 3710 :             float x, y;
; 3711 :             PS_Renderer->TransformPoint(&Part.pos, &labelPoint);
; 3712 : 
; 3713 :             if (labelPoint.clipFlag == ON_SCREEN)
; 3714 :             {
; 3715 :                 x = labelPoint.x - 32; // Centers text
; 3716 :                 y = labelPoint.y - 12; // Place text above center of object
; 3717 :                 PS_Renderer->SetColor(ppn.name[0] == '$' ?  0xff0000ff : 0xffff0000);
; 3718 :                 PS_Renderer->SetFont(2);
; 3719 :                 PS_Renderer->ScreenText(x, y, ppn.name);
; 3720 :             }
; 3721 : 
; 3722 : 
; 3723 :         }
; 3724 : 
; 3725 : #endif
; 3726 : 
; 3727 : 
; 3728 :         /////////////////////// CLUSTER STUFF \\\\\\\\\\\\\\\\\\\\
; 3729 :         // execute only if clustering enabled
; 3730 :         if (Part.Cluster)

	mov	edx, DWORD PTR _Part$25[ebp]
	mov	al, BYTE PTR [edx+32]
	shl	al, 6
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	je	$LN12@PS_Particl

; 3731 :         {
; 3732 :             // Get the Cluster
; 3733 :             ClusterPosType &Cluster = (((ClusterPosType*)PS_Lists[PS_CLUSTERS_IDX].ObjectList)[Part.CLUSTER]);

	mov	edx, 28					; 0000001cH
	imul	edx, 7
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax+8]
	imul	ecx, 48					; 00000030H
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	mov	DWORD PTR _Cluster$24[ebp], ecx

; 3734 : 
; 3735 :             if (ppn.drawType == PSDT_POLY)

	mov	edx, DWORD PTR _ppn$23[ebp]
	cmp	DWORD PTR [edx+92], 1
	jne	$LN1@PS_Particl

; 3736 :             {
; 3737 :                 // if Already marked as IN Skip all checks
; 3738 :                 if (Cluster.In || Cluster.Out) goto Skip;

	mov	eax, DWORD PTR _Cluster$24[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 5
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	SHORT $LN9@PS_Particl
	mov	eax, DWORD PTR _Cluster$24[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN10@PS_Particl
$LN9@PS_Particl:
	jmp	$LN8@PS_Particl
	jmp	$Skip$35
$LN10@PS_Particl:

; 3739 : 
; 3740 :                 // 1st, check for Distance, if already out of visibility it's a CLUUSTER OUT OF FOV
; 3741 :                 float Distance = TheDXEngine.DX2D_GetDistance((D3DXVECTOR3 *)&Part.pos);

	push	0
	mov	eax, DWORD PTR _Part$25[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetDistance@CDXEngine@@QAEMPAUD3DXVECTOR3@@K@Z ; CDXEngine::DX2D_GetDistance
	fstp	DWORD PTR _Distance$16[ebp]

; 3742 : 
; 3743 :                 if (Distance > ppn.visibleDistance) Cluster.Out = true;

	mov	ecx, DWORD PTR _ppn$23[ebp]
	movss	xmm0, DWORD PTR _Distance$16[ebp]
	comiss	xmm0, DWORD PTR [ecx+1664]
	jbe	SHORT $LN7@PS_Particl
	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	al, BYTE PTR [edx+4]
	or	al, 2
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	mov	BYTE PTR [ecx+4], al
$LN7@PS_Particl:

; 3744 : 
; 3745 :                 // Check the whole cluster for light in range
; 3746 :                 if (Distance < Part.Radius * LIGHT_SIZE_CX) Cluster.LightIn = true;

	mov	edx, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [edx+68]
	mulss	xmm0, DWORD PTR __real@41700000
	comiss	xmm0, DWORD PTR _Distance$16[ebp]
	jbe	SHORT $LN6@PS_Particl
	mov	eax, DWORD PTR _Cluster$24[ebp]
	mov	cl, BYTE PTR [eax+4]
	or	cl, 8
	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	BYTE PTR [edx+4], cl
$LN6@PS_Particl:

; 3747 : 
; 3748 :                 // * DYNAMIC CLUSTERING *
; 3749 :                 // Dynamic Cluster particles updates their extreme positions in the linked Cluster
; 3750 :                 // to calulate the visibility in the FOV in PS_ClusterRun()
; 3751 :                 if (!Cluster.Static)

	mov	eax, DWORD PTR _Cluster$24[ebp]
	mov	cl, BYTE PTR [eax+4]
	shl	cl, 3
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	jne	$LN5@PS_Particl

; 3752 :                 {
; 3753 :                     // * DYNAMIC CLUSTERING *
; 3754 :                     // Setup XMM radius
; 3755 :                     XMMRadius.d3d.x = XMMRadius.d3d.y = XMMRadius.d3d.z = Part.Radius / 1.732f;

	mov	eax, DWORD PTR _Part$25[ebp]
	movss	xmm0, DWORD PTR [eax+68]
	divss	xmm0, DWORD PTR __real@3fddb22d
	movss	DWORD PTR _XMMRadius$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _XMMRadius$[ebp+8]
	movss	DWORD PTR _XMMRadius$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _XMMRadius$[ebp+4]
	movss	DWORD PTR _XMMRadius$[ebp], xmm0

; 3756 :                     XMMPosMax.Xmm = _mm_add_ps(_mm_loadu_ps((float*)&Part.pos), XMMRadius.Xmm);

	mov	ecx, DWORD PTR _Part$25[ebp]
	add	ecx, 56					; 00000038H
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T10[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T10[ebp]
	addps	xmm0, XMMWORD PTR _XMMRadius$[ebp]
	movaps	XMMWORD PTR $T12[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T12[ebp]
	movaps	XMMWORD PTR _XMMPosMax$[ebp], xmm0

; 3757 :                     XMMPosMin.Xmm = _mm_sub_ps(_mm_loadu_ps((float*)&Part.pos), XMMRadius.Xmm);

	mov	edx, DWORD PTR _Part$25[ebp]
	add	edx, 56					; 00000038H
	movups	xmm0, XMMWORD PTR [edx]
	movaps	XMMWORD PTR $T2[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	subps	xmm0, XMMWORD PTR _XMMRadius$[ebp]
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _XMMPosMin$[ebp], xmm0

; 3758 : 
; 3759 :                     // Setup min and Max Positions
; 3760 :                     _mm_store_ps((float*)&Cluster.TLFpos.Xmm, _mm_max_ps(_mm_load_ps((float*)&Cluster.TLFpos.Xmm), XMMPosMax.Xmm));

	mov	eax, DWORD PTR _Cluster$24[ebp]
	movaps	xmm0, XMMWORD PTR [eax+16]
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	maxps	xmm0, XMMWORD PTR _XMMPosMax$[ebp]
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	add	ecx, 16					; 00000010H
	movaps	XMMWORD PTR [ecx], xmm0

; 3761 :                     _mm_store_ps((float*)&Cluster.BRNpos.Xmm, _mm_min_ps(_mm_load_ps((float*)&Cluster.BRNpos.Xmm), XMMPosMax.Xmm));

	mov	edx, DWORD PTR _Cluster$24[ebp]
	movaps	xmm0, XMMWORD PTR [edx+32]
	movaps	XMMWORD PTR $T11[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T11[ebp]
	minps	xmm0, XMMWORD PTR _XMMPosMax$[ebp]
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T9[ebp]
	mov	eax, DWORD PTR _Cluster$24[ebp]
	add	eax, 32					; 00000020H
	movaps	XMMWORD PTR [eax], xmm0

; 3762 :                     _mm_store_ps((float*)&Cluster.TLFpos.Xmm, _mm_max_ps(_mm_load_ps((float*)&Cluster.TLFpos.Xmm), XMMPosMin.Xmm));

	mov	ecx, DWORD PTR _Cluster$24[ebp]
	movaps	xmm0, XMMWORD PTR [ecx+16]
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	maxps	xmm0, XMMWORD PTR _XMMPosMin$[ebp]
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	mov	edx, DWORD PTR _Cluster$24[ebp]
	add	edx, 16					; 00000010H
	movaps	XMMWORD PTR [edx], xmm0

; 3763 :                     _mm_store_ps((float*)&Cluster.BRNpos.Xmm, _mm_min_ps(_mm_load_ps((float*)&Cluster.BRNpos.Xmm), XMMPosMin.Xmm));

	mov	eax, DWORD PTR _Cluster$24[ebp]
	movaps	xmm0, XMMWORD PTR [eax+32]
	movaps	XMMWORD PTR $T3[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	minps	xmm0, XMMWORD PTR _XMMPosMin$[ebp]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	add	ecx, 32					; 00000020H
	movaps	XMMWORD PTR [ecx], xmm0

; 3764 : 
; 3765 :                 }
; 3766 :                 else

	jmp	$LN1@PS_Particl
$LN5@PS_Particl:

; 3767 :                 {
; 3768 :                     // STATIC clustering is calculated only once on 1st particle
; 3769 :                     // * STATIC CLUSTERING * only if yet assigned, JUST assign the position, radius is already in CLuster from PPN
; 3770 :                     if (!Cluster.Alive)

	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	al, BYTE PTR [edx+4]
	shl	al, 7
	sar	al, 7
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@PS_Particl

; 3771 :                     {
; 3772 :                         Cluster.TLFpos.d3d.x = Part.pos.x, Cluster.TLFpos.d3d.y = Part.pos.y, Cluster.TLFpos.d3d.z = Part.pos.z;

	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR [edx+16], ecx
	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [edx+20], ecx
	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR [edx+24], ecx

; 3773 :                         // * STATIC CLUSTER , just use position and Radius and che Visibility
; 3774 :                         DWORD Visibility = TheDXEngine.ComputeSphereVisibility((D3DVECTOR*)&Part.pos, (float*)&Cluster.Radius);

	push	1
	mov	edx, DWORD PTR _Cluster$24[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _Part$25[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?ComputeSphereVisibility@CDXEngine@@QAEKPAU_D3DVECTOR@@PAMK@Z ; CDXEngine::ComputeSphereVisibility
	mov	DWORD PTR _Visibility$15[ebp], eax

; 3775 : 
; 3776 :                         if (!Visibility) Cluster.In = true;

	cmp	DWORD PTR _Visibility$15[ebp], 0
	jne	SHORT $LN2@PS_Particl
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	mov	dl, BYTE PTR [ecx+4]
	or	dl, 4
	mov	eax, DWORD PTR _Cluster$24[ebp]
	mov	BYTE PTR [eax+4], dl
$LN2@PS_Particl:

; 3777 : 
; 3778 :                         if (Visibility & D3DSTATUS_DEFAULT) Cluster.Out = true;

	mov	ecx, DWORD PTR _Visibility$15[ebp]
	and	ecx, 33550336				; 01fff000H
	je	SHORT $LN1@PS_Particl
	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	al, BYTE PTR [edx+4]
	or	al, 2
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	mov	BYTE PTR [ecx+4], al
$LN1@PS_Particl:

; 3779 :                     }
; 3780 :                 }
; 3781 :             }
; 3782 : 
; 3783 :             // The cluster is used
; 3784 :             Cluster.Alive = true;

	mov	edx, DWORD PTR _Cluster$24[ebp]
	mov	al, BYTE PTR [edx+4]
	or	al, 1
	mov	ecx, DWORD PTR _Cluster$24[ebp]
	mov	BYTE PTR [ecx+4], al
$LN12@PS_Particl:
$LN8@PS_Particl:
$LN27@PS_Particl:
$Skip$35:

; 3785 :         }
; 3786 : 
; 3787 :         Skip:
; 3788 :         LastPtr = ptr;

	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _LastPtr$[ebp], edx

; 3789 :         ptr = Part.NEXT;

	mov	eax, DWORD PTR _Part$25[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ptr$[ebp], ecx

; 3790 :     }

	jmp	$LN34@PS_Particl
$LN30@PS_Particl:

; 3791 : 
; 3792 : #ifdef DEBUG_NEW_PS_PARTICLES
; 3793 :     REPORT_VALUE("NEW PS PARTICLES", Count);
; 3794 : #endif
; 3795 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?PS_ParticleRun@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_ParticleRun
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_trigWind$ = -48					; size = 8
tv504 = -40						; size = 4
tv244 = -36						; size = 4
tv176 = -32						; size = 4
_v$1 = -28						; size = 4
_v$2 = -24						; size = 4
_wind$ = -20						; size = 4
_ptr$ = -16						; size = 4
_Cluster$3 = -12					; size = 4
_ppn$ = -8						; size = 4
_pn$ = -4						; size = 4
_ID$ = 8						; size = 4
_Pos$ = 12						; size = 4
_Vel$ = 16						; size = 4
_Aim$ = 20						; size = 4
_fRotationRate$ = 24					; size = 4
_Cluster$ = 28						; size = 4
_Light$ = 32						; size = 4
?PS_AddParticle@DrawableParticleSys@@CAXHPAUTpoint@@00MKK@Z PROC ; DrawableParticleSys::PS_AddParticle

; 3405 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 3406 :     // Get a free slot
; 3407 :     PS_PTR ptr = PS_AddItem(PS_PARTICLES_IDX);

	push	0
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	DWORD PTR _ptr$[ebp], eax

; 3408 : 
; 3409 :     // security check
; 3410 :     if (ptr == PS_NOPTR) return;

	cmp	DWORD PTR _ptr$[ebp], -1
	jne	SHORT $LN15@PS_AddPart
	jmp	$LN16@PS_AddPart
$LN15@PS_AddPart:

; 3411 : 
; 3412 :     // Get the pointer in the list
; 3413 :     ParticleNodeType &pn = (((ParticleNodeType*)PS_Lists[PS_PARTICLES_IDX].ObjectList)[ptr]);

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _ptr$[ebp]
	imul	ecx, 124				; 0000007cH
	add	ecx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4]
	mov	DWORD PTR _pn$[ebp], ecx

; 3414 :     // Pointer to particle parametes
; 3415 :     PS_PPType &ppn = PS_PPN[ID];

	mov	edx, DWORD PTR _ID$[ebp]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$[ebp], edx

; 3416 : 
; 3417 :     // Set up particle parameters
; 3418 :     // The index in the PPN Array
; 3419 :     pn.PPN = ID;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 3420 :     // The passed position
; 3421 :     pn.pos = *Pos;

	mov	edx, DWORD PTR _pn$[ebp]
	add	edx, 56					; 00000038H
	mov	eax, DWORD PTR _Pos$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 3422 :     // Light
; 3423 :     pn.LIGHT = Light;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _Light$[ebp]
	mov	DWORD PTR [ecx+12], edx

; 3424 : 
; 3425 :     // defaults to no Cluster assigned
; 3426 :     pn.CLUSTER = PS_NOPTR;

	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax+8], -1

; 3427 :     pn.Cluster = false;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	dl, BYTE PTR [ecx+32]
	and	dl, -3					; fffffffdH
	mov	eax, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [eax+32], dl

; 3428 : 
; 3429 :     // Check for clustering - No clustering for -1
; 3430 :     if (ppn.ClusterMode != NO_CLUSTERING)

	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR [ecx+5544]
	ucomiss	xmm0, DWORD PTR __real@bf800000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN8@PS_AddPart

; 3431 :     {
; 3432 :         // * CHILD CLUSTER *
; 3433 :         if (ppn.ClusterMode == CHILD_CLUSTER)

	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR [edx+5544]
	ucomiss	xmm0, DWORD PTR __real@c7c34f80
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN13@PS_AddPart

; 3434 :         {
; 3435 :             if (Cluster != PS_NOPTR) pn.CLUSTER = Cluster, pn.Cluster = true;

	cmp	DWORD PTR _Cluster$[ebp], -1
	je	SHORT $LN12@PS_AddPart
	mov	eax, DWORD PTR _pn$[ebp]
	mov	ecx, DWORD PTR _Cluster$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _pn$[ebp]
	mov	al, BYTE PTR [edx+32]
	or	al, 2
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [ecx+32], al
$LN12@PS_AddPart:

; 3436 :         }
; 3437 :         else

	jmp	$LN8@PS_AddPart
$LN13@PS_AddPart:

; 3438 :         {
; 3439 :             // * NEW CLUSTER *
; 3440 :             // if not a cluster already assigned, or a new cluster, get a new one
; 3441 :             pn.CLUSTER = PS_AddItem(PS_CLUSTERS_IDX);

	push	7
	call	?PS_AddItem@DrawableParticleSys@@CAKK@Z	; DrawableParticleSys::PS_AddItem
	add	esp, 4
	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+8], eax

; 3442 : 
; 3443 :             // Check for Cluster Overflow
; 3444 :             if (pn.CLUSTER != PS_NOPTR)

	mov	eax, DWORD PTR _pn$[ebp]
	cmp	DWORD PTR [eax+8], -1
	je	SHORT $LN8@PS_AddPart

; 3445 :             {
; 3446 :                 pn.Cluster = true;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	dl, BYTE PTR [ecx+32]
	or	dl, 2
	mov	eax, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [eax+32], dl

; 3447 :                 // check for cluster mode
; 3448 :                 ClusterPosType &Cluster = (((ClusterPosType*)PS_Lists[PS_CLUSTERS_IDX].ObjectList)[pn.CLUSTER]);

	mov	ecx, 28					; 0000001cH
	imul	ecx, 7
	mov	edx, DWORD PTR _pn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	imul	eax, 48					; 00000030H
	add	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4]
	mov	DWORD PTR _Cluster$3[ebp], eax

; 3449 :                 // it lives on
; 3450 :                 Cluster.Alive = true;

	mov	ecx, DWORD PTR _Cluster$3[ebp]
	mov	dl, BYTE PTR [ecx+4]
	or	dl, 1
	mov	eax, DWORD PTR _Cluster$3[ebp]
	mov	BYTE PTR [eax+4], dl

; 3451 : 
; 3452 :                 // Static or Dynamic cluster
; 3453 :                 if (ppn.ClusterMode > 0) Cluster.Static = true, Cluster.Radius = ppn.ClusterMode;

	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR [ecx+5544]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN9@PS_AddPart
	mov	edx, DWORD PTR _Cluster$3[ebp]
	mov	al, BYTE PTR [edx+4]
	or	al, 16					; 00000010H
	mov	ecx, DWORD PTR _Cluster$3[ebp]
	mov	BYTE PTR [ecx+4], al
	mov	edx, DWORD PTR _Cluster$3[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+5544]
	mov	DWORD PTR [edx+8], ecx
	jmp	SHORT $LN8@PS_AddPart
$LN9@PS_AddPart:

; 3454 :                 else Cluster.Static = false;

	mov	edx, DWORD PTR _Cluster$3[ebp]
	mov	al, BYTE PTR [edx+4]
	and	al, -17					; ffffffefH
	mov	ecx, DWORD PTR _Cluster$3[ebp]
	mov	BYTE PTR [ecx+4], al
$LN8@PS_AddPart:

; 3455 :             }
; 3456 :         }
; 3457 :     }
; 3458 : 
; 3459 : 
; 3460 : 
; 3461 :     // Setup velocity
; 3462 :     if (Vel)

	cmp	DWORD PTR _Vel$[ebp], 0
	je	SHORT $LN7@PS_AddPart

; 3463 :     {
; 3464 :         float v = ppn.velInherit;

	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR [edx+1656]
	movss	DWORD PTR _v$2[ebp], xmm0

; 3465 :         pn.vel.x = Vel->x * v;

	mov	eax, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _v$2[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [ecx+72], xmm0

; 3466 :         pn.vel.y = Vel->y * v;

	mov	edx, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR _v$2[ebp]
	mov	eax, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 3467 :         pn.vel.z = Vel->z * v;

	mov	ecx, DWORD PTR _Vel$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, DWORD PTR _v$2[ebp]
	mov	edx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [edx+80], xmm0

; 3468 :     }
; 3469 :     else

	jmp	SHORT $LN6@PS_AddPart
$LN7@PS_AddPart:

; 3470 :     {
; 3471 :         pn.vel.x = pn.vel.y = pn.vel.z = 0;

	mov	eax, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+80], xmm0
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+76], xmm0
	mov	edx, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+72], xmm0
$LN6@PS_AddPart:

; 3472 :     }
; 3473 : 
; 3474 :     // Wind effect
; 3475 :     pn.WindAffected = (ppn.WindAffected) ? 1 : 0;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	cl, BYTE PTR [eax+5548]
	shl	cl, 4
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN18@PS_AddPart
	mov	DWORD PTR tv176[ebp], 1
	jmp	SHORT $LN19@PS_AddPart
$LN18@PS_AddPart:
	mov	DWORD PTR tv176[ebp], 0
$LN19@PS_AddPart:
	mov	al, BYTE PTR tv176[ebp]
	and	al, 1
	shl	al, 2
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	dl, BYTE PTR [ecx+32]
	and	dl, -5					; fffffffbH
	or	dl, al
	mov	eax, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [eax+32], dl

; 3476 : 
; 3477 :     // Setup aiming
; 3478 :     if (Aim)

	cmp	DWORD PTR _Aim$[ebp], 0
	je	$LN5@PS_AddPart

; 3479 :     {
; 3480 :         float v;
; 3481 :         v = ppn.velInitial + ppn.velVariation * NRAND;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mulss	xmm1, DWORD PTR [ecx+1652]
	mov	edx, DWORD PTR _ppn$[ebp]
	addss	xmm1, DWORD PTR [edx+1648]
	movss	DWORD PTR _v$1[ebp], xmm1

; 3482 :         pn.vel.x += Aim->x * v;

	mov	eax, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR _v$1[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	addss	xmm0, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [edx+72], xmm0

; 3483 :         pn.vel.y += Aim->y * v;

	mov	eax, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm0, DWORD PTR _v$1[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	addss	xmm0, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [edx+76], xmm0

; 3484 :         pn.vel.z += Aim->z * v;

	mov	eax, DWORD PTR _Aim$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _v$1[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	addss	xmm0, DWORD PTR [ecx+80]
	mov	edx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [edx+80], xmm0
$LN5@PS_AddPart:

; 3485 : 
; 3486 :     }
; 3487 : 
; 3488 :     // * LINKED POLY CREATION *
; 3489 :     if (ppn.drawType == PSDT_POLY) PS_AddPoly(ptr, ID);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+92], 1
	jne	SHORT $LN4@PS_AddPart
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	?PS_AddPoly@DrawableParticleSys@@CAXKK@Z ; DrawableParticleSys::PS_AddPoly
	add	esp, 8
$LN4@PS_AddPart:

; 3490 : 
; 3491 :     /* if(ppn->bspObj)
; 3492 :      {
; 3493 :      SubPart *sub = new SubPartBSP(this);
; 3494 :      sub->next = firstSubPart;
; 3495 :      firstSubPart = sub;
; 3496 :      }
; 3497 :     */
; 3498 :     // * LINKED SOUND *
; 3499 :     if (ppn.sndId) PS_AddSound(ptr, ID);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+1244], 0
	je	SHORT $LN3@PS_AddPart
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	?PS_AddSound@DrawableParticleSys@@CAXKK@Z ; DrawableParticleSys::PS_AddSound
	add	esp, 8
$LN3@PS_AddPart:

; 3500 : 
; 3501 : 
; 3502 :     // * LINKED TRAIL *
; 3503 :     if (ppn.trailId >= 0) PS_AddTrail(ppn.trailId, Pos, ptr);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+1644], 0
	jl	SHORT $LN2@PS_AddPart
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1644]
	push	ecx
	call	?PS_AddTrail@DrawableParticleSys@@CAKHPAUTpoint@@K_NMM@Z ; DrawableParticleSys::PS_AddTrail
	add	esp, 24					; 00000018H
$LN2@PS_AddPart:

; 3504 : 
; 3505 : 
; 3506 :     // * EMITTERS GENERATION *
; 3507 :     if (ppn.emitter[0].stages) PS_GenerateEmitters(ptr, ppn);

	mov	edx, 368				; 00000170H
	imul	edx, 0
	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+edx+1864], 0
	je	SHORT $LN1@PS_AddPart
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	?PS_GenerateEmitters@DrawableParticleSys@@CAXKAAUPS_PPType@@@Z ; DrawableParticleSys::PS_GenerateEmitters
	add	esp, 8
$LN1@PS_AddPart:

; 3508 : 
; 3509 : 
; 3510 :     /*switch(ppn->orientation)
; 3511 :     {
; 3512 :      case PSO_MOVEMENT:
; 3513 :      {
; 3514 :      SubPart *sub = new SubPartMovementOrientation(this);
; 3515 :      sub->next = firstSubPart;
; 3516 :      firstSubPart = sub;
; 3517 :      }
; 3518 :      break;
; 3519 : 
; 3520 :      default : break;
; 3521 :     }
; 3522 :     */
; 3523 : 
; 3524 :     pn.lastTime = pn.birthTime = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR tv244[ebp], eax
	mov	eax, DWORD PTR _pn$[ebp]
	mov	ecx, DWORD PTR tv244[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _pn$[ebp]
	mov	eax, DWORD PTR tv244[ebp]
	mov	DWORD PTR [edx+20], eax

; 3525 :     pn.lifespan  = ppn.lifespan + ppn.lifespanvariation * NRAND;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mulss	xmm1, DWORD PTR [ecx+76]
	mov	edx, DWORD PTR _ppn$[ebp]
	addss	xmm1, DWORD PTR [edx+72]
	mov	eax, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [eax+24], xmm1

; 3526 :     pn.life = 0.0f;

	mov	ecx, DWORD PTR _pn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+28], xmm0

; 3527 :     // pn.FrameNr[0]=FrameNr[1]=0;
; 3528 :     // pn.LastTimeRest[0]=LastTimeRest[1]=0;
; 3529 :     pn.GravityStage = pn.AccelStage = 0;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+48], 0
	mov	eax, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax+52], 0

; 3530 :     pn.Alive = true;

	mov	ecx, DWORD PTR _pn$[ebp]
	mov	dl, BYTE PTR [ecx+32]
	or	dl, 1
	mov	eax, DWORD PTR _pn$[ebp]
	mov	BYTE PTR [eax+32], dl

; 3531 : 
; 3532 :     // Recalc Ground position
; 3533 :     pn.LastCalcPos = pn.pos;

	mov	ecx, DWORD PTR _pn$[ebp]
	add	ecx, 56					; 00000038H
	mov	edx, DWORD PTR _pn$[ebp]
	add	edx, 84					; 00000054H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx

; 3534 :     pn.GroundLevel = OTWDriver.GetGroundLevel(pn.pos.x, pn.pos.y);

	push	0
	mov	edx, DWORD PTR _pn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _pn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+56]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z ; OTWDriverClass::GetGroundLevel
	mov	ecx, DWORD PTR _pn$[ebp]
	fstp	DWORD PTR [ecx+108]

; 3535 : 
; 3536 :     // Recalc Wind velocity
; 3537 :     mlTrig trigWind;
; 3538 :     float wind;
; 3539 :     mlSinCos(&trigWind, ((WeatherClass*)realWeather)->WindHeadingAt(&pn.pos));

	mov	edx, DWORD PTR _pn$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?WindHeadingAt@WeatherClass@@QAEMPBUTpoint@@@Z ; WeatherClass::WindHeadingAt
	push	ecx
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR _trigWind$[ebp]
	push	eax
	call	?mlSinCos@@YAXPAUmlTrig@@M@Z		; mlSinCos
	add	esp, 8

; 3540 :     wind = ((WeatherClass*)realWeather)->WindSpeedInFeetPerSecond(&pn.pos);

	mov	ecx, DWORD PTR _pn$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?WindSpeedInFeetPerSecond@WeatherClass@@QAEMPBUTpoint@@@Z ; WeatherClass::WindSpeedInFeetPerSecond
	fstp	DWORD PTR _wind$[ebp]

; 3541 :     wind *= ppn.WindFactor * 0.5f ; // RV - I-Hawk

	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR [edx+5556]
	mulss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR _wind$[ebp]
	movss	DWORD PTR _wind$[ebp], xmm0

; 3542 :     pn.Wind.x = trigWind.cos * wind;

	movss	xmm0, DWORD PTR _trigWind$[ebp+4]
	mulss	xmm0, DWORD PTR _wind$[ebp]
	mov	eax, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [eax+96], xmm0

; 3543 :     pn.Wind.y = trigWind.sin * wind;

	movss	xmm0, DWORD PTR _trigWind$[ebp]
	mulss	xmm0, DWORD PTR _wind$[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [ecx+100], xmm0

; 3544 : 
; 3545 :     // TODO - Use this?
; 3546 :     pn.rotation = &psIRotation;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+40], OFFSET ?psIRotation@@3UTrotation@@A ; psIRotation

; 3547 : 
; 3548 :     // * SIZE CX *
; 3549 :     pn.SizeRandom = 1.0f + PRANDFloatPos() * ppn.SizeRandom;

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv504[ebp]
	movss	xmm0, DWORD PTR tv504[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mulss	xmm0, DWORD PTR [eax+584]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	ecx, DWORD PTR _pn$[ebp]
	movss	DWORD PTR [ecx+120], xmm0

; 3550 : 
; 3551 :     pn.SizeStage = 0;

	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [edx+116], 0

; 3552 :     pn.Radius = ppn.size[0].value;

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+eax+600]
	mov	DWORD PTR [ecx+68], eax
$LN16@PS_AddPart:

; 3553 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_AddParticle@DrawableParticleSys@@CAXHPAUTpoint@@00MKK@Z ENDP ; DrawableParticleSys::PS_AddParticle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_Life$2 = -2484						; size = 4
_Counter$ = -2480					; size = 4
_emitenums$3 = -2476					; size = 24
_emitenums$4 = -2452					; size = 24
_enumstr$5 = -2428					; size = 12
tv4245 = -2416						; size = 4
tv2693 = -2412						; size = 4
tv2687 = -2408						; size = 4
tv3227 = -2404						; size = 4
tv2681 = -2400						; size = 4
tv3324 = -2396						; size = 4
tv3043 = -2392						; size = 4
tv3151 = -2388						; size = 4
tv4247 = -2384						; size = 4
tv2709 = -2380						; size = 4
tv2942 = -2376						; size = 4
tv3399 = -2372						; size = 4
tv2703 = -2368						; size = 4
tv3391 = -2364						; size = 4
tv3332 = -2360						; size = 4
$T6 = -2356						; size = 4
tv3235 = -2352						; size = 4
$T7 = -2348						; size = 4
tv3159 = -2344						; size = 4
tv4025 = -2340						; size = 4
tv4251 = -2336						; size = 4
tv3993 = -2332						; size = 4
tv3035 = -2328						; size = 4
tv3934 = -2324						; size = 4
tv2960 = -2320						; size = 4
tv3926 = -2316						; size = 4
$T8 = -2312						; size = 4
tv3918 = -2308						; size = 4
tv3561 = -2304						; size = 4
tv3910 = -2300						; size = 4
tv4291 = -2296						; size = 4
tv3902 = -2292						; size = 4
tv3370 = -2288						; size = 4
tv3894 = -2284						; size = 4
tv4289 = -2280						; size = 4
tv3877 = -2276						; size = 4
_ptn$9 = -2272						; size = 4
_n$10 = -2268						; size = 4
tv4255 = -2264						; size = 4
tv3842 = -2260						; size = 4
tv3209 = -2256						; size = 4
tv3756 = -2252						; size = 4
tv4253 = -2248						; size = 4
tv4297 = -2244						; size = 4
tv3089 = -2240						; size = 4
tv3748 = -2236						; size = 4
tv3081 = -2232						; size = 4
tv3691 = -2228						; size = 4
tv4249 = -2224						; size = 4
tv4295 = -2220						; size = 4
tv2997 = -2216						; size = 4
tv3683 = -2212						; size = 4
tv2989 = -2208						; size = 4
tv3662 = -2204						; size = 4
tv2951 = -2200						; size = 4
tv3633 = -2196						; size = 4
_n$11 = -2192						; size = 4
tv3626 = -2188						; size = 4
tv2670 = -2184						; size = 4
tv3569 = -2180						; size = 4
tv4293 = -2176						; size = 4
tv2718 = -2172						; size = 4
_n$12 = -2168						; size = 4
tv1972 = -2164						; size = 4
_n$13 = -2160						; size = 4
_arg$14 = -2156						; size = 4
_i$15 = -2152						; size = 4
_n$16 = -2148						; size = 4
_n$17 = -2144						; size = 4
_RndSize$18 = -2140					; size = 4
_i$19 = -2136						; size = 4
_n$20 = -2132						; size = 4
_stored$21 = -2128					; size = 4
_gpn$22 = -2124						; size = 4
tv2460 = -2120						; size = 4
_n$23 = -2116						; size = 4
tv2274 = -2112						; size = 4
$T24 = -2108						; size = 4
$T25 = -2104						; size = 4
tv463 = -2100						; size = 4
_ary$26 = -2096						; size = 4
_extra$ = -2092						; size = 4
_n$27 = -2088						; size = 4
_ptn$28 = -2084						; size = 4
_fp$ = -2080						; size = 4
_gpn$29 = -2076						; size = 4
_x$30 = -2072						; size = 4
_Table$31 = -2068					; size = 4
_a$32 = -2064						; size = 4
_a$33 = -2060						; size = 4
_a$34 = -2056						; size = 4
_c$35 = -2052						; size = 4
_t$36 = -2048						; size = 4
_a$37 = -2044						; size = 4
_b$38 = -2040						; size = 4
_c$39 = -2036						; size = 4
_x$40 = -2032						; size = 4
_c$41 = -2028						; size = 4
_n$42 = -2024						; size = 4
_i$43 = -2020						; size = 4
_c$44 = -2016						; size = 4
_t$45 = -2012						; size = 4
_c$46 = -2008						; size = 4
_LastPPN$ = -2004					; size = 4
_c$47 = -2000						; size = 4
_c$48 = -1996						; size = 4
_a$49 = -1992						; size = 4
_LastTPN$ = -1988					; size = 4
_l$ = -1984						; size = 4
_i$50 = -1980						; size = 4
_k$ = -1976						; size = 4
_GroupNode$ = -1972					; size = 4
_pan$ = -1968						; size = 4
_currentemitter$ = -1964				; size = 4
_a$51 = -1960						; size = 4
_tpn$ = -1956						; size = 4
_com$52 = -1952						; size = 4
_ppn$ = -1948						; size = 4
_buffer$53 = -1944					; size = 580
_path$ = -1364						; size = 260
_buffer$ = -1104					; size = 1024
_FileName$54 = -80					; size = 32
_FileName$55 = -48					; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?PS_LoadParameters@DrawableParticleSys@@CA_NXZ PROC	; DrawableParticleSys::PS_LoadParameters

; 5054 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2472				; 000009a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 5055 :     char buffer[1024];
; 5056 :     char path[_MAX_PATH];
; 5057 :     FILE *fp;
; 5058 : 
; 5059 :     // The PPN Pointer
; 5060 :     PS_PPType *ppn = NULL;

	mov	DWORD PTR _ppn$[ebp], 0

; 5061 :     PS_TPType *tpn = NULL;

	mov	DWORD PTR _tpn$[ebp], 0

; 5062 :     ParticleAnimationNode *pan = 0;

	mov	DWORD PTR _pan$[ebp], 0

; 5063 :     ParticleGroupNode *GroupNode = NULL;

	mov	DWORD PTR _GroupNode$[ebp], 0

; 5064 :     DWORD LastPPN = 0, LastTPN = 0;

	mov	DWORD PTR _LastPPN$[ebp], 0
	mov	DWORD PTR _LastTPN$[ebp], 0

; 5065 : 
; 5066 : 
; 5067 :     int Counter;
; 5068 : 
; 5069 : 
; 5070 :     // COBRA - RED - Setup the LOG10 Array
; 5071 :     for (int a = 0; a < LOG10_ARRAY_ITEMS; a++)

	mov	DWORD PTR _a$34[ebp], 0
	jmp	SHORT $LN224@PS_LoadPar
$LN223@PS_LoadPar:
	mov	eax, DWORD PTR _a$34[ebp]
	add	eax, 1
	mov	DWORD PTR _a$34[ebp], eax
$LN224@PS_LoadPar:
	cmp	DWORD PTR _a$34[ebp], 500		; 000001f4H
	jge	SHORT $LN222@PS_LoadPar

; 5072 :     {
; 5073 :         Log10Array[a] = 1.0f - log10((float)a / LOG10_ARRAY_ITEMS * 9.0f + 1.0f);

	cvtsi2ss xmm0, DWORD PTR _a$34[ebp]
	divss	xmm0, DWORD PTR __real@43fa0000
	mulss	xmm0, DWORD PTR __real@41100000
	addss	xmm0, DWORD PTR __real@3f800000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?log10@@YAMM@Z				; log10
	add	esp, 4
	fstp	DWORD PTR tv2670[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR tv2670[ebp]
	mov	ecx, DWORD PTR _a$34[ebp]
	movss	DWORD PTR ?Log10Array@DrawableParticleSys@@2PAMA[ecx*4], xmm0

; 5074 :     }

	jmp	SHORT $LN223@PS_LoadPar
$LN222@PS_LoadPar:

; 5075 : 
; 5076 :     for (float x = 0; x < FADE_ARRAY_ITEMS; x++)

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _x$40[ebp], xmm0
	jmp	SHORT $LN221@PS_LoadPar
$LN220@PS_LoadPar:
	movss	xmm0, DWORD PTR _x$40[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _x$40[ebp], xmm0
$LN221@PS_LoadPar:
	movss	xmm0, DWORD PTR __real@43fa0000
	comiss	xmm0, DWORD PTR _x$40[ebp]
	jbe	$LN219@PS_LoadPar

; 5077 :     {
; 5078 :         FadeArray[(int)x] = log10(x + 10.0f) / (pow((x + 10), 2) / 1200 + 1.0f);

	movss	xmm0, DWORD PTR _x$40[ebp]
	addss	xmm0, DWORD PTR __real@41200000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?log10@@YAMM@Z				; log10
	add	esp, 4
	fstp	DWORD PTR tv2681[ebp]
	movss	xmm0, DWORD PTR tv2681[ebp]
	push	2
	movss	xmm1, DWORD PTR _x$40[ebp]
	addss	xmm1, DWORD PTR __real@41200000
	push	ecx
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4245[ebp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv2687[ebp]
	movss	xmm0, DWORD PTR tv2687[ebp]
	divss	xmm0, DWORD PTR __real@44960000
	addss	xmm0, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR tv4245[ebp]
	divss	xmm1, xmm0
	cvttss2si edx, DWORD PTR _x$40[ebp]
	movss	DWORD PTR ?FadeArray@DrawableParticleSys@@2PAMA[edx*4], xmm1

; 5079 :     }

	jmp	$LN220@PS_LoadPar
$LN219@PS_LoadPar:

; 5080 : 
; 5081 :     for (int a = 0; a < ASIN_ARRAY_ITEMS; a++)

	mov	DWORD PTR _a$32[ebp], 0
	jmp	SHORT $LN218@PS_LoadPar
$LN217@PS_LoadPar:
	mov	eax, DWORD PTR _a$32[ebp]
	add	eax, 1
	mov	DWORD PTR _a$32[ebp], eax
$LN218@PS_LoadPar:
	cmp	DWORD PTR _a$32[ebp], 500		; 000001f4H
	jge	SHORT $LN216@PS_LoadPar

; 5082 :     {
; 5083 :         ASinArray[a] = asinf((float)a / (ASIN_ARRAY_ITEMS - 1)) * 2 / PI;

	cvtsi2ss xmm0, DWORD PTR _a$32[ebp]
	divss	xmm0, DWORD PTR __real@43f98000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	_asinf
	add	esp, 4
	fstp	DWORD PTR tv2693[ebp]
	movss	xmm0, DWORD PTR tv2693[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	divss	xmm0, DWORD PTR __real@40490fdb
	mov	ecx, DWORD PTR _a$32[ebp]
	movss	DWORD PTR ?ASinArray@DrawableParticleSys@@2PAMA[ecx*4], xmm0

; 5084 :     }

	jmp	SHORT $LN217@PS_LoadPar
$LN216@PS_LoadPar:

; 5085 : 
; 5086 :     for (float x = 0; x < SIZE_ARRAY_ITEMS; x++)

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _x$30[ebp], xmm0
	jmp	SHORT $LN215@PS_LoadPar
$LN214@PS_LoadPar:
	movss	xmm0, DWORD PTR _x$30[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _x$30[ebp], xmm0
$LN215@PS_LoadPar:
	movss	xmm0, DWORD PTR __real@43fa0000
	comiss	xmm0, DWORD PTR _x$30[ebp]
	jbe	SHORT $LN213@PS_LoadPar

; 5087 :     {
; 5088 :         SizeArray[(int)x] = 1.0f - pow((((float)SIZE_ARRAY_ITEMS - x) / (float)SIZE_ARRAY_ITEMS), 9);

	push	9
	movss	xmm0, DWORD PTR __real@43fa0000
	subss	xmm0, DWORD PTR _x$30[ebp]
	divss	xmm0, DWORD PTR __real@43fa0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv2703[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR tv2703[ebp]
	cvttss2si edx, DWORD PTR _x$30[ebp]
	movss	DWORD PTR ?SizeArray@DrawableParticleSys@@2PAMA[edx*4], xmm0

; 5089 :     }

	jmp	SHORT $LN214@PS_LoadPar
$LN213@PS_LoadPar:

; 5090 : 
; 5091 :     //  RED - Setup the Randomly rotate Quads
; 5092 :     for (int a = 0; a < PS_MAXQUADRNDLIST; a++)

	mov	DWORD PTR _a$49[ebp], 0
	jmp	SHORT $LN212@PS_LoadPar
$LN211@PS_LoadPar:
	mov	eax, DWORD PTR _a$49[ebp]
	add	eax, 1
	mov	DWORD PTR _a$49[ebp], eax
$LN212@PS_LoadPar:
	cmp	DWORD PTR _a$49[ebp], 1024		; 00000400H
	jge	$LN210@PS_LoadPar

; 5093 :     {
; 5094 :         PS_QuadRndList[a].RotRate = PRANDFloat() * PI;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv2709[ebp]
	movss	xmm0, DWORD PTR tv2709[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	mov	ecx, DWORD PTR _a$49[ebp]
	imul	ecx, 12					; 0000000cH
	movss	DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[ecx], xmm0

; 5095 :         mlSinCos(&PS_QuadRndList[a].RotCx, PS_QuadRndList[a].RotRate);

	mov	edx, DWORD PTR _a$49[ebp]
	imul	edx, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[edx]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _a$49[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, OFFSET ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A+4
	push	eax
	call	?mlSinCos@@YAXPAUmlTrig@@M@Z		; mlSinCos
	add	esp, 8

; 5096 :         float RndSize = 1 + PRANDFloat() * 0.2f;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv2718[ebp]
	movss	xmm0, DWORD PTR tv2718[ebp]
	mulss	xmm0, DWORD PTR __real@3e4ccccd
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _RndSize$18[ebp], xmm0

; 5097 :         PS_QuadRndList[a].RotCx.cos *= RndSize;

	mov	ecx, DWORD PTR _a$49[ebp]
	imul	ecx, 12					; 0000000cH
	movss	xmm0, DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[ecx+8]
	mulss	xmm0, DWORD PTR _RndSize$18[ebp]
	mov	edx, DWORD PTR _a$49[ebp]
	imul	edx, 12					; 0000000cH
	movss	DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[edx+8], xmm0

; 5098 :         PS_QuadRndList[a].RotCx.sin *= RndSize;

	mov	eax, DWORD PTR _a$49[ebp]
	imul	eax, 12					; 0000000cH
	movss	xmm0, DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[eax+4]
	mulss	xmm0, DWORD PTR _RndSize$18[ebp]
	mov	ecx, DWORD PTR _a$49[ebp]
	imul	ecx, 12					; 0000000cH
	movss	DWORD PTR ?PS_QuadRndList@DrawableParticleSys@@0PAUQuadRndType@@A[ecx+4], xmm0

; 5099 :     }

	jmp	$LN211@PS_LoadPar
$LN210@PS_LoadPar:

; 5100 : 
; 5101 : 
; 5102 : 
; 5103 :     sprintf(path, "%s\\terrdata\\%s", FalconDataDirectory, TRAILFILE);  // MLR 12/14/2003 - This should probably be fixed

	push	OFFSET _TRAILFILE
	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	push	OFFSET ??_C@_0P@EKLILMAA@?$CFs?2terrdata?2?$CFs?$AA@
	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 5104 :     fp = fopen(path, "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 5105 : 
; 5106 :     // Initialize the Lists...
; 5107 :     memset(PS_Lists, 0, sizeof(PS_Lists));

	push	224					; 000000e0H
	push	0
	push	OFFSET ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A ; DrawableParticleSys::PS_Lists
	call	_memset
	add	esp, 12					; 0000000cH

; 5108 :     // Initialize all Lists
; 5109 :     PS_ListsInit();

	call	?PS_ListsInit@DrawableParticleSys@@CAXXZ ; DrawableParticleSys::PS_ListsInit

; 5110 : 
; 5111 :     ppn = NULL;

	mov	DWORD PTR _ppn$[ebp], 0

; 5112 :     int currentemitter = -1;

	mov	DWORD PTR _currentemitter$[ebp], -1

; 5113 : 
; 5114 :     // Cobra - Use intrnal PS.ini
; 5115 :     int k = 0;

	mov	DWORD PTR _k$[ebp], 0
$LN303@PS_LoadPar:

; 5116 : 
; 5117 :     while (1)

	mov	ecx, 1
	test	ecx, ecx
	je	$LN208@PS_LoadPar

; 5118 :     {
; 5119 :         char *com, *ary, *arg;
; 5120 :         float  i; // time index
; 5121 : 
; 5122 :         if (fp == NULL)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	$LN207@PS_LoadPar

; 5123 :         {
; 5124 :             if (g_bHighSFX)

	movzx	edx, BYTE PTR ?g_bHighSFX@@3_NA		; g_bHighSFX
	test	edx, edx
	je	SHORT $LN206@PS_LoadPar
$LN205@PS_LoadPar:

; 5125 :             {
; 5126 :                 while (strlen(PS_Data_High[k]) == 0)

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_High@@3PAPADA[eax*4]
	push	ecx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN204@PS_LoadPar

; 5127 :                     k++;

	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
	jmp	SHORT $LN205@PS_LoadPar
$LN204@PS_LoadPar:

; 5128 : 
; 5129 :                 strcpy(buffer, PS_Data_High[k]);

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_High@@3PAPADA[eax*4]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 5130 : 
; 5131 :                 if (stricmp(PS_Data_High[k], "END") == 0)

	push	OFFSET ??_C@_03JMGAKCCH@END?$AA@
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_High@@3PAPADA[eax*4]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN203@PS_LoadPar

; 5132 :                     break;

	jmp	$LN208@PS_LoadPar
$LN203@PS_LoadPar:

; 5133 : 
; 5134 :                 k++;

	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx

; 5135 :             }
; 5136 :             else

	jmp	SHORT $LN202@PS_LoadPar
$LN206@PS_LoadPar:

; 5137 :             {
; 5138 :                 while (strlen(PS_Data_Low[k]) == 0)

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_Low@@3PAPADA[eax*4]
	push	ecx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN200@PS_LoadPar

; 5139 :                     k++;

	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
	jmp	SHORT $LN206@PS_LoadPar
$LN200@PS_LoadPar:

; 5140 : 
; 5141 :                 strcpy(buffer, PS_Data_Low[k]);

	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_Low@@3PAPADA[eax*4]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 5142 : 
; 5143 :                 if (stricmp(PS_Data_Low[k], "END") == 0)

	push	OFFSET ??_C@_03JMGAKCCH@END?$AA@
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR ?PS_Data_Low@@3PAPADA[eax*4]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN199@PS_LoadPar

; 5144 :                     break;

	jmp	$LN208@PS_LoadPar
$LN199@PS_LoadPar:

; 5145 : 
; 5146 :                 k++;

	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
$LN202@PS_LoadPar:

; 5147 :             }
; 5148 :         }
; 5149 :         else

	jmp	SHORT $LN197@PS_LoadPar
$LN207@PS_LoadPar:

; 5150 :         {
; 5151 :             if (fgets(buffer, sizeof buffer, fp) == 0)

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN197@PS_LoadPar

; 5152 :             {
; 5153 :                 fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 5154 :                 break;

	jmp	$LN208@PS_LoadPar
$LN197@PS_LoadPar:

; 5155 :             }
; 5156 :         }
; 5157 : 
; 5158 :         // end Cobra
; 5159 : 
; 5160 :         if (buffer[0] == '#' || buffer[0] == ';' || buffer[0] == '\n')

	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _buffer$[ebp+eax]
	cmp	ecx, 35					; 00000023H
	je	SHORT $LN195@PS_LoadPar
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _buffer$[ebp+edx]
	cmp	eax, 59					; 0000003bH
	je	SHORT $LN195@PS_LoadPar
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _buffer$[ebp+ecx]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN196@PS_LoadPar
$LN195@PS_LoadPar:

; 5161 :             continue;

	jmp	$LN303@PS_LoadPar
$LN196@PS_LoadPar:

; 5162 : 
; 5163 :         int b;
; 5164 : 
; 5165 :         for (b = 0; b < 1024 && (buffer[b] == ' ' || buffer[b] == '\t'); b++);

	mov	DWORD PTR _b$38[ebp], 0
	jmp	SHORT $LN194@PS_LoadPar
$LN193@PS_LoadPar:
	mov	eax, DWORD PTR _b$38[ebp]
	add	eax, 1
	mov	DWORD PTR _b$38[ebp], eax
$LN194@PS_LoadPar:
	cmp	DWORD PTR _b$38[ebp], 1024		; 00000400H
	jge	SHORT $LN192@PS_LoadPar
	mov	ecx, DWORD PTR _b$38[ebp]
	movsx	edx, BYTE PTR _buffer$[ebp+ecx]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN191@PS_LoadPar
	mov	eax, DWORD PTR _b$38[ebp]
	movsx	ecx, BYTE PTR _buffer$[ebp+eax]
	cmp	ecx, 9
	jne	SHORT $LN192@PS_LoadPar
$LN191@PS_LoadPar:
	jmp	SHORT $LN193@PS_LoadPar
$LN192@PS_LoadPar:

; 5166 : 
; 5167 :         com = strtok(&buffer[b], "=\n");

	push	OFFSET ??_C@_02NGOCLIKE@?$DN?6?$AA@
	mov	edx, DWORD PTR _b$38[ebp]
	lea	eax, DWORD PTR _buffer$[ebp+edx]
	push	eax
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _com$52[ebp], eax

; 5168 :         arg = strtok(0, "\n\0");

	push	OFFSET ??_C@_02NCJKDDL@?6?$AA?$AA@
	push	0
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _arg$14[ebp], eax

; 5169 : 
; 5170 :         if (com[0] == '#' || com[0] == ';')

	mov	ecx, 1
	imul	ecx, 0
	mov	edx, DWORD PTR _com$52[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN189@PS_LoadPar
	mov	ecx, 1
	imul	ecx, 0
	mov	edx, DWORD PTR _com$52[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 59					; 0000003bH
	jne	SHORT $LN190@PS_LoadPar
$LN189@PS_LoadPar:

; 5171 :             continue;

	jmp	$LN303@PS_LoadPar
$LN190@PS_LoadPar:

; 5172 : 
; 5173 : 
; 5174 :         /* seperate command and array number 'command[arraynumber]*/
; 5175 :         com = strtok(com, "[");

	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _com$52[ebp], eax

; 5176 :         ary = strtok(0, "]");

	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	push	0
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _ary$26[ebp], eax

; 5177 : 
; 5178 :         com = trim(com);

	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	?trim@@YAPADPAD@Z			; trim
	add	esp, 4
	mov	DWORD PTR _com$52[ebp], eax

; 5179 :         ary = trim(ary);

	mov	eax, DWORD PTR _ary$26[ebp]
	push	eax
	call	?trim@@YAPADPAD@Z			; trim
	add	esp, 4
	mov	DWORD PTR _ary$26[ebp], eax

; 5180 : 
; 5181 :         i = TokenF(ary, 0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _ary$26[ebp]
	push	ecx
	call	?TokenF@@YAMPADM@Z			; TokenF
	add	esp, 8
	fstp	DWORD PTR _i$50[ebp]

; 5182 : 
; 5183 :         /* kludge so that arg is the current string being parsed */
; 5184 :         SetTokenString(arg);

	mov	edx, DWORD PTR _arg$14[ebp]
	push	edx
	call	?SetTokenString@@YAXPAD@Z		; SetTokenString
	add	esp, 4

; 5185 : 
; 5186 :         if (!com)continue;

	cmp	DWORD PTR _com$52[ebp], 0
	jne	SHORT $LN188@PS_LoadPar
	jmp	$LN303@PS_LoadPar
$LN188@PS_LoadPar:

; 5187 : 
; 5188 : #define On(s) if(stricmp(com,s)==0)
; 5189 : 
; 5190 :         // COBRA - RED - This section has been added of Animation Nodes
; 5191 :         // The token 'id' or 'animation' selects which node is pointed
; 5192 :         // and what commands are then evaluated referring that node type
; 5193 : 
; 5194 :         On("id")

	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN187@PS_LoadPar

; 5195 :         {
; 5196 :             pan = 0;

	mov	DWORD PTR _pan$[ebp], 0

; 5197 :             GroupNode = NULL;

	mov	DWORD PTR _GroupNode$[ebp], 0

; 5198 :             tpn = NULL;

	mov	DWORD PTR _tpn$[ebp], 0

; 5199 :             char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$17[ebp], eax

; 5200 : 
; 5201 :             if (n)

	cmp	DWORD PTR _n$17[ebp], 0
	je	$LN186@PS_LoadPar

; 5202 :             {
; 5203 :                 // if a new name must inherit from it
; 5204 :                 char *i = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _i$19[ebp], eax

; 5205 : 
; 5206 :                 if (i)

	cmp	DWORD PTR _i$19[ebp], 0
	je	$LN182@PS_LoadPar

; 5207 :                 {
; 5208 :                     // look for the name
; 5209 :                     DWORD c = 0;

	mov	DWORD PTR _c$39[ebp], 0
$LN184@PS_LoadPar:

; 5210 : 
; 5211 :                     // Check if already a PPN with same name
; 5212 :                     while (c < MAX_PARTICLE_PARAMETERS && strncmp(PS_PPN[c].name, i, PS_NAMESIZE)) c++;

	cmp	DWORD PTR _c$39[ebp], 1024		; 00000400H
	jae	SHORT $LN183@PS_LoadPar
	push	64					; 00000040H
	mov	ecx, DWORD PTR _i$19[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$39[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN183@PS_LoadPar
	mov	edx, DWORD PTR _c$39[ebp]
	add	edx, 1
	mov	DWORD PTR _c$39[ebp], edx
	jmp	SHORT $LN184@PS_LoadPar
$LN183@PS_LoadPar:

; 5213 : 
; 5214 :                     // if found copy it's values and skip the rest
; 5215 :                     if (c < MAX_PARTICLE_PARAMETERS)

	cmp	DWORD PTR _c$39[ebp], 1024		; 00000400H
	jae	SHORT $LN182@PS_LoadPar

; 5216 :                     {
; 5217 :                         PS_PPN[LastPPN] = PS_PPN[c];

	mov	eax, DWORD PTR _c$39[ebp]
	imul	eax, 5560				; 000015b8H
	add	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	ecx, DWORD PTR _LastPPN$[ebp]
	imul	ecx, 5560				; 000015b8H
	add	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	push	5560					; 000015b8H
	push	eax
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 5218 :                         ppn = &PS_PPN[LastPPN++];

	mov	edx, DWORD PTR _LastPPN$[ebp]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$[ebp], edx
	mov	eax, DWORD PTR _LastPPN$[ebp]
	add	eax, 1
	mov	DWORD PTR _LastPPN$[ebp], eax

; 5219 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN182@PS_LoadPar:

; 5220 :                     }
; 5221 :                 }
; 5222 : 
; 5223 :                 // New PPN, assign to pointer and count one more
; 5224 :                 ppn = &PS_PPN[LastPPN++];

	mov	ecx, DWORD PTR _LastPPN$[ebp]
	imul	ecx, 5560				; 000015b8H
	add	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR _ppn$[ebp], ecx
	mov	edx, DWORD PTR _LastPPN$[ebp]
	add	edx, 1
	mov	DWORD PTR _LastPPN$[ebp], edx

; 5225 :                 // Default Values
; 5226 :                 memset(ppn, 0, sizeof(*ppn));

	push	5560					; 000015b8H
	push	0
	mov	eax, DWORD PTR _ppn$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5227 :                 strncpy(ppn->name, n, PS_NAMESIZE);

	push	64					; 00000040H
	mov	ecx, DWORD PTR _n$17[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppn$[ebp]
	add	edx, 4
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5228 :                 ppn->id = -1;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax], -1

; 5229 :                 ppn->accel[0].value = 1;

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+1092], xmm0

; 5230 :                 ppn->alpha[0].value = 255.0f;

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [ecx+eax+764], xmm0

; 5231 :                 ppn->velInherit = 1;

	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+1656], xmm0

; 5232 :                 ppn->drawType = PSDT_NONE;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+92], 0

; 5233 :                 currentemitter = -1;

	mov	DWORD PTR _currentemitter$[ebp], -1

; 5234 :                 ppn->sndVol[0].value = 0;

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+ecx+1428], xmm0

; 5235 :                 ppn->sndPitch[0].value = 1;

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+1264], xmm0

; 5236 :                 ppn->trailId = -1;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+1644], -1

; 5237 :                 ppn->visibleDistance = 10000;

	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [eax+1664], xmm0

; 5238 :                 ppn->GroupFlags = GRP_NONE;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+88], 0

; 5239 :                 ppn->TrailName[0] = 0;

	mov	edx, 1
	imul	edx, 0
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+1580], 0

; 5240 :                 ppn->color[0].value.r = ppn->color[0].value.g = ppn->color[0].value.b = 255.0f;

	mov	ecx, 32					; 00000020H
	imul	ecx, 0
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [edx+ecx+116], xmm0
	mov	eax, 32					; 00000020H
	imul	eax, 0
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [ecx+eax+112], xmm0
	mov	edx, 32					; 00000020H
	imul	edx, 0
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR [eax+edx+108], xmm0

; 5241 :                 ppn->RotationRateMax = ppn->RotationRateMin = 0.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+5536], xmm0
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+5540], xmm0

; 5242 :                 ppn->alpha[0].LogMode = false;

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+756], 0

; 5243 :                 ppn->color[0].LogMode = false;

	mov	edx, 32					; 00000020H
	imul	edx, 0
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+100], 0

; 5244 :                 ppn->size[0].LogMode = false;

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+592], 0

; 5245 :                 ppn->ClusterMode = CHILD_CLUSTER; // Defaults

	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@c7c34f80
	movss	DWORD PTR [eax+5544], xmm0

; 5246 :                 ppn->ZPoly = false;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	and	dl, -2					; fffffffeH
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl

; 5247 :                 ppn->EmitLight = false;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	and	dl, -3					; fffffffdH
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl

; 5248 :                 ppn->LightRoot = false;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	and	dl, -5					; fffffffbH
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl

; 5249 :                 ppn->WindAffected = true;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	or	dl, 8
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl

; 5250 :                 ppn->WindFactor         = 1.0f; // RV - I-Hawk - default to 1.0

	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+5556], xmm0
$LN186@PS_LoadPar:

; 5251 :             }
; 5252 : 
; 5253 :             continue;

	jmp	$LN303@PS_LoadPar
$LN187@PS_LoadPar:

; 5254 :         }
; 5255 : 
; 5256 :         //////////////////////////// TRAILS PARAMETER INITIALIZATION \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5257 : 
; 5258 :         On("trail")

	push	OFFSET ??_C@_05FAEIOGEG@trail?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN181@PS_LoadPar

; 5259 :         {
; 5260 :             GroupNode = NULL;

	mov	DWORD PTR _GroupNode$[ebp], 0

; 5261 :             ppn = NULL;

	mov	DWORD PTR _ppn$[ebp], 0

; 5262 :             char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$13[ebp], eax

; 5263 : 
; 5264 :             if (n)

	cmp	DWORD PTR _n$13[ebp], 0
	je	$LN180@PS_LoadPar

; 5265 :             {
; 5266 :                 // if a new name must inherit from it
; 5267 :                 char *i = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _i$15[ebp], eax

; 5268 : 
; 5269 :                 if (i)

	cmp	DWORD PTR _i$15[ebp], 0
	je	$LN176@PS_LoadPar

; 5270 :                 {
; 5271 :                     // look for the name
; 5272 :                     DWORD c = 0;

	mov	DWORD PTR _c$41[ebp], 0
$LN178@PS_LoadPar:

; 5273 : 
; 5274 :                     // Check if already a PPN with same name
; 5275 :                     while (c < MAX_TRAIL_PARAMETERS && strncmp(PS_TPN[c].Name, i, PS_NAMESIZE)) c++;

	cmp	DWORD PTR _c$41[ebp], 256		; 00000100H
	jae	SHORT $LN177@PS_LoadPar
	push	64					; 00000040H
	mov	eax, DWORD PTR _i$15[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$41[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	lea	eax, DWORD PTR [edx+ecx+4]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN177@PS_LoadPar
	mov	ecx, DWORD PTR _c$41[ebp]
	add	ecx, 1
	mov	DWORD PTR _c$41[ebp], ecx
	jmp	SHORT $LN178@PS_LoadPar
$LN177@PS_LoadPar:

; 5276 : 
; 5277 :                     // if found copy it's values and skip the rest
; 5278 :                     if (c < MAX_TRAIL_PARAMETERS)

	cmp	DWORD PTR _c$41[ebp], 256		; 00000100H
	jae	SHORT $LN176@PS_LoadPar

; 5279 :                     {
; 5280 :                         PS_TPN[LastTPN] = PS_TPN[c];

	mov	esi, DWORD PTR _c$41[ebp]
	imul	esi, 320				; 00000140H
	add	esi, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	edi, DWORD PTR _LastTPN$[ebp]
	imul	edi, 320				; 00000140H
	add	edi, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	ecx, 80					; 00000050H
	rep movsd

; 5281 :                         tpn = &PS_TPN[LastTPN++];

	mov	edx, DWORD PTR _LastTPN$[ebp]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _tpn$[ebp], edx
	mov	eax, DWORD PTR _LastTPN$[ebp]
	add	eax, 1
	mov	DWORD PTR _LastTPN$[ebp], eax

; 5282 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN176@PS_LoadPar:

; 5283 :                     }
; 5284 :                 }
; 5285 : 
; 5286 :                 // New PPN, assign to pointer and count one more
; 5287 :                 tpn = &PS_TPN[LastTPN++];

	mov	ecx, DWORD PTR _LastTPN$[ebp]
	imul	ecx, 320				; 00000140H
	add	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	DWORD PTR _tpn$[ebp], ecx
	mov	edx, DWORD PTR _LastTPN$[ebp]
	add	edx, 1
	mov	DWORD PTR _LastTPN$[ebp], edx

; 5288 :                 // Default Values
; 5289 :                 memset(tpn, 0, sizeof(*tpn));

	push	320					; 00000140H
	push	0
	mov	eax, DWORD PTR _tpn$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5290 :                 strncpy(tpn->Name, n, PS_NAMESIZE);

	push	64					; 00000040H
	mov	ecx, DWORD PTR _n$13[ebp]
	push	ecx
	mov	edx, DWORD PTR _tpn$[ebp]
	add	edx, 4
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5291 :                 tpn->Id = -1;

	mov	eax, DWORD PTR _tpn$[ebp]
	mov	DWORD PTR [eax], -1

; 5292 :                 tpn->Color[0].a = 1.0f;

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _tpn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+112], xmm0

; 5293 :                 tpn->GroupFlags = GRP_NONE;

	mov	eax, DWORD PTR _tpn$[ebp]
	mov	DWORD PTR [eax+156], 0
$LN180@PS_LoadPar:

; 5294 :             }
; 5295 : 
; 5296 :             continue;

	jmp	$LN303@PS_LoadPar
$LN181@PS_LoadPar:

; 5297 :         }
; 5298 : 
; 5299 : 
; 5300 :         On("group")

	push	OFFSET ??_C@_05MGJOOGAJ@group?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN175@PS_LoadPar

; 5301 :         {
; 5302 :             ppn = NULL;

	mov	DWORD PTR _ppn$[ebp], 0

; 5303 :             pan = NULL;

	mov	DWORD PTR _pan$[ebp], 0

; 5304 :             tpn = NULL;

	mov	DWORD PTR _tpn$[ebp], 0

; 5305 :             Counter = 0;

	mov	DWORD PTR _Counter$[ebp], 0

; 5306 :             char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$12[ebp], eax

; 5307 : 
; 5308 :             if (n) GroupNode = new ParticleGroupNode(n);

	cmp	DWORD PTR _n$12[ebp], 0
	je	SHORT $LN174@PS_LoadPar
	push	204					; 000000ccH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN227@PS_LoadPar
	mov	edx, DWORD PTR _n$12[ebp]
	push	edx
	mov	ecx, DWORD PTR $T24[ebp]
	call	??0ParticleGroupNode@@QAE@PAD@Z		; ParticleGroupNode::ParticleGroupNode
	mov	DWORD PTR tv463[ebp], eax
	jmp	SHORT $LN228@PS_LoadPar
$LN227@PS_LoadPar:
	mov	DWORD PTR tv463[ebp], 0
$LN228@PS_LoadPar:
	mov	eax, DWORD PTR tv463[ebp]
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T8[ebp]
	mov	DWORD PTR _GroupNode$[ebp], ecx
$LN174@PS_LoadPar:

; 5309 : 
; 5310 :             if (LastGroup) LastGroup->Next = GroupNode;

	cmp	DWORD PTR ?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A, 0 ; DrawableParticleSys::LastGroup
	je	SHORT $LN173@PS_LoadPar
	mov	edx, DWORD PTR ?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A ; DrawableParticleSys::LastGroup
	mov	eax, DWORD PTR _GroupNode$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN172@PS_LoadPar
$LN173@PS_LoadPar:

; 5311 :             else Groups = GroupNode;

	mov	ecx, DWORD PTR _GroupNode$[ebp]
	mov	DWORD PTR ?Groups@DrawableParticleSys@@0PAVParticleGroupNode@@A, ecx ; DrawableParticleSys::Groups
$LN172@PS_LoadPar:

; 5312 : 
; 5313 :             LastGroup = GroupNode;

	mov	edx, DWORD PTR _GroupNode$[ebp]
	mov	DWORD PTR ?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A, edx ; DrawableParticleSys::LastGroup

; 5314 :             continue;

	jmp	$LN303@PS_LoadPar
$LN175@PS_LoadPar:

; 5315 :         }
; 5316 : 
; 5317 :         On("animation")

	push	OFFSET ??_C@_09KCBFNMAJ@animation?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN171@PS_LoadPar

; 5318 :         {
; 5319 :             ppn = NULL;

	mov	DWORD PTR _ppn$[ebp], 0

; 5320 :             GroupNode = NULL;

	mov	DWORD PTR _GroupNode$[ebp], 0

; 5321 :             char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$23[ebp], eax

; 5322 : 
; 5323 :             if (n) pan = GetAnimationNode(n);

	cmp	DWORD PTR _n$23[ebp], 0
	je	SHORT $LN170@PS_LoadPar
	mov	ecx, DWORD PTR _n$23[ebp]
	push	ecx
	call	?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ; DrawableParticleSys::GetAnimationNode
	add	esp, 4
	mov	DWORD PTR _pan$[ebp], eax
$LN170@PS_LoadPar:

; 5324 : 
; 5325 :             continue;

	jmp	$LN303@PS_LoadPar
$LN171@PS_LoadPar:

; 5326 :         }
; 5327 : 
; 5328 :         // Texture File Spcification...
; 5329 :         On("texturefile")

	push	OFFSET ??_C@_0M@EFBLJAJ@texturefile?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN169@PS_LoadPar

; 5330 :         {
; 5331 :             char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$11[ebp], eax

; 5332 :             TheDXEngine.LoadTexture(n);

	mov	eax, DWORD PTR _n$11[ebp]
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?LoadTexture@CDXEngine@@QAEXPAD@Z	; CDXEngine::LoadTexture

; 5333 :             continue;

	jmp	$LN303@PS_LoadPar
$LN169@PS_LoadPar:

; 5334 :         }
; 5335 : 
; 5336 :         // we need a valid ppn or pan pointer
; 5337 :         if ((!tpn) && (!ppn) && (!pan) && (!GroupNode))

	cmp	DWORD PTR _tpn$[ebp], 0
	jne	SHORT $LN168@PS_LoadPar
	cmp	DWORD PTR _ppn$[ebp], 0
	jne	SHORT $LN168@PS_LoadPar
	cmp	DWORD PTR _pan$[ebp], 0
	jne	SHORT $LN168@PS_LoadPar
	cmp	DWORD PTR _GroupNode$[ebp], 0
	jne	SHORT $LN168@PS_LoadPar

; 5338 :         {
; 5339 :             continue;

	jmp	$LN303@PS_LoadPar
$LN168@PS_LoadPar:

; 5340 :         }
; 5341 : 
; 5342 : 
; 5343 : 
; 5344 :         ////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5345 :         // COBRA - RED - This section is just evaluated if a PARTICLE PARAMETER NODE is active
; 5346 :         /////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5347 : 
; 5348 :         if (ppn)  // * PARTICLE PARAMETER NODE *

	cmp	DWORD PTR _ppn$[ebp], 0
	je	$LN89@PS_LoadPar

; 5349 :         {
; 5350 : 
; 5351 :             On("cluster")

	push	OFFSET ??_C@_07NKHKICEG@cluster?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN166@PS_LoadPar

; 5352 :             {
; 5353 :                 ppn->ClusterMode = TokenF(CHILD_CLUSTER);

	push	ecx
	movss	xmm0, DWORD PTR __real@c7c34f80
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+5544]

; 5354 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN166@PS_LoadPar:

; 5355 :             }
; 5356 : 
; 5357 :             On("windoff")

	push	OFFSET ??_C@_07GAJCJCGI@windoff?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN165@PS_LoadPar

; 5358 :             {
; 5359 :                 ppn->WindAffected = false;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	and	dl, -9					; fffffff7H
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl

; 5360 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN165@PS_LoadPar:

; 5361 :             }
; 5362 : 
; 5363 :             On("windFactor")

	push	OFFSET ??_C@_0L@COKNODCN@windFactor?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN164@PS_LoadPar

; 5364 :             {
; 5365 :                 ppn->WindFactor = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+5556]

; 5366 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN164@PS_LoadPar:

; 5367 :             }
; 5368 : 
; 5369 :             On("lifespan")

	push	OFFSET ??_C@_08LLHMBIPK@lifespan?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN163@PS_LoadPar

; 5370 :             {
; 5371 :                 ppn->lifespan          = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+72]

; 5372 :                 ppn->lifespanvariation = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+76]

; 5373 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN163@PS_LoadPar:

; 5374 :             }
; 5375 : 
; 5376 :             On("color")

	push	OFFSET ??_C@_05PEENBMOG@color?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN162@PS_LoadPar

; 5377 :             {
; 5378 :                 // color[x]=0,1,0,0,1
; 5379 :                 ppn->color[ppn->colorStages].value.r = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv2942[ebp]
	movss	xmm0, DWORD PTR tv2942[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+108], xmm0

; 5380 :                 ppn->color[ppn->colorStages].value.g = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv2951[ebp]
	movss	xmm0, DWORD PTR tv2951[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+112], xmm0

; 5381 :                 ppn->color[ppn->colorStages].value.b = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv2960[ebp]
	movss	xmm0, DWORD PTR tv2960[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+116], xmm0

; 5382 :                 ppn->color[ppn->colorStages].K.r = 1.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+edx+120], xmm0

; 5383 :                 ppn->color[ppn->colorStages].K.g = 1.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+edx+124], xmm0

; 5384 :                 ppn->color[ppn->colorStages].K.b = 1.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+edx+128], xmm0

; 5385 :                 ppn->color[ppn->colorStages].time    = i;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [eax+edx+104], xmm0

; 5386 :                 K_CALCRGB(ppn->color, ppn->colorStages, r);

	mov	ecx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	je	$LN161@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+108]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv2989[ebp]
	movss	xmm0, DWORD PTR tv2989[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	sub	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [ecx+eax+108]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4247[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv2997[ebp]
	movss	xmm0, DWORD PTR tv4247[ebp]
	subss	xmm0, DWORD PTR tv2997[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, 1
	shl	edx, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [ecx+eax+104]
	subss	xmm1, DWORD PTR [esi+edx+104]
	divss	xmm0, xmm1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	sub	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [ecx+eax+120], xmm0
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+eax+108]
	jbe	SHORT $LN160@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+100], 1
	jmp	SHORT $LN159@PS_LoadPar
$LN160@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+100], 0
$LN159@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+108]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	shl	eax, 5
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+108]
$LN161@PS_LoadPar:

; 5387 :                 K_CALCRGB(ppn->color, ppn->colorStages, g);

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	$LN158@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+112]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3035[ebp]
	movss	xmm0, DWORD PTR tv3035[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	sub	ecx, 1
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [edx+ecx+112]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4249[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3043[ebp]
	movss	xmm0, DWORD PTR tv4249[ebp]
	subss	xmm0, DWORD PTR tv3043[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+96]
	sub	eax, 1
	shl	eax, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+104]
	subss	xmm1, DWORD PTR [esi+eax+104]
	divss	xmm0, xmm1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	sub	ecx, 1
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [edx+ecx+124], xmm0
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+ecx+112]
	jbe	SHORT $LN157@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+100], 1
	jmp	SHORT $LN156@PS_LoadPar
$LN157@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+100], 0
$LN156@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+112]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	shl	ecx, 5
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+ecx+112]
$LN158@PS_LoadPar:

; 5388 :                 K_CALCRGB(ppn->color, ppn->colorStages, b);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	$LN155@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+116]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3081[ebp]
	movss	xmm0, DWORD PTR tv3081[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, 1
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [eax+edx+116]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4251[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3089[ebp]
	movss	xmm0, DWORD PTR tv4251[ebp]
	subss	xmm0, DWORD PTR tv3089[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	sub	ecx, 1
	shl	ecx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+104]
	subss	xmm1, DWORD PTR [esi+ecx+104]
	divss	xmm0, xmm1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, 1
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+128], xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+edx+116]
	jbe	SHORT $LN154@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+100], 1
	jmp	SHORT $LN153@PS_LoadPar
$LN154@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+100], 0
$LN153@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+116]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	shl	edx, 5
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+116]
$LN155@PS_LoadPar:

; 5389 : 
; 5390 : 
; 5391 :                 ppn->colorStages++;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	add	edx, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+96], edx

; 5392 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN162@PS_LoadPar:

; 5393 :             }
; 5394 : 
; 5395 :             On("3dlight")

	push	OFFSET ??_C@_07KOBECPDD@3dlight?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN152@PS_LoadPar

; 5396 :             {
; 5397 :                 ppn->EmitLight = true;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	al, BYTE PTR [edx+5548]
	or	al, 2
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+5548], al

; 5398 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN152@PS_LoadPar:

; 5399 :             }
; 5400 : 
; 5401 :             On("light")

	push	OFFSET ??_C@_05OEPGNJB@light?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN151@PS_LoadPar

; 5402 :             {
; 5403 :                 ppn->light[ppn->lightStages].K = 1.0f;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+436], xmm0

; 5404 :                 ppn->light[ppn->lightStages].value = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+ecx+432]

; 5405 :                 ppn->light[ppn->lightStages].time    = i;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [edx+ecx+428], xmm0

; 5406 :                 //if(ppn->light[ppn->lightStages].value>0.5) ppn->EmitLight=true;
; 5407 :                 K_CALC(ppn->light, ppn->lightStages);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+420], 0
	je	$LN150@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+432]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3151[ebp]
	movss	xmm0, DWORD PTR tv3151[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [eax+edx+432]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4253[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3159[ebp]
	movss	xmm0, DWORD PTR tv4253[ebp]
	subss	xmm0, DWORD PTR tv3159[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	sub	ecx, 1
	shl	ecx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+428]
	subss	xmm1, DWORD PTR [esi+ecx+428]
	divss	xmm0, xmm1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+436], xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+edx+432]
	jbe	SHORT $LN149@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+424], 1
	jmp	SHORT $LN148@PS_LoadPar
$LN149@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+424], 0
$LN148@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+432]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+432]
$LN150@PS_LoadPar:

; 5408 :                 ppn->lightStages++;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+420]
	add	edx, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+420], edx

; 5409 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN151@PS_LoadPar:

; 5410 :             }
; 5411 : 
; 5412 :             On("size")

	push	OFFSET ??_C@_04IAGNFIBA@size?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN147@PS_LoadPar

; 5413 :             {
; 5414 :                 ppn->size[ppn->sizeStages].value = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+600]

; 5415 :                 ppn->size[ppn->sizeStages].time  = i;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [ecx+eax+596], xmm0

; 5416 : 
; 5417 :                 // COBRA - RED - The 1st Stage can define also a Size random CX
; 5418 :                 if (!ppn->sizeStages) ppn->SizeRandom = TokenF(0) / ppn->size[ppn->sizeStages].value;

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+588], 0
	jne	SHORT $LN146@PS_LoadPar
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3209[ebp]
	movss	xmm0, DWORD PTR tv3209[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+588]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	divss	xmm0, DWORD PTR [edx+ecx+600]
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+584], xmm0
$LN146@PS_LoadPar:

; 5419 : 
; 5420 :                 // K for this stage defaults at 1
; 5421 :                 ppn->size[ppn->sizeStages].K = 1.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+588]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+edx+604], xmm0

; 5422 :                 // Update CXes
; 5423 :                 K_CALC(ppn->size, ppn->sizeStages);

	mov	ecx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [ecx+588], 0
	je	$LN145@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+600]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3227[ebp]
	movss	xmm0, DWORD PTR tv3227[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [ecx+eax+600]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4255[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3235[ebp]
	movss	xmm0, DWORD PTR tv4255[ebp]
	subss	xmm0, DWORD PTR tv3235[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+588]
	sub	edx, 1
	shl	edx, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [ecx+eax+596]
	subss	xmm1, DWORD PTR [esi+edx+596]
	divss	xmm0, xmm1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [ecx+eax+604], xmm0
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+eax+600]
	jbe	SHORT $LN144@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+592], 1
	jmp	SHORT $LN143@PS_LoadPar
$LN144@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+592], 0
$LN143@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+600]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+600]
$LN145@PS_LoadPar:

; 5424 :                 ppn->sizeStages++;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+588]
	add	eax, 1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+588], eax

; 5425 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN147@PS_LoadPar:

; 5426 :             }
; 5427 : 
; 5428 :             On("flags")

	push	OFFSET ??_C@_05GECEPKB@flags?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN142@PS_LoadPar

; 5429 :             {
; 5430 :                 ppn->flags = TokenFlags(0, PSF_CHARACTERS);

	push	OFFSET ??_C@_02MHMEOBLM@MG?$AA@
	push	0
	call	?TokenFlags@@YAHHPAD@Z			; TokenFlags
	add	esp, 8
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+80], eax

; 5431 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN142@PS_LoadPar:

; 5432 :             }
; 5433 : 
; 5434 : 
; 5435 :             On("animate")

	push	OFFSET ??_C@_07NLKEJFGN@animate?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN141@PS_LoadPar

; 5436 :             {
; 5437 :                 ppn->Texture = NULL; // Disables Texture

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+5508], 0

; 5438 :                 char FileName[PARTICLE_NAMES_LEN];
; 5439 :                 strncpy(FileName, TokenStr(""), PS_NAMESIZE); // Sequence Name

	push	64					; 00000040H
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _FileName$55[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5440 : 
; 5441 :                 if (i > 1)i = 1; // Limit Check

	movss	xmm0, DWORD PTR _i$50[ebp]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN140@PS_LoadPar
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _i$50[ebp], xmm0
$LN140@PS_LoadPar:

; 5442 : 
; 5443 :                 ppn->Animation[(int)i] = GetAnimationNode(FileName); // Assign it

	lea	edx, DWORD PTR _FileName$55[ebp]
	push	edx
	call	?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ; DrawableParticleSys::GetAnimationNode
	add	esp, 4
	cvttss2si ecx, DWORD PTR _i$50[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+ecx*4+5528], eax

; 5444 :                 ppn->drawType = PSDT_POLY;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+92], 1

; 5445 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN141@PS_LoadPar:

; 5446 :             }
; 5447 : 
; 5448 : 
; 5449 :             On("texture")

	push	OFFSET ??_C@_07JDHEGGGP@texture?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN139@PS_LoadPar

; 5450 :             {
; 5451 :                 strncpy(ppn->texFilename, arg, PS_NAMESIZE);

	push	64					; 00000040H
	mov	edx, DWORD PTR _arg$14[ebp]
	push	edx
	mov	eax, DWORD PTR _ppn$[ebp]
	add	eax, 5444				; 00001544H
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5452 :                 // ok, check for a group with such a name
; 5453 :                 ParticleGroupNode *gpn = FindGroupNode(ppn->texFilename);

	mov	ecx, DWORD PTR _ppn$[ebp]
	add	ecx, 5444				; 00001544H
	push	ecx
	call	?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z ; DrawableParticleSys::FindGroupNode
	add	esp, 4
	mov	DWORD PTR _gpn$22[ebp], eax

; 5454 : 
; 5455 :                 // if found
; 5456 :                 if (gpn)

	cmp	DWORD PTR _gpn$22[ebp], 0
	je	SHORT $LN138@PS_LoadPar

; 5457 :                 {
; 5458 :                     // assing a link as texture
; 5459 :                     ppn->Texture = (ParticleTextureNode*)gpn;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR _gpn$22[ebp]
	mov	DWORD PTR [edx+5508], eax

; 5460 :                     // and signal the texture depends on a group
; 5461 :                     ppn->GroupFlags |= GRP_TEXTURE;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	or	edx, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+88], edx

; 5462 :                     ppn->drawType = PSDT_POLY;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+92], 1

; 5463 :                     // end here
; 5464 :                     continue;

	jmp	$LN303@PS_LoadPar
$LN138@PS_LoadPar:

; 5465 :                 }
; 5466 : 
; 5467 :                 ParticleTextureNode *ptn;
; 5468 :                 ptn = GetTextureNode(ppn->texFilename);

	mov	edx, DWORD PTR _ppn$[ebp]
	add	edx, 5444				; 00001544H
	push	edx
	call	?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::GetTextureNode
	add	esp, 4
	mov	DWORD PTR _ptn$9[ebp], eax

; 5469 :                 ppn->Texture = ptn;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR _ptn$9[ebp]
	mov	DWORD PTR [eax+5508], ecx

; 5470 :                 ppn->drawType = PSDT_POLY;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+92], 1

; 5471 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN139@PS_LoadPar:

; 5472 :             }
; 5473 : 
; 5474 :             On("gravity")

	push	OFFSET ??_C@_07GFBFDLBM@gravity?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN137@PS_LoadPar

; 5475 :             {
; 5476 :                 ppn->gravity[ppn->gravityStages].value = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+916]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+928]

; 5477 :                 ppn->gravity[ppn->gravityStages].time  = i;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+916]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [eax+edx+924], xmm0

; 5478 :                 // K for this stage defaults at 1
; 5479 :                 ppn->gravity[ppn->gravityStages].K = 1.0f;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+916]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+edx+932], xmm0

; 5480 :                 // Update CXes
; 5481 :                 K_CALC(ppn->gravity, ppn->gravityStages);

	mov	ecx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [ecx+916], 0
	je	$LN136@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+928]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3324[ebp]
	movss	xmm0, DWORD PTR tv3324[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [ecx+eax+928]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4289[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3332[ebp]
	movss	xmm0, DWORD PTR tv4289[ebp]
	subss	xmm0, DWORD PTR tv3332[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+916]
	sub	edx, 1
	shl	edx, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [ecx+eax+924]
	subss	xmm1, DWORD PTR [esi+edx+924]
	divss	xmm0, xmm1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [ecx+eax+932], xmm0
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [ecx+eax+928]
	jbe	SHORT $LN135@PS_LoadPar
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+920], 1
	jmp	SHORT $LN134@PS_LoadPar
$LN135@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [ecx+eax+920], 0
$LN134@PS_LoadPar:
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+eax+928]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+928]
$LN136@PS_LoadPar:

; 5482 :                 ppn->gravityStages++;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+916]
	add	eax, 1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+916], eax

; 5483 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN137@PS_LoadPar:

; 5484 :             }
; 5485 : 
; 5486 :             On("alpha")

	push	OFFSET ??_C@_05IAEKHIAN@alpha?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN133@PS_LoadPar

; 5487 :             {
; 5488 :                 ppn->alpha[ppn->alphaStages].value = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3370[ebp]
	movss	xmm0, DWORD PTR tv3370[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+752]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [edx+ecx+764], xmm0

; 5489 :                 ppn->alpha[ppn->alphaStages].time  = i;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+752]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [edx+ecx+760], xmm0

; 5490 :                 // K for this stage defaults at 1
; 5491 :                 ppn->alpha[ppn->alphaStages].K = 1.0f;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+752]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+768], xmm0

; 5492 :                 // Update CXes
; 5493 :                 K_CALC(ppn->alpha, ppn->alphaStages);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+752], 0
	je	$LN132@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+764]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3391[ebp]
	movss	xmm0, DWORD PTR tv3391[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [eax+edx+764]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4291[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3399[ebp]
	movss	xmm0, DWORD PTR tv4291[ebp]
	subss	xmm0, DWORD PTR tv3399[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+752]
	sub	ecx, 1
	shl	ecx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+760]
	subss	xmm1, DWORD PTR [esi+ecx+760]
	divss	xmm0, xmm1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+768], xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+edx+764]
	jbe	SHORT $LN131@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+756], 1
	jmp	SHORT $LN130@PS_LoadPar
$LN131@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+756], 0
$LN130@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+764]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+764]
$LN132@PS_LoadPar:

; 5494 :                 ppn->alphaStages++;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+752]
	add	edx, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+752], edx

; 5495 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN133@PS_LoadPar:

; 5496 :             }
; 5497 : 
; 5498 :             On("drag")

	push	OFFSET ??_C@_04PHPAONAP@drag?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN129@PS_LoadPar

; 5499 :             {
; 5500 :                 ppn->simpleDrag = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+1668]

; 5501 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN129@PS_LoadPar:

; 5502 :             }
; 5503 : 
; 5504 :             On("bounce")

	push	OFFSET ??_C@_06DPMIMFNG@bounce?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN128@PS_LoadPar

; 5505 :             {
; 5506 :                 ppn->bounce = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+5436]

; 5507 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN128@PS_LoadPar:

; 5508 :             }
; 5509 : 
; 5510 :             if (currentemitter < 10)

	cmp	DWORD PTR _currentemitter$[ebp], 10	; 0000000aH
	jge	$LN116@PS_LoadPar

; 5511 :             {
; 5512 :                 On("addemitter")

	push	OFFSET ??_C@_0L@DKCKMNFK@addemitter?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN126@PS_LoadPar

; 5513 :                 {
; 5514 :                     currentemitter++;

	mov	eax, DWORD PTR _currentemitter$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentemitter$[ebp], eax

; 5515 :                     //Get run minimum Threshold
; 5516 :                     ppn->ParticleEmitterMin[currentemitter] = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+ecx*4+5356]

; 5517 :                     //Get run max Threshold
; 5518 :                     ppn->ParticleEmitterMax[currentemitter] = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _currentemitter$[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax*4+5396]

; 5519 :                     // setup zero time variation
; 5520 :                     ppn->emitter[currentemitter].TimeVariation  = 0.0f;

	mov	edx, DWORD PTR _currentemitter$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+edx+2036], xmm0

; 5521 :                     ppn->emitter[currentemitter].Light = false;

	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+2040], 0

; 5522 :                     continue;

	jmp	$LN303@PS_LoadPar
$LN126@PS_LoadPar:

; 5523 :                 }
; 5524 : 
; 5525 :                 if (currentemitter >= 0)

	cmp	DWORD PTR _currentemitter$[ebp], 0
	jl	$LN116@PS_LoadPar

; 5526 :                 {
; 5527 :                     On("emissionid")

	push	OFFSET ??_C@_0L@DHIKPAKB@emissionid?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN124@PS_LoadPar

; 5528 :                     {
; 5529 :                         char *n;
; 5530 :                         n = TokenStr("none");

	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$16[ebp], eax

; 5531 :                         ppn->emitter[currentemitter].id   = -1;

	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+ecx+1796], -1

; 5532 : 
; 5533 :                         if (n)

	cmp	DWORD PTR _n$16[ebp], 0
	je	SHORT $LN123@PS_LoadPar

; 5534 :                             strncpy(ppn->emitter[currentemitter].name, n, PS_NAMESIZE);

	push	64					; 00000040H
	mov	eax, DWORD PTR _n$16[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1800]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH
$LN123@PS_LoadPar:

; 5535 : 
; 5536 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN124@PS_LoadPar:

; 5537 :                     }
; 5538 : 
; 5539 :                     On("emissionmode")

	push	OFFSET ??_C@_0N@HPHEJFOB@emissionmode?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN122@PS_LoadPar

; 5540 :                     {
; 5541 :                         char *emitenums[] = {"EMITONCE", "EMITPERSEC", "EMITONIMPACT", "EMITONEARTHIMPACT", "EMITONWATERIMPACT", 0};

	mov	DWORD PTR _emitenums$4[ebp], OFFSET ??_C@_08CHFNGICB@EMITONCE?$AA@
	mov	DWORD PTR _emitenums$4[ebp+4], OFFSET ??_C@_0L@LBFACCKM@EMITPERSEC?$AA@
	mov	DWORD PTR _emitenums$4[ebp+8], OFFSET ??_C@_0N@LMGECMI@EMITONIMPACT?$AA@
	mov	DWORD PTR _emitenums$4[ebp+12], OFFSET ??_C@_0BC@CMAJKLGA@EMITONEARTHIMPACT?$AA@
	mov	DWORD PTR _emitenums$4[ebp+16], OFFSET ??_C@_0BC@JHPENDJF@EMITONWATERIMPACT?$AA@
	mov	DWORD PTR _emitenums$4[ebp+20], 0

; 5542 :                         ppn->emitter[currentemitter].mode = (PSEmitterModeEnum)TokenEnum(emitenums, -1);

	push	-1
	lea	edx, DWORD PTR _emitenums$4[ebp]
	push	edx
	call	?TokenEnum@@YAHPAPADH@Z			; TokenEnum
	add	esp, 8
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+ecx+1676], eax

; 5543 : 
; 5544 :                         if (ppn->emitter[currentemitter].mode == -1)

	mov	eax, DWORD PTR _currentemitter$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [ecx+eax+1676], -1
	jne	SHORT $LN121@PS_LoadPar

; 5545 :                         {
; 5546 :                             char *emitenums[] = {"ONCE", "PERSEC", "IMPACT", "EARTHIMPACT", "WATERIMPACT", 0};

	mov	DWORD PTR _emitenums$3[ebp], OFFSET ??_C@_04GHGHGAKN@ONCE?$AA@
	mov	DWORD PTR _emitenums$3[ebp+4], OFFSET ??_C@_06CILNDNOD@PERSEC?$AA@
	mov	DWORD PTR _emitenums$3[ebp+8], OFFSET ??_C@_06LHHGFCMD@IMPACT?$AA@
	mov	DWORD PTR _emitenums$3[ebp+12], OFFSET ??_C@_0M@IGOONCEK@EARTHIMPACT?$AA@
	mov	DWORD PTR _emitenums$3[ebp+16], OFFSET ??_C@_0M@DNBDKKLP@WATERIMPACT?$AA@
	mov	DWORD PTR _emitenums$3[ebp+20], 0

; 5547 :                             ppn->emitter[currentemitter].mode = (PSEmitterModeEnum)TokenEnum(emitenums, 0);

	push	0
	lea	edx, DWORD PTR _emitenums$3[ebp]
	push	edx
	call	?TokenEnum@@YAHPAPADH@Z			; TokenEnum
	add	esp, 8
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+ecx+1676], eax
$LN121@PS_LoadPar:

; 5548 :                         }
; 5549 : 
; 5550 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN122@PS_LoadPar:

; 5551 :                     }
; 5552 :                     On("emissiondomain")

	push	OFFSET ??_C@_0P@GMJCNMGB@emissiondomain?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN120@PS_LoadPar

; 5553 :                     {
; 5554 :                         ppn->emitter[currentemitter].domain.Parse();

	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+1680]
	call	?Parse@ParticleDomain@@QAEXXZ		; ParticleDomain::Parse

; 5555 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN120@PS_LoadPar:

; 5556 :                     }
; 5557 : 
; 5558 :                     On("emissiontarget")

	push	OFFSET ??_C@_0P@EPKKHNOP@emissiontarget?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN119@PS_LoadPar

; 5559 :                     {
; 5560 :                         ppn->emitter[currentemitter].target.Parse();

	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+1720]
	call	?Parse@ParticleDomain@@QAEXXZ		; ParticleDomain::Parse

; 5561 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN119@PS_LoadPar:

; 5562 :                     }
; 5563 : 
; 5564 :                     On("emissionrate")

	push	OFFSET ??_C@_0N@GBDNEBPB@emissionrate?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN118@PS_LoadPar

; 5565 :                     {
; 5566 :                         ppn->emitter[currentemitter].rate[ppn->emitter[currentemitter].stages].value = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1676]
	mov	ecx, DWORD PTR _currentemitter$[ebp]
	imul	ecx, 368				; 00000170H
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [edx+ecx+1864]
	shl	ecx, 4
	fstp	DWORD PTR [eax+ecx+200]

; 5567 :                         ppn->emitter[currentemitter].rate[ppn->emitter[currentemitter].stages].time  = i;

	mov	edx, DWORD PTR _currentemitter$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _ppn$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1676]
	mov	edx, DWORD PTR _currentemitter$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [eax+edx+1864]
	shl	edx, 4
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [ecx+edx+196], xmm0

; 5568 :                         ppn->emitter[currentemitter].stages++;

	mov	eax, DWORD PTR _currentemitter$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+eax+1864]
	add	edx, 1
	mov	eax, DWORD PTR _currentemitter$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+eax+1864], edx

; 5569 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN118@PS_LoadPar:

; 5570 :                     }
; 5571 : 
; 5572 :                     On("emissionvelocity")

	push	OFFSET ??_C@_0BB@GGKJGFL@emissionvelocity?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN117@PS_LoadPar

; 5573 :                     {
; 5574 :                         ppn->emitter[currentemitter].velocity = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _currentemitter$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+2028]

; 5575 :                         ppn->emitter[currentemitter].velVariation = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _currentemitter$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+2032]

; 5576 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN117@PS_LoadPar:

; 5577 :                     }
; 5578 : 
; 5579 :                     On("emissionrnd")

	push	OFFSET ??_C@_0M@CKPIOCGF@emissionrnd?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN116@PS_LoadPar

; 5580 :                     {
; 5581 :                         ppn->emitter[currentemitter].TimeVariation = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _currentemitter$[ebp]
	imul	edx, 368				; 00000170H
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+2036]

; 5582 :                         continue;

	jmp	$LN303@PS_LoadPar
$LN116@PS_LoadPar:

; 5583 :                     }
; 5584 : 
; 5585 :                 }
; 5586 :             }
; 5587 : 
; 5588 :             On("acceleration")

	push	OFFSET ??_C@_0N@OKFAMOHD@acceleration?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN115@PS_LoadPar

; 5589 :             {
; 5590 :                 ppn->accel[ppn->accelStages].value = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1080]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+1092]

; 5591 :                 ppn->accel[ppn->accelStages].time  = i;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1080]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [ecx+eax+1088], xmm0

; 5592 :                 // K for this stage defaults at 1
; 5593 :                 ppn->accel[ppn->accelStages].K = 1.0f;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1080]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+1096], xmm0

; 5594 :                 // Update CXes
; 5595 :                 K_CALC(ppn->accel, ppn->accelStages);

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+1080], 0
	je	$LN114@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+1092]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3561[ebp]
	movss	xmm0, DWORD PTR tv3561[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [edx+ecx+1092]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4293[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3569[ebp]
	movss	xmm0, DWORD PTR tv4293[ebp]
	subss	xmm0, DWORD PTR tv3569[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1080]
	sub	eax, 1
	shl	eax, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+1088]
	subss	xmm1, DWORD PTR [esi+eax+1088]
	divss	xmm0, xmm1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [edx+ecx+1096], xmm0
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+ecx+1092]
	jbe	SHORT $LN113@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+1084], 1
	jmp	SHORT $LN112@PS_LoadPar
$LN113@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+1084], 0
$LN112@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+1092]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+ecx+1092]
$LN114@PS_LoadPar:

; 5596 :                 ppn->accelStages++;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1080]
	add	ecx, 1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+1080], ecx

; 5597 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN115@PS_LoadPar:

; 5598 :             }
; 5599 : 
; 5600 :             On("inheritvelocity")

	push	OFFSET ??_C@_0BA@HDJODILK@inheritvelocity?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN111@PS_LoadPar

; 5601 :             {
; 5602 :                 ppn->velInherit = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+1656]

; 5603 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN111@PS_LoadPar:

; 5604 :             }
; 5605 : 
; 5606 :             On("initialVelocity")

	push	OFFSET ??_C@_0BA@PGMBENJL@initialVelocity?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN110@PS_LoadPar

; 5607 :             {
; 5608 :                 ppn->velInitial = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+1648]

; 5609 :                 ppn->velVariation = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+1652]

; 5610 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN110@PS_LoadPar:

; 5611 :             }
; 5612 : 
; 5613 :             On("RotationRate")

	push	OFFSET ??_C@_0N@BEJFKOMN@RotationRate?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN109@PS_LoadPar

; 5614 :             {
; 5615 :                 ppn->RotationRateMax = TokenF(1) * PI / 180.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3626[ebp]
	movss	xmm0, DWORD PTR tv3626[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+5540], xmm0

; 5616 :                 ppn->RotationRateMin = TokenF(0) * PI / 180.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3633[ebp]
	movss	xmm0, DWORD PTR tv3633[ebp]
	mulss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@43340000
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [ecx+5536], xmm0

; 5617 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN109@PS_LoadPar:

; 5618 :             }
; 5619 : 
; 5620 : 
; 5621 :             On("drawtype")

	push	OFFSET ??_C@_08JLPEIJJH@drawtype?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN108@PS_LoadPar

; 5622 :             {
; 5623 :                 char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$20[ebp], eax

; 5624 : 
; 5625 :                 if (!strcmp(n, "poly"))

	push	OFFSET ??_C@_04BMHKPPID@poly?$AA@
	mov	eax, DWORD PTR _n$20[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN107@PS_LoadPar

; 5626 :                 {
; 5627 :                     ppn->drawType = PSDT_POLY;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+92], 1
$LN107@PS_LoadPar:

; 5628 :                 }
; 5629 : 
; 5630 :                 if (!strcmp(n, "zplane"))

	push	OFFSET ??_C@_06KEDCNBMH@zplane?$AA@
	mov	edx, DWORD PTR _n$20[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN106@PS_LoadPar

; 5631 :                 {
; 5632 :                     ppn->drawType = PSDT_POLY, ppn->ZPoly = true;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+92], 1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	dl, BYTE PTR [ecx+5548]
	or	dl, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+5548], dl
$LN106@PS_LoadPar:

; 5633 :                 }
; 5634 : 
; 5635 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN108@PS_LoadPar:

; 5636 :             }
; 5637 : 
; 5638 :             On("soundid")

	push	OFFSET ??_C@_07EKMCOBOP@soundid?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN105@PS_LoadPar

; 5639 :             {
; 5640 :                 ppn->sndId = TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+1244], eax

; 5641 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN105@PS_LoadPar:

; 5642 :             }
; 5643 : 
; 5644 :             On("soundlooped")

	push	OFFSET ??_C@_0M@EONGMOLH@soundlooped?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN104@PS_LoadPar

; 5645 :             {
; 5646 :                 ppn->sndLooped = TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+1248], eax

; 5647 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN104@PS_LoadPar:

; 5648 :             }
; 5649 : 
; 5650 :             On("soundVolume")

	push	OFFSET ??_C@_0M@CFLDNOLA@soundVolume?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN103@PS_LoadPar

; 5651 :             {
; 5652 :                 ppn->sndVol[ppn->sndVolStages].value = (TokenF(0) - 1) * -10000;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3662[ebp]
	movss	xmm0, DWORD PTR tv3662[ebp]
	subss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR __real@c61c4000
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1416]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [edx+ecx+1428], xmm0

; 5653 :                 ppn->sndVol[ppn->sndVolStages].time  = i;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1416]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [edx+ecx+1424], xmm0

; 5654 :                 // K for this stage defaults at 1
; 5655 :                 ppn->sndVol[ppn->sndVolStages].K = 1.0f;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1416]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+ecx+1432], xmm0

; 5656 :                 // Update CXes
; 5657 :                 K_CALC(ppn->sndVol, ppn->sndVolStages);

	mov	eax, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [eax+1416], 0
	je	$LN102@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+1428]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3683[ebp]
	movss	xmm0, DWORD PTR tv3683[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [eax+edx+1428]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4295[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3691[ebp]
	movss	xmm0, DWORD PTR tv4295[ebp]
	subss	xmm0, DWORD PTR tv3691[ebp]
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1416]
	sub	ecx, 1
	shl	ecx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [eax+edx+1424]
	subss	xmm1, DWORD PTR [esi+ecx+1424]
	divss	xmm0, xmm1
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [eax+edx+1432], xmm0
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [eax+edx+1428]
	jbe	SHORT $LN101@PS_LoadPar
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+1420], 1
	jmp	SHORT $LN100@PS_LoadPar
$LN101@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [eax+edx+1420], 0
$LN100@PS_LoadPar:
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+edx+1428]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	shl	edx, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+edx+1428]
$LN102@PS_LoadPar:

; 5658 :                 ppn->sndVolStages++;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	edx, DWORD PTR [ecx+1416]
	add	edx, 1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [eax+1416], edx

; 5659 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN103@PS_LoadPar:

; 5660 :             }
; 5661 : 
; 5662 :             On("soundPitch")

	push	OFFSET ??_C@_0L@EILMMHCP@soundPitch?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN99@PS_LoadPar

; 5663 :             {
; 5664 :                 ppn->sndPitch[ppn->sndPitchStages].value = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1252]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [ecx+eax+1264]

; 5665 :                 ppn->sndPitch[ppn->sndPitchStages].time  = i;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1252]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR _i$50[ebp]
	movss	DWORD PTR [ecx+eax+1260], xmm0

; 5666 :                 // K for this stage defaults at 1
; 5667 :                 ppn->sndPitch[ppn->sndPitchStages].K = 1.0f;

	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1252]
	shl	eax, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+eax+1268], xmm0

; 5668 :                 // Update CXes
; 5669 :                 K_CALC(ppn->sndPitch, ppn->sndPitchStages);

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+1252], 0
	je	$LN98@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+1264]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3748[ebp]
	movss	xmm0, DWORD PTR tv3748[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm1, DWORD PTR [edx+ecx+1264]
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv4297[ebp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv3756[ebp]
	movss	xmm0, DWORD PTR tv4297[ebp]
	subss	xmm0, DWORD PTR tv3756[ebp]
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	eax, DWORD PTR [edx+1252]
	sub	eax, 1
	shl	eax, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	esi, DWORD PTR _ppn$[ebp]
	movss	xmm1, DWORD PTR [edx+ecx+1260]
	subss	xmm1, DWORD PTR [esi+eax+1260]
	divss	xmm0, xmm1
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [edx+ecx+1268], xmm0
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+ecx+1264]
	jbe	SHORT $LN97@PS_LoadPar
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+1256], 1
	jmp	SHORT $LN96@PS_LoadPar
$LN97@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	BYTE PTR [edx+ecx+1256], 0
$LN96@PS_LoadPar:
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+ecx+1264]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	shl	ecx, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+ecx+1264]
$LN98@PS_LoadPar:

; 5670 :                 ppn->sndPitchStages++;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+1252]
	add	ecx, 1
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+1252], ecx

; 5671 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN99@PS_LoadPar:

; 5672 :             }
; 5673 : 
; 5674 :             On("trailid")

	push	OFFSET ??_C@_07KJNNKBIK@trailid?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN95@PS_LoadPar

; 5675 :             {
; 5676 :                 strncpy(ppn->TrailName, TokenStr(0), PS_NAMESIZE);

	push	64					; 00000040H
	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ppn$[ebp]
	add	ecx, 1580				; 0000062cH
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5677 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN95@PS_LoadPar:

; 5678 :             }
; 5679 : 
; 5680 :             On("groundfriction")

	push	OFFSET ??_C@_0P@BGBNAPAB@groundfriction?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN94@PS_LoadPar

; 5681 :             {
; 5682 :                 ppn->groundFriction = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [eax+1660]

; 5683 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN94@PS_LoadPar:

; 5684 :             }
; 5685 : 
; 5686 :             On("visibledistance")

	push	OFFSET ??_C@_0BA@LDFGJJKA@visibledistance?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN93@PS_LoadPar

; 5687 :             {
; 5688 :                 ppn->visibleDistance = TokenF(10000);

	push	ecx
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	fstp	DWORD PTR [edx+1664]

; 5689 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN93@PS_LoadPar:

; 5690 :             }
; 5691 : 
; 5692 :             On("dieonground")

	push	OFFSET ??_C@_0M@PJDCNDII@dieonground?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN92@PS_LoadPar

; 5693 :             {
; 5694 :                 ppn->dieOnGround = (float)TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	cvtsi2ss xmm0, eax
	mov	ecx, DWORD PTR _ppn$[ebp]
	movss	DWORD PTR [ecx+5440], xmm0

; 5695 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN92@PS_LoadPar:

; 5696 :             }
; 5697 : 
; 5698 :             On("modelct")

	push	OFFSET ??_C@_07BOEIJNLB@modelct?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN91@PS_LoadPar

; 5699 :             {
; 5700 :                 ppn->bspCTID    = TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+5512], eax

; 5701 :                 ppn->bspVisType = TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+5516], eax

; 5702 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN91@PS_LoadPar:

; 5703 :             }
; 5704 : 
; 5705 :             On("orientation")

	push	OFFSET ??_C@_0M@KPMDGEHG@orientation?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN90@PS_LoadPar

; 5706 :             {
; 5707 :                 char *enumstr[] = {"none", "movement", 0};

	mov	DWORD PTR _enumstr$5[ebp], OFFSET ??_C@_04CGFJFPFD@none?$AA@
	mov	DWORD PTR _enumstr$5[ebp+4], OFFSET ??_C@_08ONAKKFI@movement?$AA@
	mov	DWORD PTR _enumstr$5[ebp+8], 0

; 5708 :                 ppn->orientation = (PSOrientation)TokenEnum(enumstr, 0);

	push	0
	lea	ecx, DWORD PTR _enumstr$5[ebp]
	push	ecx
	call	?TokenEnum@@YAHPAPADH@Z			; TokenEnum
	add	esp, 8
	mov	edx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [edx+5524], eax

; 5709 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN90@PS_LoadPar:

; 5710 :             }
; 5711 : 
; 5712 :             On("emitonerandomly")

	push	OFFSET ??_C@_0BA@DOOGDKOH@emitonerandomly?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN89@PS_LoadPar

; 5713 :             {
; 5714 :                 ppn->emitOneRandomly = TokenI(0);

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR [ecx+1672], eax

; 5715 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN89@PS_LoadPar:

; 5716 :             }
; 5717 :         } // * END OF PARTICLE PARAMETER NODE *
; 5718 : 
; 5719 : 
; 5720 : 
; 5721 :         ////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5722 :         // COBRA - RED - This section is just evaluated if a PARTICLE ANIMATION NODE is active
; 5723 :         /////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5724 : 
; 5725 :         if (pan)  // * PARTICLE ANIMATION NODE *

	cmp	DWORD PTR _pan$[ebp], 0
	je	$LN85@PS_LoadPar

; 5726 :         {
; 5727 : 
; 5728 :             On("frames") // * FRAMES SEQUENCE DECLARATION *

	push	OFFSET ??_C@_06OLAPKHEJ@frames?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN87@PS_LoadPar

; 5729 :             {
; 5730 :                 // 'frames=n name'
; 5731 :                 pan->NFrames = TokenI(0); // n = Number of Frames

	push	0
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	ecx, DWORD PTR _pan$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 5732 :                 char FileName[PARTICLE_NAMES_LEN]; // name = BaseName of frames
; 5733 :                 strncpy(FileName, TokenStr(""), PARTICLE_NAMES_LEN);

	push	32					; 00000020H
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _FileName$54[ebp]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5734 :                 pan->Sequence = (void*)GetFramesList(FileName, pan->NFrames);

	mov	eax, DWORD PTR _pan$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	lea	edx, DWORD PTR _FileName$54[ebp]
	push	edx
	call	?GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z ; DrawableParticleSys::GetFramesList
	add	esp, 8
	mov	ecx, DWORD PTR _pan$[ebp]
	mov	DWORD PTR [ecx+52], eax

; 5735 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN87@PS_LoadPar:

; 5736 :             }
; 5737 : 
; 5738 :             On("framerate") // * FRAME RATE DEFINITION *

	push	OFFSET ??_C@_09PLDKGHKD@framerate?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN86@PS_LoadPar

; 5739 :             {
; 5740 :                 // 'framerate=fps'
; 5741 :                 pan->Fps = 1.0f / TokenF(0); // fps= Frames Per Second speed

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3842[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv3842[ebp]
	mov	eax, DWORD PTR _pan$[ebp]
	movss	DWORD PTR [eax+48], xmm0

; 5742 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN86@PS_LoadPar:

; 5743 :             }
; 5744 : 
; 5745 :             On("flags") // * FLAGS DECLARATION *

	push	OFFSET ??_C@_05GECEPKB@flags?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN85@PS_LoadPar

; 5746 :             {
; 5747 :                 // 'flags=F1|F2...'
; 5748 :                 pan->Flags = TokenFlags(0, ANIMATION_FLAGS);

	push	OFFSET ??_C@_03PBBLKBDM@LUD?$AA@
	push	0
	call	?TokenFlags@@YAHHPAD@Z			; TokenFlags
	add	esp, 8
	mov	edx, DWORD PTR _pan$[ebp]
	mov	DWORD PTR [edx+56], eax

; 5749 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN85@PS_LoadPar:

; 5750 :             }
; 5751 : 
; 5752 :         }
; 5753 : 
; 5754 :         ////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5755 :         // COBRA - RED - This section is just evaluated if a GROUP NODE is active
; 5756 :         /////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5757 : 
; 5758 :         if (GroupNode)

	cmp	DWORD PTR _GroupNode$[ebp], 0
	je	$LN83@PS_LoadPar

; 5759 :         {
; 5760 :             On("texture")

	push	OFFSET ??_C@_07JDHEGGGP@texture?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN83@PS_LoadPar

; 5761 :             {
; 5762 :                 // Check for texture
; 5763 :                 if (GroupNode->Type == GRP_NONE || GroupNode->Type == GRP_TEXTURE)

	mov	ecx, DWORD PTR _GroupNode$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN81@PS_LoadPar
	mov	edx, DWORD PTR _GroupNode$[ebp]
	cmp	DWORD PTR [edx+4], 1
	jne	SHORT $LN80@PS_LoadPar
$LN81@PS_LoadPar:

; 5764 :                 {
; 5765 :                     char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$10[ebp], eax

; 5766 : 
; 5767 :                     // if found and added
; 5768 :                     if (GroupNode->ptr[GroupNode->Items] = GetTextureNode(n))

	mov	eax, DWORD PTR _n$10[ebp]
	push	eax
	call	?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::GetTextureNode
	add	esp, 4
	mov	DWORD PTR tv1972[ebp], eax
	mov	ecx, DWORD PTR _GroupNode$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	eax, DWORD PTR _GroupNode$[ebp]
	mov	ecx, DWORD PTR tv1972[ebp]
	mov	DWORD PTR [eax+edx*4+76], ecx
	cmp	DWORD PTR tv1972[ebp], 0
	je	SHORT $LN80@PS_LoadPar

; 5769 :                     {
; 5770 :                         GroupNode->Type = GRP_TEXTURE;

	mov	edx, DWORD PTR _GroupNode$[ebp]
	mov	DWORD PTR [edx+4], 1

; 5771 :                         GroupNode->Items++;

	mov	eax, DWORD PTR _GroupNode$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, 1
	mov	edx, DWORD PTR _GroupNode$[ebp]
	mov	DWORD PTR [edx+72], ecx
$LN80@PS_LoadPar:

; 5772 :                     }
; 5773 :                 }
; 5774 : 
; 5775 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN83@PS_LoadPar:

; 5776 :             }
; 5777 :         }
; 5778 : 
; 5779 : 
; 5780 : 
; 5781 :         ////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5782 :         // COBRA - RED - This section is just evaluated if a TRAIL PARAMETER NODE is active
; 5783 :         /////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5784 : 
; 5785 : 
; 5786 :         if (tpn)  // * TRAIL PARAMETER NODE *

	cmp	DWORD PTR _tpn$[ebp], 0
	je	$LN65@PS_LoadPar

; 5787 :         {
; 5788 : 
; 5789 :             On("lifespan")

	push	OFFSET ??_C@_08LLHMBIPK@lifespan?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN78@PS_LoadPar

; 5790 :             {
; 5791 :                 tpn->LifeSpan = TokenF(1);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [ecx+68]

; 5792 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN78@PS_LoadPar:

; 5793 :             }
; 5794 : 
; 5795 :             On("emittime")

	push	OFFSET ??_C@_08NIIIOFCG@emittime?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN77@PS_LoadPar

; 5796 :             {
; 5797 :                 tpn->LifeCx = 1.0f / TokenF(1) ;

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3877[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR tv3877[ebp]
	mov	eax, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [eax+76], xmm0

; 5798 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN77@PS_LoadPar:

; 5799 :             }
; 5800 : 
; 5801 :             On("weight")

	push	OFFSET ??_C@_06CMCBKMCB@weight?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN76@PS_LoadPar

; 5802 :             {
; 5803 :                 tpn->Weight = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [edx+152]

; 5804 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN76@PS_LoadPar:

; 5805 :             }
; 5806 : 
; 5807 : 
; 5808 :             On("color")

	push	OFFSET ??_C@_05PEENBMOG@color?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN75@PS_LoadPar

; 5809 :             {
; 5810 :                 tpn->Color[0].r = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3894[ebp]
	movss	xmm0, DWORD PTR tv3894[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [edx+ecx+100], xmm0

; 5811 :                 tpn->Color[0].g = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3902[ebp]
	movss	xmm0, DWORD PTR tv3902[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [ecx+eax+104], xmm0

; 5812 :                 tpn->Color[0].b = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3910[ebp]
	movss	xmm0, DWORD PTR tv3910[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [eax+edx+108], xmm0

; 5813 :                 tpn->Color[1].r = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3918[ebp]
	movss	xmm0, DWORD PTR tv3918[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [edx+ecx+100], xmm0

; 5814 :                 tpn->Color[1].g = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3926[ebp]
	movss	xmm0, DWORD PTR tv3926[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [ecx+eax+104], xmm0

; 5815 :                 tpn->Color[1].b = TokenF(0) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3934[ebp]
	movss	xmm0, DWORD PTR tv3934[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [eax+edx+108], xmm0

; 5816 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN75@PS_LoadPar:

; 5817 :             }
; 5818 : 
; 5819 : 
; 5820 :             On("size")

	push	OFFSET ??_C@_04IAGNFIBA@size?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN74@PS_LoadPar

; 5821 :             {
; 5822 :                 tpn->Size[0] = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [eax+edx+80]

; 5823 :                 tpn->Size[1] = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [edx+ecx+80]

; 5824 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN74@PS_LoadPar:

; 5825 :             }
; 5826 : 
; 5827 : 
; 5828 :             On("texture")

	push	OFFSET ??_C@_07JDHEGGGP@texture?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	$LN73@PS_LoadPar

; 5829 :             {
; 5830 :                 // * SQUARE BILLBOARDED TEXTURE NAME *
; 5831 :                 char *n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$27[ebp], eax

; 5832 :                 strncpy(tpn->TexFilename, n, PS_NAMESIZE);

	push	64					; 00000040H
	mov	ecx, DWORD PTR _n$27[ebp]
	push	ecx
	mov	edx, DWORD PTR _tpn$[ebp]
	add	edx, 160				; 000000a0H
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5833 :                 // ok, check for a group with such a name
; 5834 :                 ParticleGroupNode *gpn = FindGroupNode(tpn->TexFilename);

	mov	eax, DWORD PTR _tpn$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	call	?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z ; DrawableParticleSys::FindGroupNode
	add	esp, 4
	mov	DWORD PTR _gpn$29[ebp], eax

; 5835 : 
; 5836 :                 // if found
; 5837 :                 if (gpn)

	cmp	DWORD PTR _gpn$29[ebp], 0
	je	SHORT $LN72@PS_LoadPar

; 5838 :                 {
; 5839 :                     // assing a link as texture
; 5840 :                     tpn->Texture = (ParticleTextureNode*)gpn;

	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	edx, DWORD PTR _gpn$29[ebp]
	mov	DWORD PTR [ecx+312], edx

; 5841 :                     // and signal the texture depends on a group
; 5842 :                     tpn->GroupFlags |= GRP_TEXTURE;

	mov	eax, DWORD PTR _tpn$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	or	ecx, 1
	mov	edx, DWORD PTR _tpn$[ebp]
	mov	DWORD PTR [edx+156], ecx

; 5843 :                     continue;

	jmp	$LN303@PS_LoadPar
$LN72@PS_LoadPar:

; 5844 :                 }
; 5845 : 
; 5846 :                 ParticleTextureNode *ptn;
; 5847 :                 ptn = GetTextureNode(tpn->TexFilename);

	mov	eax, DWORD PTR _tpn$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	call	?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::GetTextureNode
	add	esp, 4
	mov	DWORD PTR _ptn$28[ebp], eax

; 5848 :                 tpn->Texture = ptn;

	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	edx, DWORD PTR _ptn$28[ebp]
	mov	DWORD PTR [ecx+312], edx

; 5849 : 
; 5850 :                 // * SEGMENT TEXTURE NAME *
; 5851 :                 n = TokenStr(0);

	push	0
	call	?TokenStr@@YAPADPAD@Z			; TokenStr
	add	esp, 4
	mov	DWORD PTR _n$27[ebp], eax

; 5852 :                 strncpy(tpn->SideTexFilename, n, PS_NAMESIZE);

	push	64					; 00000040H
	mov	eax, DWORD PTR _n$27[ebp]
	push	eax
	mov	ecx, DWORD PTR _tpn$[ebp]
	add	ecx, 224				; 000000e0H
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 5853 :                 // ok, check for a group with such a name
; 5854 :                 gpn = FindGroupNode(tpn->SideTexFilename);

	mov	edx, DWORD PTR _tpn$[ebp]
	add	edx, 224				; 000000e0H
	push	edx
	call	?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z ; DrawableParticleSys::FindGroupNode
	add	esp, 4
	mov	DWORD PTR _gpn$29[ebp], eax

; 5855 : 
; 5856 :                 // if found
; 5857 :                 if (gpn)

	cmp	DWORD PTR _gpn$29[ebp], 0
	je	SHORT $LN71@PS_LoadPar

; 5858 :                 {
; 5859 :                     // assing a link as texture
; 5860 :                     tpn->SideTexture = (ParticleTextureNode*)gpn;

	mov	eax, DWORD PTR _tpn$[ebp]
	mov	ecx, DWORD PTR _gpn$29[ebp]
	mov	DWORD PTR [eax+316], ecx

; 5861 :                     // and signal the texture depends on a group
; 5862 :                     tpn->GroupFlags |= GRP_TEXTURE2;

	mov	edx, DWORD PTR _tpn$[ebp]
	mov	eax, DWORD PTR [edx+156]
	or	eax, 2
	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	DWORD PTR [ecx+156], eax

; 5863 :                     continue;

	jmp	$LN303@PS_LoadPar
$LN71@PS_LoadPar:

; 5864 :                 }
; 5865 : 
; 5866 :                 ptn;
; 5867 :                 ptn = GetTextureNode(tpn->SideTexFilename);

	mov	edx, DWORD PTR _tpn$[ebp]
	add	edx, 224				; 000000e0H
	push	edx
	call	?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::GetTextureNode
	add	esp, 4
	mov	DWORD PTR _ptn$28[ebp], eax

; 5868 :                 tpn->SideTexture = ptn;

	mov	eax, DWORD PTR _tpn$[ebp]
	mov	ecx, DWORD PTR _ptn$28[ebp]
	mov	DWORD PTR [eax+316], ecx

; 5869 : 
; 5870 :                 // The segment Texture Rate
; 5871 :                 tpn->TexRate = TokenF(1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [edx+288]

; 5872 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN73@PS_LoadPar:

; 5873 :             }
; 5874 : 
; 5875 : 
; 5876 :             On("alpha")

	push	OFFSET ??_C@_05IAEKHIAN@alpha?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN70@PS_LoadPar

; 5877 :             {
; 5878 :                 tpn->Alpha = TokenF(1.0f) * 255.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv3993[ebp]
	movss	xmm0, DWORD PTR tv3993[ebp]
	mulss	xmm0, DWORD PTR __real@437f0000
	mov	ecx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [ecx+148], xmm0

; 5879 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN70@PS_LoadPar:

; 5880 :             }
; 5881 : 
; 5882 :             On("trailnr")

	push	OFFSET ??_C@_07LAAKACNI@trailnr?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN69@PS_LoadPar

; 5883 :             {
; 5884 :                 tpn->Id = TokenI(-1);

	push	-1
	call	?TokenI@@YAHH@Z				; TokenI
	add	esp, 4
	mov	ecx, DWORD PTR _tpn$[ebp]
	mov	DWORD PTR [ecx], eax

; 5885 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN69@PS_LoadPar:

; 5886 :             }
; 5887 : 
; 5888 :             On("visibledistance")

	push	OFFSET ??_C@_0BA@LDFGJJKA@visibledistance?$AA@
	mov	edx, DWORD PTR _com$52[ebp]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN68@PS_LoadPar

; 5889 :             {
; 5890 :                 tpn->VisibleDistance = TokenF(0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [eax+92]

; 5891 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN68@PS_LoadPar:

; 5892 :             }
; 5893 : 
; 5894 :             On("rate")

	push	OFFSET ??_C@_04HCCHHEEF@rate?$AA@
	mov	ecx, DWORD PTR _com$52[ebp]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN67@PS_LoadPar

; 5895 :             {
; 5896 :                 tpn->Interval = TokenF(1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [edx+72]

; 5897 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN67@PS_LoadPar:

; 5898 :             }
; 5899 : 
; 5900 : 
; 5901 :             On("fragradius")

	push	OFFSET ??_C@_0L@ILHIIPPP@fragradius?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN66@PS_LoadPar

; 5902 :             {
; 5903 :                 tpn->FragRadius = TokenF(0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [ecx+296]

; 5904 :                 // The integration distance has to be halved
; 5905 :                 tpn->IntegrateDistance = TokenF(0.0f) / 2.0f;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	fstp	DWORD PTR tv4025[ebp]
	movss	xmm0, DWORD PTR tv4025[ebp]
	divss	xmm0, DWORD PTR __real@40000000
	mov	edx, DWORD PTR _tpn$[ebp]
	movss	DWORD PTR [edx+96], xmm0

; 5906 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN66@PS_LoadPar:

; 5907 :             }
; 5908 : 
; 5909 :             On("random")

	push	OFFSET ??_C@_06NLFCANPD@random?$AA@
	mov	eax, DWORD PTR _com$52[ebp]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN65@PS_LoadPar

; 5910 :             {
; 5911 :                 tpn->RndStep = TokenF(0.0f), tpn->RndLimit = TokenF(0.0f), tpn->RndTime = TokenF(0.0f) ;

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	ecx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [ecx+304]
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	edx, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [edx+300]
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _tpn$[ebp]
	fstp	DWORD PTR [eax+308]

; 5912 :                 continue;

	jmp	$LN303@PS_LoadPar
$LN65@PS_LoadPar:

; 5913 :             }
; 5914 : 
; 5915 :         }
; 5916 :     }

	jmp	$LN303@PS_LoadPar
$LN208@PS_LoadPar:

; 5917 : 
; 5918 :     /////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5919 :     // END OF NODES EVALUATIONS
; 5920 :     /////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 5921 : 
; 5922 :     /* id */
; 5923 :     int l, extra = 0;

	mov	DWORD PTR _extra$[ebp], 0

; 5924 : 
; 5925 :     for (l = 0; l < nameListCount; l++)

	mov	DWORD PTR _l$[ebp], 0
	jmp	SHORT $LN64@PS_LoadPar
$LN63@PS_LoadPar:
	mov	ecx, DWORD PTR _l$[ebp]
	add	ecx, 1
	mov	DWORD PTR _l$[ebp], ecx
$LN64@PS_LoadPar:
	mov	edx, DWORD PTR _l$[ebp]
	cmp	edx, DWORD PTR ?nameListCount@DrawableParticleSys@@0HA ; DrawableParticleSys::nameListCount
	jge	$LN62@PS_LoadPar

; 5926 :     {
; 5927 :         // Assign IDs to Names for each possible PPN
; 5928 :         for (DWORD c = 0; c < MAX_PARTICLE_PARAMETERS; c++)

	mov	DWORD PTR _c$48[ebp], 0
	jmp	SHORT $LN61@PS_LoadPar
$LN60@PS_LoadPar:
	mov	eax, DWORD PTR _c$48[ebp]
	add	eax, 1
	mov	DWORD PTR _c$48[ebp], eax
$LN61@PS_LoadPar:
	cmp	DWORD PTR _c$48[ebp], 1024		; 00000400H
	jae	$LN59@PS_LoadPar

; 5929 :         {
; 5930 :             // if a name found
; 5931 :             if (!stricmp(PS_PPN[c].name, nameList[l]))

	mov	ecx, DWORD PTR _l$[ebp]
	mov	edx, DWORD PTR ?nameList@DrawableParticleSys@@0PAPADA[ecx*4]
	push	edx
	mov	eax, DWORD PTR _c$48[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN58@PS_LoadPar

; 5932 :             {
; 5933 :                 PS_PPN[c].id = l;

	mov	eax, DWORD PTR _c$48[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	edx, DWORD PTR _l$[ebp]
	mov	DWORD PTR [ecx+eax], edx

; 5934 :                 extra++;

	mov	eax, DWORD PTR _extra$[ebp]
	add	eax, 1
	mov	DWORD PTR _extra$[ebp], eax

; 5935 :                 break;

	jmp	SHORT $LN59@PS_LoadPar

; 5936 :             }
; 5937 :             else

	jmp	SHORT $LN54@PS_LoadPar
$LN58@PS_LoadPar:

; 5938 :             {
; 5939 :                 if (PS_PPN[c].id != -1)

	mov	ecx, DWORD PTR _c$48[ebp]
	imul	ecx, 5560				; 000015b8H
	mov	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	cmp	DWORD PTR [edx+ecx], -1
	je	SHORT $LN56@PS_LoadPar

; 5940 :                 {
; 5941 :                     continue;

	jmp	$LN60@PS_LoadPar

; 5942 :                 }
; 5943 :                 else

	jmp	SHORT $LN55@PS_LoadPar
$LN56@PS_LoadPar:

; 5944 :                     PS_PPN[c].id = -1;

	mov	eax, DWORD PTR _c$48[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	DWORD PTR [ecx+eax], -1
$LN55@PS_LoadPar:

; 5945 : 
; 5946 :                 if (c == MAX_PARTICLE_PARAMETERS - 1)

	cmp	DWORD PTR _c$48[ebp], 1023		; 000003ffH
	jne	SHORT $LN54@PS_LoadPar

; 5947 :                 {
; 5948 :                     break;

	jmp	SHORT $LN59@PS_LoadPar
$LN54@PS_LoadPar:

; 5949 :                 }
; 5950 :             }
; 5951 :         }

	jmp	$LN60@PS_LoadPar
$LN59@PS_LoadPar:

; 5952 :     }

	jmp	$LN63@PS_LoadPar
$LN62@PS_LoadPar:

; 5953 : 
; 5954 :     l = extra;

	mov	edx, DWORD PTR _extra$[ebp]
	mov	DWORD PTR _l$[ebp], edx

; 5955 : 
; 5956 :     // number all the nodes that don't match above;
; 5957 :     for (DWORD c = 0; c < MAX_PARTICLE_PARAMETERS; c++)

	mov	DWORD PTR _c$35[ebp], 0
	jmp	SHORT $LN53@PS_LoadPar
$LN52@PS_LoadPar:
	mov	eax, DWORD PTR _c$35[ebp]
	add	eax, 1
	mov	DWORD PTR _c$35[ebp], eax
$LN53@PS_LoadPar:
	cmp	DWORD PTR _c$35[ebp], 1024		; 00000400H
	jae	SHORT $LN51@PS_LoadPar

; 5958 :     {
; 5959 :         if (PS_PPN[c].id == -1)

	mov	ecx, DWORD PTR _c$35[ebp]
	imul	ecx, 5560				; 000015b8H
	mov	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	cmp	DWORD PTR [edx+ecx], -1
	jne	SHORT $LN50@PS_LoadPar

; 5960 :         {
; 5961 :             PS_PPN[c].id = l++;

	mov	eax, DWORD PTR _c$35[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	edx, DWORD PTR _l$[ebp]
	mov	DWORD PTR [ecx+eax], edx
	mov	eax, DWORD PTR _l$[ebp]
	add	eax, 1
	mov	DWORD PTR _l$[ebp], eax
$LN50@PS_LoadPar:

; 5962 :         }
; 5963 :     }

	jmp	SHORT $LN52@PS_LoadPar
$LN51@PS_LoadPar:

; 5964 : 
; 5965 : 
; 5966 : 
; 5967 :     // COBRA - RED - Going to check that all animations are configured the right way
; 5968 :     pan = (ParticleAnimationNode*)AnimationsList.GetHead();

	mov	ecx, OFFSET ?AnimationsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::AnimationsList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _pan$[ebp], eax
$LN49@PS_LoadPar:

; 5969 : 
; 5970 :     while (pan)

	cmp	DWORD PTR _pan$[ebp], 0
	je	$LN48@PS_LoadPar

; 5971 :     {
; 5972 :         if ((!pan->Fps) || (!pan->NFrames) || (!pan->Sequence))

	mov	ecx, DWORD PTR _pan$[ebp]
	movss	xmm0, DWORD PTR [ecx+48]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN46@PS_LoadPar
	mov	edx, DWORD PTR _pan$[ebp]
	cmp	DWORD PTR [edx+44], 0
	je	SHORT $LN46@PS_LoadPar
	mov	eax, DWORD PTR _pan$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN47@PS_LoadPar
$LN46@PS_LoadPar:

; 5973 :         {
; 5974 :             sprintf(ErrorMessage, "Animation %s Failed", pan->AnimationName); //*** CRASH MESSAGE ****

	mov	ecx, DWORD PTR _pan$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	push	OFFSET ??_C@_0BE@KBCJIILC@Animation?5?$CFs?5Failed?$AA@
	push	OFFSET _ErrorMessage
	call	_sprintf
	add	esp, 12					; 0000000cH

; 5975 :             OutputDebugString(ErrorMessage);

	push	OFFSET _ErrorMessage
	call	DWORD PTR __imp__OutputDebugStringA@4

; 5976 :             ShiError(ErrorMessage);

	push	OFFSET ??_C@_0M@CFLADCE@Feb?518?52013?$AA@
	push	OFFSET ??_C@_0BE@CLILDDMP@DrawParticleSys?4cpp?$AA@
	push	5976					; 00001758H
	push	OFFSET ??_C@_0BE@FGKKLFGH@Error?3?5?5?$CF0d?5?5?$CFs?5?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$53[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H
	push	0
	push	OFFSET _ErrorMessage
	lea	eax, DWORD PTR _buffer$53[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	push	-1
	call	_exit

; 5977 :             return(false);

	xor	al, al
	jmp	$LN225@PS_LoadPar

; 5978 :         }
; 5979 :         else

	jmp	SHORT $LN45@PS_LoadPar
$LN47@PS_LoadPar:

; 5980 :         {
; 5981 :             pan = (ParticleAnimationNode*)pan->GetSucc();

	mov	ecx, DWORD PTR _pan$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _pan$[ebp], eax
$LN45@PS_LoadPar:

; 5982 :         }
; 5983 :     }

	jmp	$LN49@PS_LoadPar
$LN48@PS_LoadPar:

; 5984 : 
; 5985 : 
; 5986 :     // copy pointers to PPN array here
; 5987 :     //PPN = (ParticleParamNode **)malloc(sizeof(ParticleParamNode *) * l);
; 5988 :     PPN = new ParticleParamNode * [l];

	xor	ecx, ecx
	mov	eax, DWORD PTR _l$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A, eax ; PPN

; 5989 :     PPNCount = l;

	mov	ecx, DWORD PTR _l$[ebp]
	mov	DWORD PTR ?PPNCount@@3HA, ecx		; PPNCount

; 5990 : 
; 5991 :     // Pu239 This is fucking stupid!
; 5992 :     //for (int c = 0; c < l; c++)
; 5993 :     //{
; 5994 :     //    PPN[PS_PPN[c].id] = (ParticleParamNode *)c;
; 5995 :     //}
; 5996 :     // Pu239 I am guessing what the fuck was in this monkey's mind, when it was writing those crap above!
; 5997 :     for(int i=0;i<l;i++)

	mov	DWORD PTR _i$43[ebp], 0
	jmp	SHORT $LN44@PS_LoadPar
$LN43@PS_LoadPar:
	mov	edx, DWORD PTR _i$43[ebp]
	add	edx, 1
	mov	DWORD PTR _i$43[ebp], edx
$LN44@PS_LoadPar:
	mov	eax, DWORD PTR _i$43[ebp]
	cmp	eax, DWORD PTR _l$[ebp]
	jge	$LN42@PS_LoadPar

; 5998 :     {
; 5999 :         PPN[i] = new ParticleParamNode;

	push	5660					; 0000161cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN229@PS_LoadPar
	mov	ecx, DWORD PTR $T25[ebp]
	call	??0ParticleParamNode@@QAE@XZ
	mov	DWORD PTR tv2274[ebp], eax
	jmp	SHORT $LN230@PS_LoadPar
$LN229@PS_LoadPar:
	mov	DWORD PTR tv2274[ebp], 0
$LN230@PS_LoadPar:
	mov	ecx, DWORD PTR tv2274[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _i$43[ebp]
	mov	eax, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 6000 :         PPN[i]->id = PS_PPN[i].id;

	mov	edx, DWORD PTR _i$43[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR _i$43[ebp]
	mov	ecx, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	edx, DWORD PTR [ecx+edx]
	mov	DWORD PTR [eax+76], edx

; 6001 :     }

	jmp	$LN43@PS_LoadPar
$LN42@PS_LoadPar:

; 6002 : 
; 6003 :     /*ppn=(ParticleParamNode *)paramList.GetHead();
; 6004 :     while(ppn)
; 6005 :     {
; 6006 :      PPN[ppn->id]=ppn;
; 6007 :      ppn=(ParticleParamNode *)ppn->GetSucc();
; 6008 :     }*/
; 6009 : 
; 6010 : 
; 6011 : 
; 6012 : 
; 6013 :     // link the emmitter names to ids;
; 6014 :     // Check for any particle
; 6015 :     for (DWORD c = 0; c < MAX_PARTICLE_PARAMETERS; c++)

	mov	DWORD PTR _c$47[ebp], 0
	jmp	SHORT $LN41@PS_LoadPar
$LN40@PS_LoadPar:
	mov	eax, DWORD PTR _c$47[ebp]
	add	eax, 1
	mov	DWORD PTR _c$47[ebp], eax
$LN41@PS_LoadPar:
	cmp	DWORD PTR _c$47[ebp], 1024		; 00000400H
	jae	$LN39@PS_LoadPar

; 6016 :     {
; 6017 :         int t;
; 6018 : 
; 6019 :         // Check for any emitter in the particle
; 6020 :         for (t = 0; t < PSMAX_EMITTERS; t++)

	mov	DWORD PTR _t$45[ebp], 0
	jmp	SHORT $LN38@PS_LoadPar
$LN37@PS_LoadPar:
	mov	ecx, DWORD PTR _t$45[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$45[ebp], ecx
$LN38@PS_LoadPar:
	cmp	DWORD PTR _t$45[ebp], 10		; 0000000aH
	jge	$LN36@PS_LoadPar

; 6021 :         {
; 6022 :             if (PS_PPN[c].emitter[t].stages <= 0)

	mov	edx, DWORD PTR _c$47[ebp]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	eax, DWORD PTR _t$45[ebp]
	imul	eax, 368				; 00000170H
	cmp	DWORD PTR [edx+eax+1864], 0
	jg	SHORT $LN35@PS_LoadPar

; 6023 :                 continue;

	jmp	SHORT $LN37@PS_LoadPar
$LN35@PS_LoadPar:

; 6024 : 
; 6025 :             // Look thru all list of PPN for the right emitter
; 6026 :             for (DWORD n = 0; n < MAX_PARTICLE_PARAMETERS; n++)

	mov	DWORD PTR _n$42[ebp], 0
	jmp	SHORT $LN34@PS_LoadPar
$LN33@PS_LoadPar:
	mov	ecx, DWORD PTR _n$42[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$42[ebp], ecx
$LN34@PS_LoadPar:
	cmp	DWORD PTR _n$42[ebp], 1024		; 00000400H
	jae	$LN32@PS_LoadPar

; 6027 :             {
; 6028 :                 // if found the right emitter, assign it's ID
; 6029 :                 if (stricmp(PS_PPN[n].name, PS_PPN[c].emitter[t].name) == 0)

	mov	edx, DWORD PTR _c$47[ebp]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	eax, DWORD PTR _t$45[ebp]
	imul	eax, 368				; 00000170H
	lea	ecx, DWORD PTR [edx+eax+1800]
	push	ecx
	mov	edx, DWORD PTR _n$42[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN30@PS_LoadPar

; 6030 :                 {
; 6031 :                     PS_PPN[c].emitter[t].id = n;

	mov	edx, DWORD PTR _c$47[ebp]
	imul	edx, 5560				; 000015b8H
	add	edx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	eax, DWORD PTR _t$45[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR _n$42[ebp]
	mov	DWORD PTR [edx+eax+1796], ecx

; 6032 : 
; 6033 :                     if (PS_PPN[n].EmitLight)

	mov	edx, DWORD PTR _n$42[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	cl, BYTE PTR [eax+edx+5548]
	shl	cl, 6
	sar	cl, 7
	movsx	edx, cl
	test	edx, edx
	je	SHORT $LN30@PS_LoadPar

; 6034 :                     {
; 6035 :                         PS_PPN[c].emitter[t].Light = true;

	mov	eax, DWORD PTR _c$47[ebp]
	imul	eax, 5560				; 000015b8H
	add	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	ecx, DWORD PTR _t$45[ebp]
	imul	ecx, 368				; 00000170H
	mov	BYTE PTR [eax+ecx+2040], 1
$LN30@PS_LoadPar:

; 6036 :                     }
; 6037 :                 }
; 6038 :             }

	jmp	$LN33@PS_LoadPar
$LN32@PS_LoadPar:

; 6039 :         }

	jmp	$LN37@PS_LoadPar
$LN36@PS_LoadPar:

; 6040 :     }

	jmp	$LN40@PS_LoadPar
$LN39@PS_LoadPar:

; 6041 : 
; 6042 :     // Get the light roots
; 6043 :     for (DWORD c = 0; c < MAX_PARTICLE_PARAMETERS; c++)

	mov	DWORD PTR _c$46[ebp], 0
	jmp	SHORT $LN29@PS_LoadPar
$LN28@PS_LoadPar:
	mov	edx, DWORD PTR _c$46[ebp]
	add	edx, 1
	mov	DWORD PTR _c$46[ebp], edx
$LN29@PS_LoadPar:
	cmp	DWORD PTR _c$46[ebp], 1024		; 00000400H
	jae	$LN27@PS_LoadPar

; 6044 :     {
; 6045 :         int t;
; 6046 : 
; 6047 :         // Check for any emitter in the particle
; 6048 :         for (t = 0; t < PSMAX_EMITTERS; t++)

	mov	DWORD PTR _t$36[ebp], 0
	jmp	SHORT $LN26@PS_LoadPar
$LN25@PS_LoadPar:
	mov	eax, DWORD PTR _t$36[ebp]
	add	eax, 1
	mov	DWORD PTR _t$36[ebp], eax
$LN26@PS_LoadPar:
	cmp	DWORD PTR _t$36[ebp], 10		; 0000000aH
	jge	$LN24@PS_LoadPar

; 6049 :         {
; 6050 :             if (PS_PPN[c].emitter[t].stages <= 0)

	mov	ecx, DWORD PTR _c$46[ebp]
	imul	ecx, 5560				; 000015b8H
	add	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	edx, DWORD PTR _t$36[ebp]
	imul	edx, 368				; 00000170H
	cmp	DWORD PTR [ecx+edx+1864], 0
	jg	SHORT $LN23@PS_LoadPar

; 6051 :                 continue;

	jmp	SHORT $LN25@PS_LoadPar
$LN23@PS_LoadPar:

; 6052 : 
; 6053 :             if (PS_PPN[c].emitter[t].Light)

	mov	eax, DWORD PTR _c$46[ebp]
	imul	eax, 5560				; 000015b8H
	add	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	ecx, DWORD PTR _t$36[ebp]
	imul	ecx, 368				; 00000170H
	movzx	edx, BYTE PTR [eax+ecx+2040]
	test	edx, edx
	je	SHORT $LN22@PS_LoadPar

; 6054 :             {
; 6055 :                 PS_PPN[c].LightRoot = true;

	mov	eax, DWORD PTR _c$46[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	dl, BYTE PTR [ecx+eax+5548]
	or	dl, 4
	mov	eax, DWORD PTR _c$46[ebp]
	imul	eax, 5560				; 000015b8H
	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	BYTE PTR [ecx+eax+5548], dl

; 6056 :                 break;

	jmp	SHORT $LN24@PS_LoadPar
$LN22@PS_LoadPar:

; 6057 :             }
; 6058 :         }

	jmp	$LN25@PS_LoadPar
$LN24@PS_LoadPar:

; 6059 :     }

	jmp	$LN28@PS_LoadPar
$LN27@PS_LoadPar:

; 6060 : 
; 6061 : 
; 6062 :     ////////////////////////////////// SETUP TRAILS STUFF \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 6063 :     // Setup conversion from Old Trail Numbers to New PS trails
; 6064 :     memset(PS_TrailsID, 0x00, sizeof(PS_TrailsID));

	push	1024					; 00000400H
	push	0
	push	OFFSET ?PS_TrailsID@DrawableParticleSys@@0PAKA ; DrawableParticleSys::PS_TrailsID
	call	_memset
	add	esp, 12					; 0000000cH

; 6065 : 
; 6066 :     for (DWORD a = 0; a < LastTPN; a++)

	mov	DWORD PTR _a$37[ebp], 0
	jmp	SHORT $LN21@PS_LoadPar
$LN20@PS_LoadPar:
	mov	edx, DWORD PTR _a$37[ebp]
	add	edx, 1
	mov	DWORD PTR _a$37[ebp], edx
$LN21@PS_LoadPar:
	mov	eax, DWORD PTR _a$37[ebp]
	cmp	eax, DWORD PTR _LastTPN$[ebp]
	jae	SHORT $LN19@PS_LoadPar

; 6067 :     {
; 6068 :         // start of names table
; 6069 :         const TrailRefsType *Table = TrailsTable;

	mov	DWORD PTR _Table$31[ebp], OFFSET _TrailsTable
$LN18@PS_LoadPar:

; 6070 : 
; 6071 :         // check from start to end of table
; 6072 :         while (Table->Name[0])

	mov	ecx, 1
	imul	ecx, 0
	mov	edx, DWORD PTR _Table$31[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN17@PS_LoadPar

; 6073 :         {
; 6074 :             // if trail name found in table, assign it
; 6075 :             if (!strcmp(PS_TPN[a].Name, Table->Name))

	mov	ecx, DWORD PTR _Table$31[ebp]
	push	ecx
	mov	edx, DWORD PTR _a$37[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@PS_LoadPar

; 6076 :             {
; 6077 :                 PS_TrailsID[Table->Id] = a;

	mov	edx, DWORD PTR _Table$31[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	ecx, DWORD PTR _a$37[ebp]
	mov	DWORD PTR ?PS_TrailsID@DrawableParticleSys@@0PAKA[eax*4], ecx

; 6078 :                 break;

	jmp	SHORT $LN17@PS_LoadPar
$LN16@PS_LoadPar:

; 6079 :             }
; 6080 : 
; 6081 :             Table++;

	mov	edx, DWORD PTR _Table$31[ebp]
	add	edx, 68					; 00000044H
	mov	DWORD PTR _Table$31[ebp], edx

; 6082 :         }

	jmp	SHORT $LN18@PS_LoadPar
$LN17@PS_LoadPar:

; 6083 :     }

	jmp	$LN20@PS_LoadPar
$LN19@PS_LoadPar:

; 6084 : 
; 6085 :     // Now compile trail parameters
; 6086 :     for (DWORD a = 0; a < LastTPN; a++)

	mov	DWORD PTR _a$51[ebp], 0
	jmp	SHORT $LN15@PS_LoadPar
$LN14@PS_LoadPar:
	mov	eax, DWORD PTR _a$51[ebp]
	add	eax, 1
	mov	DWORD PTR _a$51[ebp], eax
$LN15@PS_LoadPar:
	mov	ecx, DWORD PTR _a$51[ebp]
	cmp	ecx, DWORD PTR _LastTPN$[ebp]
	jae	$LN13@PS_LoadPar

; 6087 :     {
; 6088 :         // Get Life to make calculations
; 6089 :         float Life = PS_TPN[a].LifeSpan;

	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [eax+edx+68]
	movss	DWORD PTR _Life$2[ebp], xmm0

; 6090 : 
; 6091 :         // Calculate Colors Rate
; 6092 :         PS_TPN[a].ColorRate.r = (PS_TPN[a].Color[1].r - PS_TPN[a].Color[0].r) ;

	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	add	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	esi, 16					; 00000010H
	imul	esi, 0
	movss	xmm0, DWORD PTR [ecx+edx+100]
	subss	xmm0, DWORD PTR [eax+esi+100]
	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [edx+ecx+132], xmm0

; 6093 :         PS_TPN[a].ColorRate.g = (PS_TPN[a].Color[1].g - PS_TPN[a].Color[0].g) ;

	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	esi, 16					; 00000010H
	imul	esi, 0
	movss	xmm0, DWORD PTR [eax+ecx+104]
	subss	xmm0, DWORD PTR [edx+esi+104]
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [ecx+eax+136], xmm0

; 6094 :         PS_TPN[a].ColorRate.b = (PS_TPN[a].Color[1].b - PS_TPN[a].Color[0].b) ;

	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	add	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	esi, 16					; 00000010H
	imul	esi, 0
	movss	xmm0, DWORD PTR [edx+eax+108]
	subss	xmm0, DWORD PTR [ecx+esi+108]
	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [eax+edx+140], xmm0

; 6095 :         // Calculate Size Rate
; 6096 :         PS_TPN[a].SizeRate = (PS_TPN[a].Size[1] - PS_TPN[a].Size[0]) / 2.0f ;

	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	add	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	esi, 4
	imul	esi, 0
	movss	xmm0, DWORD PTR [ecx+edx+80]
	subss	xmm0, DWORD PTR [eax+esi+80]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [edx+ecx+88], xmm0

; 6097 :         // Calculate Interval
; 6098 :         PS_TPN[a].Interval = (PS_TPN[a].Interval) ? 1 / PS_TPN[a].Interval : 999999.0f;

	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [ecx+eax+72]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN231@PS_LoadPar
	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR [eax+edx+72]
	movss	DWORD PTR tv2460[ebp], xmm0
	jmp	SHORT $LN232@PS_LoadPar
$LN231@PS_LoadPar:
	movss	xmm0, DWORD PTR __real@497423f0
	movss	DWORD PTR tv2460[ebp], xmm0
$LN232@PS_LoadPar:
	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR tv2460[ebp]
	movss	DWORD PTR [edx+ecx+72], xmm0

; 6099 :         // Calculate Density and Line Distance
; 6100 :         PS_TPN[a].LineDistance = PS_TPN[a].Size[1] * PS_TPN[a].Size[1] * 50.0f ;//* TRAIL_BIAS_CX;

	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	add	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	add	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	esi, 4
	shl	esi, 0
	movss	xmm0, DWORD PTR [eax+ecx+80]
	mulss	xmm0, DWORD PTR [edx+esi+80]
	mulss	xmm0, DWORD PTR __real@42480000
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [ecx+eax+292], xmm0

; 6101 : 
; 6102 :         // Visible Distance
; 6103 :         if (!PS_TPN[a].VisibleDistance)

	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [eax+edx+92]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN12@PS_LoadPar

; 6104 :         {
; 6105 :             PS_TPN[a].VisibleDistance = PS_TPN[a].LineDistance * 10.0f;

	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [edx+ecx+292]
	mulss	xmm0, DWORD PTR __real@41200000
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [ecx+eax+92], xmm0
$LN12@PS_LoadPar:

; 6106 :         }
; 6107 : 
; 6108 :         // The Frag Radius is half max size * 30 ( feet )
; 6109 :         if (!PS_TPN[a].FragRadius)

	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [eax+edx+296]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN11@PS_LoadPar

; 6110 :         {
; 6111 :             PS_TPN[a].FragRadius = PS_TPN[a].Size[1] * 30.0f ;

	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	add	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR [ecx+edx+80]
	mulss	xmm0, DWORD PTR __real@41f00000
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [ecx+eax+296], xmm0
$LN11@PS_LoadPar:

; 6112 :         }
; 6113 : 
; 6114 :         if (!PS_TPN[a].IntegrateDistance)

	mov	edx, DWORD PTR _a$51[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [eax+edx+96]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN10@PS_LoadPar

; 6115 :         {
; 6116 :             PS_TPN[a].IntegrateDistance = PS_TPN[a].FragRadius / 2.0f;

	mov	ecx, DWORD PTR _a$51[ebp]
	imul	ecx, 320				; 00000140H
	mov	edx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	xmm0, DWORD PTR [edx+ecx+296]
	divss	xmm0, DWORD PTR __real@40000000
	mov	eax, DWORD PTR _a$51[ebp]
	imul	eax, 320				; 00000140H
	mov	ecx, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	movss	DWORD PTR [ecx+eax+96], xmm0
$LN10@PS_LoadPar:

; 6117 :         }
; 6118 : 
; 6119 :     }

	jmp	$LN14@PS_LoadPar
$LN13@PS_LoadPar:

; 6120 : 
; 6121 : 
; 6122 :     // Update trail names for particles with right indexes
; 6123 :     for (DWORD c = 0; c < MAX_PARTICLE_PARAMETERS; c++)

	mov	DWORD PTR _c$44[ebp], 0
	jmp	SHORT $LN9@PS_LoadPar
$LN8@PS_LoadPar:
	mov	edx, DWORD PTR _c$44[ebp]
	add	edx, 1
	mov	DWORD PTR _c$44[ebp], edx
$LN9@PS_LoadPar:
	cmp	DWORD PTR _c$44[ebp], 1024		; 00000400H
	jae	$LN7@PS_LoadPar

; 6124 :     {
; 6125 :         // Look if a trail name present
; 6126 :         if (PS_PPN[c].TrailName[0])

	mov	eax, DWORD PTR _c$44[ebp]
	imul	eax, 5560				; 000015b8H
	add	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR [eax+ecx+1580]
	test	edx, edx
	je	$LN3@PS_LoadPar

; 6127 :         {
; 6128 :             // look for such name in Trails parameters
; 6129 :             for (DWORD a = 0; a < LastTPN; a++)

	mov	DWORD PTR _a$33[ebp], 0
	jmp	SHORT $LN5@PS_LoadPar
$LN4@PS_LoadPar:
	mov	eax, DWORD PTR _a$33[ebp]
	add	eax, 1
	mov	DWORD PTR _a$33[ebp], eax
$LN5@PS_LoadPar:
	mov	ecx, DWORD PTR _a$33[ebp]
	cmp	ecx, DWORD PTR _LastTPN$[ebp]
	jae	SHORT $LN3@PS_LoadPar

; 6130 :             {
; 6131 :                 // if found same name, assign the ID to the Particle
; 6132 :                 if (!strcmp(PS_TPN[a].Name, PS_PPN[c].TrailName)) 

	mov	edx, DWORD PTR _c$44[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	lea	ecx, DWORD PTR [eax+edx+1580]
	push	ecx
	mov	edx, DWORD PTR _a$33[ebp]
	imul	edx, 320				; 00000140H
	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@PS_LoadPar

; 6133 :                     PS_PPN[c].trailId = a;

	mov	edx, DWORD PTR _c$44[ebp]
	imul	edx, 5560				; 000015b8H
	mov	eax, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	mov	ecx, DWORD PTR _a$33[ebp]
	mov	DWORD PTR [eax+edx+1644], ecx
$LN2@PS_LoadPar:

; 6134 :             }

	jmp	SHORT $LN4@PS_LoadPar
$LN3@PS_LoadPar:

; 6135 :         }
; 6136 :     }

	jmp	$LN8@PS_LoadPar
$LN7@PS_LoadPar:

; 6137 : 
; 6138 : 
; 6139 :     //////////////////////////////// SETUP TRAILS STUFF END \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
; 6140 : 
; 6141 : 
; 6142 :     //------------------
; 6143 :     fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 6144 :     //------------------
; 6145 : 
; 6146 :     if (psContext)

	cmp	DWORD PTR ?psContext@DrawableParticleSys@@1PAVDXContext@@A, 0 ; DrawableParticleSys::psContext
	je	SHORT $LN1@PS_LoadPar

; 6147 :     {
; 6148 :         DXContext *stored = psContext; // have to store it because release clears it.

	mov	eax, DWORD PTR ?psContext@DrawableParticleSys@@1PAVDXContext@@A ; DrawableParticleSys::psContext
	mov	DWORD PTR _stored$21[ebp], eax

; 6149 : 
; 6150 :         ReleaseTexturesOnDevice(stored);

	mov	ecx, DWORD PTR _stored$21[ebp]
	push	ecx
	call	?ReleaseTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ; DrawableParticleSys::ReleaseTexturesOnDevice
	add	esp, 4

; 6151 :         SetupTexturesOnDevice(stored);

	mov	edx, DWORD PTR _stored$21[ebp]
	push	edx
	call	?SetupTexturesOnDevice@DrawableParticleSys@@SAXPAVDXContext@@@Z ; DrawableParticleSys::SetupTexturesOnDevice
	add	esp, 4
$LN1@PS_LoadPar:

; 6152 :     }
; 6153 : 
; 6154 :     return(true);

	mov	al, 1
$LN225@PS_LoadPar:

; 6155 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ$0:
	mov	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ$1:
	mov	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2484]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PS_LoadParameters@DrawableParticleSys@@CA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?PS_LoadParameters@DrawableParticleSys@@CA_NXZ ENDP	; DrawableParticleSys::PS_LoadParameters
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv78 = -8						; size = 4
_List$ = -4						; size = 4
_ListIdx$ = 8						; size = 4
_Item$ = 12						; size = 4
_Prev$ = 16						; size = 4
?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z PROC	; DrawableParticleSys::PS_RemoveItem

; 2682 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2683 :     PS_ListType &List = PS_Lists[ListIdx];

	mov	eax, DWORD PTR _ListIdx$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, OFFSET ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A ; DrawableParticleSys::PS_Lists
	mov	DWORD PTR _List$[ebp], eax

; 2684 : 
; 2685 :     // Security check
; 2686 :     if (Item == PS_NOPTR) return PS_NOPTR;

	cmp	DWORD PTR _Item$[ebp], -1
	jne	SHORT $LN11@PS_RemoveI
	or	eax, -1
	jmp	$LN12@PS_RemoveI
$LN11@PS_RemoveI:

; 2687 : 
; 2688 :     // remove the Item and Roll the Out ptr
; 2689 :     List.IndexList[List.ObjectOut++] = Item;

	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _Item$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _List$[ebp]
	mov	DWORD PTR [eax+20], edx

; 2690 : 
; 2691 :     // New exit, so rollover the exit ptr
; 2692 :     if (List.ObjectOut >= List.ListSize) List.ObjectOut = 0;

	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR [edx]
	jb	SHORT $LN10@PS_RemoveI
	mov	ecx, DWORD PTR _List$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN10@PS_RemoveI:

; 2693 : 
; 2694 :     switch (ListIdx)

	mov	edx, DWORD PTR _ListIdx$[ebp]
	mov	DWORD PTR tv78[ebp], edx
	cmp	DWORD PTR tv78[ebp], 7
	ja	$LN8@PS_RemoveI
	mov	eax, DWORD PTR tv78[ebp]
	jmp	DWORD PTR $LN14@PS_RemoveI[eax*4]
$LN7@PS_RemoveI:

; 2695 :     {
; 2696 : 
; 2697 :         case PS_PARTICLES_IDX :
; 2698 :                 Item = RemovePart(List, (ParticleNodeType*)List.ObjectList, Item, Prev);

	mov	ecx, DWORD PTR _Prev$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Item$[ebp]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	push	edx
	call	??$RemovePart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@KK@Z ; RemovePart<ParticleNodeType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2699 :             break;

	jmp	$LN8@PS_RemoveI
$LN6@PS_RemoveI:

; 2700 : 
; 2701 :         case PS_POLYS_IDX :
; 2702 :                 Item = RemovePart(List, (PolySubPartType*)List.ObjectList, Item, Prev);

	mov	eax, DWORD PTR _Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	push	ecx
	call	??$RemovePart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@KK@Z ; RemovePart<PolySubPartType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2703 :             break;

	jmp	$LN8@PS_RemoveI
$LN5@PS_RemoveI:

; 2704 : 
; 2705 :         case PS_EMITTERS_IDX :
; 2706 :                 Item = RemovePart(List, (EmitterPartType*)List.ObjectList, Item, Prev);

	mov	edx, DWORD PTR _Prev$[ebp]
	push	edx
	mov	eax, DWORD PTR _Item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	push	eax
	call	??$RemovePart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@KK@Z ; RemovePart<EmitterPartType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2707 :             break;

	jmp	SHORT $LN8@PS_RemoveI
$LN4@PS_RemoveI:

; 2708 : 
; 2709 :         case PS_SOUNDS_IDX :
; 2710 :                 Item = RemovePart(List, (SoundSubPartType*)List.ObjectList, Item, Prev);

	mov	ecx, DWORD PTR _Prev$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Item$[ebp]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	push	edx
	call	??$RemovePart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@KK@Z ; RemovePart<SoundSubPartType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2711 :             break;

	jmp	SHORT $LN8@PS_RemoveI
$LN3@PS_RemoveI:

; 2712 : 
; 2713 :         case PS_LIGHTS_IDX :
; 2714 :                 Item = RemovePart(List, (LightPartType*)List.ObjectList, Item, Prev);

	mov	eax, DWORD PTR _Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	push	ecx
	call	??$RemovePart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@KK@Z ; RemovePart<LightPartType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2715 :             break;

	jmp	SHORT $LN8@PS_RemoveI
$LN2@PS_RemoveI:

; 2716 : 
; 2717 :         case PS_TRAILS_IDX :
; 2718 :                 Item = RemovePart(List, (TrailEmitterType*)List.ObjectList, Item, Prev);

	mov	edx, DWORD PTR _Prev$[ebp]
	push	edx
	mov	eax, DWORD PTR _Item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	push	eax
	call	??$RemovePart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@KK@Z ; RemovePart<TrailEmitterType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax

; 2719 :             break;

	jmp	SHORT $LN8@PS_RemoveI
$LN1@PS_RemoveI:

; 2720 : 
; 2721 :         case PS_CLUSTERS_IDX :
; 2722 :                 Item = RemovePart(List, (ClusterPosType*)List.ObjectList, Item, Prev);

	mov	ecx, DWORD PTR _Prev$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Item$[ebp]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	push	edx
	call	??$RemovePart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@KK@Z ; RemovePart<ClusterPosType>
	add	esp, 16					; 00000010H
	mov	DWORD PTR _Item$[ebp], eax
$LN8@PS_RemoveI:

; 2723 :             break;
; 2724 : 
; 2725 : 
; 2726 : 
; 2727 :     }
; 2728 : 
; 2729 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]
$LN12@PS_RemoveI:

; 2730 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@PS_RemoveI:
	DD	$LN7@PS_RemoveI
	DD	$LN6@PS_RemoveI
	DD	$LN5@PS_RemoveI
	DD	$LN4@PS_RemoveI
	DD	$LN3@PS_RemoveI
	DD	$LN2@PS_RemoveI
	DD	$LN8@PS_RemoveI
	DD	$LN1@PS_RemoveI
?PS_RemoveItem@DrawableParticleSys@@CAKKKK@Z ENDP	; DrawableParticleSys::PS_RemoveItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_LastObj$ = -16						; size = 4
tv82 = -12						; size = 4
_Item$ = -8						; size = 4
_List$ = -4						; size = 4
_ListIdx$ = 8						; size = 4
?PS_AddItem@DrawableParticleSys@@CAKK@Z PROC		; DrawableParticleSys::PS_AddItem

; 2594 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2595 :     PS_ListType &List = PS_Lists[ListIdx];

	mov	eax, DWORD PTR _ListIdx$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, OFFSET ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A ; DrawableParticleSys::PS_Lists
	mov	DWORD PTR _List$[ebp], eax

; 2596 :     PS_PTR Item, LastObj = List.ObjectIn;

	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _LastObj$[ebp], edx

; 2597 : 
; 2598 :     // get the 1st allocable Item
; 2599 :     Item = List.IndexList[List.ObjectIn++];

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _Item$[ebp], ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	mov	ecx, DWORD PTR _List$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 2600 : 
; 2601 :     // New entry, so rollover the entry ptr
; 2602 :     if (List.ObjectIn >= List.ListSize) List.ObjectIn = 0;

	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN11@PS_AddItem
	mov	edx, DWORD PTR _List$[ebp]
	mov	DWORD PTR [edx+16], 0
$LN11@PS_AddItem:

; 2603 : 
; 2604 :     // if List Full ( going to roll on out ptr ), return back
; 2605 :     // * so, finally, a list overflow would always replace last item in list *
; 2606 :     if (List.ObjectIn == List.ObjectOut)

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN10@PS_AddItem

; 2607 :     {
; 2608 :         List.ObjectIn = LastObj;

	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR _LastObj$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 2609 :         return PS_NOPTR;

	or	eax, -1
	jmp	$LN12@PS_AddItem
$LN10@PS_AddItem:

; 2610 :     }
; 2611 : 
; 2612 :     // here if exists a previous Item to link to
; 2613 :     switch (ListIdx)

	mov	edx, DWORD PTR _ListIdx$[ebp]
	mov	DWORD PTR tv82[ebp], edx
	cmp	DWORD PTR tv82[ebp], 7
	ja	$LN8@PS_AddItem
	mov	eax, DWORD PTR tv82[ebp]
	jmp	DWORD PTR $LN14@PS_AddItem[eax*4]
$LN7@PS_AddItem:

; 2614 :     {
; 2615 : 
; 2616 :         case PS_PARTICLES_IDX :
; 2617 :                 Item = AddPart(List, (ParticleNodeType*)List.ObjectList, Item);

	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	push	ecx
	call	??$AddPart@UParticleNodeType@@@@YAKAAUPS_ListType@@PAUParticleNodeType@@K@Z ; AddPart<ParticleNodeType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2618 :             break;

	jmp	$LN8@PS_AddItem
$LN6@PS_AddItem:

; 2619 : 
; 2620 :         case PS_POLYS_IDX :
; 2621 :                 Item = AddPart(List, (PolySubPartType*)List.ObjectList, Item);

	mov	edx, DWORD PTR _Item$[ebp]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	push	edx
	call	??$AddPart@UPolySubPartType@@@@YAKAAUPS_ListType@@PAUPolySubPartType@@K@Z ; AddPart<PolySubPartType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2622 :             break;

	jmp	$LN8@PS_AddItem
$LN5@PS_AddItem:

; 2623 : 
; 2624 :         case PS_EMITTERS_IDX :
; 2625 :                 Item = AddPart(List, (EmitterPartType*)List.ObjectList, Item);

	mov	eax, DWORD PTR _Item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	push	eax
	call	??$AddPart@UEmitterPartType@@@@YAKAAUPS_ListType@@PAUEmitterPartType@@K@Z ; AddPart<EmitterPartType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2626 :             break;

	jmp	SHORT $LN8@PS_AddItem
$LN4@PS_AddItem:

; 2627 : 
; 2628 :         case PS_SOUNDS_IDX :
; 2629 :                 Item = AddPart(List, (SoundSubPartType*)List.ObjectList, Item);

	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	push	ecx
	call	??$AddPart@USoundSubPartType@@@@YAKAAUPS_ListType@@PAUSoundSubPartType@@K@Z ; AddPart<SoundSubPartType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2630 :             break;

	jmp	SHORT $LN8@PS_AddItem
$LN3@PS_AddItem:

; 2631 : 
; 2632 :         case PS_LIGHTS_IDX :
; 2633 :                 Item = AddPart(List, (LightPartType*)List.ObjectList, Item);

	mov	edx, DWORD PTR _Item$[ebp]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	push	edx
	call	??$AddPart@ULightPartType@@@@YAKAAUPS_ListType@@PAULightPartType@@K@Z ; AddPart<LightPartType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2634 :             break;

	jmp	SHORT $LN8@PS_AddItem
$LN2@PS_AddItem:

; 2635 : 
; 2636 :         case PS_TRAILS_IDX :
; 2637 :                 Item = AddPart(List, (TrailEmitterType*)List.ObjectList, Item);

	mov	eax, DWORD PTR _Item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _List$[ebp]
	push	eax
	call	??$AddPart@UTrailEmitterType@@@@YAKAAUPS_ListType@@PAUTrailEmitterType@@K@Z ; AddPart<TrailEmitterType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax

; 2638 :             break;

	jmp	SHORT $LN8@PS_AddItem
$LN1@PS_AddItem:

; 2639 : 
; 2640 :         case PS_CLUSTERS_IDX :
; 2641 :                 Item = AddPart(List, (ClusterPosType*)List.ObjectList, Item);

	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _List$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _List$[ebp]
	push	ecx
	call	??$AddPart@UClusterPosType@@@@YAKAAUPS_ListType@@PAUClusterPosType@@K@Z ; AddPart<ClusterPosType>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Item$[ebp], eax
$LN8@PS_AddItem:

; 2642 :             break;
; 2643 : 
; 2644 : 
; 2645 :     }
; 2646 : 
; 2647 : 
; 2648 :     // return the Item
; 2649 :     return Item;

	mov	eax, DWORD PTR _Item$[ebp]
$LN12@PS_AddItem:

; 2650 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@PS_AddItem:
	DD	$LN7@PS_AddItem
	DD	$LN6@PS_AddItem
	DD	$LN5@PS_AddItem
	DD	$LN4@PS_AddItem
	DD	$LN3@PS_AddItem
	DD	$LN2@PS_AddItem
	DD	$LN8@PS_AddItem
	DD	$LN1@PS_AddItem
?PS_AddItem@DrawableParticleSys@@CAKK@Z ENDP		; DrawableParticleSys::PS_AddItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_i$1 = -4						; size = 4
?PS_ListsRelease@DrawableParticleSys@@CAXXZ PROC	; DrawableParticleSys::PS_ListsRelease

; 2526 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2527 :     for (DWORD i = 0; i < PS_LISTS_NR; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN8@PS_ListsRe
$LN7@PS_ListsRe:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN8@PS_ListsRe:
	cmp	DWORD PTR _i$1[ebp], 8
	jae	SHORT $LN6@PS_ListsRe

; 2528 :     {
; 2529 :         if (PS_Lists[i].IndexList)

	mov	ecx, DWORD PTR _i$1[ebp]
	imul	ecx, 28					; 0000001cH
	cmp	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+8], 0
	je	SHORT $LN5@PS_ListsRe

; 2530 :         {
; 2531 :             free(PS_Lists[i].IndexList);

	mov	edx, DWORD PTR _i$1[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+8]
	push	eax
	call	_free
	add	esp, 4
$LN5@PS_ListsRe:

; 2532 :         }
; 2533 : 
; 2534 :         if (PS_Lists[i].ObjectList)

	mov	ecx, DWORD PTR _i$1[ebp]
	imul	ecx, 28					; 0000001cH
	cmp	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4], 0
	je	SHORT $LN4@PS_ListsRe

; 2535 :         {
; 2536 :             free(PS_Lists[i].ObjectList);

	mov	edx, DWORD PTR _i$1[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4]
	push	eax
	call	_free
	add	esp, 4
$LN4@PS_ListsRe:

; 2537 :         }
; 2538 : 
; 2539 :         PS_Lists[i].IndexList = NULL;

	mov	ecx, DWORD PTR _i$1[ebp]
	imul	ecx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+8], 0

; 2540 :         PS_Lists[i].ObjectList = NULL;

	mov	edx, DWORD PTR _i$1[ebp]
	imul	edx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+4], 0

; 2541 :         PS_Lists[i].ListSize = 0;

	mov	eax, DWORD PTR _i$1[ebp]
	imul	eax, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax], 0

; 2542 :     }

	jmp	$LN7@PS_ListsRe
$LN6@PS_ListsRe:

; 2543 : 
; 2544 :     if (PS_PPN)

	cmp	DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A, 0 ; DrawableParticleSys::PS_PPN
	je	SHORT $LN3@PS_ListsRe

; 2545 :     {
; 2546 :         free(PS_PPN);

	mov	ecx, DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A ; DrawableParticleSys::PS_PPN
	push	ecx
	call	_free
	add	esp, 4

; 2547 :         PS_PPN = NULL;

	mov	DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A, 0 ; DrawableParticleSys::PS_PPN
$LN3@PS_ListsRe:

; 2548 :     }
; 2549 : 
; 2550 :     if (PS_PEP)

	cmp	DWORD PTR ?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A, 0 ; DrawableParticleSys::PS_PEP
	je	SHORT $LN2@PS_ListsRe

; 2551 :     {
; 2552 :         free(PS_PEP);

	mov	edx, DWORD PTR ?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A ; DrawableParticleSys::PS_PEP
	push	edx
	call	_free
	add	esp, 4

; 2553 :         PS_PEP = NULL;

	mov	DWORD PTR ?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A, 0 ; DrawableParticleSys::PS_PEP
$LN2@PS_ListsRe:

; 2554 :     }
; 2555 : 
; 2556 :     if (PS_TPN)

	cmp	DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A, 0 ; DrawableParticleSys::PS_TPN
	je	SHORT $LN1@PS_ListsRe

; 2557 :     {
; 2558 :         free(PS_TPN);

	mov	eax, DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A ; DrawableParticleSys::PS_TPN
	push	eax
	call	_free
	add	esp, 4

; 2559 :         PS_TPN = NULL;

	mov	DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A, 0 ; DrawableParticleSys::PS_TPN
$LN1@PS_ListsRe:

; 2560 :     }
; 2561 : 
; 2562 :     PS_SubTrails = 0;

	mov	DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_SubTrails

; 2563 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_ListsRelease@DrawableParticleSys@@CAXXZ ENDP	; DrawableParticleSys::PS_ListsRelease
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
?PS_ListsInit@DrawableParticleSys@@CAXXZ PROC		; DrawableParticleSys::PS_ListsInit

; 2474 : {

	push	ebp
	mov	ebp, esp

; 2475 : 
; 2476 : 
; 2477 :     // Initlalize all supported Lists
; 2478 :     memset(PS_Lists, 0, sizeof(PS_Lists));

	push	224					; 000000e0H
	push	0
	push	OFFSET ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A ; DrawableParticleSys::PS_Lists
	call	_memset
	add	esp, 12					; 0000000cH

; 2479 : 
; 2480 :     PS_INIT_LIST(PS_PARTICLES_IDX, PS_MAX_PARTICLES, ParticleNodeType);

	push	124					; 0000007cH
	push	32768					; 00008000H
	push	0
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2481 :     PS_INIT_LIST(PS_POLYS_IDX, PS_MAX_POLYS, PolySubPartType);

	push	68					; 00000044H
	push	32768					; 00008000H
	push	1
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2482 :     PS_INIT_LIST(PS_EMITTERS_IDX, PS_MAX_EMITTERS, EmitterPartType);

	push	32					; 00000020H
	push	131072					; 00020000H
	push	2
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2483 :     PS_INIT_LIST(PS_SOUNDS_IDX, PS_MAX_SOUNDS, SoundSubPartType);

	push	32					; 00000020H
	push	32768					; 00008000H
	push	3
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2484 :     PS_INIT_LIST(PS_CLUSTERS_IDX, PS_MAX_CLUSTERS, ClusterPosType);

	push	48					; 00000030H
	push	16384					; 00004000H
	push	7
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2485 :     PS_INIT_LIST(PS_LIGHTS_IDX, PS_MAX_LIGHTS, LightPartType);

	push	44					; 0000002cH
	push	1024					; 00000400H
	push	4
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2486 :     PS_INIT_LIST(PS_TRAILS_IDX, PS_MAX_TRAILS, TrailEmitterType);

	push	172					; 000000acH
	push	256					; 00000100H
	push	5
	call	?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ; DrawableParticleSys::PS_ListInit
	add	esp, 12					; 0000000cH

; 2487 : 
; 2488 :     if (!PS_PPN)

	cmp	DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A, 0 ; DrawableParticleSys::PS_PPN
	jne	SHORT $LN3@PS_ListsIn

; 2489 :     {
; 2490 :         PS_PPN = (PS_PPType*)malloc(MAX_PARTICLE_PARAMETERS * sizeof(PS_PPType));

	push	5693440					; 0056e000H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR ?PS_PPN@DrawableParticleSys@@0PAUPS_PPType@@A, eax ; DrawableParticleSys::PS_PPN

; 2491 :         PS_PPNNr = 0;

	mov	DWORD PTR ?PS_PPNNr@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_PPNNr
$LN3@PS_ListsIn:

; 2492 :     }
; 2493 : 
; 2494 :     if (!PS_TPN)

	cmp	DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A, 0 ; DrawableParticleSys::PS_TPN
	jne	SHORT $LN2@PS_ListsIn

; 2495 :     {
; 2496 :         PS_TPN = (PS_TPType*)malloc(MAX_TRAIL_PARAMETERS * sizeof(PS_TPType));

	push	81920					; 00014000H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR ?PS_TPN@DrawableParticleSys@@0PAUPS_TPType@@A, eax ; DrawableParticleSys::PS_TPN

; 2497 :         PS_TPNNr = 0;

	mov	DWORD PTR ?PS_TPNNr@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_TPNNr
$LN2@PS_ListsIn:

; 2498 :     }
; 2499 : 
; 2500 :     if (!PS_PEP)

	cmp	DWORD PTR ?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A, 0 ; DrawableParticleSys::PS_PEP
	jne	SHORT $LN1@PS_ListsIn

; 2501 :     {
; 2502 :         PS_PEP = (PS_PEPType*)malloc(MAX_EMITTERS_PARAMETERS * sizeof(PS_PEPType));

	push	1507328					; 00170000H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR ?PS_PEP@DrawableParticleSys@@0PAUParticleEmitterParam@@A, eax ; DrawableParticleSys::PS_PEP

; 2503 :         PS_PEPNr = 0;

	mov	DWORD PTR ?PS_PEPNr@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_PEPNr
$LN1@PS_ListsIn:

; 2504 :     }
; 2505 : 
; 2506 :     // initialize PS light stuff
; 2507 :     PS_Light.Flags.OwnLight = false;

	mov	eax, DWORD PTR ?PS_Light@@3UDXLightType@@A+12
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+12, eax

; 2508 :     PS_Light.Flags.Static = false;

	mov	ecx, DWORD PTR ?PS_Light@@3UDXLightType@@A+12
	and	ecx, -5					; fffffffbH
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+12, ecx

; 2509 :     PS_Light.Flags.NotSelfLight = true;

	mov	edx, DWORD PTR ?PS_Light@@3UDXLightType@@A+12
	or	edx, 2
	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+12, edx

; 2510 :     PS_Light.Light.dltType = D3DLIGHT_POINT;

	mov	DWORD PTR ?PS_Light@@3UDXLightType@@A+16, 1

; 2511 :     PS_Light.Light.dcvAmbient.b = PS_Light.Light.dcvAmbient.g = PS_Light.Light.dcvAmbient.g = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+56, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+56
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+56, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+56
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+60, xmm0

; 2512 :     PS_Light.Light.dcvSpecular.r = PS_Light.Light.dcvSpecular.g = PS_Light.Light.dcvSpecular.b = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+44, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+44
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+40, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+40
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+36, xmm0

; 2513 :     PS_Light.Light.dcvDiffuse.r = PS_Light.Light.dcvDiffuse.g = PS_Light.Light.dcvDiffuse.b = 1.0f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+28, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+28
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+24, xmm0
	movss	xmm0, DWORD PTR ?PS_Light@@3UDXLightType@@A+24
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+20, xmm0

; 2514 :     PS_Light.Light.dvAttenuation0 = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+100, xmm0

; 2515 :     PS_Light.Light.dvAttenuation1 = 0.01f;

	movss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR ?PS_Light@@3UDXLightType@@A+104, xmm0

; 2516 : 
; 2517 :     PS_SubTrails = 0;

	mov	DWORD PTR ?PS_SubTrails@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::PS_SubTrails

; 2518 :     TrailsHandle = 0;

	mov	DWORD PTR ?TrailsHandle@DrawableParticleSys@@0KA, 0 ; DrawableParticleSys::TrailsHandle

; 2519 :     D3DXMatrixIdentity(&PS_LightRot);

	push	OFFSET ?PS_LightRot@@3UD3DXMATRIX@@A	; PS_LightRot
	call	?D3DXMatrixIdentity@@YAPAUD3DXMATRIX@@PAU1@@Z ; D3DXMatrixIdentity
	add	esp, 4

; 2520 : 
; 2521 : }

	pop	ebp
	ret	0
?PS_ListsInit@DrawableParticleSys@@CAXXZ ENDP		; DrawableParticleSys::PS_ListsInit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_n$1 = -4						; size = 4
_i$ = 8							; size = 4
_nr$ = 12						; size = 4
_size$ = 16						; size = 4
?PS_ListInit@DrawableParticleSys@@CAXKKK@Z PROC		; DrawableParticleSys::PS_ListInit

; 2447 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2448 :     // check for memory and eventually allocate it
; 2449 :     if (!PS_Lists[i].ObjectList)

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 28					; 0000001cH
	cmp	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+4], 0
	jne	SHORT $LN5@PS_ListIni

; 2450 :     {
; 2451 :         PS_Lists[i].ObjectList = calloc(nr, size);

	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nr$[ebp]
	push	edx
	call	_calloc
	add	esp, 8
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+4], eax
$LN5@PS_ListIni:

; 2452 :     }
; 2453 : 
; 2454 :     if (!PS_Lists[i].IndexList)

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 28					; 0000001cH
	cmp	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+8], 0
	jne	SHORT $LN4@PS_ListIni

; 2455 :     {
; 2456 :         PS_Lists[i].IndexList = (PS_PTR*)calloc(nr, sizeof(PS_PTR));

	push	4
	mov	eax, DWORD PTR _nr$[ebp]
	push	eax
	call	_calloc
	add	esp, 8
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+8], eax
$LN4@PS_ListIni:

; 2457 :     }
; 2458 : 
; 2459 :     // reset indexes
; 2460 :     for (DWORD n = 0; n < nr; n++)

	mov	DWORD PTR _n$1[ebp], 0
	jmp	SHORT $LN3@PS_ListIni
$LN2@PS_ListIni:
	mov	edx, DWORD PTR _n$1[ebp]
	add	edx, 1
	mov	DWORD PTR _n$1[ebp], edx
$LN3@PS_ListIni:
	mov	eax, DWORD PTR _n$1[ebp]
	cmp	eax, DWORD PTR _nr$[ebp]
	jae	SHORT $LN1@PS_ListIni

; 2461 :     {
; 2462 :         PS_Lists[i].IndexList[n] = (PS_PTR)n;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+8]
	mov	eax, DWORD PTR _n$1[ebp]
	mov	ecx, DWORD PTR _n$1[ebp]
	mov	DWORD PTR [edx+eax*4], ecx

; 2463 :     }

	jmp	SHORT $LN2@PS_ListIni
$LN1@PS_ListIni:

; 2464 : 
; 2465 :     // reset pointers
; 2466 :     PS_Lists[i].ObjectIn = PS_Lists[i].ObjectOut = 0;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+20], 0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax+16], 0

; 2467 :     PS_Lists[i].ListEntry = PS_Lists[i].ListEnd = PS_NOPTR;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[ecx+24], -1
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 28					; 0000001cH
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[edx+12], -1

; 2468 :     PS_Lists[i].ListSize = nr;

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _nr$[ebp]
	mov	DWORD PTR ?PS_Lists@DrawableParticleSys@@0PAUPS_ListType@@A[eax], ecx

; 2469 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PS_ListInit@DrawableParticleSys@@CAXKKK@Z ENDP		; DrawableParticleSys::PS_ListInit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_g$ = -4						; size = 4
_fn$ = 8						; size = 4
?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z PROC ; DrawableParticleSys::FindGroupNode

; 1878 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1879 :     ParticleGroupNode *g;
; 1880 : 
; 1881 :     g = (ParticleGroupNode *) DrawableParticleSys::Groups;

	mov	eax, DWORD PTR ?Groups@DrawableParticleSys@@0PAVParticleGroupNode@@A ; DrawableParticleSys::Groups
	mov	DWORD PTR _g$[ebp], eax
$LN3@FindGroupN:

; 1882 : 
; 1883 :     while (g)

	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN2@FindGroupN

; 1884 :     {
; 1885 :         if (!stricmp(g->Name, fn))

	mov	ecx, DWORD PTR _fn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _g$[ebp]
	add	edx, 8
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@FindGroupN

; 1886 :         {
; 1887 :             return(g);

	mov	eax, DWORD PTR _g$[ebp]
	jmp	SHORT $LN4@FindGroupN
$LN1@FindGroupN:

; 1888 :         }
; 1889 : 
; 1890 :         g = g->Next;

	mov	eax, DWORD PTR _g$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx

; 1891 :     }

	jmp	SHORT $LN3@FindGroupN
$LN2@FindGroupN:

; 1892 : 
; 1893 :     return NULL;

	xor	eax, eax
$LN4@FindGroupN:

; 1894 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindGroupNode@DrawableParticleSys@@CAPAVParticleGroupNode@@PAD@Z ENDP ; DrawableParticleSys::FindGroupNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv74 = -24						; size = 4
$T3 = -20						; size = 4
_n$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fn$ = 8						; size = 4
?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z PROC ; DrawableParticleSys::GetAnimationNode

; 1979 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1980 :     ParticleAnimationNode *n;
; 1981 : 
; 1982 :     n = FindAnimationNode(fn);

	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	call	?FindAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ; DrawableParticleSys::FindAnimationNode
	add	esp, 4
	mov	DWORD PTR _n$[ebp], eax

; 1983 : 
; 1984 :     if (n) return n;

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN1@GetAnimati
	mov	eax, DWORD PTR _n$[ebp]
	jmp	SHORT $LN2@GetAnimati
$LN1@GetAnimati:

; 1985 : 
; 1986 :     n = new ParticleAnimationNode;

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@GetAnimati
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0ParticleAnimationNode@@QAE@XZ
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@GetAnimati
$LN4@GetAnimati:
	mov	DWORD PTR tv74[ebp], 0
$LN5@GetAnimati:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _n$[ebp], edx

; 1987 :     memset(n, 0x00, sizeof(ParticleAnimationNode));

	push	60					; 0000003cH
	push	0
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1988 :     strcpy(n->AnimationName, fn);

	mov	ecx, DWORD PTR _fn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	_strcpy
	add	esp, 8

; 1989 :     AnimationsList.AddHead(n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, OFFSET ?AnimationsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::AnimationsList
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 1990 :     return n;

	mov	eax, DWORD PTR _n$[ebp]
$LN2@GetAnimati:

; 1991 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ENDP ; DrawableParticleSys::GetAnimationNode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_n$ = -4						; size = 4
_fn$ = 8						; size = 4
?FindAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z PROC ; DrawableParticleSys::FindAnimationNode

; 1959 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1960 :     ParticleAnimationNode *n;
; 1961 : 
; 1962 :     n = (ParticleAnimationNode *)AnimationsList.GetHead();

	mov	ecx, OFFSET ?AnimationsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::AnimationsList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN3@FindAnimat:

; 1963 : 
; 1964 :     while (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN2@FindAnimat

; 1965 :     {
; 1966 :         if (stricmp(n->AnimationName, fn) == 0)

	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@FindAnimat

; 1967 :         {
; 1968 :             return(n);

	mov	eax, DWORD PTR _n$[ebp]
	jmp	SHORT $LN4@FindAnimat
$LN1@FindAnimat:

; 1969 :         }
; 1970 : 
; 1971 :         n = (ParticleAnimationNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax

; 1972 :     }

	jmp	SHORT $LN3@FindAnimat
$LN2@FindAnimat:

; 1973 : 
; 1974 :     return 0;

	xor	eax, eax
$LN4@FindAnimat:

; 1975 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindAnimationNode@DrawableParticleSys@@CAPAVParticleAnimationNode@@PAD@Z ENDP ; DrawableParticleSys::FindAnimationNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_a$1 = -72						; size = 4
_Name$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_fn$ = 8						; size = 4
_Frames$ = 12						; size = 4
?GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z PROC ; DrawableParticleSys::GetFramesList

; 1933 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1934 :     char Name[PS_NAMESIZE];
; 1935 : 
; 1936 :     static TextureLink *List, *BaseList; // Item pointer in the List
; 1937 : 
; 1938 :     BaseList = (TextureLink*)malloc(sizeof(TextureLink) * Frames); // is Allocated for N Frames

	mov	eax, DWORD PTR _Frames$[ebp]
	shl	eax, 3
	push	eax
	call	_malloc
	add	esp, 4
	mov	DWORD PTR ?BaseList@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A, eax

; 1939 :     List = BaseList;

	mov	ecx, DWORD PTR ?BaseList@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
	mov	DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A, ecx

; 1940 : 
; 1941 :     if (!List) return 0; // Out of Memory

	cmp	DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A, 0
	jne	SHORT $LN4@GetFramesL
	xor	eax, eax
	jmp	$LN5@GetFramesL
$LN4@GetFramesL:

; 1942 : 
; 1943 :     for (int a = 0; a < Frames; a++)   // for each Frame

	mov	DWORD PTR _a$1[ebp], 0
	jmp	SHORT $LN3@GetFramesL
$LN2@GetFramesL:
	mov	edx, DWORD PTR _a$1[ebp]
	add	edx, 1
	mov	DWORD PTR _a$1[ebp], edx
$LN3@GetFramesL:
	mov	eax, DWORD PTR _a$1[ebp]
	cmp	eax, DWORD PTR _Frames$[ebp]
	jge	$LN1@GetFramesL

; 1944 :     {
; 1945 :         strncpy(Name, fn, sizeof(Name)); // creates each frame name

	push	64					; 00000040H
	mov	ecx, DWORD PTR _fn$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Name$[ebp]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1946 :         strtok(Name, "., "); // till extension

	push	OFFSET ??_C@_03DKIFGDMI@?4?0?5?$AA@
	lea	eax, DWORD PTR _Name$[ebp]
	push	eax
	call	_strtok
	add	esp, 8

; 1947 :         sprintf(&Name[strlen(Name)], "_%03d", a); // with number appended

	mov	ecx, DWORD PTR _a$1[ebp]
	push	ecx
	push	OFFSET ??_C@_05GNFDEJMB@_?$CF03d?$AA@
	lea	edx, DWORD PTR _Name$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR _Name$[ebp+eax]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1948 :         List->TexHandle = TheDXEngine.GetTextureHandle(Name);

	lea	ecx, DWORD PTR _Name$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?GetTextureHandle@CDXEngine@@QAEKPAD@Z	; CDXEngine::GetTextureHandle
	mov	edx, DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
	mov	DWORD PTR [edx], eax

; 1949 :         List->TexItem = TheDXEngine.DX2D_GetTextureItem(Name);

	lea	eax, DWORD PTR _Name$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_GetTextureItem@CDXEngine@@QAEPAVCTextureItem@@PAD@Z ; CDXEngine::DX2D_GetTextureItem
	mov	ecx, DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
	mov	DWORD PTR [ecx+4], eax

; 1950 :         List++; // Each Pointer is Updated

	mov	edx, DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
	add	edx, 8
	mov	DWORD PTR ?List@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A, edx

; 1951 :     }

	jmp	$LN2@GetFramesL
$LN1@GetFramesL:

; 1952 : 
; 1953 :     return((ParticleTextureNode*)BaseList); // and returns it

	mov	eax, DWORD PTR ?BaseList@?1??GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z@4PAUTextureLink@@A
$LN5@GetFramesL:

; 1954 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFramesList@DrawableParticleSys@@CAPAVParticleTextureNode@@PADH@Z ENDP ; DrawableParticleSys::GetFramesList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv74 = -24						; size = 4
$T3 = -20						; size = 4
_n$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fn$ = 8						; size = 4
?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z PROC ; DrawableParticleSys::GetTextureNode

; 1917 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1918 :     ParticleTextureNode *n;
; 1919 : 
; 1920 :     n = FindTextureNode(fn);

	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	call	?FindTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ; DrawableParticleSys::FindTextureNode
	add	esp, 4
	mov	DWORD PTR _n$[ebp], eax

; 1921 : 
; 1922 :     if (n) return n;

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN1@GetTexture
	mov	eax, DWORD PTR _n$[ebp]
	jmp	SHORT $LN2@GetTexture
$LN1@GetTexture:

; 1923 : 
; 1924 :     n = new ParticleTextureNode;

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@GetTexture
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0ParticleTextureNode@@QAE@XZ
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@GetTexture
$LN4@GetTexture:
	mov	DWORD PTR tv74[ebp], 0
$LN5@GetTexture:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _n$[ebp], edx

; 1925 :     strcpy(n->TexName, fn);

	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_strcpy
	add	esp, 8

; 1926 :     textureList.AddHead(n);

	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 1927 :     return n;

	mov	eax, DWORD PTR _n$[ebp]
$LN2@GetTexture:

; 1928 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ENDP ; DrawableParticleSys::GetTextureNode
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_n$ = -4						; size = 4
_fn$ = 8						; size = 4
?FindTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z PROC ; DrawableParticleSys::FindTextureNode

; 1898 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1899 :     ParticleTextureNode *n;
; 1900 : 
; 1901 :     n = (ParticleTextureNode *)textureList.GetHead();

	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax
$LN3@FindTextur:

; 1902 : 
; 1903 :     while (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN2@FindTextur

; 1904 :     {
; 1905 :         if (stricmp(n->TexName, fn) == 0)

	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@FindTextur

; 1906 :         {
; 1907 :             return(n);

	mov	eax, DWORD PTR _n$[ebp]
	jmp	SHORT $LN4@FindTextur
$LN1@FindTextur:

; 1908 :         }
; 1909 : 
; 1910 :         n = (ParticleTextureNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n$[ebp], eax

; 1911 :     }

	jmp	SHORT $LN3@FindTextur
$LN2@FindTextur:

; 1912 : 
; 1913 :     return 0;

	xor	eax, eax
$LN4@FindTextur:

; 1914 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindTextureNode@DrawableParticleSys@@CAPAVParticleTextureNode@@PAD@Z ENDP ; DrawableParticleSys::FindTextureNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv72 = -20						; size = 4
$T1 = -16						; size = 4
_this$ = -12						; size = 4
$T2 = -8						; size = 4
_n$ = -4						; size = 4
?ClearParticles@DrawableParticleSys@@AAEXXZ PROC	; DrawableParticleSys::ClearParticles
; _this$ = ecx

; 1854 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
$LN2@ClearParti:

; 1855 :     ParticleNode *n;
; 1856 : 
; 1857 :     while (n = (ParticleNode *)particleList.RemHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN3@ClearParti

; 1858 :     {
; 1859 :         delete n;

	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN5@ClearParti
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GParticleNode@@QAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN6@ClearParti
$LN5@ClearParti:
	mov	DWORD PTR tv72[ebp], 0
$LN6@ClearParti:

; 1860 :     }

	jmp	SHORT $LN2@ClearParti
$LN3@ClearParti:

; 1861 : 
; 1862 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearParticles@DrawableParticleSys@@AAEXXZ ENDP	; DrawableParticleSys::ClearParticles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_FPS$ = 8						; size = 4
?SetHeadVelocity@DrawableParticleSys@@QAEXPAUTpoint@@@Z PROC ; DrawableParticleSys::SetHeadVelocity
; _this$ = ecx

; 1759 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1760 :     headFPS = *FPS;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 84					; 00000054H
	mov	ecx, DWORD PTR _FPS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx

; 1761 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetHeadVelocity@DrawableParticleSys@@QAEXPAUTpoint@@@Z ENDP ; DrawableParticleSys::SetHeadVelocity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_Pos$ = 12						; size = 4
_Vel$ = 16						; size = 4
?PS_AddParticleEx@DrawableParticleSys@@SAXHPAUTpoint@@0@Z PROC ; DrawableParticleSys::PS_AddParticleEx

; 3398 : {

	push	ebp
	mov	ebp, esp

; 3399 :     PS_AddParticle((int)PPN[ID]->id, Pos, Vel); //Pu239 Are you fucking kidding me?? Passing a memory address as an ID?

	push	-1
	push	-1
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	eax, DWORD PTR _Vel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	mov	eax, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	call	?PS_AddParticle@DrawableParticleSys@@CAXHPAUTpoint@@00MKK@Z ; DrawableParticleSys::PS_AddParticle
	add	esp, 28					; 0000001cH

; 3400 : }

	pop	ebp
	ret	0
?PS_AddParticleEx@DrawableParticleSys@@SAXHPAUTpoint@@0@Z ENDP ; DrawableParticleSys::PS_AddParticleEx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
?GetErrorMessage@DrawableParticleSys@@SAPADXZ PROC	; DrawableParticleSys::GetErrorMessage

; 2147 : {

	push	ebp
	mov	ebp, esp

; 2148 :     return(ErrorMessage);

	mov	eax, OFFSET _ErrorMessage

; 2149 : }

	pop	ebp
	ret	0
?GetErrorMessage@DrawableParticleSys@@SAPADXZ ENDP	; DrawableParticleSys::GetErrorMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_dps$ = -4						; size = 4
?ClearParticleList@DrawableParticleSys@@SAXXZ PROC	; DrawableParticleSys::ClearParticleList

; 5028 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 5029 :     DPS_Node *dps;
; 5030 : 
; 5031 :     paramList.Lock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Lock@ProtectedAList@@QAEXXZ		; ProtectedAList::Lock

; 5032 :     dps = (DPS_Node *)dpsList.GetHead();

	mov	ecx, OFFSET ?dpsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::dpsList
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _dps$[ebp], eax
$LN2@ClearParti:

; 5033 : 
; 5034 :     while (dps)

	cmp	DWORD PTR _dps$[ebp], 0
	je	SHORT $LN1@ClearParti

; 5035 :     {
; 5036 :         dps->owner->ClearParticles();

	mov	eax, DWORD PTR _dps$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?ClearParticles@DrawableParticleSys@@AAEXXZ ; DrawableParticleSys::ClearParticles

; 5037 :         dps = (DPS_Node *)dps->GetSucc();

	mov	ecx, DWORD PTR _dps$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _dps$[ebp], eax

; 5038 :     }

	jmp	SHORT $LN2@ClearParti
$LN1@ClearParti:

; 5039 : 
; 5040 :     paramList.Unlock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Unlock@ProtectedAList@@QAEXXZ		; ProtectedAList::Unlock

; 5041 : #ifdef USE_NEW_PS
; 5042 : 
; 5043 :     // Check if trails to release
; 5044 :     PS_TrailsClear();
; 5045 : 
; 5046 :     PS_ListsInit();
; 5047 : #endif
; 5048 : 
; 5049 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ClearParticleList@DrawableParticleSys@@SAXXZ ENDP	; DrawableParticleSys::ClearParticleList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_color$ = 8						; size = 4
?SetCloudColor@DrawableParticleSys@@SAXPAUTcolor@@@Z PROC ; DrawableParticleSys::SetCloudColor

; 1871 : {

	push	ebp
	mov	ebp, esp

; 1872 :     memcpy(&gParticleSysLitColor, color, sizeof(Tcolor));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	push	OFFSET ?gParticleSysLitColor@@3UTcolor@@A ; gParticleSysLitColor
	call	_memcpy
	add	esp, 12					; 0000000cH

; 1873 : }

	pop	ebp
	ret	0
?SetCloudColor@DrawableParticleSys@@SAXPAUTcolor@@@Z ENDP ; DrawableParticleSys::SetCloudColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_state$ = 8						; size = 4
?SetGreenMode@DrawableParticleSys@@SAXH@Z PROC		; DrawableParticleSys::SetGreenMode

; 1866 : {

	push	ebp
	mov	ebp, esp

; 1867 :     gParticleSysGreenMode = state;

	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR ?gParticleSysGreenMode@@3HA, eax ; gParticleSysGreenMode

; 1868 : }

	pop	ebp
	ret	0
?SetGreenMode@DrawableParticleSys@@SAXH@Z ENDP		; DrawableParticleSys::SetGreenMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
$T1 = -48						; size = 4
tv129 = -44						; size = 4
$T2 = -40						; size = 4
tv92 = -36						; size = 4
$T3 = -32						; size = 4
tv71 = -28						; size = 4
$T4 = -24						; size = 4
$T5 = -20						; size = 4
$T6 = -16						; size = 4
_ptn$ = -12						; size = 4
$T7 = -8						; size = 4
_ppn$ = -4						; size = 4
?UnloadParameters@DrawableParticleSys@@SAXXZ PROC	; DrawableParticleSys::UnloadParameters

; 2090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
$LN5@UnloadPara:

; 2091 :     ParticleTextureNode *ptn;
; 2092 :     ParticleParamNode *ppn;
; 2093 : 
; 2094 :     while (ptn = (ParticleTextureNode *)textureList.RemHead())

	mov	ecx, OFFSET ?textureList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::textureList
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _ptn$[ebp], eax
	cmp	DWORD PTR _ptn$[ebp], 0
	je	SHORT $LN3@UnloadPara

; 2095 :     {
; 2096 :         delete ptn;

	mov	eax, DWORD PTR _ptn$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN8@UnloadPara
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GParticleTextureNode@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN9@UnloadPara
$LN8@UnloadPara:
	mov	DWORD PTR tv71[ebp], 0
$LN9@UnloadPara:

; 2097 :     }

	jmp	SHORT $LN5@UnloadPara
$LN3@UnloadPara:

; 2098 : 
; 2099 :     while (ppn = (ParticleParamNode *)paramList.RemHead())

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _ppn$[ebp], eax
	cmp	DWORD PTR _ppn$[ebp], 0
	je	SHORT $LN2@UnloadPara

; 2100 :     {
; 2101 :         if (ppn->bspObj)

	mov	edx, DWORD PTR _ppn$[ebp]
	cmp	DWORD PTR [edx+5632], 0
	je	SHORT $LN1@UnloadPara

; 2102 :             delete ppn->bspObj;

	mov	eax, DWORD PTR _ppn$[ebp]
	mov	ecx, DWORD PTR [eax+5632]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T7[ebp], edx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN10@UnloadPara
	push	1
	mov	eax, DWORD PTR $T7[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T7[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN1@UnloadPara
$LN10@UnloadPara:
	mov	DWORD PTR tv92[ebp], 0
$LN1@UnloadPara:

; 2103 : 
; 2104 :         delete ppn;

	mov	ecx, DWORD PTR _ppn$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T5[ebp], edx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN12@UnloadPara
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GParticleParamNode@@QAEPAXI@Z
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN13@UnloadPara
$LN12@UnloadPara:
	mov	DWORD PTR tv129[ebp], 0
$LN13@UnloadPara:

; 2105 :     }

	jmp	SHORT $LN3@UnloadPara
$LN2@UnloadPara:

; 2106 : 
; 2107 :     delete [] PPN;

	mov	eax, DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A ; PPN
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 2108 : 
; 2109 :     PPN = 0;

	mov	DWORD PTR ?PPN@@3PAPAVParticleParamNode@@A, 0 ; PPN

; 2110 : 
; 2111 : #ifdef USE_NEW_PS
; 2112 :     // remove all Lists
; 2113 :     PS_ListsRelease();
; 2114 : #endif
; 2115 : 
; 2116 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UnloadParameters@DrawableParticleSys@@SAXXZ ENDP	; DrawableParticleSys::UnloadParameters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
?LoadParameters@DrawableParticleSys@@SA_NXZ PROC	; DrawableParticleSys::LoadParameters

; 2153 : {

	push	ebp
	mov	ebp, esp

; 2154 :     return PS_LoadParameters();

	call	?PS_LoadParameters@DrawableParticleSys@@CA_NXZ ; DrawableParticleSys::PS_LoadParameters

; 2155 : }

	pop	ebp
	ret	0
?LoadParameters@DrawableParticleSys@@SA_NXZ ENDP	; DrawableParticleSys::LoadParameters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasParticles@DrawableParticleSys@@QAEHXZ PROC		; DrawableParticleSys::HasParticles
; _this$ = ecx

; 1681 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1682 :     if (particleList.GetHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	test	eax, eax
	je	SHORT $LN1@HasParticl

; 1683 :         return 1;

	mov	eax, 1
	jmp	SHORT $LN2@HasParticl
$LN1@HasParticl:

; 1684 : 
; 1685 :     return 0;

	xor	eax, eax
$LN2@HasParticl:

; 1686 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasParticles@DrawableParticleSys@@QAEHXZ ENDP		; DrawableParticleSys::HasParticles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_trigWind$1 = -60					; size = 8
_n2$2 = -52						; size = 4
tv193 = -48						; size = 4
$T3 = -44						; size = 4
_rz$ = -40						; size = 4
_ry$ = -36						; size = 4
_rx$ = -32						; size = 4
_this$ = -28						; size = 4
$T4 = -24						; size = 4
_zz$ = -20						; size = 4
_yy$ = -16						; size = 4
_xx$ = -12						; size = 4
_wind$5 = -8						; size = 4
_n$ = -4						; size = 4
_renderer$ = 8						; size = 4
_LOD$ = 12						; size = 4
?Draw@DrawableParticleSys@@UAEXPAVRenderOTW@@H@Z PROC	; DrawableParticleSys::Draw
; _this$ = ecx

; 1774 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 1775 : 
; 1776 :     //START_PROFILE("OLD PS TIME");
; 1777 : 
; 1778 :     // Setup the Renderer
; 1779 :     PS_Renderer = renderer;

	mov	eax, DWORD PTR _renderer$[ebp]
	mov	DWORD PTR ?PS_Renderer@DrawableParticleSys@@0PAVRenderOTW@@A, eax ; DrawableParticleSys::PS_Renderer

; 1780 : 
; 1781 :     ParticleNode *n;
; 1782 :     float xx, yy, zz, rx, ry, rz;
; 1783 : 
; 1784 :     // Stored the renderer Position
; 1785 :     rx = renderer->X();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?X@Render3D@@QAEMXZ			; Render3D::X
	fstp	DWORD PTR _rx$[ebp]

; 1786 :     ry = renderer->Y();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?Y@Render3D@@QAEMXZ			; Render3D::Y
	fstp	DWORD PTR _ry$[ebp]

; 1787 :     rz = renderer->Z();

	mov	ecx, DWORD PTR _renderer$[ebp]
	call	?Z@Render3D@@QAEMXZ			; Render3D::Z
	fstp	DWORD PTR _rz$[ebp]

; 1788 : 
; 1789 :     paramList.Lock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Lock@ProtectedAList@@QAEXXZ		; ProtectedAList::Lock

; 1790 : 
; 1791 :     n = (ParticleNode *)particleList.GetHead();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?GetHead@AList@@QAEPAXXZ		; AList::GetHead
	mov	DWORD PTR _n$[ebp], eax

; 1792 : 
; 1793 :     // COBRA - DX - Setup the Squares in the 2D DX Engine for PS Draws
; 1794 :     TheDXEngine.DX2D_SetupSquareCx(1.0f, 1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z	; CDXEngine::DX2D_SetupSquareCx

; 1795 : 
; 1796 : 
; 1797 :     if (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	$LN2@Draw

; 1798 :     {
; 1799 :         groundLevel = OTWDriver.GetGroundLevel(n->pos.x, n->pos.y);

	push	0
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+64]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _n$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+60]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetGroundLevel@OTWDriverClass@@QAEMMMPAUTpoint@@@Z ; OTWDriverClass::GetGroundLevel
	fstp	DWORD PTR ?groundLevel@DrawableParticleSys@@2MA ; DrawableParticleSys::groundLevel

; 1800 :         mlTrig trigWind;
; 1801 :         float wind;
; 1802 : 
; 1803 :         // current wind
; 1804 :         // mlSinCos(&trigWind, TheWeather->GetWindHeading(&n->pos));
; 1805 :         // wind =  TheWeather->GetWindSpeedFPS(&n->pos);
; 1806 :         mlSinCos(&trigWind, ((WeatherClass*)realWeather)->WindHeadingAt(&n->pos));

	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?WindHeadingAt@WeatherClass@@QAEMPBUTpoint@@@Z ; WeatherClass::WindHeadingAt
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _trigWind$1[ebp]
	push	ecx
	call	?mlSinCos@@YAXPAUmlTrig@@M@Z		; mlSinCos
	add	esp, 8

; 1807 :         wind = ((WeatherClass*)realWeather)->WindSpeedInFeetPerSecond(&n->pos);

	mov	edx, DWORD PTR _n$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?WindSpeedInFeetPerSecond@WeatherClass@@QAEMPBUTpoint@@@Z ; WeatherClass::WindSpeedInFeetPerSecond
	fstp	DWORD PTR _wind$5[ebp]

; 1808 :         wind *= n->ppn->WindFactor * 0.5f ; // RV - I-Hawk

	mov	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movss	xmm0, DWORD PTR [ecx+5656]
	mulss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR _wind$5[ebp]
	movss	DWORD PTR _wind$5[ebp], xmm0

; 1809 :         winddx = trigWind.cos * wind;

	movss	xmm0, DWORD PTR _trigWind$1[ebp+4]
	mulss	xmm0, DWORD PTR _wind$5[ebp]
	movss	DWORD PTR ?winddx@DrawableParticleSys@@2MA, xmm0

; 1810 :         winddy = trigWind.sin * wind;

	movss	xmm0, DWORD PTR _trigWind$1[ebp]
	mulss	xmm0, DWORD PTR _wind$5[ebp]
	movss	DWORD PTR ?winddy@DrawableParticleSys@@2MA, xmm0

; 1811 : 
; 1812 :         xx = n->pos.x - rx;

	mov	edx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [edx+60]
	subss	xmm0, DWORD PTR _rx$[ebp]
	movss	DWORD PTR _xx$[ebp], xmm0

; 1813 :         yy = n->pos.y - ry;

	mov	eax, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [eax+64]
	subss	xmm0, DWORD PTR _ry$[ebp]
	movss	DWORD PTR _yy$[ebp], xmm0

; 1814 :         zz = n->pos.z - rz;

	mov	ecx, DWORD PTR _n$[ebp]
	movss	xmm0, DWORD PTR [ecx+68]
	subss	xmm0, DWORD PTR _rz$[ebp]
	movss	DWORD PTR _zz$[ebp], xmm0

; 1815 : 
; 1816 :         cameraDistance = sqrt(xx * xx + yy * yy + zz * zz);

	movss	xmm0, DWORD PTR _xx$[ebp]
	mulss	xmm0, DWORD PTR _xx$[ebp]
	movss	xmm1, DWORD PTR _yy$[ebp]
	mulss	xmm1, DWORD PTR _yy$[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _zz$[ebp]
	mulss	xmm1, DWORD PTR _zz$[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR ?cameraDistance@DrawableParticleSys@@2MA ; DrawableParticleSys::cameraDistance
$LN3@Draw:

; 1817 : 
; 1818 :         while (n)

	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN2@Draw

; 1819 :         {
; 1820 :             //COUNT_PROFILE("PARTICLES");
; 1821 :             n->Draw(renderer, LOD);

	mov	edx, DWORD PTR _LOD$[ebp]
	push	edx
	mov	eax, DWORD PTR _renderer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	call	?Draw@ParticleNode@@QAEXPAVRenderOTW@@H@Z ; ParticleNode::Draw

; 1822 :             // we have to get the next node after Exec, because our emitters
; 1823 :             // will add nodes directly after themselves.  Getting the next node
; 1824 :             // pointer before Exec will cause one newly emitted node to be skipped
; 1825 :             // in this loop, which then causes rendering bugs due to not having
; 1826 :             // data that was Exec'd yet.
; 1827 :             ParticleNode *n2 = (ParticleNode *)n->GetSucc();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?GetSucc@ANode@@QAEPAXXZ		; ANode::GetSucc
	mov	DWORD PTR _n2$2[ebp], eax

; 1828 : 
; 1829 :             // Cobra - Moved the node killer to start of mission (otwloop.cpp)
; 1830 :             // also in DrawableParticleSys::AddParticle()
; 1831 :             if ((n->IsDead()) /*&& !PurgeTimeInc*/) // COBRA - RED - If no1 updates PurgeTimeInc,

	mov	ecx, DWORD PTR _n$[ebp]
	call	?IsDead@ParticleNode@@QAEHXZ		; ParticleNode::IsDead
	test	eax, eax
	je	SHORT $LN8@Draw

; 1832 :             {
; 1833 :                 // when it could be 0...???
; 1834 :                 n->Remove();

	mov	ecx, DWORD PTR _n$[ebp]
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove

; 1835 :                 delete n;

	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T4[ebp], edx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@Draw
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GParticleNode@@QAEPAXI@Z
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN8@Draw
$LN7@Draw:
	mov	DWORD PTR tv193[ebp], 0
$LN8@Draw:

; 1836 :             }
; 1837 : 
; 1838 :             n = n2;

	mov	eax, DWORD PTR _n2$2[ebp]
	mov	DWORD PTR _n$[ebp], eax

; 1839 :         }

	jmp	SHORT $LN3@Draw
$LN2@Draw:

; 1840 :     }
; 1841 : 
; 1842 :     paramList.Unlock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Unlock@ProtectedAList@@QAEXXZ		; ProtectedAList::Unlock

; 1843 :     //STOP_PROFILE("OLD PS TIME");
; 1844 : 
; 1845 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Draw@DrawableParticleSys@@UAEXPAVRenderOTW@@H@Z ENDP	; DrawableParticleSys::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Exec@DrawableParticleSys@@QAEXXZ PROC			; DrawableParticleSys::Exec
; _this$ = ecx

; 1849 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1850 :     return;
; 1851 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Exec@DrawableParticleSys@@QAEXXZ ENDP			; DrawableParticleSys::Exec
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_worldPos$ = 8						; size = 4
_v$ = 12						; size = 4
?AddParticle@DrawableParticleSys@@QAEXPAUTpoint@@0@Z PROC ; DrawableParticleSys::AddParticle
; _this$ = ecx

; 1693 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1694 :     AddParticle(type, worldPos, v);

	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _worldPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z ; DrawableParticleSys::AddParticle

; 1695 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AddParticle@DrawableParticleSys@@QAEXPAUTpoint@@0@Z ENDP ; DrawableParticleSys::AddParticle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_now$ = -44						; size = 4
_this$ = -40						; size = 4
_n$2 = -36						; size = 4
$T3 = -32						; size = 4
_fpsTest$ = -28						; size = 4
tv133 = -24						; size = 4
$T4 = -20						; size = 4
_FilterLevel$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_Id$ = 8						; size = 4
_worldPos$ = 12						; size = 4
_v$ = 16						; size = 4
?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z PROC ; DrawableParticleSys::AddParticle
; _this$ = ecx

; 1699 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1700 :     DWORD now;
; 1701 :     now = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR _now$[ebp], eax

; 1702 : 
; 1703 :     // COBRA - RED - New FPS Filter
; 1704 :     // Cobra - Keep the Particle list cleaned up
; 1705 :     /* if ((now >= TimeToPurge)&&PurgeTimeInc)
; 1706 :      {
; 1707 :      TimeToPurge = (now + PurgeTimeInc);
; 1708 :      CleanParticleList();
; 1709 :      }
; 1710 :      // Cobra - Purge the Particle list
; 1711 :      else if ((now >= TimeToPurgeAll)&&PurgeTimeInc)
; 1712 :      {
; 1713 :      TimeToPurgeAll = (now + PurgeAllTimeInc);
; 1714 :      ClearParticleList();
; 1715 :      }
; 1716 :      //cobra Bail out of FPS is lower than 10
; 1717 :      float fpsTest = OTWDriver.GetFPS();
; 1718 :       if (fpsTest < g_nPSKillFPS)
; 1719 :      {
; 1720 :      return;
; 1721 :      }*/
; 1722 : 
; 1723 :     // COBRA - RED - The Particle Filetr starts here
; 1724 :     // The Filter works on a counter Basis...The counter rolls off each MAX_PARTICLE_FILTER_LEVEL counts
; 1725 :     // Partices are Added only if the actual counter level is beyond a Filter Level which is calculated
; 1726 :     // based on Actual Fps and a lower FPS limit. It works almost like a PID with a proportional Band
; 1727 :     // of 50%, at fps less than 50% over the limit it start filtering Particles ( not adding them ),
; 1728 :     // the more near the limit the more are filtered...when at limit or ps under limit, no particles
; 1729 :     // are more added.
; 1730 : 
; 1731 :     float fpsTest = OTWDriver.GetFPS(); // Get the Actal FPS

	mov	ecx, OFFSET ?OTWDriver@@3VOTWDriverClass@@A ; OTWDriver
	call	?GetFPS@OTWDriverClass@@QAEMXZ		; OTWDriverClass::GetFPS
	fstp	DWORD PTR _fpsTest$[ebp]

; 1732 : 
; 1733 :     // Calculates the filter level ... the more near fps limit, the lower the filter level
; 1734 :     float FilterLevel = (fpsTest - g_nPSKillFPS) * (MAX_PARTICLE_FILTER_LEVEL / (g_nPSKillFPS * 1.5f - g_nPSKillFPS + 1.0f));

	cvtsi2ss xmm0, DWORD PTR ?g_nPSKillFPS@@3HA	; g_nPSKillFPS
	movss	xmm1, DWORD PTR _fpsTest$[ebp]
	subss	xmm1, xmm0
	cvtsi2ss xmm0, DWORD PTR ?g_nPSKillFPS@@3HA	; g_nPSKillFPS
	mulss	xmm0, DWORD PTR __real@3fc00000
	cvtsi2ss xmm2, DWORD PTR ?g_nPSKillFPS@@3HA	; g_nPSKillFPS
	subss	xmm0, xmm2
	addss	xmm0, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@41200000
	divss	xmm2, xmm0
	mulss	xmm1, xmm2
	movss	DWORD PTR _FilterLevel$[ebp], xmm1

; 1735 : 
; 1736 :     // if less that 0 ( already under fps limit) then settle at 0 ( no New particle )
; 1737 :     if (FilterLevel < 0) FilterLevel = 0;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _FilterLevel$[ebp]
	jbe	SHORT $LN2@AddParticl
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _FilterLevel$[ebp], xmm0
$LN2@AddParticl:

; 1738 : 
; 1739 :     // here the counter of the Filter is updated, the filter works Adding 'Filter' Particles out of the Counter
; 1740 :     ParticleFilterCount = (++ParticleFilterCount) % (MAX_PARTICLE_FILTER_LEVEL + 1);

	mov	ax, WORD PTR _ParticleFilterCount
	add	ax, 1
	mov	WORD PTR _ParticleFilterCount, ax
	movzx	eax, WORD PTR _ParticleFilterCount
	cdq
	mov	ecx, 11					; 0000000bH
	idiv	ecx
	mov	WORD PTR _ParticleFilterCount, dx

; 1741 : 
; 1742 :     // Ok, now we have how much is counting the counter, if its counting not more that the Filter Level
; 1743 :     // Add this particle, if not bail out
; 1744 : #ifdef USE_NEW_PS
; 1745 :     PS_AddParticle((int)PPN[Id], worldPos, v);
; 1746 : #else
; 1747 : 
; 1748 :     if (ParticleFilterCount < (WORD)FilterLevel)

	movzx	edx, WORD PTR _ParticleFilterCount
	cvttss2si eax, DWORD PTR _FilterLevel$[ebp]
	movzx	ecx, ax
	cmp	edx, ecx
	jge	SHORT $LN1@AddParticl

; 1749 :     {
; 1750 :         ParticleNode *n = new ParticleNode(Id, worldPos, v);

	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN5@AddParticl
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	0
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	eax, DWORD PTR _worldPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0ParticleNode@@QAE@HPAUTpoint@@00M@Z	; ParticleNode::ParticleNode
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN6@AddParticl
$LN5@AddParticl:
	mov	DWORD PTR tv133[ebp], 0
$LN6@AddParticl:
	mov	edx, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _n$2[ebp], eax

; 1751 :         particleList.AddHead(n);

	mov	ecx, DWORD PTR _n$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead
$LN1@AddParticl:

; 1752 :     }
; 1753 : 
; 1754 : #endif
; 1755 :     //REPORT_VALUE("P.Filter%",(__int64)((FilterLevel>=MAX_PARTICLE_FILTER_LEVEL)?0:((MAX_PARTICLE_FILTER_LEVEL-FilterLevel)/MAX_PARTICLE_FILTER_LEVEL*100)));
; 1756 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddParticle@DrawableParticleSys@@QAEXHPAUTpoint@@0@Z ENDP ; DrawableParticleSys::AddParticle
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv93 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
_n$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DrawableParticleSys@@UAE@XZ PROC			; DrawableParticleSys::~DrawableParticleSys
; _this$ = ecx

; 1665 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DrawableParticleSys@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableParticleSys@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 1666 :     // Delete this object's particlesys
; 1667 :     paramList.Lock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Lock@ProtectedAList@@QAEXXZ		; ProtectedAList::Lock

; 1668 :     dpsNode.Remove();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Remove@ANode@@QAEPAXXZ			; ANode::Remove
$LN2@DrawablePa:

; 1669 : 
; 1670 :     ParticleNode *n;
; 1671 : 
; 1672 :     while (n = (ParticleNode *)particleList.RemHead())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?RemHead@AList@@QAEPAXXZ		; AList::RemHead
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN1@DrawablePa

; 1673 :     {
; 1674 :         delete n;

	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T3[ebp], edx
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@DrawablePa
	push	1
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_GParticleNode@@QAEPAXI@Z
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN6@DrawablePa
$LN5@DrawablePa:
	mov	DWORD PTR tv93[ebp], 0
$LN6@DrawablePa:

; 1675 :     }

	jmp	SHORT $LN2@DrawablePa
$LN1@DrawablePa:

; 1676 : 
; 1677 :     paramList.Unlock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Unlock@ProtectedAList@@QAEXXZ		; ProtectedAList::Unlock

; 1678 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1DPS_Node@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1AList@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1AList@@QAE@XZ
__unwindfunclet$??1DrawableParticleSys@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1DPS_Node@@QAE@XZ
__ehhandler$??1DrawableParticleSys@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DrawableParticleSys@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DrawableParticleSys@@UAE@XZ ENDP			; DrawableParticleSys::~DrawableParticleSys
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_particlesysType$ = 8					; size = 4
_scale$ = 12						; size = 4
??0DrawableParticleSys@@QAE@HM@Z PROC			; DrawableParticleSys::DrawableParticleSys
; _this$ = ecx

; 1638 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DrawableParticleSys@@QAE@HM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR _scale$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DrawableObject@@QAE@M@Z		; DrawableObject::DrawableObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableParticleSys@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0AList@@QAE@XZ			; AList::AList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0DPS_Node@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1639 : 
; 1640 :     ShiAssert(particlesysType >= 0);
; 1641 : 
; 1642 :     // Store the particlesys type
; 1643 :     type = particlesysType;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _particlesysType$[ebp]
	mov	DWORD PTR [ecx+48], edx

; 1644 :     dpsNode.owner = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], ecx

; 1645 :     paramList.Lock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Lock@ProtectedAList@@QAEXXZ		; ProtectedAList::Lock

; 1646 :     dpsList.AddHead(&dpsNode);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	mov	ecx, OFFSET ?dpsList@DrawableParticleSys@@0VAList@@A ; DrawableParticleSys::dpsList
	call	?AddHead@AList@@QAEXPAVANode@@@Z	; AList::AddHead

; 1647 :     paramList.Unlock();

	mov	ecx, OFFSET ?paramList@DrawableParticleSys@@0VProtectedAList@@A ; DrawableParticleSys::paramList
	call	?Unlock@ProtectedAList@@QAEXXZ		; ProtectedAList::Unlock

; 1648 : 
; 1649 :     // Set to position 0.0, 0.0, 0.0;
; 1650 :     position.x = 0.0F;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+96], xmm0

; 1651 :     position.y = 0.0F;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+100], xmm0

; 1652 :     position.z = 0.0F;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+104], xmm0

; 1653 : 
; 1654 : 
; 1655 :     headFPS.x = 0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+84], xmm0

; 1656 :     headFPS.y = 0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+88], xmm0

; 1657 :     headFPS.z = 0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+92], xmm0

; 1658 : 
; 1659 :     Groups = LastGroup = NULL;

	mov	DWORD PTR ?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A, 0 ; DrawableParticleSys::LastGroup
	mov	eax, DWORD PTR ?LastGroup@DrawableParticleSys@@0PAVParticleGroupNode@@A ; DrawableParticleSys::LastGroup
	mov	DWORD PTR ?Groups@DrawableParticleSys@@0PAVParticleGroupNode@@A, eax ; DrawableParticleSys::Groups

; 1660 : 
; 1661 :     Something = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0

; 1662 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1AList@@QAE@XZ
__unwindfunclet$??0DrawableParticleSys@@QAE@HM@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1DPS_Node@@QAE@XZ
__ehhandler$??0DrawableParticleSys@@QAE@HM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DrawableParticleSys@@QAE@HM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DrawableParticleSys@@QAE@HM@Z ENDP			; DrawableParticleSys::DrawableParticleSys
; Function compile flags: /Odtp
;	COMDAT ??0ParticleAnimationNode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ParticleAnimationNode@@QAE@XZ PROC			; ParticleAnimationNode::ParticleAnimationNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ParticleAnimationNode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ParticleAnimationNode@@QAE@XZ ENDP			; ParticleAnimationNode::ParticleAnimationNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
tv269 = -24						; size = 4
tv236 = -20						; size = 4
_Tex$ = -16						; size = 4
_cx$1 = -12						; size = 4
_cx$2 = -8						; size = 4
_this$ = -4						; size = 4
_Frame$ = 8						; size = 4
_TimeRest$ = 12						; size = 4
_Elapsed$ = 16						; size = 4
_pos$ = 20						; size = 4
_alpha$ = 24						; size = 4
?Run@ParticleAnimationNode@@QAEHAAHAAMMAAUTpoint@@1@Z PROC ; ParticleAnimationNode::Run
; _this$ = ecx

; 1166 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 1167 :     if ((Elapsed + TimeRest) >= Fps)  //

	mov	eax, DWORD PTR _TimeRest$[ebp]
	movss	xmm0, DWORD PTR _Elapsed$[ebp]
	addss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	comiss	xmm0, DWORD PTR [ecx+48]
	jb	SHORT $LN8@Run

; 1168 :     {
; 1169 :         Frame++; // If time for a frame elapsed next frame

	mov	edx, DWORD PTR _Frame$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _Frame$[ebp]
	mov	DWORD PTR [ecx], eax

; 1170 : 
; 1171 :         if (Frame >= NFrames)   // Animation update

	mov	edx, DWORD PTR _Frame$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+44]
	jl	SHORT $LN5@Run

; 1172 :         {
; 1173 :             if (Flags & ANIM_LOOPING) Frame = 0; // * LOOPING CHECK *

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	and	eax, 1
	je	SHORT $LN6@Run
	mov	ecx, DWORD PTR _Frame$[ebp]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN5@Run
$LN6@Run:

; 1174 :             else Frame = NFrames - 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	sub	eax, 1
	mov	ecx, DWORD PTR _Frame$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@Run:

; 1175 :         }
; 1176 : 
; 1177 :         if (Frame == -1)Frame = 0; // Limit check to avoid CTD

	mov	edx, DWORD PTR _Frame$[ebp]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN4@Run
	mov	eax, DWORD PTR _Frame$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@Run:

; 1178 : 
; 1179 :         TimeRest = Elapsed - Fps; // Keep remaining time

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Elapsed$[ebp]
	subss	xmm0, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _TimeRest$[ebp]
	movss	DWORD PTR [edx], xmm0

; 1180 :     }
; 1181 :     else   // else, if not elapsed time for a frame

	jmp	SHORT $LN3@Run
$LN8@Run:

; 1182 :     {
; 1183 :         TimeRest += Elapsed; // just update Frame Time Counter

	mov	eax, DWORD PTR _TimeRest$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR _Elapsed$[ebp]
	mov	ecx, DWORD PTR _TimeRest$[ebp]
	movss	DWORD PTR [ecx], xmm0
$LN3@Run:

; 1184 :     }
; 1185 : 
; 1186 :     if (Flags & ANIM_DNVIEW)  // * DOWN VIEW ALPHA *

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	and	eax, 4
	je	$LN2@Run

; 1187 :     {
; 1188 :         float cx = sqrt((pos.x - ObserverPosition.x) * (pos.x - ObserverPosition.x) //
; 1189 :                         + (pos.y - ObserverPosition.y) * (pos.y - ObserverPosition.y)); // ground distance from object

	mov	ecx, DWORD PTR _pos$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR ?ObserverPosition@@3UTpoint@@A
	mov	edx, DWORD PTR _pos$[ebp]
	movss	xmm1, DWORD PTR [edx]
	subss	xmm1, DWORD PTR ?ObserverPosition@@3UTpoint@@A
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR _pos$[ebp]
	movss	xmm1, DWORD PTR [eax+4]
	subss	xmm1, DWORD PTR ?ObserverPosition@@3UTpoint@@A+4
	mov	ecx, DWORD PTR _pos$[ebp]
	movss	xmm2, DWORD PTR [ecx+4]
	subss	xmm2, DWORD PTR ?ObserverPosition@@3UTpoint@@A+4
	mulss	xmm1, xmm2
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _cx$2[ebp]

; 1190 :         cx = (float)atan2(ObserverPosition.z - pos.z, cx); // Angle CX

	cvtss2sd xmm0, DWORD PTR _cx$2[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _pos$[ebp]
	movss	xmm0, DWORD PTR ?ObserverPosition@@3UTpoint@@A+8
	subss	xmm0, DWORD PTR [edx+8]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _cx$2[ebp]

; 1191 :         alpha *= abs(cos(cx));

	push	ecx
	movss	xmm0, DWORD PTR _cx$2[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?cos@@YAMM@Z				; cos
	fstp	DWORD PTR [esp]
	call	?abs@@YAMM@Z				; abs
	add	esp, 4
	fstp	DWORD PTR tv236[ebp]
	mov	eax, DWORD PTR _alpha$[ebp]
	movss	xmm0, DWORD PTR tv236[ebp]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx], xmm0
$LN2@Run:

; 1192 :     }
; 1193 : 
; 1194 :     if (Flags & ANIM_UPVIEW)  // * DOWN VIEW ALPHA *

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	and	eax, 2
	je	$LN1@Run

; 1195 :     {
; 1196 :         float cx = sqrt((pos.x - ObserverPosition.x) * (pos.x - ObserverPosition.x) //
; 1197 :                         + (pos.y - ObserverPosition.y) * (pos.y - ObserverPosition.y)); // ground distance from object

	mov	ecx, DWORD PTR _pos$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR ?ObserverPosition@@3UTpoint@@A
	mov	edx, DWORD PTR _pos$[ebp]
	movss	xmm1, DWORD PTR [edx]
	subss	xmm1, DWORD PTR ?ObserverPosition@@3UTpoint@@A
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR _pos$[ebp]
	movss	xmm1, DWORD PTR [eax+4]
	subss	xmm1, DWORD PTR ?ObserverPosition@@3UTpoint@@A+4
	mov	ecx, DWORD PTR _pos$[ebp]
	movss	xmm2, DWORD PTR [ecx+4]
	subss	xmm2, DWORD PTR ?ObserverPosition@@3UTpoint@@A+4
	mulss	xmm1, xmm2
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _cx$1[ebp]

; 1198 :         cx = (float)atan2(ObserverPosition.z - pos.z, cx); // Angle CX

	cvtss2sd xmm0, DWORD PTR _cx$1[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _pos$[ebp]
	movss	xmm0, DWORD PTR ?ObserverPosition@@3UTpoint@@A+8
	subss	xmm0, DWORD PTR [edx+8]
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	?checked_atan2@@YANNN@Z			; checked_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _cx$1[ebp]

; 1199 :         alpha *= abs(sin(cx));

	push	ecx
	movss	xmm0, DWORD PTR _cx$1[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?sin@@YAMM@Z				; sin
	fstp	DWORD PTR [esp]
	call	?abs@@YAMM@Z				; abs
	add	esp, 4
	fstp	DWORD PTR tv269[ebp]
	mov	eax, DWORD PTR _alpha$[ebp]
	movss	xmm0, DWORD PTR tv269[ebp]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _alpha$[ebp]
	movss	DWORD PTR [ecx], xmm0
$LN1@Run:

; 1200 :     }
; 1201 : 
; 1202 : 
; 1203 :     TextureLink *Tex = (TextureLink*)Sequence; // Gets the Base Frame

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR _Tex$[ebp], eax

; 1204 :     Tex += Frame; // calculates the Frame Position

	mov	ecx, DWORD PTR _Frame$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _Tex$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR _Tex$[ebp], ecx

; 1205 :     return(Tex->TexHandle); // Selects It

	mov	edx, DWORD PTR _Tex$[ebp]
	mov	eax, DWORD PTR [edx]

; 1206 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Run@ParticleAnimationNode@@QAEHAAHAAMMAAUTpoint@@1@Z ENDP ; ParticleAnimationNode::Run
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_enums$ = -56						; size = 48
_this$ = -8						; size = 4
_l$ = -4						; size = 4
?Parse@ParticleDomain@@QAEXXZ PROC			; ParticleDomain::Parse
; _this$ = ecx

; 2225 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 2226 :     char *enums[] =
; 2227 :     {
; 2228 :         "sphere",

	mov	DWORD PTR _enums$[ebp], OFFSET ??_C@_06FOHEPPJH@sphere?$AA@

; 2229 :         "plane",

	mov	DWORD PTR _enums$[ebp+4], OFFSET ??_C@_05MAIECAHP@plane?$AA@

; 2230 :         "box",

	mov	DWORD PTR _enums$[ebp+8], OFFSET ??_C@_03OLPJGAII@box?$AA@

; 2231 :         "blob",

	mov	DWORD PTR _enums$[ebp+12], OFFSET ??_C@_04LPJPOBEM@blob?$AA@

; 2232 :         "cylinder",

	mov	DWORD PTR _enums$[ebp+16], OFFSET ??_C@_08GNLJBPEP@cylinder?$AA@

; 2233 :         "cone",

	mov	DWORD PTR _enums$[ebp+20], OFFSET ??_C@_04NOMJJLOC@cone?$AA@

; 2234 :         "triangle",

	mov	DWORD PTR _enums$[ebp+24], OFFSET ??_C@_08FOPOJBJM@triangle?$AA@

; 2235 :         "rectangle",

	mov	DWORD PTR _enums$[ebp+28], OFFSET ??_C@_09KEGCCCGI@rectangle?$AA@

; 2236 :         "disc",

	mov	DWORD PTR _enums$[ebp+32], OFFSET ??_C@_04LCGIPIL@disc?$AA@

; 2237 :         "line",

	mov	DWORD PTR _enums$[ebp+36], OFFSET ??_C@_04HJPCFDOP@line?$AA@

; 2238 :         "point",

	mov	DWORD PTR _enums$[ebp+40], OFFSET ??_C@_05BBEJFBFA@point?$AA@

; 2239 :         0
; 2240 :     };

	mov	DWORD PTR _enums$[ebp+44], 0

; 2241 :     type = (PSDomainEnum)TokenEnum(enums, 0);

	push	0
	lea	eax, DWORD PTR _enums$[ebp]
	push	eax
	call	?TokenEnum@@YAHPAPADH@Z			; TokenEnum
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 2242 :     int l;
; 2243 : 
; 2244 :     for (l = 0; l < 9; l++)

	mov	DWORD PTR _l$[ebp], 0
	jmp	SHORT $LN3@Parse
$LN2@Parse:
	mov	edx, DWORD PTR _l$[ebp]
	add	edx, 1
	mov	DWORD PTR _l$[ebp], edx
$LN3@Parse:
	cmp	DWORD PTR _l$[ebp], 9
	jge	SHORT $LN1@Parse

; 2245 :     {
; 2246 :         param[l] = TokenF(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?TokenF@@YAMM@Z				; TokenF
	add	esp, 4
	mov	eax, DWORD PTR _l$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+eax*4+4]

; 2247 :     }

	jmp	SHORT $LN2@Parse
$LN1@Parse:

; 2248 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Parse@ParticleDomain@@QAEXXZ ENDP			; ParticleDomain::Parse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z PROC ; ParticleDomain::GetRandomPosition
; _this$ = ecx

; 2198 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2199 :     p->x = NRAND * sphere.size.x + sphere.pos.x;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm1, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _p$[ebp]
	movss	DWORD PTR [edx], xmm1

; 2200 :     p->y = NRAND * sphere.size.y + sphere.pos.y;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm1, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _p$[ebp]
	movss	DWORD PTR [edx+4], xmm1

; 2201 :     p->z = NRAND * sphere.size.z + sphere.pos.z;

	call	_rand
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@46fffe00
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mulss	xmm1, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm1, DWORD PTR [ecx+12]
	mov	edx, DWORD PTR _p$[ebp]
	movss	DWORD PTR [edx+8], xmm1

; 2202 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z ENDP ; ParticleDomain::GetRandomPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\objects\drawparticlesys.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
_d$ = -4						; size = 4
_p$ = 8							; size = 4
?GetRandomDirection@ParticleDomain@@QAEXPAUTpoint@@@Z PROC ; ParticleDomain::GetRandomDirection
; _this$ = ecx

; 2205 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2206 :     GetRandomPosition(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetRandomPosition@ParticleDomain@@QAEXPAUTpoint@@@Z ; ParticleDomain::GetRandomPosition

; 2207 : 
; 2208 :     float d = sqrt(p->x * p->x + p->y * p->y + p->z * p->z);

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [edx]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	movss	xmm1, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movss	xmm1, DWORD PTR [edx+8]
	mulss	xmm1, DWORD PTR [eax+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _d$[ebp]

; 2209 : 
; 2210 :     if (d)

	movss	xmm0, DWORD PTR _d$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN2@GetRandomD

; 2211 :     {
; 2212 :         p->x /= d;

	mov	ecx, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	divss	xmm0, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	movss	DWORD PTR [edx], xmm0

; 2213 :         p->y /= d;

	mov	eax, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR [eax+4]
	divss	xmm0, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 2214 :         p->z /= d;

	mov	edx, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR [edx+8]
	divss	xmm0, DWORD PTR _d$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movss	DWORD PTR [eax+8], xmm0

; 2215 :     }
; 2216 :     else

	jmp	SHORT $LN1@GetRandomD
$LN2@GetRandomD:

; 2217 :     {
; 2218 :         p->x = 1;

	mov	ecx, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 2219 :         p->y = 0;

	mov	edx, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+4], xmm0

; 2220 :         p->z = 0;

	mov	eax, DWORD PTR _p$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+8], xmm0
$LN1@GetRandomD:

; 2221 :     }
; 2222 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetRandomDirection@ParticleDomain@@QAEXPAUTpoint@@@Z ENDP ; ParticleDomain::GetRandomDirection
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1DPS_Node@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DPS_Node@@QAE@XZ PROC				; DPS_Node::~DPS_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	esp, ebp
	pop	ebp
	ret	0
??1DPS_Node@@QAE@XZ ENDP				; DPS_Node::~DPS_Node
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0DPS_Node@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0DPS_Node@@QAE@XZ PROC				; DPS_Node::DPS_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ANode@@QAE@XZ			; ANode::ANode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DPS_Node@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0DPS_Node@@QAE@XZ ENDP				; DPS_Node::DPS_Node
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\mltrig.h
;	COMDAT ?checked_atan2@@YANNN@Z
_TEXT	SEGMENT
_z$ = -8						; size = 8
_y$ = 8							; size = 8
_x$ = 16						; size = 8
?checked_atan2@@YANNN@Z PROC				; checked_atan2, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 47   : 	double z;
; 48   : 	
; 49   : 	if (x == -0.0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@8000000000000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@checked_at

; 50   : 		x = 0.0;

	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR _x$[ebp], xmm0
$LN8@checked_at:

; 51   : 	
; 52   : 	if (x != 0)

	movsd	xmm0, QWORD PTR _x$[ebp]
	ucomisd	xmm0, QWORD PTR __real@0000000000000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@checked_at

; 53   : 		z = atan(y / x);

	movsd	xmm0, QWORD PTR _y$[ebp]
	divsd	xmm0, QWORD PTR _x$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_atan
	add	esp, 8
	fstp	QWORD PTR _z$[ebp]
	jmp	SHORT $LN4@checked_at
$LN7@checked_at:

; 54   : 	else if (y > 0)

	movsd	xmm0, QWORD PTR _y$[ebp]
	comisd	xmm0, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN5@checked_at

; 55   : 		z = HALF_DPI;

	movsd	xmm0, QWORD PTR __real@3ff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 56   : 	else

	jmp	SHORT $LN4@checked_at
$LN5@checked_at:

; 57   : 		z = -HALF_DPI;

	movsd	xmm0, QWORD PTR __real@bff921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN4@checked_at:

; 58   : 
; 59   : 	if (x < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _x$[ebp]
	jbe	SHORT $LN1@checked_at

; 60   : 	{
; 61   : 		if (y < 0)

	movsd	xmm0, QWORD PTR __real@0000000000000000
	comisd	xmm0, QWORD PTR _y$[ebp]
	jbe	SHORT $LN2@checked_at

; 62   : 			z -= DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	subsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0

; 63   : 		else

	jmp	SHORT $LN1@checked_at
$LN2@checked_at:

; 64   : 			z += DPI;

	movsd	xmm0, QWORD PTR _z$[ebp]
	addsd	xmm0, QWORD PTR __real@400921fb54442d18
	movsd	QWORD PTR _z$[ebp], xmm0
$LN1@checked_at:

; 65   : 	}
; 66   : 
; 67   : 	return z;

	fld	QWORD PTR _z$[ebp]

; 68   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?checked_atan2@@YANNN@Z ENDP				; checked_atan2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\mltrig.h
;	COMDAT ?mlSinCos@@YAXPAUmlTrig@@M@Z
_TEXT	SEGMENT
_trig$ = 8						; size = 4
_angle$ = 12						; size = 4
?mlSinCos@@YAXPAUmlTrig@@M@Z PROC			; mlSinCos, COMDAT

; 12   : {

	push	ebp
	mov	ebp, esp

; 13   : #if defined(_MSC_VER)
; 14   : 	__asm 
; 15   : 	{
; 16   : 		__asm	mov     ecx, trig;

	mov	ecx, DWORD PTR _trig$[ebp]

; 17   : 		__asm	fld     dword ptr [angle];

	fld	DWORD PTR _angle$[ebp]

; 18   : 		__asm	fsincos;

	fsincos

; 19   : 		__asm	fstp    dword ptr [ecx]trig.cos;

	fstp	DWORD PTR [ecx+4]

; 20   : 		__asm	fstp    dword ptr [ecx]trig.sin;

	fstp	DWORD PTR [ecx]

; 21   : 	}
; 22   : #else
; 23   : 	trig->sin = (Float32)sin(angle);
; 24   : 	trig->cos = (Float32)cos(angle);
; 25   : #endif
; 26   : }

	pop	ebp
	ret	0
?mlSinCos@@YAXPAUmlTrig@@M@Z ENDP			; mlSinCos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?PRANDFloatPos@@YAMXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_x$ = -4						; size = 4
?PRANDFloatPos@@YAMXZ PROC				; PRANDFloatPos, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : //	return NRANDPOS;
; 152  : 	float	x=	(float)(GenerateFastRandom()&0xffff);

	call	?GenerateFastRandom@@YAJXZ		; GenerateFastRandom
	and	eax, 65535				; 0000ffffH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _x$[ebp], xmm0

; 153  : 	return( x / 65535.0f);

	movss	xmm0, DWORD PTR _x$[ebp]
	divss	xmm0, DWORD PTR __real@477fff00
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PRANDFloatPos@@YAMXZ ENDP				; PRANDFloatPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?PRANDFloat@@YAMXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_x$ = -4						; size = 4
?PRANDFloat@@YAMXZ PROC					; PRANDFloat, COMDAT

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 144  : //	return NRAND;
; 145  : 	float	x=	(float)(GenerateFastRandom()&0xffff);

	call	?GenerateFastRandom@@YAJXZ		; GenerateFastRandom
	and	eax, 65535				; 0000ffffH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _x$[ebp], xmm0

; 146  : 	return( 1 - 2 * x / 65535.0f);

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR _x$[ebp]
	divss	xmm0, DWORD PTR __real@477fff00
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR tv75[ebp], xmm1
	fld	DWORD PTR tv75[ebp]

; 147  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PRANDFloat@@YAMXZ ENDP					; PRANDFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?GenerateFastRandom@@YAJXZ
_TEXT	SEGMENT
_FastRandom$ = -4					; size = 4
?GenerateFastRandom@@YAJXZ PROC				; GenerateFastRandom, COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 109  : 	static long LastRandom;
; 110  : 	long	FastRandom;														// The Random Variable
; 111  : 	_asm {	
; 112  : 			push	edx

	push	edx

; 113  : 			push	eax

	push	eax

; 114  : 			RDTSC

	rdtsc

; 115  : 			add	DWORD PTR FastRandom,edx

	add	DWORD PTR _FastRandom$[ebp], edx

; 116  : 			xor	DWORD PTR FastRandom,eax

	xor	DWORD PTR _FastRandom$[ebp], eax

; 117  : 			mov	eax, DWORD PTR LastRandom

	mov	eax, DWORD PTR ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA ; `GenerateFastRandom'::`2'::LastRandom

; 118  : 			add	DWORD PTR FastRandom,eax

	add	DWORD PTR _FastRandom$[ebp], eax

; 119  : 			add	DWORD PTR LastRandom,edx

	add	DWORD PTR ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA, edx ; `GenerateFastRandom'::`2'::LastRandom

; 120  : 			pop	eax

	pop	eax

; 121  : 			pop	edx

	pop	edx

; 122  : 	}
; 123  : 	return(FastRandom);

	mov	eax, DWORD PTR _FastRandom$[ebp]

; 124  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GenerateFastRandom@@YAJXZ ENDP				; GenerateFastRandom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\dxengine\dxengine.h
;	COMDAT ?LODBiasCx@CDXEngine@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LODBiasCx@CDXEngine@@QAEMXZ PROC			; CDXEngine::LODBiasCx, COMDAT
; _this$ = ecx

; 274  : 	float				LODBiasCx(void) { return m_LODBiasCx; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fld	DWORD PTR ?m_LODBiasCx@CDXEngine@@0MA	; CDXEngine::m_LODBiasCx
	mov	esp, ebp
	pop	ebp
	ret	0
?LODBiasCx@CDXEngine@@QAEMXZ ENDP			; CDXEngine::LODBiasCx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\dxengine\dxengine.h
;	COMDAT ?GetState@CDXEngine@@QAE?AW4DX_StateType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CDXEngine@@QAE?AW4DX_StateType@@XZ PROC	; CDXEngine::GetState, COMDAT
; _this$ = ecx

; 147  : 	DX_StateType	GetState(void)					{ return m_RenderState; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?m_RenderState@CDXEngine@@0W4DX_StateType@@A ; CDXEngine::m_RenderState
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CDXEngine@@QAE?AW4DX_StateType@@XZ ENDP	; CDXEngine::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\fastmath.h
;	COMDAT ?F_ABS@@YAMM@Z
_TEXT	SEGMENT
_r$ = -4						; size = 4
_x$ = 8							; size = 4
?F_ABS@@YAMM@Z PROC					; F_ABS, COMDAT

; 19   : {	

	push	ebp
	mov	ebp, esp
	push	ecx

; 20   : 	float r;
; 21   : 
; 22   : 	_asm{ 
; 23   : 			fld		x

	fld	DWORD PTR _x$[ebp]

; 24   : 			fabs	

	fabs

; 25   : 			fstp	r

	fstp	DWORD PTR _r$[ebp]

; 26   : 	}
; 27   : 	return r;

	fld	DWORD PTR _r$[ebp]

; 28   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F_ABS@@YAMM@Z ENDP					; F_ABS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\fastmath.h
;	COMDAT ?F_I32@@YAKM@Z
_TEXT	SEGMENT
_r$ = -4						; size = 4
_x$ = 8							; size = 4
?F_I32@@YAKM@Z PROC					; F_I32, COMDAT

; 7    : {	DWORD	r;

	push	ebp
	mov	ebp, esp
	push	ecx

; 8    : 	_asm{ 
; 9    : 			fld		x

	fld	DWORD PTR _x$[ebp]

; 10   : 			fistp	r

	fistp	DWORD PTR _r$[ebp]

; 11   : 	}
; 12   : 	return r;

	mov	eax, DWORD PTR _r$[ebp]

; 13   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F_I32@@YAKM@Z ENDP					; F_I32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ?D3DXMatrixIdentity@@YAPAUD3DXMATRIX@@PAU1@@Z
_TEXT	SEGMENT
_pOut$ = 8						; size = 4
?D3DXMatrixIdentity@@YAPAUD3DXMATRIX@@PAU1@@Z PROC	; D3DXMatrixIdentity, COMDAT

; 1562 : {

	push	ebp
	mov	ebp, esp

; 1563 : #ifdef D3DX_DEBUG
; 1564 :     if(!pOut)
; 1565 :         return NULL;
; 1566 : #endif
; 1567 : 
; 1568 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] = 
; 1569 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] = 
; 1570 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] = 
; 1571 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;

	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+ecx], xmm0
	mov	edx, 16					; 00000010H
	imul	edx, 3
	add	edx, DWORD PTR _pOut$[ebp]
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+eax], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 3
	add	ecx, DWORD PTR _pOut$[ebp]
	mov	edx, 4
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+edx], xmm0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+ecx], xmm0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _pOut$[ebp]
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+eax], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _pOut$[ebp]
	mov	edx, 4
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+edx], xmm0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+ecx], xmm0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	add	edx, DWORD PTR _pOut$[ebp]
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+eax], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _pOut$[ebp]
	mov	edx, 4
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+edx], xmm0
	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+ecx], xmm0
	mov	edx, 16					; 00000010H
	imul	edx, 0
	add	edx, DWORD PTR _pOut$[ebp]
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+eax], xmm0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	add	ecx, DWORD PTR _pOut$[ebp]
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+edx], xmm0

; 1572 : 
; 1573 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

	mov	eax, 16					; 00000010H
	imul	eax, 3
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	imul	ecx, 3
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+ecx], xmm0
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _pOut$[ebp]
	mov	eax, 4
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+eax], xmm0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _pOut$[ebp]
	mov	edx, 4
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+edx], xmm0
	mov	eax, 16					; 00000010H
	imul	eax, 0
	add	eax, DWORD PTR _pOut$[ebp]
	mov	ecx, 4
	imul	ecx, 0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+ecx], xmm0

; 1574 :     return pOut;

	mov	eax, DWORD PTR _pOut$[ebp]

; 1575 : }

	pop	ebp
	ret	0
?D3DXMatrixIdentity@@YAPAUD3DXMATRIX@@PAU1@@Z ENDP	; D3DXMatrixIdentity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
tv85 = -4						; size = 4
_pV1$ = 8						; size = 4
_pV2$ = 12						; size = 4
?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z PROC		; D3DXVec3Dot, COMDAT

; 1310 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1311 : #ifdef D3DX_DEBUG
; 1312 :     if(!pV1 || !pV2)
; 1313 :         return 0.0f;
; 1314 : #endif
; 1315 : 
; 1316 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

	mov	eax, DWORD PTR _pV1$[ebp]
	mov	ecx, DWORD PTR _pV2$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _pV1$[ebp]
	mov	eax, DWORD PTR _pV2$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _pV1$[ebp]
	mov	edx, DWORD PTR _pV2$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR tv85[ebp], xmm0
	fld	DWORD PTR tv85[ebp]

; 1317 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z ENDP		; D3DXVec3Dot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 199  :     D3DXMATRIX() {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 289  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 290  : }

	mov	esp, ebp
	pop	ebp
	ret	8
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 284  : }

	mov	esp, ebp
	pop	ebp
	ret	8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??GD3DXVECTOR3@@QBE?AU0@XZ PROC				; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx

; 274  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 275  :     return D3DXVECTOR3(-x, -y, -z);

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0D3DXVECTOR3@@QAE@MMM@Z		; D3DXVECTOR3::D3DXVECTOR3
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 276  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??GD3DXVECTOR3@@QBE?AU0@XZ ENDP				; D3DXVECTOR3::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 179  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 180  :     x = fx;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fx$[ebp]
	movss	DWORD PTR [eax], xmm0

; 181  :     y = fy;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fy$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 182  :     z = fz;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _fz$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 183  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dxsdk\include\d3dxmath.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 106  :     D3DXVECTOR3() {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1AList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1AList@@QAE@XZ PROC					; AList::~AList, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1AList@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ANode@@QAE@XZ			; ANode::~ANode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1AList@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1ANode@@QAE@XZ			; ANode::~ANode
__ehhandler$??1AList@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1AList@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1AList@@QAE@XZ ENDP					; AList::~AList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\alist.h
;	COMDAT ?CompareWith@ANode@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_n$ = 8							; size = 4
?CompareWith@ANode@@UAEHPAV1@@Z PROC			; ANode::CompareWith, COMDAT
; _this$ = ecx

; 13   : 	virtual int CompareWith(ANode *n) {return 0;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?CompareWith@ANode@@UAEHPAV1@@Z ENDP			; ANode::CompareWith
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GDrawableObject@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawableObject@@UAEPAXI@Z PROC			; DrawableObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawableObject@@UAE@XZ		; DrawableObject::~DrawableObject
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawableObject@@UAEPAXI@Z ENDP			; DrawableObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetPosition@DrawableObject@@QAEXPAUTpoint@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?SetPosition@DrawableObject@@QAEXPAUTpoint@@@Z PROC	; DrawableObject::SetPosition, COMDAT
; _this$ = ecx

; 82   : 	  void SetPosition(Tpoint *pos) {position=*pos;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPosition@DrawableObject@@QAEXPAUTpoint@@@Z ENDP	; DrawableObject::SetPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_list$ = 8						; size = 4
?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z PROC ; DrawableObject::SetParentList, COMDAT
; _this$ = ecx

; 70   : 	virtual	void SetParentList( ObjectDisplayList *list )	{ parentList = list; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParentList@DrawableObject@@MAEXPAVObjectDisplayList@@@Z ENDP ; DrawableObject::SetParentList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z PROC ; DrawableObject::GetRayHit, COMDAT
; _this$ = ecx

; 49   : 	virtual BOOL GetRayHit( const Tpoint*, const Tpoint*, Tpoint*, float = 1.0f ) { return FALSE; } ;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetRayHit@DrawableObject@@UAEHPBUTpoint@@0PAU2@M@Z ENDP ; DrawableObject::GetRayHit
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?Draw@DrawableObject@@UAEXPAVRender3D@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?Draw@DrawableObject@@UAEXPAVRender3D@@@Z PROC		; DrawableObject::Draw, COMDAT
; _this$ = ecx

; 45   : 	virtual void Draw( class Render3D* ) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Draw@DrawableObject@@UAEXPAVRender3D@@@Z ENDP		; DrawableObject::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetInhibitFlag@DrawableObject@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetInhibitFlag@DrawableObject@@UAEXH@Z PROC		; DrawableObject::SetInhibitFlag, COMDAT
; _this$ = ecx

; 42   : 	virtual void SetInhibitFlag( BOOL )				{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetInhibitFlag@DrawableObject@@UAEXH@Z ENDP		; DrawableObject::SetInhibitFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?SetLabel@DrawableObject@@UAEXPADK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetLabel@DrawableObject@@UAEXPADK@Z PROC		; DrawableObject::SetLabel, COMDAT
; _this$ = ecx

; 40   : 	virtual void SetLabel( char*, DWORD )	{};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetLabel@DrawableObject@@UAEXPADK@Z ENDP		; DrawableObject::SetLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ?GetRadarSign@DrawableObject@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRadarSign@DrawableObject@@UAEMXZ PROC		; DrawableObject::GetRadarSign, COMDAT
; _this$ = ecx

; 22   : 	virtual	float	GetRadarSign(void)		{ return 0.0f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRadarSign@DrawableObject@@UAEMXZ ENDP		; DrawableObject::GetRadarSign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ??1DrawableObject@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DrawableObject@@UAE@XZ PROC				; DrawableObject::~DrawableObject, COMDAT
; _this$ = ecx

; 19   : 	virtual ~DrawableObject()	{ ShiAssert( parentList == NULL ) };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableObject@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1DrawableObject@@UAE@XZ ENDP				; DrawableObject::~DrawableObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\drawobj.h
;	COMDAT ??0DrawableObject@@QAE@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??0DrawableObject@@QAE@M@Z PROC				; DrawableObject::DrawableObject, COMDAT
; _this$ = ecx

; 17   : 	DrawableObject( float s )	{ drawClassID = Default, scale = s, parentList = NULL, prev = next = NULL; test = 0.0;  };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawableObject@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	movss	DWORD PTR [edx+20], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+40], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0DrawableObject@@QAE@M@Z ENDP				; DrawableObject::DrawableObject
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT

; 537  :         {return (sinf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sinf
	add	esp, 4
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
__Z$1 = -8						; size = 4
__N$ = -4						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
??$_Pow_int@M@@YAMMH@Z PROC				; _Pow_int<float>, COMDAT

; 483  :         {unsigned int _N;

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 484  :         if (_Y >= 0)

	cmp	DWORD PTR __Y$[ebp], 0
	jl	SHORT $LN7@Pow_int

; 485  :                 _N = (unsigned int)_Y;

	mov	eax, DWORD PTR __Y$[ebp]
	mov	DWORD PTR __N$[ebp], eax

; 486  :         else

	jmp	SHORT $LN6@Pow_int
$LN7@Pow_int:

; 487  :                 _N = (unsigned int)(-_Y);

	mov	ecx, DWORD PTR __Y$[ebp]
	neg	ecx
	mov	DWORD PTR __N$[ebp], ecx
$LN6@Pow_int:

; 488  :         for (_Ty _Z = _Ty(1); ; _X *= _X)

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR __Z$1[ebp], xmm0
	jmp	SHORT $LN5@Pow_int
$LN4@Pow_int:
	movss	xmm0, DWORD PTR __X$[ebp]
	mulss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR __X$[ebp], xmm0
$LN5@Pow_int:

; 489  :                 {if ((_N & 1) != 0)

	mov	edx, DWORD PTR __N$[ebp]
	and	edx, 1
	je	SHORT $LN2@Pow_int

; 490  :                         _Z *= _X;

	movss	xmm0, DWORD PTR __Z$1[ebp]
	mulss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR __Z$1[ebp], xmm0
$LN2@Pow_int:

; 491  :                 if ((_N >>= 1) == 0)

	mov	eax, DWORD PTR __N$[ebp]
	shr	eax, 1
	mov	DWORD PTR __N$[ebp], eax
	jne	SHORT $LN1@Pow_int

; 492  :                         return (_Y < 0 ? _Ty(1) / _Z : _Z); }}

	cmp	DWORD PTR __Y$[ebp], 0
	jge	SHORT $LN10@Pow_int
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR __Z$1[ebp]
	movss	DWORD PTR tv74[ebp], xmm0
	jmp	SHORT $LN11@Pow_int
$LN10@Pow_int:
	movss	xmm0, DWORD PTR __Z$1[ebp]
	movss	DWORD PTR tv74[ebp], xmm0
$LN11@Pow_int:
	fld	DWORD PTR tv74[ebp]
	jmp	SHORT $LN3@Pow_int
$LN1@Pow_int:
	jmp	SHORT $LN4@Pow_int
$LN3@Pow_int:
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pow_int@M@@YAMMH@Z ENDP				; _Pow_int<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?pow@@YAMMH@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
?pow@@YAMMH@Z PROC					; pow, COMDAT

; 535  :         {return (_Pow_int(_X, _Y)); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Y$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	??$_Pow_int@M@@YAMMH@Z			; _Pow_int<float>
	add	esp, 8
	pop	ebp
	ret	0
?pow@@YAMMH@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?log10@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?log10@@YAMM@Z PROC					; log10, COMDAT

; 529  :         {return (log10f(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_log10f
	add	esp, 4
	pop	ebp
	ret	0
?log10@@YAMM@Z ENDP					; log10
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 517  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 511  :         {return (cosf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_cosf
	add	esp, 4
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?abs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?abs@@YAMM@Z PROC					; abs, COMDAT

; 499  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?abs@@YAMM@Z ENDP					; abs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 430  :         {return ((float)sin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _log10f
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_log10f	PROC						; COMDAT

; 422  :         {return ((float)log10((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_log10
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_log10f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 410  :         {return ((float)cos((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 402  :         {return ((float)asin((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_asin
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
END
