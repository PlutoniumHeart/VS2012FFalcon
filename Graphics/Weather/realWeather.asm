; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\Graphics\Weather\realWeather.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?WeatherQuality@RealWeather@@1MA		; RealWeather::WeatherQuality
PUBLIC	?WeatherQualityRate@RealWeather@@1MA		; RealWeather::WeatherQualityRate
PUBLIC	?WeatherQualityStep@RealWeather@@1KA		; RealWeather::WeatherQualityStep
PUBLIC	?WeatherQualityElapsed@RealWeather@@1KA		; RealWeather::WeatherQualityElapsed
PUBLIC	?litCloudColor@RealWeather@@1UTcolor@@A		; RealWeather::litCloudColor
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
_BSS	SEGMENT
?WeatherQuality@RealWeather@@1MA DD 01H DUP (?)		; RealWeather::WeatherQuality
?WeatherQualityRate@RealWeather@@1MA DD 01H DUP (?)	; RealWeather::WeatherQualityRate
?WeatherQualityStep@RealWeather@@1KA DD 01H DUP (?)	; RealWeather::WeatherQualityStep
?WeatherQualityElapsed@RealWeather@@1KA DD 01H DUP (?)	; RealWeather::WeatherQualityElapsed
?litCloudColor@RealWeather@@1UTcolor@@A DB 0cH DUP (?)	; RealWeather::litCloudColor
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
_DATA	SEGMENT
_matrix33_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	ORG $+4
_cloudPntList DD 0c5bcc000r			; -6040
	DD	0c4070000r			; -540
	DD	0c694ac00r			; -19030
	DD	0c6de1c00r			; -28430
	DD	0c4dfc000r			; -1790
	DD	046dcc800r			; 28260
	DD	047104200r			; 36930
	DD	045732000r			; 3890
	DD	04744ea00r			; 50410
	DD	045336000r			; 2870
	DD	0c4d48000r			; -1700
	DD	04736da00r			; 46810
	DD	0c763ee00r			; -58350
	DD	0c4d48000r			; -1700
	DD	0c64c1000r			; -13060
	DD	046f2bc00r			; 31070
	DD	045480000r			; 3200
	DD	0c7293800r			; -43320
	DD	0c7bdc400r			; -97160
	DD	0c4d48000r			; -1700
	DD	04576e000r			; 3950
	DD	0c792e000r			; -75200
	DD	0c4bb8000r			; -1500
	DD	047957400r			; 76520
	DD	04759ee00r			; 55790
	DD	0c5a1e000r			; -5180
	DD	0c7a24e00r			; -83100
	DD	0c7473800r			; -51000
	DD	0c3a00000r			; -320
	DD	0c7829100r			; -66850
	DD	047733400r			; 62260
	DD	0c3a00000r			; -320
	DD	047708200r			; 61570
	DD	0c7710e00r			; -61710
	DD	0c550c000r			; -3340
	DD	046fb7c00r			; 32190
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	0c5bcc000r			; -6040
	DD	0c7495400r			; -51540
	DD	0c694ac00r			; -19030
	DD	0c6a7a800r			; -21460
	DD	0c74b0200r			; -51970
	DD	0468e8000r			; 18240
	DD	047298800r			; 43400
	DD	0c74bf200r			; -52210
	DD	046bc7000r			; 24120
	DD	0c749f400r			; -51700
	DD	0c74bc000r			; -52160
	DD	046948400r			; 19010
	DD	0c605e800r			; -8570
	DD	0c7488200r			; -51330
	DD	0c74ca600r			; -52390
	DD	04731bc00r			; 45500
	DD	0c7509800r			; -53400
	DD	0c6725800r			; -15510
	DD	0c7719a00r			; -61850
	DD	0c7483200r			; -51250
	DD	047543a00r			; 54330
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	0c7a1ae00r			; -82780
	DD	0c749ea00r			; -51690
	DD	0c7bce300r			; -96710
	DD	0c6126800r			; -9370
	DD	0c7495400r			; -51540
	DD	043cd0000r			; 410
	DD	0c6a7a800r			; -21460
	DD	0c74a8a00r			; -51850
	DD	0473fae00r			; 49070
	DD	0457c8000r			; 4040
	DD	0c74e4a00r			; -52810
	DD	047871e00r			; 69180
	DD	0c6cbc000r			; -26080
	DD	0c74bc000r			; -52160
	DD	046984400r			; 19490
	DD	0452fa000r			; 2810
	DD	0c7488200r			; -51330
	DD	0c7081800r			; -34840
	DD	0c7719a00r			; -61850
	DD	0c749d600r			; -51670
	DD	047b17600r			; 90860
	DD	047553400r			; 54580
	DD	0c74ddc00r			; -52700
	DD	0479a5600r			; 79020
	DD	047a7e400r			; 85960
	DD	0c74c5600r			; -52310
	DD	0477d4800r			; 64840
	DD	0c7c44500r			; -100490
	DD	0c74d1400r			; -52500
	DD	047ac2600r			; 88140
	DD	047c04e00r			; 98460
	DD	0c74d1400r			; -52500
	DD	0c732a200r			; -45730
	DD	0467b9000r			; 16100
	DD	0c7487800r			; -51320
	DD	0c749a400r			; -51620
	DD	047636c00r			; 58220
	DD	0c74e0400r			; -52740
	DD	0c760b000r			; -57520
	DD	0c6126800r			; -9370
	DD	0c4070000r			; -540
	DD	043cd0000r			; 410
	DD	0c4e60000r			; -1840
	DD	0c6a30c00r			; -20870
	DD	0470a6600r			; 35430
	DD	0c7230c00r			; -41740
	DD	046924000r			; 18720
	DD	04797d600r			; 77740
	DD	0460d9000r			; 9060
	DD	0c616c800r			; -9650
	DD	0c7921300r			; -74790
_lightningPosList DD 041300000r			; 11
	DD	000000000r			; 0
	DD	040e00000r			; 7
	DD	040a00000r			; 5
	DD	041100000r			; 9
	DD	041000000r			; 8
	DD	041000000r			; 8
	DD	041600000r			; 14
	DD	041800000r			; 16
	DD	041a00000r			; 20
	DD	041200000r			; 10
	DD	041c00000r			; 24
	DD	041300000r			; 11
	DD	041d80000r			; 27
	DD	040c00000r			; 6
	DD	041f00000r			; 30
	DD	040e00000r			; 7
	DD	042040000r			; 33
	DD	03f800000r			; 1
	DD	042180000r			; 38
	DD	040a00000r			; 5
	DD	042280000r			; 42
	DD	040a00000r			; 5
	DD	042340000r			; 45
	DD	041400000r			; 12
	DD	042400000r			; 48
	DD	041a00000r			; 20
	DD	042500000r			; 52
	DD	041a00000r			; 20
	DD	042680000r			; 58
	DD	041b80000r			; 23
	DD	042740000r			; 61
	DD	041b00000r			; 22
	DD	0427c0000r			; 63
	DD	041b00000r			; 22
	DD	042840000r			; 66
	DD	041c80000r			; 25
	DD	042880000r			; 68
	DD	041a00000r			; 20
	DD	0428c0000r			; 70
	DD	041c00000r			; 24
	DD	042960000r			; 75
	DD	041c00000r			; 24
	DD	0429a0000r			; 77
	DD	041f80000r			; 31
	DD	042a00000r			; 80
	DD	041f80000r			; 31
	DD	042a60000r			; 83
	DD	042040000r			; 33
	DD	042b00000r			; 88
	DD	041f80000r			; 31
	DD	042b80000r			; 92
	DD	0423c0000r			; 47
	DD	042ce0000r			; 103
	DD	042380000r			; 46
	DD	042d20000r			; 105
	DD	0423c0000r			; 47
	DD	042d60000r			; 107
	DD	042340000r			; 45
	DD	042e00000r			; 112
	DD	042400000r			; 48
	DD	042e40000r			; 114
	DD	042380000r			; 46
	DD	042ea0000r			; 117
	DD	0422c0000r			; 43
	DD	043000000r			; 128
_matrix44_ident DD 03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
_DATA	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
CONST	SEGMENT
_NEAR_CLIP DD	03f800000r			; 1
_Q_SCALE DD	03a51b717r			; 0.0008
_UVCoords4X4 DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03e800000r			; 0.25
	DD	000000000r			; 0
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	000000000r			; 0
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	000000000r			; 0
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	000000000r			; 0
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f800000r			; 1
	DD	03e800000r			; 0.25
	DD	03f800000r			; 1
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	000000000r			; 0
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03e800000r			; 0.25
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03e800000r			; 0.25
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	03e800000r			; 0.25
	DD	03f800000r			; 1
	DD	03f000000r			; 0.5
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f800000r			; 1
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	03f400000r			; 0.75
	DD	03f400000r			; 0.75
	DD	03f800000r			; 1
	DD	03f400000r			; 0.75
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f400000r			; 0.75
	DD	03f800000r			; 1
_SunnyDrawOrder DD 04H
	DD	03H
	DD	02H
	DD	01H
	DD	00H
	DD	05H
	ORG $+4
	DD	04H
	DD	03H
	DD	00H
	DD	01H
	DD	02H
	DD	05H
	ORG $+4
	DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	ORG $+4
_L_2	DD	03f317218r			; 0.693147
_PoorDrawOrder DD 01H
	DD	00H
	DD	05H
	ORG $+16
	DD	04H
	DD	03H
	DD	01H
	DD	02H
	DD	05H
	ORG $+8
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	ORG $+8
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
PUBLIC	_fabsf
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?TexHandle@Texture@@QAEKXZ			; Texture::TexHandle
PUBLIC	?F_I32@@YAKM@Z					; F_I32
PUBLIC	?GetClockTime@TimeManager@@QAEKXZ		; TimeManager::GetClockTime
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
PUBLIC	?glConvertToRadian@@YAMH@Z			; glConvertToRadian
PUBLIC	?ShadowsOn@PlayerOptionsClass@@QAEHXZ		; PlayerOptionsClass::ShadowsOn
PUBLIC	?X@TViewPoint@@QAEMXZ				; TViewPoint::X
PUBLIC	?Y@TViewPoint@@QAEMXZ				; TViewPoint::Y
PUBLIC	?Z@TViewPoint@@QAEMXZ				; TViewPoint::Z
PUBLIC	?GetRangeClipFlags@@YAKMM@Z			; GetRangeClipFlags
PUBLIC	?GetHorizontalClipFlags@@YAKMM@Z		; GetHorizontalClipFlags
PUBLIC	?GetVerticalClipFlags@@YAKMM@Z			; GetVerticalClipFlags
PUBLIC	?SetScaleFactor@CTimeOfDay@@QAEXM@Z		; CTimeOfDay::SetScaleFactor
PUBLIC	?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ; CTimeOfDay::GetTextureLightingColor
PUBLIC	?GetDiffuseValue@CTimeOfDay@@QAEMXZ		; CTimeOfDay::GetDiffuseValue
PUBLIC	?GetSunPitch@CTimeOfDay@@QAEHXZ			; CTimeOfDay::GetSunPitch
PUBLIC	?GetSunYaw@CTimeOfDay@@QAEHXZ			; CTimeOfDay::GetSunYaw
PUBLIC	?GenerateFastRandom@@YAJXZ			; GenerateFastRandom
PUBLIC	?PRANDFloat@@YAMXZ				; PRANDFloat
PUBLIC	?PRANDFloatPos@@YAMXZ				; PRANDFloatPos
PUBLIC	?Sin@@YAMM@Z					; Sin
PUBLIC	?Cos@@YAMM@Z					; Cos
PUBLIC	?FabsF@@YAMM@Z					; FabsF
PUBLIC	?SqrtF@@YAMM@Z					; SqrtF
PUBLIC	?Atan@@YAMMM@Z					; Atan
PUBLIC	??_EReal3DCloud@@QAEPAXI@Z			; Real3DCloud::`vector deleting destructor'
PUBLIC	??_EReal2DCloud@@QAEPAXI@Z			; Real2DCloud::`vector deleting destructor'
PUBLIC	??0RealWeather@@QAE@XZ				; RealWeather::RealWeather
PUBLIC	??1RealWeather@@UAE@XZ				; RealWeather::~RealWeather
PUBLIC	?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z ; RealWeather::Setup
PUBLIC	?SetRenderer@RealWeather@@QAEXPAVRenderOTW@@@Z	; RealWeather::SetRenderer
PUBLIC	?RefreshWeather@RealWeather@@QAEXPAVRenderOTW@@@Z ; RealWeather::RefreshWeather
PUBLIC	?UpdateLighting@RealWeather@@QAEXXZ		; RealWeather::UpdateLighting
PUBLIC	?Draw@RealWeather@@QAEXXZ			; RealWeather::Draw
PUBLIC	?DrawCumulus@RealWeather@@QAEXPAUTpoint@@HM@Z	; RealWeather::DrawCumulus
PUBLIC	?DrawStratus@RealWeather@@QAEXPAUTpoint@@H@Z	; RealWeather::DrawStratus
PUBLIC	?DrawStratus2@RealWeather@@QAEXPAUTpoint@@H@Z	; RealWeather::DrawStratus2
PUBLIC	?SetGreenMode@RealWeather@@QAEXH@Z		; RealWeather::SetGreenMode
PUBLIC	?SetupTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z ; RealWeather::SetupTexturesOnDevice
PUBLIC	?ReleaseTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z ; RealWeather::ReleaseTexturesOnDevice
PUBLIC	?Cleanup@RealWeather@@QAEXXZ			; RealWeather::Cleanup
PUBLIC	?UpdateCondition@RealWeather@@QAEXXZ		; RealWeather::UpdateCondition
PUBLIC	?GenerateClouds@RealWeather@@IAEX_N@Z		; RealWeather::GenerateClouds
PUBLIC	?UpdateCells@RealWeather@@IAEXXZ		; RealWeather::UpdateCells
PUBLIC	?UpdateDrawables@RealWeather@@IAEXXZ		; RealWeather::UpdateDrawables
PUBLIC	?DrawRain@RealWeather@@IAEXXZ			; RealWeather::DrawRain
PUBLIC	?DoLightning@RealWeather@@IAEXXZ		; RealWeather::DoLightning
PUBLIC	?GenerateCloud@RealWeather@@IAEXKK@Z		; RealWeather::GenerateCloud
PUBLIC	?SetDrawingOrder@RealWeather@@QAEXM@Z		; RealWeather::SetDrawingOrder
PUBLIC	?InsideOvercast@RealWeather@@QAE_NXZ		; RealWeather::InsideOvercast
PUBLIC	?UnderOvercast@RealWeather@@QAE_NXZ		; RealWeather::UnderOvercast
PUBLIC	?GetObserverOrder@RealWeather@@IAEKM@Z		; RealWeather::GetObserverOrder
PUBLIC	?TimeUpdateCallback@RealWeather@@KAXPAX@Z	; RealWeather::TimeUpdateCallback
PUBLIC	?UpdateWeatherQuality@RealWeather@@KAXXZ	; RealWeather::UpdateWeatherQuality
PUBLIC	?ReadWeather@RealWeather@@IAE_NXZ		; RealWeather::ReadWeather
PUBLIC	??_GRealWeather@@UAEPAXI@Z			; RealWeather::`scalar deleting destructor'
PUBLIC	?RotatePoint@@YAXPAUTpoint@@MMM@Z		; RotatePoint
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA	; `GenerateFastRandom'::`2'::LastRandom
PUBLIC	??_7RealWeather@@6B@				; RealWeather::`vftable'
PUBLIC	??_C@_0BL@GMLGCIEJ@campaign?2save?2mpwcells?4bin?$AA@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_08MICGGOOA@RAIN?4DDS?$AA@			; `string'
PUBLIC	??_C@_0N@NHIDOGKP@CUMULUOV?4DDS?$AA@		; `string'
PUBLIC	??_C@_0N@FEHPACMF@LIGHTNGB?4DDS?$AA@		; `string'
PUBLIC	??_C@_0O@BNKFPMP@CirrusCum?4dds?$AA@		; `string'
PUBLIC	??_C@_0M@OHFECGJE@Cumulus?4dds?$AA@		; `string'
PUBLIC	??_C@_0N@IGLHMJPA@C?3?2metar?4txt?$AA@		; `string'
PUBLIC	??_C@_02BMJICGCB@rt?$AA@			; `string'
PUBLIC	??_C@_04DEJLICJF@BIEG?$AA@			; `string'
PUBLIC	??_C@_04MIHHNFAL@RKSS?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_01MIFGBAGJ@?$CL?$AA@			; `string'
PUBLIC	??_C@_02IGOEKCHH@RA?$AA@			; `string'
PUBLIC	??_C@_02DHHJLGCP@DZ?$AA@			; `string'
PUBLIC	??_C@_02LONEIP@SN?$AA@				; `string'
PUBLIC	??_C@_02PNOGICHO@GR?$AA@			; `string'
PUBLIC	??_C@_02OEPNLDDP@GS?$AA@			; `string'
PUBLIC	??_C@_02DAMOAIFE@PL?$AA@			; `string'
PUBLIC	??_C@_02NBHMGPMG@SG?$AA@			; `string'
PUBLIC	??_C@_02KEKBIMGE@IC?$AA@			; `string'
PUBLIC	??_C@_02NAHCJHOC@UP?$AA@			; `string'
PUBLIC	??_C@_02MLJBAOFN@FG?$AA@			; `string'
PUBLIC	??_C@_02DOGDEPEL@HZ?$AA@			; `string'
PUBLIC	??_C@_02LDGFHOIO@FU?$AA@			; `string'
PUBLIC	??_C@_02HHLOOEA@PY?$AA@				; `string'
PUBLIC	??_C@_02PLCNEAJF@BR?$AA@			; `string'
PUBLIC	??_C@_02IHCGMIEA@SA?$AA@			; `string'
PUBLIC	??_C@_02LAOBKKOA@DU?$AA@			; `string'
PUBLIC	??_C@_02IBONAKKL@VA?$AA@			; `string'
PUBLIC	??_C@_03KGBHJMEC@CLR?$AA@			; `string'
PUBLIC	??_C@_03BANOIDMC@NSC?$AA@			; `string'
PUBLIC	??_C@_03KAJIPOEI@SKC?$AA@			; `string'
PUBLIC	??_C@_03ODGPKDLK@FEW?$AA@			; `string'
PUBLIC	??_C@_03KLAICLGG@SCT?$AA@			; `string'
PUBLIC	??_C@_03PNJDLAPP@BKN?$AA@			; `string'
PUBLIC	??_C@_03KOKJCGEM@OVC?$AA@			; `string'
PUBLIC	??_C@_03CPMECCJO@TCU?$AA@			; `string'
PUBLIC	??_C@_02CLJDIHEM@SM?$AA@			; `string'
PUBLIC	??_C@_04FBHFJALO@VCSH?$AA@			; `string'
PUBLIC	??_C@_04KLKMEFDP@TSRA?$AA@			; `string'
PUBLIC	??_C@_04DNPBDGJL@9999?$AA@			; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_01FHEEJDEE@A?$AA@				; `string'
PUBLIC	??_C@_01BNIGIBBF@Q?$AA@				; `string'
PUBLIC	??_C@_05CEEPFLCK@CAVOK?$AA@			; `string'
PUBLIC	??_C@_02LACNDIPD@CB?$AA@			; `string'
PUBLIC	??_C@_01POHCFINO@Z?$AA@				; `string'
PUBLIC	??_C@_02KCKGNMJM@KT?$AA@			; `string'
PUBLIC	??_C@_03JNKKKHME@VRB?$AA@			; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_03EENJDJHF@?5?0?4?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RealWeather@@6B@				; RealWeather::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRealWeather@@@8				; RealWeather `RTTI Type Descriptor'
PUBLIC	??_R3RealWeather@@8				; RealWeather::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RealWeather@@8				; RealWeather::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RealWeather@@8			; RealWeather::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3727c5ac
PUBLIC	__real@38d1b717
PUBLIC	__real@39c90fdb
PUBLIC	__real@3a800000
PUBLIC	__real@3a83126f
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3c23d70a
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3ccccccd
PUBLIC	__real@3cf1e8e6
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d99999a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e99999a
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f19999a
PUBLIC	__real@3f333333
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f666666
PUBLIC	__real@3f694af5
PUBLIC	__real@3f733333
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3f7fc000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fe66666
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40c90fdb
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41f00000
PUBLIC	__real@42480000
PUBLIC	__real@42c80000
PUBLIC	__real@43000000
PUBLIC	__real@43480000
PUBLIC	__real@437fe666
PUBLIC	__real@43fa0000
PUBLIC	__real@447a0000
PUBLIC	__real@44bb8000
PUBLIC	__real@453b8000
PUBLIC	__real@457a0000
PUBLIC	__real@459c4000
PUBLIC	__real@461c4000
PUBLIC	__real@469c4000
PUBLIC	__real@4756d800
PUBLIC	__real@477fff00
PUBLIC	__real@bf800000
PUBLIC	__real@c66a6000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_atoi:PROC
EXTRN	_rand:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_strncmp:PROC
EXTRN	_strncpy:PROC
EXTRN	_strtok:PROC
EXTRN	_fabs:PROC
EXTRN	_fclose:PROC
EXTRN	_fgets:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_sprintf:PROC
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?SelectTexture1@ContextMPR@@QAEXH@Z:PROC	; ContextMPR::SelectTexture1
EXTRN	?RestoreState@ContextMPR@@QAEXH@Z:PROC		; ContextMPR::RestoreState
EXTRN	??0Texture@@QAE@XZ:PROC				; Texture::Texture
EXTRN	??1Texture@@QAE@XZ:PROC				; Texture::~Texture
EXTRN	?LoadAndCreate@Texture@@QAEHPADK@Z:PROC		; Texture::LoadAndCreate
EXTRN	?FreeAll@Texture@@QAEXXZ:PROC			; Texture::FreeAll
EXTRN	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z:PROC ; CDXEngine::DX2D_AddQuad
EXTRN	?DX2D_SetDrawOrder@CDXEngine@@QAEXPAK@Z:PROC	; CDXEngine::DX2D_SetDrawOrder
EXTRN	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z:PROC	; CDXEngine::DX2D_SetupSquareCx
EXTRN	?Refresh@TimeManager@@QAEXXZ:PROC		; TimeManager::Refresh
EXTRN	?RegisterTimeUpdateCB@TimeManager@@QAEXP6AXPAX@Z0@Z:PROC ; TimeManager::RegisterTimeUpdateCB
EXTRN	?ReleaseTimeUpdateCB@TimeManager@@QAEXP6AXPAX@Z0@Z:PROC ; TimeManager::ReleaseTimeUpdateCB
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	_MonoPrint:PROC
EXTRN	_F4SoundFXSetPos:PROC
EXTRN	?GetGroundLevel@TViewPoint@@QAEMMMPAUTpoint@@PAH@Z:PROC ; TViewPoint::GetGroundLevel
EXTRN	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z:PROC ; Render3D::TransformPointToView
EXTRN	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z:PROC ; Render3D::TransformPointToViewSwapped
EXTRN	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z:PROC ; Render3D::TransformBillboardPoint
EXTRN	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z:PROC ; Render3D::DrawSquare
EXTRN	?GetLightDirection@CTimeOfDay@@QAEXPAUTpoint@@@Z:PROC ; CTimeOfDay::GetLightDirection
EXTRN	?UpdateWeatherColors@CTimeOfDay@@QAEXK@Z:PROC	; CTimeOfDay::UpdateWeatherColors
EXTRN	?Update@Drawable3DCloud@@QAEXPAUTpoint@@H@Z:PROC ; Drawable3DCloud::Update
EXTRN	?SetGreenMode@Drawable3DCloud@@SAXH@Z:PROC	; Drawable3DCloud::SetGreenMode
EXTRN	?SetCloudColor@Drawable3DCloud@@SAXPAUTcolor@@@Z:PROC ; Drawable3DCloud::SetCloudColor
EXTRN	??0Real3DCloud@@QAE@XZ:PROC			; Real3DCloud::Real3DCloud
EXTRN	??1Real3DCloud@@QAE@XZ:PROC			; Real3DCloud::~Real3DCloud
EXTRN	?Setup@Real3DCloud@@QAEXPAVObjectDisplayList@@@Z:PROC ; Real3DCloud::Setup
EXTRN	?Cleanup@Real3DCloud@@QAEXXZ:PROC		; Real3DCloud::Cleanup
EXTRN	?SetGreenMode@Drawable2DCloud@@SAXH@Z:PROC	; Drawable2DCloud::SetGreenMode
EXTRN	?SetCloudColor@Drawable2DCloud@@SAXPAUTcolor@@@Z:PROC ; Drawable2DCloud::SetCloudColor
EXTRN	??0Real2DCloud@@QAE@XZ:PROC			; Real2DCloud::Real2DCloud
EXTRN	??1Real2DCloud@@QAE@XZ:PROC			; Real2DCloud::~Real2DCloud
EXTRN	?Setup@Real2DCloud@@QAEXPAVObjectDisplayList@@@Z:PROC ; Real2DCloud::Setup
EXTRN	?Cleanup@Real2DCloud@@QAEXXZ:PROC		; Real2DCloud::Cleanup
EXTRN	??_ERealWeather@@UAEPAXI@Z:PROC			; RealWeather::`vector deleting destructor'
EXTRN	?SetGreenMode@DrawableTrail@@SAXH@Z:PROC	; DrawableTrail::SetGreenMode
EXTRN	?TimeOfDayGeneral@@YAHXZ:PROC			; TimeOfDayGeneral
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheDXEngine@@3VCDXEngine@@A:BYTE		; TheDXEngine
EXTRN	?TheTimeManager@@3VTimeManager@@A:BYTE		; TheTimeManager
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?SimLibElapsedTime@@3KA:DWORD			; SimLibElapsedTime
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?TheTimeOfDay@@3VCTimeOfDay@@A:BYTE		; TheTimeOfDay
EXTRN	?realWeather@@3PAVRealWeather@@A:DWORD		; realWeather
EXTRN	?DisplayOptions@@3VDisplayOptionsClass@@A:BYTE	; DisplayOptions
EXTRN	?g_nGfxFix@@3HA:DWORD				; g_nGfxFix
EXTRN	?g_bHearThunder@@3_NA:BYTE			; g_bHearThunder
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA
_BSS	SEGMENT
?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA DD 01H DUP (?) ; `GenerateFastRandom'::`2'::LastRandom
_BSS	ENDS
;	COMDAT ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA
_BSS	SEGMENT
?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA DD 01H DUP (?) ; `RealWeather::DoLightning'::`46'::uid
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c66a6000
CONST	SEGMENT
__real@c66a6000 DD 0c66a6000r			; -15000
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@477fff00
CONST	SEGMENT
__real@477fff00 DD 0477fff00r			; 65535
CONST	ENDS
;	COMDAT __real@4756d800
CONST	SEGMENT
__real@4756d800 DD 04756d800r			; 55000
CONST	ENDS
;	COMDAT __real@469c4000
CONST	SEGMENT
__real@469c4000 DD 0469c4000r			; 20000
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@457a0000
CONST	SEGMENT
__real@457a0000 DD 0457a0000r			; 4000
CONST	ENDS
;	COMDAT __real@453b8000
CONST	SEGMENT
__real@453b8000 DD 0453b8000r			; 3000
CONST	ENDS
;	COMDAT __real@44bb8000
CONST	SEGMENT
__real@44bb8000 DD 044bb8000r			; 1500
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@437fe666
CONST	SEGMENT
__real@437fe666 DD 0437fe666r			; 255.9
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe66666
CONST	SEGMENT
__real@3fe66666 DD 03fe66666r			; 1.8
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fc000
CONST	SEGMENT
__real@3f7fc000 DD 03f7fc000r			; 0.999023
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3f733333
CONST	SEGMENT
__real@3f733333 DD 03f733333r			; 0.95
CONST	ENDS
;	COMDAT __real@3f694af5
CONST	SEGMENT
__real@3f694af5 DD 03f694af5r			; 0.9113
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d99999a
CONST	SEGMENT
__real@3d99999a DD 03d99999ar			; 0.075
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@3cf1e8e6
CONST	SEGMENT
__real@3cf1e8e6 DD 03cf1e8e6r			; 0.02953
CONST	ENDS
;	COMDAT __real@3ccccccd
CONST	SEGMENT
__real@3ccccccd DD 03ccccccdr			; 0.025
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@3a800000
CONST	SEGMENT
__real@3a800000 DD 03a800000r			; 0.000976563
CONST	ENDS
;	COMDAT __real@39c90fdb
CONST	SEGMENT
__real@39c90fdb DD 039c90fdbr			; 0.000383495
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-005
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@RealWeather@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RealWeather@@8 DD FLAT:??_R0?AVRealWeather@@@8 ; RealWeather::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RealWeather@@8
rdata$r	ENDS
;	COMDAT ??_R2RealWeather@@8
rdata$r	SEGMENT
??_R2RealWeather@@8 DD FLAT:??_R1A@?0A@EA@RealWeather@@8 ; RealWeather::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3RealWeather@@8
rdata$r	SEGMENT
??_R3RealWeather@@8 DD 00H				; RealWeather::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2RealWeather@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRealWeather@@@8
_DATA	SEGMENT
??_R0?AVRealWeather@@@8 DD FLAT:??_7type_info@@6B@	; RealWeather `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRealWeather@@', 00H
_DATA	ENDS
;	COMDAT ??_R4RealWeather@@6B@
rdata$r	SEGMENT
??_R4RealWeather@@6B@ DD 00H				; RealWeather::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRealWeather@@@8
	DD	FLAT:??_R3RealWeather@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03EENJDJHF@?5?0?4?$AA@
CONST	SEGMENT
??_C@_03EENJDJHF@?5?0?4?$AA@ DB ' ,.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JNKKKHME@VRB?$AA@
CONST	SEGMENT
??_C@_03JNKKKHME@VRB?$AA@ DB 'VRB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCKGNMJM@KT?$AA@
CONST	SEGMENT
??_C@_02KCKGNMJM@KT?$AA@ DB 'KT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01POHCFINO@Z?$AA@
CONST	SEGMENT
??_C@_01POHCFINO@Z?$AA@ DB 'Z', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LACNDIPD@CB?$AA@
CONST	SEGMENT
??_C@_02LACNDIPD@CB?$AA@ DB 'CB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CEEPFLCK@CAVOK?$AA@
CONST	SEGMENT
??_C@_05CEEPFLCK@CAVOK?$AA@ DB 'CAVOK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01BNIGIBBF@Q?$AA@
CONST	SEGMENT
??_C@_01BNIGIBBF@Q?$AA@ DB 'Q', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FHEEJDEE@A?$AA@
CONST	SEGMENT
??_C@_01FHEEJDEE@A?$AA@ DB 'A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DNPBDGJL@9999?$AA@
CONST	SEGMENT
??_C@_04DNPBDGJL@9999?$AA@ DB '9999', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KLKMEFDP@TSRA?$AA@
CONST	SEGMENT
??_C@_04KLKMEFDP@TSRA?$AA@ DB 'TSRA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FBHFJALO@VCSH?$AA@
CONST	SEGMENT
??_C@_04FBHFJALO@VCSH?$AA@ DB 'VCSH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CLJDIHEM@SM?$AA@
CONST	SEGMENT
??_C@_02CLJDIHEM@SM?$AA@ DB 'SM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CPMECCJO@TCU?$AA@
CONST	SEGMENT
??_C@_03CPMECCJO@TCU?$AA@ DB 'TCU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KOKJCGEM@OVC?$AA@
CONST	SEGMENT
??_C@_03KOKJCGEM@OVC?$AA@ DB 'OVC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNJDLAPP@BKN?$AA@
CONST	SEGMENT
??_C@_03PNJDLAPP@BKN?$AA@ DB 'BKN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KLAICLGG@SCT?$AA@
CONST	SEGMENT
??_C@_03KLAICLGG@SCT?$AA@ DB 'SCT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ODGPKDLK@FEW?$AA@
CONST	SEGMENT
??_C@_03ODGPKDLK@FEW?$AA@ DB 'FEW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KAJIPOEI@SKC?$AA@
CONST	SEGMENT
??_C@_03KAJIPOEI@SKC?$AA@ DB 'SKC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BANOIDMC@NSC?$AA@
CONST	SEGMENT
??_C@_03BANOIDMC@NSC?$AA@ DB 'NSC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGBHJMEC@CLR?$AA@
CONST	SEGMENT
??_C@_03KGBHJMEC@CLR?$AA@ DB 'CLR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IBONAKKL@VA?$AA@
CONST	SEGMENT
??_C@_02IBONAKKL@VA?$AA@ DB 'VA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LAOBKKOA@DU?$AA@
CONST	SEGMENT
??_C@_02LAOBKKOA@DU?$AA@ DB 'DU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IHCGMIEA@SA?$AA@
CONST	SEGMENT
??_C@_02IHCGMIEA@SA?$AA@ DB 'SA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PLCNEAJF@BR?$AA@
CONST	SEGMENT
??_C@_02PLCNEAJF@BR?$AA@ DB 'BR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHLOOEA@PY?$AA@
CONST	SEGMENT
??_C@_02HHLOOEA@PY?$AA@ DB 'PY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LDGFHOIO@FU?$AA@
CONST	SEGMENT
??_C@_02LDGFHOIO@FU?$AA@ DB 'FU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DOGDEPEL@HZ?$AA@
CONST	SEGMENT
??_C@_02DOGDEPEL@HZ?$AA@ DB 'HZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MLJBAOFN@FG?$AA@
CONST	SEGMENT
??_C@_02MLJBAOFN@FG?$AA@ DB 'FG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAHCJHOC@UP?$AA@
CONST	SEGMENT
??_C@_02NAHCJHOC@UP?$AA@ DB 'UP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEKBIMGE@IC?$AA@
CONST	SEGMENT
??_C@_02KEKBIMGE@IC?$AA@ DB 'IC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NBHMGPMG@SG?$AA@
CONST	SEGMENT
??_C@_02NBHMGPMG@SG?$AA@ DB 'SG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DAMOAIFE@PL?$AA@
CONST	SEGMENT
??_C@_02DAMOAIFE@PL?$AA@ DB 'PL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OEPNLDDP@GS?$AA@
CONST	SEGMENT
??_C@_02OEPNLDDP@GS?$AA@ DB 'GS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PNOGICHO@GR?$AA@
CONST	SEGMENT
??_C@_02PNOGICHO@GR?$AA@ DB 'GR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LONEIP@SN?$AA@
CONST	SEGMENT
??_C@_02LONEIP@SN?$AA@ DB 'SN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHHJLGCP@DZ?$AA@
CONST	SEGMENT
??_C@_02DHHJLGCP@DZ?$AA@ DB 'DZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IGOEKCHH@RA?$AA@
CONST	SEGMENT
??_C@_02IGOEKCHH@RA?$AA@ DB 'RA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MIFGBAGJ@?$CL?$AA@
CONST	SEGMENT
??_C@_01MIFGBAGJ@?$CL?$AA@ DB '+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MIHHNFAL@RKSS?$AA@
CONST	SEGMENT
??_C@_04MIHHNFAL@RKSS?$AA@ DB 'RKSS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DEJLICJF@BIEG?$AA@
CONST	SEGMENT
??_C@_04DEJLICJF@BIEG?$AA@ DB 'BIEG', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02BMJICGCB@rt?$AA@
CONST	SEGMENT
??_C@_02BMJICGCB@rt?$AA@ DB 'rt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IGLHMJPA@C?3?2metar?4txt?$AA@
CONST	SEGMENT
??_C@_0N@IGLHMJPA@C?3?2metar?4txt?$AA@ DB 'C:\metar.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHFECGJE@Cumulus?4dds?$AA@
CONST	SEGMENT
??_C@_0M@OHFECGJE@Cumulus?4dds?$AA@ DB 'Cumulus.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNKFPMP@CirrusCum?4dds?$AA@
CONST	SEGMENT
??_C@_0O@BNKFPMP@CirrusCum?4dds?$AA@ DB 'CirrusCum.dds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEHPACMF@LIGHTNGB?4DDS?$AA@
CONST	SEGMENT
??_C@_0N@FEHPACMF@LIGHTNGB?4DDS?$AA@ DB 'LIGHTNGB.DDS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NHIDOGKP@CUMULUOV?4DDS?$AA@
CONST	SEGMENT
??_C@_0N@NHIDOGKP@CUMULUOV?4DDS?$AA@ DB 'CUMULUOV.DDS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MICGGOOA@RAIN?4DDS?$AA@
CONST	SEGMENT
??_C@_08MICGGOOA@RAIN?4DDS?$AA@ DB 'RAIN.DDS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GMLGCIEJ@campaign?2save?2mpwcells?4bin?$AA@
CONST	SEGMENT
??_C@_0BL@GMLGCIEJ@campaign?2save?2mpwcells?4bin?$AA@ DB 'campaign\save\m'
	DB	'pwcells.bin', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7RealWeather@@6B@
CONST	SEGMENT
??_7RealWeather@@6B@ DD FLAT:??_R4RealWeather@@6B@	; RealWeather::`vftable'
	DD	FLAT:??_ERealWeather@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z$1
__unwindtable$??0RealWeather@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RealWeather@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0RealWeather@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0RealWeather@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0RealWeather@@QAE@XZ$3
__ehfuncinfo$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1RealWeather@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1RealWeather@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0RealWeather@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0RealWeather@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1RealWeather@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1RealWeather@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1RealWeather@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1RealWeather@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1RealWeather@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1RealWeather@@UAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\realweather.h
;	COMDAT ?RotatePoint@@YAXPAUTpoint@@MMM@Z
_TEXT	SEGMENT
_s_x$ = -76						; size = 4
_s_y$ = -72						; size = 4
_s_z$ = -68						; size = 4
_costha$ = -64						; size = 4
_sinpsi$ = -60						; size = 4
_sinphi$ = -56						; size = 4
_cospsi$ = -52						; size = 4
_sintha$ = -48						; size = 4
_cosphi$ = -44						; size = 4
_tRot$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_t$ = 8							; size = 4
_p$ = 12						; size = 4
_r$ = 16						; size = 4
_y$ = 20						; size = 4
?RotatePoint@@YAXPAUTpoint@@MMM@Z PROC			; RotatePoint, COMDAT

; 644  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 645  : 	Trotation tRot;
; 646  : 	float costha,sintha,cosphi,sinphi,cospsi,sinpsi;
; 647  : 
; 648  : 	costha = Cos(p);

	push	ecx
	movss	xmm0, DWORD PTR _p$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Cos@@YAMM@Z				; Cos
	add	esp, 4
	fstp	DWORD PTR _costha$[ebp]

; 649  : 	sintha = Sin(p);

	push	ecx
	movss	xmm0, DWORD PTR _p$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Sin@@YAMM@Z				; Sin
	add	esp, 4
	fstp	DWORD PTR _sintha$[ebp]

; 650  : 	cosphi = Cos(r);

	push	ecx
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Cos@@YAMM@Z				; Cos
	add	esp, 4
	fstp	DWORD PTR _cosphi$[ebp]

; 651  : 	sinphi = Sin(r);

	push	ecx
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Sin@@YAMM@Z				; Sin
	add	esp, 4
	fstp	DWORD PTR _sinphi$[ebp]

; 652  : 	cospsi = Cos(y);

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Cos@@YAMM@Z				; Cos
	add	esp, 4
	fstp	DWORD PTR _cospsi$[ebp]

; 653  : 	sinpsi = Sin(y);

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Sin@@YAMM@Z				; Sin
	add	esp, 4
	fstp	DWORD PTR _sinpsi$[ebp]

; 654  : 
; 655  : 	tRot.M11 = cospsi*costha;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	movss	DWORD PTR _tRot$[ebp], xmm0

; 656  : 	tRot.M21 = sinpsi*costha;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _costha$[ebp]
	movss	DWORD PTR _tRot$[ebp+12], xmm0

; 657  : 	tRot.M31 = -sintha;

	movss	xmm0, DWORD PTR _sintha$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _tRot$[ebp+24], xmm0

; 658  : 
; 659  : 	tRot.M12 = -sinpsi*cosphi+cospsi*sintha*sinphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _tRot$[ebp+4], xmm0

; 660  : 	tRot.M22 = cospsi*cosphi+sinpsi*sintha*sinphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _sinphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _tRot$[ebp+16], xmm0

; 661  : 	tRot.M32 = costha*sinphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	DWORD PTR _tRot$[ebp+28], xmm0

; 662  : 
; 663  : 	tRot.M13 = sinpsi*sinphi+cospsi*sintha*cosphi;

	movss	xmm0, DWORD PTR _sinpsi$[ebp]
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _cospsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _tRot$[ebp+8], xmm0

; 664  : 	tRot.M23 = -cospsi*sinphi+sinpsi*sintha*cosphi;

	movss	xmm0, DWORD PTR _cospsi$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _sinphi$[ebp]
	movss	xmm1, DWORD PTR _sinpsi$[ebp]
	mulss	xmm1, DWORD PTR _sintha$[ebp]
	mulss	xmm1, DWORD PTR _cosphi$[ebp]
	addss	xmm0, xmm1
	movss	DWORD PTR _tRot$[ebp+20], xmm0

; 665  : 	tRot.M33 = costha*cosphi;

	movss	xmm0, DWORD PTR _costha$[ebp]
	mulss	xmm0, DWORD PTR _cosphi$[ebp]
	movss	DWORD PTR _tRot$[ebp+32], xmm0

; 666  : 
; 667  :  	register float s_x = tRot.M11*t->x+tRot.M12*t->y+tRot.M13*t->z;

	mov	eax, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _tRot$[ebp]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+4]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR _s_x$[ebp], xmm0

; 668  :  	register float s_y = tRot.M21*t->x+tRot.M22*t->y+tRot.M23*t->z;

	mov	eax, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _tRot$[ebp+12]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+16]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+20]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR _s_y$[ebp], xmm0

; 669  :  	register float s_z = tRot.M31*t->x+tRot.M32*t->y+tRot.M33*t->z;

	mov	eax, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _tRot$[ebp+24]
	mulss	xmm0, DWORD PTR [eax]
	mov	ecx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+28]
	mulss	xmm1, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	mov	edx, DWORD PTR _t$[ebp]
	movss	xmm1, DWORD PTR _tRot$[ebp+32]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR _s_z$[ebp], xmm0

; 670  :  
; 671  :  	t->x = s_x;

	mov	eax, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _s_x$[ebp]
	movss	DWORD PTR [eax], xmm0

; 672  :  	t->y = s_y;

	mov	ecx, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _s_y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0

; 673  :  	t->z = s_z;

	mov	edx, DWORD PTR _t$[ebp]
	movss	xmm0, DWORD PTR _s_z$[ebp]
	movss	DWORD PTR [edx+8], xmm0

; 674  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?RotatePoint@@YAXPAUTpoint@@MMM@Z ENDP			; RotatePoint
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GRealWeather@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRealWeather@@UAEPAXI@Z PROC				; RealWeather::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RealWeather@@UAE@XZ			; RealWeather::~RealWeather
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRealWeather@@UAEPAXI@Z ENDP				; RealWeather::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_cnt$ = -2148						; size = 4
_cntr$ = -2144						; size = 4
_i$ = -2140						; size = 4
_this$ = -2136						; size = 4
_tmp$ = -2132						; size = 4
_tempa$ = -2128						; size = 4
_vis$ = -2124						; size = 4
_time$ = -2120						; size = 4
_fp$ = -2116						; size = 4
_wndSpd$ = -2112					; size = 4
_t$ = -2108						; size = 4
_wndDir$ = -2104					; size = 4
_cntLyr$ = -2100					; size = 4
_altim$ = -2096						; size = 4
_tm$ = -2092						; size = 4
_pch$1 = -2088						; size = 4
_specMETAR$ = -2084					; size = 1024
_file$ = -1060						; size = 1024
_layer$ = -36						; size = 5
_cpy1$ = -28						; size = 10
_cpy$ = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
?ReadWeather@RealWeather@@IAE_NXZ PROC			; RealWeather::ReadWeather
; _this$ = ecx

; 1279 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 2148				; 00000864H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1280 : 
; 1281 : 	FILE*		fp;
; 1282 : 	int			i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 1283 : 	int			cnt = 0;

	mov	DWORD PTR _cnt$[ebp], 0

; 1284 : 	char		file[1024];
; 1285 : 	extern char FalconTerrainDataDir[];
; 1286 : 	//char tmpChar[10];
; 1287 : 	int tmp = 0;

	mov	DWORD PTR _tmp$[ebp], 0

; 1288 : 	//char netFile[1024];
; 1289 : 	//URLDownloadToFile(NULL, "http://weather.flightgear.org/~curt/WX/METAR.rwx", "c:\\metar.txt", 0, NULL);
; 1290 : 	//int testthis = URLDownloadToFile(NULL, "http://www.microsoft.com/ms.htm", "c:\\ms.htm", 0, 0);
; 1291 : 
; 1292 : 	sprintf(file,"C:\\metar.txt");

	push	OFFSET ??_C@_0N@IGLHMJPA@C?3?2metar?4txt?$AA@
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 1293 : 	if (!(fp=fopen(file,"rt")))

	push	OFFSET ??_C@_02BMJICGCB@rt?$AA@
	lea	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax
	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN85@ReadWeathe

; 1294 : 		return FALSE;

	xor	al, al
	jmp	$LN86@ReadWeathe
$LN85@ReadWeathe:

; 1295 :  
; 1296 : 	//Count
; 1297 : 	int t = 0;

	mov	DWORD PTR _t$[ebp], 0

; 1298 : 	int cntr = 0;

	mov	DWORD PTR _cntr$[ebp], 0
$LN88@ReadWeathe:

; 1299 : 	char specMETAR[1024];
; 1300 : 	while (fgets(file,1024,fp))

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1024					; 00000400H
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN83@ReadWeathe

; 1301 : 		{
; 1302 : 	if (file[0] == '\r' || file[0] == '#' || file[0] == ';' || file[0] == '\n')

	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _file$[ebp+ecx]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN81@ReadWeathe
	mov	eax, 1
	imul	eax, 0
	movsx	ecx, BYTE PTR _file$[ebp+eax]
	cmp	ecx, 35					; 00000023H
	je	SHORT $LN81@ReadWeathe
	mov	edx, 1
	imul	edx, 0
	movsx	eax, BYTE PTR _file$[ebp+edx]
	cmp	eax, 59					; 0000003bH
	je	SHORT $LN81@ReadWeathe
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR _file$[ebp+ecx]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN82@ReadWeathe
$LN81@ReadWeathe:

; 1303 : 		{
; 1304 : 		t++;

	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax

; 1305 : 			continue;

	jmp	$LN88@ReadWeathe

; 1306 : 		}
; 1307 : 	else 

	jmp	SHORT $LN80@ReadWeathe
$LN82@ReadWeathe:

; 1308 : 		{
; 1309 : 		if (strncmp(file,"BIEG",4)== 0)

	push	4
	push	OFFSET ??_C@_04DEJLICJF@BIEG?$AA@
	lea	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN79@ReadWeathe

; 1310 : 			{
; 1311 : 			strcpy(specMETAR, file);

	lea	edx, DWORD PTR _file$[ebp]
	push	edx
	lea	eax, DWORD PTR _specMETAR$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN77@ReadWeathe
$LN79@ReadWeathe:

; 1312 : 			}
; 1313 : 		else if (strncmp(file,"RKSS",10)== 0)

	push	10					; 0000000aH
	push	OFFSET ??_C@_04MIHHNFAL@RKSS?$AA@
	lea	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN77@ReadWeathe

; 1314 : 			{
; 1315 : 			strcpy(specMETAR, file);

	lea	edx, DWORD PTR _file$[ebp]
	push	edx
	lea	eax, DWORD PTR _specMETAR$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN77@ReadWeathe:

; 1316 : 			}
; 1317 : 		continue;

	jmp	$LN88@ReadWeathe
$LN80@ReadWeathe:

; 1318 : 		}
; 1319 : 		}

	jmp	$LN88@ReadWeathe
$LN83@ReadWeathe:

; 1320 : 	//Now we have a match.  Time to parse it.
; 1321 : 	int tm = 0;

	mov	DWORD PTR _tm$[ebp], 0

; 1322 : 	int time = 0;

	mov	DWORD PTR _time$[ebp], 0

; 1323 : 	int tempa = 0;

	mov	DWORD PTR _tempa$[ebp], 0

; 1324 : 	int wndDir = 0;

	mov	DWORD PTR _wndDir$[ebp], 0

; 1325 : 	int wndSpd = 0;

	mov	DWORD PTR _wndSpd$[ebp], 0

; 1326 : 	int vis = 0;

	mov	DWORD PTR _vis$[ebp], 0

; 1327 : 	int altim = 0;

	mov	DWORD PTR _altim$[ebp], 0

; 1328 : 	char cpy[10] = "";

	mov	cl, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _cpy$[ebp], cl
	xor	edx, edx
	mov	DWORD PTR _cpy$[ebp+1], edx
	mov	DWORD PTR _cpy$[ebp+5], edx
	mov	BYTE PTR _cpy$[ebp+9], dl

; 1329 : 	char cpy1[10] = "";

	mov	al, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _cpy1$[ebp], al
	xor	ecx, ecx
	mov	DWORD PTR _cpy1$[ebp+1], ecx
	mov	DWORD PTR _cpy1$[ebp+5], ecx
	mov	BYTE PTR _cpy1$[ebp+9], cl

; 1330 : 	char layer[5] = "";

	mov	dl, BYTE PTR ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR _layer$[ebp], dl
	xor	eax, eax
	mov	DWORD PTR _layer$[ebp+1], eax

; 1331 : 	int cntLyr = 0;

	mov	DWORD PTR _cntLyr$[ebp], 0

; 1332 : 	//char cpy2[10] = "";
; 1333 : 	//KSTS 300653Z AUTO 10004KT 10SM CLR 10/08 A3014 RMK AO2 SLP200      T01000078 TSNO 
; 1334 : 	//METAR RKSS 300700Z 33006KT 5000 HZ FEW030 29/19 Q1002 NOSIG  
; 1335 : 	//KJKL 300705Z AUTO 00000KT 1 1/2SM +RA BR SCT003 OVC017 14/13 A2973
; 1336 : 	if (specMETAR)

	lea	ecx, DWORD PTR _specMETAR$[ebp]
	test	ecx, ecx
	je	$LN74@ReadWeathe

; 1337 : 		{
; 1338 : 		 char * pch;
; 1339 :  
; 1340 : 		pch = strtok (specMETAR," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	edx, DWORD PTR _specMETAR$[ebp]
	push	edx
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _pch$1[ebp], eax
$LN75@ReadWeathe:

; 1341 : 		while (pch != NULL)

	cmp	DWORD PTR _pch$1[ebp], 0
	je	$LN74@ReadWeathe

; 1342 : 			{
; 1343 : 				//Identify things by length
; 1344 : 				if (strlen(pch)==2 || (strlen(pch)== 3 && strncmp(pch,"-",1))
; 1345 : 					|| (strlen(pch)== 3 && strncmp(pch,"+",1)))

	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN72@ReadWeathe
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN71@ReadWeathe
	push	1
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN72@ReadWeathe
$LN71@ReadWeathe:
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 3
	jne	$LN73@ReadWeathe
	push	1
	push	OFFSET ??_C@_01MIFGBAGJ@?$CL?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN73@ReadWeathe
$LN72@ReadWeathe:

; 1346 : 					{
; 1347 : 					if (strlen(pch)== 3)//strip it down to two

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN70@ReadWeathe

; 1348 : 						{
; 1349 : 						strncpy(cpy,pch+1,2);

	push	2
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1350 : 						}
; 1351 : 					else 

	jmp	SHORT $LN69@ReadWeathe
$LN70@ReadWeathe:

; 1352 : 						{
; 1353 : 						strcpy(cpy,pch);

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN69@ReadWeathe:

; 1354 : 						}
; 1355 : 					if (strcmp(cpy,"RA")==0 || strcmp(cpy,"DZ")==0 || strcmp(cpy,"SN")==0 ||
; 1356 : 						strcmp(cpy,"GR")==0 || strcmp(cpy,"GS")==0 || strcmp(cpy,"PL")==0 ||
; 1357 : 						strcmp(cpy,"SG")==0 || strcmp(cpy,"IC")==0 || strcmp(cpy,"UP")==0)//0/8

	push	OFFSET ??_C@_02IGOEKCHH@RA?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN67@ReadWeathe
	push	OFFSET ??_C@_02DHHJLGCP@DZ?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN67@ReadWeathe
	push	OFFSET ??_C@_02LONEIP@SN?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02PNOGICHO@GR?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02OEPNLDDP@GS?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02DAMOAIFE@PL?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02NBHMGPMG@SG?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02KEKBIMGE@IC?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@ReadWeathe
	push	OFFSET ??_C@_02NAHCJHOC@UP?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN68@ReadWeathe
$LN67@ReadWeathe:

; 1358 : 						{
; 1359 : 						//Some form of precip present
; 1360 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1

; 1361 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN68@ReadWeathe:

; 1362 : 						}
; 1363 : 					if (strcmp(cpy,"FG")==0 || strcmp(cpy,"HZ")==0 || strcmp(cpy,"FU")==0 ||
; 1364 : 						strcmp(cpy,"PY")==0 || strcmp(cpy,"BR")==0 || strcmp(cpy,"SA")==0 ||
; 1365 : 						strcmp(cpy,"DU")==0 || strcmp(cpy,"VA")==0)//0/8

	push	OFFSET ??_C@_02MLJBAOFN@FG?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN65@ReadWeathe
	push	OFFSET ??_C@_02DOGDEPEL@HZ?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02LDGFHOIO@FU?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02HHLOOEA@PY?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02PLCNEAJF@BR?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02IHCGMIEA@SA?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02LAOBKKOA@DU?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN65@ReadWeathe
	push	OFFSET ??_C@_02IBONAKKL@VA?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN66@ReadWeathe
$LN65@ReadWeathe:

; 1366 : 						{
; 1367 : 						//Some form of visibility obstruction
; 1368 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1

; 1369 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN66@ReadWeathe:

; 1370 : 						}
; 1371 : 
; 1372 : 					}

	jmp	$LN1@ReadWeathe
$LN73@ReadWeathe:

; 1373 : 				else if (strlen(pch)==3)

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 3
	jne	$LN63@ReadWeathe

; 1374 : 					{
; 1375 : 					//
; 1376 : 					if (strcmp(pch,"CLR")==0 || strcmp(pch,"NSC")==0 || strcmp(pch,"SKC")==0)//0/8

	push	OFFSET ??_C@_03KGBHJMEC@CLR?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN61@ReadWeathe
	push	OFFSET ??_C@_03BANOIDMC@NSC?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN61@ReadWeathe
	push	OFFSET ??_C@_03KAJIPOEI@SKC?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN62@ReadWeathe
$LN61@ReadWeathe:

; 1377 : 						{
; 1378 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	$LN51@ReadWeathe
$LN62@ReadWeathe:

; 1379 : 						}
; 1380 : 					else if (strcmp(pch,"FEW")==0)//0 - 2/8

	push	OFFSET ??_C@_03ODGPKDLK@FEW?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN59@ReadWeathe

; 1381 : 						{
; 1382 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	$LN51@ReadWeathe
$LN59@ReadWeathe:

; 1383 : 						}
; 1384 : 					else if (strcmp(pch,"SCT")==0)//3/8-4/8

	push	OFFSET ??_C@_03KLAICLGG@SCT?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN57@ReadWeathe

; 1385 : 						{
; 1386 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	SHORT $LN51@ReadWeathe
$LN57@ReadWeathe:

; 1387 : 						}
; 1388 : 					else if (strcmp(pch,"BKN")==0)//5/8-7/8

	push	OFFSET ??_C@_03PNJDLAPP@BKN?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN55@ReadWeathe

; 1389 : 						{
; 1390 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	SHORT $LN51@ReadWeathe
$LN55@ReadWeathe:

; 1391 : 						}
; 1392 : 					else if (strcmp(pch,"OVC")==0)//8/8

	push	OFFSET ??_C@_03KOKJCGEM@OVC?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN53@ReadWeathe

; 1393 : 						{
; 1394 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	SHORT $LN51@ReadWeathe
$LN53@ReadWeathe:

; 1395 : 						}
; 1396 : 					else if (strcmp(pch,"TCU")==0)//Towering Cumulus

	push	OFFSET ??_C@_03CPMECCJO@TCU?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN51@ReadWeathe

; 1397 : 						{
; 1398 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
$LN51@ReadWeathe:

; 1399 : 						}
; 1400 : 					}
; 1401 : 				else if (strlen(pch)==4 || (strlen(pch)==5 && strncmp(pch,"-",1)==0)

	jmp	$LN1@ReadWeathe
$LN63@ReadWeathe:

; 1402 : 					||(strlen(pch)==5 && strncmp(pch,"+",1)==0))

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN48@ReadWeathe
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 5
	jne	SHORT $LN47@ReadWeathe
	push	1
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN48@ReadWeathe
$LN47@ReadWeathe:
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 5
	jne	$LN49@ReadWeathe
	push	1
	push	OFFSET ??_C@_01MIFGBAGJ@?$CL?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN49@ReadWeathe
$LN48@ReadWeathe:

; 1403 : 					{
; 1404 : 					if (strlen(pch)== 5)//strip it down to four

	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	eax, 5
	jne	SHORT $LN46@ReadWeathe

; 1405 : 						{
; 1406 : 						strncpy(cpy,pch+1,4);

	push	4
	mov	edx, DWORD PTR _pch$1[ebp]
	add	edx, 1
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN44@ReadWeathe
$LN46@ReadWeathe:

; 1407 : 						}
; 1408 : 					else if (strlen(pch)==4)

	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	eax, 4
	jne	SHORT $LN44@ReadWeathe

; 1409 : 						{
; 1410 : 						strcpy(cpy,pch);

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN44@ReadWeathe:

; 1411 : 						}
; 1412 : 
; 1413 : 
; 1414 : 					if (strncmp(pch+2,"SM",2)==0)

	push	2
	push	OFFSET ??_C@_02CLJDIHEM@SM?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 2
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN43@ReadWeathe

; 1415 : 						{
; 1416 : 						strncpy(cpy,pch,2);

	push	2
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1417 : 						vis = atoi(cpy);

	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _vis$[ebp], eax

; 1418 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN37@ReadWeathe
$LN43@ReadWeathe:

; 1419 : 						}
; 1420 : 					else if (strcmp(cpy,"VCSH")==0)

	push	OFFSET ??_C@_04FBHFJALO@VCSH?$AA@
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN41@ReadWeathe

; 1421 : 						{
; 1422 : 						//Showers
; 1423 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN37@ReadWeathe
$LN41@ReadWeathe:

; 1424 : 						}
; 1425 : 					else if (strcmp(cpy,"TSRA")==0)

	push	OFFSET ??_C@_04KLKMEFDP@TSRA?$AA@
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN39@ReadWeathe

; 1426 : 						{
; 1427 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN37@ReadWeathe
$LN39@ReadWeathe:

; 1428 : 						}
; 1429 : 					else if (strcmp(cpy,"9999")==0)

	push	OFFSET ??_C@_04DNPBDGJL@9999?$AA@
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN37@ReadWeathe

; 1430 : 						{
; 1431 : 						//Clear vis
; 1432 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN37@ReadWeathe:

; 1433 : 						}
; 1434 : 
; 1435 : 					}

	jmp	$LN1@ReadWeathe
$LN49@ReadWeathe:

; 1436 : 				else if (strlen(pch)==5)

	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 5
	jne	$LN35@ReadWeathe

; 1437 : 					{
; 1438 : 					//
; 1439 : 					if (strncmp(pch+2,"/",1)==0)

	push	1
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 2
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN34@ReadWeathe

; 1440 : 						{
; 1441 : 						strncpy(cpy,pch,2);

	push	2
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1442 : 						tempa = atoi(cpy);

	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _tempa$[ebp], eax

; 1443 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN28@ReadWeathe
$LN34@ReadWeathe:

; 1444 : 						}
; 1445 : 					else if (strncmp(pch,"A",1)==0)

	push	1
	push	OFFSET ??_C@_01FHEEJDEE@A?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN32@ReadWeathe

; 1446 : 						{
; 1447 : 						strncpy(cpy,pch+1,4);

	push	4
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 1
	push	ecx
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1448 : 						altim = atoi(cpy);

	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _altim$[ebp], eax

; 1449 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN28@ReadWeathe
$LN32@ReadWeathe:

; 1450 : 						}
; 1451 : 					else if (strncmp(pch,"Q",1)==0)

	push	1
	push	OFFSET ??_C@_01BNIGIBBF@Q?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN30@ReadWeathe

; 1452 : 						{
; 1453 : 						strncpy(cpy,pch+1,4);

	push	4
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1454 : 						altim = atoi(cpy);

	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _altim$[ebp], eax

; 1455 : 						altim = FloatToInt32(altim * 0.02953f);

	cvtsi2ss xmm0, DWORD PTR _altim$[ebp]
	mulss	xmm0, DWORD PTR __real@3cf1e8e6
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?FloatToInt32@@YAHM@Z			; FloatToInt32
	add	esp, 4
	mov	DWORD PTR _altim$[ebp], eax

; 1456 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN28@ReadWeathe
$LN30@ReadWeathe:

; 1457 : 						}
; 1458 : /*Provided the visibility is >=10 km, AND the height of the lowest cloud (any amount) is					>=5000 ft (or highest minimum sector altitude) AND there are no cumulonimbus clouds (CB,					any height) within sight AND there is no significant weather (see list below), then the						visibility and cloud part of the standard METAR is replaced by CAVOK (say "cav-oh-kay":						'Ceiling And Visibility OK'). (not used by certain countries, e.g. the United States)*/
; 1459 : 					else if (strcmp(pch,"CAVOK")==0)//Basically CLR

	push	OFFSET ??_C@_05CEEPFLCK@CAVOK?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN28@ReadWeathe

; 1460 : 						{
; 1461 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
$LN28@ReadWeathe:

; 1462 : 						}
; 1463 : 
; 1464 : 
; 1465 : 					}
; 1466 : 				else if (strlen(pch)==6 || (strlen(pch)==8 && (strncmp(pch+6,"CB",2)==0))

	jmp	$LN1@ReadWeathe
$LN35@ReadWeathe:

; 1467 : 					|| (strlen(pch)==9 && (strncmp(pch+6,"TCU",3)==0)))

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 6
	je	SHORT $LN25@ReadWeathe
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 8
	jne	SHORT $LN24@ReadWeathe
	push	2
	push	OFFSET ??_C@_02LACNDIPD@CB?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 6
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN25@ReadWeathe
$LN24@ReadWeathe:
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 9
	jne	$LN26@ReadWeathe
	push	3
	push	OFFSET ??_C@_03CPMECCJO@TCU?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 6
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN26@ReadWeathe
$LN25@ReadWeathe:

; 1468 : 					{
; 1469 : 					//XYZ000
; 1470 : 					if (strncmp(pch+6,"CB",2)== 0)

	push	2
	push	OFFSET ??_C@_02LACNDIPD@CB?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 6
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN23@ReadWeathe

; 1471 : 						{
; 1472 : 						//Set CB clouds
; 1473 : 						tm =1;

	mov	DWORD PTR _tm$[ebp], 1
	jmp	SHORT $LN21@ReadWeathe
$LN23@ReadWeathe:

; 1474 : 						}
; 1475 : 					else if (strncmp(pch+7,"TCU",3)==0)

	push	3
	push	OFFSET ??_C@_03CPMECCJO@TCU?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	add	edx, 7
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN21@ReadWeathe

; 1476 : 						{
; 1477 : 						//Set TCU
; 1478 : 						tm=1;

	mov	DWORD PTR _tm$[ebp], 1
$LN21@ReadWeathe:

; 1479 : 						}
; 1480 : 
; 1481 : 					if (strncmp(pch,"FEW",3)==0)//0 - 2/8

	push	3
	push	OFFSET ??_C@_03ODGPKDLK@FEW?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN20@ReadWeathe

; 1482 : 						{
; 1483 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1

; 1484 : 						strncpy(cpy,pch+3,3);

	push	3
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 3
	push	ecx
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1485 : 						cntLyr = atoi(cpy)*100;

	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _cntLyr$[ebp], eax

; 1486 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN14@ReadWeathe
$LN20@ReadWeathe:

; 1487 : 						}
; 1488 : 					else if (strncmp(pch,"SCT",3)==0)//3/8-4/8

	push	3
	push	OFFSET ??_C@_03KLAICLGG@SCT?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN18@ReadWeathe

; 1489 : 						{
; 1490 : 						tm = 2;

	mov	DWORD PTR _tm$[ebp], 2

; 1491 : 						strncpy(cpy,pch+3,3);

	push	3
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 3
	push	eax
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1492 : 						cntLyr = atoi(cpy)*100;

	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _cntLyr$[ebp], eax

; 1493 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN14@ReadWeathe
$LN18@ReadWeathe:

; 1494 : 						}
; 1495 : 					else if (strncmp(pch,"BKN",3)==0)//5/8-7/8

	push	3
	push	OFFSET ??_C@_03PNJDLAPP@BKN?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN16@ReadWeathe

; 1496 : 						{
; 1497 : 						tm = 3;

	mov	DWORD PTR _tm$[ebp], 3

; 1498 : 						strncpy(cpy,pch+3,3);

	push	3
	mov	edx, DWORD PTR _pch$1[ebp]
	add	edx, 3
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1499 : 						cntLyr = atoi(cpy)*100;

	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _cntLyr$[ebp], eax

; 1500 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN14@ReadWeathe
$LN16@ReadWeathe:

; 1501 : 						}
; 1502 : 					else if (strncmp(pch,"OVC",3)==0)//8/8

	push	3
	push	OFFSET ??_C@_03KOKJCGEM@OVC?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN14@ReadWeathe

; 1503 : 						{
; 1504 : 						tm = 4;

	mov	DWORD PTR _tm$[ebp], 4

; 1505 : 						strncpy(cpy,pch+3,3);

	push	3
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 3
	push	ecx
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1506 : 						cntLyr = atoi(cpy)*100;

	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _cntLyr$[ebp], eax

; 1507 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN14@ReadWeathe:

; 1508 : 						}
; 1509 : 
; 1510 : 					}

	jmp	$LN1@ReadWeathe
$LN26@ReadWeathe:

; 1511 : 				else if (strlen(pch)==7 || strlen(pch)==10)

	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	cmp	eax, 7
	je	SHORT $LN11@ReadWeathe
	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 10					; 0000000aH
	jne	$LN12@ReadWeathe
$LN11@ReadWeathe:

; 1512 : 					{
; 1513 : 					//
; 1514 : 					
; 1515 : 					//Grab Time in ZULU
; 1516 : 					if (strcmp(pch+6,"Z")==0)

	push	OFFSET ??_C@_01POHCFINO@Z?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 6
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ReadWeathe

; 1517 : 						{
; 1518 : 						strncpy(cpy,pch+2,4);

	push	4
	mov	edx, DWORD PTR _pch$1[ebp]
	add	edx, 2
	push	edx
	lea	eax, DWORD PTR _cpy$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1519 : 						time = atoi(cpy);

	lea	ecx, DWORD PTR _cpy$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _time$[ebp], eax

; 1520 : 						memset(&cpy,0,sizeof(cpy));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN4@ReadWeathe
$LN10@ReadWeathe:

; 1521 : 						}
; 1522 : 					else if (strcmp(pch+5,"KT")==0)//Grab wind direction and speed

	push	OFFSET ??_C@_02KCKGNMJM@KT?$AA@
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 5
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN8@ReadWeathe

; 1523 : 						{
; 1524 : 						if (strncmp(pch,"VRB",3)==0)//catch variable wind

	push	3
	push	OFFSET ??_C@_03JNKKKHME@VRB?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ReadWeathe

; 1525 : 							{
; 1526 : 							wndDir = 10;

	mov	DWORD PTR _wndDir$[ebp], 10		; 0000000aH

; 1527 : 							}
; 1528 : 						else

	jmp	SHORT $LN6@ReadWeathe
$LN7@ReadWeathe:

; 1529 : 							{
; 1530 : 							strncpy(cpy1,pch,3);

	push	3
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy1$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1531 : 							wndDir = atoi(cpy1);

	lea	ecx, DWORD PTR _cpy1$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _wndDir$[ebp], eax

; 1532 : 							memset(&cpy1,0,sizeof(cpy1));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy1$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN6@ReadWeathe:

; 1533 : 							}
; 1534 : 						strncpy(cpy1,pch+3,2);

	push	2
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 3
	push	eax
	lea	ecx, DWORD PTR _cpy1$[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1535 : 						wndSpd = atoi(cpy1);

	lea	edx, DWORD PTR _cpy1$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _wndSpd$[ebp], eax

; 1536 : 						memset(&cpy1,0,sizeof(cpy1));

	push	10					; 0000000aH
	push	0
	lea	eax, DWORD PTR _cpy1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	jmp	$LN4@ReadWeathe
$LN8@ReadWeathe:

; 1537 : 						}
; 1538 : 					else if (strcmp(pch+8,"KT")==0)

	push	OFFSET ??_C@_02KCKGNMJM@KT?$AA@
	mov	ecx, DWORD PTR _pch$1[ebp]
	add	ecx, 8
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@ReadWeathe

; 1539 : 						{
; 1540 : 						strncpy(cpy1,pch,3);

	push	3
	mov	edx, DWORD PTR _pch$1[ebp]
	push	edx
	lea	eax, DWORD PTR _cpy1$[ebp]
	push	eax
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1541 : 						wndDir = atoi(cpy1);

	lea	ecx, DWORD PTR _cpy1$[ebp]
	push	ecx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _wndDir$[ebp], eax

; 1542 : 						memset(&cpy1,0,sizeof(cpy1));

	push	10					; 0000000aH
	push	0
	lea	edx, DWORD PTR _cpy1$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 1543 : 						strncpy(cpy1,pch+3,2);

	push	2
	mov	eax, DWORD PTR _pch$1[ebp]
	add	eax, 3
	push	eax
	lea	ecx, DWORD PTR _cpy1$[ebp]
	push	ecx
	call	_strncpy
	add	esp, 12					; 0000000cH

; 1544 : 						wndSpd = atoi(cpy1);

	lea	edx, DWORD PTR _cpy1$[ebp]
	push	edx
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _wndSpd$[ebp], eax

; 1545 : 						memset(&cpy1,0,sizeof(cpy1));

	push	10					; 0000000aH
	push	0
	lea	eax, DWORD PTR _cpy1$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN4@ReadWeathe:

; 1546 : 						//Add variable for gusts
; 1547 : 						}
; 1548 : 						
; 1549 : 					}

	jmp	SHORT $LN1@ReadWeathe
$LN12@ReadWeathe:

; 1550 : 				else if (strlen(pch)==9)

	mov	ecx, DWORD PTR _pch$1[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	cmp	eax, 9
	jne	SHORT $LN1@ReadWeathe

; 1551 : 					{
; 1552 : 					if (strncmp(pch+7,"TCU",3)==0)

	push	3
	push	OFFSET ??_C@_03CPMECCJO@TCU?$AA@
	mov	edx, DWORD PTR _pch$1[ebp]
	add	edx, 7
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@ReadWeathe

; 1553 : 						{
; 1554 : 						//We have TCU
; 1555 : 						tm = 1;

	mov	DWORD PTR _tm$[ebp], 1
$LN1@ReadWeathe:

; 1556 : 						}
; 1557 : 
; 1558 : 					}
; 1559 : 				MonoPrint ("%s\n",pch);

	mov	eax, DWORD PTR _pch$1[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 1560 : 				pch = strtok (NULL, " ,.");

	push	OFFSET ??_C@_03EENJDJHF@?5?0?4?$AA@
	push	0
	call	_strtok
	add	esp, 8
	mov	DWORD PTR _pch$1[ebp], eax

; 1561 : 			}

	jmp	$LN75@ReadWeathe
$LN74@ReadWeathe:

; 1562 : 		}
; 1563 : 
; 1564 : 
; 1565 : 
; 1566 : 
; 1567 : 
; 1568 : 	//This reads a file from weather folder (manual weather)
; 1569 : 	/*sprintf(file,"%s\\weather\\RKSS.txt",FalconTerrainDataDir);
; 1570 : 
; 1571 : 	if(!(fp=fopen(file,"rt")))
; 1572 : 		{
; 1573 : 		metar = NULL;
; 1574 : 		return FALSE;
; 1575 : 		}
; 1576 : 	numMETARS = atoi(fgets(file,1024,fp));
; 1577 : 	metar = new METAR[numMETARS];
; 1578 : 
; 1579 : 	while (i<numMETARS)
; 1580 : 	{
; 1581 : 		fgets(file,1024,fp);
; 1582 : 		if (file[0] == '\r' || file[0] == '#' || file[0] == ';' || file[0] == '\n')
; 1583 : 			continue;
; 1584 : 	
; 1585 : 		switch (cnt)
; 1586 : 			{
; 1587 : 			case 0:
; 1588 : 				//Station
; 1589 : 				strcpy(tmpChar,file);
; 1590 : 				strcpy(metar[i].station,tmpChar);
; 1591 : 				break;
; 1592 : 			case 1:
; 1593 : 				//Time
; 1594 : 				sscanf(file,"%6d",&tmp);
; 1595 : 				metar[i].time = tmp;
; 1596 : 				break;
; 1597 : 			case 2:
; 1598 : 				//#Wind Direction
; 1599 : 				sscanf(file,"%3d",&tmp);
; 1600 : 				metar[i].windDirection = tmp;
; 1601 : 				break;
; 1602 : 			case 3:
; 1603 : 				//#Wind Speed (knots)
; 1604 : 				sscanf(file,"%4d",&tmp);
; 1605 : 				metar[i].windSpeed = tmp;
; 1606 : 				break;
; 1607 : 			case 4:
; 1608 : 				//#Visibility (miles) (99 = Unlimited/Clr)
; 1609 : 				sscanf(file,"%3d",&tmp);
; 1610 : 				metar[i].visibility = tmp;
; 1611 : 				break;
; 1612 : 			case 5:
; 1613 : 				//#Sky Coverage 1
; 1614 : 				strcpy(tmpChar,file);
; 1615 : 				strcpy(metar[i].skyCoverage1,tmpChar);
; 1616 : 				break;
; 1617 : 			case 6:
; 1618 : 				//#Coverage Altitude (feet) 1
; 1619 : 				sscanf(file,"%6d",&tmp);
; 1620 : 				metar[i].skyCoverageAlt1 = tmp;
; 1621 : 				break;
; 1622 : 			case 7:
; 1623 : 				//#sky Coverage 2 (FEW, SCT, BKN, OVC, CLR)
; 1624 : 				strcpy(tmpChar,file);
; 1625 : 				strcpy(metar[i].skyCoverage2,tmpChar);
; 1626 : 				break;
; 1627 : 			case 8:
; 1628 : 				//#Coverage Altitude (feet) 2
; 1629 : 				sscanf(file,"%6d",&tmp);
; 1630 : 				metar[i].skyCoverageAlt2 = tmp;
; 1631 : 				break;
; 1632 : 			case 9:
; 1633 : 				//#Weather Type (RA, TS, NONE)
; 1634 : 				strcpy(tmpChar,file);
; 1635 : 				strcpy(metar[i].weatherType,tmpChar);
; 1636 : 				break;
; 1637 : 			case 10:
; 1638 : 				//#Altimeter
; 1639 : 				sscanf(file,"%4d",&tmp);
; 1640 : 				metar[i].altimeter = tmp;
; 1641 : 				break;
; 1642 : 			default:
; 1643 : 				break;
; 1644 : 			}
; 1645 : 		cnt++;
; 1646 : 		if (cnt == 11)
; 1647 : 			{
; 1648 : 			cnt = 0;
; 1649 : 			i++;
; 1650 : 			}
; 1651 : 	}
; 1652 : 	fclose(fp);*/
; 1653 : 
; 1654 : 	return false;

	xor	al, al
$LN86@ReadWeathe:

; 1655 : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadWeather@RealWeather@@IAE_NXZ ENDP			; RealWeather::ReadWeather
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv134 = -16						; size = 4
tv95 = -12						; size = 4
tv89 = -8						; size = 4
tv83 = -4						; size = 4
?UpdateWeatherQuality@RealWeather@@KAXXZ PROC		; RealWeather::UpdateWeatherQuality

; 1266 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1267 : 	WeatherQualityStep = F_I32(PRANDFloatPos() * MAX_WEATHER_Q_STEPS);

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv83[ebp]
	movss	xmm0, DWORD PTR tv83[ebp]
	mulss	xmm0, DWORD PTR __real@447a0000
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	DWORD PTR ?WeatherQualityStep@RealWeather@@1KA, eax ; RealWeather::WeatherQualityStep

; 1268 : 	WeatherQualityRate = PRANDFloat() * MIN_WEATHER_Q_STEP;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv89[ebp]
	movss	xmm0, DWORD PTR tv89[ebp]
	mulss	xmm0, DWORD PTR __real@38d1b717
	movss	DWORD PTR ?WeatherQualityRate@RealWeather@@1MA, xmm0

; 1269 : 	if(fabs(WeatherQualityRate) < (MIN_WEATHER_Q_STEP / 10.0f)) realWeather->WeatherQualityRate = fabs(WeatherQualityRate)/WeatherQualityRate * MIN_WEATHER_Q_STEP;

	push	ecx
	movss	xmm0, DWORD PTR ?WeatherQualityRate@RealWeather@@1MA
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv95[ebp]
	movss	xmm0, DWORD PTR __real@3727c5ac
	comiss	xmm0, DWORD PTR tv95[ebp]
	jbe	SHORT $LN1@UpdateWeat
	push	ecx
	movss	xmm0, DWORD PTR ?WeatherQualityRate@RealWeather@@1MA
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	divss	xmm0, DWORD PTR ?WeatherQualityRate@RealWeather@@1MA
	mulss	xmm0, DWORD PTR __real@38d1b717
	movss	DWORD PTR ?WeatherQualityRate@RealWeather@@1MA, xmm0
$LN1@UpdateWeat:

; 1270 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateWeatherQuality@RealWeather@@KAXXZ ENDP		; RealWeather::UpdateWeatherQuality
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?TimeUpdateCallback@RealWeather@@KAXPAX@Z PROC		; RealWeather::TimeUpdateCallback

; 1273 : {

	push	ebp
	mov	ebp, esp

; 1274 : 	realWeather->UpdateLighting();

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	call	?UpdateLighting@RealWeather@@QAEXXZ	; RealWeather::UpdateLighting

; 1275 : 
; 1276 : }

	pop	ebp
	ret	0
?TimeUpdateCallback@RealWeather@@KAXPAX@Z ENDP		; RealWeather::TimeUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ZPosition$ = 8						; size = 4
?GetObserverOrder@RealWeather@@IAEKM@Z PROC		; RealWeather::GetObserverOrder
; _this$ = ecx

; 228  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 229  : 	if(ZPosition >= stratusZ) return OBSERVER_LOW;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _ZPosition$[ebp]
	comiss	xmm0, DWORD PTR [eax+15716]
	jb	SHORT $LN2@GetObserve
	xor	eax, eax
	jmp	SHORT $LN3@GetObserve
$LN2@GetObserve:

; 230  : 	if(ZPosition >= stratus2Z) return OBSERVER_MIDDLE;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _ZPosition$[ebp]
	comiss	xmm0, DWORD PTR [ecx+15720]
	jb	SHORT $LN1@GetObserve
	mov	eax, 1
	jmp	SHORT $LN3@GetObserve
$LN1@GetObserve:

; 231  : 	return OBSERVER_HI;

	mov	eax, 2
$LN3@GetObserve:

; 232  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetObserverOrder@RealWeather@@IAEKM@Z ENDP		; RealWeather::GetObserverOrder
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\realweather.h
;	COMDAT ?UnderOvercast@RealWeather@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UnderOvercast@RealWeather@@QAE_NXZ PROC		; RealWeather::UnderOvercast, COMDAT
; _this$ = ecx

; 150  : 	bool	UnderOvercast() { return UnderOVCST; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+15996]
	mov	esp, ebp
	pop	ebp
	ret	0
?UnderOvercast@RealWeather@@QAE_NXZ ENDP		; RealWeather::UnderOvercast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\realweather.h
;	COMDAT ?InsideOvercast@RealWeather@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InsideOvercast@RealWeather@@QAE_NXZ PROC		; RealWeather::InsideOvercast, COMDAT
; _this$ = ecx

; 149  : 	bool	InsideOvercast() { return InsideOVCST; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+15998]
	mov	esp, ebp
	pop	ebp
	ret	0
?InsideOvercast@RealWeather@@QAE_NXZ ENDP		; RealWeather::InsideOvercast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_Observer$ = -12					; size = 4
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_ZPosition$ = 8						; size = 4
?SetDrawingOrder@RealWeather@@QAEXM@Z PROC		; RealWeather::SetDrawingOrder
; _this$ = ecx

; 257  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 258  : 	// get the observer order
; 259  : 	DWORD Observer = GetObserverOrder(ZPosition);

	push	ecx
	movss	xmm0, DWORD PTR _ZPosition$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetObserverOrder@RealWeather@@IAEKM@Z	; RealWeather::GetObserverOrder
	mov	DWORD PTR _Observer$[ebp], eax

; 260  : 
; 261  : 	// check weather status, assing drawing order based on it
; 262  : 	switch(weatherCondition){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15688]
	mov	DWORD PTR tv68[ebp], ecx
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 1
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 3
	ja	SHORT $LN3@SetDrawing
	mov	eax, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN7@SetDrawing[eax*4]
$LN2@SetDrawing:

; 263  : 	
; 264  : 		// Fair or good weather
; 265  : 		case	SUNNY		:	// SUNNY AND FAIR USE SAME WEATHER TABLE
; 266  : 		case	FAIR		:	TheDXEngine.DX2D_SetDrawOrder((DWORD*)&SunnyDrawOrder[Observer]);

	mov	ecx, DWORD PTR _Observer$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, OFFSET _SunnyDrawOrder
	push	ecx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetDrawOrder@CDXEngine@@QAEXPAK@Z	; CDXEngine::DX2D_SetDrawOrder

; 267  : 								break;

	jmp	SHORT $LN3@SetDrawing
$LN1@SetDrawing:

; 268  : 
; 269  : 		case	POOR		:	// POOR / INCLEMENT USE SAME TABLE
; 270  : 		case	INCLEMENT	:	TheDXEngine.DX2D_SetDrawOrder((DWORD*)&PoorDrawOrder[Observer]);

	mov	edx, DWORD PTR _Observer$[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, OFFSET _PoorDrawOrder
	push	edx
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetDrawOrder@CDXEngine@@QAEXPAK@Z	; CDXEngine::DX2D_SetDrawOrder
$LN3@SetDrawing:

; 271  : 								break;
; 272  : 
; 273  : 
; 274  : 	}
; 275  : 
; 276  : 
; 277  : }

	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@SetDrawing:
	DD	$LN2@SetDrawing
	DD	$LN2@SetDrawing
	DD	$LN1@SetDrawing
	DD	$LN1@SetDrawing
?SetDrawingOrder@RealWeather@@QAEXM@Z ENDP		; RealWeather::SetDrawingOrder
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv196 = -36						; size = 8
tv177 = -28						; size = 8
tv233 = -20						; size = 4
tv193 = -16						; size = 4
tv174 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_row$ = 8						; size = 4
_col$ = 12						; size = 4
?GenerateCloud@RealWeather@@IAEXKK@Z PROC		; RealWeather::GenerateCloud
; _this$ = ecx

; 480  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 481  : 	DWORD i;
; 482  : 
; 483  : 	weatherCellArray[row][col].cloudPosX = (float)(row*cellSize+rand()%cellSize); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _row$[ebp]
	imul	esi, DWORD PTR [eax+15668]
	call	_rand
	mov	ecx, DWORD PTR _this$[ebp]
	cdq
	idiv	DWORD PTR [ecx+15668]
	add	esi, edx
	mov	DWORD PTR tv174[ebp], esi
	cvtsi2sd xmm0, DWORD PTR tv174[ebp]
	mov	edx, DWORD PTR tv174[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv177[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv177[ebp]
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	movss	DWORD PTR [edx+eax+16], xmm0

; 484  : 	weatherCellArray[row][col].cloudPosY = (float)(col*cellSize+rand()%cellSize); 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _col$[ebp]
	imul	esi, DWORD PTR [ecx+15668]
	call	_rand
	mov	ecx, DWORD PTR _this$[ebp]
	cdq
	idiv	DWORD PTR [ecx+15668]
	add	esi, edx
	mov	DWORD PTR tv193[ebp], esi
	cvtsi2sd xmm0, DWORD PTR tv193[ebp]
	mov	edx, DWORD PTR tv193[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv196[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv196[ebp]
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	movss	DWORD PTR [edx+eax+20], xmm0

; 485  : 
; 486  : 	weatherCellArray[row][col].sTxtIndex = rand()%NUM_STRATUS_TEXTURES;

	call	_rand
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN9@GenerateCl
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN9@GenerateCl:
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	DWORD PTR [ecx+edx+24], eax

; 487  : 	for(i = 0; i < NUM_3DCLOUD_POLYS; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@GenerateCl
$LN5@GenerateCl:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@GenerateCl:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jae	SHORT $LN4@GenerateCl

; 488  : 		weatherCellArray[row][col].cTxtIndex[i] = rand()%NUM_CUMULUS_TEXTURES;

	call	_rand
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	add	eax, ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+ecx*4+28], edx
	jmp	SHORT $LN5@GenerateCl
$LN4@GenerateCl:

; 489  : 	for(i = 0; i < NUM_3DCLOUD_POLYS; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@GenerateCl
$LN2@GenerateCl:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@GenerateCl:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jae	SHORT $LN1@GenerateCl

; 490  : 		weatherCellArray[row][col].cPntIndex[i] = rand()%NUM_3DCLOUD_POINTS;

	call	_rand
	cdq
	mov	ecx, 40					; 00000028H
	idiv	ecx
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	add	eax, ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax+ecx*4+108], edx
	jmp	SHORT $LN2@GenerateCl
$LN1@GenerateCl:

; 491  : 	// COBRA - DX - Random radius stuff
; 492  : 	// RV - I-Hawk - Using larger radius
; 493  : 
; 494  : #if CLOUDS_FIX	
; 495  : 
; 496  : 	weatherCellArray[row][col].Radius = 10000.f + 1000.f * PRANDFloatPos() * (float)ShadingFactor;

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv233[ebp]
	movss	xmm0, DWORD PTR tv233[ebp]
	mulss	xmm0, DWORD PTR __real@447a0000
	mov	edx, DWORD PTR _this$[ebp]
	mulss	xmm0, DWORD PTR [edx+15748]
	addss	xmm0, DWORD PTR __real@461c4000
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	movss	DWORD PTR [edx+eax+188], xmm0

; 497  : 
; 498  : #else
; 499  : 
; 500  : 	weatherCellArray[row][col].Radius=3000.f + 300.f * PRANDFloatPos() * (float)ShadingFactor;
; 501  : 
; 502  : #endif
; 503  : 
; 504  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?GenerateCloud@RealWeather@@IAEXKK@Z ENDP		; RealWeather::GenerateCloud
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv832 = -392						; size = 4
_sR$ = -388						; size = 4
tv1107 = -384						; size = 4
tv873 = -380						; size = 4
tv848 = -376						; size = 4
_angle$ = -372						; size = 4
tv839 = -368						; size = 4
_cR$ = -364						; size = 4
_distance$ = -360					; size = 4
tv76 = -356						; size = 4
_row$ = -352						; size = 4
_dz$ = -348						; size = 4
_col$ = -344						; size = 4
_dy$ = -340						; size = 4
_dx$ = -336						; size = 4
_adj$ = -332						; size = 4
_yoff$ = -328						; size = 4
_zoff$ = -324						; size = 4
_i$ = -320						; size = 4
tv640 = -313						; size = 1
_this$ = -312						; size = 4
_v0$ = -308						; size = 52
_v2$ = -256						; size = 52
_v3$ = -204						; size = 52
_v1$ = -152						; size = 52
_pv$ = -100						; size = 12
_lp$ = -88						; size = 12
_lp0$ = -76						; size = 12
_p1$ = -64						; size = 12
_lp2$ = -52						; size = 12
_p3$ = -40						; size = 12
_p0$ = -28						; size = 12
_p2$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?DoLightning@RealWeather@@IAEXXZ PROC			; RealWeather::DoLightning
; _this$ = ecx

; 1037 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 392				; 00000188H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1038 : 	int i,row,col;
; 1039 : 	ThreeDVertex v0,v1,v2,v3;
; 1040 : 	Tpoint pv,p0,p1,p2,p3,lp,lp0,lp2;
; 1041 : 	float dx,dy,dz,adj,yoff,zoff,angle,sR,cR,distance;
; 1042 : 
; 1043 : 	if(!drawLightning)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15900], 0
	jne	$LN23@DoLightnin

; 1044 : 	{
; 1045 : 		intervalMS = max(((rand()%30)+20)*SEC_TO_MSEC,50*SEC_TO_MSEC);

	call	_rand
	cdq
	mov	ecx, 30					; 0000001eH
	idiv	ecx
	add	edx, 20					; 00000014H
	imul	edx, 1000				; 000003e8H
	cmp	edx, 50000				; 0000c350H
	jle	SHORT $LN26@DoLightnin
	call	_rand
	cdq
	mov	ecx, 30					; 0000001eH
	idiv	ecx
	add	edx, 20					; 00000014H
	imul	edx, 1000				; 000003e8H
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN27@DoLightnin
$LN26@DoLightnin:
	mov	DWORD PTR tv76[ebp], 50000		; 0000c350H
$LN27@DoLightnin:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR [edx+15828], eax

; 1046 : 
; 1047 : 		lDist = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+15916], xmm0

; 1048 : 		isLightning = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1049 : 
; 1050 : 		row = rand()%(numCells-1);

	call	_rand
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+15660]
	sub	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _row$[ebp], edx

; 1051 : 		col = rand()%(numCells-1);

	call	_rand
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+15660]
	sub	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _col$[ebp], edx

; 1052 : 
; 1053 : 		lightningPos.x = weatherCellArray[row][col].cloudPosX + weatherShiftX;

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15692]
	addss	xmm0, DWORD PTR [ecx+edx+16]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15796], xmm0

; 1054 : 		lightningPos.y = weatherCellArray[row][col].cloudPosY + weatherShiftY;

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15696]
	addss	xmm0, DWORD PTR [ecx+edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15800], xmm0

; 1055 : 		lightningPos.z = stratusZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15716]
	mov	DWORD PTR [edx+15804], ecx

; 1056 : 
; 1057 : 		dx = lightningPos.x-renderer->viewpoint->X();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?X@TViewPoint@@QAEMXZ			; TViewPoint::X
	fstp	DWORD PTR tv832[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15796]
	subss	xmm0, DWORD PTR tv832[ebp]
	movss	DWORD PTR _dx$[ebp], xmm0

; 1058 : 		dy = lightningPos.y-renderer->viewpoint->Y();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?Y@TViewPoint@@QAEMXZ			; TViewPoint::Y
	fstp	DWORD PTR tv839[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15800]
	subss	xmm0, DWORD PTR tv839[ebp]
	movss	DWORD PTR _dy$[ebp], xmm0

; 1059 : 		dz = (-lightningPos.z)-(-renderer->viewpoint->Z());

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15804]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+263088]
	movss	DWORD PTR tv1107[ebp], xmm0
	call	?Z@TViewPoint@@QAEMXZ			; TViewPoint::Z
	fstp	DWORD PTR tv848[ebp]
	movss	xmm0, DWORD PTR tv848[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR tv1107[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _dz$[ebp], xmm1

; 1060 : 		distance = FabsF(SqrtF(dx*dx+dy*dy+dz*dz));

	movss	xmm0, DWORD PTR _dx$[ebp]
	mulss	xmm0, DWORD PTR _dx$[ebp]
	movss	xmm1, DWORD PTR _dy$[ebp]
	mulss	xmm1, DWORD PTR _dy$[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _dz$[ebp]
	mulss	xmm1, DWORD PTR _dz$[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtF@@YAMM@Z				; SqrtF
	fstp	DWORD PTR [esp]
	call	?FabsF@@YAMM@Z				; FabsF
	add	esp, 4
	fstp	DWORD PTR _distance$[ebp]

; 1061 : 		
; 1062 : 		lZM = -stratusZ/128.f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15716]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@43000000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+15908], xmm0

; 1063 : 		lRad = distance*.005f;

	movss	xmm0, DWORD PTR _distance$[ebp]
	mulss	xmm0, DWORD PTR __real@3ba3d70a
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15912], xmm0

; 1064 : 
; 1065 : 		drawLightning = TRUE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15900], 1

; 1066 : 		startMS = SimLibElapsedTime;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [eax+15824], ecx

; 1067 : 	}
; 1068 : 	else

	jmp	$LN1@DoLightnin
$LN23@DoLightnin:

; 1069 : 	{
; 1070 : 		if((SimLibElapsedTime - startMS) <= 300)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	eax, DWORD PTR [edx+15824]
	cmp	eax, 300				; 0000012cH
	ja	$LN21@DoLightnin

; 1071 : 		{
; 1072 : 			if(-renderer->viewpoint->Z() < -stratusZ)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [edx+263088]
	call	?Z@TViewPoint@@QAEMXZ			; TViewPoint::Z
	fstp	DWORD PTR tv873[ebp]
	movss	xmm0, DWORD PTR tv873[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [eax+15716]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	comiss	xmm1, xmm0
	jbe	$LN15@DoLightnin

; 1073 : 			{
; 1074 : 				if((SimLibElapsedTime - startMS) <= 100)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	edx, DWORD PTR [ecx+15824]
	cmp	edx, 100				; 00000064H
	ja	SHORT $LN19@DoLightnin

; 1075 : 				{
; 1076 : 					isLightning = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 1077 : 					TheTimeOfDay.SetScaleFactor(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor

; 1078 : 					TheTimeManager.Refresh();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?Refresh@TimeManager@@QAEXXZ		; TimeManager::Refresh
	jmp	$LN15@DoLightnin
$LN19@DoLightnin:

; 1079 : 				}
; 1080 : 				else if((SimLibElapsedTime - startMS) <= 200)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	edx, DWORD PTR [ecx+15824]
	cmp	edx, 200				; 000000c8H
	ja	SHORT $LN17@DoLightnin

; 1081 : 				{
; 1082 : 					isLightning = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1083 : 					TheTimeOfDay.SetScaleFactor(.99f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f7d70a4
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor

; 1084 : 					TheTimeManager.Refresh();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?Refresh@TimeManager@@QAEXXZ		; TimeManager::Refresh
	jmp	SHORT $LN15@DoLightnin
$LN17@DoLightnin:

; 1085 : 				}
; 1086 : 				else if((SimLibElapsedTime - startMS) <= 300)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	edx, DWORD PTR [ecx+15824]
	cmp	edx, 300				; 0000012cH
	ja	SHORT $LN15@DoLightnin

; 1087 : 				{
; 1088 : 					isLightning = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1

; 1089 : 					TheTimeOfDay.SetScaleFactor(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor

; 1090 : 					TheTimeManager.Refresh();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?Refresh@TimeManager@@QAEXXZ		; TimeManager::Refresh
$LN15@DoLightnin:

; 1091 : 				}
; 1092 : 			}
; 1093 : 
; 1094 : 			if(isLightning)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	$LN14@DoLightnin

; 1095 : 			{
; 1096 : 				renderer->TransformPointToView(&lightningPos,&pv);

	lea	edx, DWORD PTR _pv$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 15796				; 00003db4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TransformPointToView@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToView

; 1097 : 
; 1098 : 				for(i = 0; i < NUM_LIGHTNING_POINTS-1; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@DoLightnin
$LN12@DoLightnin:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN13@DoLightnin:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jge	$LN11@DoLightnin

; 1099 : 				{
; 1100 : 					lp0.x = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _lp0$[ebp], xmm0

; 1101 : 					lp0.y = -lightningPosList[i][0]*100.f;

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR _lightningPosList[eax+ecx*8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _lp0$[ebp+4], xmm0

; 1102 : 					lp0.z =  lightningPosList[i][1]*lZM;

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _lightningPosList[edx+eax*8]
	mulss	xmm0, DWORD PTR [ecx+15908]
	movss	DWORD PTR _lp0$[ebp+8], xmm0

; 1103 : 
; 1104 : 					lp2.x = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _lp2$[ebp], xmm0

; 1105 : 					lp2.y = -lightningPosList[i+1][0]*100.f;

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _i$[ebp]
	movss	xmm0, DWORD PTR _lightningPosList[edx+eax*8+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _lp2$[ebp+4], xmm0

; 1106 : 					lp2.z =  lightningPosList[i+1][1]*lZM;

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _lightningPosList[ecx+edx*8+8]
	mulss	xmm0, DWORD PTR [eax+15908]
	movss	DWORD PTR _lp2$[ebp+8], xmm0

; 1107 : 
; 1108 : 					adj = (-lp0.z)-(-lp2.z);

	movss	xmm0, DWORD PTR _lp0$[ebp+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR _lp2$[ebp+8]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	subss	xmm0, xmm1
	movss	DWORD PTR _adj$[ebp], xmm0

; 1109 : 
; 1110 : 				 	if(adj)	

	movss	xmm0, DWORD PTR _adj$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	$LN10@DoLightnin

; 1111 : 				 	{
; 1112 : 						angle = Atan(0.f,adj);

	push	ecx
	movss	xmm0, DWORD PTR _adj$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	call	?Atan@@YAMMM@Z				; Atan
	add	esp, 8
	fstp	DWORD PTR _angle$[ebp]

; 1113 : 						SinCos(angle-PI/2.f,&sR,&cR);

	lea	ecx, DWORD PTR _cR$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sR$[ebp]
	push	edx
	movss	xmm0, DWORD PTR _angle$[ebp]
	subss	xmm0, DWORD PTR __real@3fc90fdb
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SinCos@@YAXMPAM0@Z			; SinCos
	add	esp, 12					; 0000000cH

; 1114 :  
; 1115 : 						yoff = sR*lRad;				

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _sR$[ebp]
	mulss	xmm0, DWORD PTR [eax+15912]
	movss	DWORD PTR _yoff$[ebp], xmm0

; 1116 : 				   		zoff = cR*lRad;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _cR$[ebp]
	mulss	xmm0, DWORD PTR [ecx+15912]
	movss	DWORD PTR _zoff$[ebp], xmm0

; 1117 : 					}
; 1118 : 					else

	jmp	SHORT $LN9@DoLightnin
$LN10@DoLightnin:

; 1119 : 						yoff = zoff = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _zoff$[ebp], xmm0
	movss	xmm0, DWORD PTR _zoff$[ebp]
	movss	DWORD PTR _yoff$[ebp], xmm0
$LN9@DoLightnin:

; 1120 : 
; 1121 : 					p0 = lp0; p2 = lp2;	p1 = p0; p3 = p2;

	mov	edx, DWORD PTR _lp0$[ebp]
	mov	DWORD PTR _p0$[ebp], edx
	mov	eax, DWORD PTR _lp0$[ebp+4]
	mov	DWORD PTR _p0$[ebp+4], eax
	mov	ecx, DWORD PTR _lp0$[ebp+8]
	mov	DWORD PTR _p0$[ebp+8], ecx
	mov	edx, DWORD PTR _lp2$[ebp]
	mov	DWORD PTR _p2$[ebp], edx
	mov	eax, DWORD PTR _lp2$[ebp+4]
	mov	DWORD PTR _p2$[ebp+4], eax
	mov	ecx, DWORD PTR _lp2$[ebp+8]
	mov	DWORD PTR _p2$[ebp+8], ecx
	mov	edx, DWORD PTR _p0$[ebp]
	mov	DWORD PTR _p1$[ebp], edx
	mov	eax, DWORD PTR _p0$[ebp+4]
	mov	DWORD PTR _p1$[ebp+4], eax
	mov	ecx, DWORD PTR _p0$[ebp+8]
	mov	DWORD PTR _p1$[ebp+8], ecx
	mov	edx, DWORD PTR _p2$[ebp]
	mov	DWORD PTR _p3$[ebp], edx
	mov	eax, DWORD PTR _p2$[ebp+4]
	mov	DWORD PTR _p3$[ebp+4], eax
	mov	ecx, DWORD PTR _p2$[ebp+8]
	mov	DWORD PTR _p3$[ebp+8], ecx

; 1122 : 
; 1123 : 					p3.y += yoff; p3.z += zoff;

	movss	xmm0, DWORD PTR _p3$[ebp+4]
	addss	xmm0, DWORD PTR _yoff$[ebp]
	movss	DWORD PTR _p3$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _p3$[ebp+8]
	addss	xmm0, DWORD PTR _zoff$[ebp]
	movss	DWORD PTR _p3$[ebp+8], xmm0

; 1124 : 					p2.y -= yoff; p2.z -= zoff;

	movss	xmm0, DWORD PTR _p2$[ebp+4]
	subss	xmm0, DWORD PTR _yoff$[ebp]
	movss	DWORD PTR _p2$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _p2$[ebp+8]
	subss	xmm0, DWORD PTR _zoff$[ebp]
	movss	DWORD PTR _p2$[ebp+8], xmm0

; 1125 : 					p1.y -= yoff; p1.z -= zoff;

	movss	xmm0, DWORD PTR _p1$[ebp+4]
	subss	xmm0, DWORD PTR _yoff$[ebp]
	movss	DWORD PTR _p1$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _p1$[ebp+8]
	subss	xmm0, DWORD PTR _zoff$[ebp]
	movss	DWORD PTR _p1$[ebp+8], xmm0

; 1126 : 					p0.y += yoff; p0.z += zoff;

	movss	xmm0, DWORD PTR _p0$[ebp+4]
	addss	xmm0, DWORD PTR _yoff$[ebp]
	movss	DWORD PTR _p0$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _p0$[ebp+8]
	addss	xmm0, DWORD PTR _zoff$[ebp]
	movss	DWORD PTR _p0$[ebp+8], xmm0

; 1127 : 
; 1128 : 					renderer->TransformBillboardPoint(&p0,&pv,&v0);

	lea	edx, DWORD PTR _v0$[ebp]
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1129 : 					renderer->TransformBillboardPoint(&p1,&pv,&v1);

	lea	eax, DWORD PTR _v1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pv$[ebp]
	push	ecx
	lea	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1130 : 					renderer->TransformBillboardPoint(&p2,&pv,&v2);

	lea	ecx, DWORD PTR _v2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pv$[ebp]
	push	edx
	lea	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1131 : 					renderer->TransformBillboardPoint(&p3,&pv,&v3);

	lea	edx, DWORD PTR _v3$[ebp]
	push	edx
	lea	eax, DWORD PTR _pv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?TransformBillboardPoint@Render3D@@QAEXPAUTpoint@@0PAUThreeDVertex@@@Z ; Render3D::TransformBillboardPoint

; 1132 : 
; 1133 : 					v0.u = TEX_UV_MIN, v0.v = TEX_UV_MIN, v0.q = v0.csZ * Q_SCALE;

	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v0$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v0$[ebp+28], xmm0
	movss	xmm0, DWORD PTR _v0$[ebp+48]
	mulss	xmm0, DWORD PTR _Q_SCALE
	movss	DWORD PTR _v0$[ebp+32], xmm0

; 1134 : 					v1.u = TEX_UV_MAX, v1.v = TEX_UV_MIN, v1.q = v1.csZ * Q_SCALE;

	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v1$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v1$[ebp+28], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+48]
	mulss	xmm0, DWORD PTR _Q_SCALE
	movss	DWORD PTR _v1$[ebp+32], xmm0

; 1135 : 					v2.u = TEX_UV_MAX, v2.v = TEX_UV_MAX, v2.q = v2.csZ * Q_SCALE;

	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v2$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v2$[ebp+28], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+48]
	mulss	xmm0, DWORD PTR _Q_SCALE
	movss	DWORD PTR _v2$[ebp+32], xmm0

; 1136 : 					v3.u = TEX_UV_MIN, v3.v = TEX_UV_MAX, v3.q = v3.csZ * Q_SCALE;

	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _v3$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _v3$[ebp+28], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+48]
	mulss	xmm0, DWORD PTR _Q_SCALE
	movss	DWORD PTR _v3$[ebp+32], xmm0

; 1137 : 
; 1138 : 					if(greenMode)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15884], 0
	je	$LN8@DoLightnin

; 1139 : 					{
; 1140 : 						v0.r = v1.r = v2.r = v3.r = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v3$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+8]
	movss	DWORD PTR _v2$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+8]
	movss	DWORD PTR _v1$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+8]
	movss	DWORD PTR _v0$[ebp+8], xmm0

; 1141 : 						v0.g = v1.g = v2.g = v3.g = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _v3$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+12]
	movss	DWORD PTR _v2$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+12]
	movss	DWORD PTR _v1$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+12]
	movss	DWORD PTR _v0$[ebp+12], xmm0

; 1142 : 						v0.b = v1.b = v2.b = v3.b = 0.f;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _v3$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+16]
	movss	DWORD PTR _v2$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+16]
	movss	DWORD PTR _v1$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+16]
	movss	DWORD PTR _v0$[ebp+16], xmm0

; 1143 : 					}
; 1144 : 					else

	jmp	$LN7@DoLightnin
$LN8@DoLightnin:

; 1145 : 					{
; 1146 : 						v0.r = v1.r = v2.r = v3.r = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _v3$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+8]
	movss	DWORD PTR _v2$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+8]
	movss	DWORD PTR _v1$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+8]
	movss	DWORD PTR _v0$[ebp+8], xmm0

; 1147 : 						v0.g = v1.g = v2.g = v3.g = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _v3$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+12]
	movss	DWORD PTR _v2$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+12]
	movss	DWORD PTR _v1$[ebp+12], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+12]
	movss	DWORD PTR _v0$[ebp+12], xmm0

; 1148 : 						v0.b = v1.b = v2.b = v3.b = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _v3$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+16]
	movss	DWORD PTR _v2$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+16]
	movss	DWORD PTR _v1$[ebp+16], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+16]
	movss	DWORD PTR _v0$[ebp+16], xmm0
$LN7@DoLightnin:

; 1149 : 					}
; 1150 : 			
; 1151 : 					v0.a = v1.a = v2.a = v3.a = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _v3$[ebp+20], xmm0
	movss	xmm0, DWORD PTR _v3$[ebp+20]
	movss	DWORD PTR _v2$[ebp+20], xmm0
	movss	xmm0, DWORD PTR _v2$[ebp+20]
	movss	DWORD PTR _v1$[ebp+20], xmm0
	movss	xmm0, DWORD PTR _v1$[ebp+20]
	movss	DWORD PTR _v0$[ebp+20], xmm0

; 1152 : 			
; 1153 : 					if(v0.csZ > 50.f)

	movss	xmm0, DWORD PTR _v0$[ebp+48]
	comiss	xmm0, DWORD PTR __real@42480000
	jbe	SHORT $LN6@DoLightnin

; 1154 : 						renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD);

	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState

; 1155 : 					else

	jmp	SHORT $LN5@DoLightnin
$LN6@DoLightnin:

; 1156 : 						renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD_PERSPECTIVE);

	push	33					; 00000021H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	add	ecx, 100				; 00000064H
	call	?RestoreState@ContextMPR@@QAEXH@Z	; ContextMPR::RestoreState
$LN5@DoLightnin:

; 1157 : 			
; 1158 : 					renderer->context.SelectTexture1(lightningTexture.TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 100				; 00000064H
	call	?SelectTexture1@ContextMPR@@QAEXH@Z	; ContextMPR::SelectTexture1

; 1159 : 					renderer->DrawSquare(&v0,&v1,&v2,&v3,CULL_ALLOW_ALL,(g_nGfxFix > 0));

	cmp	DWORD PTR ?g_nGfxFix@@3HA, 0		; g_nGfxFix
	jle	SHORT $LN28@DoLightnin
	mov	BYTE PTR tv640[ebp], 1
	jmp	SHORT $LN29@DoLightnin
$LN28@DoLightnin:
	mov	BYTE PTR tv640[ebp], 0
$LN29@DoLightnin:
	push	0
	movzx	ecx, BYTE PTR tv640[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _v3$[ebp]
	push	edx
	lea	eax, DWORD PTR _v2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _v1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _v0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?DrawSquare@Render3D@@QAEXPAUThreeDVertex@@000H_N1@Z ; Render3D::DrawSquare

; 1160 : 				}

	jmp	$LN12@DoLightnin
$LN11@DoLightnin:

; 1161 : 
; 1162 : 				memcpy(&lp,&lightningPos,sizeof(Tpoint));

	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15796				; 00003db4H
	push	ecx
	lea	edx, DWORD PTR _lp$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 1163 : 				lp.z = renderer->viewpoint->GetGroundLevel(lp.x,lp.y);

	push	0
	push	0
	push	ecx
	movss	xmm0, DWORD PTR _lp$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _lp$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+263088]
	call	?GetGroundLevel@TViewPoint@@QAEMMMPAUTpoint@@PAH@Z ; TViewPoint::GetGroundLevel
	fstp	DWORD PTR _lp$[ebp+8]

; 1164 : 				renderer->TransformPointToViewSwapped(&lp,&lightningGroundPos);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	lea	eax, DWORD PTR _lp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 1165 : 				lightningGroundPos.x += lp2.y;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+24]
	addss	xmm0, DWORD PTR _lp2$[ebp+4]
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+24], xmm0
$LN14@DoLightnin:

; 1166 : 			}
; 1167 : 		}
; 1168 : 		else

	jmp	$LN4@DoLightnin
$LN21@DoLightnin:

; 1169 : 		{
; 1170 : 			if(isLightning && g_bHearThunder)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	$LN3@DoLightnin
	movzx	edx, BYTE PTR ?g_bHearThunder@@3_NA	; g_bHearThunder
	test	edx, edx
	je	$LN3@DoLightnin

; 1171 : 			{
; 1172 : 				static int uid=0;
; 1173 : 				F4SoundFXSetPos(SFX_THUNDER,TRUE,lightningPos.x,lightningPos.y,lightningPos.z,1,0,uid);

	mov	eax, DWORD PTR ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+15804]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+15800]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+15796]
	movss	DWORD PTR [esp], xmm0
	push	1
	push	188					; 000000bcH
	call	_F4SoundFXSetPos
	add	esp, 32					; 00000020H

; 1174 : // 7-11-04 version				F4SoundFXSetPos(SFX_THUNDER,FALSE,lightningPos.x,lightningPos.y,lightningPos.z,1,0,0,0,0,uid,0);
; 1175 : 				uid++;

	mov	ecx, DWORD PTR ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA
	add	ecx, 1
	mov	DWORD PTR ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA, ecx

; 1176 : 				if (uid > 99)

	cmp	DWORD PTR ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA, 99 ; 00000063H
	jle	SHORT $LN2@DoLightnin

; 1177 : 					uid = 0;

	mov	DWORD PTR ?uid@?CO@??DoLightning@RealWeather@@IAEXXZ@4HA, 0
$LN2@DoLightnin:

; 1178 : 				TheTimeOfDay.SetScaleFactor(.99f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f7d70a4
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor

; 1179 : 				TheTimeManager.Refresh();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?Refresh@TimeManager@@QAEXXZ		; TimeManager::Refresh
$LN3@DoLightnin:

; 1180 : 			}
; 1181 : 
; 1182 : 			isLightning = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN4@DoLightnin:

; 1183 : 		}
; 1184 : 
; 1185 : 		if((SimLibElapsedTime - startMS) > intervalMS)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	ecx, DWORD PTR [eax+15824]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+15828]
	jbe	SHORT $LN1@DoLightnin

; 1186 : 		{
; 1187 : 			drawLightning = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15900], 0
$LN1@DoLightnin:

; 1188 : 		}
; 1189 : 	}
; 1190 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DoLightning@RealWeather@@IAEXXZ ENDP			; RealWeather::DoLightning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DrawRain@RealWeather@@IAEXXZ PROC			; RealWeather::DrawRain
; _this$ = ecx

; 946  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 947  : #if 0 // FRB - Disable rain for now.  It looks really bad.
; 948  : 	int i;
; 949  : 	Tpoint p0,p1,p2,p3;
; 950  : 	float vel,pitch,yaw,brdsize;
; 951  : 	ThreeDVertex v0,v1,v2,v3;
; 952  : 	SimBaseClass *otwPlatform = OTWDriver.GraphicsOwnship();
; 953  : 	
; 954  : 	if(otwPlatform)
; 955  : 	{
; 956  : 		yaw	= ((SimMoverClass *)otwPlatform)->Yaw();
; 957  : 		vel = min(((SimMoverClass *)otwPlatform)->GetKias(),30.f);
; 958  : 		pitch = vel*(((SimMoverClass *)otwPlatform)->Pitch()-90.f*DTR)/30.f;
; 959  : 	}
; 960  : 	else
; 961  : 		yaw = vel = pitch = 0;
; 962  : 
; 963  : 	brdsize = 80.0f;
; 964  : 
; 965  : 	p0.x=p0.y=p0.z=0;
; 966  : 	for(i = 0; i < 200; i++)
; 967  : 	{
; 968  : 		if(targetCompressionRatio)
; 969  : 		{
; 970  : 		    rainX = PRANDFloat()*50.f;
; 971  : 		    rainY = PRANDFloat()*50.f;
; 972  : 		    rainZ = PRANDFloat()*50.f;
; 973  : 		}
; 974  : 
; 975  : 		if(!(rainX > -40 && rainX < 40
; 976  : 		&&   rainY > -26 && rainY < 26
; 977  : 		&&   rainZ > -40 && rainZ < 40))
; 978  : 		{
; 979  : 			p0.x = -brdsize + rainX;
; 980  : 			p0.y =  0 + rainY;
; 981  : 			p0.z = -brdsize + rainZ;
; 982  : 			RotatePoint(&p0,pitch,0,yaw);
; 983  : 			renderer->TransformCameraCentricPoint(&p0,&v0);
; 984  : 
; 985  : 			p1.x =  brdsize + rainX;
; 986  : 			p1.y =  0 + rainY;
; 987  : 			p1.z = -brdsize + rainZ;
; 988  : 			RotatePoint(&p1,pitch,0,yaw);
; 989  : 			renderer->TransformCameraCentricPoint(&p1,&v1);
; 990  : 
; 991  : 			p2.x =  brdsize + rainX;
; 992  : 			p2.y =  0 + rainY;
; 993  : 			p2.z =  brdsize + rainZ;
; 994  : 			RotatePoint(&p2,pitch,0,yaw);
; 995  : 			renderer->TransformCameraCentricPoint(&p2,&v2);
; 996  : 
; 997  : 			p3.x = -brdsize + rainX;
; 998  : 			p3.y =  0 + rainY;
; 999  : 			p3.z =  brdsize + rainZ;
; 1000 : 			RotatePoint(&p3,pitch,0,yaw);
; 1001 : 			renderer->TransformCameraCentricPoint(&p3,&v3);
; 1002 : 
; 1003 : 			v0.u = TEX_UV_MIN, v0.v = TEX_UV_MIN, v0.q = v0.csZ * Q_SCALE;
; 1004 : 			v1.u = TEX_UV_MAX, v1.v = TEX_UV_MIN, v1.q = v1.csZ * Q_SCALE;
; 1005 : 			v2.u = TEX_UV_MAX, v2.v = TEX_UV_MAX, v2.q = v2.csZ * Q_SCALE;
; 1006 : 			v3.u = TEX_UV_MIN, v3.v = TEX_UV_MAX, v3.q = v3.csZ * Q_SCALE;
; 1007 : 
; 1008 : 			if(greenMode)
; 1009 : 			{
; 1010 : 				v0.r = v1.r = v2.r = v3.r = 0.f;
; 1011 : 				v0.g = v1.g = v2.g = v3.g = .2f;
; 1012 : 				v0.b = v1.b = v2.b = v3.b = 0.f;
; 1013 : 			}
; 1014 : 			else
; 1015 : 			{
; 1016 : 				v0.r = v1.r = (1.f * .2f) + (litCloudColor.r * .8f);
; 1017 : 				v2.r = v3.r = (.4f * .2f) + (litCloudColor.r * .8f);
; 1018 : 
; 1019 : 				v0.g = v1.g = (1.f * .2f) + (litCloudColor.g * .8f);
; 1020 : 				v2.g = v3.g = (.4f * .2f) + (litCloudColor.g * .8f);
; 1021 : 
; 1022 : 				v0.b = v1.b = (1.f * .2f) + (litCloudColor.b * .8f);
; 1023 : 				v2.b = v3.b = (.4f * .2f) + (litCloudColor.b * .8f);
; 1024 : 			}
; 1025 : 
; 1026 : 			v0.a = v1.a = v2.a = v3.a = 1.f;
; 1027 : 
; 1028 : 			renderer->context.RestoreState(STATE_ALPHA_TEXTURE_GOURAUD_PERSPECTIVE);
; 1029 : 			renderer->context.SelectTexture1(rainTexture.TexHandle());
; 1030 : 			renderer->DrawSquare(&v0,&v1,&v2,&v3,CULL_ALLOW_ALL,/*(g_nGfxFix > 0)*/ 0);
; 1031 : 		}
; 1032 : 	}
; 1033 : #endif
; 1034 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DrawRain@RealWeather@@IAEXXZ ENDP			; RealWeather::DrawRain
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_range$1 = -256						; size = 4
_range$2 = -252						; size = 4
tv439 = -248						; size = 4
_CloudAlpha$ = -244					; size = 4
_p$ = -240						; size = 4
tv163 = -236						; size = 4
_Stratus1Alpha$ = -232					; size = 4
_Ambient$ = -228					; size = 4
_dx$3 = -224						; size = 4
_ObserverPos$ = -220					; size = 4
tv642 = -216						; size = 4
tv136 = -212						; size = 4
_dy$4 = -208						; size = 4
_sTxtIndex$ = -204					; size = 4
_cTxtIndex$ = -200					; size = 4
_dy$5 = -196						; size = 4
_dx$6 = -192						; size = 4
tv147 = -188						; size = 4
_Stratus2Alpha$ = -184					; size = 4
_ZRandFactor$7 = -180					; size = 4
_q$ = -176						; size = 4
_sideRandFactor$8 = -172				; size = 4
_cPntIndex$ = -168					; size = 4
_CloudShading$ = -164					; size = 4
_r$ = -160						; size = 4
_stratusShadingFactor$ = -156				; size = 4
_StratusShading$ = -152					; size = 4
_SunPitch$ = -148					; size = 4
_Stratus1Z$ = -144					; size = 4
_Radius$9 = -140					; size = 4
_DrawTheRain$ = -133					; size = 1
_row$ = -132						; size = 4
_col$ = -128						; size = 4
_i$ = -124						; size = 4
_this$ = -120						; size = 4
_stratusPos$ = -116					; size = 12
_cumulusPos$ = -104					; size = 12
_wp$ = -92						; size = 12
_shadowPos$ = -80					; size = 12
_vp$ = -68						; size = 48
_clipFlag$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
?UpdateDrawables@RealWeather@@IAEXXZ PROC		; RealWeather::UpdateDrawables
; _this$ = ecx

; 702  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 703  : 	bool	DrawTheRain=false;

	mov	BYTE PTR _DrawTheRain$[ebp], 0

; 704  : 
; 705  : 	if(!renderer) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN36@UpdateDraw
	jmp	$LN37@UpdateDraw
$LN36@UpdateDraw:

; 706  : 	//START_PROFILE("Clouds");
; 707  : 	
; 708  : 	// Get the Observer position order
; 709  : 	DWORD	ObserverPos = GetObserverOrder(viewerZ);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+15708]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetObserverOrder@RealWeather@@IAEKM@Z	; RealWeather::GetObserverOrder
	mov	DWORD PTR _ObserverPos$[ebp], eax

; 710  : 	// get the original startus position
; 711  : 	float	Stratus1Z = stratusZ;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15716]
	movss	DWORD PTR _Stratus1Z$[ebp], xmm0

; 712  : 	// if weather bad, position is upper or lower the stratus ( overcast ) layer
; 713  : 	if(weatherCondition > FAIR){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	jle	SHORT $LN33@UpdateDraw

; 714  : 		// Stratus 1 is mover lower or upper based on observer position
; 715  : 		if(ObserverPos == OBSERVER_LOW) Stratus1Z += stratusDepth / 2.0f;

	cmp	DWORD PTR _ObserverPos$[ebp], 0
	jne	SHORT $LN34@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15744]
	divss	xmm0, DWORD PTR __real@40000000
	addss	xmm0, DWORD PTR _Stratus1Z$[ebp]
	movss	DWORD PTR _Stratus1Z$[ebp], xmm0
	jmp	SHORT $LN33@UpdateDraw
$LN34@UpdateDraw:

; 716  : 		else Stratus1Z -= stratusDepth / 2.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15744]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR _Stratus1Z$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _Stratus1Z$[ebp], xmm1
$LN33@UpdateDraw:

; 717  : 	}
; 718  : 
; 719  : 
; 720  : 	// COBRA - DX - setup the Hi & Lo colours for the Clouds
; 721  : 	// RV - I-Hawk - added alpha and lowered shading
; 722  : 
; 723  : #if CLOUDS_FIX	
; 724  : 
; 725  : 	float CloudShading = 1.0f - 0.025f * (float)ShadingFactor;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3ccccccd
	mulss	xmm0, DWORD PTR [eax+15748]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR _CloudShading$[ebp], xmm1

; 726  : 	float CloudAlpha =  0.9f + (float)ShadingFactor * 0.01f; //1.0f - (float)ShadingFactor * 0.02f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15748]
	mulss	xmm0, DWORD PTR __real@3c23d70a
	addss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR _CloudAlpha$[ebp], xmm0

; 727  : 
; 728  : #else
; 729  : 
; 730  : 	float CloudShading = 0.95f - 0.05f * (float)ShadingFactor;
; 731  : 	float CloudAlpha = 0.5f + (float)ShadingFactor * 0.05f;
; 732  : 
; 733  : #endif
; 734  : 
; 735  : 	//RV - I-Hawk - Added another factor for keeping the changes in cumulus shading as older code
; 736  : 	float stratusShadingFactor = 0.95f - 0.05f * (float)ShadingFactor;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3d4ccccd
	mulss	xmm0, DWORD PTR [edx+15748]
	movss	xmm1, DWORD PTR __real@3f733333
	subss	xmm1, xmm0
	movss	DWORD PTR _stratusShadingFactor$[ebp], xmm1

; 737  : 		
; 738  : 	float Ambient=TheTimeOfDay.GetDiffuseValue();

	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetDiffuseValue@CTimeOfDay@@QAEMXZ	; CTimeOfDay::GetDiffuseValue
	fstp	DWORD PTR _Ambient$[ebp]

; 739  : 	
; 740  : 	float Stratus1Alpha;
; 741  : 	float StratusShading;
; 742  : 	if(weatherCondition <= FAIR){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	jg	$LN32@UpdateDraw

; 743  : 		// Stratus 1 Alpha, depends on ShadingFactor and illumination
; 744  : 		Stratus1Alpha=max(0.0f, 1.0f - 0.4f * stratusShadingFactor - Ambient * 0.4f);

	movss	xmm0, DWORD PTR __real@3ecccccd
	mulss	xmm0, DWORD PTR _stratusShadingFactor$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR _Ambient$[ebp]
	mulss	xmm0, DWORD PTR __real@3ecccccd
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN39@UpdateDraw
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv136[ebp], xmm0
	jmp	SHORT $LN40@UpdateDraw
$LN39@UpdateDraw:
	movss	xmm0, DWORD PTR __real@3ecccccd
	mulss	xmm0, DWORD PTR _stratusShadingFactor$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR _Ambient$[ebp]
	mulss	xmm0, DWORD PTR __real@3ecccccd
	subss	xmm1, xmm0
	movss	DWORD PTR tv136[ebp], xmm1
$LN40@UpdateDraw:
	movss	xmm0, DWORD PTR tv136[ebp]
	movss	DWORD PTR _Stratus1Alpha$[ebp], xmm0

; 745  : 		StratusShading = 1.0f - 0.02f * (float)ShadingFactor;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3ca3d70a
	mulss	xmm0, DWORD PTR [ecx+15748]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR _StratusShading$[ebp], xmm1

; 746  : 	} else {	

	jmp	SHORT $LN31@UpdateDraw
$LN32@UpdateDraw:

; 747  : 		// if Bad weather, Stratus1 more dense and darker...
; 748  : 		Stratus1Alpha=0.7f + 0.02f * ShadingFactor;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3ca3d70a
	mulss	xmm0, DWORD PTR [edx+15748]
	addss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR _Stratus1Alpha$[ebp], xmm0

; 749  : 		StratusShading = (ObserverPos == OBSERVER_LOW) ? 0.7f - 0.03f * (float)ShadingFactor : 0.9f;

	cmp	DWORD PTR _ObserverPos$[ebp], 0
	jne	SHORT $LN41@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3cf5c28f
	mulss	xmm0, DWORD PTR [eax+15748]
	movss	xmm1, DWORD PTR __real@3f333333
	subss	xmm1, xmm0
	movss	DWORD PTR tv147[ebp], xmm1
	jmp	SHORT $LN42@UpdateDraw
$LN41@UpdateDraw:
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR tv147[ebp], xmm0
$LN42@UpdateDraw:
	movss	xmm0, DWORD PTR tv147[ebp]
	movss	DWORD PTR _StratusShading$[ebp], xmm0
$LN31@UpdateDraw:

; 750  : 	}
; 751  : 
; 752  : 	// Stratus 2 Alpha, Depends on Shading and Sun pitch
; 753  : 	float	  SunPitch=(float)TheTimeOfDay.GetSunPitch();

	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetSunPitch@CTimeOfDay@@QAEHXZ		; CTimeOfDay::GetSunPitch
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _SunPitch$[ebp], xmm0

; 754  : 	if(SunPitch<10.0f) SunPitch=10.0f;

	movss	xmm0, DWORD PTR __real@41200000
	comiss	xmm0, DWORD PTR _SunPitch$[ebp]
	jbe	SHORT $LN30@UpdateDraw
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR _SunPitch$[ebp], xmm0
$LN30@UpdateDraw:

; 755  : 	float Stratus2Alpha=max(0.0f, 1.0f - 0.3f * stratusShadingFactor - SunPitch / 4000.0f);

	movss	xmm0, DWORD PTR __real@3e99999a
	mulss	xmm0, DWORD PTR _stratusShadingFactor$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR _SunPitch$[ebp]
	divss	xmm0, DWORD PTR __real@457a0000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, xmm1
	jbe	SHORT $LN43@UpdateDraw
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR tv163[ebp], xmm0
	jmp	SHORT $LN44@UpdateDraw
$LN43@UpdateDraw:
	movss	xmm0, DWORD PTR __real@3e99999a
	mulss	xmm0, DWORD PTR _stratusShadingFactor$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	xmm0, DWORD PTR _SunPitch$[ebp]
	divss	xmm0, DWORD PTR __real@457a0000
	subss	xmm1, xmm0
	movss	DWORD PTR tv163[ebp], xmm1
$LN44@UpdateDraw:
	movss	xmm0, DWORD PTR tv163[ebp]
	movss	DWORD PTR _Stratus2Alpha$[ebp], xmm0

; 756  : 	if(weatherCondition > FAIR) Stratus2Alpha /= 4.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15688], 2
	jle	SHORT $LN29@UpdateDraw
	movss	xmm0, DWORD PTR _Stratus2Alpha$[ebp]
	divss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR _Stratus2Alpha$[ebp], xmm0
$LN29@UpdateDraw:

; 757  : 
; 758  : 	CloudHiColor=F_TO_ARGB(CloudAlpha, litCloudColor.r, litCloudColor.g, litCloudColor.b);

	movss	xmm0, DWORD PTR _CloudAlpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15948], esi

; 759  : 	CloudLoColor=F_TO_ARGB(CloudAlpha, litCloudColor.r*CloudShading, litCloudColor.g*CloudShading, litCloudColor.b*CloudShading);

	movss	xmm0, DWORD PTR _CloudAlpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A
	mulss	xmm0, DWORD PTR _CloudShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR _CloudShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR _CloudShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15944], esi

; 760  : 
; 761  : 	Stratus2Color=F_TO_ARGB(Stratus2Alpha, litCloudColor.r, litCloudColor.g, litCloudColor.b);

	movss	xmm0, DWORD PTR _Stratus2Alpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15956], esi

; 762  : 	Stratus1Color=F_TO_ARGB(Stratus1Alpha, litCloudColor.r * StratusShading, litCloudColor.g * StratusShading, litCloudColor.b * StratusShading);

	movss	xmm0, DWORD PTR _Stratus1Alpha$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	esi, eax
	shl	esi, 24					; 00000018H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A
	mulss	xmm0, DWORD PTR _StratusShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	mov	edi, eax
	shl	edi, 16					; 00000010H
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+4
	mulss	xmm0, DWORD PTR _StratusShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	shl	eax, 8
	or	edi, eax
	movss	xmm0, DWORD PTR ?litCloudColor@RealWeather@@1UTcolor@@A+8
	mulss	xmm0, DWORD PTR _StratusShading$[ebp]
	mulss	xmm0, DWORD PTR __real@437fe666
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?F_I32@@YAKM@Z				; F_I32
	add	esp, 4
	or	edi, eax
	or	esi, edi
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15952], esi

; 763  : 
; 764  : 	DWORD clipFlag[4];
; 765  : 	Tpoint wp,vp[4],cumulusPos,stratusPos,shadowPos;
; 766  : 	int i,row,col,sTxtIndex,cTxtIndex,cPntIndex,p=0,q=0,r=0;

	mov	DWORD PTR _p$[ebp], 0
	mov	DWORD PTR _q$[ebp], 0
	mov	DWORD PTR _r$[ebp], 0

; 767  : 
; 768  : 	for(row = drawableCell; row < numCells-drawableCell; row++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15676]
	mov	DWORD PTR _row$[ebp], ecx
	jmp	SHORT $LN28@UpdateDraw
$LN27@UpdateDraw:
	mov	edx, DWORD PTR _row$[ebp]
	add	edx, 1
	mov	DWORD PTR _row$[ebp], edx
$LN28@UpdateDraw:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+15660]
	sub	edx, DWORD PTR [ecx+15676]
	cmp	DWORD PTR _row$[ebp], edx
	jge	$LN26@UpdateDraw

; 769  : 	{
; 770  : 		for(col = drawableCell; col < numCells-drawableCell; col++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15676]
	mov	DWORD PTR _col$[ebp], ecx
	jmp	SHORT $LN25@UpdateDraw
$LN24@UpdateDraw:
	mov	edx, DWORD PTR _col$[ebp]
	add	edx, 1
	mov	DWORD PTR _col$[ebp], edx
$LN25@UpdateDraw:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+15660]
	sub	edx, DWORD PTR [ecx+15676]
	cmp	DWORD PTR _col$[ebp], edx
	jge	$LN23@UpdateDraw

; 771  : 		{
; 772  : 			sTxtIndex = weatherCellArray[row][col].sTxtIndex;

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR [edx+eax+24]
	mov	DWORD PTR _sTxtIndex$[ebp], ecx

; 773  : 			stratusPos.x = weatherCellArray[row][col].cloudPosX + weatherShiftX;

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15692]
	addss	xmm0, DWORD PTR [ecx+edx+16]
	movss	DWORD PTR _stratusPos$[ebp], xmm0

; 774  : 			stratusPos.y = weatherCellArray[row][col].cloudPosY + weatherShiftY;

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15696]
	addss	xmm0, DWORD PTR [eax+ecx+20]
	movss	DWORD PTR _stratusPos$[ebp+4], xmm0

; 775  : 
; 776  : 			stratusPos.z = Stratus1Z;

	movss	xmm0, DWORD PTR _Stratus1Z$[ebp]
	movss	DWORD PTR _stratusPos$[ebp+8], xmm0

; 777  : 			// RV - I-Hawk - Removed the lower stratus drawing
; 778  : 			// FRB - Daytime only
; 779  : 			if( TimeOfDayGeneral() == TOD_DAY)

	call	?TimeOfDayGeneral@@YAHXZ		; TimeOfDayGeneral
	cmp	eax, 3
	jne	SHORT $LN22@UpdateDraw

; 780  : 				DrawStratus(&stratusPos, sTxtIndex); 

	mov	eax, DWORD PTR _sTxtIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stratusPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawStratus@RealWeather@@QAEXPAUTpoint@@H@Z ; RealWeather::DrawStratus
$LN22@UpdateDraw:

; 781  : 
; 782  : 			stratusPos.z = stratus2Z;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15720]
	movss	DWORD PTR _stratusPos$[ebp+8], xmm0

; 783  : 			DrawStratus2(&stratusPos,sTxtIndex);

	mov	eax, DWORD PTR _sTxtIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stratusPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawStratus2@RealWeather@@QAEXPAUTpoint@@H@Z ; RealWeather::DrawStratus2

; 784  : 
; 785  : 			if(weatherCondition == FAIR || (weatherCondition > FAIR && InsideOvercast()))

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15688], 2
	je	SHORT $LN20@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	jle	$LN17@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsideOvercast@RealWeather@@QAE_NXZ	; RealWeather::InsideOvercast
	movzx	ecx, al
	test	ecx, ecx
	je	$LN17@UpdateDraw
$LN20@UpdateDraw:

; 786  : 			{
; 787  : 				for(i = 0; i < NUM_3DCLOUD_POLYS; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN19@UpdateDraw
$LN18@UpdateDraw:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN19@UpdateDraw:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jge	$LN17@UpdateDraw

; 788  : 				{
; 789  : 					cPntIndex = weatherCellArray[row][col].cPntIndex[i];

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	add	edx, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx+ecx*4+108]
	mov	DWORD PTR _cPntIndex$[ebp], edx

; 790  : 					cTxtIndex = weatherCellArray[row][col].cTxtIndex[i];

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	add	edx, eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx+ecx*4+28]
	mov	DWORD PTR _cTxtIndex$[ebp], edx

; 791  : 					
; 792  : 					//RV - I-Hawk - the drawing order change
; 793  : #if CLOUDS_FIX
; 794  : 					// Do some fake random stuff to decide how to draw
; 795  : 					if ( i % 2 )

	mov	eax, DWORD PTR _i$[ebp]
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN47@UpdateDraw
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN47@UpdateDraw:
	test	eax, eax
	je	$LN16@UpdateDraw

; 796  : 					{
; 797  : 						float sideRandFactor, ZRandFactor;
; 798  : 
; 799  : 						if ( i % 3 )

	mov	eax, DWORD PTR _i$[ebp]
	cdq
	mov	ecx, 3
	idiv	ecx
	test	edx, edx
	je	SHORT $LN15@UpdateDraw

; 800  : 						{
; 801  : 							sideRandFactor = ZRandFactor = 1;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _ZRandFactor$7[ebp], xmm0
	movss	xmm0, DWORD PTR _ZRandFactor$7[ebp]
	movss	DWORD PTR _sideRandFactor$8[ebp], xmm0

; 802  : 						}
; 803  : 
; 804  : 						else

	jmp	SHORT $LN14@UpdateDraw
$LN15@UpdateDraw:

; 805  : 						{
; 806  : 							sideRandFactor = -1;

	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _sideRandFactor$8[ebp], xmm0

; 807  : 							ZRandFactor = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _ZRandFactor$7[ebp], xmm0
$LN14@UpdateDraw:

; 808  : 						}
; 809  :                        
; 810  :                         // The regulare drawing, but with less space between the puffs
; 811  :                         // make the clouds more 3D
; 812  : 						cumulusPos.x = (stratusPos.x + (float)(i-2) * /*puffRadius*/ weatherCellArray[row][col].Radius * 0.075f * sideRandFactor);

	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 2
	cvtsi2ss xmm0, edx
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mulss	xmm0, DWORD PTR [edx+eax+188]
	mulss	xmm0, DWORD PTR __real@3d99999a
	mulss	xmm0, DWORD PTR _sideRandFactor$8[ebp]
	addss	xmm0, DWORD PTR _stratusPos$[ebp]
	movss	DWORD PTR _cumulusPos$[ebp], xmm0

; 813  : 						cumulusPos.y = (stratusPos.y + (float)(i-2) * /*puffRadius*/ weatherCellArray[row][col].Radius * 0.075f * sideRandFactor);

	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 2
	cvtsi2ss xmm0, ecx
	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mulss	xmm0, DWORD PTR [ecx+edx+188]
	mulss	xmm0, DWORD PTR __real@3d99999a
	mulss	xmm0, DWORD PTR _sideRandFactor$8[ebp]
	addss	xmm0, DWORD PTR _stratusPos$[ebp+4]
	movss	DWORD PTR _cumulusPos$[ebp+4], xmm0

; 814  : 						cumulusPos.z = cumulusZ + 500.0f * ZRandFactor -5000;

	movss	xmm0, DWORD PTR __real@43fa0000
	mulss	xmm0, DWORD PTR _ZRandFactor$7[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+15712]
	subss	xmm0, DWORD PTR __real@459c4000
	movss	DWORD PTR _cumulusPos$[ebp+8], xmm0

; 815  : 					}
; 816  : 
; 817  : 					else

	jmp	$LN13@UpdateDraw
$LN16@UpdateDraw:

; 818  : 					{	
; 819  : 					    // The old-style BMS drawing method
; 820  : 						cumulusPos.x = stratusPos.x+((cloudPntList[cPntIndex][0]*1.8f)/30.f);

	mov	ecx, DWORD PTR _cPntIndex$[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, 4
	imul	edx, 0
	movss	xmm0, DWORD PTR _cloudPntList[ecx+edx]
	mulss	xmm0, DWORD PTR __real@3fe66666
	divss	xmm0, DWORD PTR __real@41f00000
	addss	xmm0, DWORD PTR _stratusPos$[ebp]
	movss	DWORD PTR _cumulusPos$[ebp], xmm0

; 821  : 						cumulusPos.y = stratusPos.y+((cloudPntList[cPntIndex][2]*1.8f)/30.f);

	mov	eax, DWORD PTR _cPntIndex$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, 4
	shl	ecx, 1
	movss	xmm0, DWORD PTR _cloudPntList[eax+ecx]
	mulss	xmm0, DWORD PTR __real@3fe66666
	divss	xmm0, DWORD PTR __real@41f00000
	addss	xmm0, DWORD PTR _stratusPos$[ebp+4]
	movss	DWORD PTR _cumulusPos$[ebp+4], xmm0

; 822  : 						cumulusPos.z = cumulusZ-((cloudPntList[cPntIndex][1]*1.8f)/30.f)-5000;

	mov	edx, DWORD PTR _cPntIndex$[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, 4
	shl	eax, 0
	movss	xmm0, DWORD PTR _cloudPntList[edx+eax]
	mulss	xmm0, DWORD PTR __real@3fe66666
	divss	xmm0, DWORD PTR __real@41f00000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+15712]
	subss	xmm1, xmm0
	subss	xmm1, DWORD PTR __real@459c4000
	movss	DWORD PTR _cumulusPos$[ebp+8], xmm1
$LN13@UpdateDraw:

; 823  : 					}
; 824  : #else
; 825  : 
; 826  : 					cumulusPos.x = (stratusPos.x + (float)(i-2) * weatherCellArray[row][col].Radius * 2.3f);
; 827  : 					cumulusPos.y = (stratusPos.y + (float)(i-2) * weatherCellArray[row][col].Radius * 2.3f);
; 828  : 					cumulusPos.z = cumulusZ - 3000.0f;
; 829  : 
; 830  : #endif										
; 831  : 					
; 832  : 				
; 833  : 					if (cumulusPos.z <  stratusZ) cumulusPos.z = (stratusZ + 1500.f);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15716]
	comiss	xmm0, DWORD PTR _cumulusPos$[ebp+8]
	jbe	SHORT $LN12@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15716]
	addss	xmm0, DWORD PTR __real@44bb8000
	movss	DWORD PTR _cumulusPos$[ebp+8], xmm0
$LN12@UpdateDraw:

; 834  : 
; 835  : 					if(DisplayOptions.bZBuffering)

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	ecx, ecx
	je	SHORT $LN11@UpdateDraw

; 836  : 						DrawCumulus(&cumulusPos,cTxtIndex, weatherCellArray[row][col].Radius);

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	push	ecx
	movss	xmm0, DWORD PTR [ecx+edx+188]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _cTxtIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cumulusPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawCumulus@RealWeather@@QAEXPAUTpoint@@HM@Z ; RealWeather::DrawCumulus

; 837  : 					else

	jmp	SHORT $LN10@UpdateDraw
$LN11@UpdateDraw:

; 838  : 						real3DClouds[q].drawable3DClouds[r++].Update(&cumulusPos,cTxtIndex);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15792]
	mov	ecx, DWORD PTR _r$[ebp]
	imul	ecx, 76					; 0000004cH
	mov	edx, DWORD PTR _q$[ebp]
	add	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv439[ebp], ecx
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 1
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _cTxtIndex$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cumulusPos$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv439[ebp]
	call	?Update@Drawable3DCloud@@QAEXPAUTpoint@@H@Z ; Drawable3DCloud::Update
$LN10@UpdateDraw:

; 839  : 
; 840  : 					// Cobra - Raining under dark cummulus clouds
; 841  : 					if((weatherCondition == FAIR) && (ShadingFactor >= 5) && (viewerZ > cumulusPos.z))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	jne	$LN8@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15748]
	comiss	xmm0, DWORD PTR __real@40a00000
	jb	$LN8@UpdateDraw
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15708]
	comiss	xmm0, DWORD PTR _cumulusPos$[ebp+8]
	jbe	$LN8@UpdateDraw

; 842  : 					{
; 843  : 						float dx = viewerX-cumulusPos.x;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15700]
	subss	xmm0, DWORD PTR _cumulusPos$[ebp]
	movss	DWORD PTR _dx$3[ebp], xmm0

; 844  : 						float dy = viewerY-cumulusPos.y;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15704]
	subss	xmm0, DWORD PTR _cumulusPos$[ebp+4]
	movss	DWORD PTR _dy$4[ebp], xmm0

; 845  : 						float range = FabsF(SqrtF(dx*dx+dy*dy));

	movss	xmm0, DWORD PTR _dx$3[ebp]
	mulss	xmm0, DWORD PTR _dx$3[ebp]
	movss	xmm1, DWORD PTR _dy$4[ebp]
	mulss	xmm1, DWORD PTR _dy$4[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtF@@YAMM@Z				; SqrtF
	fstp	DWORD PTR [esp]
	call	?FabsF@@YAMM@Z				; FabsF
	add	esp, 4
	fstp	DWORD PTR _range$2[ebp]

; 846  : 						// Flag that rain is to be drawn
; 847  : 						if(range < weatherCellArray[row][col].Radius * 0.6f) DrawTheRain=true;

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	movss	xmm0, DWORD PTR [ecx+edx+188]
	mulss	xmm0, DWORD PTR __real@3f19999a
	comiss	xmm0, DWORD PTR _range$2[ebp]
	jbe	SHORT $LN8@UpdateDraw
	mov	BYTE PTR _DrawTheRain$[ebp], 1
$LN8@UpdateDraw:

; 848  : 					}
; 849  : 				}

	jmp	$LN18@UpdateDraw
$LN17@UpdateDraw:

; 850  : 
; 851  : 			}
; 852  : 			
; 853  : 
; 854  : 			p++;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax

; 855  : 			q++;

	mov	ecx, DWORD PTR _q$[ebp]
	add	ecx, 1
	mov	DWORD PTR _q$[ebp], ecx

; 856  : 			r=0;

	mov	DWORD PTR _r$[ebp], 0

; 857  : 
; 858  : 			if(PlayerOptions.ShadowsOn()
; 859  : 			&& row >= shadowCell && row < numCells-shadowCell
; 860  : 			&& col >= shadowCell && col < numCells-shadowCell)

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ShadowsOn@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::ShadowsOn
	test	eax, eax
	je	$LN2@UpdateDraw
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _row$[ebp]
	cmp	eax, DWORD PTR [edx+15672]
	jl	$LN2@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+15660]
	sub	eax, DWORD PTR [edx+15672]
	cmp	DWORD PTR _row$[ebp], eax
	jge	$LN2@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _col$[ebp]
	cmp	edx, DWORD PTR [ecx+15672]
	jl	$LN2@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+15660]
	sub	edx, DWORD PTR [ecx+15672]
	cmp	DWORD PTR _col$[ebp], edx
	jge	$LN2@UpdateDraw

; 861  : 			{
; 862  : 				shadowPos.x = sunMag;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15932]
	movss	DWORD PTR _shadowPos$[ebp], xmm0

; 863  : 				shadowPos.y = shadowPos.z = 0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _shadowPos$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _shadowPos$[ebp+8]
	movss	DWORD PTR _shadowPos$[ebp+4], xmm0

; 864  : 				RotatePoint(&shadowPos,0,0,sunYaw);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+15940]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _shadowPos$[ebp]
	push	edx
	call	?RotatePoint@@YAXPAUTpoint@@MMM@Z	; RotatePoint
	add	esp, 16					; 00000010H

; 865  : 				// COBRA - RED - Restored to CloudRadius... too much large causes bad effects on ground...
; 866  : 				float	Radius = cloudRadius; //weatherCellArray[row][col].Radius;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15736]
	movss	DWORD PTR _Radius$9[ebp], xmm0

; 867  : 				shadowPos.x += weatherCellArray[row][col].cloudPosX + weatherShiftX;

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15692]
	addss	xmm0, DWORD PTR [eax+ecx+16]
	addss	xmm0, DWORD PTR _shadowPos$[ebp]
	movss	DWORD PTR _shadowPos$[ebp], xmm0

; 868  : 				shadowPos.y += weatherCellArray[row][col].cloudPosY + weatherShiftY;

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+15696]
	addss	xmm0, DWORD PTR [edx+eax+20]
	addss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	movss	DWORD PTR _shadowPos$[ebp+4], xmm0

; 869  : 				shadowPos.z = renderer->viewpoint->GetGroundLevel(shadowPos.x,shadowPos.y);

	push	0
	push	0
	push	ecx
	movss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _shadowPos$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?GetGroundLevel@TViewPoint@@QAEMMMPAUTpoint@@PAH@Z ; TViewPoint::GetGroundLevel
	fstp	DWORD PTR _shadowPos$[ebp+8]

; 870  : 				renderer->TransformPointToViewSwapped(&shadowPos,&weatherCellArray[row][col].shadowPos);

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	lea	edx, DWORD PTR [eax+ecx+4]
	push	edx
	lea	eax, DWORD PTR _shadowPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 871  : 
; 872  : 				wp.x = shadowPos.x + Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp]
	addss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp], xmm0

; 873  : 				wp.y = shadowPos.y - Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	subss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp+4], xmm0

; 874  : 				wp.z = shadowPos.z;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+8]
	movss	DWORD PTR _wp$[ebp+8], xmm0

; 875  : 				renderer->TransformPointToViewSwapped(&wp,&vp[0]);

	mov	edx, 12					; 0000000cH
	imul	edx, 0
	lea	eax, DWORD PTR _vp$[ebp+edx]
	push	eax
	lea	ecx, DWORD PTR _wp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 876  : 
; 877  : 				wp.x = shadowPos.x + Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp]
	addss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp], xmm0

; 878  : 				wp.y = shadowPos.y + Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	addss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp+4], xmm0

; 879  : 				wp.z = shadowPos.z;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+8]
	movss	DWORD PTR _wp$[ebp+8], xmm0

; 880  : 				renderer->TransformPointToViewSwapped(&wp,&vp[1]);

	mov	eax, 12					; 0000000cH
	shl	eax, 0
	lea	ecx, DWORD PTR _vp$[ebp+eax]
	push	ecx
	lea	edx, DWORD PTR _wp$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 881  : 
; 882  : 				wp.x = shadowPos.x - Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp]
	subss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp], xmm0

; 883  : 				wp.y = shadowPos.y + Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	addss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp+4], xmm0

; 884  : 				wp.z = shadowPos.z;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+8]
	movss	DWORD PTR _wp$[ebp+8], xmm0

; 885  : 				renderer->TransformPointToViewSwapped(&wp,&vp[2]);

	mov	ecx, 12					; 0000000cH
	shl	ecx, 1
	lea	edx, DWORD PTR _vp$[ebp+ecx]
	push	edx
	lea	eax, DWORD PTR _wp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 886  : 
; 887  : 				wp.x = shadowPos.x - Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp]
	subss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp], xmm0

; 888  : 				wp.y = shadowPos.y - Radius;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	subss	xmm0, DWORD PTR _Radius$9[ebp]
	movss	DWORD PTR _wp$[ebp+4], xmm0

; 889  : 				wp.z = shadowPos.z;

	movss	xmm0, DWORD PTR _shadowPos$[ebp+8]
	movss	DWORD PTR _wp$[ebp+8], xmm0

; 890  : 				renderer->TransformPointToViewSwapped(&wp,&vp[3]);

	mov	edx, 12					; 0000000cH
	imul	edx, 3
	lea	eax, DWORD PTR _vp$[ebp+edx]
	push	eax
	lea	ecx, DWORD PTR _wp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?TransformPointToViewSwapped@Render3D@@QAEXPAUTpoint@@0@Z ; Render3D::TransformPointToViewSwapped

; 891  : 
; 892  : 				for(i = 0; i < 4; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@UpdateDraw
$LN5@UpdateDraw:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@UpdateDraw:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN4@UpdateDraw

; 893  : 				{
; 894  : 					clipFlag[i]  = GetRangeClipFlags(vp[i].z,0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR _vp$[ebp+ecx+8]
	movss	DWORD PTR [esp], xmm0
	call	?GetRangeClipFlags@@YAKMM@Z		; GetRangeClipFlags
	add	esp, 8
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _clipFlag$[ebp+edx*4], eax

; 895  : 					clipFlag[i] |= GetHorizontalClipFlags(vp[i].x,vp[i].z);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR _vp$[ebp+eax+8]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR _vp$[ebp+ecx]
	movss	DWORD PTR [esp], xmm0
	call	?GetHorizontalClipFlags@@YAKMM@Z	; GetHorizontalClipFlags
	add	esp, 8
	mov	edx, DWORD PTR _i$[ebp]
	or	eax, DWORD PTR _clipFlag$[ebp+edx*4]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _clipFlag$[ebp+ecx*4], eax

; 896  : 					clipFlag[i] |= GetVerticalClipFlags(vp[i].y,vp[i].z);

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR _vp$[ebp+edx+8]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	push	ecx
	movss	xmm0, DWORD PTR _vp$[ebp+eax+4]
	movss	DWORD PTR [esp], xmm0
	call	?GetVerticalClipFlags@@YAKMM@Z		; GetVerticalClipFlags
	add	esp, 8
	mov	ecx, DWORD PTR _i$[ebp]
	or	eax, DWORD PTR _clipFlag$[ebp+ecx*4]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _clipFlag$[ebp+edx*4], eax

; 897  : 				}

	jmp	$LN5@UpdateDraw
$LN4@UpdateDraw:

; 898  : 
; 899  : 				weatherCellArray[row][col].onScreen = (!clipFlag[0]||!clipFlag[1]||!clipFlag[2]||!clipFlag[3]);

	mov	eax, 4
	imul	eax, 0
	cmp	DWORD PTR _clipFlag$[ebp+eax], 0
	je	SHORT $LN45@UpdateDraw
	mov	ecx, 4
	shl	ecx, 0
	cmp	DWORD PTR _clipFlag$[ebp+ecx], 0
	je	SHORT $LN45@UpdateDraw
	mov	edx, 4
	shl	edx, 1
	cmp	DWORD PTR _clipFlag$[ebp+edx], 0
	je	SHORT $LN45@UpdateDraw
	mov	eax, 4
	imul	eax, 3
	cmp	DWORD PTR _clipFlag$[ebp+eax], 0
	je	SHORT $LN45@UpdateDraw
	mov	DWORD PTR tv642[ebp], 0
	jmp	SHORT $LN46@UpdateDraw
$LN45@UpdateDraw:
	mov	DWORD PTR tv642[ebp], 1
$LN46@UpdateDraw:
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR tv642[ebp]
	mov	DWORD PTR [eax+ecx], edx

; 900  : 
; 901  : 				if(!weatherCellArray[row][col].onScreen
; 902  : 				&& row >= shadowCell+1 && row < numCells-shadowCell-1
; 903  : 				&& col >= shadowCell+1 && col < numCells-shadowCell-1)

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	cmp	DWORD PTR [edx+eax], 0
	jne	$LN2@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15672]
	add	edx, 1
	cmp	DWORD PTR _row$[ebp], edx
	jl	$LN2@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+15660]
	sub	edx, DWORD PTR [ecx+15672]
	sub	edx, 1
	cmp	DWORD PTR _row$[ebp], edx
	jge	$LN2@UpdateDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15672]
	add	ecx, 1
	cmp	DWORD PTR _col$[ebp], ecx
	jl	$LN2@UpdateDraw
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+15660]
	sub	ecx, DWORD PTR [eax+15672]
	sub	ecx, 1
	cmp	DWORD PTR _col$[ebp], ecx
	jge	$LN2@UpdateDraw

; 904  : 				{
; 905  : 					float dx = viewerX-shadowPos.x;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15700]
	subss	xmm0, DWORD PTR _shadowPos$[ebp]
	movss	DWORD PTR _dx$6[ebp], xmm0

; 906  : 					float dy = viewerY-shadowPos.y;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15704]
	subss	xmm0, DWORD PTR _shadowPos$[ebp+4]
	movss	DWORD PTR _dy$5[ebp], xmm0

; 907  : 					float range = FabsF(SqrtF(dx*dx+dy*dy));

	movss	xmm0, DWORD PTR _dx$6[ebp]
	mulss	xmm0, DWORD PTR _dx$6[ebp]
	movss	xmm1, DWORD PTR _dy$5[ebp]
	mulss	xmm1, DWORD PTR _dy$5[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtF@@YAMM@Z				; SqrtF
	fstp	DWORD PTR [esp]
	call	?FabsF@@YAMM@Z				; FabsF
	add	esp, 4
	fstp	DWORD PTR _range$1[ebp]

; 908  : 
; 909  : 					if(range < Radius*2.f)

	movss	xmm0, DWORD PTR _Radius$9[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
	comiss	xmm0, DWORD PTR _range$1[ebp]
	jbe	SHORT $LN2@UpdateDraw

; 910  : 					{
; 911  : 						weatherCellArray[row][col].onScreen = TRUE;

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	DWORD PTR [eax+ecx], 1
$LN2@UpdateDraw:

; 912  : 					}
; 913  : 				}
; 914  : 			}
; 915  : 		}

	jmp	$LN24@UpdateDraw
$LN23@UpdateDraw:

; 916  : 	}

	jmp	$LN27@UpdateDraw
$LN26@UpdateDraw:

; 917  : 
; 918  : 	// if Flagged that rain is to be drawn, draw it
; 919  : 	if(DrawTheRain) DrawRain();

	movzx	edx, BYTE PTR _DrawTheRain$[ebp]
	test	edx, edx
	je	SHORT $LN1@UpdateDraw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawRain@RealWeather@@IAEXXZ		; RealWeather::DrawRain
$LN1@UpdateDraw:
$LN37@UpdateDraw:

; 920  : 
; 921  : 	//STOP_PROFILE("Clouds");
; 922  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateDrawables@RealWeather@@IAEXXZ ENDP		; RealWeather::UpdateDrawables
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv384 = -44						; size = 8
_timeMS$ = -36						; size = 4
tv381 = -32						; size = 4
_row$ = -28						; size = 4
_col$ = -24						; size = 4
_this$ = -20						; size = 4
_ep$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?UpdateCells@RealWeather@@IAEXXZ PROC			; RealWeather::UpdateCells
; _this$ = ecx

; 605  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 606  : 	if(!renderer) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN43@UpdateCell
	jmp	$LN44@UpdateCell
$LN43@UpdateCell:

; 607  : 
; 608  : 
; 609  : 	//START_PROFILE("Clouds");
; 610  : 
; 611  : 	DWORD timeMS;
; 612  : 	int row,col;
; 613  : 	Tpoint ep = { 0 };

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _ep$[ebp], xmm0
	xor	ecx, ecx
	mov	DWORD PTR _ep$[ebp+4], ecx
	mov	DWORD PTR _ep$[ebp+8], ecx

; 614  : 
; 615  : 	if(oldTimeMS)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15820], 0
	je	$LN42@UpdateCell

; 616  : 	{
; 617  : 		timeMS = SimLibElapsedTime;

	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR _timeMS$[ebp], eax

; 618  : 		ep.x = windSpeed*0.9113f*(timeMS-oldTimeMS)/100.f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15724]
	mulss	xmm0, DWORD PTR __real@3f694af5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _timeMS$[ebp]
	sub	eax, DWORD PTR [edx+15820]
	mov	DWORD PTR tv381[ebp], eax
	cvtsi2sd xmm1, DWORD PTR tv381[ebp]
	mov	ecx, DWORD PTR tv381[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv384[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv384[ebp]
	mulss	xmm0, xmm1
	divss	xmm0, DWORD PTR __real@42c80000
	movss	DWORD PTR _ep$[ebp], xmm0

; 619  : 		RotatePoint(&ep,0,0,windHeading);

	mov	edx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [edx+15728]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _ep$[ebp]
	push	eax
	call	?RotatePoint@@YAXPAUTpoint@@MMM@Z	; RotatePoint
	add	esp, 16					; 00000010H

; 620  : 	}
; 621  : 	else

	jmp	SHORT $LN41@UpdateCell
$LN42@UpdateCell:

; 622  : 	{
; 623  : 		weatherShiftX = (int)viewerX-vpShift+halfSize;

	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+15700]
	mov	eax, DWORD PTR _this$[ebp]
	sub	edx, DWORD PTR [eax+15684]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+15680]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15692], edx

; 624  : 		weatherShiftY = (int)viewerY-vpShift+halfSize;

	mov	ecx, DWORD PTR _this$[ebp]
	cvttss2si edx, DWORD PTR [ecx+15704]
	mov	eax, DWORD PTR _this$[ebp]
	sub	edx, DWORD PTR [eax+15684]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+15680]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15696], edx

; 625  : 
; 626  : 		oldTimeMS = SimLibElapsedTime;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [ecx+15820], edx

; 627  : 
; 628  : 		return;

	jmp	$LN44@UpdateCell
$LN41@UpdateCell:

; 629  : 	}
; 630  : 
; 631  : 	weatherShiftX += (int)ep.x;

	cvttss2si eax, DWORD PTR _ep$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+15692]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15692], eax

; 632  : 	weatherShiftY += (int)ep.y;

	cvttss2si eax, DWORD PTR _ep$[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+15696]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15696], eax

; 633  : 
; 634  : 	if((viewerY-vpShift)-weatherShiftY > cellSize)

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15684]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+15704]
	subss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15696]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15668]
	comiss	xmm1, xmm0
	jbe	$LN40@UpdateCell

; 635  : 	{
; 636  : 		for(col = 0; col < numCells-1; col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN39@UpdateCell
$LN38@UpdateCell:
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, 1
	mov	DWORD PTR _col$[ebp], ecx
$LN39@UpdateCell:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15660]
	sub	eax, 1
	cmp	DWORD PTR _col$[ebp], eax
	jge	$LN37@UpdateCell

; 637  : 		{
; 638  : 			for(row = 0; row < numCells; row++)

	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN36@UpdateCell
$LN35@UpdateCell:
	mov	ecx, DWORD PTR _row$[ebp]
	add	ecx, 1
	mov	DWORD PTR _row$[ebp], ecx
$LN36@UpdateCell:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _row$[ebp]
	cmp	eax, DWORD PTR [edx+15660]
	jge	$LN34@UpdateCell

; 639  : 			{
; 640  : 				weatherCellArray[row][col] = weatherCellArray[row][col+1];

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR [edx+ecx+108]
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	imul	eax, 192				; 000000c0H
	add	esi, eax
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	edi, DWORD PTR [edx+ecx+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	add	edi, eax
	mov	ecx, 48					; 00000030H
	rep movsd

; 641  : 				weatherCellArray[row][col].cloudPosY -= cellSize;

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15668]
	movss	xmm1, DWORD PTR [eax+ecx+20]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+108]
	movss	DWORD PTR [ecx+eax+20], xmm1

; 642  : 			}

	jmp	$LN35@UpdateCell
$LN34@UpdateCell:

; 643  : 		}

	jmp	$LN38@UpdateCell
$LN37@UpdateCell:

; 644  : 		for(row = 0; row < numCells; row++) GenerateCloud( row, col );

	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN33@UpdateCell
$LN32@UpdateCell:
	mov	edx, DWORD PTR _row$[ebp]
	add	edx, 1
	mov	DWORD PTR _row$[ebp], edx
$LN33@UpdateCell:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _row$[ebp]
	cmp	ecx, DWORD PTR [eax+15660]
	jge	SHORT $LN31@UpdateCell
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateCloud@RealWeather@@IAEXKK@Z	; RealWeather::GenerateCloud
	jmp	SHORT $LN32@UpdateCell
$LN31@UpdateCell:

; 645  : 
; 646  : 		weatherShiftY += cellSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15696]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+15668]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15696], edx
$LN40@UpdateCell:

; 647  : 	}
; 648  : 
; 649  : 	if(weatherShiftY-(viewerY-vpShift) > cellSize)

	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15696]
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [eax+15684]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [ecx+15704]
	subss	xmm2, xmm1
	subss	xmm0, xmm2
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [edx+15668]
	comiss	xmm0, xmm1
	jbe	$LN30@UpdateCell

; 650  : 	{
; 651  : 		for(col = numCells-1; col; col--)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15660]
	sub	ecx, 1
	mov	DWORD PTR _col$[ebp], ecx
	jmp	SHORT $LN29@UpdateCell
$LN28@UpdateCell:
	mov	edx, DWORD PTR _col$[ebp]
	sub	edx, 1
	mov	DWORD PTR _col$[ebp], edx
$LN29@UpdateCell:
	cmp	DWORD PTR _col$[ebp], 0
	je	$LN27@UpdateCell

; 652  : 		{
; 653  : 			for(row = 0; row < numCells; row++)

	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN26@UpdateCell
$LN25@UpdateCell:
	mov	eax, DWORD PTR _row$[ebp]
	add	eax, 1
	mov	DWORD PTR _row$[ebp], eax
$LN26@UpdateCell:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _row$[ebp]
	cmp	edx, DWORD PTR [ecx+15660]
	jge	$LN24@UpdateCell

; 654  : 			{
; 655  : 				weatherCellArray[row][col] = weatherCellArray[row][col-1];

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR [ecx+eax+108]
	mov	edx, DWORD PTR _col$[ebp]
	sub	edx, 1
	imul	edx, 192				; 000000c0H
	add	esi, edx
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edi, DWORD PTR [ecx+eax+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	add	edi, edx
	mov	ecx, 48					; 00000030H
	rep movsd

; 656  : 				weatherCellArray[row][col].cloudPosY += cellSize;

	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+15668]
	addss	xmm0, DWORD PTR [edx+eax+20]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _row$[ebp]
	imul	eax, 1728				; 000006c0H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [ecx+eax+108]
	movss	DWORD PTR [eax+edx+20], xmm0

; 657  : 			}

	jmp	$LN25@UpdateCell
$LN24@UpdateCell:

; 658  : 		}

	jmp	$LN28@UpdateCell
$LN27@UpdateCell:

; 659  : 
; 660  : 		for(row = 0; row < numCells; row++)  GenerateCloud( row, col );

	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN23@UpdateCell
$LN22@UpdateCell:
	mov	ecx, DWORD PTR _row$[ebp]
	add	ecx, 1
	mov	DWORD PTR _row$[ebp], ecx
$LN23@UpdateCell:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _row$[ebp]
	cmp	eax, DWORD PTR [edx+15660]
	jge	SHORT $LN21@UpdateCell
	mov	ecx, DWORD PTR _col$[ebp]
	push	ecx
	mov	edx, DWORD PTR _row$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateCloud@RealWeather@@IAEXKK@Z	; RealWeather::GenerateCloud
	jmp	SHORT $LN22@UpdateCell
$LN21@UpdateCell:

; 661  : 		
; 662  : 		weatherShiftY -= cellSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+15696]
	sub	edx, DWORD PTR [ecx+15668]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15696], edx
$LN30@UpdateCell:

; 663  : 	}
; 664  : 	if((viewerX-vpShift)-weatherShiftX > cellSize)

	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+15684]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+15700]
	subss	xmm1, xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15692]
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+15668]
	comiss	xmm1, xmm0
	jbe	$LN20@UpdateCell

; 665  : 	{
; 666  : 		for(row = 0; row < numCells-1; row++)

	mov	DWORD PTR _row$[ebp], 0
	jmp	SHORT $LN19@UpdateCell
$LN18@UpdateCell:
	mov	edx, DWORD PTR _row$[ebp]
	add	edx, 1
	mov	DWORD PTR _row$[ebp], edx
$LN19@UpdateCell:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15660]
	sub	ecx, 1
	cmp	DWORD PTR _row$[ebp], ecx
	jge	$LN17@UpdateCell

; 667  : 		{
; 668  : 			for(col = 0; col < numCells; col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN16@UpdateCell
$LN15@UpdateCell:
	mov	edx, DWORD PTR _col$[ebp]
	add	edx, 1
	mov	DWORD PTR _col$[ebp], edx
$LN16@UpdateCell:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _col$[ebp]
	cmp	ecx, DWORD PTR [eax+15660]
	jge	$LN14@UpdateCell

; 669  : 			{
; 670  : 				weatherCellArray[row][col] = weatherCellArray[row+1][col];

	mov	edx, DWORD PTR _row$[ebp]
	add	edx, 1
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR [eax+edx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	add	esi, ecx
	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	edi, DWORD PTR [eax+edx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	add	edi, ecx
	mov	ecx, 48					; 00000030H
	rep movsd

; 671  : 				weatherCellArray[row][col].cloudPosX -= cellSize;

	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+108]
	mov	edx, DWORD PTR _col$[ebp]
	imul	edx, 192				; 000000c0H
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15668]
	movss	xmm1, DWORD PTR [ecx+edx+16]
	subss	xmm1, xmm0
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _row$[ebp]
	imul	edx, 1728				; 000006c0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [eax+edx+108]
	movss	DWORD PTR [edx+ecx+16], xmm1

; 672  : 			}

	jmp	$LN15@UpdateCell
$LN14@UpdateCell:

; 673  : 		}

	jmp	$LN18@UpdateCell
$LN17@UpdateCell:

; 674  : 
; 675  : 		for(col = 0; col < numCells; col++)  GenerateCloud( row, col );

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN13@UpdateCell
$LN12@UpdateCell:
	mov	eax, DWORD PTR _col$[ebp]
	add	eax, 1
	mov	DWORD PTR _col$[ebp], eax
$LN13@UpdateCell:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _col$[ebp]
	cmp	edx, DWORD PTR [ecx+15660]
	jge	SHORT $LN11@UpdateCell
	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	mov	ecx, DWORD PTR _row$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateCloud@RealWeather@@IAEXKK@Z	; RealWeather::GenerateCloud
	jmp	SHORT $LN12@UpdateCell
$LN11@UpdateCell:

; 676  : 
; 677  : 		weatherShiftX += cellSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15692]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+15668]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15692], eax
$LN20@UpdateCell:

; 678  : 	}
; 679  : 
; 680  : 
; 681  : 	if(weatherShiftX-(viewerX-vpShift) > cellSize)

	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [eax+15692]
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [ecx+15684]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm2, DWORD PTR [edx+15700]
	subss	xmm2, xmm1
	subss	xmm0, xmm2
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2ss xmm1, DWORD PTR [eax+15668]
	comiss	xmm0, xmm1
	jbe	$LN10@UpdateCell

; 682  : 	{
; 683  : 		for(row = numCells-1; row; row--)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15660]
	sub	edx, 1
	mov	DWORD PTR _row$[ebp], edx
	jmp	SHORT $LN9@UpdateCell
$LN8@UpdateCell:
	mov	eax, DWORD PTR _row$[ebp]
	sub	eax, 1
	mov	DWORD PTR _row$[ebp], eax
$LN9@UpdateCell:
	cmp	DWORD PTR _row$[ebp], 0
	je	$LN7@UpdateCell

; 684  : 		{
; 685  : 			for(col = 0; col < numCells; col++)

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN6@UpdateCell
$LN5@UpdateCell:
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, 1
	mov	DWORD PTR _col$[ebp], ecx
$LN6@UpdateCell:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _col$[ebp]
	cmp	eax, DWORD PTR [edx+15660]
	jge	$LN4@UpdateCell

; 686  : 			{
; 687  : 				weatherCellArray[row][col] = weatherCellArray[row-1][col];

	mov	ecx, DWORD PTR _row$[ebp]
	sub	ecx, 1
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	esi, DWORD PTR [edx+ecx+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	add	esi, eax
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	edi, DWORD PTR [edx+ecx+108]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	add	edi, eax
	mov	ecx, 48					; 00000030H
	rep movsd

; 688  : 				weatherCellArray[row][col].cloudPosX += cellSize;

	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+108]
	mov	ecx, DWORD PTR _col$[ebp]
	imul	ecx, 192				; 000000c0H
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [edx+15668]
	addss	xmm0, DWORD PTR [eax+ecx+16]
	mov	eax, DWORD PTR _col$[ebp]
	imul	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR _row$[ebp]
	imul	ecx, 1728				; 000006c0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+108]
	movss	DWORD PTR [ecx+eax+16], xmm0

; 689  : 			}

	jmp	$LN5@UpdateCell
$LN4@UpdateCell:

; 690  : 		}

	jmp	$LN8@UpdateCell
$LN7@UpdateCell:

; 691  : 
; 692  : 		for(col = 0; col < numCells; col++)  GenerateCloud( row, col );

	mov	DWORD PTR _col$[ebp], 0
	jmp	SHORT $LN3@UpdateCell
$LN2@UpdateCell:
	mov	edx, DWORD PTR _col$[ebp]
	add	edx, 1
	mov	DWORD PTR _col$[ebp], edx
$LN3@UpdateCell:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _col$[ebp]
	cmp	ecx, DWORD PTR [eax+15660]
	jge	SHORT $LN1@UpdateCell
	mov	edx, DWORD PTR _col$[ebp]
	push	edx
	mov	eax, DWORD PTR _row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateCloud@RealWeather@@IAEXKK@Z	; RealWeather::GenerateCloud
	jmp	SHORT $LN2@UpdateCell
$LN1@UpdateCell:

; 693  : 
; 694  : 		weatherShiftX -= cellSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+15692]
	sub	eax, DWORD PTR [edx+15668]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15692], eax
$LN10@UpdateCell:

; 695  : 	}
; 696  : 
; 697  : 	oldTimeMS = SimLibElapsedTime;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	mov	DWORD PTR [edx+15820], eax
$LN44@UpdateCell:

; 698  : 	//STOP_PROFILE("Clouds");
; 699  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCells@RealWeather@@IAEXXZ ENDP			; RealWeather::UpdateCells
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_fp$1 = -48						; size = 4
_col$2 = -44						; size = 4
_row$3 = -40						; size = 4
_this$ = -36						; size = 4
_fname$4 = -32						; size = 27
__$ArrayPad$ = -4					; size = 4
_bRandom$ = 8						; size = 1
?GenerateClouds@RealWeather@@IAEX_N@Z PROC		; RealWeather::GenerateClouds
; _this$ = ecx

; 507  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 508  : 	cloudRadius = 20000.f; // 10000.f; // Cobra - FRB - need larger radius due to z-fighting fix

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@469c4000
	movss	DWORD PTR [eax+15736], xmm0

; 509  : 	stratusRadius = 55000.f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@4756d800
	movss	DWORD PTR [ecx+15740], xmm0

; 510  : 
; 511  : 	// TODO - RED - Setup something for MP gaming
; 512  : 	if(!bRandom)

	movzx	edx, BYTE PTR _bRandom$[ebp]
	test	edx, edx
	jne	SHORT $LN8@GenerateCl

; 513  : 	{
; 514  : 		FILE *fp;
; 515  : 		char fname[] = "campaign\\save\\mpwcells.bin";

	mov	ecx, 6
	mov	esi, OFFSET ??_C@_0BL@GMLGCIEJ@campaign?2save?2mpwcells?4bin?$AA@
	lea	edi, DWORD PTR _fname$4[ebp]
	rep movsd
	movsw
	movsb

; 516  : 
; 517  : 		fp = fopen(fname,"rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	lea	eax, DWORD PTR _fname$4[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$1[ebp], eax

; 518  : 		fread(&weatherCellArray,sizeof(WeatherCell)*MAX_NUM_CELLS*MAX_NUM_CELLS,1,fp);

	mov	ecx, DWORD PTR _fp$1[ebp]
	push	ecx
	push	1
	push	15552					; 00003cc0H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 519  : 		fclose(fp);

	mov	eax, DWORD PTR _fp$1[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 520  : 	}
; 521  : 	else

	jmp	$LN7@GenerateCl
$LN8@GenerateCl:

; 522  : 	{
; 523  : 		int row,col;
; 524  : 
; 525  : 		shadowCell = 2;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15672], 2

; 526  : 		drawableCell = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15676], 1

; 527  : 
; 528  : 		/*if(weatherCondition > FAIR
; 529  : 		&&(-viewerZ) > (-stratusZ) && (-viewerZ) < (-stratusZ)+stratusDepth)
; 530  : 		{
; 531  : 			numCells = 5;
; 532  : 			cellSize = 7168;
; 533  : 			// COBRA - DX - Passed as single cell feature
; 534  : 			puffRadius = 3000.f + 500.f * PRANDFloatPos();
; 535  : 		}
; 536  : 		else*/
; 537  : 		{
; 538  : 			numCells = 9;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15660], 9

; 539  : 			cellSize = 57344;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15668], 57344		; 0000e000H

; 540  : 			// RV - I-Hawk - using this value with the clouds fix
; 541  : 			puffRadius = 3000.f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@453b8000
	movss	DWORD PTR [edx+15732], xmm0

; 542  : 		}
; 543  : 
; 544  : 		halfSize = cellSize/2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+15668]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15680], eax

; 545  : 		halfCells = (numCells-1)/2;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15660]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15664], eax

; 546  : 		vpShift = halfCells*cellSize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+15664]
	imul	ecx, DWORD PTR [eax+15668]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15684], ecx

; 547  : 	
; 548  : 
; 549  : 		weatherShiftX = (int)viewerX-vpShift+halfSize;

	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+15700]
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+15684]
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+15680]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15692], ecx

; 550  : 		weatherShiftY = (int)viewerY-vpShift+halfSize;

	mov	eax, DWORD PTR _this$[ebp]
	cvttss2si ecx, DWORD PTR [eax+15704]
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+15684]
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+15680]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15696], ecx

; 551  : 
; 552  : 		ZeroMemory(weatherCellArray,sizeof(WeatherCell)*MAX_NUM_CELLS*MAX_NUM_CELLS);

	push	15552					; 00003cc0H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 553  : 
; 554  : 		for(row = 0; row < numCells; row++)

	mov	DWORD PTR _row$3[ebp], 0
	jmp	SHORT $LN6@GenerateCl
$LN5@GenerateCl:
	mov	ecx, DWORD PTR _row$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _row$3[ebp], ecx
$LN6@GenerateCl:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _row$3[ebp]
	cmp	eax, DWORD PTR [edx+15660]
	jge	SHORT $LN4@GenerateCl

; 555  : 		{
; 556  : 			for(col = 0; col < numCells; col++) GenerateCloud( row, col );

	mov	DWORD PTR _col$2[ebp], 0
	jmp	SHORT $LN3@GenerateCl
$LN2@GenerateCl:
	mov	ecx, DWORD PTR _col$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _col$2[ebp], ecx
$LN3@GenerateCl:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _col$2[ebp]
	cmp	eax, DWORD PTR [edx+15660]
	jge	SHORT $LN1@GenerateCl
	mov	ecx, DWORD PTR _col$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _row$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GenerateCloud@RealWeather@@IAEXKK@Z	; RealWeather::GenerateCloud
	jmp	SHORT $LN2@GenerateCl
$LN1@GenerateCl:

; 557  : 		}

	jmp	SHORT $LN5@GenerateCl
$LN4@GenerateCl:

; 558  : 
; 559  : 		UpdateCondition();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateCondition@RealWeather@@QAEXXZ	; RealWeather::UpdateCondition
$LN7@GenerateCl:

; 560  : 		// RED - ENABLE IT TO SAVE AN MP SESSION WEATHER
; 561  : 		/*FILE *fp;
; 562  : 		char fname[] = "campaign\\save\\mpwcells.bin";
; 563  : 
; 564  : 		fp = fopen(fname,"wb");
; 565  : 		fwrite(&weatherCellArray,sizeof(WeatherCell)*MAX_NUM_CELLS*MAX_NUM_CELLS,1,fp);
; 566  : 		fclose(fp);*/
; 567  : 
; 568  : 
; 569  : 	}
; 570  : }

	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?GenerateClouds@RealWeather@@IAEX_N@Z ENDP		; RealWeather::GenerateClouds
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv154 = -24						; size = 4
tv163 = -20						; size = 4
tv147 = -16						; size = 4
tv140 = -12						; size = 4
tv134 = -8						; size = 4
_this$ = -4						; size = 4
?UpdateCondition@RealWeather@@QAEXXZ PROC		; RealWeather::UpdateCondition
; _this$ = ecx

; 575  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 576  : 	// SUNNY
; 577  : 	if(weatherCondition < FAIR) ShadingFactor = PRANDFloatPos()* 3.0f;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	jge	SHORT $LN6@UpdateCond
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv134[ebp]
	movss	xmm0, DWORD PTR tv134[ebp]
	mulss	xmm0, DWORD PTR __real@40400000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15748], xmm0
$LN6@UpdateCond:

; 578  : 	// FAIR OR WORST
; 579  : 	if(weatherCondition == FAIR) ShadingFactor = PRANDFloatPos()* 9.0f;

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15688], 2
	jne	SHORT $LN5@UpdateCond
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv140[ebp]
	movss	xmm0, DWORD PTR tv140[ebp]
	mulss	xmm0, DWORD PTR __real@41100000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+15748], xmm0
$LN5@UpdateCond:

; 580  : 
; 581  : 	// FAIR OR WORST
; 582  : 	if(weatherCondition > FAIR) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15688], 2
	jle	$LN4@UpdateCond

; 583  : 
; 584  : 		LinearFogStatus = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15968], 1

; 585  : 		ShadingFactor = PRANDFloatPos() * 5.0f + 5.0f;

	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv147[ebp]
	movss	xmm0, DWORD PTR tv147[ebp]
	mulss	xmm0, DWORD PTR __real@40a00000
	addss	xmm0, DWORD PTR __real@40a00000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+15748], xmm0

; 586  : 		// Weather variance stuff
; 587  : 		UpdateWeatherQuality();

	call	?UpdateWeatherQuality@RealWeather@@KAXXZ ; RealWeather::UpdateWeatherQuality

; 588  : 		
; 589  : 		// Update Weather Quality based on Stratus Z
; 590  : 		//WeatherQuality = PRANDFloatPos();
; 591  : 		//WeatherQuality = (stratusZ + 5000.0f) / -15000.0f;
; 592  : 		//I-Hawk - more randomized weatherQuality factor
; 593  : 		WeatherQuality = (((stratusZ + 5000.0f) / -15000.0f) + PRANDFloatPos()) * 0.5f  ;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15716]
	addss	xmm0, DWORD PTR __real@459c4000
	divss	xmm0, DWORD PTR __real@c66a6000
	movss	DWORD PTR tv163[ebp], xmm0
	call	?PRANDFloatPos@@YAMXZ			; PRANDFloatPos
	fstp	DWORD PTR tv154[ebp]
	movss	xmm0, DWORD PTR tv163[ebp]
	addss	xmm0, DWORD PTR tv154[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0

; 594  : 		if(WeatherQuality > 1.0f) WeatherQuality = 1.0f;

	movss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN3@UpdateCond
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0
$LN3@UpdateCond:

; 595  : 		if(WeatherQuality < 0.0f) WeatherQuality = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	jbe	SHORT $LN2@UpdateCond
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0
$LN2@UpdateCond:

; 596  : 		WeatherQualityElapsed = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR ?WeatherQualityElapsed@RealWeather@@1KA, eax ; RealWeather::WeatherQualityElapsed

; 597  : 
; 598  : 	} else {

	jmp	SHORT $LN1@UpdateCond
$LN4@UpdateCond:

; 599  : 		LinearFogStatus = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15968], 0
$LN1@UpdateCond:

; 600  : 	}
; 601  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateCondition@RealWeather@@QAEXXZ ENDP		; RealWeather::UpdateCondition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv128 = -32						; size = 4
$T1 = -28						; size = 4
tv87 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
$T4 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?Cleanup@RealWeather@@QAEXXZ PROC			; RealWeather::Cleanup
; _this$ = ecx

; 1225 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1226 : 	int i;
; 1227 : 
; 1228 : 	if(!DisplayOptions.bZBuffering)

	movzx	eax, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	eax, eax
	jne	$LN8@Cleanup

; 1229 : 	{
; 1230 : 		for(i = 0; i < MAX_NUM_DRAWABLES; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@Cleanup
$LN6@Cleanup:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN7@Cleanup:
	cmp	DWORD PTR _i$[ebp], 49			; 00000031H
	jge	SHORT $LN5@Cleanup

; 1231 : 		{
; 1232 : 			if(real2DClouds)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15788], 0
	je	SHORT $LN4@Cleanup

; 1233 : 				real2DClouds[i].Cleanup();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15788]
	mov	edx, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [ecx+edx*4]
	call	?Cleanup@Real2DCloud@@QAEXXZ		; Real2DCloud::Cleanup
$LN4@Cleanup:

; 1234 : 	
; 1235 : 			if(real3DClouds)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15792], 0
	je	SHORT $LN3@Cleanup

; 1236 : 				real3DClouds[i].Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15792]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	call	?Cleanup@Real3DCloud@@QAEXXZ		; Real3DCloud::Cleanup
$LN3@Cleanup:

; 1237 : 		}

	jmp	SHORT $LN6@Cleanup
$LN5@Cleanup:

; 1238 : 
; 1239 : 		if(real2DClouds)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15788], 0
	je	SHORT $LN2@Cleanup

; 1240 : 		{
; 1241 : 			delete[] real2DClouds;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15788]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN11@Cleanup
	push	3
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_EReal2DCloud@@QAEPAXI@Z
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN12@Cleanup
$LN11@Cleanup:
	mov	DWORD PTR tv87[ebp], 0
$LN12@Cleanup:

; 1242 : 			real2DClouds = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15788], 0
$LN2@Cleanup:

; 1243 : 		}
; 1244 : 
; 1245 : 		if(real3DClouds)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15792], 0
	je	SHORT $LN8@Cleanup

; 1246 : 		{
; 1247 : 			delete[] real3DClouds;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15792]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T3[ebp], eax
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN13@Cleanup
	push	3
	mov	ecx, DWORD PTR $T3[ebp]
	call	??_EReal3DCloud@@QAEPAXI@Z
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN14@Cleanup
$LN13@Cleanup:
	mov	DWORD PTR tv128[ebp], 0
$LN14@Cleanup:

; 1248 : 			real3DClouds = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15792], 0
$LN8@Cleanup:

; 1249 : 		}
; 1250 : 	}
; 1251 : 
; 1252 : 	bSetup = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15880], 0

; 1253 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cleanup@RealWeather@@QAEXXZ ENDP			; RealWeather::Cleanup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rc$ = 8						; size = 4
?ReleaseTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z PROC ; RealWeather::ReleaseTexturesOnDevice
; _this$ = ecx

; 1211 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1212 : 
; 1213 : 	TheTimeManager.ReleaseTimeUpdateCB(TimeUpdateCallback,NULL);

	push	0
	push	OFFSET ?TimeUpdateCallback@RealWeather@@KAXPAX@Z ; RealWeather::TimeUpdateCallback
	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?ReleaseTimeUpdateCB@TimeManager@@QAEXP6AXPAX@Z0@Z ; TimeManager::ReleaseTimeUpdateCB

; 1214 : 
; 1215 : 	rainTexture.FreeAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1216 : 	overcastTexture.FreeAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1217 : 	lightningTexture.FreeAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1218 : 
; 1219 : 	CirrusCumTextures.FreeAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1220 : 
; 1221 : 	CumulusTextures.FreeAll();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?FreeAll@Texture@@QAEXXZ		; Texture::FreeAll

; 1222 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z ENDP ; RealWeather::ReleaseTexturesOnDevice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -268						; size = 4
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_rc$ = 8						; size = 4
?SetupTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z PROC ; RealWeather::SetupTexturesOnDevice
; _this$ = ecx

; 1193 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1194 : 	char filename[_MAX_PATH];
; 1195 : 
; 1196 : 	rainTexture.LoadAndCreate("RAIN.DDS",MPR_TI_DDS);

	push	256					; 00000100H
	push	OFFSET ??_C@_08MICGGOOA@RAIN?4DDS?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate

; 1197 : 	overcastTexture.LoadAndCreate("CUMULUOV.DDS",MPR_TI_DDS);

	push	256					; 00000100H
	push	OFFSET ??_C@_0N@NHIDOGKP@CUMULUOV?4DDS?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate

; 1198 : 	lightningTexture.LoadAndCreate("LIGHTNGB.DDS",MPR_TI_DDS);

	push	256					; 00000100H
	push	OFFSET ??_C@_0N@FEHPACMF@LIGHTNGB?4DDS?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate

; 1199 : 
; 1200 : 	sprintf(filename,"CirrusCum.dds");

	push	OFFSET ??_C@_0O@BNKFPMP@CirrusCum?4dds?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 1201 : 	CirrusCumTextures.LoadAndCreate(filename,MPR_TI_DDS);

	push	256					; 00000100H
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate

; 1202 : 
; 1203 : 	sprintf(filename,"Cumulus.dds");

	push	OFFSET ??_C@_0M@OHFECGJE@Cumulus?4dds?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_sprintf
	add	esp, 8

; 1204 : 	CumulusTextures.LoadAndCreate(filename,MPR_TI_DDS);

	push	256					; 00000100H
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?LoadAndCreate@Texture@@QAEHPADK@Z	; Texture::LoadAndCreate

; 1205 : 
; 1206 : 	TimeUpdateCallback(NULL);

	push	0
	call	?TimeUpdateCallback@RealWeather@@KAXPAX@Z ; RealWeather::TimeUpdateCallback
	add	esp, 4

; 1207 : 	TheTimeManager.RegisterTimeUpdateCB(TimeUpdateCallback,NULL);

	push	0
	push	OFFSET ?TimeUpdateCallback@RealWeather@@KAXPAX@Z ; RealWeather::TimeUpdateCallback
	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?RegisterTimeUpdateCB@TimeManager@@QAEXP6AXPAX@Z0@Z ; TimeManager::RegisterTimeUpdateCB

; 1208 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
?SetupTexturesOnDevice@RealWeather@@QAEXPAVDXContext@@@Z ENDP ; RealWeather::SetupTexturesOnDevice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetGreenMode@RealWeather@@QAEXH@Z PROC			; RealWeather::SetGreenMode
; _this$ = ecx

; 1256 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1257 : 	greenMode = state;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+15884], ecx

; 1258 : 	Drawable3DCloud::SetGreenMode(greenMode);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15884]
	push	eax
	call	?SetGreenMode@Drawable3DCloud@@SAXH@Z	; Drawable3DCloud::SetGreenMode
	add	esp, 4

; 1259 : 	Drawable2DCloud::SetGreenMode(greenMode);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15884]
	push	edx
	call	?SetGreenMode@Drawable2DCloud@@SAXH@Z	; Drawable2DCloud::SetGreenMode
	add	esp, 4

; 1260 : #ifdef MLR_NEWTRAILCODE
; 1261 : 	DrawableTrail::SetGreenMode(greenMode);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15884]
	push	ecx
	call	?SetGreenMode@DrawableTrail@@SAXH@Z	; DrawableTrail::SetGreenMode
	add	esp, 4

; 1262 : #endif
; 1263 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetGreenMode@RealWeather@@QAEXH@Z ENDP			; RealWeather::SetGreenMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
;	COMDAT ?DrawStratus2@RealWeather@@QAEXPAUTpoint@@H@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
_Quad$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_position$ = 8						; size = 4
_txtIndex$ = 12						; size = 4
?DrawStratus2@RealWeather@@QAEXPAUTpoint@@H@Z PROC	; RealWeather::DrawStratus2, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 129  : 
; 130  : 
; 131  : 	if(UnderOvercast())	return;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UnderOvercast@RealWeather@@QAE_NXZ	; RealWeather::UnderOvercast
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DrawStratu
	jmp	$LN4@DrawStratu
$LN3@DrawStratu:

; 132  : 
; 133  : 	// if stratus invisible, do not draw it
; 134  : 	if(!(Stratus2Color&0xff000000) || ShadingFactor < 2.0f) return;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15956]
	and	edx, -16777216				; ff000000H
	je	SHORT $LN1@DrawStratu
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40000000
	comiss	xmm0, DWORD PTR [eax+15748]
	jbe	SHORT $LN2@DrawStratu
$LN1@DrawStratu:
	jmp	$LN4@DrawStratu
$LN2@DrawStratu:

; 135  : 
; 136  : 	// COBRA - DX - Setup the Squares in the 2D DX Engine for clouds
; 137  : 	TheDXEngine.DX2D_SetupSquareCx(1.0f, 1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z	; CDXEngine::DX2D_SetupSquareCx

; 138  : 
; 139  : 	// the Cloud vertices
; 140  : 	D3DDYNVERTEX	Quad[4];
; 141  : 
; 142  : 	// Offset for Cirrus Cumulus
; 143  : 	txtIndex+=FIRST_CIRCUM_INDEX;

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	add	ecx, 4
	mov	DWORD PTR _txtIndex$[ebp], ecx

; 144  : 
; 145  : 	// Assign textures Coord
; 146  : 	Quad[0].tu = UVCoords4X4[txtIndex][0][0], Quad[0].tv = UVCoords4X4[txtIndex][0][1];

	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	imul	eax, 0
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+20], ecx
	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	imul	eax, 0
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	shl	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+24], ecx

; 147  : 	Quad[1].tu = UVCoords4X4[txtIndex][1][0], Quad[1].tv = UVCoords4X4[txtIndex][1][1];

	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	shl	eax, 0
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+20], ecx
	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	shl	eax, 0
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	shl	edx, 0
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+24], ecx

; 148  : 	Quad[2].tu = UVCoords4X4[txtIndex][2][0], Quad[2].tv = UVCoords4X4[txtIndex][2][1];

	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	shl	eax, 1
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+20], ecx
	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	shl	eax, 1
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	shl	edx, 0
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+24], ecx

; 149  : 	Quad[3].tu = UVCoords4X4[txtIndex][3][0], Quad[3].tv = UVCoords4X4[txtIndex][3][1];

	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	imul	eax, 3
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	imul	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+20], ecx
	mov	edx, DWORD PTR _txtIndex$[ebp]
	shl	edx, 5
	mov	eax, 8
	imul	eax, 3
	lea	ecx, DWORD PTR _UVCoords4X4[edx+eax]
	mov	edx, 4
	shl	edx, 0
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR [ecx+edx]
	mov	DWORD PTR _Quad$[ebp+eax+24], ecx

; 150  : 
; 151  : 	Quad[0].dwColour = Stratus2Color, Quad[0].dwSpecular = 0x000000;

	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15956]
	mov	DWORD PTR _Quad$[ebp+edx+12], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	DWORD PTR _Quad$[ebp+edx+16], 0

; 152  : 	Quad[1].dwColour = Stratus2Color, Quad[1].dwSpecular = 0x000000;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15956]
	mov	DWORD PTR _Quad$[ebp+eax+12], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	DWORD PTR _Quad$[ebp+eax+16], 0

; 153  : 	Quad[2].dwColour = Stratus2Color, Quad[2].dwSpecular = 0x000000;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15956]
	mov	DWORD PTR _Quad$[ebp+ecx+12], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	DWORD PTR _Quad$[ebp+ecx+16], 0

; 154  : 	Quad[3].dwColour = Stratus2Color, Quad[3].dwSpecular = 0x000000;

	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15956]
	mov	DWORD PTR _Quad$[ebp+edx+12], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	DWORD PTR _Quad$[ebp+edx+16], 0

; 155  : 
; 156  : 	Quad[0].pos.x=-stratusRadius, Quad[0].pos.y=stratusRadius, Quad[0].pos.z=0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15740]
	mov	DWORD PTR _Quad$[ebp+edx+4], ecx
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 157  : 	Quad[1].pos.x=stratusRadius, Quad[1].pos.y=stratusRadius, Quad[1].pos.z=0;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15740]
	mov	DWORD PTR _Quad$[ebp+eax], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15740]
	mov	DWORD PTR _Quad$[ebp+eax+4], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 158  : 	Quad[2].pos.x=stratusRadius, Quad[2].pos.y=-stratusRadius, Quad[2].pos.z=0;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15740]
	mov	DWORD PTR _Quad$[ebp+ecx], eax
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 159  : 	Quad[3].pos.x=-stratusRadius, Quad[3].pos.y=-stratusRadius, Quad[3].pos.z=0;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	DWORD PTR _Quad$[ebp+edx], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0

; 160  : 
; 161  : 	// Draw the Cloud
; 162  : 	TheDXEngine.DX2D_AddQuad(LAYER_STRATUS2, 0, (D3DXVECTOR3*)position, Quad, stratusRadius, CirrusCumTextures.TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+15740]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Quad$[ebp]
	push	ecx
	mov	edx, DWORD PTR _position$[ebp]
	push	edx
	push	0
	push	3
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad
$LN4@DrawStratu:

; 163  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?DrawStratus2@RealWeather@@QAEXPAUTpoint@@H@Z ENDP	; RealWeather::DrawStratus2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
;	COMDAT ?DrawStratus@RealWeather@@QAEXPAUTpoint@@H@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
_Quad$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_position$ = 8						; size = 4
_txtIndex$ = 12						; size = 4
?DrawStratus@RealWeather@@QAEXPAUTpoint@@H@Z PROC	; RealWeather::DrawStratus, COMDAT
; _this$ = ecx

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 	if(weatherCondition == SUNNY) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 1
	jne	SHORT $LN11@DrawStratu
	jmp	$LN12@DrawStratu
$LN11@DrawStratu:

; 84   : 	// Bad Weather and inside overcast
; 85   : 	if(InsideOvercast()) return;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsideOvercast@RealWeather@@QAE_NXZ	; RealWeather::InsideOvercast
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DrawStratu
	jmp	$LN12@DrawStratu
$LN10@DrawStratu:

; 86   : 
; 87   : 	// COBRA - DX - Setup the Squares in the 2D DX Engine for clouds
; 88   : 	TheDXEngine.DX2D_SetupSquareCx(1.0f, 1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z	; CDXEngine::DX2D_SetupSquareCx

; 89   : 	// the Cloud vertices
; 90   : 	D3DDYNVERTEX	Quad[4];
; 91   : 
; 92   : 	if(realWeather->weatherCondition < FAIR) txtIndex+=FIRST_CIRRUS_INDEX;

	mov	edx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [edx+15688], 2
	jge	SHORT $LN9@DrawStratu
	mov	eax, DWORD PTR _txtIndex$[ebp]
	mov	DWORD PTR _txtIndex$[ebp], eax
	jmp	SHORT $LN7@DrawStratu
$LN9@DrawStratu:

; 93   : 	else if((realWeather->weatherCondition == FAIR) && (ShadingFactor < 5)) txtIndex+=FIRST_CIRCUM_INDEX;

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [ecx+15688], 2
	jne	SHORT $LN7@DrawStratu
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40a00000
	comiss	xmm0, DWORD PTR [edx+15748]
	jbe	SHORT $LN7@DrawStratu
	mov	eax, DWORD PTR _txtIndex$[ebp]
	add	eax, 4
	mov	DWORD PTR _txtIndex$[ebp], eax
$LN7@DrawStratu:

; 94   : 
; 95   : 	// Assign textures Coord
; 96   : 	if(realWeather->weatherCondition < FAIR || ((realWeather->weatherCondition == FAIR) && (ShadingFactor < 5))){

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [ecx+15688], 2
	jl	SHORT $LN5@DrawStratu
	mov	edx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [edx+15688], 2
	jne	$LN6@DrawStratu
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40a00000
	comiss	xmm0, DWORD PTR [eax+15748]
	jbe	$LN6@DrawStratu
$LN5@DrawStratu:

; 97   : 		Quad[0].tu = UVCoords4X4[txtIndex][0][0], Quad[0].tv = UVCoords4X4[txtIndex][0][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 98   : 		Quad[1].tu = UVCoords4X4[txtIndex][1][0], Quad[1].tv = UVCoords4X4[txtIndex][1][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 99   : 		Quad[2].tu = UVCoords4X4[txtIndex][2][0], Quad[2].tv = UVCoords4X4[txtIndex][2][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 1
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 1
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 100  : 		Quad[3].tu = UVCoords4X4[txtIndex][3][0], Quad[3].tv = UVCoords4X4[txtIndex][3][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 3
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 3
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 101  : 	} else {

	jmp	$LN4@DrawStratu
$LN6@DrawStratu:

; 102  : 	// Assign textures Coord
; 103  : 		Quad[0].tu = TEX_UV_MIN, Quad[0].tv = TEX_UV_MIN;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _Quad$[ebp+ecx+20], xmm0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _Quad$[ebp+edx+24], xmm0

; 104  : 		Quad[1].tu = TEX_UV_MAX, Quad[1].tv = TEX_UV_MIN;

	mov	eax, 28					; 0000001cH
	shl	eax, 0
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _Quad$[ebp+eax+20], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _Quad$[ebp+ecx+24], xmm0

; 105  : 		Quad[2].tu = TEX_UV_MAX, Quad[2].tv = TEX_UV_MAX;

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _Quad$[ebp+edx+20], xmm0
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _Quad$[ebp+eax+24], xmm0

; 106  : 		Quad[3].tu = TEX_UV_MIN, Quad[3].tv = TEX_UV_MAX;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	movss	xmm0, DWORD PTR __real@3a800000
	movss	DWORD PTR _Quad$[ebp+ecx+20], xmm0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	xmm0, DWORD PTR __real@3f7fc000
	movss	DWORD PTR _Quad$[ebp+edx+24], xmm0
$LN4@DrawStratu:

; 107  : 	}
; 108  : 
; 109  : 
; 110  : 	Quad[0].dwColour = Stratus1Color, Quad[0].dwSpecular = 0x000000;

	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15952]
	mov	DWORD PTR _Quad$[ebp+eax+12], edx
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	DWORD PTR _Quad$[ebp+eax+16], 0

; 111  : 	Quad[1].dwColour = Stratus1Color, Quad[1].dwSpecular = 0x000000;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15952]
	mov	DWORD PTR _Quad$[ebp+ecx+12], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	DWORD PTR _Quad$[ebp+ecx+16], 0

; 112  : 	Quad[2].dwColour = Stratus1Color, Quad[2].dwSpecular = 0x000000;

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15952]
	mov	DWORD PTR _Quad$[ebp+edx+12], ecx
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	DWORD PTR _Quad$[ebp+edx+16], 0

; 113  : 	Quad[3].dwColour = Stratus1Color, Quad[3].dwSpecular = 0x000000;

	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15952]
	mov	DWORD PTR _Quad$[ebp+eax+12], edx
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	mov	DWORD PTR _Quad$[ebp+eax+16], 0

; 114  : 
; 115  : 	Quad[0].pos.x=-stratusRadius, Quad[0].pos.y=stratusRadius, Quad[0].pos.z=0;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	DWORD PTR _Quad$[ebp+edx], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15740]
	mov	DWORD PTR _Quad$[ebp+eax+4], edx
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 116  : 	Quad[1].pos.x=stratusRadius, Quad[1].pos.y=stratusRadius, Quad[1].pos.z=0;

	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15740]
	mov	DWORD PTR _Quad$[ebp+ecx], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15740]
	mov	DWORD PTR _Quad$[ebp+ecx+4], eax
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0

; 117  : 	Quad[2].pos.x=stratusRadius, Quad[2].pos.y=-stratusRadius, Quad[2].pos.z=0;

	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15740]
	mov	DWORD PTR _Quad$[ebp+edx], ecx
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0

; 118  : 	Quad[3].pos.x=-stratusRadius, Quad[3].pos.y=-stratusRadius, Quad[3].pos.z=0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	DWORD PTR _Quad$[ebp+eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15740]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0

; 119  : 
; 120  : 	// Draw the Square
; 121  : 	if(realWeather->weatherCondition < FAIR || ((realWeather->weatherCondition == FAIR) && (ShadingFactor < 5)))

	mov	ecx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [ecx+15688], 2
	jl	SHORT $LN2@DrawStratu
	mov	edx, DWORD PTR ?realWeather@@3PAVRealWeather@@A ; realWeather
	cmp	DWORD PTR [edx+15688], 2
	jne	SHORT $LN3@DrawStratu
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40a00000
	comiss	xmm0, DWORD PTR [eax+15748]
	jbe	SHORT $LN3@DrawStratu
$LN2@DrawStratu:

; 122  : 		TheDXEngine.DX2D_AddQuad(LAYER_STRATUS1, 0, (D3DXVECTOR3*)position, Quad, stratusRadius, CirrusCumTextures.TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+15740]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad

; 123  : 	else

	jmp	SHORT $LN1@DrawStratu
$LN3@DrawStratu:

; 124  : 		TheDXEngine.DX2D_AddQuad(LAYER_STRATUS1, 0, (D3DXVECTOR3*)position, Quad, stratusRadius, overcastTexture.TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+15740]
	movss	DWORD PTR [esp], xmm0
	lea	edx, DWORD PTR _Quad$[ebp]
	push	edx
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad
$LN1@DrawStratu:
$LN12@DrawStratu:

; 125  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?DrawStratus@RealWeather@@QAEXPAUTpoint@@H@Z ENDP	; RealWeather::DrawStratus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
;	COMDAT ?DrawCumulus@RealWeather@@QAEXPAUTpoint@@HM@Z
_TEXT	SEGMENT
_minFog$ = -124						; size = 4
_this$ = -120						; size = 4
_Quad$ = -116						; size = 112
__$ArrayPad$ = -4					; size = 4
_position$ = 8						; size = 4
_txtIndex$ = 12						; size = 4
_Radius$ = 16						; size = 4
?DrawCumulus@RealWeather@@QAEXPAUTpoint@@HM@Z PROC	; RealWeather::DrawCumulus, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 	if(weatherCondition != FAIR ) return;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 2
	je	SHORT $LN1@DrawCumulu
	jmp	$LN2@DrawCumulu
$LN1@DrawCumulu:

; 170  : 
; 171  : 	float minFog=0.2f;

	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR _minFog$[ebp], xmm0

; 172  : 
; 173  : 	// COBRA - DX - Setup the Squares in the 2D DX Engine for clouds
; 174  : 	// RV - I-Hawk - X and Y squares are same size
; 175  : 
; 176  : #if CLOUDS_FIX
; 177  : 
; 178  : 	TheDXEngine.DX2D_SetupSquareCx(1.0f, 1.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_SetupSquareCx@CDXEngine@@QAEXMM@Z	; CDXEngine::DX2D_SetupSquareCx

; 179  : 
; 180  : #else
; 181  : 
; 182  : 	TheDXEngine.DX2D_SetupSquareCx(1.0f, 0.5f);
; 183  : 
; 184  : #endif	
; 185  : 
; 186  : 	// the Cloud vertices
; 187  : 	D3DDYNVERTEX	Quad[4];
; 188  : 
; 189  : 	// Assign textures Coord
; 190  : 	Quad[0].tu = UVCoords4X4[txtIndex][0][0], Quad[0].tv = UVCoords4X4[txtIndex][0][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 191  : 	Quad[1].tu = UVCoords4X4[txtIndex][1][0], Quad[1].tv = UVCoords4X4[txtIndex][1][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 0
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 192  : 	Quad[2].tu = UVCoords4X4[txtIndex][2][0], Quad[2].tv = UVCoords4X4[txtIndex][2][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 1
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	shl	edx, 1
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	shl	edx, 1
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 193  : 	Quad[3].tu = UVCoords4X4[txtIndex][3][0], Quad[3].tv = UVCoords4X4[txtIndex][3][1];

	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 3
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+20], eax
	mov	ecx, DWORD PTR _txtIndex$[ebp]
	shl	ecx, 5
	mov	edx, 8
	imul	edx, 3
	lea	eax, DWORD PTR _UVCoords4X4[ecx+edx]
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	mov	eax, DWORD PTR [eax+ecx]
	mov	DWORD PTR _Quad$[ebp+edx+24], eax

; 194  : 	// Assign Colors
; 195  : 	Quad[0].dwColour = CloudHiColor, Quad[0].dwSpecular = 0x000000;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15948]
	mov	DWORD PTR _Quad$[ebp+ecx+12], eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 0
	mov	DWORD PTR _Quad$[ebp+ecx+16], 0

; 196  : 	Quad[1].dwColour = CloudHiColor, Quad[1].dwSpecular = 0x000000;

	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15948]
	mov	DWORD PTR _Quad$[ebp+edx+12], ecx
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	mov	DWORD PTR _Quad$[ebp+edx+16], 0

; 197  : 	Quad[2].dwColour = CloudLoColor, Quad[2].dwSpecular = 0x000000;

	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15944]
	mov	DWORD PTR _Quad$[ebp+eax+12], edx
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	mov	DWORD PTR _Quad$[ebp+eax+16], 0

; 198  : 	Quad[3].dwColour = CloudLoColor, Quad[3].dwSpecular = 0x000000;

	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15944]
	mov	DWORD PTR _Quad$[ebp+ecx+12], eax
	mov	ecx, 28					; 0000001cH
	imul	ecx, 3
	mov	DWORD PTR _Quad$[ebp+ecx+16], 0

; 199  : 
; 200  : 	// RV - I-Hawk - different positioning
; 201  : 
; 202  : #if CLOUDS_FIX	
; 203  : 	
; 204  : 	Quad[0].pos.y=-puffRadius * 2.0f, Quad[0].pos.z=-puffRadius * 2.0f, Quad[0].pos.x=0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15732]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40000000
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15732]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40000000
	mov	edx, 28					; 0000001cH
	imul	edx, 0
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0

; 205  : 	Quad[1].pos.y=puffRadius * 2.0f, Quad[1].pos.z=-puffRadius * 2.0f, Quad[1].pos.x=0;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15732]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	DWORD PTR _Quad$[ebp+edx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15732]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 0
	movss	DWORD PTR _Quad$[ebp+ecx+8], xmm0
	mov	edx, 28					; 0000001cH
	shl	edx, 0
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+edx], xmm0

; 206  : 	Quad[2].pos.y=puffRadius * 2.0f, Quad[2].pos.z=puffRadius * 2.0f, Quad[2].pos.x=0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15732]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	DWORD PTR _Quad$[ebp+ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15732]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	eax, 28					; 0000001cH
	shl	eax, 1
	movss	DWORD PTR _Quad$[ebp+eax+8], xmm0
	mov	ecx, 28					; 0000001cH
	shl	ecx, 1
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+ecx], xmm0

; 207  : 	Quad[3].pos.y=-puffRadius * 2.0f, Quad[3].pos.z=puffRadius * 2.0f, Quad[3].pos.x=0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15732]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40000000
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	DWORD PTR _Quad$[ebp+eax+4], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15732]
	mulss	xmm0, DWORD PTR __real@40000000
	mov	edx, 28					; 0000001cH
	imul	edx, 3
	movss	DWORD PTR _Quad$[ebp+edx+8], xmm0
	mov	eax, 28					; 0000001cH
	imul	eax, 3
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _Quad$[ebp+eax], xmm0

; 208  : 
; 209  : #else
; 210  : 
; 211  : 	Quad[0].pos.y=-Radius * 3.0f, Quad[0].pos.z=-Radius * 1.5f, Quad[0].pos.x=0;
; 212  : 	Quad[1].pos.y=Radius * 3.0f, Quad[1].pos.z=-Radius * 1.5f, Quad[1].pos.x=0;
; 213  : 	Quad[2].pos.y=Radius * 3.0f, Quad[2].pos.z=Radius * 1.5f, Quad[2].pos.x=0;
; 214  : 	Quad[3].pos.y=-Radius * 3.0f, Quad[3].pos.z=Radius * 1.5f, Quad[3].pos.x=0;
; 215  : 
; 216  : #endif
; 217  : 
; 218  : 	// Draw the Cloud
; 219  : 	TheDXEngine.DX2D_AddQuad(LAYER_GROUND, POLY_BB , (D3DXVECTOR3*)position, Quad, Radius, CumulusTextures.TexHandle());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?TexHandle@Texture@@QAEKXZ		; Texture::TexHandle
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _Radius$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _Quad$[ebp]
	push	ecx
	mov	edx, DWORD PTR _position$[ebp]
	push	edx
	push	1
	push	0
	mov	ecx, OFFSET ?TheDXEngine@@3VCDXEngine@@A ; TheDXEngine
	call	?DX2D_AddQuad@CDXEngine@@QAEXKKPAUD3DXVECTOR3@@PAUD3DDYNVERTEX@@MK@Z ; CDXEngine::DX2D_AddQuad
$LN2@DrawCumulu:

; 220  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawCumulus@RealWeather@@QAEXPAUTpoint@@HM@Z ENDP	; RealWeather::DrawCumulus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Draw@RealWeather@@QAEXXZ PROC				; RealWeather::Draw
; _this$ = ecx

; 926  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 927  : 	// Update all clouds
; 928  : 	if(DisplayOptions.bZBuffering) UpdateDrawables();

	movzx	eax, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	eax, eax
	je	SHORT $LN8@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateDrawables@RealWeather@@IAEXXZ	; RealWeather::UpdateDrawables
$LN8@Draw:

; 929  : 
; 930  : 	// Weather quality check under overcast
; 931  : 	if(weatherCondition == INCLEMENT && UnderOvercast()){

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15688], 4
	jne	SHORT $LN1@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UnderOvercast@RealWeather@@QAE_NXZ	; RealWeather::UnderOvercast
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Draw

; 932  : 		// if worst than just lighting, rain
; 933  : 		if(WeatherQuality >= 0.1f) DrawRain(); // RV - I-Hawk - was 0.75

	movss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	comiss	xmm0, DWORD PTR __real@3dcccccd
	jb	SHORT $LN6@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DrawRain@RealWeather@@IAEXXZ		; RealWeather::DrawRain
$LN6@Draw:

; 934  : 		// just before rain, lightning
; 935  : 		if(WeatherQuality >= 0.1f){ // was 0.65

	movss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	comiss	xmm0, DWORD PTR __real@3dcccccd
	jb	SHORT $LN1@Draw

; 936  : 			if(!didOnce){

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15904], 0
	jne	SHORT $LN4@Draw

; 937  : 				if((SimLibElapsedTime - startMS) > intervalMS) didOnce = TRUE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	edx, DWORD PTR [ecx+15824]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR [eax+15828]
	jbe	SHORT $LN3@Draw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15904], 1

; 938  : 				else return;

	jmp	SHORT $LN2@Draw
$LN3@Draw:
	jmp	SHORT $LN9@Draw
$LN2@Draw:

; 939  : 			} else

	jmp	SHORT $LN1@Draw
$LN4@Draw:

; 940  : 				DoLightning();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLightning@RealWeather@@IAEXXZ	; RealWeather::DoLightning
$LN1@Draw:
$LN9@Draw:

; 941  : 		}
; 942  : 	}
; 943  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Draw@RealWeather@@QAEXXZ ENDP				; RealWeather::Draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv161 = -36						; size = 4
_opp$ = -32						; size = 4
_hyp$ = -28						; size = 4
_adj$ = -24						; size = 4
_this$ = -20						; size = 4
_lv$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?UpdateLighting@RealWeather@@QAEXXZ PROC		; RealWeather::UpdateLighting
; _this$ = ecx

; 463  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 464  : 	Tpoint lv;
; 465  : 	float hyp,adj,opp;
; 466  : 	TheTimeOfDay.GetLightDirection(&lv);

	lea	eax, DWORD PTR _lv$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetLightDirection@CTimeOfDay@@QAEXPAUTpoint@@@Z ; CTimeOfDay::GetLightDirection

; 467  : 
; 468  : 	hyp = SqrtF(lv.x*lv.x+lv.y*lv.y+lv.z*lv.z);

	movss	xmm0, DWORD PTR _lv$[ebp]
	mulss	xmm0, DWORD PTR _lv$[ebp]
	movss	xmm1, DWORD PTR _lv$[ebp+4]
	mulss	xmm1, DWORD PTR _lv$[ebp+4]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _lv$[ebp+8]
	mulss	xmm1, DWORD PTR _lv$[ebp+8]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtF@@YAMM@Z				; SqrtF
	add	esp, 4
	fstp	DWORD PTR _hyp$[ebp]

; 469  : 	adj = -lv.z;

	movss	xmm0, DWORD PTR _lv$[ebp+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _adj$[ebp], xmm0

; 470  : 	opp = SqrtF(hyp*hyp-adj*adj);

	movss	xmm0, DWORD PTR _hyp$[ebp]
	mulss	xmm0, DWORD PTR _hyp$[ebp]
	movss	xmm1, DWORD PTR _adj$[ebp]
	mulss	xmm1, DWORD PTR _adj$[ebp]
	subss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtF@@YAMM@Z				; SqrtF
	add	esp, 4
	fstp	DWORD PTR _opp$[ebp]

; 471  : 
; 472  : 	sunMag = opp*(-stratusZ)/adj/10.f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15716]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _opp$[ebp]
	divss	xmm0, DWORD PTR _adj$[ebp]
	divss	xmm0, DWORD PTR __real@41200000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15932], xmm0

; 473  : 	sunAngle = Atan(opp,adj);

	push	ecx
	movss	xmm0, DWORD PTR _adj$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _opp$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?Atan@@YAMMM@Z				; Atan
	add	esp, 8
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+15936]

; 474  : 	sunYaw = glConvertToRadian(TheTimeOfDay.GetSunYaw())+PI;

	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetSunYaw@CTimeOfDay@@QAEHXZ		; CTimeOfDay::GetSunYaw
	push	eax
	call	?glConvertToRadian@@YAMH@Z		; glConvertToRadian
	add	esp, 4
	fstp	DWORD PTR tv161[ebp]
	movss	xmm0, DWORD PTR tv161[ebp]
	addss	xmm0, DWORD PTR __real@40490fdb
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15940], xmm0

; 475  : 	if(sunYaw > 2.f*PI) sunYaw -= 2.f*PI;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15940]
	comiss	xmm0, DWORD PTR __real@40c90fdb
	jbe	SHORT $LN1@UpdateLigh
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15940]
	subss	xmm0, DWORD PTR __real@40c90fdb
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15940], xmm0
$LN1@UpdateLigh:

; 476  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateLighting@RealWeather@@QAEXXZ ENDP		; RealWeather::UpdateLighting
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
tv485 = -68						; size = 8
_DeltaCx$1 = -60					; size = 4
_StratusHalf$ = -56					; size = 4
tv524 = -52						; size = 4
_ElapsedTime$2 = -48					; size = 4
_Distance$3 = -44					; size = 4
tv492 = -40						; size = 4
tv482 = -36						; size = 4
_dz$4 = -32						; size = 4
_dy$5 = -28						; size = 4
_dx$6 = -24						; size = 4
_sDistance$7 = -20					; size = 4
tv228 = -16						; size = 4
tv215 = -12						; size = 4
_OvercastShading$8 = -8					; size = 4
_this$ = -4						; size = 4
_Renderer$ = 8						; size = 4
?RefreshWeather@RealWeather@@QAEXPAVRenderOTW@@@Z PROC	; RealWeather::RefreshWeather
; _this$ = ecx

; 347  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 348  : 	renderer = Renderer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Renderer$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 349  : 
; 350  : 	viewerX = renderer->viewpoint->X();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?X@TViewPoint@@QAEMXZ			; TViewPoint::X
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+15700]

; 351  : 	viewerY = renderer->viewpoint->Y();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?Y@TViewPoint@@QAEMXZ			; TViewPoint::Y
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+15704]

; 352  : 	viewerZ = renderer->viewpoint->Z();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+263088]
	call	?Z@TViewPoint@@QAEMXZ			; TViewPoint::Z
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+15708]

; 353  : 	
; 354  : 	TheTimeOfDay.SetScaleFactor(0);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor

; 355  : 
; 356  : 	// RED - Update viewer / weather status
; 357  : 	if(weatherCondition > FAIR){

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15688], 2
	jle	$LN26@RefreshWea

; 358  : 		LoOvercast = stratusZ + stratusDepth / 2.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15744]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+15716]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15756], xmm0

; 359  : 		HiOvercast = stratusZ - stratusDepth / 2.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15744]
	divss	xmm0, DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+15716]
	subss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15752], xmm1

; 360  : 		MidOvercast = stratusZ;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15716]
	mov	DWORD PTR [eax+15760], edx

; 361  : 		// RED - default to inside Overcast, the check for conditions
; 362  : 		InsideOVCST = true, OverOVCST = false, UnderOVCST = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+15998], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15997], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15996], 0

; 363  : 		if( viewerZ <= HiOvercast ) InsideOVCST = UnderOVCST = false, OverOVCST = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15752]
	comiss	xmm0, DWORD PTR [ecx+15708]
	jb	SHORT $LN25@RefreshWea
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15996], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+15998], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15997], 1
$LN25@RefreshWea:

; 364  : 		if( viewerZ >= LoOvercast) InsideOVCST = OverOVCST = false, UnderOVCST = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15708]
	comiss	xmm0, DWORD PTR [eax+15756]
	jb	SHORT $LN24@RefreshWea
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15997], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15998], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+15996], 1
$LN24@RefreshWea:

; 365  : 	} else {

	jmp	SHORT $LN23@RefreshWea
$LN26@RefreshWea:

; 366  : 		// No condition is true if nice weather
; 367  : 		InsideOVCST = UnderOVCST = OverOVCST = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15997], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+15996], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+15998], 0
$LN23@RefreshWea:

; 368  : 	}
; 369  : 
; 370  : 	if(UnderOvercast() || InsideOvercast()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UnderOvercast@RealWeather@@QAE_NXZ	; RealWeather::UnderOvercast
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN21@RefreshWea
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsideOvercast@RealWeather@@QAE_NXZ	; RealWeather::InsideOvercast
	movzx	edx, al
	test	edx, edx
	je	$LN22@RefreshWea
$LN21@RefreshWea:

; 371  : 		float	OvercastShading = .8f + ShadingFactor * 0.05f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15748]
	mulss	xmm0, DWORD PTR __real@3d4ccccd
	addss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR _OvercastShading$8[ebp], xmm0

; 372  : 		// if under Overcast
; 373  : 		if(UnderOvercast()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UnderOvercast@RealWeather@@QAE_NXZ	; RealWeather::UnderOvercast
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@RefreshWea

; 374  : 			TheTimeOfDay.SetScaleFactor(OvercastShading);

	push	ecx
	movss	xmm0, DWORD PTR _OvercastShading$8[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor
$LN20@RefreshWea:

; 375  : 		}
; 376  : 		// if inside overcast
; 377  : 		if(InsideOvercast()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsideOvercast@RealWeather@@QAE_NXZ	; RealWeather::InsideOvercast
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN19@RefreshWea

; 378  : 			TheTimeOfDay.SetScaleFactor(OvercastShading - (( LoOvercast -  viewerZ ) / stratusDepth) * OvercastShading);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15756]
	subss	xmm0, DWORD PTR [ecx+15708]
	mov	edx, DWORD PTR _this$[ebp]
	divss	xmm0, DWORD PTR [edx+15744]
	mulss	xmm0, DWORD PTR _OvercastShading$8[ebp]
	movss	xmm1, DWORD PTR _OvercastShading$8[ebp]
	subss	xmm1, xmm0
	push	ecx
	movss	DWORD PTR [esp], xmm1
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor
$LN19@RefreshWea:

; 379  : 		}
; 380  : 	} else {

	jmp	SHORT $LN18@RefreshWea
$LN22@RefreshWea:

; 381  : 		// The weather light, default to 0.0f
; 382  : 		TheTimeOfDay.SetScaleFactor(0.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?SetScaleFactor@CTimeOfDay@@QAEXM@Z	; CTimeOfDay::SetScaleFactor
$LN18@RefreshWea:

; 383  : 	}
; 384  : 	// update all the colors stuff
; 385  : 	TheTimeOfDay.UpdateWeatherColors(weatherCondition);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15688]
	push	ecx
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?UpdateWeatherColors@CTimeOfDay@@QAEXK@Z ; CTimeOfDay::UpdateWeatherColors

; 386  : 	TheTimeOfDay.GetTextureLightingColor(&litCloudColor);

	push	OFFSET ?litCloudColor@RealWeather@@1UTcolor@@A ; RealWeather::litCloudColor
	mov	ecx, OFFSET ?TheTimeOfDay@@3VCTimeOfDay@@A ; TheTimeOfDay
	call	?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ; CTimeOfDay::GetTextureLightingColor

; 387  : 	Drawable3DCloud::SetCloudColor(&litCloudColor);

	push	OFFSET ?litCloudColor@RealWeather@@1UTcolor@@A ; RealWeather::litCloudColor
	call	?SetCloudColor@Drawable3DCloud@@SAXPAUTcolor@@@Z ; Drawable3DCloud::SetCloudColor
	add	esp, 4

; 388  : 	Drawable2DCloud::SetCloudColor(&litCloudColor);

	push	OFFSET ?litCloudColor@RealWeather@@1UTcolor@@A ; RealWeather::litCloudColor
	call	?SetCloudColor@Drawable2DCloud@@SAXPAUTcolor@@@Z ; Drawable2DCloud::SetCloudColor
	add	esp, 4

; 389  : 		
; 390  : 	REPORT_VALUE("Weather Quality :", (WeatherQuality * 1000.0f));
; 391  : 	REPORT_VALUE("Shading Factor :", (ShadingFactor));
; 392  : 	UpdateCells();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateCells@RealWeather@@IAEXXZ	; RealWeather::UpdateCells

; 393  : 
; 394  : 	if(!DisplayOptions.bZBuffering)

	movzx	edx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	edx, edx
	jne	SHORT $LN17@RefreshWea

; 395  : 		UpdateDrawables();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateDrawables@RealWeather@@IAEXXZ	; RealWeather::UpdateDrawables
$LN17@RefreshWea:

; 396  : 
; 397  : 	// Wather quality moving on every second
; 398  : 	if(TheTimeManager.GetClockTime() - WeatherQualityElapsed >= 1000){

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	sub	eax, DWORD PTR ?WeatherQualityElapsed@RealWeather@@1KA ; RealWeather::WeatherQualityElapsed
	cmp	eax, 1000				; 000003e8H
	jb	$LN16@RefreshWea

; 399  : 		// if Local game, update data
; 400  : 		if (!vuLocalGame || vuLocalGame->IsLocal()){

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN29@RefreshWea
	mov	DWORD PTR tv215[ebp], 0
	jmp	SHORT $LN30@RefreshWea
$LN29@RefreshWea:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv215[ebp], eax
$LN30@RefreshWea:
	cmp	DWORD PTR tv215[ebp], 0
	je	SHORT $LN14@RefreshWea
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN31@RefreshWea
	mov	DWORD PTR tv228[ebp], 0
	jmp	SHORT $LN32@RefreshWea
$LN31@RefreshWea:
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::operator->
	mov	ecx, eax
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	DWORD PTR tv228[ebp], eax
$LN32@RefreshWea:
	mov	ecx, DWORD PTR tv228[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@RefreshWea
$LN14@RefreshWea:

; 401  : 			if(WeatherQualityStep) WeatherQualityStep--;

	cmp	DWORD PTR ?WeatherQualityStep@RealWeather@@1KA, 0 ; RealWeather::WeatherQualityStep
	je	SHORT $LN13@RefreshWea
	mov	eax, DWORD PTR ?WeatherQualityStep@RealWeather@@1KA ; RealWeather::WeatherQualityStep
	sub	eax, 1
	mov	DWORD PTR ?WeatherQualityStep@RealWeather@@1KA, eax ; RealWeather::WeatherQualityStep
	jmp	SHORT $LN12@RefreshWea
$LN13@RefreshWea:

; 402  : 			else UpdateWeatherQuality();

	call	?UpdateWeatherQuality@RealWeather@@KAXXZ ; RealWeather::UpdateWeatherQuality
$LN12@RefreshWea:

; 403  : 
; 404  : 			WeatherQuality += WeatherQualityRate;

	movss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	addss	xmm0, DWORD PTR ?WeatherQualityRate@RealWeather@@1MA
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0

; 405  : 			if(WeatherQuality > 1.0f) WeatherQuality = 1.0f;

	movss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN11@RefreshWea
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0
$LN11@RefreshWea:

; 406  : 			if(WeatherQuality < 0.0f) WeatherQuality = 0.0f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	jbe	SHORT $LN10@RefreshWea
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?WeatherQuality@RealWeather@@1MA, xmm0
$LN10@RefreshWea:

; 407  : 		} 
; 408  : 		WeatherQualityElapsed = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	DWORD PTR ?WeatherQualityElapsed@RealWeather@@1KA, eax ; RealWeather::WeatherQualityElapsed
$LN16@RefreshWea:

; 409  : 	}
; 410  : 
; 411  : 
; 412  : 	// RED  - Update visible height if an overcasting is prsent
; 413  : 	// used by DrawableBSP to update its own visibility
; 414  : 	// if under the overcast layer
; 415  : 	if(weatherCondition >FAIR && viewerZ < stratusZ) VisibleHeight = stratusZ;

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15688], 2
	jle	SHORT $LN9@RefreshWea
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15716]
	comiss	xmm0, DWORD PTR [eax+15708]
	jbe	SHORT $LN9@RefreshWea
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15716]
	mov	DWORD PTR [ecx+15972], eax
	jmp	SHORT $LN8@RefreshWea
$LN9@RefreshWea:

; 416  : 	// if weather fine or Viever under the overcast, give a default positive value ( negative is higher )
; 417  : 	// so that positive makes ALWAYS VISIBLE
; 418  : 	else VisibleHeight = 10000.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [ecx+15972], xmm0
$LN8@RefreshWea:

; 419  : 
; 420  : 	// Setup Overcast parameters
; 421  : 	float	StratusHalf = stratusDepth / 2.0f; 

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15744]
	divss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR _StratusHalf$[ebp], xmm0

; 422  : 	// Update fog evolution with weather
; 423  : 	if(weatherCondition == POOR) LinearFogLimit = -stratusZ * 4.0f;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 3
	jne	SHORT $LN7@RefreshWea
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15716]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR __real@40800000
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15960], xmm0
$LN7@RefreshWea:

; 424  : 	if(weatherCondition == INCLEMENT) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15688], 4
	jne	$LN6@RefreshWea

; 425  : 		stratusZ = -15000.0f * WeatherQuality - 5000.0f;

	movss	xmm0, DWORD PTR __real@c66a6000
	mulss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	subss	xmm0, DWORD PTR __real@459c4000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15716], xmm0

; 426  : 		float sDistance = -stratusZ - ( stratusDepth / 2.0f ) ;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15716]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [eax+15744]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR _sDistance$7[ebp], xmm0

; 427  : 		LinearFogLimit = sDistance * sDistance / 5000.0f + 500.0f, ShadingFactor = 10.0f - 10.0f *WeatherQuality;

	movss	xmm0, DWORD PTR _sDistance$7[ebp]
	mulss	xmm0, DWORD PTR _sDistance$7[ebp]
	divss	xmm0, DWORD PTR __real@459c4000
	addss	xmm0, DWORD PTR __real@43fa0000
	mov	ecx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [ecx+15960], xmm0
	movss	xmm0, DWORD PTR __real@41200000
	mulss	xmm0, DWORD PTR ?WeatherQuality@RealWeather@@1MA
	movss	xmm1, DWORD PTR __real@41200000
	subss	xmm1, xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15748], xmm1
$LN6@RefreshWea:

; 428  : 	}
; 429  : 
; 430  : 	// this creates the randomic fog intensisty effect on movement
; 431  : 	if(LinearFogStatus){

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+15968]
	test	ecx, ecx
	je	$LN5@RefreshWea

; 432  : 		// get the viewer Delta distance
; 433  : 		float	dx = viewerX - LastViewPos.x, dy = viewerY - LastViewPos.y, dz = viewerZ - LastViewPos.z;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15700]
	subss	xmm0, DWORD PTR [eax+15976]
	movss	DWORD PTR _dx$6[ebp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+15704]
	subss	xmm0, DWORD PTR [edx+15980]
	movss	DWORD PTR _dy$5[ebp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15708]
	subss	xmm0, DWORD PTR [ecx+15984]
	movss	DWORD PTR _dz$4[ebp], xmm0

; 434  : 		float	Distance = sqrtf(dx * dx + dy * dy + dz * dz);

	movss	xmm0, DWORD PTR _dx$6[ebp]
	mulss	xmm0, DWORD PTR _dx$6[ebp]
	movss	xmm1, DWORD PTR _dy$5[ebp]
	mulss	xmm1, DWORD PTR _dy$5[ebp]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR _dz$4[ebp]
	mulss	xmm1, DWORD PTR _dz$4[ebp]
	addss	xmm0, xmm1
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?SqrtSSE@@YAMM@Z			; SqrtSSE
	add	esp, 4
	fstp	DWORD PTR _Distance$3[ebp]

; 435  : 		float	ElapsedTime	= (float)(TheTimeManager.GetClockTime() - LastTime ) * .001f;

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	edx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [edx+15992]
	mov	DWORD PTR tv482[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv482[ebp]
	mov	eax, DWORD PTR tv482[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv485[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv485[ebp]
	mulss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR _ElapsedTime$2[ebp], xmm0

; 436  : 
; 437  : 		// fog varies based on travelled distace / 1000 ( arbitrary ) + a little offset
; 438  : 		LinearFogDelta += PRANDFloat() * ( Distance / 10.0f + 0.1f ) * ElapsedTime;

	call	?PRANDFloat@@YAMXZ			; PRANDFloat
	fstp	DWORD PTR tv492[ebp]
	movss	xmm0, DWORD PTR tv492[ebp]
	movss	xmm1, DWORD PTR _Distance$3[ebp]
	divss	xmm1, DWORD PTR __real@41200000
	addss	xmm1, DWORD PTR __real@3dcccccd
	mulss	xmm0, xmm1
	mulss	xmm0, DWORD PTR _ElapsedTime$2[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+15988]
	mov	edx, DWORD PTR _this$[ebp]
	movss	DWORD PTR [edx+15988], xmm0

; 439  : 		// consistency check
; 440  : 		if(LinearFogDelta > 1.0f)  LinearFogDelta = 1.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15988]
	comiss	xmm0, DWORD PTR __real@3f800000
	jbe	SHORT $LN4@RefreshWea
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+15988], xmm0
$LN4@RefreshWea:

; 441  : 		if(LinearFogDelta < 0.0f) LinearFogDelta = 0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR [edx+15988]
	jbe	SHORT $LN3@RefreshWea
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+15988], xmm0
$LN3@RefreshWea:

; 442  : 		// update fields
; 443  : 		LastTime = TheTimeManager.GetClockTime();

	mov	ecx, OFFSET ?TheTimeManager@@3VTimeManager@@A ; TheTimeManager
	call	?GetClockTime@TimeManager@@QAEKXZ	; TimeManager::GetClockTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15992], eax

; 444  : 		LastViewPos.x = viewerX, LastViewPos.y = viewerY, LastViewPos.z = viewerZ;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15700]
	mov	DWORD PTR [edx+15976], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15704]
	mov	DWORD PTR [edx+15980], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+15708]
	mov	DWORD PTR [edx+15984], ecx
$LN5@RefreshWea:

; 445  : 
; 446  : 	}
; 447  : 
; 448  : 	// Check for Fogdensity, if INSIDE Overcast Layer, the Fog range is lowered to
; 449  : 	// simulate clouds tickness
; 450  : 	if(InsideOvercast()){

	mov	ecx, DWORD PTR _this$[ebp]
	call	?InsideOvercast@RealWeather@@QAE_NXZ	; RealWeather::InsideOvercast
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@RefreshWea

; 451  : 		// get how much is into the clouds layer
; 452  : 		float DeltaCx = fabs(-viewerZ + stratusZ) / StratusHalf;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+15708]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+15716]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv524[ebp]
	movss	xmm0, DWORD PTR tv524[ebp]
	divss	xmm0, DWORD PTR _StratusHalf$[ebp]
	movss	DWORD PTR _DeltaCx$1[ebp], xmm0

; 453  : 		// check if near layer lmits, and update fog...
; 454  : 		//LinearFogUsed = 20.0f + 1000.0f * LinearFogUsed;
; 455  : 		LinearFogUsed = 50.0f + 200.0f * (LinearFogDelta + DeltaCx);

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx+15988]
	addss	xmm0, DWORD PTR _DeltaCx$1[ebp]
	mulss	xmm0, DWORD PTR __real@43480000
	addss	xmm0, DWORD PTR __real@42480000
	mov	eax, DWORD PTR _this$[ebp]
	movss	DWORD PTR [eax+15964], xmm0

; 456  : 	} else 

	jmp	SHORT $LN1@RefreshWea
$LN2@RefreshWea:

; 457  : 		LinearFogUsed = LinearFogLimit, LinearFogDelta = 0.9f;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15960]
	mov	DWORD PTR [ecx+15964], eax
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR [ecx+15988], xmm0
$LN1@RefreshWea:

; 458  : 
; 459  : 
; 460  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?RefreshWeather@RealWeather@@QAEXPAVRenderOTW@@@Z ENDP	; RealWeather::RefreshWeather
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Renderer$ = 8						; size = 4
?SetRenderer@RealWeather@@QAEXPAVRenderOTW@@@Z PROC	; RealWeather::SetRenderer
; _this$ = ecx

; 342  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 343  : 	renderer = Renderer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Renderer$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 344  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetRenderer@RealWeather@@QAEXPAVRenderOTW@@@Z ENDP	; RealWeather::SetRenderer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 4
$T3 = -44						; size = 4
tv151 = -40						; size = 4
tv128 = -36						; size = 4
tv82 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
_i$6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_cumulusList$ = 8					; size = 4
_stratusList$ = 12					; size = 4
?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z PROC	; RealWeather::Setup
; _this$ = ecx

; 309  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 310  : 	if(bSetup == TRUE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+15880], 1
	jne	SHORT $LN7@Setup

; 311  : 	{
; 312  : 		return;

	jmp	$LN8@Setup
$LN7@Setup:

; 313  : 	}
; 314  : 
; 315  : 	if(!DisplayOptions.bZBuffering)

	movzx	ecx, BYTE PTR ?DisplayOptions@@3VDisplayOptionsClass@@A+16
	test	ecx, ecx
	jne	$LN6@Setup

; 316  : 	{
; 317  : 		int i;
; 318  : 
; 319  : 		if(cumulusList){

	cmp	DWORD PTR _cumulusList$[ebp], 0
	je	SHORT $LN5@Setup

; 320  : 			real3DClouds = new Real3DCloud[MAX_NUM_DRAWABLES];

	push	200					; 000000c8H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN10@Setup
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [edx], 49			; 00000031H
	push	OFFSET ??1Real3DCloud@@QAE@XZ		; Real3DCloud::~Real3DCloud
	push	OFFSET ??0Real3DCloud@@QAE@XZ		; Real3DCloud::Real3DCloud
	push	49					; 00000031H
	push	4
	mov	eax, DWORD PTR $T5[ebp]
	add	eax, 4
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR $T5[ebp]
	add	ecx, 4
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $LN11@Setup
$LN10@Setup:
	mov	DWORD PTR tv82[ebp], 0
$LN11@Setup:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax+15792], ecx
$LN5@Setup:

; 321  : 		}
; 322  : 
; 323  : 		if(stratusList){

	cmp	DWORD PTR _stratusList$[ebp], 0
	je	SHORT $LN4@Setup

; 324  : 			real2DClouds = new Real2DCloud[MAX_NUM_DRAWABLES];

	push	200					; 000000c8H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN12@Setup
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [edx], 49			; 00000031H
	push	OFFSET ??1Real2DCloud@@QAE@XZ		; Real2DCloud::~Real2DCloud
	push	OFFSET ??0Real2DCloud@@QAE@XZ		; Real2DCloud::Real2DCloud
	push	49					; 00000031H
	push	4
	mov	eax, DWORD PTR $T4[ebp]
	add	eax, 4
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR $T4[ebp]
	add	ecx, 4
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN13@Setup
$LN12@Setup:
	mov	DWORD PTR tv128[ebp], 0
$LN13@Setup:
	mov	edx, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+15788], ecx
$LN4@Setup:

; 325  : 		}
; 326  : 
; 327  : 		for(i = 0; i < MAX_NUM_DRAWABLES; i++){

	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN3@Setup
$LN2@Setup:
	mov	edx, DWORD PTR _i$6[ebp]
	add	edx, 1
	mov	DWORD PTR _i$6[ebp], edx
$LN3@Setup:
	cmp	DWORD PTR _i$6[ebp], 49			; 00000031H
	jge	SHORT $LN6@Setup

; 328  : 			real2DClouds[i].Setup(stratusList);

	mov	eax, DWORD PTR _stratusList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+15788]
	mov	eax, DWORD PTR _i$6[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	call	?Setup@Real2DCloud@@QAEXPAVObjectDisplayList@@@Z ; Real2DCloud::Setup

; 329  : 			real3DClouds[i].Setup(cumulusList);

	mov	ecx, DWORD PTR _cumulusList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+15792]
	mov	ecx, DWORD PTR _i$6[ebp]
	lea	ecx, DWORD PTR [eax+ecx*4]
	call	?Setup@Real3DCloud@@QAEXPAVObjectDisplayList@@@Z ; Real3DCloud::Setup

; 330  : 		}

	jmp	SHORT $LN2@Setup
$LN6@Setup:

; 331  : 	}
; 332  : 
; 333  : 	oldTimeMS = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15820], 0

; 334  : 	startMS = SimLibElapsedTime - 200;

	mov	eax, DWORD PTR ?SimLibElapsedTime@@3KA	; SimLibElapsedTime
	sub	eax, 200				; 000000c8H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15824], eax

; 335  : 	intervalMS = max((rand()%10)*SEC_TO_MSEC,10*SEC_TO_MSEC);

	call	_rand
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	imul	edx, 1000				; 000003e8H
	cmp	edx, 10000				; 00002710H
	jle	SHORT $LN14@Setup
	call	_rand
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	imul	edx, 1000				; 000003e8H
	mov	DWORD PTR tv151[ebp], edx
	jmp	SHORT $LN15@Setup
$LN14@Setup:
	mov	DWORD PTR tv151[ebp], 10000		; 00002710H
$LN15@Setup:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR [edx+15828], eax

; 336  : 
; 337  : 	bSetup = TRUE;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15880], 1

; 338  : 	didOnce = drawLightning = isLightning = FALSE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15900], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15904], 0
$LN8@Setup:

; 339  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__unwindfunclet$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z$1:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Setup@RealWeather@@QAEXPAVObjectDisplayList@@0@Z ENDP	; RealWeather::Setup
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1RealWeather@@UAE@XZ PROC				; RealWeather::~RealWeather
; _this$ = ecx

; 298  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1RealWeather@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RealWeather@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 299  : 	if(real3DClouds || real2DClouds)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+15792], 0
	jne	SHORT $LN2@RealWeathe
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+15788], 0
	je	SHORT $LN3@RealWeathe
$LN2@RealWeathe:

; 300  : 	{
; 301  : 		Cleanup();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@RealWeather@@QAEXXZ		; RealWeather::Cleanup
$LN3@RealWeathe:

; 302  : 	}
; 303  : //Cobra this might not be necessary anymore
; 304  : if (metar)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16000], 0
	je	SHORT $LN4@RealWeathe

; 305  : 		delete metar;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16000]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@RealWeathe:

; 306  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	call	??1Texture@@QAE@XZ			; Texture::~Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	call	??1Texture@@QAE@XZ			; Texture::~Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??1Texture@@QAE@XZ			; Texture::~Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1Texture@@QAE@XZ			; Texture::~Texture
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1Texture@@QAE@XZ			; Texture::~Texture
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1RealWeather@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??1RealWeather@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??1RealWeather@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??1RealWeather@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??1RealWeather@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__ehhandler$??1RealWeather@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1RealWeather@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1RealWeather@@UAE@XZ ENDP				; RealWeather::~RealWeather
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\weather\realweather.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0RealWeather@@QAE@XZ PROC				; RealWeather::RealWeather
; _this$ = ecx

; 281  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RealWeather@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RealWeather@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	call	??0Texture@@QAE@XZ			; Texture::Texture
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15856				; 00003df0H
	call	??0Texture@@QAE@XZ			; Texture::Texture

; 282  : 	metar = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16000], 0

; 283  : 	renderer = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 284  : 	real2DClouds = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15788], 0

; 285  : 	real3DClouds = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15792], 0

; 286  : 	viewerZ = viewerX = viewerY = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+15704], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+15700], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+15708], xmm0

; 287  : 	rainX = rainY = rainZ = 0;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+15928], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+15924], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+15920], xmm0

; 288  : 	ZeroMemory(&lightningPos,sizeof(Tpoint));

	push	12					; 0000000cH
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 15796				; 00003db4H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 289  : 	belowLayer = insideLayer = greenMode = bSetup = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15880], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+15884], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+15892], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+15888], 0

; 290  : 
; 291  : 	// Linear Fog stuff
; 292  : 	LinearFogStatus = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15968], 0

; 293  : 	LinearFogLimit = 10000.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@461c4000
	movss	DWORD PTR [edx+15960], xmm0

; 294  : 	// RV - Biker - Not used atm
; 295  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0RealWeather@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RealWeather@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RealWeather@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__unwindfunclet$??0RealWeather@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 15832				; 00003dd8H
	jmp	??1Texture@@QAE@XZ			; Texture::~Texture
__ehhandler$??0RealWeather@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RealWeather@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RealWeather@@QAE@XZ ENDP				; RealWeather::RealWeather
; Function compile flags: /Odtp
;	COMDAT ??_EReal2DCloud@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EReal2DCloud@@QAEPAXI@Z PROC				; Real2DCloud::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Real2DCloud@@QAE@XZ		; Real2DCloud::~Real2DCloud
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Real2DCloud@@QAE@XZ			; Real2DCloud::~Real2DCloud
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReal2DCloud@@QAEPAXI@Z ENDP				; Real2DCloud::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_EReal3DCloud@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_EReal3DCloud@@QAEPAXI@Z PROC				; Real3DCloud::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1Real3DCloud@@QAE@XZ		; Real3DCloud::~Real3DCloud
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Real3DCloud@@QAE@XZ			; Real3DCloud::~Real3DCloud
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	esp, ebp
	pop	ebp
	ret	4
??_EReal3DCloud@@QAEPAXI@Z ENDP				; Real3DCloud::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fmath.h
;	COMDAT ?Atan@@YAMMM@Z
_TEXT	SEGMENT
_o$ = 8							; size = 4
_a$ = 12						; size = 4
?Atan@@YAMMM@Z PROC					; Atan, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp

; 74   : 	_asm
; 75   : 	{
; 76   : 		fld o;

	fld	DWORD PTR _o$[ebp]

; 77   : 		fld a;

	fld	DWORD PTR _a$[ebp]

; 78   : 		fpatan;

	fpatan

; 79   : 		fstp a;

	fstp	DWORD PTR _a$[ebp]

; 80   : 	}
; 81   : 
; 82   : 	return a;

	fld	DWORD PTR _a$[ebp]

; 83   : }

	pop	ebp
	ret	0
?Atan@@YAMMM@Z ENDP					; Atan
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fmath.h
;	COMDAT ?SqrtF@@YAMM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?SqrtF@@YAMM@Z PROC					; SqrtF, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp

; 50   : 	_asm
; 51   : 	{
; 52   : 		fld f;

	fld	DWORD PTR _f$[ebp]

; 53   : 		fsqrt;

	fsqrt

; 54   : 		fstp f;

	fstp	DWORD PTR _f$[ebp]

; 55   : 	}
; 56   : 
; 57   : 	return f;

	fld	DWORD PTR _f$[ebp]

; 58   : }

	pop	ebp
	ret	0
?SqrtF@@YAMM@Z ENDP					; SqrtF
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fmath.h
;	COMDAT ?FabsF@@YAMM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?FabsF@@YAMM@Z PROC					; FabsF, COMDAT

; 37   : {

	push	ebp
	mov	ebp, esp

; 38   : 	_asm
; 39   : 	{
; 40   : 		fld f;

	fld	DWORD PTR _f$[ebp]

; 41   : 		fabs;

	fabs

; 42   : 		fstp f;

	fstp	DWORD PTR _f$[ebp]

; 43   : 	}
; 44   : 
; 45   : 	return f;

	fld	DWORD PTR _f$[ebp]

; 46   : }

	pop	ebp
	ret	0
?FabsF@@YAMM@Z ENDP					; FabsF
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fmath.h
;	COMDAT ?Cos@@YAMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?Cos@@YAMM@Z PROC					; Cos, COMDAT

; 25   : {

	push	ebp
	mov	ebp, esp

; 26   : 	_asm
; 27   : 	{
; 28   : 		fld a;

	fld	DWORD PTR _a$[ebp]

; 29   : 		fcos;

	fcos

; 30   : 		fstp a;

	fstp	DWORD PTR _a$[ebp]

; 31   : 	}
; 32   : 
; 33   : 	return a;

	fld	DWORD PTR _a$[ebp]

; 34   : }

	pop	ebp
	ret	0
?Cos@@YAMM@Z ENDP					; Cos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\fmath.h
;	COMDAT ?Sin@@YAMM@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?Sin@@YAMM@Z PROC					; Sin, COMDAT

; 13   : {

	push	ebp
	mov	ebp, esp

; 14   : 	_asm
; 15   : 	{
; 16   : 		fld a;

	fld	DWORD PTR _a$[ebp]

; 17   : 		fsin;

	fsin

; 18   : 		fstp a;

	fstp	DWORD PTR _a$[ebp]

; 19   : 	}
; 20   : 
; 21   : 	return a;

	fld	DWORD PTR _a$[ebp]

; 22   : }

	pop	ebp
	ret	0
?Sin@@YAMM@Z ENDP					; Sin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?PRANDFloatPos@@YAMXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_x$ = -4						; size = 4
?PRANDFloatPos@@YAMXZ PROC				; PRANDFloatPos, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 151  : //	return NRANDPOS;
; 152  : 	float	x=	(float)(GenerateFastRandom()&0xffff);

	call	?GenerateFastRandom@@YAJXZ		; GenerateFastRandom
	and	eax, 65535				; 0000ffffH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _x$[ebp], xmm0

; 153  : 	return( x / 65535.0f);

	movss	xmm0, DWORD PTR _x$[ebp]
	divss	xmm0, DWORD PTR __real@477fff00
	movss	DWORD PTR tv72[ebp], xmm0
	fld	DWORD PTR tv72[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PRANDFloatPos@@YAMXZ ENDP				; PRANDFloatPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?PRANDFloat@@YAMXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_x$ = -4						; size = 4
?PRANDFloat@@YAMXZ PROC					; PRANDFloat, COMDAT

; 143  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 144  : //	return NRAND;
; 145  : 	float	x=	(float)(GenerateFastRandom()&0xffff);

	call	?GenerateFastRandom@@YAJXZ		; GenerateFastRandom
	and	eax, 65535				; 0000ffffH
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _x$[ebp], xmm0

; 146  : 	return( 1 - 2 * x / 65535.0f);

	movss	xmm0, DWORD PTR __real@40000000
	mulss	xmm0, DWORD PTR _x$[ebp]
	divss	xmm0, DWORD PTR __real@477fff00
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movss	DWORD PTR tv75[ebp], xmm1
	fld	DWORD PTR tv75[ebp]

; 147  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PRANDFloat@@YAMXZ ENDP					; PRANDFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\fakerand.h
;	COMDAT ?GenerateFastRandom@@YAJXZ
_TEXT	SEGMENT
_FastRandom$ = -4					; size = 4
?GenerateFastRandom@@YAJXZ PROC				; GenerateFastRandom, COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 109  : 	static long LastRandom;
; 110  : 	long	FastRandom;														// The Random Variable
; 111  : 	_asm {	
; 112  : 			push	edx

	push	edx

; 113  : 			push	eax

	push	eax

; 114  : 			RDTSC

	rdtsc

; 115  : 			add	DWORD PTR FastRandom,edx

	add	DWORD PTR _FastRandom$[ebp], edx

; 116  : 			xor	DWORD PTR FastRandom,eax

	xor	DWORD PTR _FastRandom$[ebp], eax

; 117  : 			mov	eax, DWORD PTR LastRandom

	mov	eax, DWORD PTR ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA ; `GenerateFastRandom'::`2'::LastRandom

; 118  : 			add	DWORD PTR FastRandom,eax

	add	DWORD PTR _FastRandom$[ebp], eax

; 119  : 			add	DWORD PTR LastRandom,edx

	add	DWORD PTR ?LastRandom@?1??GenerateFastRandom@@YAJXZ@4JA, edx ; `GenerateFastRandom'::`2'::LastRandom

; 120  : 			pop	eax

	pop	eax

; 121  : 			pop	edx

	pop	edx

; 122  : 	}
; 123  : 	return(FastRandom);

	mov	eax, DWORD PTR _FastRandom$[ebp]

; 124  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GenerateFastRandom@@YAJXZ ENDP				; GenerateFastRandom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?GetSunYaw@CTimeOfDay@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_yaw$ = -4						; size = 4
?GetSunYaw@CTimeOfDay@@QAEHXZ PROC			; CTimeOfDay::GetSunYaw, COMDAT
; _this$ = ecx

; 123  : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 124  : 		int yaw = ISunYaw;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+312]
	mov	DWORD PTR _yaw$[ebp], ecx

; 125  : 		if(ISunPitch > 4096) yaw += 8192;

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+328], 4096		; 00001000H
	jle	SHORT $LN1@GetSunYaw
	mov	eax, DWORD PTR _yaw$[ebp]
	add	eax, 8192				; 00002000H
	mov	DWORD PTR _yaw$[ebp], eax
$LN1@GetSunYaw:

; 126  : 		return yaw & 0x3fff;

	mov	eax, DWORD PTR _yaw$[ebp]
	and	eax, 16383				; 00003fffH

; 127  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSunYaw@CTimeOfDay@@QAEHXZ ENDP			; CTimeOfDay::GetSunYaw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?GetSunPitch@CTimeOfDay@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pitch$ = -4						; size = 4
?GetSunPitch@CTimeOfDay@@QAEHXZ PROC			; CTimeOfDay::GetSunPitch, COMDAT
; _this$ = ecx

; 116  : 	{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 117  : 		int pitch = ISunPitch;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR _pitch$[ebp], ecx

; 118  : 		if(pitch > 4096) pitch = 8192 - pitch;

	cmp	DWORD PTR _pitch$[ebp], 4096		; 00001000H
	jle	SHORT $LN1@GetSunPitc
	mov	edx, 8192				; 00002000H
	sub	edx, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _pitch$[ebp], edx
$LN1@GetSunPitc:

; 119  : 		return pitch; 

	mov	eax, DWORD PTR _pitch$[ebp]

; 120  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSunPitch@CTimeOfDay@@QAEHXZ ENDP			; CTimeOfDay::GetSunPitch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?GetDiffuseValue@CTimeOfDay@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDiffuseValue@CTimeOfDay@@QAEMXZ PROC		; CTimeOfDay::GetDiffuseValue, COMDAT
; _this$ = ecx

; 106  : 	float GetDiffuseValue()						{ return Diffuse; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+224]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDiffuseValue@CTimeOfDay@@QAEMXZ ENDP		; CTimeOfDay::GetDiffuseValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rgb$ = 8						; size = 4
?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z PROC ; CTimeOfDay::GetTextureLightingColor, COMDAT
; _this$ = ecx

; 94   : 	void GetTextureLightingColor(Tcolor *rgb)	{ *rgb = TextureLighting; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 196				; 000000c4H
	mov	ecx, DWORD PTR _rgb$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTextureLightingColor@CTimeOfDay@@QAEXPAUTcolor@@@Z ENDP ; CTimeOfDay::GetTextureLightingColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tod.h
;	COMDAT ?SetScaleFactor@CTimeOfDay@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_factor$ = 8						; size = 4
?SetScaleFactor@CTimeOfDay@@QAEXM@Z PROC		; CTimeOfDay::SetScaleFactor, COMDAT
; _this$ = ecx

; 70   : 	void	SetScaleFactor(float factor)			{ scaleFactor = factor; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _factor$[ebp]
	movss	DWORD PTR [eax+336], xmm0
	mov	esp, ebp
	pop	ebp
	ret	4
?SetScaleFactor@CTimeOfDay@@QAEXM@Z ENDP		; CTimeOfDay::SetScaleFactor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?GetVerticalClipFlags@@YAKMM@Z
_TEXT	SEGMENT
tv73 = -4						; size = 4
_y$ = 8							; size = 4
_z$ = 12						; size = 4
?GetVerticalClipFlags@@YAKMM@Z PROC			; GetVerticalClipFlags, COMDAT

; 187  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 188  : 	if ( fabs(y) > z ) {

	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR tv73[ebp]
	comiss	xmm0, DWORD PTR _z$[ebp]
	jbe	SHORT $LN1@GetVertica

; 189  : 		if ( y > z ) {

	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR _z$[ebp]
	jbe	SHORT $LN2@GetVertica

; 190  : 			return CLIP_BOTTOM;

	mov	eax, 8
	jmp	SHORT $LN4@GetVertica

; 191  : 		} else {

	jmp	SHORT $LN1@GetVertica
$LN2@GetVertica:

; 192  : 			return CLIP_TOP;

	mov	eax, 4
	jmp	SHORT $LN4@GetVertica
$LN1@GetVertica:

; 193  : 		}
; 194  : 	}
; 195  : 	return ON_SCREEN;

	xor	eax, eax
$LN4@GetVertica:

; 196  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetVerticalClipFlags@@YAKMM@Z ENDP			; GetVerticalClipFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?GetHorizontalClipFlags@@YAKMM@Z
_TEXT	SEGMENT
tv73 = -4						; size = 4
_x$ = 8							; size = 4
_z$ = 12						; size = 4
?GetHorizontalClipFlags@@YAKMM@Z PROC			; GetHorizontalClipFlags, COMDAT

; 175  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 176  : 	if ( fabs(x) > z ) {

	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?fabs@@YAMM@Z				; fabs
	add	esp, 4
	fstp	DWORD PTR tv73[ebp]
	movss	xmm0, DWORD PTR tv73[ebp]
	comiss	xmm0, DWORD PTR _z$[ebp]
	jbe	SHORT $LN1@GetHorizon

; 177  : 		if ( x > z ) {

	movss	xmm0, DWORD PTR _x$[ebp]
	comiss	xmm0, DWORD PTR _z$[ebp]
	jbe	SHORT $LN2@GetHorizon

; 178  : 			return CLIP_RIGHT;

	mov	eax, 2
	jmp	SHORT $LN4@GetHorizon

; 179  : 		} else {

	jmp	SHORT $LN1@GetHorizon
$LN2@GetHorizon:

; 180  : 			return CLIP_LEFT;

	mov	eax, 1
	jmp	SHORT $LN4@GetHorizon
$LN1@GetHorizon:

; 181  : 		}
; 182  : 	}
; 183  : 	return ON_SCREEN;

	xor	eax, eax
$LN4@GetHorizon:

; 184  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetHorizontalClipFlags@@YAKMM@Z ENDP			; GetHorizontalClipFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\render3d.h
;	COMDAT ?GetRangeClipFlags@@YAKMM@Z
_TEXT	SEGMENT
_z$ = 8							; size = 4
___formal$ = 12						; size = 4
?GetRangeClipFlags@@YAKMM@Z PROC			; GetRangeClipFlags, COMDAT

; 164  : {

	push	ebp
	mov	ebp, esp

; 165  : 	if ( z < NEAR_CLIP ) {

	movss	xmm0, DWORD PTR _NEAR_CLIP
	comiss	xmm0, DWORD PTR _z$[ebp]
	jbe	SHORT $LN1@GetRangeCl

; 166  : 		return CLIP_NEAR;

	mov	eax, 16					; 00000010H
	jmp	SHORT $LN2@GetRangeCl
$LN1@GetRangeCl:

; 167  : 	}
; 168  : //	if ( z > far_clip ) {
; 169  : //		return CLIP_FAR;
; 170  : //	}
; 171  : 	return ON_SCREEN;

	xor	eax, eax
$LN2@GetRangeCl:

; 172  : }

	pop	ebp
	ret	0
?GetRangeClipFlags@@YAKMM@Z ENDP			; GetRangeClipFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ?Z@TViewPoint@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Z@TViewPoint@@QAEMXZ PROC				; TViewPoint::Z, COMDAT
; _this$ = ecx

; 117  : 	float	Z( void )	{ return pos.z; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?Z@TViewPoint@@QAEMXZ ENDP				; TViewPoint::Z
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ?Y@TViewPoint@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Y@TViewPoint@@QAEMXZ PROC				; TViewPoint::Y, COMDAT
; _this$ = ecx

; 116  : 	float	Y( void )	{ return pos.y; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?Y@TViewPoint@@QAEMXZ ENDP				; TViewPoint::Y
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tviewpnt.h
;	COMDAT ?X@TViewPoint@@QAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?X@TViewPoint@@QAEMXZ PROC				; TViewPoint::X, COMDAT
; _this$ = ecx

; 115  : 	float	X( void )	{ return pos.x; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?X@TViewPoint@@QAEMXZ ENDP				; TViewPoint::X
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?ShadowsOn@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?ShadowsOn@PlayerOptionsClass@@QAEHXZ PROC		; PlayerOptionsClass::ShadowsOn, COMDAT
; _this$ = ecx

; 120  : 	int ShadowsOn(void)										{ return (DispFlags & DISP_SHADOWS) && TRUE; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8
	je	SHORT $LN3@ShadowsOn
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN3@ShadowsOn
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@ShadowsOn
$LN3@ShadowsOn:
	mov	DWORD PTR tv68[ebp], 0
$LN4@ShadowsOn:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ShadowsOn@PlayerOptionsClass@@QAEHXZ ENDP		; PlayerOptionsClass::ShadowsOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\grinline.h
;	COMDAT ?glConvertToRadian@@YAMH@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_deg$ = 8						; size = 4
?glConvertToRadian@@YAMH@Z PROC				; glConvertToRadian, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 62   : 	return (deg * (GLfloat) 0.000383495197f);

	cvtsi2ss xmm0, DWORD PTR _deg$[ebp]
	mulss	xmm0, DWORD PTR __real@39c90fdb
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 63   : }	/* glConvertToRadian */

	mov	esp, ebp
	pop	ebp
	ret	0
?glConvertToRadian@@YAMH@Z ENDP				; glConvertToRadian
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::operator->, COMDAT
; _this$ = ecx

; 50   : 	E *operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 52   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??C?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\timemgr.h
;	COMDAT ?GetClockTime@TimeManager@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClockTime@TimeManager@@QAEKXZ PROC			; TimeManager::GetClockTime, COMDAT
; _this$ = ecx

; 48   : 	DWORD	GetClockTime( void )		{ return currentTime; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClockTime@TimeManager@@QAEKXZ ENDP			; TimeManager::GetClockTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\fastmath.h
;	COMDAT ?F_I32@@YAKM@Z
_TEXT	SEGMENT
_r$ = -4						; size = 4
_x$ = 8							; size = 4
?F_I32@@YAKM@Z PROC					; F_I32, COMDAT

; 7    : {	DWORD	r;

	push	ebp
	mov	ebp, esp
	push	ecx

; 8    : 	_asm{ 
; 9    : 			fld		x

	fld	DWORD PTR _x$[ebp]

; 10   : 			fistp	r

	fistp	DWORD PTR _r$[ebp]

; 11   : 	}
; 12   : 	return r;

	mov	eax, DWORD PTR _r$[ebp]

; 13   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?F_I32@@YAKM@Z ENDP					; F_I32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\graphics\include\tex.h
;	COMDAT ?TexHandle@Texture@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TexHandle@Texture@@QAEKXZ PROC				; Texture::TexHandle, COMDAT
; _this$ = ecx

; 60   : 	DWORD TexHandle() { return (DWORD) texHandle; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?TexHandle@Texture@@QAEKXZ ENDP				; Texture::TexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?FloatToInt32@@YAHM@Z PROC				; FloatToInt32

; 179  : {

	push	ebp
	mov	ebp, esp

; 180  : #if WIN32
; 181  :   __asm {
; 182  :     fld dword ptr [x];

	fld	DWORD PTR _x$[ebp]

; 183  :     fistp dword ptr [x];

	fistp	DWORD PTR _x$[ebp]

; 184  :     mov eax,dword ptr [x];

	mov	eax, DWORD PTR _x$[ebp]

; 185  :   }
; 186  : #else 
; 187  : 	return static_cast<int>(x);	
; 188  : #endif
; 189  : }

	pop	ebp
	ret	0
?FloatToInt32@@YAHM@Z ENDP				; FloatToInt32
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_a$ = 8							; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 4
?SinCos@@YAXMPAM0@Z PROC				; SinCos

; 134  : static inline void SinCos(const float a,float *s,float *c){

	push	ebp
	mov	ebp, esp
	push	ebx

; 135  : #if WIN32
; 136  : 	_asm {
; 137  : 		push edx;

	push	edx

; 138  : 		push ebx;

	push	ebx

; 139  : 		mov edx,s;

	mov	edx, DWORD PTR _s$[ebp]

; 140  : 		fld a;

	fld	DWORD PTR _a$[ebp]

; 141  : 		fsincos;

	fsincos

; 142  : 		mov ebx,c;

	mov	ebx, DWORD PTR _c$[ebp]

; 143  : 		fstp [dword ptr ebx];

	fstp	DWORD PTR [ebx]

; 144  : 		fstp [dword ptr edx];

	fstp	DWORD PTR [edx]

; 145  : 		pop ebx;

	pop	ebx

; 146  : 		pop edx;

	pop	edx

; 147  : 	}
; 148  : #else
; 149  : 	*s = sinf(a);
; 150  : 	*c = cosf(a);
; 151  : #endif
; 152  : }

	pop	ebx
	pop	ebp
	ret	0
?SinCos@@YAXMPAM0@Z ENDP				; SinCos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\mathlib\math.h
_TEXT	SEGMENT
_x$ = 8							; size = 4
?SqrtSSE@@YAMM@Z PROC					; SqrtSSE

; 91   : static inline float SqrtSSE(float x){ 

	push	ebp
	mov	ebp, esp

; 92   :     __asm 
; 93   :     { 
; 94   :         sqrtss xmm0,x 

	sqrtss	xmm0, DWORD PTR _x$[ebp]

; 95   :         movss x,xmm0 

	movss	XMMWORD PTR _x$[ebp], xmm0

; 96   :     } 
; 97   : 
; 98   :     return x; 

	fld	DWORD PTR _x$[ebp]

; 99   : } 

	pop	ebp
	ret	0
?SqrtSSE@@YAMM@Z ENDP					; SqrtSSE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 517  :         {return (fabsf(_X)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	pop	ebp
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv74 = -12						; size = 8
tv76 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 392  :         {return ((float)fabs((double)_X)); }

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	QWORD PTR tv74[ebp]
	movsd	xmm0, QWORD PTR tv74[ebp]
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv76[ebp], xmm0
	fld	DWORD PTR tv76[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
END
