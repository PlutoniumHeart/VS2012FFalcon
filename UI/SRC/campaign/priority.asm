; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\campaign\priority.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?PAKMap@@3PAVIMAGE_RSC@@A			; PAKMap
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
_BSS	SEGMENT
?PAKMap@@3PAVIMAGE_RSC@@A DD 01H DUP (?)		; PAKMap
_CurrentPAK DD	01H DUP (?)
_BlinkPAK DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	__tcsclen
PUBLIC	?GetObjTypePriority@TeamClass@@QAEEH@Z		; TeamClass::GetObjTypePriority
PUBLIC	?GetUnitTypePriority@TeamClass@@QAEEH@Z		; TeamClass::GetUnitTypePriority
PUBLIC	?GetMissionPriority@TeamClass@@QAEEH@Z		; TeamClass::GetMissionPriority
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?GetData@C_Resmgr@@QAEPADXZ			; C_Resmgr::GetData
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetSteps@C_Slider@@QAEJXZ			; C_Slider::GetSteps
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?InitPAKNames@@YAXXZ				; InitPAKNames
PUBLIC	?MakePAKPalette@@YAXXZ				; MakePAKPalette
PUBLIC	?InitPAKMap@@YAXXZ				; InitPAKMap
PUBLIC	?PositionSlider@@YAXJPAVC_Slider@@@Z		; PositionSlider
PUBLIC	?SliderValue@@YAJPAVC_Slider@@@Z		; SliderValue
PUBLIC	?ResetToDefaults@@YAXXZ				; ResetToDefaults
PUBLIC	?TurnOffHQButton@@YAXXZ				; TurnOffHQButton
PUBLIC	?TurnOnHQButton@@YAXXZ				; TurnOnHQButton
PUBLIC	?PriSliderCB@@YAXJFPAVC_Base@@@Z		; PriSliderCB
PUBLIC	?LoadTargetPriorities@@YAXXZ			; LoadTargetPriorities
PUBLIC	?LoadMissionPriorities@@YAXXZ			; LoadMissionPriorities
PUBLIC	?LoadPAKPriorities@@YAXXZ			; LoadPAKPriorities
PUBLIC	?LoadDefaultTargetPriorities@@YAXXZ		; LoadDefaultTargetPriorities
PUBLIC	?LoadDefaultMissionPriorities@@YAXXZ		; LoadDefaultMissionPriorities
PUBLIC	?LoadDefaultPAKPriorities@@YAXXZ		; LoadDefaultPAKPriorities
PUBLIC	?SaveTargetPriorities@@YAXXZ			; SaveTargetPriorities
PUBLIC	?SaveMissionPriorities@@YAXXZ			; SaveMissionPriorities
PUBLIC	?SavePAKPriorities@@YAXXZ			; SavePAKPriorities
PUBLIC	?SelectPAK@@YAXJJ@Z				; SelectPAK
PUBLIC	?PriorityTabsCB@@YAXJFPAVC_Base@@@Z		; PriorityTabsCB
PUBLIC	?UsePriotityCB@@YAXJFPAVC_Base@@@Z		; UsePriotityCB
PUBLIC	?ResetPriorityCB@@YAXJFPAVC_Base@@@Z		; ResetPriorityCB
PUBLIC	?CancelPriorityCB@@YAXJFPAVC_Base@@@Z		; CancelPriorityCB
PUBLIC	?OpenPriorityCB@@YAXJFPAVC_Base@@@Z		; OpenPriorityCB
PUBLIC	?MapSelectPAKCB@@YAXJFPAVC_Base@@@Z		; MapSelectPAKCB
PUBLIC	?SelectPAKCB@@YAXJFPAVC_Base@@@Z		; SelectPAKCB
PUBLIC	?SetPAKPriorityCB@@YAXJFPAVC_Base@@@Z		; SetPAKPriorityCB
PUBLIC	?SetCampaignPrioritiesCB@@YAXJFPAVC_Base@@@Z	; SetCampaignPrioritiesCB
PUBLIC	?PAKMapTimerCB@@YAHPAVC_Base@@@Z		; PAKMapTimerCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_08OMFFHDNP@?$CFs?5?$CF1ld?3?$AA@		; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_sprintf:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z:PROC	; VuListIterator::VuListIterator
EXTRN	??1VuListIterator@@UAE@XZ:PROC			; VuListIterator::~VuListIterator
EXTRN	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetFirst
EXTRN	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ:PROC ; VuListIterator::GetNext
EXTRN	__mbslen:PROC
EXTRN	?SetAllObjTypePriority@TeamClass@@QAEPAEXZ:PROC	; TeamClass::SetAllObjTypePriority
EXTRN	?SetAllUnitTypePriority@TeamClass@@QAEPAEXZ:PROC ; TeamClass::SetAllUnitTypePriority
EXTRN	?SetAllMissionPriority@TeamClass@@QAEPAEXZ:PROC	; TeamClass::SetAllMissionPriority
EXTRN	?SetObjTypePriority@TeamClass@@QAEXHE@Z:PROC	; TeamClass::SetObjTypePriority
EXTRN	?SetUnitTypePriority@TeamClass@@QAEXHE@Z:PROC	; TeamClass::SetUnitTypePriority
EXTRN	?SetMissionPriority@TeamClass@@QAEXHE@Z:PROC	; TeamClass::SetMissionPriority
EXTRN	?GetPOData@@YAPAUPrimaryObjectiveData@@PAVObjectiveClass@@@Z:PROC ; GetPOData
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?MakeCampMap@@YAPAEHPAEH@Z:PROC			; MakeCampMap
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?UI95_RGB24Bit@@YAGK@Z:PROC			; UI95_RGB24Bit
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z:PROC	; C_Bitmap::SetImage
EXTRN	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z:PROC	; C_ListBox::AddItem
EXTRN	?RemoveAllItems@C_ListBox@@QAEXXZ:PROC		; C_ListBox::RemoveAllItems
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z:PROC ; CreateOccupationMap
EXTRN	?SendPrimaryObjectiveList@@YAXE@Z:PROC		; SendPrimaryObjectiveList
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?DefaultObjtypePriority@@3PAY0CE@EA:BYTE	; DefaultObjtypePriority
EXTRN	?DefaultUnittypePriority@@3PAY0BE@EA:BYTE	; DefaultUnittypePriority
EXTRN	?DefaultMissionPriority@@3PAY0CJ@EA:BYTE	; DefaultMissionPriority
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?POList@@3PAVFalconPrivateOrderedList@@A:DWORD	; POList
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
	ALIGN	4

_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_PAKPriorities DW 0320H DUP (?)
_PAKPalette DW	065H DUP (?)
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08OMFFHDNP@?$CFs?5?$CF1ld?3?$AA@
CONST	SEGMENT
??_C@_08OMFFHDNP@?$CFs?5?$CF1ld?3?$AA@ DB '%s %1ld:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?SavePAKPriorities@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SavePAKPriorities@@YAXXZ$0
__unwindtable$?LoadDefaultPAKPriorities@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadDefaultPAKPriorities@@YAXXZ$0
__unwindtable$?LoadPAKPriorities@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPAKPriorities@@YAXXZ$0
__unwindtable$?ResetToDefaults@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ResetToDefaults@@YAXXZ$0
__unwindtable$?InitPAKNames@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitPAKNames@@YAXXZ$0
__ehfuncinfo$?SavePAKPriorities@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SavePAKPriorities@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadDefaultPAKPriorities@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadDefaultPAKPriorities@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadPAKPriorities@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadPAKPriorities@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?ResetToDefaults@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ResetToDefaults@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitPAKNames@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitPAKNames@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_Pal$ = -4						; size = 4
_me$ = 8						; size = 4
?PAKMapTimerCB@@YAHPAVC_Base@@@Z PROC			; PAKMapTimerCB

; 1304 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 1305 : 	WORD *Pal;
; 1306 : 	if(CurrentPAK)

	cmp	DWORD PTR _CurrentPAK, 0
	je	$LN4@PAKMapTime

; 1307 : 	{
; 1308 : 		me->SetUserNumber(0,(me->GetUserNumber(0)+1) & 0x03);

	push	0
	mov	ecx, DWORD PTR _me$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	add	eax, 1
	and	eax, 3
	push	eax
	push	0
	mov	ecx, DWORD PTR _me$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1309 : 		if(!me->GetUserNumber(0))

	push	0
	mov	ecx, DWORD PTR _me$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	jne	$LN4@PAKMapTime

; 1310 : 		{
; 1311 : 			Pal=(WORD*)(PAKMap->Owner->GetData() + PAKMap->Header->paletteoffset);

	mov	eax, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [eax+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	edx, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [edx+56]
	mov	DWORD PTR _Pal$[ebp], eax

; 1312 : 			BlinkPAK=static_cast<char>(-BlinkPAK);

	movsx	eax, BYTE PTR _BlinkPAK
	neg	eax
	mov	BYTE PTR _BlinkPAK, al

; 1313 : 			if(BlinkPAK < 0) // Flash BLACK

	movsx	ecx, BYTE PTR _BlinkPAK
	test	ecx, ecx
	jge	SHORT $LN2@PAKMapTime

; 1314 : 			{
; 1315 : 				Pal[CurrentPAK]=0;

	xor	edx, edx
	mov	eax, DWORD PTR _CurrentPAK
	mov	ecx, DWORD PTR _Pal$[ebp]
	mov	WORD PTR [ecx+eax*2], dx

; 1316 : 			}
; 1317 : 			else // Show Actual color

	jmp	SHORT $LN1@PAKMapTime
$LN2@PAKMapTime:

; 1318 : 			{
; 1319 : 				Pal[CurrentPAK]=PAKPalette[PAKPriorities[CurrentPAK][FalconLocalSession->GetTeam()][0]];

	mov	esi, DWORD PTR _CurrentPAK
	shl	esi, 5
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	lea	eax, DWORD PTR _PAKPriorities[esi+edx*4]
	mov	ecx, 2
	imul	ecx, 0
	movsx	edx, WORD PTR [eax+ecx]
	mov	eax, DWORD PTR _CurrentPAK
	mov	ecx, DWORD PTR _Pal$[ebp]
	mov	dx, WORD PTR _PAKPalette[edx*2]
	mov	WORD PTR [ecx+eax*2], dx
$LN1@PAKMapTime:

; 1320 : 			}
; 1321 : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN5@PAKMapTime
$LN4@PAKMapTime:

; 1322 : 		}
; 1323 : 	}
; 1324 : 	return(FALSE);

	xor	eax, eax
$LN5@PAKMapTime:

; 1325 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?PAKMapTimerCB@@YAHPAVC_Base@@@Z ENDP			; PAKMapTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_base$ = 16						; size = 4
?SetCampaignPrioritiesCB@@YAXJFPAVC_Base@@@Z PROC	; SetCampaignPrioritiesCB

; 1284 : {

	push	ebp
	mov	ebp, esp

; 1285 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SetCampaig

; 1286 : 		return;

	jmp	SHORT $LN4@SetCampaig
$LN3@SetCampaig:

; 1287 : 
; 1288 : 	if(base->GetState())

	mov	ecx, DWORD PTR _base$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _base$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN1@SetCampaig

; 1289 : 	{
; 1290 : 		LoadDefaultTargetPriorities();

	call	?LoadDefaultTargetPriorities@@YAXXZ	; LoadDefaultTargetPriorities

; 1291 : 		LoadDefaultMissionPriorities();

	call	?LoadDefaultMissionPriorities@@YAXXZ	; LoadDefaultMissionPriorities

; 1292 : 		LoadDefaultPAKPriorities();

	call	?LoadDefaultPAKPriorities@@YAXXZ	; LoadDefaultPAKPriorities

; 1293 : 
; 1294 : 		SelectPAK(CurrentPAK,FalconLocalSession->GetTeam());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _CurrentPAK
	push	eax
	call	?SelectPAK@@YAXJJ@Z			; SelectPAK
	add	esp, 8
$LN1@SetCampaig:

; 1295 : 	}
; 1296 : 	else
; 1297 : 	{
; 1298 : 
; 1299 : 	}
; 1300 : 	base->Refresh();

	mov	ecx, DWORD PTR _base$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _base$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@SetCampaig:

; 1301 : }

	pop	ebp
	ret	0
?SetCampaignPrioritiesCB@@YAXJFPAVC_Base@@@Z ENDP	; SetCampaignPrioritiesCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_value$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetPAKPriorityCB@@YAXJFPAVC_Base@@@Z PROC		; SetPAKPriorityCB

; 1269 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 1270 : 	long value;
; 1271 : 
; 1272 : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN1@SetPAKPrio

; 1273 : 		return;

	jmp	$LN2@SetPAKPrio
$LN1@SetPAKPrio:

; 1274 : 
; 1275 : 	value=100 - SliderValue((C_Slider*)control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	edx, 100				; 00000064H
	sub	edx, eax
	mov	DWORD PTR _value$[ebp], edx

; 1276 : 
; 1277 : 	PAKPriorities[CurrentPAK][FalconLocalSession->GetTeam()][0]=static_cast<short>(value);

	mov	esi, DWORD PTR _CurrentPAK
	shl	esi, 5
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	lea	ecx, DWORD PTR _PAKPriorities[esi+eax*4]
	mov	edx, 2
	imul	edx, 0
	mov	ax, WORD PTR _value$[ebp]
	mov	WORD PTR [ecx+edx], ax

; 1278 : 	PAKPriorities[CurrentPAK][FalconLocalSession->GetTeam()][1]=1; // Mark as changed

	mov	esi, DWORD PTR _CurrentPAK
	shl	esi, 5
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	lea	edx, DWORD PTR _PAKPriorities[esi+ecx*4]
	mov	eax, 2
	shl	eax, 0
	mov	ecx, 1
	mov	WORD PTR [edx+eax], cx

; 1279 : 
; 1280 : 	TurnOffHQButton();

	call	?TurnOffHQButton@@YAXXZ			; TurnOffHQButton
$LN2@SetPAKPrio:

; 1281 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SetPAKPriorityCB@@YAXJFPAVC_Base@@@Z ENDP		; SetPAKPriorityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_PAKID$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectPAKCB@@YAXJFPAVC_Base@@@Z PROC			; SelectPAKCB

; 1257 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1258 : 	long PAKID;
; 1259 : 
; 1260 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@SelectPAKC

; 1261 : 		return;

	jmp	SHORT $LN3@SelectPAKC
$LN2@SelectPAKC:

; 1262 : 
; 1263 : 	PAKID=((C_ListBox*)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _PAKID$[ebp], eax

; 1264 : 	if(PAKID)

	cmp	DWORD PTR _PAKID$[ebp], 0
	je	SHORT $LN3@SelectPAKC

; 1265 : 		SelectPAK(PAKID,FalconLocalSession->GetTeam());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _PAKID$[ebp]
	push	edx
	call	?SelectPAK@@YAXJJ@Z			; SelectPAK
	add	esp, 8
$LN3@SelectPAKC:

; 1266 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectPAKCB@@YAXJFPAVC_Base@@@Z ENDP			; SelectPAKCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_overlay$ = -24						; size = 4
_PAKID$ = -20						; size = 4
_x$ = -16						; size = 4
_y$ = -12						; size = 4
_btn$ = -8						; size = 4
_lbox$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?MapSelectPAKCB@@YAXJFPAVC_Base@@@Z PROC		; MapSelectPAKCB

; 1222 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1223 : 	C_Button *btn;
; 1224 : 	C_ListBox *lbox;
; 1225 : 	long x,y,PAKID;
; 1226 : 	char *overlay;
; 1227 : 
; 1228 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN7@MapSelectP

; 1229 : 		return;

	jmp	$LN8@MapSelectP
$LN7@MapSelectP:

; 1230 : 
; 1231 : 	if(!control || !PAKMap)

	cmp	DWORD PTR _control$[ebp], 0
	je	SHORT $LN5@MapSelectP
	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	jne	SHORT $LN6@MapSelectP
$LN5@MapSelectP:

; 1232 : 		return;

	jmp	$LN8@MapSelectP
$LN6@MapSelectP:

; 1233 : 
; 1234 : 	btn=(C_Button*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _btn$[ebp], ecx

; 1235 : 	x=btn->GetRelX();

	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	mov	DWORD PTR _x$[ebp], eax

; 1236 : 	y=btn->GetRelY();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	mov	DWORD PTR _y$[ebp], eax

; 1237 : 	if(x < 0 || x >= TheCampaign.TheaterSizeX/PAK_MAP_RATIO || y < 0 || y >= TheCampaign.TheaterSizeY/PAK_MAP_RATIO)

	cmp	DWORD PTR _x$[ebp], 0
	jl	SHORT $LN3@MapSelectP
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN3@MapSelectP
	cmp	DWORD PTR _y$[ebp], 0
	jl	SHORT $LN3@MapSelectP
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	cmp	DWORD PTR _y$[ebp], eax
	jl	SHORT $LN4@MapSelectP
$LN3@MapSelectP:

; 1238 : 		return;

	jmp	$LN8@MapSelectP
$LN4@MapSelectP:

; 1239 : 
; 1240 : 	overlay=PAKMap->Owner->GetData();

	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	mov	DWORD PTR _overlay$[ebp], eax

; 1241 : 
; 1242 : 	PAKID=overlay[y * TheCampaign.TheaterSizeX/PAK_MAP_RATIO + x];

	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	mov	eax, edx
	imul	eax, DWORD PTR _y$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _overlay$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	DWORD PTR _PAKID$[ebp], edx

; 1243 : 	if(PAKID)

	cmp	DWORD PTR _PAKID$[ebp], 0
	je	SHORT $LN8@MapSelectP

; 1244 : 	{
; 1245 : 		SelectPAK(PAKID,FalconLocalSession->GetTeam());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _PAKID$[ebp]
	push	ecx
	call	?SelectPAK@@YAXJJ@Z			; SelectPAK
	add	esp, 8

; 1246 : 		lbox=(C_ListBox*)control->Parent_->FindControl(PAK_TITLE);

	push	6350					; 000018ceH
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1247 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN8@MapSelectP

; 1248 : 		{
; 1249 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1250 : 			lbox->SetValue(PAKID);

	mov	ecx, DWORD PTR _PAKID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1251 : 			lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN8@MapSelectP:

; 1252 : 		}
; 1253 : 	}
; 1254 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapSelectPAKCB@@YAXJFPAVC_Base@@@Z ENDP		; MapSelectPAKCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
_lbox$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenPriorityCB@@YAXJFPAVC_Base@@@Z PROC		; OpenPriorityCB

; 1170 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1171 : 	C_Window *win;
; 1172 : 	C_Button *btn;
; 1173 : 	C_ListBox *lbox;
; 1174 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@OpenPriori

; 1175 : 		return;

	jmp	$LN7@OpenPriori
$LN6@OpenPriori:

; 1176 : 
; 1177 : 	InitPAKMap();

	call	?InitPAKMap@@YAXXZ			; InitPAKMap

; 1178 : 
; 1179 : 	LoadTargetPriorities();

	call	?LoadTargetPriorities@@YAXXZ		; LoadTargetPriorities

; 1180 : 	LoadMissionPriorities();

	call	?LoadMissionPriorities@@YAXXZ		; LoadMissionPriorities

; 1181 : 	LoadPAKPriorities();

	call	?LoadPAKPriorities@@YAXXZ		; LoadPAKPriorities

; 1182 : 
; 1183 : 	SelectPAK(1,FalconLocalSession->GetTeam());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	push	ecx
	push	1
	call	?SelectPAK@@YAXJJ@Z			; SelectPAK
	add	esp, 8

; 1184 : 
; 1185 : 	// Init window... make sure proper stuff is visible or hidden
; 1186 : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1187 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN5@OpenPriori

; 1188 : 	{
; 1189 : 		lbox=(C_ListBox*)win->FindControl(PAK_TITLE);

	push	6350					; 000018ceH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1190 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@OpenPriori

; 1191 : 		{
; 1192 : 			lbox->Refresh();

	mov	edx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1193 : 			lbox->SetValue(1);

	push	1
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1194 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@OpenPriori:

; 1195 : 		}
; 1196 : 		btn=(C_Button*)win->FindControl(TARGET_PRIORITIES);

	push	6322					; 000018b2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1197 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@OpenPriori

; 1198 : 		{
; 1199 : 			btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1200 : 			PriorityTabsCB(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?PriorityTabsCB@@YAXJFPAVC_Base@@@Z	; PriorityTabsCB
	add	esp, 12					; 0000000cH

; 1201 : 			btn->Refresh();

	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN3@OpenPriori:

; 1202 : 		}
; 1203 : 		btn=(C_Button*)win->FindControl(MISSION_PRIORITIES);

	push	6339					; 000018c3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1204 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@OpenPriori

; 1205 : 		{
; 1206 : 			btn->SetState(0);

	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1207 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@OpenPriori:

; 1208 : 		}
; 1209 : 		btn=(C_Button*)win->FindControl(PAK_PRIORITIES);

	push	6348					; 000018ccH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1210 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@OpenPriori

; 1211 : 		{
; 1212 : 			btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1213 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@OpenPriori:

; 1214 : 		}
; 1215 : 	}
; 1216 : 	// Display window
; 1217 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN7@OpenPriori:

; 1218 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenPriorityCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenPriorityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CancelPriorityCB@@YAXJFPAVC_Base@@@Z PROC		; CancelPriorityCB

; 1162 : {

	push	ebp
	mov	ebp, esp

; 1163 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CancelPrio

; 1164 : 		return;

	jmp	SHORT $LN2@CancelPrio
$LN1@CancelPrio:

; 1165 : 
; 1166 : 	CloseWindowCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@CancelPrio:

; 1167 : }

	pop	ebp
	ret	0
?CancelPriorityCB@@YAXJFPAVC_Base@@@Z ENDP		; CancelPriorityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_lbox$ = -8						; size = 4
_PAKID$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ResetPriorityCB@@YAXJFPAVC_Base@@@Z PROC		; ResetPriorityCB

; 1137 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1138 : 	long PAKID;
; 1139 : 	C_ListBox *lbox;
; 1140 : 
; 1141 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@ResetPrior

; 1142 : 		return;

	jmp	SHORT $LN5@ResetPrior
$LN4@ResetPrior:

; 1143 : 
; 1144 : // Kevin TODO: Reset priorities to those set by the campaign
; 1145 : 
; 1146 : 	LoadTargetPriorities();

	call	?LoadTargetPriorities@@YAXXZ		; LoadTargetPriorities

; 1147 : 	LoadMissionPriorities();

	call	?LoadMissionPriorities@@YAXXZ		; LoadMissionPriorities

; 1148 : 	LoadPAKPriorities();

	call	?LoadPAKPriorities@@YAXXZ		; LoadPAKPriorities

; 1149 : 
; 1150 : 	lbox=(C_ListBox*)control->Parent_->FindControl(PAK_TITLE);

	push	6350					; 000018ceH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1151 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN5@ResetPrior

; 1152 : 	{
; 1153 : 		PAKID=((C_ListBox*)lbox)->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR _PAKID$[ebp], eax

; 1154 : 		if(!PAKID)

	cmp	DWORD PTR _PAKID$[ebp], 0
	jne	SHORT $LN2@ResetPrior

; 1155 : 			PAKID=1;

	mov	DWORD PTR _PAKID$[ebp], 1
$LN2@ResetPrior:

; 1156 : 		if(PAKID)

	cmp	DWORD PTR _PAKID$[ebp], 0
	je	SHORT $LN5@ResetPrior

; 1157 : 			SelectPAK(PAKID,FalconLocalSession->GetTeam());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _PAKID$[ebp]
	push	eax
	call	?SelectPAK@@YAXJJ@Z			; SelectPAK
	add	esp, 8
$LN5@ResetPrior:

; 1158 : 	}
; 1159 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetPriorityCB@@YAXJFPAVC_Base@@@Z ENDP		; ResetPriorityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_btn$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?UsePriotityCB@@YAXJFPAVC_Base@@@Z PROC			; UsePriotityCB

; 1118 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1119 : 	C_Button *btn;
; 1120 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@UsePriotit

; 1121 : 		return;

	jmp	SHORT $LN4@UsePriotit
$LN3@UsePriotit:

; 1122 : 
; 1123 : 	btn=(C_Button*)control->Parent_->FindControl(HQ_FLAG);

	push	6354					; 000018d2H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1124 : 	if(btn && !btn->GetState())

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@UsePriotit
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	jne	SHORT $LN2@UsePriotit

; 1125 : 	{
; 1126 : 		SaveTargetPriorities();

	call	?SaveTargetPriorities@@YAXXZ		; SaveTargetPriorities

; 1127 : 		SaveMissionPriorities();

	call	?SaveMissionPriorities@@YAXXZ		; SaveMissionPriorities

; 1128 : 		SavePAKPriorities();

	call	?SavePAKPriorities@@YAXXZ		; SavePAKPriorities

; 1129 : 	}
; 1130 : 	else

	jmp	SHORT $LN1@UsePriotit
$LN2@UsePriotit:

; 1131 : 		ResetToDefaults();

	call	?ResetToDefaults@@YAXXZ			; ResetToDefaults
$LN1@UsePriotit:

; 1132 : 
; 1133 : 	CloseWindowCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN4@UsePriotit:

; 1134 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UsePriotityCB@@YAXJFPAVC_Base@@@Z ENDP			; UsePriotityCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?PriorityTabsCB@@YAXJFPAVC_Base@@@Z PROC		; PriorityTabsCB

; 1106 : {

	push	ebp
	mov	ebp, esp

; 1107 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@PriorityTa

; 1108 : 		return;

	jmp	SHORT $LN2@PriorityTa
$LN1@PriorityTa:

; 1109 : 
; 1110 : 	control->Parent_->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1111 : 	control->Parent_->HideCluster(control->GetUserNumber(2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1112 : 	control->Parent_->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1113 : 
; 1114 : 	control->Parent_->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN2@PriorityTa:

; 1115 : }

	pop	ebp
	ret	0
?PriorityTabsCB@@YAXJFPAVC_Base@@@Z ENDP		; PriorityTabsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_Leave$ = -16						; size = 4
_Pal$ = -12						; size = 4
_sldr$ = -8						; size = 4
_win$ = -4						; size = 4
_PAKID$ = 8						; size = 4
_TeamID$ = 12						; size = 4
?SelectPAK@@YAXJJ@Z PROC				; SelectPAK

; 1075 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 1076 : 	C_Window *win;
; 1077 : 	C_Slider *sldr;
; 1078 : 	WORD *Pal;
; 1079 : 	F4CSECTIONHANDLE *Leave;
; 1080 : 
; 1081 : 	if(PAKID >= MAX_PAKS || TeamID >= NUM_TEAMS)

	cmp	DWORD PTR _PAKID$[ebp], 50		; 00000032H
	jge	SHORT $LN4@SelectPAK
	cmp	DWORD PTR _TeamID$[ebp], 8
	jl	SHORT $LN5@SelectPAK
$LN4@SelectPAK:

; 1082 : 		return;

	jmp	$LN6@SelectPAK
$LN5@SelectPAK:

; 1083 : 
; 1084 : 
; 1085 : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1086 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@SelectPAK

; 1087 : 	{
; 1088 : 		Leave=UI_Enter(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1089 : 		if(BlinkPAK < 0) // restore before changing

	movsx	ecx, BYTE PTR _BlinkPAK
	test	ecx, ecx
	jge	SHORT $LN2@SelectPAK

; 1090 : 		{
; 1091 : 			Pal=(WORD*)(PAKMap->Owner->GetData() + PAKMap->Header->paletteoffset);

	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [edx+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	edx, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [edx+56]
	mov	DWORD PTR _Pal$[ebp], eax

; 1092 : 			Pal[CurrentPAK]=PAKPalette[PAKPriorities[CurrentPAK][FalconLocalSession->GetTeam()][0]];

	mov	esi, DWORD PTR _CurrentPAK
	shl	esi, 5
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	lea	ecx, DWORD PTR _PAKPriorities[esi+eax*4]
	mov	edx, 2
	imul	edx, 0
	movsx	eax, WORD PTR [ecx+edx]
	mov	ecx, DWORD PTR _CurrentPAK
	mov	edx, DWORD PTR _Pal$[ebp]
	mov	ax, WORD PTR _PAKPalette[eax*2]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@SelectPAK:

; 1093 : 		}
; 1094 : 		CurrentPAK=PAKID;

	mov	ecx, DWORD PTR _PAKID$[ebp]
	mov	DWORD PTR _CurrentPAK, ecx

; 1095 : 		BlinkPAK=static_cast<char>(CurrentPAK);

	mov	dl, BYTE PTR _CurrentPAK
	mov	BYTE PTR _BlinkPAK, dl

; 1096 : 		sldr=(C_Slider*)win->FindControl(PAK_SLIDER);

	push	6349					; 000018cdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1097 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN1@SelectPAK

; 1098 : 			PositionSlider(100 - PAKPriorities[PAKID][TeamID][0],sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PAKID$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _TeamID$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[ecx+edx*4]
	mov	ecx, 2
	imul	ecx, 0
	movsx	edx, WORD PTR [eax+ecx]
	mov	eax, 100				; 00000064H
	sub	eax, edx
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN1@SelectPAK:

; 1099 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN6@SelectPAK:

; 1100 : 	}
; 1101 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SelectPAK@@YAXJJ@Z ENDP				; SelectPAK
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_poit$ = -44						; size = 12
_o$ = -32						; size = 4
_idx$ = -28						; size = 4
_POD$ = -24						; size = 4
_i$ = -20						; size = 4
_teammask$2 = -13					; size = 1
__$EHRec$ = -12						; size = 12
?SavePAKPriorities@@YAXXZ PROC				; SavePAKPriorities

; 1035 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SavePAKPriorities@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1036 : 	long i,idx;
; 1037 : 	POData POD;
; 1038 : 
; 1039 : 	VuListIterator poit(POList);

	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	eax
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1040 : 	Objective o;
; 1041 : 
; 1042 : 	idx=1;

	mov	DWORD PTR _idx$[ebp], 1

; 1043 : 	o = (Objective) poit.GetFirst();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN5@SavePAKPri:

; 1044 : 	while(o)

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN4@SavePAKPri

; 1045 : 	{
; 1046 : 		POD=GetPOData(o);

	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	call	?GetPOData@@YAPAUPrimaryObjectiveData@@PAVObjectiveClass@@@Z ; GetPOData
	add	esp, 4
	mov	DWORD PTR _POD$[ebp], eax

; 1047 : 		if(POD)

	cmp	DWORD PTR _POD$[ebp], 0
	je	$LN3@SavePAKPri

; 1048 : 		{
; 1049 : 			// KCK: Technically, the player should only be able to modify priorities for his team
; 1050 : 			i = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	edx, al
	mov	DWORD PTR _i$[ebp], edx

; 1051 : 			if (i>0 && i<NUM_TEAMS && TeamInfo[i])

	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN3@SavePAKPri
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN3@SavePAKPri
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	je	SHORT $LN3@SavePAKPri

; 1052 : //			for(i=0;i<NUM_TEAMS;i++)
; 1053 : 			{
; 1054 : 				POD->player_priority[i]=PAKPriorities[idx][i][0];

	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[ecx+edx*4]
	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _POD$[ebp]
	mov	ax, WORD PTR [eax+ecx]
	mov	WORD PTR [esi+edx*2+56], ax

; 1055 : 				POD->flags |= GTMOBJ_PLAYER_SET_PRIORITY;

	mov	ecx, DWORD PTR _POD$[ebp]
	movzx	edx, BYTE PTR [ecx+72]
	or	edx, 1
	mov	eax, DWORD PTR _POD$[ebp]
	mov	BYTE PTR [eax+72], dl

; 1056 : 				PAKPriorities[idx][i][1]=0;

	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[ecx+edx*4]
	mov	ecx, 2
	shl	ecx, 0
	xor	edx, edx
	mov	WORD PTR [eax+ecx], dx
$LN3@SavePAKPri:

; 1057 : 			}
; 1058 : 		}
; 1059 : 
; 1060 : 		o = (Objective) poit.GetNext();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 1061 : 		idx++;

	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 1062 : 	}

	jmp	$LN5@SavePAKPri
$LN4@SavePAKPri:

; 1063 : 
; 1064 : 	// For multiplayer - send our new priorities
; 1065 : 	if (TRUE)		// isOnline()

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN1@SavePAKPri

; 1066 : 	{
; 1067 : 		uchar teammask;
; 1068 : 		teammask = static_cast<uchar>((1 << FalconLocalSession->GetTeam()));

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	mov	edx, 1
	shl	edx, cl
	mov	BYTE PTR _teammask$2[ebp], dl

; 1069 : 		SendPrimaryObjectiveList (teammask);

	movzx	eax, BYTE PTR _teammask$2[ebp]
	push	eax
	call	?SendPrimaryObjectiveList@@YAXE@Z	; SendPrimaryObjectiveList
	add	esp, 4
$LN1@SavePAKPri:

; 1070 : 	}
; 1071 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SavePAKPriorities@@YAXXZ$0:
	lea	ecx, DWORD PTR _poit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?SavePAKPriorities@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SavePAKPriorities@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SavePAKPriorities@@YAXXZ ENDP				; SavePAKPriorities
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_team$ = -12						; size = 4
_sldr$ = -8						; size = 4
_value$ = -1						; size = 1
?SaveMissionPriorities@@YAXXZ PROC			; SaveMissionPriorities

; 947  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 948  : 	C_Window *win;
; 949  : 	C_Slider *sldr;
; 950  : 	uchar value;
; 951  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 952  : 
; 953  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 954  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@SaveMissio

; 955  : 	{
; 956  : 		// Mission Types
; 957  : 		// OCA
; 958  : 		sldr=(C_Slider*)win->FindControl(MISSION_1);

	push	6340					; 000018c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 959  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@SaveMissio

; 960  : 			// TJL 10/26/03 Changed AMIS_SWEEP to AMIS_ESCORT.
; 961  :       // Cobra - 2/06 JG - Moved AMIS_ESCORT to Recon and changed to Escort.
; 962  : 		{
; 963  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 964  : 			TeamInfo[team]->SetMissionPriority(AMIS_OCASTRIKE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	13					; 0000000dH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN8@SaveMissio:

; 965  : 		}
; 966  : 		// SAM Suppression
; 967  : 		sldr=(C_Slider*)win->FindControl(MISSION_2);

	push	6341					; 000018c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 968  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@SaveMissio

; 969  : 		{
; 970  : 			value=static_cast<char>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 971  : 			TeamInfo[team]->SetMissionPriority(AMIS_SEADSTRIKE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	11					; 0000000bH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 972  : 			TeamInfo[team]->SetMissionPriority(AMIS_SEADESCORT, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN7@SaveMissio:

; 973  : 		}
; 974  : 		// Interdiction
; 975  : 		sldr=(C_Slider*)win->FindControl(MISSION_3);

	push	6342					; 000018c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 976  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@SaveMissio

; 977  : 		{
; 978  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 979  : 			TeamInfo[team]->SetMissionPriority(AMIS_SAD, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	23					; 00000017H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 980  : 			TeamInfo[team]->SetMissionPriority(AMIS_INT, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	24					; 00000018H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 981  : 			TeamInfo[team]->SetMissionPriority(AMIS_BAI, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	25					; 00000019H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN6@SaveMissio:

; 982  : 		}
; 983  : 		// CAS
; 984  : 		sldr=(C_Slider*)win->FindControl(MISSION_4);

	push	6343					; 000018c7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 985  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@SaveMissio

; 986  : 		{
; 987  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 988  : 			TeamInfo[team]->SetMissionPriority(AMIS_ONCALLCAS, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	20					; 00000014H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 989  : 			TeamInfo[team]->SetMissionPriority(AMIS_PRPLANCAS, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	21					; 00000015H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 990  : 			TeamInfo[team]->SetMissionPriority(AMIS_CAS, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN5@SaveMissio:

; 991  : 		}
; 992  : 		// Strategic Strikes
; 993  : 		sldr=(C_Slider*)win->FindControl(MISSION_5);

	push	6344					; 000018c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 994  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@SaveMissio

; 995  : 		{
; 996  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 997  : 			TeamInfo[team]->SetMissionPriority(AMIS_INTSTRIKE, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	14					; 0000000eH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 998  : 			TeamInfo[team]->SetMissionPriority(AMIS_STRIKE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	15					; 0000000fH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 999  : 			TeamInfo[team]->SetMissionPriority(AMIS_DEEPSTRIKE, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN4@SaveMissio:

; 1000 : 		}
; 1001 : 		// Anti shipping
; 1002 : 		sldr=(C_Slider*)win->FindControl(MISSION_6);

	push	6345					; 000018c9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1003 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN3@SaveMissio

; 1004 : 		{
; 1005 : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 1006 : 			TeamInfo[team]->SetMissionPriority(AMIS_ASW, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	35					; 00000023H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1007 : 			TeamInfo[team]->SetMissionPriority(AMIS_ASHIP, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	36					; 00000024H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN3@SaveMissio:

; 1008 : 		}
; 1009 : 		// DCA
; 1010 : 		sldr=(C_Slider*)win->FindControl(MISSION_7);

	push	6346					; 000018caH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1011 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN2@SaveMissio

; 1012 : 		{
; 1013 : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 1014 : 			TeamInfo[team]->SetMissionPriority(AMIS_BARCAP, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1015 : 			TeamInfo[team]->SetMissionPriority(AMIS_BARCAP2, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1016 : 			TeamInfo[team]->SetMissionPriority(AMIS_HAVCAP, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1017 : 			TeamInfo[team]->SetMissionPriority(AMIS_TARCAP, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1018 : 			TeamInfo[team]->SetMissionPriority(AMIS_RESCAP, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	5
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1019 : 			TeamInfo[team]->SetMissionPriority(AMIS_AMBUSHCAP, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	6
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1020 : 			TeamInfo[team]->SetMissionPriority(AMIS_INTERCEPT, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN2@SaveMissio:

; 1021 : 		}
; 1022 : 		// Recon   to become Escort    
; 1023 :     // Cobra - 2/06 JG - Moved  AMIS_ESCORT & AMIS_SEADESCORT to Recon and changed to Recon to Escort
; 1024 : 		sldr=(C_Slider*)win->FindControl(MISSION_8);

	push	6347					; 000018cbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1025 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@SaveMissio

; 1026 : 		{
; 1027 : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 1028 : 			TeamInfo[team]->SetMissionPriority(AMIS_ESCORT, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority

; 1029 : 			TeamInfo[team]->SetMissionPriority(AMIS_SEADESCORT, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	12					; 0000000cH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN10@SaveMissio:

; 1030 : 		}
; 1031 : 	}
; 1032 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveMissionPriorities@@YAXXZ ENDP			; SaveMissionPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_team$ = -12						; size = 4
_sldr$ = -8						; size = 4
_value$ = -1						; size = 1
?SaveTargetPriorities@@YAXXZ PROC			; SaveTargetPriorities

; 807  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 808  : 	C_Window *win;
; 809  : 	C_Slider *sldr;
; 810  : 	uchar value;
; 811  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 812  : 
; 813  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 814  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN17@SaveTarget

; 815  : 	{
; 816  : 		// Target Type priorities
; 817  : 		// Aircraft
; 818  : 		sldr=(C_Slider*)win->FindControl(TARGET_1);

	push	6323					; 000018b3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 819  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN15@SaveTarget

; 820  : 		{
; 821  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 822  : 			TeamInfo[team]->SetMissionPriority(AMIS_SWEEP, value); //TJL 10/26/03 Changed form Escort to Sweep

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	7
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetMissionPriority@TeamClass@@QAEXHE@Z	; TeamClass::SetMissionPriority
$LN15@SaveTarget:

; 823  : 		}
; 824  : 		// Air fields
; 825  : 		sldr=(C_Slider*)win->FindControl(TARGET_2);

	push	6324					; 000018b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 826  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN14@SaveTarget

; 827  : 		{
; 828  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 829  : 			TeamInfo[team]->SetObjTypePriority(TYPE_AIRBASE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN14@SaveTarget:

; 830  : 		}
; 831  : 		// Air defense to be changed to airstrip
; 832  :     // Cobra - 2/06 JG - Changed from Air defense to Airstrip
; 833  : 		sldr=(C_Slider*)win->FindControl(TARGET_3);

	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 834  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN13@SaveTarget

; 835  : 		{
; 836  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 837  : 			TeamInfo[team]->SetObjTypePriority(TYPE_AIRSTRIP, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	2
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN13@SaveTarget:

; 838  : 		}
; 839  : 		// Radar -to have CCC added and name changed to Radar/CCC
; 840  : 		// Cobra - 2/06 JG - moved CCC to radar and combined
; 841  : 		sldr=(C_Slider*)win->FindControl(TARGET_4);

	push	6326					; 000018b6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 842  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN12@SaveTarget

; 843  : 		{
; 844  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 845  : 			TeamInfo[team]->SetObjTypePriority(TYPE_RADAR, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	21					; 00000015H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 846  : 			TeamInfo[team]->SetObjTypePriority(TYPE_COM_CONTROL, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	9
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN12@SaveTarget:

; 847  : 		}
; 848  : 		// Army
; 849  : 		sldr=(C_Slider*)win->FindControl(TARGET_5);

	push	6327					; 000018b7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 850  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN11@SaveTarget

; 851  : 		{
; 852  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 853  : 			TeamInfo[team]->SetObjTypePriority(TYPE_ARMYBASE, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 854  : 			TeamInfo[team]->SetObjTypePriority(TYPE_FORTIFICATION, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN11@SaveTarget:

; 855  : 		}
; 856  : 		// CCC  to be changed to Power plant and refinery
; 857  : 		// Cobra - 2/06 JG - Moved CCC to radar and moved Power plant & refinery here
; 858  : 		sldr=(C_Slider*)win->FindControl(TARGET_6);

	push	6328					; 000018b8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 859  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@SaveTarget

; 860  : 		{
; 861  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 862  : 			TeamInfo[team]->SetObjTypePriority(TYPE_POWERPLANT, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 863  : 			TeamInfo[team]->SetObjTypePriority(TYPE_REFINERY, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	25					; 00000019H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN10@SaveTarget:

; 864  : 		}
; 865  : 		// Infrastructure
; 866  : 		sldr=(C_Slider*)win->FindControl(TARGET_7);

	push	6329					; 000018b9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 867  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN9@SaveTarget

; 868  : 		{
; 869  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 870  : 			TeamInfo[team]->SetObjTypePriority(TYPE_ROAD, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	26					; 0000001aH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 871  : 			TeamInfo[team]->SetObjTypePriority(TYPE_BRIDGE, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	6
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 872  : 			TeamInfo[team]->SetObjTypePriority(TYPE_RAIL_TERMINAL, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	23					; 00000017H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN9@SaveTarget:

; 873  : 			}
; 874  : 		// Logistics
; 875  : 		sldr=(C_Slider*)win->FindControl(TARGET_8);

	push	6330					; 000018baH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 876  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@SaveTarget

; 877  : 		{
; 878  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 879  : 			TeamInfo[team]->SetObjTypePriority(TYPE_DEPOT, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN8@SaveTarget:

; 880  : 		}
; 881  : 		// War production
; 882  : 		sldr=(C_Slider*)win->FindControl(TARGET_9);

	push	6331					; 000018bbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 883  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@SaveTarget

; 884  : 		{
; 885  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 886  : 			TeamInfo[team]->SetObjTypePriority(TYPE_CHEMICAL, value); 

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 887  : 			TeamInfo[team]->SetObjTypePriority(TYPE_FACTORY, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	11					; 0000000bH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority

; 888  : 			TeamInfo[team]->SetObjTypePriority(TYPE_NUCLEAR, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	17					; 00000011H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetObjTypePriority@TeamClass@@QAEXHE@Z	; TeamClass::SetObjTypePriority
$LN7@SaveTarget:

; 889  : 		}
; 890  : 		// Air Defense Units
; 891  : 		// 2/06 Moved Air defense units to this slot
; 892  : 		sldr=(C_Slider*)win->FindControl(TARGET_10);

	push	6332					; 000018bcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 893  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@SaveTarget

; 894  : 		{
; 895  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 896  : 			  TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_AIR_DEFENSE, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN6@SaveTarget:

; 897  : 		}
; 898  : 		// Armored Units
; 899  : 		sldr=(C_Slider*)win->FindControl(TARGET_11);

	push	6333					; 000018bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 900  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@SaveTarget

; 901  : 		{
; 902  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 903  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_ARMOR, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	3
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 904  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_ARMORED_CAV, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN5@SaveTarget:

; 905  : 		}
; 906  : 		// Infantry Units
; 907  : 		sldr=(C_Slider*)win->FindControl(TARGET_12);

	push	6334					; 000018beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 908  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@SaveTarget

; 909  : 		{
; 910  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 911  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_INFANTRY, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 912  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_MARINE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	8
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 913  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_MECHANIZED, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	9
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 914  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_AIRMOBILE, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 915  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_RESERVE, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	15					; 0000000fH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN4@SaveTarget:

; 916  : 		}
; 917  : 		// Artillery Units
; 918  : 		sldr=(C_Slider*)win->FindControl(TARGET_13);

	push	6335					; 000018bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 919  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN3@SaveTarget

; 920  : 		{
; 921  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 922  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_ROCKET, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	10					; 0000000aH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 923  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_SP_ARTILLERY, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 924  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_SS_MISSILE, value);

	movzx	eax, BYTE PTR _value$[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 925  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_TOWED_ARTILLERY, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	14					; 0000000eH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN3@SaveTarget:

; 926  : 		}
; 927  : 		// Support units
; 928  : 		sldr=(C_Slider*)win->FindControl(TARGET_14);

	push	6336					; 000018c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 929  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN2@SaveTarget

; 930  : 		{
; 931  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 932  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_ENGINEER, value);

	movzx	edx, BYTE PTR _value$[ebp]
	push	edx
	push	5
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority

; 933  : 			TeamInfo[team]->SetUnitTypePriority(STYPE_UNIT_HQ, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	6
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN2@SaveTarget:

; 934  : 		}
; 935  : 		// Naval Units
; 936  : 		sldr=(C_Slider*)win->FindControl(TARGET_15);

	push	6337					; 000018c1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 937  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN17@SaveTarget

; 938  : 		{
; 939  : 			value=static_cast<uchar>(SliderValue(sldr));

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	call	?SliderValue@@YAJPAVC_Slider@@@Z	; SliderValue
	add	esp, 4
	mov	BYTE PTR _value$[ebp], al

; 940  : 			TeamInfo[team]->SetUnitTypePriority(MAX_UNITTYPE-1, value);

	movzx	ecx, BYTE PTR _value$[ebp]
	push	ecx
	push	19					; 00000013H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetUnitTypePriority@TeamClass@@QAEXHE@Z ; TeamClass::SetUnitTypePriority
$LN17@SaveTarget:

; 941  : //			TeamInfo[team]->SetMissionPriority(AMIS_ASHIP, value);			
; 942  : 		}
; 943  : 	}
; 944  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveTargetPriorities@@YAXXZ ENDP			; SaveTargetPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_poit$ = -48						; size = 12
_Pal$ = -36						; size = 4
_POD$ = -32						; size = 4
_o$ = -28						; size = 4
_idx$ = -24						; size = 4
_i$ = -20						; size = 4
_teamid$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
?LoadDefaultPAKPriorities@@YAXXZ PROC			; LoadDefaultPAKPriorities

; 770  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadDefaultPAKPriorities@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 771  : 	long i,idx;
; 772  : 	POData POD;
; 773  : 	short teamid;
; 774  : 	WORD *Pal;
; 775  : 
; 776  : 	if(!PAKMap)

	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	jne	SHORT $LN7@LoadDefaul

; 777  : 		return;

	jmp	$LN8@LoadDefaul
$LN7@LoadDefaul:

; 778  : 
; 779  : 	teamid=FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ax, al
	mov	WORD PTR _teamid$[ebp], ax

; 780  : 	Pal=(WORD*)((char *)(PAKMap->Owner->GetData() + PAKMap->Header->paletteoffset));

	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [edx+8]
	add	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR _Pal$[ebp], eax

; 781  : 
; 782  : 	memset(PAKPriorities,0,sizeof(PAKPriorities));

	push	1600					; 00000640H
	push	0
	push	OFFSET _PAKPriorities
	call	_memset
	add	esp, 12					; 0000000cH

; 783  : 
; 784  : 	VuListIterator poit(POList);

	mov	edx, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	edx
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 785  : 	Objective o;
; 786  : 
; 787  : 	idx=1;

	mov	DWORD PTR _idx$[ebp], 1

; 788  : 	o = (Objective) poit.GetFirst();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN6@LoadDefaul:

; 789  : 	while(o)

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN5@LoadDefaul

; 790  : 	{
; 791  : 		POD=GetPOData(o);

	mov	eax, DWORD PTR _o$[ebp]
	push	eax
	call	?GetPOData@@YAPAUPrimaryObjectiveData@@PAVObjectiveClass@@@Z ; GetPOData
	add	esp, 4
	mov	DWORD PTR _POD$[ebp], eax

; 792  : 		if(POD)

	cmp	DWORD PTR _POD$[ebp], 0
	je	SHORT $LN4@LoadDefaul

; 793  : 		{
; 794  : 			for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@LoadDefaul
$LN2@LoadDefaul:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@LoadDefaul:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN1@LoadDefaul

; 795  : 				PAKPriorities[idx][i][0]=(uchar)POD->air_priority[i];

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _POD$[ebp]
	movzx	cx, BYTE PTR [eax+edx*2+40]
	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 5
	mov	eax, DWORD PTR _i$[ebp]
	lea	edx, DWORD PTR _PAKPriorities[edx+eax*4]
	mov	eax, 2
	imul	eax, 0
	mov	WORD PTR [edx+eax], cx
	jmp	SHORT $LN2@LoadDefaul
$LN1@LoadDefaul:

; 796  : 
; 797  : 			Pal[idx]=PAKPalette[PAKPriorities[idx][teamid][0]];

	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 5
	movsx	edx, WORD PTR _teamid$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[ecx+edx*4]
	mov	ecx, 2
	imul	ecx, 0
	movsx	edx, WORD PTR [eax+ecx]
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _Pal$[ebp]
	mov	dx, WORD PTR _PAKPalette[edx*2]
	mov	WORD PTR [ecx+eax*2], dx
$LN4@LoadDefaul:

; 798  : 		}
; 799  : 
; 800  : 		o = (Objective) poit.GetNext();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 801  : 		idx++;

	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 802  : 	}

	jmp	$LN6@LoadDefaul
$LN5@LoadDefaul:

; 803  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN8@LoadDefaul:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadDefaultPAKPriorities@@YAXXZ$0:
	lea	ecx, DWORD PTR _poit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?LoadDefaultPAKPriorities@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadDefaultPAKPriorities@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadDefaultPAKPriorities@@YAXXZ ENDP			; LoadDefaultPAKPriorities
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_value$ = -12						; size = 4
_team$ = -8						; size = 4
_sldr$ = -4						; size = 4
?LoadDefaultMissionPriorities@@YAXXZ PROC		; LoadDefaultMissionPriorities

; 674  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 675  : 	C_Window *win;
; 676  : 	C_Slider *sldr;
; 677  : 	long value;
; 678  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 679  : 
; 680  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 681  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@LoadDefaul

; 682  : 	{
; 683  : 		// Mission Types
; 684  : 		// OCA
; 685  : 		sldr=(C_Slider*)win->FindControl(MISSION_1);

	push	6340					; 000018c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 686  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@LoadDefaul

; 687  : 			// TJL 10/26/03 Changed AMIS_SWEEP to AMIS_ESCORT.
; 688  :       // Cobra - 2/06 JG - Moved AMIS_ESCORT to Recon and changed to Escort.
; 689  : 		{
; 690  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 691  : 			value = TeamInfo[team]->GetMissionPriority(AMIS_OCASTRIKE); 

	push	13					; 0000000dH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 692  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN8@LoadDefaul:

; 693  : 		}
; 694  : 		// SAM Suppression
; 695  : 		sldr=(C_Slider*)win->FindControl(MISSION_2);

	push	6341					; 000018c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 696  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@LoadDefaul

; 697  : 		{
; 698  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 699  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_SEADSTRIKE) +
; 700  : 						TeamInfo[team]->GetMissionPriority(AMIS_SEADESCORT) ) / 2;

	push	11					; 0000000bH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 701  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN7@LoadDefaul:

; 702  : 		}
; 703  : 		// Interdiction
; 704  : 		sldr=(C_Slider*)win->FindControl(MISSION_3);

	push	6342					; 000018c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 705  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@LoadDefaul

; 706  : 		{
; 707  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 708  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_SAD) +
; 709  : 						TeamInfo[team]->GetMissionPriority(AMIS_INT) +
; 710  : 						TeamInfo[team]->GetMissionPriority(AMIS_BAI)) / 3;

	push	23					; 00000017H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	24					; 00000018H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	push	25					; 00000019H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 711  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN6@LoadDefaul:

; 712  : 		}
; 713  : 		// CAS
; 714  : 		sldr=(C_Slider*)win->FindControl(MISSION_4);

	push	6343					; 000018c7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 715  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@LoadDefaul

; 716  : 		{
; 717  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 718  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ONCALLCAS) +
; 719  : 						TeamInfo[team]->GetMissionPriority(AMIS_PRPLANCAS) +
; 720  : 						TeamInfo[team]->GetMissionPriority(AMIS_CAS)) / 3;

	push	20					; 00000014H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	21					; 00000015H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 721  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN5@LoadDefaul:

; 722  : 		}
; 723  : 		// Strategic Strikes
; 724  : 		sldr=(C_Slider*)win->FindControl(MISSION_5);

	push	6344					; 000018c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 725  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@LoadDefaul

; 726  : 		{
; 727  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 728  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_INTSTRIKE) +
; 729  : 						TeamInfo[team]->GetMissionPriority(AMIS_STRIKE) +
; 730  : 						TeamInfo[team]->GetMissionPriority(AMIS_DEEPSTRIKE)) / 3;

	push	14					; 0000000eH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	15					; 0000000fH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 731  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN4@LoadDefaul:

; 732  : 		}
; 733  : 		// Anti shipping
; 734  : 		sldr=(C_Slider*)win->FindControl(MISSION_6);

	push	6345					; 000018c9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 735  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN3@LoadDefaul

; 736  : 		{
; 737  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 738  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ASW) +
; 739  : 						TeamInfo[team]->GetMissionPriority(AMIS_ASHIP)) / 2;

	push	35					; 00000023H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	36					; 00000024H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 740  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN3@LoadDefaul:

; 741  : 		}
; 742  : 		// DCA
; 743  : 		sldr=(C_Slider*)win->FindControl(MISSION_7);

	push	6346					; 000018caH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 744  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN2@LoadDefaul

; 745  : 		{
; 746  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 747  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_BARCAP) +
; 748  : 						TeamInfo[team]->GetMissionPriority(AMIS_BARCAP2) +
; 749  : 						TeamInfo[team]->GetMissionPriority(AMIS_HAVCAP) +
; 750  : 						TeamInfo[team]->GetMissionPriority(AMIS_TARCAP) +
; 751  : 						TeamInfo[team]->GetMissionPriority(AMIS_RESCAP) +
; 752  : 						TeamInfo[team]->GetMissionPriority(AMIS_AMBUSHCAP) +
; 753  : 						TeamInfo[team]->GetMissionPriority(AMIS_INTERCEPT)) / 7;

	push	1
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	2
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	3
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	push	4
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	add	esi, ecx
	push	5
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	6
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	push	9
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 7
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 754  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN2@LoadDefaul:

; 755  : 		}
; 756  : 		// Recon   to become Escort    
; 757  :     // Cobra - 2/06 JG - Moved  AMIS_ESCORT & AMIS_SEADESCORT to Recon and changed to Recon to Escort
; 758  : 		sldr=(C_Slider*)win->FindControl(MISSION_8);

	push	6347					; 000018cbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 759  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@LoadDefaul

; 760  : 		{
; 761  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 762  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ESCORT) +
; 763  : 					      TeamInfo[team]->GetMissionPriority(AMIS_SEADESCORT)) /2;

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	12					; 0000000cH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 764  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN10@LoadDefaul:

; 765  : 		}
; 766  : 	}
; 767  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadDefaultMissionPriorities@@YAXXZ ENDP		; LoadDefaultMissionPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_value$ = -12						; size = 4
_team$ = -8						; size = 4
_sldr$ = -4						; size = 4
?LoadDefaultTargetPriorities@@YAXXZ PROC		; LoadDefaultTargetPriorities

; 519  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 520  : 	C_Window *win;
; 521  : 	C_Slider *sldr;
; 522  : 	long value;
; 523  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 524  : 
; 525  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 526  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN17@LoadDefaul

; 527  : 	{
; 528  : 		// Target Type priorities
; 529  : 		// Aircraft
; 530  : 		sldr=(C_Slider*)win->FindControl(TARGET_1);

	push	6323					; 000018b3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 531  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN15@LoadDefaul

; 532  : 		{
; 533  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 534  : 			value = TeamInfo[team]->GetMissionPriority(AMIS_SWEEP); // TJL 10/26/03 Changed from Escort to Sweep

	push	7
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 535  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN15@LoadDefaul:

; 536  : 		}
; 537  : 		// Air fields
; 538  : 		sldr=(C_Slider*)win->FindControl(TARGET_2);

	push	6324					; 000018b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 539  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN14@LoadDefaul

; 540  : 		{
; 541  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 542  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_AIRBASE);

	push	1
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	mov	DWORD PTR _value$[ebp], ecx

; 543  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN14@LoadDefaul:

; 544  : 		}
; 545  : 		// Air defense to be changed to airstrip
; 546  :     // Cobra - 2/06 JG - Changed from Air defense to Airstrip
; 547  : 		sldr=(C_Slider*)win->FindControl(TARGET_3);

	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 548  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN13@LoadDefaul

; 549  : 		{
; 550  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 551  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_AIRSTRIP);

	push	2
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 552  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN13@LoadDefaul:

; 553  : 		}
; 554  : 		// Radar -to have CCC added and name changed to Radar/CCC
; 555  : 		// Cobra - 2/06 JG - moved CCC to radar and combined
; 556  : 		sldr=(C_Slider*)win->FindControl(TARGET_4);

	push	6326					; 000018b6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 557  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN12@LoadDefaul

; 558  : 		{
; 559  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 560  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_RADAR) + 
; 561  : 								TeamInfo[team]->GetObjTypePriority(TYPE_COM_CONTROL))/2;

	push	21					; 00000015H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	9
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 562  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN12@LoadDefaul:

; 563  : 		}
; 564  : 		// Army
; 565  : 		sldr=(C_Slider*)win->FindControl(TARGET_5);

	push	6327					; 000018b7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 566  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN11@LoadDefaul

; 567  : 		{
; 568  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 569  : 			value = (TeamInfo[team]->GetObjTypePriority(TYPE_ARMYBASE) + 
; 570  : 							 TeamInfo[team]->GetObjTypePriority(TYPE_FORTIFICATION))/2;

	push	3
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 571  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN11@LoadDefaul:

; 572  : 		}
; 573  : 		// CCC  to be changed to Power plant and refinery
; 574  : 		// Cobra - 2/06 JG - Moved CCC to radar and moved Power plant & refinery here
; 575  : 		sldr=(C_Slider*)win->FindControl(TARGET_6);

	push	6328					; 000018b8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 576  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@LoadDefaul

; 577  : 		{
; 578  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 579  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_POWERPLANT) + 
; 580  : 								TeamInfo[team]->GetObjTypePriority(TYPE_REFINERY))/2;

	push	20					; 00000014H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	25					; 00000019H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 581  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN10@LoadDefaul:

; 582  : 		}
; 583  : 		// Infrastructure
; 584  : 		sldr=(C_Slider*)win->FindControl(TARGET_7);

	push	6329					; 000018b9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 585  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN9@LoadDefaul

; 586  : 		{
; 587  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 588  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_ROAD) + 
; 589  : 								TeamInfo[team]->GetObjTypePriority(TYPE_BRIDGE) +
; 590  : 								TeamInfo[team]->GetObjTypePriority(TYPE_RAIL_TERMINAL)  ) / 3;

	push	26					; 0000001aH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	6
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	push	23					; 00000017H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 591  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN9@LoadDefaul:

; 592  : 		}
; 593  : 		// Logistics
; 594  : 		sldr=(C_Slider*)win->FindControl(TARGET_8);

	push	6330					; 000018baH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 595  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@LoadDefaul

; 596  : 		{
; 597  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 598  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_DEPOT);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 599  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN8@LoadDefaul:

; 600  : 		}
; 601  : 		// War production
; 602  : 		sldr=(C_Slider*)win->FindControl(TARGET_9);

	push	6331					; 000018bbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 603  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@LoadDefaul

; 604  : 		{
; 605  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 606  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_CHEMICAL) + 
; 607  : 						TeamInfo[team]->GetObjTypePriority(TYPE_FACTORY) +
; 608  : 						TeamInfo[team]->GetObjTypePriority(TYPE_NUCLEAR) ) / 3;

	push	7
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	push	17					; 00000011H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 609  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN7@LoadDefaul:

; 610  : 		}
; 611  : 		// Air Defense Units
; 612  : 		// 2/06 Moved Air defense units to this slot
; 613  : 		sldr=(C_Slider*)win->FindControl(TARGET_10);

	push	6332					; 000018bcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 614  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@LoadDefaul

; 615  : 		{
; 616  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 617  : 			value = TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_AIR_DEFENSE);

	push	1
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 618  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN6@LoadDefaul:

; 619  : 		}
; 620  : 		// Armored Units
; 621  : 		sldr=(C_Slider*)win->FindControl(TARGET_11);

	push	6333					; 000018bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 622  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@LoadDefaul

; 623  : 		{
; 624  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 625  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ARMOR) + 
; 626  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ARMORED_CAV) ) / 2;

	push	3
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	4
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 627  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN5@LoadDefaul:

; 628  : 		}
; 629  : 		// Infantry Units
; 630  : 		sldr=(C_Slider*)win->FindControl(TARGET_12);

	push	6334					; 000018beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 631  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN4@LoadDefaul

; 632  : 		{
; 633  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 634  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_INFANTRY) + 
; 635  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_MARINE) +
; 636  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_MECHANIZED) +
; 637  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_AIRMOBILE) +
; 638  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_RESERVE) ) / 5;

	push	7
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	8
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	push	9
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	ecx, al
	add	esi, ecx
	push	2
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	esi, eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 639  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN4@LoadDefaul:

; 640  : 		}
; 641  : 		// Artillery Units
; 642  : 		sldr=(C_Slider*)win->FindControl(TARGET_13);

	push	6335					; 000018bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 643  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN3@LoadDefaul

; 644  : 		{
; 645  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 646  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ROCKET) + 
; 647  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_SP_ARTILLERY) +
; 648  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_SS_MISSILE) +
; 649  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_TOWED_ARTILLERY) ) / 4;

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	11					; 0000000bH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	esi, eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	push	14					; 0000000eH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _value$[ebp], eax

; 650  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN3@LoadDefaul:

; 651  : 		}
; 652  : 		// Support units
; 653  : 		sldr=(C_Slider*)win->FindControl(TARGET_14);

	push	6336					; 000018c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 654  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN2@LoadDefaul

; 655  : 		{
; 656  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 657  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ENGINEER) + 
; 658  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_HQ) ) / 2;

	push	5
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	6
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 659  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN2@LoadDefaul:

; 660  : 		}
; 661  : 		// Naval Units
; 662  : 		sldr=(C_Slider*)win->FindControl(TARGET_15);

	push	6337					; 000018c1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 663  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN17@LoadDefaul

; 664  : 		{
; 665  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 666  : 			value = TeamInfo[team]->GetUnitTypePriority(MAX_UNITTYPE-1); 

	push	19					; 00000013H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 667  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN17@LoadDefaul:

; 668  : 		}
; 669  : 	}
; 670  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadDefaultTargetPriorities@@YAXXZ ENDP		; LoadDefaultTargetPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_poit$ = -52						; size = 12
_Pal$ = -40						; size = 4
_o$ = -36						; size = 4
_POD$ = -32						; size = 4
_idx$ = -28						; size = 4
_i$ = -24						; size = 4
_teamid$ = -20						; size = 2
_CampControl$ = -16					; size = 2
__$EHRec$ = -12						; size = 12
?LoadPAKPriorities@@YAXXZ PROC				; LoadPAKPriorities

; 464  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadPAKPriorities@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 465  : 	long i,idx;
; 466  : 	POData POD;
; 467  : 	short teamid;
; 468  : 	WORD *Pal;
; 469  : 	short CampControl=1;

	mov	eax, 1
	mov	WORD PTR _CampControl$[ebp], ax

; 470  : 
; 471  : 	if(!PAKMap)

	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	jne	SHORT $LN12@LoadPAKPri

; 472  : 		return;

	jmp	$LN13@LoadPAKPri
$LN12@LoadPAKPri:

; 473  : 
; 474  : 	teamid=FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	cx, al
	mov	WORD PTR _teamid$[ebp], cx

; 475  : 	Pal=(WORD*)((char *)(PAKMap->Owner->GetData() + PAKMap->Header->paletteoffset));

	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [edx+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	edx, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [edx+56]
	mov	DWORD PTR _Pal$[ebp], eax

; 476  : 
; 477  : 	memset(PAKPriorities,0,sizeof(PAKPriorities));

	push	1600					; 00000640H
	push	0
	push	OFFSET _PAKPriorities
	call	_memset
	add	esp, 12					; 0000000cH

; 478  : 
; 479  : 	VuListIterator poit(POList);

	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	eax
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 480  : 	Objective o;
; 481  : 
; 482  : 	idx=1;

	mov	DWORD PTR _idx$[ebp], 1

; 483  : 	o = (Objective) poit.GetFirst();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN11@LoadPAKPri:

; 484  : 	while(o)

	cmp	DWORD PTR _o$[ebp], 0
	je	$LN10@LoadPAKPri

; 485  : 	{
; 486  : 		POD=GetPOData(o);

	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	call	?GetPOData@@YAPAUPrimaryObjectiveData@@PAVObjectiveClass@@@Z ; GetPOData
	add	esp, 4
	mov	DWORD PTR _POD$[ebp], eax

; 487  : 		if(POD)

	cmp	DWORD PTR _POD$[ebp], 0
	je	$LN9@LoadPAKPri

; 488  : 		{
; 489  : 			for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@LoadPAKPri
$LN7@LoadPAKPri:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN8@LoadPAKPri:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN6@LoadPAKPri

; 490  : 				{
; 491  : 				if (POD->player_priority[i] >= 0)

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _POD$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2+56]
	test	edx, edx
	jl	SHORT $LN5@LoadPAKPri

; 492  : 					{
; 493  : 					PAKPriorities[idx][i][0]=(uchar)POD->player_priority[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _POD$[ebp]
	movzx	dx, BYTE PTR [ecx+eax*2+56]
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[eax+ecx*4]
	mov	ecx, 2
	imul	ecx, 0
	mov	WORD PTR [eax+ecx], dx

; 494  : 					CampControl = 0;

	xor	edx, edx
	mov	WORD PTR _CampControl$[ebp], dx

; 495  : 					}
; 496  : 				else

	jmp	SHORT $LN4@LoadPAKPri
$LN5@LoadPAKPri:

; 497  : 					PAKPriorities[idx][i][0]=(uchar)POD->air_priority[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _POD$[ebp]
	movzx	dx, BYTE PTR [ecx+eax*2+40]
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR _PAKPriorities[eax+ecx*4]
	mov	ecx, 2
	imul	ecx, 0
	mov	WORD PTR [eax+ecx], dx
$LN4@LoadPAKPri:

; 498  : 				}

	jmp	SHORT $LN7@LoadPAKPri
$LN6@LoadPAKPri:

; 499  : 
; 500  : 			Pal[idx]=PAKPalette[PAKPriorities[idx][teamid][0]];

	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 5
	movsx	eax, WORD PTR _teamid$[ebp]
	lea	ecx, DWORD PTR _PAKPriorities[edx+eax*4]
	mov	edx, 2
	imul	edx, 0
	movsx	eax, WORD PTR [ecx+edx]
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	edx, DWORD PTR _Pal$[ebp]
	mov	ax, WORD PTR _PAKPalette[eax*2]
	mov	WORD PTR [edx+ecx*2], ax

; 501  : 
; 502  : 			if(CampControl && POD->flags & GTMOBJ_PLAYER_SET_PRIORITY)

	movsx	ecx, WORD PTR _CampControl$[ebp]
	test	ecx, ecx
	je	SHORT $LN9@LoadPAKPri
	mov	edx, DWORD PTR _POD$[ebp]
	movzx	eax, BYTE PTR [edx+72]
	and	eax, 1
	je	SHORT $LN9@LoadPAKPri

; 503  : 				CampControl=0;

	xor	ecx, ecx
	mov	WORD PTR _CampControl$[ebp], cx
$LN9@LoadPAKPri:

; 504  : 		}
; 505  : 
; 506  : 		o = (Objective) poit.GetNext();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 507  : 		idx++;

	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	mov	DWORD PTR _idx$[ebp], edx

; 508  : 	}

	jmp	$LN11@LoadPAKPri
$LN10@LoadPAKPri:

; 509  : 
; 510  : 	if(CampControl)

	movsx	eax, WORD PTR _CampControl$[ebp]
	test	eax, eax
	je	SHORT $LN2@LoadPAKPri

; 511  : 		TurnOnHQButton();

	call	?TurnOnHQButton@@YAXXZ			; TurnOnHQButton

; 512  : 	else

	jmp	SHORT $LN1@LoadPAKPri
$LN2@LoadPAKPri:

; 513  : 		TurnOffHQButton();

	call	?TurnOffHQButton@@YAXXZ			; TurnOffHQButton
$LN1@LoadPAKPri:

; 514  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
$LN13@LoadPAKPri:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadPAKPriorities@@YAXXZ$0:
	lea	ecx, DWORD PTR _poit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?LoadPAKPriorities@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadPAKPriorities@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadPAKPriorities@@YAXXZ ENDP				; LoadPAKPriorities
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_value$ = -12						; size = 4
_team$ = -8						; size = 4
_sldr$ = -4						; size = 4
?LoadMissionPriorities@@YAXXZ PROC			; LoadMissionPriorities

; 369  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 370  : 	C_Window *win;
; 371  : 	C_Slider *sldr;
; 372  : 	long value;
; 373  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 374  : 
; 375  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 376  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@LoadMissio

; 377  : 	{
; 378  : 		// Mission Types
; 379  : 		// OCA
; 380  : 		sldr=(C_Slider*)win->FindControl(MISSION_1);

	push	6340					; 000018c4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 381  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@LoadMissio

; 382  : 			// TJL 10/26/03 Changed AMIS_SWEEP to AMIS_ESCORT.
; 383  :       // Cobra - 2/06 JG - Moved AMIS_ESCORT to Recon and changed to Escort.
; 384  : 		{
; 385  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 386  : 			value = TeamInfo[team]->GetMissionPriority(AMIS_OCASTRIKE) ;

	push	13					; 0000000dH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 387  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN8@LoadMissio:

; 388  : 		}
; 389  : 		// SAM Suppression
; 390  : 		sldr=(C_Slider*)win->FindControl(MISSION_2);

	push	6341					; 000018c5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 391  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@LoadMissio

; 392  : 		{
; 393  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 394  : 			value = TeamInfo[team]->GetMissionPriority(AMIS_SEADSTRIKE);

	push	11					; 0000000bH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	mov	DWORD PTR _value$[ebp], ecx

; 395  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN7@LoadMissio:

; 396  : 		}
; 397  : 		// Interdiction
; 398  : 		sldr=(C_Slider*)win->FindControl(MISSION_3);

	push	6342					; 000018c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 399  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@LoadMissio

; 400  : 		{
; 401  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 402  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_SAD) +
; 403  : 								TeamInfo[team]->GetMissionPriority(AMIS_INT) +
; 404  : 								TeamInfo[team]->GetMissionPriority(AMIS_BAI)) / 3;

	push	23					; 00000017H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	24					; 00000018H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	25					; 00000019H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 405  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN6@LoadMissio:

; 406  : 		}
; 407  : 		// CAS
; 408  : 		sldr=(C_Slider*)win->FindControl(MISSION_4);

	push	6343					; 000018c7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 409  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@LoadMissio

; 410  : 		{
; 411  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 412  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ONCALLCAS) +
; 413  : 								TeamInfo[team]->GetMissionPriority(AMIS_PRPLANCAS) +
; 414  : 								TeamInfo[team]->GetMissionPriority(AMIS_CAS)) / 3;

	push	20					; 00000014H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	21					; 00000015H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 415  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN5@LoadMissio:

; 416  : 		}
; 417  : 		// Strategic Strikes
; 418  : 		sldr=(C_Slider*)win->FindControl(MISSION_5);

	push	6344					; 000018c8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 419  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@LoadMissio

; 420  : 		{
; 421  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 422  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_INTSTRIKE) +
; 423  : 						TeamInfo[team]->GetMissionPriority(AMIS_STRIKE) +
; 424  : 						TeamInfo[team]->GetMissionPriority(AMIS_DEEPSTRIKE)) / 3;

	push	14					; 0000000eH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	15					; 0000000fH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 425  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN4@LoadMissio:

; 426  : 		}
; 427  : 		// Anti shipping
; 428  : 		sldr=(C_Slider*)win->FindControl(MISSION_6);

	push	6345					; 000018c9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 429  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN3@LoadMissio

; 430  : 		{
; 431  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 432  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ASW) +
; 433  : 						TeamInfo[team]->GetMissionPriority(AMIS_ASHIP)) / 2;

	push	35					; 00000023H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	36					; 00000024H
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 434  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN3@LoadMissio:

; 435  : 		}
; 436  : 		// DCA
; 437  : 		sldr=(C_Slider*)win->FindControl(MISSION_7);

	push	6346					; 000018caH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 438  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN2@LoadMissio

; 439  : 		{
; 440  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 441  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_BARCAP) +
; 442  : 						TeamInfo[team]->GetMissionPriority(AMIS_BARCAP2) +
; 443  : 						TeamInfo[team]->GetMissionPriority(AMIS_HAVCAP) +
; 444  : 						TeamInfo[team]->GetMissionPriority(AMIS_TARCAP) +
; 445  : 						TeamInfo[team]->GetMissionPriority(AMIS_RESCAP) +
; 446  : 						TeamInfo[team]->GetMissionPriority(AMIS_AMBUSHCAP) +
; 447  : 						TeamInfo[team]->GetMissionPriority(AMIS_INTERCEPT)) / 7;

	push	1
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	2
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	3
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	push	4
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	add	esi, ecx
	push	5
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	esi, eax
	push	6
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	add	esi, edx
	push	9
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 7
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 448  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN2@LoadMissio:

; 449  : 		}
; 450  : 		// Recon   to become Escort    
; 451  :     // Cobra - 2/06 JG - Moved  AMIS_ESCORT & AMIS_SEADESCORT to Recon and changed to Recon to Escort
; 452  : 		sldr=(C_Slider*)win->FindControl(MISSION_8);

	push	6347					; 000018cbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 453  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@LoadMissio

; 454  : 		{
; 455  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 456  : 			value = (	TeamInfo[team]->GetMissionPriority(AMIS_ESCORT) +
; 457  : 					      TeamInfo[team]->GetMissionPriority(AMIS_SEADESCORT)) /2;

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	esi, al
	push	12					; 0000000cH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 458  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN10@LoadMissio:

; 459  : 		}
; 460  : 	}
; 461  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadMissionPriorities@@YAXXZ ENDP			; LoadMissionPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
_value$ = -12						; size = 4
_team$ = -8						; size = 4
_sldr$ = -4						; size = 4
?LoadTargetPriorities@@YAXXZ PROC			; LoadTargetPriorities

; 215  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 216  : 	C_Window *win;
; 217  : 	C_Slider *sldr;
; 218  : 	long value;
; 219  : 	int team = FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	mov	DWORD PTR _team$[ebp], eax

; 220  : 
; 221  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 222  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN17@LoadTarget

; 223  : 	{
; 224  : 		// Target Type priorities
; 225  : 		// Aircraft
; 226  : 		sldr=(C_Slider*)win->FindControl(TARGET_1);

	push	6323					; 000018b3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 227  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN15@LoadTarget

; 228  : 		{
; 229  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 230  : 			// Aircraft is based solely on ESCORT Priority.. For lack of a better variable
; 231  : 			// TJL 10/26/03 Aircraft will be targeted by offensive SWEEP mission, not Escorts
; 232  : 			value = TeamInfo[team]->GetMissionPriority(AMIS_SWEEP);

	push	7
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetMissionPriority@TeamClass@@QAEEH@Z	; TeamClass::GetMissionPriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 233  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN15@LoadTarget:

; 234  : 		}
; 235  : 		// Air fields
; 236  : 		sldr=(C_Slider*)win->FindControl(TARGET_2);

	push	6324					; 000018b4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 237  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN14@LoadTarget

; 238  : 		{
; 239  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 240  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_AIRBASE);

	push	1
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	mov	DWORD PTR _value$[ebp], ecx

; 241  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN14@LoadTarget:

; 242  : 		}
; 243  : 		// Air defense
; 244  :     // Cobra - 2/06 JG - Changed from Air defense to Airstrip
; 245  : 		sldr=(C_Slider*)win->FindControl(TARGET_3);

	push	6325					; 000018b5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 246  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN13@LoadTarget

; 247  : 		{
; 248  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 249  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_AIRSTRIP);

	push	2
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 250  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN13@LoadTarget:

; 251  : 		}
; 252  : 		// Radar -to have CCC added and name changed to Radar/CCC
; 253  : 		// Cobra - 2/06 JG - moved CCC to radar and combined
; 254  : 		sldr=(C_Slider*)win->FindControl(TARGET_4);

	push	6326					; 000018b6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 255  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN12@LoadTarget

; 256  : 		{
; 257  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 258  : 			value = (TeamInfo[team]->GetObjTypePriority(TYPE_RADAR) + TeamInfo[team]->GetObjTypePriority(TYPE_COM_CONTROL))/2;

	push	21					; 00000015H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	9
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 259  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN12@LoadTarget:

; 260  : 		}
; 261  : 		// Army
; 262  : 		sldr=(C_Slider*)win->FindControl(TARGET_5);

	push	6327					; 000018b7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 263  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN11@LoadTarget

; 264  : 		{
; 265  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 266  : 			value = (TeamInfo[team]->GetObjTypePriority(TYPE_ARMYBASE) + TeamInfo[team]->GetObjTypePriority(TYPE_FORTIFICATION))/2;

	push	3
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 267  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN11@LoadTarget:

; 268  : 		}
; 269  : 		// CCC  to be changed to Power plant and refinery
; 270  : 		// Cobra - 2/06 JG - Moved CCC to radar and moved Power plant & refinery here
; 271  : 		sldr=(C_Slider*)win->FindControl(TARGET_6);

	push	6328					; 000018b8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 272  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@LoadTarget

; 273  : 		{
; 274  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 275  : 			value = (TeamInfo[team]->GetObjTypePriority(TYPE_POWERPLANT) + TeamInfo[team]->GetObjTypePriority(TYPE_REFINERY))/2;

	push	20					; 00000014H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	25					; 00000019H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 276  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN10@LoadTarget:

; 277  : 		}
; 278  : 		// Infrastructure
; 279  : 		sldr=(C_Slider*)win->FindControl(TARGET_7);

	push	6329					; 000018b9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 280  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN9@LoadTarget

; 281  : 		{
; 282  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 283  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_ROAD) + 
; 284  : 						TeamInfo[team]->GetObjTypePriority(TYPE_BRIDGE) +
; 285  : 						TeamInfo[team]->GetObjTypePriority(TYPE_RAIL_TERMINAL)  ) / 3;

	push	26					; 0000001aH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	6
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	push	23					; 00000017H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 286  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN9@LoadTarget:

; 287  : 		}
; 288  : 		// Logistics
; 289  : 		sldr=(C_Slider*)win->FindControl(TARGET_8);

	push	6330					; 000018baH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 290  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN8@LoadTarget

; 291  : 		{
; 292  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 293  : 			value = TeamInfo[team]->GetObjTypePriority(TYPE_DEPOT);

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 294  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN8@LoadTarget:

; 295  : 		}
; 296  : 		// War production
; 297  : 		sldr=(C_Slider*)win->FindControl(TARGET_9);

	push	6331					; 000018bbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 298  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@LoadTarget

; 299  : 		{
; 300  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 301  : 			value = (	TeamInfo[team]->GetObjTypePriority(TYPE_CHEMICAL) + 
; 302  : 						TeamInfo[team]->GetObjTypePriority(TYPE_FACTORY) +
; 303  : 						TeamInfo[team]->GetObjTypePriority(TYPE_NUCLEAR) ) / 3;

	push	7
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	esi, al
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	edx, al
	add	esi, edx
	push	17					; 00000011H
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetObjTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetObjTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 304  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN7@LoadTarget:

; 305  : 		}
; 306  : 		// Air Defense Units
; 307  : 		// 2/06 Moved Air defense units to this slot
; 308  : 		sldr=(C_Slider*)win->FindControl(TARGET_10);

	push	6332					; 000018bcH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 309  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@LoadTarget

; 310  : 		{
; 311  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 312  : 			value = TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_AIR_DEFENSE);

	push	1
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 313  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN6@LoadTarget:

; 314  : 		}
; 315  : 		// Armored Units
; 316  : 		sldr=(C_Slider*)win->FindControl(TARGET_11);

	push	6333					; 000018bdH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 317  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@LoadTarget

; 318  : 		{
; 319  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 320  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ARMOR) +  
; 321  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ARMORED_CAV) ) / 2;

	push	3
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	4
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 322  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN5@LoadTarget:

; 323  : 		}
; 324  : 		// Infantry Units
; 325  : 		sldr=(C_Slider*)win->FindControl(TARGET_12);

	push	6334					; 000018beH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 326  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN4@LoadTarget

; 327  : 		{
; 328  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 329  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_INFANTRY) + 
; 330  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_MARINE) +
; 331  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_MECHANIZED) +
; 332  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_AIRMOBILE) +
; 333  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_RESERVE) ) / 5;

	push	7
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	8
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	push	9
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	ecx, al
	add	esi, ecx
	push	2
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	esi, eax
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	mov	eax, esi
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	DWORD PTR _value$[ebp], eax

; 334  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN4@LoadTarget:

; 335  : 		}
; 336  : 		// Artillery Units
; 337  : 		sldr=(C_Slider*)win->FindControl(TARGET_13);

	push	6335					; 000018bfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 338  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	$LN3@LoadTarget

; 339  : 		{
; 340  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 341  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ROCKET) + 
; 342  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_SP_ARTILLERY) +
; 343  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_SS_MISSILE) +
; 344  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_TOWED_ARTILLERY) ) / 4;

	push	10					; 0000000aH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	11					; 0000000bH
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	esi, eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	add	esi, edx
	push	14					; 0000000eH
	mov	eax, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	ecx, al
	add	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _value$[ebp], eax

; 345  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN3@LoadTarget:

; 346  : 		}
; 347  : 		// Support units
; 348  : 		sldr=(C_Slider*)win->FindControl(TARGET_14);

	push	6336					; 000018c0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 349  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN2@LoadTarget

; 350  : 		{
; 351  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 352  : 			value = (	TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_ENGINEER) + 
; 353  : 						TeamInfo[team]->GetUnitTypePriority(STYPE_UNIT_HQ) ) / 2;

	push	5
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	esi, al
	push	6
	mov	edx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	eax, al
	add	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _value$[ebp], eax

; 354  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	ecx, DWORD PTR _sldr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN2@LoadTarget:

; 355  : 		}
; 356  : 		// Naval Units
; 357  : 		sldr=(C_Slider*)win->FindControl(TARGET_15);

	push	6337					; 000018c1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 358  : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN17@LoadTarget

; 359  : 		{
; 360  : 			sldr->SetCallback(PriSliderCB);

	push	OFFSET ?PriSliderCB@@YAXJFPAVC_Base@@@Z	; PriSliderCB
	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 361  : 			value = TeamInfo[team]->GetUnitTypePriority(MAX_UNITTYPE-1); 

	push	19					; 00000013H
	mov	ecx, DWORD PTR _team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetUnitTypePriority@TeamClass@@QAEEH@Z	; TeamClass::GetUnitTypePriority
	movzx	edx, al
	mov	DWORD PTR _value$[ebp], edx

; 362  : 			PositionSlider(value,sldr); // Value is in range of 0 -> 100

	mov	eax, DWORD PTR _sldr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PositionSlider@@YAXJPAVC_Slider@@@Z	; PositionSlider
	add	esp, 8
$LN17@LoadTarget:

; 363  : 		}
; 364  : 	}
; 365  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTargetPriorities@@YAXXZ ENDP			; LoadTargetPriorities
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?PriSliderCB@@YAXJFPAVC_Base@@@Z PROC			; PriSliderCB

; 206  : {

	push	ebp
	mov	ebp, esp

; 207  : 	if(hittype != C_TYPE_LMOUSEDOWN)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 51					; 00000033H
	je	SHORT $LN1@PriSliderC

; 208  : 		return;

	jmp	SHORT $LN2@PriSliderC
$LN1@PriSliderC:

; 209  : 
; 210  : 	TurnOffHQButton();

	call	?TurnOffHQButton@@YAXXZ			; TurnOffHQButton
$LN2@PriSliderC:

; 211  : }

	pop	ebp
	ret	0
?PriSliderCB@@YAXJFPAVC_Base@@@Z ENDP			; PriSliderCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?TurnOnHQButton@@YAXXZ PROC				; TurnOnHQButton

; 188  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 189  : 	C_Window *win;
; 190  : 	C_Button *btn;
; 191  : 
; 192  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 193  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@TurnOnHQBu

; 194  : 	{
; 195  : 		btn=(C_Button*)win->FindControl(HQ_FLAG);

	push	6354					; 000018d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 196  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@TurnOnHQBu

; 197  : 		{
; 198  : 			btn->SetState(1);

	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 199  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@TurnOnHQBu:

; 200  : 		}
; 201  : 	}
; 202  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TurnOnHQButton@@YAXXZ ENDP				; TurnOnHQButton
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?TurnOffHQButton@@YAXXZ PROC				; TurnOffHQButton

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 172  : 	C_Window *win;
; 173  : 	C_Button *btn;
; 174  : 
; 175  : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 176  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@TurnOffHQB

; 177  : 	{
; 178  : 		btn=(C_Button*)win->FindControl(HQ_FLAG);

	push	6354					; 000018d2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 179  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@TurnOffHQB

; 180  : 		{
; 181  : 			btn->SetState(0);

	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 182  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@TurnOffHQB:

; 183  : 		}
; 184  : 	}
; 185  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TurnOffHQButton@@YAXXZ ENDP				; TurnOffHQButton
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_poit$ = -36						; size = 12
_o$ = -24						; size = 4
_POD$ = -20						; size = 4
_i$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ResetToDefaults@@YAXXZ PROC				; ResetToDefaults

; 142  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ResetToDefaults@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 143  : 	POData POD;
; 144  : 	long i;
; 145  : 	VuListIterator poit(POList);

	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	eax
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 146  : 	Objective o;
; 147  : 
; 148  : 	o = (Objective) poit.GetFirst();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN9@ResetToDef:

; 149  : 	while(o)

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN8@ResetToDef

; 150  : 	{
; 151  : 		POD=GetPOData(o);

	mov	ecx, DWORD PTR _o$[ebp]
	push	ecx
	call	?GetPOData@@YAPAUPrimaryObjectiveData@@PAVObjectiveClass@@@Z ; GetPOData
	add	esp, 4
	mov	DWORD PTR _POD$[ebp], eax

; 152  : 		if(POD)

	cmp	DWORD PTR _POD$[ebp], 0
	je	SHORT $LN7@ResetToDef

; 153  : 		{
; 154  : 			for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@ResetToDef
$LN5@ResetToDef:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@ResetToDef:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN4@ResetToDef

; 155  : //				POD->player_priority[i]=POD->air_priority[i];
; 156  : 				POD->player_priority[i] = -1;

	or	eax, -1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _POD$[ebp]
	mov	WORD PTR [edx+ecx*2+56], ax
	jmp	SHORT $LN5@ResetToDef
$LN4@ResetToDef:

; 157  : 			POD->flags &= ~GTMOBJ_PLAYER_SET_PRIORITY;

	mov	eax, DWORD PTR _POD$[ebp]
	movzx	ecx, BYTE PTR [eax+72]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _POD$[ebp]
	mov	BYTE PTR [edx+72], cl
$LN7@ResetToDef:

; 158  : 		}
; 159  : 		o = (Objective) poit.GetNext();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 160  : 	}

	jmp	SHORT $LN9@ResetToDef
$LN8@ResetToDef:

; 161  : 
; 162  : 	for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ResetToDef
$LN2@ResetToDef:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ResetToDef:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN1@ResetToDef

; 163  : 	{
; 164  : 		memcpy(TeamInfo[i]->SetAllObjTypePriority(),DefaultObjtypePriority[TAT_INTERDICT-1],sizeof(uchar)*MAX_TGTTYPE);

	push	36					; 00000024H
	mov	ecx, 36					; 00000024H
	shl	ecx, 1
	add	ecx, OFFSET ?DefaultObjtypePriority@@3PAY0CE@EA ; DefaultObjtypePriority
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?SetAllObjTypePriority@TeamClass@@QAEPAEXZ ; TeamClass::SetAllObjTypePriority
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 165  : 		memcpy(TeamInfo[i]->SetAllUnitTypePriority(),DefaultUnittypePriority[TAT_INTERDICT-1],sizeof(uchar)*MAX_UNITTYPE);

	push	20					; 00000014H
	mov	eax, 20					; 00000014H
	shl	eax, 1
	add	eax, OFFSET ?DefaultUnittypePriority@@3PAY0BE@EA ; DefaultUnittypePriority
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?SetAllUnitTypePriority@TeamClass@@QAEPAEXZ ; TeamClass::SetAllUnitTypePriority
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 166  : 		memcpy(TeamInfo[i]->SetAllMissionPriority(),DefaultMissionPriority[TAT_INTERDICT-1],sizeof(uchar)*AMIS_OTHER);

	push	41					; 00000029H
	mov	edx, 41					; 00000029H
	shl	edx, 1
	add	edx, OFFSET ?DefaultMissionPriority@@3PAY0CJ@EA ; DefaultMissionPriority
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?SetAllMissionPriority@TeamClass@@QAEPAEXZ ; TeamClass::SetAllMissionPriority
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 167  : 	}

	jmp	$LN2@ResetToDef
$LN1@ResetToDef:

; 168  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ResetToDefaults@@YAXXZ$0:
	lea	ecx, DWORD PTR _poit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?ResetToDefaults@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ResetToDefaults@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ResetToDefaults@@YAXXZ ENDP				; ResetToDefaults
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_value$ = -20						; size = 4
_range$ = -16						; size = 4
_maxval$ = -12						; size = 4
_pos$ = -8						; size = 4
tv75 = -4						; size = 4
_slider$ = 8						; size = 4
?SliderValue@@YAJPAVC_Slider@@@Z PROC			; SliderValue

; 126  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi

; 127  : 	long range,pos,maxval,value;
; 128  : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	SHORT $LN1@SliderValu

; 129  : 	{
; 130  : 		range = slider->GetSliderMax()-slider->GetSliderMin();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	DWORD PTR _range$[ebp], esi

; 131  : 		maxval= max(1,slider->GetSteps());

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSteps@C_Slider@@QAEJXZ		; C_Slider::GetSteps
	cmp	eax, 1
	jge	SHORT $LN4@SliderValu
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN5@SliderValu
$LN4@SliderValu:
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSteps@C_Slider@@QAEJXZ		; C_Slider::GetSteps
	mov	DWORD PTR tv75[ebp], eax
$LN5@SliderValu:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR _maxval$[ebp], eax

; 132  : 
; 133  : 		pos=slider->GetSliderPos() - slider->GetSliderMin();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	DWORD PTR _pos$[ebp], esi

; 134  : 		value = pos * maxval / range;

	mov	eax, DWORD PTR _pos$[ebp]
	imul	eax, DWORD PTR _maxval$[ebp]
	cdq
	idiv	DWORD PTR _range$[ebp]
	mov	DWORD PTR _value$[ebp], eax

; 135  : 
; 136  : 		return(value);

	mov	eax, DWORD PTR _value$[ebp]
	jmp	SHORT $LN2@SliderValu
$LN1@SliderValu:

; 137  : 	}
; 138  : 	return(0);

	xor	eax, eax
$LN2@SliderValu:

; 139  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?SliderValue@@YAJPAVC_Slider@@@Z ENDP			; SliderValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_maxval$ = -16						; size = 4
_range$ = -12						; size = 4
tv75 = -8						; size = 4
_pos$ = -4						; size = 4
_value$ = 8						; size = 4
_slider$ = 12						; size = 4
?PositionSlider@@YAXJPAVC_Slider@@@Z PROC		; PositionSlider

; 108  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 109  : 	long range,pos,maxval;
; 110  : 
; 111  : 	if(slider)

	cmp	DWORD PTR _slider$[ebp], 0
	je	$LN2@PositionSl

; 112  : 	{
; 113  : 		range = slider->GetSliderMax()-slider->GetSliderMin();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	DWORD PTR _range$[ebp], esi

; 114  : 		maxval= max(1,slider->GetSteps());

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSteps@C_Slider@@QAEJXZ		; C_Slider::GetSteps
	cmp	eax, 1
	jge	SHORT $LN4@PositionSl
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN5@PositionSl
$LN4@PositionSl:
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSteps@C_Slider@@QAEJXZ		; C_Slider::GetSteps
	mov	DWORD PTR tv75[ebp], eax
$LN5@PositionSl:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR _maxval$[ebp], eax

; 115  : 
; 116  : 		pos  = range * value / maxval;

	mov	eax, DWORD PTR _range$[ebp]
	imul	eax, DWORD PTR _value$[ebp]
	cdq
	idiv	DWORD PTR _maxval$[ebp]
	mov	DWORD PTR _pos$[ebp], eax

; 117  : 		pos += slider->GetSliderMin();

	mov	ecx, DWORD PTR _slider$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	add	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pos$[ebp], eax

; 118  : 
; 119  : 		slider->Refresh();

	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 120  : 		slider->SetSliderPos(pos);

	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _slider$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 121  : 		slider->Refresh();

	mov	edx, DWORD PTR _slider$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _slider$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN2@PositionSl:

; 122  : 	}
; 123  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?PositionSlider@@YAXJPAVC_Slider@@@Z ENDP		; PositionSlider
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_bmp$ = -8						; size = 4
_win$ = -4						; size = 4
?InitPAKMap@@YAXXZ PROC					; InitPAKMap

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 82   : 	C_Window *win;
; 83   : 	C_Bitmap *bmp;
; 84   : 
; 85   : 	if(!PAKMap)

	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	jne	$LN5@InitPAKMap

; 86   : 	{
; 87   : 		SetCursor(gCursors[CRSR_WAIT]);

	mov	eax, 4
	imul	eax, 19					; 00000013H
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4

; 88   : 		MakePAKPalette();

	call	?MakePAKPalette@@YAXXZ			; MakePAKPalette

; 89   : 		PAKMap=CreateOccupationMap(1,TheCampaign.TheaterSizeX/PAK_MAP_RATIO,TheCampaign.TheaterSizeY/PAK_MAP_RATIO,MAX_PAKS);

	push	50					; 00000032H
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	push	1
	call	?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z ; CreateOccupationMap
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, eax ; PAKMap

; 90   : 		if(PAKMap)

	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	je	$LN3@InitPAKMap

; 91   : 		{
; 92   : 			PAKMap->Header->flags |= _RSC_USECOLORKEY_;

	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+36]
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+36], ecx

; 93   : 			MakeCampMap(MAP_PAK,(uchar*)PAKMap->Owner->GetData(),TheCampaign.TheaterSizeX/PAK_MAP_RATIO * TheCampaign.TheaterSizeY/PAK_MAP_RATIO);

	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	imul	eax, ecx
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	push	eax
	mov	edx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	ecx, DWORD PTR [edx+4]
	call	?GetData@C_Resmgr@@QAEPADXZ		; C_Resmgr::GetData
	push	eax
	push	4
	call	?MakeCampMap@@YAPAEHPAEH@Z		; MakeCampMap
	add	esp, 12					; 0000000cH

; 94   : 
; 95   : 			win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 96   : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@InitPAKMap

; 97   : 			{
; 98   : 				bmp=(C_Bitmap*)win->FindControl(PAK_REGION);

	push	6352					; 000018d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 99   : 				if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN3@InitPAKMap

; 100  : 					bmp->SetImage(PAKMap);

	mov	eax, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage
$LN3@InitPAKMap:

; 101  : 			}
; 102  : 		}
; 103  : 		SetCursor(gCursors[CRSR_F16]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4
$LN5@InitPAKMap:

; 104  : 	}
; 105  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitPAKMap@@YAXXZ ENDP					; InitPAKMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 2
?MakePAKPalette@@YAXXZ PROC				; MakePAKPalette

; 73   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 74   : 	short i;
; 75   : 
; 76   : 	for(i=0;i<101;i++)

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN3@MakePAKPal
$LN2@MakePAKPal:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN3@MakePAKPal:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 101				; 00000065H
	jge	SHORT $LN4@MakePAKPal

; 77   : 		PAKPalette[100 - i]=UI95_RGB24Bit(0x000000ff | (((i*255)/100) << 8) | (((i*255)/100) << 16));

	movsx	eax, WORD PTR _i$[ebp]
	imul	eax, 255				; 000000ffH
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	ecx, eax
	shl	ecx, 8
	or	ecx, 255				; 000000ffH
	movsx	eax, WORD PTR _i$[ebp]
	imul	eax, 255				; 000000ffH
	cdq
	mov	esi, 100				; 00000064H
	idiv	esi
	shl	eax, 16					; 00000010H
	or	ecx, eax
	push	ecx
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, 100				; 00000064H
	sub	ecx, edx
	mov	WORD PTR _PAKPalette[ecx*2], ax
	jmp	SHORT $LN2@MakePAKPal
$LN4@MakePAKPal:

; 78   : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?MakePAKPalette@@YAXXZ ENDP				; MakePAKPalette
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\priority.cpp
_TEXT	SEGMENT
_poit$ = -116						; size = 12
_win$ = -104						; size = 4
_lbox$ = -100						; size = 4
_o$ = -96						; size = 4
_idx$ = -92						; size = 4
_buffer$ = -88						; size = 70
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitPAKNames@@YAXXZ PROC				; InitPAKNames

; 41   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitPAKNames@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 42   : 	C_Window *win;
; 43   : 	C_ListBox *lbox;
; 44   : 	long idx;
; 45   : 	_TCHAR buffer[70];
; 46   : 	VuListIterator poit(POList);

	mov	eax, DWORD PTR ?POList@@3PAVFalconPrivateOrderedList@@A ; POList
	push	eax
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??0VuListIterator@@QAE@PAVVuLinkedList@@@Z ; VuListIterator::VuListIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 47   : 	Objective o;
; 48   : 
; 49   : 	win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 50   : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN4@InitPAKNam

; 51   : 	{
; 52   : 		lbox=(C_ListBox*)win->FindControl(PAK_TITLE);

	push	6350					; 000018ceH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 53   : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	$LN4@InitPAKNam

; 54   : 		{
; 55   : 			lbox->RemoveAllItems();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?RemoveAllItems@C_ListBox@@QAEXXZ	; C_ListBox::RemoveAllItems

; 56   : 
; 57   : 			// search list...
; 58   : 			idx=1;

	mov	DWORD PTR _idx$[ebp], 1

; 59   : 			o = (Objective) poit.GetFirst();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetFirst@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetFirst
	mov	DWORD PTR _o$[ebp], eax
$LN2@InitPAKNam:

; 60   : 			while(o)

	cmp	DWORD PTR _o$[ebp], 0
	je	SHORT $LN4@InitPAKNam

; 61   : 			{
; 62   : 				_stprintf(buffer,"%s %1ld:",gStringMgr->GetString(TXT_PAK),idx);   

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	push	183					; 000000b7H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_08OMFFHDNP@?$CFs?5?$CF1ld?3?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 63   : 				o->GetName(&buffer[_tcsclen(buffer)],50,TRUE);

	push	1
	push	50					; 00000032H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	__tcsclen
	add	esp, 4
	lea	ecx, DWORD PTR _buffer$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _o$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _o$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 64   : 				lbox->AddItem(idx,C_TYPE_ITEM,buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	50					; 00000032H
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?AddItem@C_ListBox@@QAEPAV1@JFPAD@Z	; C_ListBox::AddItem

; 65   : 				o = (Objective) poit.GetNext();

	lea	ecx, DWORD PTR _poit$[ebp]
	call	?GetNext@VuListIterator@@QAEPAVVuEntity@@XZ ; VuListIterator::GetNext
	mov	DWORD PTR _o$[ebp], eax

; 66   : 				idx++;

	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	mov	DWORD PTR _idx$[ebp], edx

; 67   : 			}

	jmp	SHORT $LN2@InitPAKNam
$LN4@InitPAKNam:

; 68   : 		}
; 69   : 	}
; 70   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _poit$[ebp]
	call	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitPAKNames@@YAXXZ$0:
	lea	ecx, DWORD PTR _poit$[ebp]
	jmp	??1VuListIterator@@UAE@XZ		; VuListIterator::~VuListIterator
__ehhandler$?InitPAKNames@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitPAKNames@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitPAKNames@@YAXXZ ENDP				; InitPAKNames
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSteps@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSteps@C_Slider@@QAEJXZ PROC				; C_Slider::GetSteps, COMDAT
; _this$ = ecx

; 51   : 		long GetSteps() { return(Steps_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSteps@C_Slider@@QAEJXZ ENDP				; C_Slider::GetSteps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?GetData@C_Resmgr@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@C_Resmgr@@QAEPADXZ PROC			; C_Resmgr::GetData, COMDAT
; _this$ = ecx

; 77   : 		char *GetData() { return(Data_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@C_Resmgr@@QAEPADXZ ENDP			; C_Resmgr::GetData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetMissionPriority@TeamClass@@QAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?GetMissionPriority@TeamClass@@QAEEH@Z PROC		; TeamClass::GetMissionPriority, COMDAT
; _this$ = ecx

; 275  : 	uchar GetMissionPriority (int type) { return mission_priority[type]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _type$[ebp]
	mov	al, BYTE PTR [eax+226]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetMissionPriority@TeamClass@@QAEEH@Z ENDP		; TeamClass::GetMissionPriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetUnitTypePriority@TeamClass@@QAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?GetUnitTypePriority@TeamClass@@QAEEH@Z PROC		; TeamClass::GetUnitTypePriority, COMDAT
; _this$ = ecx

; 274  : 	uchar GetUnitTypePriority (int type) { return unittype_priority[type]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _type$[ebp]
	mov	al, BYTE PTR [eax+206]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetUnitTypePriority@TeamClass@@QAEEH@Z ENDP		; TeamClass::GetUnitTypePriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetObjTypePriority@TeamClass@@QAEEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?GetObjTypePriority@TeamClass@@QAEEH@Z PROC		; TeamClass::GetObjTypePriority, COMDAT
; _this$ = ecx

; 273  : 	uchar GetObjTypePriority (int type) { return objtype_priority[type]; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _type$[ebp]
	mov	al, BYTE PTR [eax+170]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetObjTypePriority@TeamClass@@QAEEH@Z ENDP		; TeamClass::GetObjTypePriority
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsclen
_TEXT	SEGMENT
__String$ = 8						; size = 4
__tcsclen PROC						; COMDAT

; 1748 : {

	push	ebp
	mov	ebp, esp

; 1749 :     return _mbslen((const unsigned char *)_String);

	mov	eax, DWORD PTR __String$[ebp]
	push	eax
	call	__mbslen
	add	esp, 4

; 1750 : }

	pop	ebp
	ret	0
__tcsclen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
