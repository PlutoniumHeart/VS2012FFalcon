; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\campaign\general.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?ObjStr@@3PAPADA				; ObjStr
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?LoadSaveFilename@@3PADA			; LoadSaveFilename
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?VirtualFileList@@3PAY0EA@DA			; VirtualFileList
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?DontDeleteList@@3PAPADA			; DontDeleteList
PUBLIC	??_C@_0P@BGDOGLFL@keystrokes?4key?$AA@		; `string'
PUBLIC	??_C@_0L@HMMBGCMD@laptop?4key?$AA@		; `string'
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?TgaHeader@@3UBOGUS_HEADER@@A			; TgaHeader
PUBLIC	?TgaHeaderHiRes@@3UBOGUS_HEADER@@A		; TgaHeaderHiRes
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?MasterXOR@@3PADA				; MasterXOR
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
_BSS	SEGMENT
?ObjStr@@3PAPADA DD 05H DUP (?)				; ObjStr
?LoadSaveFilename@@3PADA DB 0105H DUP (?)		; LoadSaveFilename
	ALIGN	4

?VirtualFileList@@3PAY0EA@DA DB 03200H DUP (?)		; VirtualFileList
_WordWrap DD	01H DUP (?)
_WordPtr DD	01H DUP (?)
_NextPtr DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ??_C@_0L@HMMBGCMD@laptop?4key?$AA@
CONST	SEGMENT
??_C@_0L@HMMBGCMD@laptop?4key?$AA@ DB 'laptop.key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGDOGLFL@keystrokes?4key?$AA@
CONST	SEGMENT
??_C@_0P@BGDOGLFL@keystrokes?4key?$AA@ DB 'keystrokes.key', 00H ; `string'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
_DATA	SEGMENT
_PlaneIDTable DD 017dcH
	DD	00H
	DD	00H
	DD	00H
	DD	017ddH
	DD	017deH
	DD	00H
	DD	00H
	DD	017dfH
	DD	017e0H
	DD	017e1H
	DD	00H
	DD	017e2H
	DD	017e3H
	DD	017e4H
	DD	017e5H
_Ordinals DD	0a2H
	DD	0a3H
	DD	0a4H
	DD	0a5H
	DD	0a6H
	DD	0a7H
	DD	0a8H
	DD	0a9H
	DD	0aaH
	DD	0abH
?DontDeleteList@@3PAPADA DD FLAT:??_C@_0P@BGDOGLFL@keystrokes?4key?$AA@ ; DontDeleteList
	DD	FLAT:??_C@_0L@HMMBGCMD@laptop?4key?$AA@
	DD	00H
?TgaHeader@@3UBOGUS_HEADER@@A DD 020000H		; TgaHeader
	DD	00H
	DD	00H
	DW	0320H
	DW	0258H
	DW	0110H
	ORG $+2
?TgaHeaderHiRes@@3UBOGUS_HEADER@@A DD 020000H		; TgaHeaderHiRes
	DD	00H
	DD	00H
	DW	0400H
	DW	0300H
	DW	0110H
	ORG $+2
?MasterXOR@@3PADA DB 'Falcon is your Master', 00H	; MasterXOR
_DATA	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
PUBLIC	__tcsicmp
PUBLIC	__tcsclen
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	?Id@VuEntity@@QBE?AVVU_ID@@XZ			; VuEntity::Id
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetWPFlags@WayPointClass@@QAEKXZ		; WayPointClass::GetWPFlags
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	?GetWPLocation@WayPointClass@@QBEXPAF0@Z	; WayPointClass::GetWPLocation
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	?IsLoaded@CampaignClass@@QAEHXZ			; CampaignClass::IsLoaded
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
PUBLIC	?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ; TeamClass::GetGroundAction
PUBLIC	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
PUBLIC	?GetColor@TeamClass@@QAEHXZ			; TeamClass::GetColor
PUBLIC	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	?GetIDList@C_Resmgr@@QAEPAVC_Hash@@XZ		; C_Resmgr::GetIDList
PUBLIC	??_GC_Resmgr@@QAEPAXI@Z				; C_Resmgr::`scalar deleting destructor'
PUBLIC	?SetGroup@C_Base@@QAEXJ@Z			; C_Base::SetGroup
PUBLIC	?SetCluster@C_Base@@QAEXJ@Z			; C_Base::SetCluster
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetW@C_Base@@QAEJXZ				; C_Base::GetW
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback
PUBLIC	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ	; C_PopupMgr::GetCallingControl
PUBLIC	?GetTokenHash@C_Parser@@QAEPAVC_Hash@@XZ	; C_Parser::GetTokenHash
PUBLIC	?GetID@C_Window@@QAEJXZ				; C_Window::GetID
PUBLIC	?GetH@C_Window@@QAEFXZ				; C_Window::GetH
PUBLIC	?GetGroup@C_Window@@QAEJXZ			; C_Window::GetGroup
PUBLIC	?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ		; C_Mission::GetVUID
PUBLIC	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
PUBLIC	?GetPlayerName@FalconSessionEntity@@QAEPADXZ	; FalconSessionEntity::GetPlayerName
PUBLIC	?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerFlightID
PUBLIC	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
PUBLIC	?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z ; AddWordWrapTextToWindow
PUBLIC	?DelSTRFileCB@@YAXJFPAVC_Base@@@Z		; DelSTRFileCB
PUBLIC	?DelDFSFileCB@@YAXJFPAVC_Base@@@Z		; DelDFSFileCB
PUBLIC	?DelLSTFileCB@@YAXJFPAVC_Base@@@Z		; DelLSTFileCB
PUBLIC	?DelCamFileCB@@YAXJFPAVC_Base@@@Z		; DelCamFileCB
PUBLIC	?DelTacFileCB@@YAXJFPAVC_Base@@@Z		; DelTacFileCB
PUBLIC	?DelTGAFileCB@@YAXJFPAVC_Base@@@Z		; DelTGAFileCB
PUBLIC	?DelVHSFileCB@@YAXJFPAVC_Base@@@Z		; DelVHSFileCB
PUBLIC	?DelKeyFileCB@@YAXJFPAVC_Base@@@Z		; DelKeyFileCB
PUBLIC	?LoadAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3@Z	; LoadAFile
PUBLIC	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z	; SaveAFile
PUBLIC	?EncryptBuffer@@YAXEPAEJ@Z			; EncryptBuffer
PUBLIC	?OrdinalString@@YAPADJ@Z			; OrdinalString
PUBLIC	?Uni_Float@@YAXPAD@Z				; Uni_Float
PUBLIC	?UI_WordWrap@@YAPADPAVC_Window@@PADJFPAH@Z	; UI_WordWrap
PUBLIC	?FileNameSortCB@@YAHPAVTREELIST@@0@Z		; FileNameSortCB
PUBLIC	?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z ; GetVirtualFileList
PUBLIC	?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z ; GetVirtualFileListTree
PUBLIC	?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z ; GetFileList
PUBLIC	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z	; SetDeleteCallback
PUBLIC	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
PUBLIC	?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z ; LoadVirtualFile
PUBLIC	?CloseAYS@@YAXXZ				; CloseAYS
PUBLIC	?AreYouSure@@YAXJPADP6AXJFPAVC_Base@@@Z2@Z	; AreYouSure
PUBLIC	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z	; AreYouSure
PUBLIC	?CheckExclude@@YAHPAD0QAPAD0@Z			; CheckExclude
PUBLIC	?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z	; VerifyDelete
PUBLIC	?ExitVerify@@YAXJP6AXJFPAVC_Base@@@Z1@Z		; ExitVerify
PUBLIC	?MakeVirtualListFromRsc@@YAXJJ@Z		; MakeVirtualListFromRsc
PUBLIC	?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z		; MakeOccupationMap
PUBLIC	?MakeBigOccupationMap@@YAXPAVIMAGE_RSC@@@Z	; MakeBigOccupationMap
PUBLIC	?DisplayTarget@@YAHF@Z				; DisplayTarget
PUBLIC	?GetMissionTarget@@YAXPAVPackageClass@@PAVFlightClass@@QAD@Z ; GetMissionTarget
PUBLIC	?GetFlightStatus@@YAXPAVFlightClass@@QAD@Z	; GetFlightStatus
PUBLIC	?UpdateMissionWindow@@YAXJ@Z			; UpdateMissionWindow
PUBLIC	?UpdateIntel@@YAXJ@Z				; UpdateIntel
PUBLIC	?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z		; UpdateIntelBarCB
PUBLIC	?AddButtonToWindow@@YAFPAVC_Window@@FFKPAD@Z	; AddButtonToWindow
PUBLIC	?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z	; AddTextToWindow
PUBLIC	?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z ; AddHorizontalLineToWindow
PUBLIC	?RefreshMapEventList@@YAXJJ@Z			; RefreshMapEventList
PUBLIC	?RefreshEventList@@YAXXZ			; RefreshEventList
PUBLIC	?RelocateSquadron@@YAXXZ			; RelocateSquadron
PUBLIC	?CloseItCB@@YAXJFPAVC_Base@@@Z			; CloseItCB
PUBLIC	?SaveTargaCB@@YAXJFPAVC_Base@@@Z		; SaveTargaCB
PUBLIC	?SaveScreenShot@@YAXXZ				; SaveScreenShot
PUBLIC	?DecryptBuffer@@YAXEPAEJ@Z			; DecryptBuffer
PUBLIC	?ScrollTimerCB@@YAXJFPAVC_Base@@@Z		; ScrollTimerCB
PUBLIC	?LoadPeopleInfo@@YAXJ@Z				; LoadPeopleInfo
PUBLIC	?CheckSystemFiles@@YAHPAD0@Z			; CheckSystemFiles
PUBLIC	?DeleteAFile@@YAHPAD00@Z			; DeleteAFile
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@		; `string'
PUBLIC	??_C@_08IEFAEBKE@?$CFs?2?$CFs?4?$CFs?$AA@	; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_03NDEAONJP@?5?5?5?$AA@			; `string'
PUBLIC	??_C@_09MFEHAODN@?$CFs?2?$CFs?4tga?$AA@		; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0BA@GMOPHECK@?2pictures?2?$CK?4tga?$AA@	; `string'
PUBLIC	??_C@_0BA@COMKCFNP@Save?5Screenshot?$AA@	; `string'
PUBLIC	??_C@_0BF@GFGFKGGD@art?2resource?2credits?$AA@	; `string'
PUBLIC	??_C@_04FODGCLEG@Fini?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_03OJMAPEGJ@str?$AA@			; `string'
PUBLIC	??_C@_03CCLHNNBA@dfs?$AA@			; `string'
PUBLIC	??_C@_03LCKPACKD@lst?$AA@			; `string'
PUBLIC	??_C@_03GOGOMMPD@cam?$AA@			; `string'
PUBLIC	??_C@_03DNCDIOFL@tac?$AA@			; `string'
PUBLIC	??_C@_03LJIJAGL@tga?$AA@			; `string'
PUBLIC	??_C@_03NCDJGPAO@vhs?$AA@			; `string'
PUBLIC	??_C@_07DBNNFGHN@acmibin?$AA@			; `string'
PUBLIC	??_C@_03ICHNJLJF@key?$AA@			; `string'
PUBLIC	??_C@_06HEJKKHEK@config?$AA@			; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	_stricmp:PROC
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	__imp__FindNextFileA@8:PROC
EXTRN	__mbsicmp:PROC
EXTRN	__mbslen:PROC
EXTRN	_fwrite:PROC
EXTRN	_sprintf:PROC
EXTRN	?F4IsBadReadPtr@@YA_NPBXI@Z:PROC		; F4IsBadReadPtr
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?GetLocation@FalconEntity@@QBEXPAF0@Z:PROC	; FalconEntity::GetLocation
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ:PROC ; UnitClass::GetUnitClassData
EXTRN	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ:PROC ; UnitClass::GetCurrentUnitWP
EXTRN	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ:PROC ; ObjectiveClass::GetObjectiveClassData
EXTRN	?GetTimeString@@YAPADKQADH@Z:PROC		; GetTimeString
EXTRN	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z:PROC ; FindEntity
EXTRN	?GetCallsign@@YAXPAVFlightClass@@PAD@Z:PROC	; GetCallsign
EXTRN	?GetPilotName@MissionEvaluationClass@@QAEHHPAD@Z:PROC ; MissionEvaluationClass::GetPilotName
EXTRN	?UI95_RGB24Bit@@YAGK@Z:PROC			; UI95_RGB24Bit
EXTRN	?UI95_ScreenToTga@@YAGG@Z:PROC			; UI95_ScreenToTga
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z:PROC ; C_Hash::GetFirst
EXTRN	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z:PROC ; C_Hash::GetNext
EXTRN	?GetImage@IMAGE_RSC@@QAEPADXZ:PROC		; IMAGE_RSC::GetImage
EXTRN	?GetPalette@IMAGE_RSC@@QAEPAGXZ:PROC		; IMAGE_RSC::GetPalette
EXTRN	?GetData@FLAT_RSC@@QAEPAXXZ:PROC		; FLAT_RSC::GetData
EXTRN	??0C_Resmgr@@QAE@XZ:PROC			; C_Resmgr::C_Resmgr
EXTRN	??1C_Resmgr@@QAE@XZ:PROC			; C_Resmgr::~C_Resmgr
EXTRN	?Setup@C_Resmgr@@QAEXJPADPAVC_Hash@@@Z:PROC	; C_Resmgr::Setup
EXTRN	?Cleanup@C_Resmgr@@QAEXXZ:PROC			; C_Resmgr::Cleanup
EXTRN	?LoadData@C_Resmgr@@QAEXXZ:PROC			; C_Resmgr::LoadData
EXTRN	?GetHeight@C_Font@@QAEHJ@Z:PROC			; C_Font::GetHeight
EXTRN	?StrWidth@C_Font@@QAEHJPAD@Z:PROC		; C_Font::StrWidth
EXTRN	?StrWidth@C_Font@@QAEHJPADH@Z:PROC		; C_Font::StrWidth
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?AddText@C_String@@QAEJPBD@Z:PROC		; C_String::AddText
EXTRN	?GetText@C_String@@QAEPADJ@Z:PROC		; C_String::GetText
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z:PROC	; C_Bitmap::SetImage
EXTRN	??0C_Button@@QAE@XZ:PROC			; C_Button::C_Button
EXTRN	?Setup@C_Button@@QAEXJFJJ@Z:PROC		; C_Button::Setup
EXTRN	?SetAllLabel@C_Button@@QAEXPAD@Z:PROC		; C_Button::SetAllLabel
EXTRN	?SetAllLabel@C_Button@@QAEXJ@Z:PROC		; C_Button::SetAllLabel
EXTRN	?SetImage@C_Button@@QAEXFJ@Z:PROC		; C_Button::SetImage
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?GetText@C_Button@@QAEPADF@Z:PROC		; C_Button::GetText
EXTRN	?SetFgColor@C_Button@@QAEXFK@Z:PROC		; C_Button::SetFgColor
EXTRN	?AddBlip@C_Blip@@QAEXFFEJ@Z:PROC		; C_Blip::AddBlip
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z:PROC ; C_TreeList::CreateItem
EXTRN	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z:PROC	; C_TreeList::AddItem
EXTRN	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteItem
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?SetCallback@C_PopupList@@QAEXJP6AXJFPAVC_Base@@@Z@Z:PROC ; C_PopupList::SetCallback
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	??0C_Text@@QAE@XZ:PROC				; C_Text::C_Text
EXTRN	?SetFGColor@C_Text@@QAEXK@Z:PROC		; C_Text::SetFGColor
EXTRN	?SetFixedWidth@C_Text@@QAEXJ@Z:PROC		; C_Text::SetFixedWidth
EXTRN	??0C_Box@@QAE@XZ:PROC				; C_Box::C_Box
EXTRN	?Setup@C_Box@@QAEXJF@Z:PROC			; C_Box::Setup
EXTRN	?SetColor@C_Box@@QAEXK@Z:PROC			; C_Box::SetColor
EXTRN	??0C_TimerHook@@QAE@XZ:PROC			; C_TimerHook::C_TimerHook
EXTRN	?Setup@C_TimerHook@@QAEXJF@Z:PROC		; C_TimerHook::Setup
EXTRN	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z:PROC ; C_PopupMgr::GetMenu
EXTRN	?CloseMenu@C_PopupMgr@@QAEXXZ:PROC		; C_PopupMgr::CloseMenu
EXTRN	?ScanClientArea@C_Window@@QAEXJ@Z:PROC		; C_Window::ScanClientArea
EXTRN	?ScanClientAreas@C_Window@@QAEXXZ:PROC		; C_Window::ScanClientAreas
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?SetUpdateRect@C_Window@@QAEXJJJJJJ@Z:PROC	; C_Window::SetUpdateRect
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z:PROC ; UIComms::FindCampaignPlayer
EXTRN	?AddTimeToBuffer@@YAXKPADH@Z:PROC		; AddTimeToBuffer
EXTRN	?AddLocationToBuffer@@YAXDFFPAD@Z:PROC		; AddLocationToBuffer
EXTRN	_ResFOpen:PROC
EXTRN	_ResFClose:PROC
EXTRN	?DeleteGroupList@@YAXJ@Z:PROC			; DeleteGroupList
EXTRN	?GetTopPriorityObjectives@@YAHHQAPAD@Z:PROC	; GetTopPriorityObjectives
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?gLangIDNum@@3HA:DWORD				; gLangIDNum
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?MissStr@@3PAY0BE@DA:BYTE			; MissStr
EXTRN	?FalconDataDirectory@@3PADA:BYTE		; FalconDataDirectory
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?gFontList@@3PAVC_Font@@A:DWORD			; gFontList
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gPopupMgr@@3PAVC_PopupMgr@@A:DWORD		; gPopupMgr
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?TeamColorList@@3PAKA:BYTE			; TeamColorList
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?gCurrentFlightID@@3VVU_ID@@A:QWORD		; gCurrentFlightID
EXTRN	?FalconPictureDirectory@@3PADA:BYTE		; FalconPictureDirectory
EXTRN	?g_bHiResUI@@3_NA:BYTE				; g_bHiResUI
EXTRN	?g_bMissionACIcons@@3_NA:BYTE			; g_bMissionACIcons
EXTRN	?g_LargeTheater@@3_NA:BYTE			; g_LargeTheater
EXTRN	?gOccupationMap@@3PAVIMAGE_RSC@@A:DWORD		; gOccupationMap
EXTRN	?g_bEmptyFilenameFix@@3_NA:BYTE			; g_bEmptyFilenameFix
EXTRN	?gScreenShotBuffer@@3PAGA:DWORD			; gScreenShotBuffer
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
;	COMDAT ?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA
_BSS	SEGMENT
?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA DB 014H DUP (?) ; `OrdinalString'::`2'::buffer
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06HEJKKHEK@config?$AA@
CONST	SEGMENT
??_C@_06HEJKKHEK@config?$AA@ DB 'config', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICHNJLJF@key?$AA@
CONST	SEGMENT
??_C@_03ICHNJLJF@key?$AA@ DB 'key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBNNFGHN@acmibin?$AA@
CONST	SEGMENT
??_C@_07DBNNFGHN@acmibin?$AA@ DB 'acmibin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCDJGPAO@vhs?$AA@
CONST	SEGMENT
??_C@_03NCDJGPAO@vhs?$AA@ DB 'vhs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LJIJAGL@tga?$AA@
CONST	SEGMENT
??_C@_03LJIJAGL@tga?$AA@ DB 'tga', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNCDIOFL@tac?$AA@
CONST	SEGMENT
??_C@_03DNCDIOFL@tac?$AA@ DB 'tac', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOGOMMPD@cam?$AA@
CONST	SEGMENT
??_C@_03GOGOMMPD@cam?$AA@ DB 'cam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCKPACKD@lst?$AA@
CONST	SEGMENT
??_C@_03LCKPACKD@lst?$AA@ DB 'lst', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCLHNNBA@dfs?$AA@
CONST	SEGMENT
??_C@_03CCLHNNBA@dfs?$AA@ DB 'dfs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OJMAPEGJ@str?$AA@
CONST	SEGMENT
??_C@_03OJMAPEGJ@str?$AA@ DB 'str', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FODGCLEG@Fini?$AA@
CONST	SEGMENT
??_C@_04FODGCLEG@Fini?$AA@ DB 'Fini', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GFGFKGGD@art?2resource?2credits?$AA@
CONST	SEGMENT
??_C@_0BF@GFGFKGGD@art?2resource?2credits?$AA@ DB 'art\resource\credits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COMKCFNP@Save?5Screenshot?$AA@
CONST	SEGMENT
??_C@_0BA@COMKCFNP@Save?5Screenshot?$AA@ DB 'Save Screenshot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GMOPHECK@?2pictures?2?$CK?4tga?$AA@
CONST	SEGMENT
??_C@_0BA@GMOPHECK@?2pictures?2?$CK?4tga?$AA@ DB '\pictures\*.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFEHAODN@?$CFs?2?$CFs?4tga?$AA@
CONST	SEGMENT
??_C@_09MFEHAODN@?$CFs?2?$CFs?4tga?$AA@ DB '%s\%s.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDEAONJP@?5?5?5?$AA@
CONST	SEGMENT
??_C@_03NDEAONJP@?5?5?5?$AA@ DB '   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@
CONST	SEGMENT
??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@ DB '[%s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08IEFAEBKE@?$CFs?2?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_08IEFAEBKE@?$CFs?2?$CFs?4?$CFs?$AA@ DB '%s\%s.%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@
CONST	SEGMENT
??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@ DB '%1ld%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z$0
__unwindtable$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z$0
__unwindtable$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z$0
__unwindtable$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z$0
__unwindtable$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z$0
__unwindtable$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z$0
__unwindtable$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z$0
__unwindtable$?RefreshEventList@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshEventList@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?RefreshEventList@@YAXXZ$1
__ehfuncinfo$?LoadPeopleInfo@@YAXJ@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?LoadPeopleInfo@@YAXJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RefreshEventList@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RefreshEventList@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadPeopleInfo@@YAXJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$13
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -268						; size = 4
_Filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_Path$ = 8						; size = 4
_Name$ = 12						; size = 4
_Ext$ = 16						; size = 4
?DeleteAFile@@YAHPAD00@Z PROC				; DeleteAFile

; 2817 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2818 : 	char Filename[MAX_PATH];
; 2819 : 
; 2820 : 	if(!Name)

	cmp	DWORD PTR _Name$[ebp], 0
	jne	SHORT $LN4@DeleteAFil

; 2821 : 		return(FALSE);

	xor	eax, eax
	jmp	$LN6@DeleteAFil
$LN4@DeleteAFil:

; 2822 : 
; 2823 : 	Filename[0]=0;

	mov	eax, 1
	imul	eax, 0
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN7@DeleteAFil
	jmp	SHORT $LN8@DeleteAFil
$LN7@DeleteAFil:
	call	___report_rangecheckfailure
$LN8@DeleteAFil:
	mov	ecx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _Filename$[ebp+ecx], 0

; 2824 : 
; 2825 : 	if(Path)

	cmp	DWORD PTR _Path$[ebp], 0
	je	SHORT $LN3@DeleteAFil

; 2826 : 	{
; 2827 : 		strcpy(Filename,Path);

	mov	edx, DWORD PTR _Path$[ebp]
	push	edx
	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 2828 : 		strcat(Filename,"\\");

	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	ecx, DWORD PTR _Filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN3@DeleteAFil:

; 2829 : 	}
; 2830 : 	strcat(Filename,Name);

	mov	edx, DWORD PTR _Name$[ebp]
	push	edx
	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 2831 : 	if(Ext)

	cmp	DWORD PTR _Ext$[ebp], 0
	je	SHORT $LN2@DeleteAFil

; 2832 : 	{
; 2833 : 		strcat(Filename,".");

	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	lea	ecx, DWORD PTR _Filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 2834 : 		strcat(Filename,Ext);

	mov	edx, DWORD PTR _Ext$[ebp]
	push	edx
	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN2@DeleteAFil:

; 2835 : 	}
; 2836 : 	if(!CheckSystemFiles(Name,Ext))

	mov	ecx, DWORD PTR _Ext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Name$[ebp]
	push	edx
	call	?CheckSystemFiles@@YAHPAD0@Z		; CheckSystemFiles
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@DeleteAFil

; 2837 : 	{
; 2838 : 		DeleteFile(Filename);

	lea	eax, DWORD PTR _Filename$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteFileA@4

; 2839 : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN6@DeleteAFil
$LN1@DeleteAFil:

; 2840 : 	}
; 2841 : 	return(FALSE);

	xor	eax, eax
$LN6@DeleteAFil:

; 2842 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteAFile@@YAHPAD00@Z ENDP				; DeleteAFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_i$ = -268						; size = 2
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_Name$ = 8						; size = 4
_Ext$ = 12						; size = 4
?CheckSystemFiles@@YAHPAD0@Z PROC			; CheckSystemFiles

; 2798 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2799 : 	char filename[MAX_PATH];
; 2800 : 	short i;
; 2801 : 
; 2802 : 	strcpy(filename,Name);

	mov	eax, DWORD PTR _Name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 2803 : 	strcat(filename,".");

	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 2804 : 	strcat(filename,Ext);

	mov	eax, DWORD PTR _Ext$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 2805 : 
; 2806 : 	i=0;

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
$LN3@CheckSyste:

; 2807 : 	while(DontDeleteList[i])

	movsx	eax, WORD PTR _i$[ebp]
	cmp	DWORD PTR ?DontDeleteList@@3PAPADA[eax*4], 0
	je	SHORT $LN2@CheckSyste

; 2808 : 	{
; 2809 : 		if(!stricmp(DontDeleteList[i],filename))

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?DontDeleteList@@3PAPADA[edx*4]
	push	eax
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@CheckSyste

; 2810 : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN4@CheckSyste
$LN1@CheckSyste:

; 2811 : 		i++;

	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx

; 2812 : 	}

	jmp	SHORT $LN3@CheckSyste
$LN2@CheckSyste:

; 2813 : 	return(FALSE);

	xor	eax, eax
$LN4@CheckSyste:

; 2814 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckSystemFiles@@YAHPAD0@Z ENDP			; CheckSystemFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -372						; size = 4
$T3 = -368						; size = 4
tv1180 = -364						; size = 4
$T4 = -360						; size = 4
$T5 = -356						; size = 4
$T6 = -352						; size = 4
$T7 = -348						; size = 4
$T8 = -344						; size = 4
$T9 = -340						; size = 4
$T10 = -336						; size = 4
$T11 = -332						; size = 4
$T12 = -328						; size = 4
$T13 = -324						; size = 4
$T14 = -320						; size = 4
$T15 = -316						; size = 4
$T16 = -312						; size = 4
$T17 = -308						; size = 4
tv161 = -304						; size = 4
tv697 = -300						; size = 4
$T18 = -296						; size = 4
$T19 = -292						; size = 4
tv851 = -288						; size = 4
$T20 = -284						; size = 4
$T21 = -280						; size = 4
tv505 = -276						; size = 4
_size$ = -272						; size = 4
$T22 = -268						; size = 4
$T23 = -264						; size = 4
$T24 = -260						; size = 4
tv773 = -256						; size = 4
tv316 = -252						; size = 4
tv71 = -248						; size = 4
tv239 = -244						; size = 4
$T25 = -240						; size = 4
$T26 = -236						; size = 4
tv613 = -232						; size = 4
tv1140 = -228						; size = 4
$T27 = -224						; size = 4
$T28 = -220						; size = 4
$T29 = -216						; size = 4
tv1075 = -212						; size = 4
tv424 = -208						; size = 4
$T30 = -204						; size = 4
$T31 = -200						; size = 4
tv1005 = -196						; size = 4
$T32 = -192						; size = 4
$T33 = -188						; size = 4
$T34 = -184						; size = 4
tv935 = -180						; size = 4
$T35 = -176						; size = 4
$T36 = -172						; size = 4
$T37 = -168						; size = 4
$T38 = -164						; size = 4
tv79 = -160						; size = 4
tv145 = -156						; size = 4
_rsc$ = -152						; size = 4
_tit$ = -148						; size = 4
_type$ = -144						; size = 2
_per$ = -140						; size = 4
_res$ = -136						; size = 4
_drawTimer$ = -132					; size = 4
_LanguageID$ = -128					; size = 4
_filedata$ = -124					; size = 4
_leg$ = -120						; size = 4
_center$ = -116						; size = 4
_offset$ = -112						; size = 4
_win$ = -108						; size = 4
_y$ = -104						; size = 4
_txt$ = -100						; size = 4
_strTmp$39 = -96					; size = 80
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_client$ = 8						; size = 4
?LoadPeopleInfo@@YAXJ@Z PROC				; LoadPeopleInfo

; 2479 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadPeopleInfo@@YAXJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2480 : 	C_Window *win=NULL;

	mov	DWORD PTR _win$[ebp], 0

; 2481 : 	char *filedata=NULL;

	mov	DWORD PTR _filedata$[ebp], 0

; 2482 : 	long size=0;

	mov	DWORD PTR _size$[ebp], 0

; 2483 : 	TitleStr *tit=NULL;

	mov	DWORD PTR _tit$[ebp], 0

; 2484 : 	PersonStr *per=NULL;

	mov	DWORD PTR _per$[ebp], 0

; 2485 : 	LegalStr *leg=NULL;

	mov	DWORD PTR _leg$[ebp], 0

; 2486 : 	short type=0;

	xor	eax, eax
	mov	WORD PTR _type$[ebp], ax

; 2487 : 	long offset=0;

	mov	DWORD PTR _offset$[ebp], 0

; 2488 : 	long center=0,y=0;

	mov	DWORD PTR _center$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0

; 2489 : 	long LanguageID=0;

	mov	DWORD PTR _LanguageID$[ebp], 0

; 2490 : 	C_Text *txt=NULL;

	mov	DWORD PTR _txt$[ebp], 0

; 2491 : 	C_TimerHook *drawTimer=NULL;

	mov	DWORD PTR _drawTimer$[ebp], 0

; 2492 : 	C_Resmgr *res=NULL;

	mov	DWORD PTR _res$[ebp], 0

; 2493 : 	FLAT_RSC *rsc=NULL;

	mov	DWORD PTR _rsc$[ebp], 0

; 2494 : 
; 2495 : 	res=new C_Resmgr;

	push	304					; 00000130H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T19[ebp], 0
	je	SHORT $LN24@LoadPeople
	mov	ecx, DWORD PTR $T19[ebp]
	call	??0C_Resmgr@@QAE@XZ			; C_Resmgr::C_Resmgr
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN25@LoadPeople
$LN24@LoadPeople:
	mov	DWORD PTR tv71[ebp], 0
$LN25@LoadPeople:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T16[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T16[ebp]
	mov	DWORD PTR _res$[ebp], edx

; 2496 : 	if(!res)

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN21@LoadPeople

; 2497 : 		return;

	jmp	$LN23@LoadPeople
$LN21@LoadPeople:

; 2498 : 
; 2499 : 	res->Setup(CREDITS_RES,"art\\resource\\credits",gMainParser->GetTokenHash());

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetTokenHash@C_Parser@@QAEPAVC_Hash@@XZ ; C_Parser::GetTokenHash
	push	eax
	push	OFFSET ??_C@_0BF@GFGFKGGD@art?2resource?2credits?$AA@
	push	8647000					; 0083f158H
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Setup@C_Resmgr@@QAEXJPADPAVC_Hash@@@Z	; C_Resmgr::Setup

; 2500 : 	res->LoadData();

	mov	ecx, DWORD PTR _res$[ebp]
	call	?LoadData@C_Resmgr@@QAEXXZ		; C_Resmgr::LoadData

; 2501 : 
; 2502 : 	switch(gLangIDNum)

	mov	eax, DWORD PTR ?gLangIDNum@@3HA		; gLangIDNum
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 4
	ja	SHORT $LN13@LoadPeople
	mov	edx, DWORD PTR tv79[ebp]
	jmp	DWORD PTR $LN83@LoadPeople[edx*4]
$LN18@LoadPeople:

; 2503 : 	{
; 2504 : 		case F4LANG_GERMAN:
; 2505 : 			LanguageID=GERMAN_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647003	; 0083f15bH

; 2506 : 			break;

	jmp	SHORT $LN19@LoadPeople
$LN17@LoadPeople:

; 2507 : 		case F4LANG_FRENCH:
; 2508 : 			LanguageID=FRENCH_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647002	; 0083f15aH

; 2509 : 			break;

	jmp	SHORT $LN19@LoadPeople
$LN16@LoadPeople:

; 2510 : 		case F4LANG_SPANISH:
; 2511 : 			LanguageID=SPANISH_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647004	; 0083f15cH

; 2512 : 			break;

	jmp	SHORT $LN19@LoadPeople
$LN15@LoadPeople:

; 2513 : 		case F4LANG_ITALIAN:
; 2514 : 			LanguageID=ITALIAN_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647006	; 0083f15eH

; 2515 : 			break;

	jmp	SHORT $LN19@LoadPeople
$LN14@LoadPeople:

; 2516 : 		case F4LANG_PORTUGESE:
; 2517 : 			LanguageID=PORTUGUESE_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647005	; 0083f15dH

; 2518 : 			break;

	jmp	SHORT $LN19@LoadPeople
$LN13@LoadPeople:

; 2519 : 		case F4LANG_ENGLISH:
; 2520 : 		case F4LANG_UK:
; 2521 : 		default:
; 2522 : 			LanguageID=ENGLISH_CREDITS;

	mov	DWORD PTR _LanguageID$[ebp], 8647001	; 0083f159H
$LN19@LoadPeople:

; 2523 : 			break;
; 2524 : 	}
; 2525 : 	rsc=(FLAT_RSC*)res->Find(LanguageID);

	mov	eax, DWORD PTR _LanguageID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 2526 : 	if(!rsc)

	cmp	DWORD PTR _rsc$[ebp], 0
	jne	SHORT $LN12@LoadPeople

; 2527 : 		return;

	jmp	$LN23@LoadPeople
$LN12@LoadPeople:

; 2528 : 
; 2529 : 	filedata=(char*)rsc->GetData();

	mov	ecx, DWORD PTR _rsc$[ebp]
	call	?GetData@FLAT_RSC@@QAEPAXXZ		; FLAT_RSC::GetData
	mov	DWORD PTR _filedata$[ebp], eax

; 2530 : 	size=rsc->Header->size;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _size$[ebp], eax

; 2531 : 
; 2532 : 	win=gMainHandler->FindWindow(EXIT_WIN);

	push	19550					; 00004c5eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2533 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN11@LoadPeople

; 2534 : 	{
; 2535 : 		center=((win->ClientArea_[client].right - win->ClientArea_[client].left)/2);

	mov	ecx, DWORD PTR _client$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _client$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [eax+ecx+176]
	sub	eax, DWORD PTR [esi+edx+168]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _center$[ebp], eax

; 2536 : 
; 2537 : 		y=win->GetH()/2;

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetH@C_Window@@QAEFXZ			; C_Window::GetH
	cwde
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _y$[ebp], eax

; 2538 : 		offset=0;

	mov	DWORD PTR _offset$[ebp], 0
$LN10@LoadPeople:

; 2539 : 
; 2540 : //JAM 05Oct03
; 2541 : #if 0
; 2542 : 	FILE *file;
; 2543 : 	char strLine[256];
; 2544 : 	char strID[256];
; 2545 : 	char strVal[256];
; 2546 : 	int font;
; 2547 : 
; 2548 : 	file = fopen("art\\resource\\credits.txt","r");
; 2549 : 	if(file)
; 2550 : 	{
; 2551 : 		while(fgets(strLine,sizeof(strLine)/sizeof(strLine[0]),file))
; 2552 : 		{
; 2553 : 			ZeroMemory(strVal,sizeof(strVal));
; 2554 : 
; 2555 : 			if(sscanf(strLine,"FONT %d",&font))
; 2556 : 				continue;
; 2557 : 
; 2558 : 			sscanf(strLine,"%s %[^~]",strID,strVal);
; 2559 : 
; 2560 : 			txt=new C_Text;
; 2561 : 			txt->Setup(C_DONT_CARE,0);
; 2562 : 			txt->SetFont(font);
; 2563 : 			txt->SetFGColor(0xffffff);
; 2564 : 			txt->SetFlagBitOn(C_BIT_HCENTER);
; 2565 : 			txt->SetClient(static_cast<short>(client));
; 2566 : 			txt->SetXY(center,y);
; 2567 : 			txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strVal)));
; 2568 : 			win->AddControl(txt);
; 2569 : 			y+=gFontList->GetHeight(font)+10;
; 2570 : 		}
; 2571 : 
; 2572 : 		fclose(file);
; 2573 : 	}
; 2574 : 	//JAM
; 2575 : #else
; 2576 : 		while(offset < size)

	mov	ecx, DWORD PTR _offset$[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jge	$LN9@LoadPeople

; 2577 : 		{
; 2578 : 			type=*((short*)&filedata[offset]);

	mov	edx, DWORD PTR _filedata$[ebp]
	add	edx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR _type$[ebp], ax

; 2579 : 			offset+=sizeof(short);

	mov	ecx, DWORD PTR _offset$[ebp]
	add	ecx, 2
	mov	DWORD PTR _offset$[ebp], ecx

; 2580 : 			switch(type)

	movsx	edx, WORD PTR _type$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR tv145[ebp]
	sub	eax, 2
	mov	DWORD PTR tv145[ebp], eax
	cmp	DWORD PTR tv145[ebp], 4
	ja	$LN7@LoadPeople
	mov	ecx, DWORD PTR tv145[ebp]
	jmp	DWORD PTR $LN84@LoadPeople[ecx*4]
$LN6@LoadPeople:

; 2581 : 			{
; 2582 : 				case _TITLE_:
; 2583 : 					tit=(TitleStr*)&filedata[offset];

	mov	edx, DWORD PTR _filedata$[ebp]
	add	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _tit$[ebp], edx

; 2584 : 					DecryptBuffer(0x79,(uchar*)&filedata[offset],sizeof(TitleStr));

	push	60					; 0000003cH
	mov	eax, DWORD PTR _filedata$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	push	eax
	push	121					; 00000079H
	call	?DecryptBuffer@@YAXEPAEJ@Z		; DecryptBuffer
	add	esp, 12					; 0000000cH

; 2585 : 					offset+=sizeof(TitleStr);

	mov	ecx, DWORD PTR _offset$[ebp]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR _offset$[ebp], ecx

; 2586 : 					txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T35[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T35[ebp], 0
	je	SHORT $LN26@LoadPeople
	mov	ecx, DWORD PTR $T35[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $LN27@LoadPeople
$LN26@LoadPeople:
	mov	DWORD PTR tv161[ebp], 0
$LN27@LoadPeople:
	mov	edx, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2587 : 					txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2588 : 					txt->SetFont(tit->FontID);

	mov	ecx, DWORD PTR _tit$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2589 : 					txt->SetFGColor(tit->ColorID);

	mov	ecx, DWORD PTR _tit$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2590 : 					txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2591 : 					txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2592 : 					txt->SetXY(center,y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _center$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2593 : 					txt->SetText(gStringMgr->GetText(gStringMgr->AddText(tit->Title)));

	mov	ecx, DWORD PTR _tit$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2594 : 					win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2595 : 					y+=gFontList->GetHeight(tit->FontID)+10;

	mov	ecx, DWORD PTR _tit$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax+10]
	mov	DWORD PTR _y$[ebp], edx

; 2596 : 					break;

	jmp	$LN7@LoadPeople
$LN5@LoadPeople:

; 2597 : 				case _NAME_:
; 2598 : 					per=(PersonStr*)&filedata[offset];

	mov	eax, DWORD PTR _filedata$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _per$[ebp], eax

; 2599 : 					DecryptBuffer(0x79,(uchar*)&filedata[offset],sizeof(PersonStr));

	push	208					; 000000d0H
	mov	ecx, DWORD PTR _filedata$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	push	121					; 00000079H
	call	?DecryptBuffer@@YAXEPAEJ@Z		; DecryptBuffer
	add	esp, 12					; 0000000cH

; 2600 : 					offset+=sizeof(PersonStr);

	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, 208				; 000000d0H
	mov	DWORD PTR _offset$[ebp], edx

; 2601 : 					txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T34[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T34[ebp], 0
	je	SHORT $LN28@LoadPeople
	mov	ecx, DWORD PTR $T34[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv239[ebp], eax
	jmp	SHORT $LN29@LoadPeople
$LN28@LoadPeople:
	mov	DWORD PTR tv239[ebp], 0
$LN29@LoadPeople:
	mov	eax, DWORD PTR tv239[ebp]
	mov	DWORD PTR $T14[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T14[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2602 : 					txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2603 : 					txt->SetFont(per->FontID);

	mov	eax, DWORD PTR _per$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 2604 : 					txt->SetFGColor(per->ColorID);

	mov	eax, DWORD PTR _per$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2605 : #if 0
; 2606 : 					if(per->Job[0])
; 2607 : 					{
; 2608 : 						txt->SetFlagBitOn(C_BIT_RIGHT);
; 2609 : 						txt->SetXY(center-10,y);
; 2610 : 					}
; 2611 : 					else
; 2612 : 					{
; 2613 : #endif
; 2614 : 						txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2615 : 						txt->SetXY(center,y);

	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _center$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 2616 : #if 0
; 2617 : 					}
; 2618 : #endif
; 2619 : 					txt->SetClient(static_cast<short>(client));

	movzx	eax, WORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2620 : 					txt->SetText(gStringMgr->GetText(gStringMgr->AddText(per->Name)));

	mov	ecx, DWORD PTR _per$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2621 : 					win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2622 : #if 0
; 2623 : 					if(per->Job[0])
; 2624 : 					{
; 2625 : 						txt=new C_Text;
; 2626 : 						txt->Setup(C_DONT_CARE,0);
; 2627 : 						txt->SetFont(per->FontID);
; 2628 : 						txt->SetFGColor(per->ColorID);
; 2629 : 						txt->SetFlagBitOn(C_BIT_LEFT);
; 2630 : 						txt->SetClient(client);
; 2631 : 						txt->SetXY(center+10,y);
; 2632 : 						txt->SetText(gStringMgr->GetText(gStringMgr->AddText(per->Job)));
; 2633 : 						win->AddControl(txt);
; 2634 : 					}
; 2635 : #endif
; 2636 : 					y+=gFontList->GetHeight(per->FontID);

	mov	ecx, DWORD PTR _per$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2637 : 					break;

	jmp	$LN7@LoadPeople
$LN4@LoadPeople:

; 2638 : 				case _LEGAL_:
; 2639 : 					leg=(LegalStr*)&filedata[offset];

	mov	eax, DWORD PTR _filedata$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _leg$[ebp], eax

; 2640 : 					DecryptBuffer(0x79,(uchar*)&filedata[offset],sizeof(LegalStr));

	push	108					; 0000006cH
	mov	ecx, DWORD PTR _filedata$[ebp]
	add	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	push	121					; 00000079H
	call	?DecryptBuffer@@YAXEPAEJ@Z		; DecryptBuffer
	add	esp, 12					; 0000000cH

; 2641 : 					offset+=sizeof(LegalStr);

	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, 108				; 0000006cH
	mov	DWORD PTR _offset$[ebp], edx

; 2642 : 					txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T32[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T32[ebp], 0
	je	SHORT $LN30@LoadPeople
	mov	ecx, DWORD PTR $T32[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv316[ebp], eax
	jmp	SHORT $LN31@LoadPeople
$LN30@LoadPeople:
	mov	DWORD PTR tv316[ebp], 0
$LN31@LoadPeople:
	mov	eax, DWORD PTR tv316[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2643 : 					txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2644 : 					txt->SetFont(leg->FontID);

	mov	eax, DWORD PTR _leg$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 2645 : 					txt->SetFGColor(leg->ColorID);

	mov	eax, DWORD PTR _leg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2646 : 					txt->SetFlagBitOn(C_BIT_LEFT);

	push	32					; 00000020H
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2647 : 					txt->SetClient(static_cast<short>(client));

	movzx	eax, WORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2648 : 					txt->SetXY(0,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 2649 : 					txt->SetText(gStringMgr->GetText(gStringMgr->AddText(leg->Legal)));

	mov	eax, DWORD PTR _leg$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2650 : 					win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2651 : 					y+=gFontList->GetHeight(leg->FontID);

	mov	edx, DWORD PTR _leg$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2652 : 					break;

	jmp	SHORT $LN7@LoadPeople
$LN3@LoadPeople:

; 2653 : 				case _BLANK_:
; 2654 : 					y+=40;

	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, 40					; 00000028H
	mov	DWORD PTR _y$[ebp], ecx
$LN7@LoadPeople:

; 2655 : 					break;
; 2656 : 			}
; 2657 : 		}

	jmp	$LN10@LoadPeople
$LN9@LoadPeople:

; 2658 : 		y+=win->GetH()/2;

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetH@C_Window@@QAEFXZ			; C_Window::GetH
	cwde
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2659 : 
; 2660 : #ifdef _DO_CREDITS_HACK	// OW
; 2661 : char strTmp[80];
; 2662 : strTmp[0x0] = 'D'; strTmp[0x1] = 'i'; strTmp[0x2] = 'r'; strTmp[0x3] = 'e'; strTmp[0x4] = 'c'; strTmp[0x5] = 't'; strTmp[0x6] = 'X'; strTmp[0x7] = ' ';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 68	; 00000044H
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 105	; 00000069H
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 114	; 00000072H
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 101	; 00000065H
	mov	eax, 1
	shl	eax, 2
	mov	BYTE PTR _strTmp$39[ebp+eax], 99	; 00000063H
	mov	ecx, 1
	imul	ecx, 5
	mov	BYTE PTR _strTmp$39[ebp+ecx], 116	; 00000074H
	mov	edx, 1
	imul	edx, 6
	mov	BYTE PTR _strTmp$39[ebp+edx], 88	; 00000058H
	mov	eax, 1
	imul	eax, 7
	mov	BYTE PTR _strTmp$39[ebp+eax], 32	; 00000020H

; 2663 : strTmp[0x8] = '7'; strTmp[0x9] = ' '; strTmp[0xa] = 'P'; strTmp[0xb] = 'o'; strTmp[0xc] = 'r'; strTmp[0xd] = 't'; strTmp[0xe] = '\0';

	mov	ecx, 1
	shl	ecx, 3
	mov	BYTE PTR _strTmp$39[ebp+ecx], 55	; 00000037H
	mov	edx, 1
	imul	edx, 9
	mov	BYTE PTR _strTmp$39[ebp+edx], 32	; 00000020H
	mov	eax, 1
	imul	eax, 10					; 0000000aH
	mov	BYTE PTR _strTmp$39[ebp+eax], 80	; 00000050H
	mov	ecx, 1
	imul	ecx, 11					; 0000000bH
	mov	BYTE PTR _strTmp$39[ebp+ecx], 111	; 0000006fH
	mov	edx, 1
	imul	edx, 12					; 0000000cH
	mov	BYTE PTR _strTmp$39[ebp+edx], 114	; 00000072H
	mov	eax, 1
	imul	eax, 13					; 0000000dH
	mov	BYTE PTR _strTmp$39[ebp+eax], 116	; 00000074H
	mov	ecx, 1
	imul	ecx, 14					; 0000000eH
	mov	DWORD PTR $T31[ebp], ecx
	cmp	DWORD PTR $T31[ebp], 80			; 00000050H
	jae	SHORT $LN32@LoadPeople
	jmp	SHORT $LN33@LoadPeople
$LN32@LoadPeople:
	call	___report_rangecheckfailure
$LN33@LoadPeople:
	mov	edx, DWORD PTR $T31[ebp]
	mov	BYTE PTR _strTmp$39[ebp+edx], 0

; 2664 : 
; 2665 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T24[ebp], 0
	je	SHORT $LN34@LoadPeople
	mov	ecx, DWORD PTR $T24[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv424[ebp], eax
	jmp	SHORT $LN35@LoadPeople
$LN34@LoadPeople:
	mov	DWORD PTR tv424[ebp], 0
$LN35@LoadPeople:
	mov	eax, DWORD PTR tv424[ebp]
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T12[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2666 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2667 : txt->SetFont(0xd);

	push	13					; 0000000dH
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2668 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2669 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2670 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2671 : txt->SetXY(center,y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _center$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2672 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	ecx, DWORD PTR _strTmp$39[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2673 : win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2674 : y+=gFontList->GetHeight(0xd)+10;

	push	13					; 0000000dH
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax+10]
	mov	DWORD PTR _y$[ebp], edx

; 2675 : 
; 2676 : // add loke and fmbls
; 2677 : 
; 2678 : strTmp[0x0] = 'e'; strTmp[0x1] = 'R'; strTmp[0x2] = 'A'; strTmp[0x3] = 'Z'; strTmp[0x4] = 'O'; strTmp[0x5] = 'R'; strTmp[0x6] = '\0';

	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 101	; 00000065H
	mov	ecx, 1
	shl	ecx, 0
	mov	BYTE PTR _strTmp$39[ebp+ecx], 82	; 00000052H
	mov	edx, 1
	shl	edx, 1
	mov	BYTE PTR _strTmp$39[ebp+edx], 65	; 00000041H
	mov	eax, 1
	imul	eax, 3
	mov	BYTE PTR _strTmp$39[ebp+eax], 90	; 0000005aH
	mov	ecx, 1
	shl	ecx, 2
	mov	BYTE PTR _strTmp$39[ebp+ecx], 79	; 0000004fH
	mov	edx, 1
	imul	edx, 5
	mov	BYTE PTR _strTmp$39[ebp+edx], 82	; 00000052H
	mov	eax, 1
	imul	eax, 6
	mov	DWORD PTR $T22[ebp], eax
	cmp	DWORD PTR $T22[ebp], 80			; 00000050H
	jae	SHORT $LN36@LoadPeople
	jmp	SHORT $LN37@LoadPeople
$LN36@LoadPeople:
	call	___report_rangecheckfailure
$LN37@LoadPeople:
	mov	ecx, DWORD PTR $T22[ebp]
	mov	BYTE PTR _strTmp$39[ebp+ecx], 0

; 2679 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T29[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T29[ebp], 0
	je	SHORT $LN38@LoadPeople
	mov	ecx, DWORD PTR $T29[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv505[ebp], eax
	jmp	SHORT $LN39@LoadPeople
$LN38@LoadPeople:
	mov	DWORD PTR tv505[ebp], 0
$LN39@LoadPeople:
	mov	edx, DWORD PTR tv505[ebp]
	mov	DWORD PTR $T6[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T6[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2680 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2681 : txt->SetFont(1);

	push	1
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2682 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2683 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2684 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2685 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2686 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2687 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2688 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2689 : 
; 2690 : strTmp[0x0] = 'M'; strTmp[0x1] = 'i'; strTmp[0x2] = 'r'; strTmp[0x3] = 'v'; strTmp[0x4] = '\0';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 77	; 0000004dH
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 105	; 00000069H
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 114	; 00000072H
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 118	; 00000076H
	mov	eax, 1
	shl	eax, 2
	mov	DWORD PTR $T27[ebp], eax
	cmp	DWORD PTR $T27[ebp], 80			; 00000050H
	jae	SHORT $LN40@LoadPeople
	jmp	SHORT $LN41@LoadPeople
$LN40@LoadPeople:
	call	___report_rangecheckfailure
$LN41@LoadPeople:
	mov	ecx, DWORD PTR $T27[ebp]
	mov	BYTE PTR _strTmp$39[ebp+ecx], 0

; 2691 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T20[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	cmp	DWORD PTR $T20[ebp], 0
	je	SHORT $LN42@LoadPeople
	mov	ecx, DWORD PTR $T20[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv613[ebp], eax
	jmp	SHORT $LN43@LoadPeople
$LN42@LoadPeople:
	mov	DWORD PTR tv613[ebp], 0
$LN43@LoadPeople:
	mov	edx, DWORD PTR tv613[ebp]
	mov	DWORD PTR $T10[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2692 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2693 : txt->SetFont(1);

	push	1
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2694 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2695 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2696 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2697 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2698 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2699 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2700 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2701 : 
; 2702 : strTmp[0x0] = 'P'; strTmp[0x1] = 'a'; strTmp[0x2] = 'u'; strTmp[0x3] = 'l'; strTmp[0x4] = '1'; strTmp[0x5] = '2'; strTmp[0x6] = '1'; strTmp[0x7] = '2'; strTmp[0x8] = '\0';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 80	; 00000050H
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 97	; 00000061H
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 117	; 00000075H
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 108	; 0000006cH
	mov	eax, 1
	shl	eax, 2
	mov	BYTE PTR _strTmp$39[ebp+eax], 49	; 00000031H
	mov	ecx, 1
	imul	ecx, 5
	mov	BYTE PTR _strTmp$39[ebp+ecx], 50	; 00000032H
	mov	edx, 1
	imul	edx, 6
	mov	BYTE PTR _strTmp$39[ebp+edx], 49	; 00000031H
	mov	eax, 1
	imul	eax, 7
	mov	BYTE PTR _strTmp$39[ebp+eax], 50	; 00000032H
	mov	ecx, 1
	shl	ecx, 3
	mov	DWORD PTR $T38[ebp], ecx
	cmp	DWORD PTR $T38[ebp], 80			; 00000050H
	jae	SHORT $LN44@LoadPeople
	jmp	SHORT $LN45@LoadPeople
$LN44@LoadPeople:
	call	___report_rangecheckfailure
$LN45@LoadPeople:
	mov	edx, DWORD PTR $T38[ebp]
	mov	BYTE PTR _strTmp$39[ebp+edx], 0

; 2703 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	cmp	DWORD PTR $T25[ebp], 0
	je	SHORT $LN46@LoadPeople
	mov	ecx, DWORD PTR $T25[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv697[ebp], eax
	jmp	SHORT $LN47@LoadPeople
$LN46@LoadPeople:
	mov	DWORD PTR tv697[ebp], 0
$LN47@LoadPeople:
	mov	eax, DWORD PTR tv697[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2704 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2705 : txt->SetFont(1);

	push	1
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2706 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2707 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2708 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2709 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2710 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2711 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2712 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2713 : 
; 2714 : strTmp[0x0] = 'L'; strTmp[0x1] = 'o'; strTmp[0x2] = 'k'; strTmp[0x3] = 'e'; strTmp[0x4] = '\0';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 76	; 0000004cH
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 111	; 0000006fH
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 107	; 0000006bH
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 101	; 00000065H
	mov	eax, 1
	shl	eax, 2
	mov	DWORD PTR $T17[ebp], eax
	cmp	DWORD PTR $T17[ebp], 80			; 00000050H
	jae	SHORT $LN48@LoadPeople
	jmp	SHORT $LN49@LoadPeople
$LN48@LoadPeople:
	call	___report_rangecheckfailure
$LN49@LoadPeople:
	mov	ecx, DWORD PTR $T17[ebp]
	mov	BYTE PTR _strTmp$39[ebp+ecx], 0

; 2715 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T21[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	cmp	DWORD PTR $T21[ebp], 0
	je	SHORT $LN50@LoadPeople
	mov	ecx, DWORD PTR $T21[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv773[ebp], eax
	jmp	SHORT $LN51@LoadPeople
$LN50@LoadPeople:
	mov	DWORD PTR tv773[ebp], 0
$LN51@LoadPeople:
	mov	edx, DWORD PTR tv773[ebp]
	mov	DWORD PTR $T8[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2716 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2717 : txt->SetFont(1);

	push	1
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2718 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2719 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2720 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2721 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2722 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2723 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2724 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2725 : 
; 2726 : strTmp[0x0] = 'F'; strTmp[0x1] = 'm'; strTmp[0x2] = 'b'; strTmp[0x3] = 'l'; strTmp[0x4] = 's'; strTmp[0x5] = '\0';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 70	; 00000046H
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 109	; 0000006dH
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 98	; 00000062H
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 108	; 0000006cH
	mov	eax, 1
	shl	eax, 2
	mov	BYTE PTR _strTmp$39[ebp+eax], 115	; 00000073H
	mov	ecx, 1
	imul	ecx, 5
	mov	DWORD PTR $T18[ebp], ecx
	cmp	DWORD PTR $T18[ebp], 80			; 00000050H
	jae	SHORT $LN52@LoadPeople
	jmp	SHORT $LN53@LoadPeople
$LN52@LoadPeople:
	call	___report_rangecheckfailure
$LN53@LoadPeople:
	mov	edx, DWORD PTR $T18[ebp]
	mov	BYTE PTR _strTmp$39[ebp+edx], 0

; 2727 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T23[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	cmp	DWORD PTR $T23[ebp], 0
	je	SHORT $LN54@LoadPeople
	mov	ecx, DWORD PTR $T23[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv851[ebp], eax
	jmp	SHORT $LN55@LoadPeople
$LN54@LoadPeople:
	mov	DWORD PTR tv851[ebp], 0
$LN55@LoadPeople:
	mov	eax, DWORD PTR tv851[ebp]
	mov	DWORD PTR $T15[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T15[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2728 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2729 : txt->SetFont(1);

	push	1
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2730 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2731 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2732 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2733 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2734 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2735 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2736 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2737 : 
; 2738 : strTmp[0x0] = 'L'; strTmp[0x1] = 'a'; strTmp[0x2] = 'w'; strTmp[0x3] = 'n'; strTmp[0x4] = 'd'; strTmp[0x5] = 'a'; strTmp[0x6] = 'r'; strTmp[0x7] = 'd'; strTmp[0x8] = '\0';

	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR _strTmp$39[ebp+edx], 76	; 0000004cH
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _strTmp$39[ebp+eax], 97	; 00000061H
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _strTmp$39[ebp+ecx], 119	; 00000077H
	mov	edx, 1
	imul	edx, 3
	mov	BYTE PTR _strTmp$39[ebp+edx], 110	; 0000006eH
	mov	eax, 1
	shl	eax, 2
	mov	BYTE PTR _strTmp$39[ebp+eax], 100	; 00000064H
	mov	ecx, 1
	imul	ecx, 5
	mov	BYTE PTR _strTmp$39[ebp+ecx], 97	; 00000061H
	mov	edx, 1
	imul	edx, 6
	mov	BYTE PTR _strTmp$39[ebp+edx], 114	; 00000072H
	mov	eax, 1
	imul	eax, 7
	mov	BYTE PTR _strTmp$39[ebp+eax], 100	; 00000064H
	mov	ecx, 1
	shl	ecx, 3
	mov	DWORD PTR $T37[ebp], ecx
	cmp	DWORD PTR $T37[ebp], 80			; 00000050H
	jae	SHORT $LN56@LoadPeople
	jmp	SHORT $LN57@LoadPeople
$LN56@LoadPeople:
	call	___report_rangecheckfailure
$LN57@LoadPeople:
	mov	edx, DWORD PTR $T37[ebp]
	mov	BYTE PTR _strTmp$39[ebp+edx], 0

; 2739 : txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T36[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	cmp	DWORD PTR $T36[ebp], 0
	je	SHORT $LN58@LoadPeople
	mov	ecx, DWORD PTR $T36[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv935[ebp], eax
	jmp	SHORT $LN59@LoadPeople
$LN58@LoadPeople:
	mov	DWORD PTR tv935[ebp], 0
$LN59@LoadPeople:
	mov	eax, DWORD PTR tv935[ebp]
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T13[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 2740 : txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 2741 : txt->SetFont(1);

	push	1
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2742 : txt->SetFGColor(0xffffff);

	push	16777215				; 00ffffffH
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2743 : txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2744 : txt->SetXY(center,y);

	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _center$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2745 : txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2746 : txt->SetText(gStringMgr->GetText(gStringMgr->AddText(strTmp)));

	lea	edx, DWORD PTR _strTmp$39[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2747 : win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2748 : y+=gFontList->GetHeight(1);

	push	1
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2749 : #endif
; 2750 : #endif
; 2751 : //JAM
; 2752 : 
; 2753 : 		y+=win->GetH()/2;

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetH@C_Window@@QAEFXZ			; C_Window::GetH
	cwde
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2754 : 
; 2755 : 		txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T33[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	cmp	DWORD PTR $T33[ebp], 0
	je	SHORT $LN60@LoadPeople
	mov	ecx, DWORD PTR $T33[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv1005[ebp], eax
	jmp	SHORT $LN61@LoadPeople
$LN60@LoadPeople:
	mov	DWORD PTR tv1005[ebp], 0
$LN61@LoadPeople:
	mov	edx, DWORD PTR tv1005[ebp]
	mov	DWORD PTR $T11[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2756 : 		txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2757 : 		if(leg)

	cmp	DWORD PTR _leg$[ebp], 0
	je	SHORT $LN2@LoadPeople

; 2758 : 		{
; 2759 : 			txt->SetFont(leg->FontID);

	mov	ecx, DWORD PTR _leg$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2760 : 			txt->SetFGColor(leg->ColorID);

	mov	ecx, DWORD PTR _leg$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor
$LN2@LoadPeople:

; 2761 : 		}
; 2762 : 		txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2763 : 		txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2764 : 		txt->SetXY(center,y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _center$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2765 : 		txt->SetText(gStringMgr->GetText(gStringMgr->AddText("Fini")));

	push	OFFSET ??_C@_04FODGCLEG@Fini?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2766 : 		win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2767 : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 2768 : 		y+=win->GetH()/2;

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetH@C_Window@@QAEFXZ			; C_Window::GetH
	cwde
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax

; 2769 : 		txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	cmp	DWORD PTR $T30[ebp], 0
	je	SHORT $LN62@LoadPeople
	mov	ecx, DWORD PTR $T30[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv1075[ebp], eax
	jmp	SHORT $LN63@LoadPeople
$LN62@LoadPeople:
	mov	DWORD PTR tv1075[ebp], 0
$LN63@LoadPeople:
	mov	edx, DWORD PTR tv1075[ebp]
	mov	DWORD PTR $T9[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T9[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 2770 : 		txt->Setup(C_DONT_CARE,0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2771 : 		if(leg)

	cmp	DWORD PTR _leg$[ebp], 0
	je	SHORT $LN1@LoadPeople

; 2772 : 		{
; 2773 : 			txt->SetFont(leg->FontID);

	mov	ecx, DWORD PTR _leg$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2774 : 			txt->SetFGColor(leg->ColorID);

	mov	ecx, DWORD PTR _leg$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor
$LN1@LoadPeople:

; 2775 : 		}
; 2776 : 		txt->SetFlagBitOn(C_BIT_HCENTER);

	push	512					; 00000200H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2777 : 		txt->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2778 : 		txt->SetXY(center,y);

	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _center$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2779 : 		txt->SetText(gStringMgr->GetText(gStringMgr->AddText("")));

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2780 : 		win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2781 : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 2782 : 
; 2783 : 		drawTimer = new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T28[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	cmp	DWORD PTR $T28[ebp], 0
	je	SHORT $LN64@LoadPeople
	mov	ecx, DWORD PTR $T28[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv1140[ebp], eax
	jmp	SHORT $LN65@LoadPeople
$LN64@LoadPeople:
	mov	DWORD PTR tv1140[ebp], 0
$LN65@LoadPeople:
	mov	edx, DWORD PTR tv1140[ebp]
	mov	DWORD PTR $T7[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T7[ebp]
	mov	DWORD PTR _drawTimer$[ebp], eax

; 2784 : 		drawTimer->Setup( C_DONT_CARE,C_TYPE_NORMAL );

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _drawTimer$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 2785 : 		drawTimer->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _drawTimer$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2786 : 		drawTimer->SetUpdateCallback(ScrollTimerCB);

	push	OFFSET ?ScrollTimerCB@@YAXJFPAVC_Base@@@Z ; ScrollTimerCB
	mov	ecx, DWORD PTR _drawTimer$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 2787 : 		drawTimer->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _drawTimer$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 2788 : 		drawTimer->SetUserNumber(0,(win->GetH()-5)-y);

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetH@C_Window@@QAEFXZ			; C_Window::GetH
	movsx	edx, ax
	sub	edx, 5
	sub	edx, DWORD PTR _y$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _drawTimer$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2789 : 		win->AddControl( drawTimer );

	mov	eax, DWORD PTR _drawTimer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN11@LoadPeople:

; 2790 : 	}
; 2791 : 	res->Cleanup();

	mov	ecx, DWORD PTR _res$[ebp]
	call	?Cleanup@C_Resmgr@@QAEXXZ		; C_Resmgr::Cleanup

; 2792 : 	delete res;

	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T26[ebp], edx
	cmp	DWORD PTR $T26[ebp], 0
	je	SHORT $LN66@LoadPeople
	push	1
	mov	ecx, DWORD PTR $T26[ebp]
	call	??_GC_Resmgr@@QAEPAXI@Z
	mov	DWORD PTR tv1180[ebp], eax
	jmp	SHORT $LN23@LoadPeople
$LN66@LoadPeople:
	mov	DWORD PTR tv1180[ebp], 0
$LN23@LoadPeople:

; 2793 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN83@LoadPeople:
	DD	$LN18@LoadPeople
	DD	$LN17@LoadPeople
	DD	$LN16@LoadPeople
	DD	$LN15@LoadPeople
	DD	$LN14@LoadPeople
$LN84@LoadPeople:
	DD	$LN6@LoadPeople
	DD	$LN5@LoadPeople
	DD	$LN4@LoadPeople
	DD	$LN7@LoadPeople
	DD	$LN3@LoadPeople
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$0:
	mov	eax, DWORD PTR $T19[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$1:
	mov	eax, DWORD PTR $T35[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$2:
	mov	eax, DWORD PTR $T34[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$3:
	mov	eax, DWORD PTR $T32[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$4:
	mov	eax, DWORD PTR $T24[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$5:
	mov	eax, DWORD PTR $T29[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$6:
	mov	eax, DWORD PTR $T20[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$7:
	mov	eax, DWORD PTR $T25[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$8:
	mov	eax, DWORD PTR $T21[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$9:
	mov	eax, DWORD PTR $T23[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$10:
	mov	eax, DWORD PTR $T36[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$11:
	mov	eax, DWORD PTR $T33[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$12:
	mov	eax, DWORD PTR $T30[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPeopleInfo@@YAXJ@Z$13:
	mov	eax, DWORD PTR $T28[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadPeopleInfo@@YAXJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-368]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadPeopleInfo@@YAXJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadPeopleInfo@@YAXJ@Z ENDP				; LoadPeopleInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
tv83 = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_base$ = 16						; size = 4
?ScrollTimerCB@@YAXJFPAVC_Base@@@Z PROC			; ScrollTimerCB

; 2462 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 2463 : 	C_Window *win;
; 2464 : 	if(!base)

	cmp	DWORD PTR _base$[ebp], 0
	jne	SHORT $LN3@ScrollTime

; 2465 : 		return;

	jmp	SHORT $LN4@ScrollTime
$LN3@ScrollTime:

; 2466 : 
; 2467 : 	win=base->Parent_;

	mov	eax, DWORD PTR _base$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _win$[ebp], ecx

; 2468 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@ScrollTime

; 2469 : 	{
; 2470 : 		if(win->VY_[base->GetClient()] > base->GetUserNumber(0))

	mov	ecx, DWORD PTR _base$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	push	0
	mov	ecx, DWORD PTR _base$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	edx, DWORD PTR _win$[ebp]
	cmp	DWORD PTR [edx+esi*4+512], eax
	jle	SHORT $LN4@ScrollTime

; 2471 : 		{
; 2472 : 			win->VY_[base->GetClient()]-=2;

	mov	ecx, DWORD PTR _base$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	mov	ecx, DWORD PTR _win$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+512]
	mov	DWORD PTR tv83[ebp], edx
	mov	eax, DWORD PTR tv83[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 2
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR [edx], ecx

; 2473 : 			win->RefreshClient(base->GetClient());

	mov	ecx, DWORD PTR _base$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@ScrollTime:

; 2474 : 		}
; 2475 : 	}
; 2476 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?ScrollTimerCB@@YAXJFPAVC_Base@@@Z ENDP			; ScrollTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_xrlen$ = -20						; size = 4
_idx$ = -16						; size = 4
_i$ = -12						; size = 4
_ptr$ = -8						; size = 4
_nextkey$ = -1						; size = 1
_startkey$ = 8						; size = 1
_buffer$ = 12						; size = 4
_length$ = 16						; size = 4
?DecryptBuffer@@YAXEPAEJ@Z PROC				; DecryptBuffer

; 2440 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2441 : 	long i,xrlen,idx;
; 2442 : 	uchar *ptr;
; 2443 : 	uchar nextkey;
; 2444 : 
; 2445 : 	if(!buffer || length <= 0)

	cmp	DWORD PTR _buffer$[ebp], 0
	je	SHORT $LN4@DecryptBuf
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN5@DecryptBuf
$LN4@DecryptBuf:

; 2446 : 		return;

	jmp	$LN6@DecryptBuf
$LN5@DecryptBuf:

; 2447 : 
; 2448 : 	idx=0;

	mov	DWORD PTR _idx$[ebp], 0

; 2449 : 	xrlen=strlen(MasterXOR);

	push	OFFSET ?MasterXOR@@3PADA		; MasterXOR
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _xrlen$[ebp], eax

; 2450 : 
; 2451 : 	ptr=buffer;

	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 2452 : 	for(i=0;i<length;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@DecryptBuf
$LN2@DecryptBuf:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@DecryptBuf:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _length$[ebp]
	jge	SHORT $LN6@DecryptBuf

; 2453 : 	{
; 2454 : 		nextkey=*ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _nextkey$[ebp], cl

; 2455 : 		*ptr ^= startkey;

	movzx	edx, BYTE PTR _startkey$[ebp]
	mov	eax, DWORD PTR _ptr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	xor	ecx, edx
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [edx], cl

; 2456 : 		*ptr++ ^= MasterXOR[(idx++)%xrlen];

	mov	eax, DWORD PTR _idx$[ebp]
	cdq
	idiv	DWORD PTR _xrlen$[ebp]
	movsx	eax, BYTE PTR ?MasterXOR@@3PADA[edx]
	mov	ecx, DWORD PTR _ptr$[ebp]
	movzx	edx, BYTE PTR [ecx]
	xor	edx, eax
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	mov	DWORD PTR _idx$[ebp], ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 2457 : 		startkey=nextkey;

	mov	al, BYTE PTR _nextkey$[ebp]
	mov	BYTE PTR _startkey$[ebp], al

; 2458 : 	}

	jmp	SHORT $LN2@DecryptBuf
$LN6@DecryptBuf:

; 2459 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecryptBuffer@@YAXEPAEJ@Z ENDP				; DecryptBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_path$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?SaveScreenShot@@YAXXZ PROC				; SaveScreenShot

; 2407 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1028				; 00000404H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2408 : 	SetDeleteCallback(DelTGAFileCB);

	push	OFFSET ?DelTGAFileCB@@YAXJFPAVC_Base@@@Z ; DelTGAFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 2409 : 	char path[1024];
; 2410 : 	strcpy(path,FalconDataDirectory);

	push	OFFSET ?FalconDataDirectory@@3PADA	; FalconDataDirectory
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 2411 : 	strcat(path,"\\pictures\\*.tga");

	push	OFFSET ??_C@_0BA@GMOPHECK@?2pictures?2?$CK?4tga?$AA@
	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 2412 : 	SaveAFile(gStringMgr->AddText("Save Screenshot"),path,NULL,SaveTargaCB,CloseItCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseItCB@@YAXJFPAVC_Base@@@Z	; CloseItCB
	push	OFFSET ?SaveTargaCB@@YAXJFPAVC_Base@@@Z	; SaveTargaCB
	push	0
	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	push	OFFSET ??_C@_0BA@COMKCFNP@Save?5Screenshot?$AA@
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H

; 2413 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveScreenShot@@YAXXZ ENDP				; SaveScreenShot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ebox$ = -288						; size = 4
_w$1 = -284						; size = 4
_h$2 = -280						; size = 4
_y$ = -276						; size = 4
_i$ = -272						; size = 4
_fp$ = -268						; size = 4
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SaveTargaCB@@YAXJFPAVC_Base@@@Z PROC			; SaveTargaCB

; 2346 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2347 : 	_TCHAR filename[MAX_PATH];
; 2348 : 	C_EditBox *ebox;
; 2349 : 	FILE *fp;
; 2350 : 	long y,i;
; 2351 : 
; 2352 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN14@SaveTargaC

; 2353 : 		return;

	jmp	$LN15@SaveTargaC
$LN14@SaveTargaC:

; 2354 : 
; 2355 : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2356 : 
; 2357 : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 2358 : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN15@SaveTargaC

; 2359 : 	{
; 2360 : 
; 2361 : 		//dpc EmptyFilenameSaveFix, modified by MN - added a warning to enter a filename
; 2362 : 		if (g_bEmptyFilenameFix)

	movzx	ecx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	ecx, ecx
	je	SHORT $LN12@SaveTargaC

; 2363 : 		{
; 2364 : 			if (_tcslen(ebox->GetText()) == 0)

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@SaveTargaC

; 2365 : 			{
; 2366 : 				AreYouSure(TXT_WARNING, TXT_ENTER_FILENAME,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	467					; 000001d3H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 2367 : 				return;

	jmp	$LN15@SaveTargaC
$LN12@SaveTargaC:

; 2368 : 			}
; 2369 : 		}
; 2370 : 		//end EmptyFilenameSaveFix
; 2371 : 
; 2372 : 		// MN 020104 HiResUI support
; 2373 : 		int w=800,h=600;

	mov	DWORD PTR _w$1[ebp], 800		; 00000320H
	mov	DWORD PTR _h$2[ebp], 600		; 00000258H

; 2374 : 		if (g_bHiResUI)

	movzx	edx, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	edx, edx
	je	SHORT $LN10@SaveTargaC

; 2375 : 		{
; 2376 : 			w=1024;

	mov	DWORD PTR _w$1[ebp], 1024		; 00000400H

; 2377 : 			h=768;

	mov	DWORD PTR _h$2[ebp], 768		; 00000300H
$LN10@SaveTargaC:

; 2378 : 		}
; 2379 : 	// convert Mem to 555 format
; 2380 : 		for(i=0;i<w*h;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SaveTargaC
$LN8@SaveTargaC:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@SaveTargaC:
	mov	ecx, DWORD PTR _w$1[ebp]
	imul	ecx, DWORD PTR _h$2[ebp]
	cmp	DWORD PTR _i$[ebp], ecx
	jge	SHORT $LN7@SaveTargaC

; 2381 : 			gScreenShotBuffer[i]=UI95_ScreenToTga(gScreenShotBuffer[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?gScreenShotBuffer@@3PAGA ; gScreenShotBuffer
	movzx	ecx, WORD PTR [eax+edx*2]
	push	ecx
	call	?UI95_ScreenToTga@@YAGG@Z		; UI95_ScreenToTga
	add	esp, 4
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?gScreenShotBuffer@@3PAGA ; gScreenShotBuffer
	mov	WORD PTR [ecx+edx*2], ax
	jmp	SHORT $LN8@SaveTargaC
$LN7@SaveTargaC:

; 2382 : 
; 2383 : 
; 2384 : 	// Write file
; 2385 : 		//MI put them where they belong
; 2386 : #if 0
; 2387 : 		_stprintf(filename,"%s.tga",ebox->GetText());
; 2388 : #else
; 2389 : 		_stprintf(filename, "%s\\%s.tga", FalconPictureDirectory, ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconPictureDirectory@@3PADA	; FalconPictureDirectory
	push	OFFSET ??_C@_09MFEHAODN@?$CFs?2?$CFs?4tga?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H

; 2390 : #endif
; 2391 : 
; 2392 : 		fp=fopen(filename,"wb");

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_ResFOpen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 2393 : 		if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	$LN15@SaveTargaC

; 2394 : 		{
; 2395 : 			if (g_bHiResUI)

	movzx	ecx, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	ecx, ecx
	je	SHORT $LN5@SaveTargaC

; 2396 : 				fwrite(&TgaHeaderHiRes,sizeof(TgaHeaderHiRes),1,fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1
	push	18					; 00000012H
	push	OFFSET ?TgaHeaderHiRes@@3UBOGUS_HEADER@@A ; TgaHeaderHiRes
	call	_fwrite
	add	esp, 16					; 00000010H

; 2397 : 			else

	jmp	SHORT $LN4@SaveTargaC
$LN5@SaveTargaC:

; 2398 : 				fwrite(&TgaHeader,sizeof(TgaHeader),1,fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	18					; 00000012H
	push	OFFSET ?TgaHeader@@3UBOGUS_HEADER@@A	; TgaHeader
	call	_fwrite
	add	esp, 16					; 00000010H
$LN4@SaveTargaC:

; 2399 : 			for(y=0;y<h;y++)

	mov	DWORD PTR _y$[ebp], 0
	jmp	SHORT $LN3@SaveTargaC
$LN2@SaveTargaC:
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, 1
	mov	DWORD PTR _y$[ebp], ecx
$LN3@SaveTargaC:
	mov	edx, DWORD PTR _y$[ebp]
	cmp	edx, DWORD PTR _h$2[ebp]
	jge	SHORT $LN1@SaveTargaC

; 2400 : 				fwrite(&gScreenShotBuffer[((h-1)-y)*w],w*sizeof(WORD),1,fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _w$1[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _h$2[ebp]
	sub	edx, 1
	sub	edx, DWORD PTR _y$[ebp]
	imul	edx, DWORD PTR _w$1[ebp]
	mov	eax, DWORD PTR ?gScreenShotBuffer@@3PAGA ; gScreenShotBuffer
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@SaveTargaC
$LN1@SaveTargaC:

; 2401 : 			fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_ResFClose
	add	esp, 4
$LN15@SaveTargaC:

; 2402 : 		}
; 2403 : 	}
; 2404 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveTargaCB@@YAXJFPAVC_Base@@@Z ENDP			; SaveTargaCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hit$ = 12						; size = 2
_ctrl$ = 16						; size = 4
?CloseItCB@@YAXJFPAVC_Base@@@Z PROC			; CloseItCB

; 2309 : {

	push	ebp
	mov	ebp, esp

; 2310 : 	if(hit != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hit$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CloseItCB

; 2311 : 		return;

	jmp	SHORT $LN2@CloseItCB
$LN1@CloseItCB:

; 2312 : 
; 2313 : 	gMainHandler->HideWindow(ctrl->Parent_);

	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN2@CloseItCB:

; 2314 : }

	pop	ebp
	ret	0
?CloseItCB@@YAXJFPAVC_Base@@@Z ENDP			; CloseItCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -136						; size = 8
_rsc$ = -128						; size = 4
_ObjPtr$ = -124						; size = 4
_res$ = -120						; size = 4
_x$ = -116						; size = 2
_mapratio$2 = -112					; size = 4
_Obj$ = -108						; size = 4
_win$ = -104						; size = 4
_y$ = -100						; size = 2
_sqd$ = -96						; size = 4
_txt$ = -92						; size = 4
_bmp$ = -88						; size = 4
_buffer$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
?RelocateSquadron@@YAXXZ PROC				; RelocateSquadron

; 2223 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2224 : 	C_Window *win;
; 2225 : 	C_Bitmap *bmp;
; 2226 : 	C_Text *txt;
; 2227 : 	C_Resmgr *res;
; 2228 : 	IMAGE_RSC *rsc;
; 2229 : 	Objective Obj;
; 2230 : 	Squadron sqd;
; 2231 : 	_TCHAR buffer[80];
; 2232 : 	GridIndex x,y;
; 2233 : 	ObjClassDataType *ObjPtr;
; 2234 : 
; 2235 : 	if(!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN13@RelocateSq

; 2236 : 		return;

	jmp	$LN14@RelocateSq
$LN13@RelocateSq:

; 2237 : 
; 2238 : 	sqd=(Squadron)FalconLocalSession->GetPlayerSquadron();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
	mov	DWORD PTR _sqd$[ebp], eax

; 2239 : 	if(!sqd)

	cmp	DWORD PTR _sqd$[ebp], 0
	jne	SHORT $LN12@RelocateSq

; 2240 : 		return;

	jmp	$LN14@RelocateSq
$LN12@RelocateSq:

; 2241 : 
; 2242 : 	Obj=(Objective)vuDatabase->Find(sqd->GetUnitAirbaseID());

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+708]
	call	eax
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _Obj$[ebp], eax

; 2243 : 	if(!Obj)

	cmp	DWORD PTR _Obj$[ebp], 0
	jne	SHORT $LN11@RelocateSq

; 2244 : 		return;

	jmp	$LN14@RelocateSq
$LN11@RelocateSq:

; 2245 : 
; 2246 : 	ObjPtr=Obj->GetObjectiveClassData();

	mov	ecx, DWORD PTR _Obj$[ebp]
	call	?GetObjectiveClassData@ObjectiveClass@@QAEPAUObjClassDataType@@XZ ; ObjectiveClass::GetObjectiveClassData
	mov	DWORD PTR _ObjPtr$[ebp], eax

; 2247 : 	if(!ObjPtr)

	cmp	DWORD PTR _ObjPtr$[ebp], 0
	jne	SHORT $LN10@RelocateSq

; 2248 : 		return;

	jmp	$LN14@RelocateSq
$LN10@RelocateSq:

; 2249 : 
; 2250 : 	win=gMainHandler->FindWindow(TRANSFER_WIN);

	push	6205					; 0000183dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2251 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@RelocateSq

; 2252 : 	{
; 2253 : 		res=gImageMgr->GetImageRes(BLUE_TEAM_ICONS_W);

	push	565120001				; 21af0c01H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 2254 : 
; 2255 : 		txt=(C_Text*)win->FindControl(MY_SQUADRON);

	push	6206					; 0000183eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2256 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN8@RelocateSq

; 2257 : 		{
; 2258 : 			sqd=(Squadron)FalconLocalSession->GetPlayerSquadron();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
	mov	DWORD PTR _sqd$[ebp], eax

; 2259 : 			if(sqd)

	cmp	DWORD PTR _sqd$[ebp], 0
	je	SHORT $LN8@RelocateSq

; 2260 : 			{
; 2261 : 				sqd->GetName(buffer,38,FALSE);

	push	0
	push	38					; 00000026H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sqd$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax

; 2262 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2263 : 				txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2264 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN8@RelocateSq:

; 2265 : 			}
; 2266 : 		}
; 2267 : 		txt=(C_Text*)win->FindControl(NEW_BASE);

	push	6207					; 0000183fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2268 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN6@RelocateSq

; 2269 : 		{
; 2270 : 			Obj->GetName(buffer,38,TRUE);

	push	1
	push	38					; 00000026H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Obj$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _Obj$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 2271 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2272 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2273 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@RelocateSq:

; 2274 : 		}
; 2275 : 		bmp=(C_Bitmap *)win->FindControl(CS_MAP_WIN);

	push	40400					; 00009dd0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 2276 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN5@RelocateSq

; 2277 : 		{
; 2278 : 			bmp->SetImage(gOccupationMap);

	mov	ecx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 2279 : 			bmp->Refresh();

	mov	edx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN5@RelocateSq:

; 2280 : 		}
; 2281 : 		bmp=(C_Bitmap *)win->FindControl(BASE_ICON);

	push	45221					; 0000b0a5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 2282 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN4@RelocateSq

; 2283 : 		{
; 2284 : 			bmp->Refresh();

	mov	eax, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2285 : 			Obj->GetLocation(&x,&y); // campaign coords

	lea	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _Obj$[ebp]
	call	?GetLocation@FalconEntity@@QBEXPAF0@Z	; FalconEntity::GetLocation

; 2286 : 			y=static_cast<short>(TheCampaign.TheaterSizeY - y);

	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	movsx	ecx, WORD PTR _y$[ebp]
	sub	eax, ecx
	mov	WORD PTR _y$[ebp], ax

; 2287 : 			if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	$LN4@RelocateSq

; 2288 : 			{
; 2289 : 				int mapratio = MAP_RATIO;

	mov	DWORD PTR _mapratio$2[ebp], 6

; 2290 : // 2002-02-01 MN This fixes relocation map for large theaters
; 2291 : 				if (g_LargeTheater)

	movzx	edx, BYTE PTR ?g_LargeTheater@@3_NA	; g_LargeTheater
	test	edx, edx
	je	SHORT $LN2@RelocateSq

; 2292 : 				{
; 2293 : 					mapratio *= 2;

	mov	eax, DWORD PTR _mapratio$2[ebp]
	shl	eax, 1
	mov	DWORD PTR _mapratio$2[ebp], eax
$LN2@RelocateSq:

; 2294 : 				}
; 2295 : 				bmp->SetXY(x/mapratio,y/mapratio);

	movsx	eax, WORD PTR _y$[ebp]
	cdq
	idiv	DWORD PTR _mapratio$2[ebp]
	push	eax
	movsx	eax, WORD PTR _x$[ebp]
	cdq
	idiv	DWORD PTR _mapratio$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2296 : 				bmp->SetFlagBitOn(C_BIT_HCENTER|C_BIT_VCENTER);

	push	1536					; 00000600H
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2297 : 				rsc=(IMAGE_RSC*)res->Find(ObjPtr->IconIndex);

	mov	ecx, DWORD PTR _ObjPtr$[ebp]
	movsx	edx, WORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 2298 : 				if(rsc)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN1@RelocateSq

; 2299 : 					bmp->SetImage(rsc);

	mov	eax, DWORD PTR _rsc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage
$LN1@RelocateSq:

; 2300 : 				bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@RelocateSq:

; 2301 : 			}
; 2302 : 		}
; 2303 : 		gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN14@RelocateSq:

; 2304 : 	}
; 2305 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?RelocateSquadron@@YAXXZ ENDP				; RelocateSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -88						; size = 4
$T3 = -84						; size = 4
$T4 = -80						; size = 4
$T5 = -76						; size = 4
tv131 = -72						; size = 4
$T6 = -68						; size = 4
tv193 = -64						; size = 4
$T7 = -60						; size = 4
$T8 = -56						; size = 4
_wrap_w$ = -52						; size = 2
_evt$ = -48						; size = 4
_y$ = -44						; size = 2
_i$ = -40						; size = 2
_win$ = -36						; size = 4
_txt$ = -32						; size = 4
_buffer$ = -28						; size = 10
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RefreshEventList@@YAXXZ PROC				; RefreshEventList

; 2164 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RefreshEventList@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2165 : 	CampUIEventElement *evt;
; 2166 : 	C_Window *win;
; 2167 : 	C_Text *txt;
; 2168 : 	_TCHAR buffer[10];
; 2169 : 	short y,wrap_w,i;
; 2170 : 
; 2171 : 	win=gMainHandler->FindWindow(RVNTS_WIN);

	push	6249					; 00001869H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2172 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@RefreshEve

; 2173 : 	{
; 2174 : 		DeleteGroupList(RVNTS_WIN);

	push	6249					; 00001869H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 2175 : 
; 2176 : 		wrap_w=static_cast<short>(win->ClientArea_[0].right-win->ClientArea_[0].left - 40);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+176]
	sub	eax, DWORD PTR [esi+ecx+168]
	sub	eax, 40					; 00000028H
	mov	WORD PTR _wrap_w$[ebp], ax

; 2177 : 
; 2178 : 		y=0;

	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 2179 : 		i=0;

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx

; 2180 : 		evt=RetrieveEvent(i);

	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	call	?RetrieveEvent@@YAPAUuieventnode@@F@Z	; RetrieveEvent
	add	esp, 4
	mov	DWORD PTR _evt$[ebp], eax
$LN3@RefreshEve:

; 2181 : 		while(evt)

	cmp	DWORD PTR _evt$[ebp], 0
	je	$LN2@RefreshEve

; 2182 : 		{
; 2183 : 			if(evt->eventText)

	mov	ecx, DWORD PTR _evt$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	$LN1@RefreshEve

; 2184 : 			{
; 2185 : 				GetTimeString(evt->time,buffer);

	push	1
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _evt$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 2186 : 				buffer[5] = 0;

	mov	edx, 1
	imul	edx, 5
	mov	DWORD PTR $T6[ebp], edx
	cmp	DWORD PTR $T6[ebp], 10			; 0000000aH
	jae	SHORT $LN7@RefreshEve
	jmp	SHORT $LN8@RefreshEve
$LN7@RefreshEve:
	call	___report_rangecheckfailure
$LN8@RefreshEve:
	mov	eax, DWORD PTR $T6[ebp]
	mov	BYTE PTR _buffer$[ebp+eax], 0

; 2187 : 
; 2188 : 				txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN9@RefreshEve
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN10@RefreshEve
$LN9@RefreshEve:
	mov	DWORD PTR tv131[ebp], 0
$LN10@RefreshEve:
	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _txt$[ebp], edx

; 2189 : 				txt->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2190 : 				txt->SetFixedWidth(_tcsclen(buffer)+1);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	__tcsclen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFixedWidth@C_Text@@QAEXJ@Z		; C_Text::SetFixedWidth

; 2191 : 				txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2192 : 				txt->SetFont(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2193 : 				txt->SetXY(1,y);

	movsx	ecx, WORD PTR _y$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 2194 : 				txt->SetFGColor(0xe0e0e0);

	push	14737632				; 00e0e0e0H
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2195 : 				txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2196 : 				win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2197 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2198 : 
; 2199 : 				txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN11@RefreshEve
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv193[ebp], eax
	jmp	SHORT $LN12@RefreshEve
$LN11@RefreshEve:
	mov	DWORD PTR tv193[ebp], 0
$LN12@RefreshEve:
	mov	ecx, DWORD PTR tv193[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], edx

; 2200 : 				txt->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2201 : 				txt->SetFlagBitOn(C_BIT_WORDWRAP);

	push	33554432				; 02000000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2202 : 				txt->SetFixedWidth(_tcsclen(evt->eventText));

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	__tcsclen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFixedWidth@C_Text@@QAEXJ@Z		; C_Text::SetFixedWidth

; 2203 : 				txt->SetText(evt->eventText);

	mov	eax, DWORD PTR _evt$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2204 : 				txt->SetFont(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 2205 : 				txt->SetXY(40,y);

	movsx	eax, WORD PTR _y$[ebp]
	push	eax
	push	40					; 00000028H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2206 : 				txt->SetW(wrap_w);

	movsx	ecx, WORD PTR _wrap_w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 2207 : 				txt->SetFGColor(0xe0e0e0);

	push	14737632				; 00e0e0e0H
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2208 : 				txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2209 : 				win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2210 : 				y += txt->GetH()+2;

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	movsx	ecx, WORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	WORD PTR _y$[ebp], dx
$LN1@RefreshEve:

; 2211 : 			}
; 2212 : 			delete evt->eventText;

	mov	eax, DWORD PTR _evt$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2213 : 			delete evt;

	mov	eax, DWORD PTR _evt$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2214 : 			i++;

	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx

; 2215 : 			evt=RetrieveEvent(i);

	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	call	?RetrieveEvent@@YAPAUuieventnode@@F@Z	; RetrieveEvent
	add	esp, 4
	mov	DWORD PTR _evt$[ebp], eax

; 2216 : 		}

	jmp	$LN3@RefreshEve
$LN2@RefreshEve:

; 2217 : 		win->ScanClientAreas();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientAreas@C_Window@@QAEXXZ	; C_Window::ScanClientAreas

; 2218 : 		win->RefreshClient(0);

	push	0
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN6@RefreshEve:

; 2219 : 	}
; 2220 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RefreshEventList@@YAXXZ$0:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?RefreshEventList@@YAXXZ$1:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?RefreshEventList@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RefreshEventList@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RefreshEventList@@YAXXZ ENDP				; RefreshEventList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_Leave$ = -40						; size = 4
$T1 = -36						; size = 4
$T2 = -32						; size = 4
_blip$ = -28						; size = 4
_win$ = -24						; size = 4
_evt$ = -20						; size = 4
_txt$ = -16						; size = 4
_x$ = -12						; size = 2
_y$ = -8						; size = 2
_text$3 = -1						; size = 1
_winID$ = 8						; size = 4
_client$ = 12						; size = 4
?RefreshMapEventList@@YAXJJ@Z PROC			; RefreshMapEventList

; 2115 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 2116 : 	CampUIEventElement *evt;
; 2117 : 	C_Window *win;
; 2118 : 	C_Text *txt;
; 2119 : 	C_Blip *blip;
; 2120 : 	short x,y;
; 2121 : 	F4CSECTIONHANDLE *Leave;
; 2122 : 
; 2123 : 	win=gMainHandler->FindWindow(winID);

	mov	eax, DWORD PTR _winID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2124 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@RefreshMap

; 2125 : 	{
; 2126 : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2127 : 		evt=RetrieveEvent(0);

	push	0
	call	?RetrieveEvent@@YAPAUuieventnode@@F@Z	; RetrieveEvent
	add	esp, 4
	mov	DWORD PTR _evt$[ebp], eax

; 2128 : 		txt=(C_Text*)win->FindControl(CP_EVENT);

	push	6014					; 0000177eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2129 : // M.N. clear last news text from last mission
; 2130 : 		if (!evt && txt)

	cmp	DWORD PTR _evt$[ebp], 0
	jne	SHORT $LN4@RefreshMap
	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@RefreshMap

; 2131 : 		{
; 2132 : 			char text[1];
; 2133 : 			strcpy(text,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	edx, DWORD PTR _text$3[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 2134 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2135 : 			txt->SetText(text);

	lea	ecx, DWORD PTR _text$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2136 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@RefreshMap:

; 2137 : 		}
; 2138 : 		if(evt)

	cmp	DWORD PTR _evt$[ebp], 0
	je	$LN3@RefreshMap

; 2139 : 		{
; 2140 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@RefreshMap

; 2141 : 			{
; 2142 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2143 : 				txt->SetText(gStringMgr->GetText(gStringMgr->AddText(evt->eventText)));

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2144 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@RefreshMap:

; 2145 : 			}
; 2146 : 			blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _blip$[ebp], eax

; 2147 : 			if(blip)

	cmp	DWORD PTR _blip$[ebp], 0
	je	SHORT $LN1@RefreshMap

; 2148 : 			{
; 2149 : 				x=static_cast<short>(evt->x/MAP_RATIO-2);

	mov	ecx, DWORD PTR _evt$[ebp]
	movsx	eax, WORD PTR [ecx]
	cdq
	mov	ecx, 6
	idiv	ecx
	sub	eax, 2
	mov	WORD PTR _x$[ebp], ax

; 2150 : 				y=static_cast<short>(170-(evt->y/MAP_RATIO)-2);

	mov	edx, DWORD PTR _evt$[ebp]
	movsx	eax, WORD PTR [edx+2]
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	edx, 170				; 000000aaH
	sub	edx, eax
	sub	edx, 2
	mov	WORD PTR _y$[ebp], dx

; 2151 : 
; 2152 : 				blip->AddBlip(x,y,evt->team,evt->time/(VU_TICS_PER_SECOND*60));

	mov	eax, DWORD PTR _evt$[ebp]
	mov	eax, DWORD PTR [eax+4]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	push	eax
	mov	edx, DWORD PTR _evt$[ebp]
	movzx	eax, BYTE PTR [edx+9]
	push	eax
	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?AddBlip@C_Blip@@QAEXFFEJ@Z		; C_Blip::AddBlip

; 2153 : 				blip->Refresh();

	mov	eax, DWORD PTR _blip$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _blip$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@RefreshMap:

; 2154 : 			}
; 2155 : 			delete evt->eventText;

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2156 : 			delete evt;

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2157 : 			win->RefreshClient(client);

	mov	eax, DWORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN3@RefreshMap:

; 2158 : 		}
; 2159 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN6@RefreshMap:

; 2160 : 	}
; 2161 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RefreshMapEventList@@YAXJJ@Z ENDP			; RefreshMapEventList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
_retval$ = -12						; size = 4
_evt$ = -8						; size = 4
_i$ = -4						; size = 2
_num$ = 8						; size = 2
?RetrieveEvent@@YAPAUuieventnode@@F@Z PROC		; RetrieveEvent

; 2090 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2091 : 	short i=0;

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax

; 2092 : 	CampUIEventElement *retval=NULL;

	mov	DWORD PTR _retval$[ebp], 0

; 2093 : 	CampUIEventElement *evt;
; 2094 : 
; 2095 : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2096 : 	evt=TheCampaign.StandardEventQueue;

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+276
	mov	DWORD PTR _evt$[ebp], ecx
$LN3@RetrieveEv:

; 2097 : 	while(evt && i < num)

	cmp	DWORD PTR _evt$[ebp], 0
	je	SHORT $LN2@RetrieveEv
	movsx	edx, WORD PTR _i$[ebp]
	movsx	eax, WORD PTR _num$[ebp]
	cmp	edx, eax
	jge	SHORT $LN2@RetrieveEv

; 2098 : 	{
; 2099 : 		evt=evt->next;

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _evt$[ebp], edx

; 2100 : 		i++;

	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax

; 2101 : 	}

	jmp	SHORT $LN3@RetrieveEv
$LN2@RetrieveEv:

; 2102 : 	if(evt)

	cmp	DWORD PTR _evt$[ebp], 0
	je	SHORT $LN1@RetrieveEv

; 2103 : 	{
; 2104 : 		retval=new uieventnode;

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _retval$[ebp], ecx

; 2105 : 		memcpy(retval,evt,sizeof(CampUIEventElement));

	push	20					; 00000014H
	mov	edx, DWORD PTR _evt$[ebp]
	push	edx
	mov	eax, DWORD PTR _retval$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 2106 : 		retval->eventText=new _TCHAR[_tcslen(evt->eventText)+1];

	mov	ecx, DWORD PTR _evt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _retval$[ebp]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax+12], ecx

; 2107 : 		_tcscpy(retval->eventText,evt->eventText);

	mov	edx, DWORD PTR _evt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _retval$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_strcpy
	add	esp, 8

; 2108 : 		retval->next=NULL;

	mov	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN1@RetrieveEv:

; 2109 : 	}
; 2110 : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2111 : 	return(retval);

	mov	eax, DWORD PTR _retval$[ebp]

; 2112 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RetrieveEvent@@YAPAUuieventnode@@F@Z ENDP		; RetrieveEvent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv71 = -24						; size = 4
$T3 = -20						; size = 4
_box$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
___formal$ = 12						; size = 4
_y$ = 16						; size = 4
_startcol$ = 20						; size = 2
_endcol$ = 24						; size = 2
___formal$ = 28						; size = 4
_Client$ = 32						; size = 4
?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z PROC ; AddHorizontalLineToWindow

; 1999 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2000 : 	C_Box
; 2001 : 		*box;
; 2002 : 
; 2003 : 	box = new C_Box;

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@AddHorizon
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Box@@QAE@XZ			; C_Box::C_Box
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@AddHorizon
$LN3@AddHorizon:
	mov	DWORD PTR tv71[ebp], 0
$LN4@AddHorizon:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _box$[ebp], ecx

; 2004 : 
; 2005 : 	box->Setup (C_DONT_CARE, 0);

	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _box$[ebp]
	call	?Setup@C_Box@@QAEXJF@Z			; C_Box::Setup

; 2006 : 	box->SetXYWH (startcol, *y, endcol, 0);

	push	0
	movsx	edx, WORD PTR _endcol$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	movsx	edx, WORD PTR _startcol$[ebp]
	push	edx
	mov	eax, DWORD PTR _box$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _box$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax

; 2007 : 	box->SetColor (0x00AD8041);

	push	11370561				; 00ad8041H
	mov	ecx, DWORD PTR _box$[ebp]
	call	?SetColor@C_Box@@QAEXK@Z		; C_Box::SetColor

; 2008 : 	box->SetClient (static_cast<short>(Client));

	movzx	ecx, WORD PTR _Client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _box$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2009 : 	box->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _box$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2010 : 
; 2011 : 	win->AddControl (box);

	mov	edx, DWORD PTR _box$[ebp]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2012 : 
; 2013 : 	*y += 2;

	mov	eax, DWORD PTR _y$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _y$[ebp]
	mov	WORD PTR [edx], cx

; 2014 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddHorizontalLineToWindow@@YAXPAVC_Window@@PAF1FFKJ@Z ENDP ; AddHorizontalLineToWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv73 = -24						; size = 4
$T3 = -20						; size = 4
_txt$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
_color$ = 20						; size = 4
_str$ = 24						; size = 4
?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z PROC		; AddTextToWindow

; 1977 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1978 : 	C_Text *txt;
; 1979 : 
; 1980 : 	if(win == NULL || str == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@AddTextToW
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN2@AddTextToW
$LN1@AddTextToW:

; 1981 : 		return(0);

	xor	eax, eax
	jmp	$LN3@AddTextToW
$LN2@AddTextToW:

; 1982 : 
; 1983 : 	txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@AddTextToW
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN6@AddTextToW
$LN5@AddTextToW:
	mov	DWORD PTR tv73[ebp], 0
$LN6@AddTextToW:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], ecx

; 1984 : 	txt->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+248]
	call	edx

; 1985 : 	txt->SetFixedWidth(_tcsclen(str)+1);

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	__tcsclen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFixedWidth@C_Text@@QAEXJ@Z		; C_Text::SetFixedWidth

; 1986 : 	txt->SetText(str);

	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1987 : 	txt->SetXY(x,y);

	movsx	eax, WORD PTR _y$[ebp]
	push	eax
	movsx	ecx, WORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 1988 : 	txt->SetFGColor(color);

	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 1989 : 	txt->SetFont(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 1990 : 	txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1991 : 	txt->SetFlagBitOn(C_BIT_LEFT);

	push	32					; 00000020H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1992 : 
; 1993 : 	win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 1994 : 
; 1995 : 	return(static_cast<short>(txt->GetX()+txt->GetW()));

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	mov	esi, eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	add	esi, eax
	mov	ax, si
$LN3@AddTextToW:

; 1996 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddTextToWindow@@YAFPAVC_Window@@FFKPAD@Z ENDP		; AddTextToWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 2
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
?AddButtonToWindow@@YAFPAVC_Window@@FFKPAD@Z PROC	; AddButtonToWindow

; 1972 : {

	push	ebp
	mov	ebp, esp

; 1973 : 	return(0);

	xor	eax, eax

; 1974 : }

	pop	ebp
	ret	0
?AddButtonToWindow@@YAFPAVC_Window@@FFKPAD@Z ENDP	; AddButtonToWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
tv71 = -16						; size = 4
_lbox$ = -12						; size = 4
_win$ = -8						; size = 4
_line$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z PROC		; UpdateIntelBarCB

; 1924 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1925 : 	C_Line *line;
; 1926 : 	C_Window *win;
; 1927 : 	C_ListBox *lbox;
; 1928 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN15@UpdateInte

; 1929 : 		return;

	jmp	$LN16@UpdateInte
$LN15@UpdateInte:

; 1930 : 
; 1931 : 	lbox=(C_ListBox *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _lbox$[ebp], ecx

; 1932 : 	win=control->Parent_;

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR _win$[ebp], eax

; 1933 : 
; 1934 : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	sub	edx, 6226				; 00001852H
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 3
	ja	$LN16@UpdateInte
	mov	eax, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN18@UpdateInte[eax*4]
$LN12@UpdateInte:

; 1935 : 	{
; 1936 : 		case BAR_1:
; 1937 : 			line=(C_Line *)win->FindControl(BLUE_BAR_1);

	push	6267					; 0000187bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1938 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN11@UpdateInte

; 1939 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN11@UpdateInte:

; 1940 : 			line=(C_Line *)win->FindControl(RED_BAR_1);

	push	6271					; 0000187fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1941 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN10@UpdateInte

; 1942 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN10@UpdateInte:

; 1943 : 			break;

	jmp	$LN16@UpdateInte
$LN9@UpdateInte:

; 1944 : 		case BAR_2:
; 1945 : 			line=(C_Line *)win->FindControl(BLUE_BAR_2);

	push	6268					; 0000187cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1946 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN8@UpdateInte

; 1947 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN8@UpdateInte:

; 1948 : 			line=(C_Line *)win->FindControl(RED_BAR_2);

	push	6272					; 00001880H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1949 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN7@UpdateInte

; 1950 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN7@UpdateInte:

; 1951 : 			break;

	jmp	$LN16@UpdateInte
$LN6@UpdateInte:

; 1952 : 		case BAR_3:
; 1953 : 			line=(C_Line *)win->FindControl(BLUE_BAR_3);

	push	6269					; 0000187dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1954 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN5@UpdateInte

; 1955 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN5@UpdateInte:

; 1956 : 			line=(C_Line *)win->FindControl(RED_BAR_3);

	push	6273					; 00001881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1957 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN4@UpdateInte

; 1958 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN4@UpdateInte:

; 1959 : 			break;

	jmp	SHORT $LN16@UpdateInte
$LN3@UpdateInte:

; 1960 : 		case BAR_4:
; 1961 : 			line=(C_Line *)win->FindControl(BLUE_BAR_4);

	push	6270					; 0000187eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1962 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN2@UpdateInte

; 1963 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN2@UpdateInte:

; 1964 : 			line=(C_Line *)win->FindControl(RED_BAR_4);

	push	6274					; 00001882H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1965 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN16@UpdateInte

; 1966 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN16@UpdateInte:

; 1967 : 			break;
; 1968 : 	}
; 1969 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@UpdateInte:
	DD	$LN12@UpdateInte
	DD	$LN9@UpdateInte
	DD	$LN6@UpdateInte
	DD	$LN3@UpdateInte
?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z ENDP		; UpdateIntelBarCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -96						; size = 4
_line$ = -92						; size = 4
_i$ = -88						; size = 2
_win$ = -84						; size = 4
_Team$ = -80						; size = 2
_lbox$ = -76						; size = 4
_txt$ = -72						; size = 4
_timeStr$2 = -68					; size = 30
_timeStr$3 = -36					; size = 30
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
?UpdateIntel@@YAXJ@Z PROC				; UpdateIntel

; 1733 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1734 : 	C_Window *win;
; 1735 : 	C_ListBox *lbox;
; 1736 : 	C_Line *line;
; 1737 : 	C_Text *txt;
; 1738 : 	short Team;
; 1739 : 	short i;
; 1740 : 
; 1741 : 	Team=FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ax, al
	mov	WORD PTR _Team$[ebp], ax

; 1742 : 
; 1743 : 	for(i=0;i<5;i++)

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN47@UpdateInte
$LN46@UpdateInte:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN47@UpdateInte:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 5
	jge	SHORT $LN45@UpdateInte

; 1744 : 		if(ObjStr[i] == NULL)

	movsx	ecx, WORD PTR _i$[ebp]
	cmp	DWORD PTR ?ObjStr@@3PAPADA[ecx*4], 0
	jne	SHORT $LN44@UpdateInte

; 1745 : 		{
; 1746 : 			ObjStr[i]=new _TCHAR[256];

	push	256					; 00000100H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR ?ObjStr@@3PAPADA[edx*4], eax

; 1747 : 			memset(ObjStr[i],0,sizeof(_TCHAR)*256);

	push	256					; 00000100H
	push	0
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?ObjStr@@3PAPADA[ecx*4]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN44@UpdateInte:

; 1748 : 		}

	jmp	SHORT $LN46@UpdateInte
$LN45@UpdateInte:

; 1749 : 
; 1750 : 	i=static_cast<short>(GetTopPriorityObjectives(Team,ObjStr));

	push	OFFSET ?ObjStr@@3PAPADA			; ObjStr
	movsx	eax, WORD PTR _Team$[ebp]
	push	eax
	call	?GetTopPriorityObjectives@@YAHHQAPAD@Z	; GetTopPriorityObjectives
	add	esp, 8
	mov	WORD PTR _i$[ebp], ax

; 1751 : 
; 1752 : 	win=gMainHandler->FindWindow(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1753 : 	//if(win) // JB 010222 CTD
; 1754 : 	if(win && !F4IsBadReadPtr(win, sizeof(C_Window)) // JB 010222 CTD
; 1755 : 		&& TeamInfo[Team]) // JB 010614 CTD

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN48@UpdateInte
	push	4332					; 000010ecH
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?F4IsBadReadPtr@@YA_NPBXI@Z		; F4IsBadReadPtr
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	$LN48@UpdateInte
	movsx	ecx, WORD PTR _Team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	$LN48@UpdateInte

; 1756 : 	{
; 1757 : 		if (TeamInfo[Team]->GetOffensiveAirAction()->actionType > AACTION_DCA)

	movsx	edx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
	movzx	eax, BYTE PTR [eax+24]
	cmp	eax, 1
	jle	SHORT $LN42@UpdateInte

; 1758 : 			win->UnHideCluster(3);

	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1759 : 		else

	jmp	SHORT $LN41@UpdateInte
$LN42@UpdateInte:

; 1760 : 			win->HideCluster(3);

	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN41@UpdateInte:

; 1761 : 		lbox=(C_ListBox *)win->FindControl(OFFENSIVE_AIR_TEXT);

	push	6355					; 000018d3H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1762 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN40@UpdateInte

; 1763 : 		{
; 1764 : 			lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1765 : 			if (TeamInfo[Team] && TeamInfo[Team]->GetOffensiveAirAction()->actionType)

	movsx	ecx, WORD PTR _Team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN39@UpdateInte
	movsx	edx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
	movzx	eax, BYTE PTR [eax+24]
	test	eax, eax
	je	SHORT $LN39@UpdateInte

; 1766 : 				lbox->SetValue(TeamInfo[Team]->GetOffensiveAirAction()->actionType);

	movsx	ecx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
	movzx	edx, BYTE PTR [eax+24]
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1767 : 			else

	jmp	SHORT $LN38@UpdateInte
$LN39@UpdateInte:

; 1768 : 				lbox->SetValue(0);

	push	0
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN38@UpdateInte:

; 1769 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN40@UpdateInte:

; 1770 : 		}
; 1771 : 		txt=(C_Text *)win->FindControl(TIME_AIR_OP);

	push	6357					; 000018d5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1772 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN37@UpdateInte

; 1773 : 		{
; 1774 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1775 : 			if (TeamInfo[Team] && TeamInfo[Team]->GetOffensiveAirAction()->actionType)

	movsx	ecx, WORD PTR _Team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN36@UpdateInte
	movsx	edx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
	movzx	eax, BYTE PTR [eax+24]
	test	eax, eax
	je	SHORT $LN36@UpdateInte

; 1776 : 				{
; 1777 : 				_TCHAR	timeStr[30]={0};

	mov	BYTE PTR _timeStr$2[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _timeStr$2[ebp+1], ecx
	mov	DWORD PTR _timeStr$2[ebp+5], ecx
	mov	DWORD PTR _timeStr$2[ebp+9], ecx
	mov	DWORD PTR _timeStr$2[ebp+13], ecx
	mov	DWORD PTR _timeStr$2[ebp+17], ecx
	mov	DWORD PTR _timeStr$2[ebp+21], ecx
	mov	DWORD PTR _timeStr$2[ebp+25], ecx
	mov	BYTE PTR _timeStr$2[ebp+29], cl

; 1778 : 				AddTimeToBuffer (TeamInfo[Team]->GetOffensiveAirAction()->actionStartTime, timeStr, FALSE);

	push	0
	lea	edx, DWORD PTR _timeStr$2[ebp]
	push	edx
	movsx	eax, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ; TeamClass::GetOffensiveAirAction
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddTimeToBuffer@@YAXKPADH@Z		; AddTimeToBuffer
	add	esp, 12					; 0000000cH

; 1779 : 				// KCK HACK: Can't seem to get this to size right. Remind me to ask Peter about
; 1780 : 				// this when he gets in
; 1781 : 				_tcscat(timeStr,"   ");

	push	OFFSET ??_C@_03NDEAONJP@?5?5?5?$AA@
	lea	edx, DWORD PTR _timeStr$2[ebp]
	push	edx
	call	_strcat
	add	esp, 8

; 1782 : 				txt->SetText(timeStr);

	lea	eax, DWORD PTR _timeStr$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1783 : 				}
; 1784 : 			else

	jmp	SHORT $LN35@UpdateInte
$LN36@UpdateInte:

; 1785 : 				txt->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN35@UpdateInte:

; 1786 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN37@UpdateInte:

; 1787 : 		}
; 1788 : 		lbox=(C_ListBox *)win->FindControl(POSTURE_TEXT);

	push	6215					; 00001847H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1789 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN34@UpdateInte

; 1790 : 		{
; 1791 : 			if (TeamInfo[Team])

	movsx	ecx, WORD PTR _Team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN34@UpdateInte

; 1792 : 			{
; 1793 : 				lbox->SetValue(TeamInfo[Team]->GetGroundAction()->actionType);

	movsx	edx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ; TeamClass::GetGroundAction
	movzx	eax, BYTE PTR [eax+16]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1794 : 				lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN34@UpdateInte:

; 1795 : 			}
; 1796 : 		}
; 1797 : 		if (TeamInfo[Team]->GetGroundAction()->actionType >= GACTION_MINOROFFENSIVE)

	movsx	ecx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ; TeamClass::GetGroundAction
	movzx	edx, BYTE PTR [eax+16]
	cmp	edx, 3
	jl	SHORT $LN32@UpdateInte

; 1798 : 			{
; 1799 : 			win->UnHideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1800 : 			win->HideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1801 : 			}
; 1802 : 		else

	jmp	SHORT $LN31@UpdateInte
$LN32@UpdateInte:

; 1803 : 			{
; 1804 : 			win->UnHideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1805 : 			win->HideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN31@UpdateInte:

; 1806 : 			}
; 1807 : 		lbox=(C_ListBox *)win->FindControl(OFFENSIVE_GROUND_TEXT);

	push	6356					; 000018d4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1808 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN30@UpdateInte

; 1809 : 		{
; 1810 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1811 : 			if (TeamInfo[Team])

	movsx	ecx, WORD PTR _Team$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN30@UpdateInte

; 1812 : 			{
; 1813 : 				lbox->SetValue(TeamInfo[Team]->GetGroundAction()->actionType);

	movsx	edx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ; TeamClass::GetGroundAction
	movzx	eax, BYTE PTR [eax+16]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1814 : 				lbox->Refresh();

	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN30@UpdateInte:

; 1815 : 			}
; 1816 : 		}
; 1817 : 		txt=(C_Text *)win->FindControl(TIME_GROUND_OP);

	push	6358					; 000018d6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1818 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN28@UpdateInte

; 1819 : 		{
; 1820 : 			_TCHAR	timeStr[30]={0};

	mov	BYTE PTR _timeStr$3[ebp], 0
	xor	ecx, ecx
	mov	DWORD PTR _timeStr$3[ebp+1], ecx
	mov	DWORD PTR _timeStr$3[ebp+5], ecx
	mov	DWORD PTR _timeStr$3[ebp+9], ecx
	mov	DWORD PTR _timeStr$3[ebp+13], ecx
	mov	DWORD PTR _timeStr$3[ebp+17], ecx
	mov	DWORD PTR _timeStr$3[ebp+21], ecx
	mov	DWORD PTR _timeStr$3[ebp+25], ecx
	mov	BYTE PTR _timeStr$3[ebp+29], cl

; 1821 : 			txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1822 : 			AddTimeToBuffer (TeamInfo[Team]->GetGroundAction()->actionTime, timeStr, FALSE);

	push	0
	lea	eax, DWORD PTR _timeStr$3[ebp]
	push	eax
	movsx	ecx, WORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ; TeamClass::GetGroundAction
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?AddTimeToBuffer@@YAXKPADH@Z		; AddTimeToBuffer
	add	esp, 12					; 0000000cH

; 1823 : 			// KCK HACK: Can't seem to get this to size right. Remind me to ask Peter about
; 1824 : 			// this when he gets in
; 1825 : 			_tcscat(timeStr,"   ");

	push	OFFSET ??_C@_03NDEAONJP@?5?5?5?$AA@
	lea	eax, DWORD PTR _timeStr$3[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 1826 : 			txt->SetText(timeStr);

	lea	ecx, DWORD PTR _timeStr$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 1827 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN28@UpdateInte:

; 1828 : 		}
; 1829 : 		lbox=(C_ListBox *)win->FindControl(BAR_1);

	push	6226					; 00001852H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1830 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN27@UpdateInte

; 1831 : 		{
; 1832 : 			line=(C_Line *)win->FindControl(BLUE_BAR_1);

	push	6267					; 0000187bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1833 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN26@UpdateInte

; 1834 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN26@UpdateInte:

; 1835 : 			line=(C_Line *)win->FindControl(RED_BAR_1);

	push	6271					; 0000187fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1836 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN27@UpdateInte

; 1837 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN27@UpdateInte:

; 1838 : 		}
; 1839 : 		lbox=(C_ListBox *)win->FindControl(BAR_2);

	push	6227					; 00001853H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1840 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN24@UpdateInte

; 1841 : 		{
; 1842 : 			line=(C_Line *)win->FindControl(BLUE_BAR_2);

	push	6268					; 0000187cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1843 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN23@UpdateInte

; 1844 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN23@UpdateInte:

; 1845 : 			line=(C_Line *)win->FindControl(RED_BAR_2);

	push	6272					; 00001880H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1846 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN24@UpdateInte

; 1847 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN24@UpdateInte:

; 1848 : 		}
; 1849 : 		lbox=(C_ListBox *)win->FindControl(BAR_3);

	push	6228					; 00001854H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1850 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN21@UpdateInte

; 1851 : 		{
; 1852 : 			line=(C_Line *)win->FindControl(BLUE_BAR_3);

	push	6269					; 0000187dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1853 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN20@UpdateInte

; 1854 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN20@UpdateInte:

; 1855 : 			line=(C_Line *)win->FindControl(RED_BAR_3);

	push	6273					; 00001881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1856 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN21@UpdateInte

; 1857 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN21@UpdateInte:

; 1858 : 		}
; 1859 : 		lbox=(C_ListBox *)win->FindControl(BAR_4);

	push	6229					; 00001855H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1860 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN18@UpdateInte

; 1861 : 		{
; 1862 : 			line=(C_Line *)win->FindControl(BLUE_BAR_4);

	push	6270					; 0000187eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1863 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN17@UpdateInte

; 1864 : 				MakeBar(line,lbox->GetTextID(),2);

	push	2
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN17@UpdateInte:

; 1865 : 			line=(C_Line *)win->FindControl(RED_BAR_4);

	push	6274					; 00001882H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _line$[ebp], eax

; 1866 : 			if(line)

	cmp	DWORD PTR _line$[ebp], 0
	je	SHORT $LN18@UpdateInte

; 1867 : 				MakeBar(line,lbox->GetTextID(),6);

	push	6
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	?MakeBar@@YAXPAVC_Line@@JJ@Z		; MakeBar
	add	esp, 12					; 0000000cH
$LN18@UpdateInte:

; 1868 : 		}
; 1869 : 
; 1870 : 		txt=(C_Text *)win->FindControl(OBJ_1);

	push	6245					; 00001865H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1871 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN15@UpdateInte

; 1872 : 		{
; 1873 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1874 : 			if(i > 0)

	movsx	ecx, WORD PTR _i$[ebp]
	test	ecx, ecx
	jle	SHORT $LN14@UpdateInte

; 1875 : 				txt->SetText(ObjStr[0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?ObjStr@@3PAPADA[edx]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1876 : 			else

	jmp	SHORT $LN13@UpdateInte
$LN14@UpdateInte:

; 1877 : 				txt->SetText(" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN13@UpdateInte:

; 1878 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN15@UpdateInte:

; 1879 : 		}
; 1880 : 		txt=(C_Text *)win->FindControl(OBJ_2);

	push	6246					; 00001866H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1881 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN12@UpdateInte

; 1882 : 		{
; 1883 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1884 : 			if(i > 1)

	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 1
	jle	SHORT $LN11@UpdateInte

; 1885 : 				txt->SetText(ObjStr[1]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR ?ObjStr@@3PAPADA[edx]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1886 : 			else

	jmp	SHORT $LN10@UpdateInte
$LN11@UpdateInte:

; 1887 : 				txt->SetText(" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN10@UpdateInte:

; 1888 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@UpdateInte:

; 1889 : 		}
; 1890 : 		txt=(C_Text *)win->FindControl(OBJ_3);

	push	6247					; 00001867H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1891 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN9@UpdateInte

; 1892 : 		{
; 1893 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1894 : 			if(i > 2)

	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 2
	jle	SHORT $LN8@UpdateInte

; 1895 : 				txt->SetText(ObjStr[2]);

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?ObjStr@@3PAPADA[edx]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1896 : 			else

	jmp	SHORT $LN7@UpdateInte
$LN8@UpdateInte:

; 1897 : 				txt->SetText(" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN7@UpdateInte:

; 1898 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@UpdateInte:

; 1899 : 		}
; 1900 : 		txt=(C_Text *)win->FindControl(OBJ_4);

	push	6275					; 00001883H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1901 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN6@UpdateInte

; 1902 : 		{
; 1903 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1904 : 			if(i > 3)

	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 3
	jle	SHORT $LN5@UpdateInte

; 1905 : 				txt->SetText(ObjStr[3]);

	mov	edx, 4
	imul	edx, 3
	mov	eax, DWORD PTR ?ObjStr@@3PAPADA[edx]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1906 : 			else

	jmp	SHORT $LN4@UpdateInte
$LN5@UpdateInte:

; 1907 : 				txt->SetText(" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN4@UpdateInte:

; 1908 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@UpdateInte:

; 1909 : 		}
; 1910 : 		txt=(C_Text *)win->FindControl(OBJ_5);

	push	6248					; 00001868H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1911 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN48@UpdateInte

; 1912 : 		{
; 1913 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1914 : 			if(i > 4)

	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 4
	jle	SHORT $LN2@UpdateInte

; 1915 : 				txt->SetText(ObjStr[4]);

	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR ?ObjStr@@3PAPADA[edx]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1916 : 			else

	jmp	SHORT $LN1@UpdateInte
$LN2@UpdateInte:

; 1917 : 				txt->SetText(" ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN1@UpdateInte:

; 1918 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN48@UpdateInte:

; 1919 : 		}
; 1920 : 	}
; 1921 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateIntel@@YAXJ@Z ENDP				; UpdateIntel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_w$ = -16						; size = 4
tv64 = -12						; size = 4
_value$ = -8						; size = 4
_max$ = -4						; size = 4
_line$ = 8						; size = 4
_valueID$ = 12						; size = 4
_Team$ = 16						; size = 4
?MakeBar@@YAXPAVC_Line@@JJ@Z PROC			; MakeBar

; 1638 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 1639 : 	long max=1;

	mov	DWORD PTR _max$[ebp], 1

; 1640 : 	long value=0,w;

	mov	DWORD PTR _value$[ebp], 0

; 1641 : 
; 1642 : 	switch(valueID)

	mov	eax, DWORD PTR _valueID$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 6230				; 00001856H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 8
	ja	$LN31@MakeBar
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN35@MakeBar[edx*4]
$LN30@MakeBar:

; 1643 : 	{
; 1644 : 		case STAT_1:
; 1645 : 			value=TeamInfo[Team]->GetCurrentStats()->aircraft;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _value$[ebp], ecx

; 1646 : 			if(TeamInfo[2]->startStats.aircraft > TeamInfo[6]->startStats.aircraft)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+618]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+618]
	cmp	ecx, edx
	jle	SHORT $LN29@MakeBar

; 1647 : 				max=TeamInfo[2]->startStats.aircraft;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+618]
	mov	DWORD PTR _max$[ebp], edx

; 1648 : 			else

	jmp	SHORT $LN28@MakeBar
$LN29@MakeBar:

; 1649 : 				max=TeamInfo[6]->startStats.aircraft;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+618]
	mov	DWORD PTR _max$[ebp], edx
$LN28@MakeBar:

; 1650 : 			break;

	jmp	$LN31@MakeBar
$LN27@MakeBar:

; 1651 : 		case STAT_2:
; 1652 : 			value=TeamInfo[Team]->GetCurrentStats()->airDefenseVehs;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _value$[ebp], ecx

; 1653 : 			if(TeamInfo[2]->startStats.airDefenseVehs > TeamInfo[6]->startStats.airDefenseVehs)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+616]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+616]
	cmp	ecx, edx
	jle	SHORT $LN26@MakeBar

; 1654 : 				max=TeamInfo[2]->startStats.airDefenseVehs;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+616]
	mov	DWORD PTR _max$[ebp], edx

; 1655 : 			else

	jmp	SHORT $LN25@MakeBar
$LN26@MakeBar:

; 1656 : 				max=TeamInfo[6]->startStats.airDefenseVehs;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+616]
	mov	DWORD PTR _max$[ebp], edx
$LN25@MakeBar:

; 1657 : 			break;

	jmp	$LN31@MakeBar
$LN24@MakeBar:

; 1658 : 		case STAT_3:
; 1659 : 			value=TeamInfo[Team]->GetCurrentStats()->groundVehs;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _value$[ebp], ecx

; 1660 : 			if(TeamInfo[2]->startStats.groundVehs > TeamInfo[6]->startStats.groundVehs)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+620]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+620]
	cmp	ecx, edx
	jle	SHORT $LN23@MakeBar

; 1661 : 				max=TeamInfo[2]->startStats.groundVehs;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+620]
	mov	DWORD PTR _max$[ebp], edx

; 1662 : 			else

	jmp	SHORT $LN22@MakeBar
$LN23@MakeBar:

; 1663 : 				max=TeamInfo[6]->startStats.groundVehs;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+620]
	mov	DWORD PTR _max$[ebp], edx
$LN22@MakeBar:

; 1664 : 			break;

	jmp	$LN31@MakeBar
$LN21@MakeBar:

; 1665 : 		case STAT_4:
; 1666 : 			value=TeamInfo[Team]->GetCurrentStats()->ships;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _value$[ebp], ecx

; 1667 : 			if(TeamInfo[2]->startStats.ships > TeamInfo[6]->startStats.ships)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+622]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+622]
	cmp	ecx, edx
	jle	SHORT $LN20@MakeBar

; 1668 : 				max=TeamInfo[2]->startStats.ships;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+622]
	mov	DWORD PTR _max$[ebp], edx

; 1669 : 			else

	jmp	SHORT $LN19@MakeBar
$LN20@MakeBar:

; 1670 : 				max=TeamInfo[6]->startStats.ships;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+622]
	mov	DWORD PTR _max$[ebp], edx
$LN19@MakeBar:

; 1671 : 			break;

	jmp	$LN31@MakeBar
$LN18@MakeBar:

; 1672 : 		case STAT_5:
; 1673 : 			value=TeamInfo[Team]->GetCurrentStats()->supplyLevel;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, BYTE PTR [eax+14]
	mov	DWORD PTR _value$[ebp], ecx

; 1674 : 			if(TeamInfo[2]->startStats.supplyLevel > TeamInfo[6]->startStats.supplyLevel)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, BYTE PTR [eax+630]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, BYTE PTR [eax+630]
	cmp	ecx, edx
	jle	SHORT $LN17@MakeBar

; 1675 : 				max=TeamInfo[2]->startStats.supplyLevel;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, BYTE PTR [ecx+630]
	mov	DWORD PTR _max$[ebp], edx

; 1676 : 			else

	jmp	SHORT $LN16@MakeBar
$LN17@MakeBar:

; 1677 : 				max=TeamInfo[6]->startStats.supplyLevel;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, BYTE PTR [ecx+630]
	mov	DWORD PTR _max$[ebp], edx
$LN16@MakeBar:

; 1678 : 			break;

	jmp	$LN31@MakeBar
$LN15@MakeBar:

; 1679 : 		case STAT_6:
; 1680 : 			value=TeamInfo[Team]->GetCurrentStats()->fuelLevel;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, BYTE PTR [eax+15]
	mov	DWORD PTR _value$[ebp], ecx

; 1681 : 			if(TeamInfo[2]->startStats.fuelLevel > TeamInfo[6]->startStats.fuelLevel)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, BYTE PTR [eax+631]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, BYTE PTR [eax+631]
	cmp	ecx, edx
	jle	SHORT $LN14@MakeBar

; 1682 : 				max=TeamInfo[2]->startStats.fuelLevel;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, BYTE PTR [ecx+631]
	mov	DWORD PTR _max$[ebp], edx

; 1683 : 			else

	jmp	SHORT $LN13@MakeBar
$LN14@MakeBar:

; 1684 : 				max=TeamInfo[6]->startStats.fuelLevel;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, BYTE PTR [ecx+631]
	mov	DWORD PTR _max$[ebp], edx
$LN13@MakeBar:

; 1685 : 			break;

	jmp	$LN31@MakeBar
$LN12@MakeBar:

; 1686 : 		case STAT_7:
; 1687 : 			value=TeamInfo[Team]->GetCurrentStats()->airbases;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+12]
	mov	DWORD PTR _value$[ebp], ecx

; 1688 : 			if(TeamInfo[2]->startStats.airbases > TeamInfo[6]->startStats.airbases)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+628]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+628]
	cmp	ecx, edx
	jle	SHORT $LN11@MakeBar

; 1689 : 				max=TeamInfo[2]->startStats.airbases;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+628]
	mov	DWORD PTR _max$[ebp], edx

; 1690 : 			else

	jmp	SHORT $LN10@MakeBar
$LN11@MakeBar:

; 1691 : 				max=TeamInfo[6]->startStats.airbases;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+628]
	mov	DWORD PTR _max$[ebp], edx
$LN10@MakeBar:

; 1692 : 			break;

	jmp	$LN31@MakeBar
$LN9@MakeBar:

; 1693 : 		case STAT_8:
; 1694 : 			value=TeamInfo[Team]->GetCurrentStats()->aircraft;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _value$[ebp], ecx

; 1695 : 			if(TeamInfo[2]->startStats.aircraft > TeamInfo[6]->startStats.aircraft)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+618]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+618]
	cmp	ecx, edx
	jle	SHORT $LN8@MakeBar

; 1696 : 				max=TeamInfo[2]->startStats.aircraft;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+618]
	mov	DWORD PTR _max$[ebp], edx

; 1697 : 			else

	jmp	SHORT $LN7@MakeBar
$LN8@MakeBar:

; 1698 : 				max=TeamInfo[6]->startStats.aircraft;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+618]
	mov	DWORD PTR _max$[ebp], edx
$LN7@MakeBar:

; 1699 : 			break;

	jmp	SHORT $LN31@MakeBar
$LN6@MakeBar:

; 1700 : 		case STAT_9:
; 1701 : 			value=TeamInfo[Team]->GetCurrentStats()->groundVehs;

	mov	eax, DWORD PTR _Team$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	call	?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ; TeamClass::GetCurrentStats
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _value$[ebp], ecx

; 1702 : 			if(TeamInfo[2]->startStats.groundVehs > TeamInfo[6]->startStats.groundVehs)

	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	ecx, WORD PTR [eax+620]
	mov	edx, 4
	imul	edx, 6
	mov	eax, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx]
	movzx	edx, WORD PTR [eax+620]
	cmp	ecx, edx
	jle	SHORT $LN5@MakeBar

; 1703 : 				max=TeamInfo[2]->startStats.groundVehs;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+620]
	mov	DWORD PTR _max$[ebp], edx

; 1704 : 			else

	jmp	SHORT $LN31@MakeBar
$LN5@MakeBar:

; 1705 : 				max=TeamInfo[6]->startStats.groundVehs;

	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax]
	movzx	edx, WORD PTR [ecx+620]
	mov	DWORD PTR _max$[ebp], edx
$LN31@MakeBar:

; 1706 : 			break;
; 1707 : 	}
; 1708 : 	if(line->GetUserNumber(0) == 0)

	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	jne	SHORT $LN3@MakeBar

; 1709 : 	{
; 1710 : 		line->SetUserNumber(0,line->GetX());

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	push	eax
	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1711 : 		line->SetUserNumber(1,line->GetY());

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	push	eax
	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1712 : 		line->SetUserNumber(2,line->GetW());

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	push	eax
	push	2
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1713 : 		line->SetUserNumber(3,line->GetH());

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	push	eax
	push	3
	mov	ecx, DWORD PTR _line$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN3@MakeBar:

; 1714 : 	}
; 1715 : 	if(!max)

	cmp	DWORD PTR _max$[ebp], 0
	jne	SHORT $LN2@MakeBar

; 1716 : 		max=1000000;

	mov	DWORD PTR _max$[ebp], 1000000		; 000f4240H
$LN2@MakeBar:

; 1717 : 
; 1718 : 	w=(line->GetUserNumber(2) * value) / max;

	push	2
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	imul	eax, DWORD PTR _value$[ebp]
	cdq
	idiv	DWORD PTR _max$[ebp]
	mov	DWORD PTR _w$[ebp], eax

; 1719 : 	if(w > line->GetUserNumber(2))

	push	2
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	DWORD PTR _w$[ebp], eax
	jle	SHORT $LN1@MakeBar

; 1720 : 		w=line->GetUserNumber(2);

	push	2
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _w$[ebp], eax
$LN1@MakeBar:

; 1721 : 
; 1722 : 	line->SetW(w);

	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax

; 1723 : 
; 1724 : 	line->Parent_->update_ |= C_DRAW_REFRESH;

	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [edx+104]
	or	eax, 1
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [edx+104], eax

; 1725 : 	line->Parent_->SetUpdateRect(line->GetUserNumber(0),line->GetUserNumber(1),
; 1726 : 								 line->GetUserNumber(0)+line->GetUserNumber(2),
; 1727 : 								 line->GetUserNumber(1)+line->GetUserNumber(3),
; 1728 : 								 line->GetFlags(),line->GetClient());

	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	push	eax
	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	3
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	add	esi, eax
	push	esi
	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	esi, eax
	push	2
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	add	esi, eax
	push	esi
	push	1
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	0
	mov	ecx, DWORD PTR _line$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetUpdateRect@C_Window@@QAEXJJJJJJ@Z	; C_Window::SetUpdateRect

; 1729 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@MakeBar:
	DD	$LN30@MakeBar
	DD	$LN27@MakeBar
	DD	$LN24@MakeBar
	DD	$LN21@MakeBar
	DD	$LN18@MakeBar
	DD	$LN15@MakeBar
	DD	$LN12@MakeBar
	DD	$LN9@MakeBar
	DD	$LN6@MakeBar
?MakeBar@@YAXPAVC_Line@@JJ@Z ENDP			; MakeBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -932						; size = 8
$T2 = -924						; size = 8
$T3 = -916						; size = 8
$T4 = -908						; size = 8
_Leave$ = -900						; size = 4
_session$ = -896					; size = 4
_tree$ = -892						; size = 4
tv304 = -888						; size = 4
_curpackage$ = -884					; size = 4
_wp$ = -880						; size = 4
_UnitPtr$5 = -876					; size = 4
_cur$ = -872						; size = 4
_curflight$ = -868					; size = 4
_planecount$ = -864					; size = 2
_win$ = -860						; size = 4
_btn$ = -856						; size = 4
_i$ = -852						; size = 2
_txt$ = -848						; size = 4
_Task$ = -844						; size = 200
_Mission$ = -644					; size = 200
_TOT$ = -444						; size = 200
_PilotName$ = -244					; size = 40
_Buffer$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
?UpdateMissionWindow@@YAXJ@Z PROC			; UpdateMissionWindow

; 1402 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 932				; 000003a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1403 : 	C_Window *win;
; 1404 : 	C_Button *btn;
; 1405 : 	C_Text *txt;
; 1406 : 	TREELIST *cur;
; 1407 : 	C_TreeList *tree;
; 1408 : 	Package curpackage;
; 1409 : 	Flight curflight;
; 1410 : 	WayPoint wp;
; 1411 : 	_TCHAR Task[200];
; 1412 : 	_TCHAR Mission[200];
; 1413 : 	_TCHAR TOT[200];
; 1414 : 	_TCHAR Buffer[200];
; 1415 : 	_TCHAR PilotName[40];
; 1416 : 	F4CSECTIONHANDLE *Leave;
; 1417 : 	FalconSessionEntity *session;
; 1418 : 	short i,planecount;
; 1419 : 
; 1420 : 	if (!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN54@UpdateMiss

; 1421 : 	{
; 1422 : 		return;

	jmp	$LN55@UpdateMiss
$LN54@UpdateMiss:

; 1423 : 	}
; 1424 : 
; 1425 : 	win=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1426 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN55@UpdateMiss

; 1427 : 	{
; 1428 : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1429 : 		curflight=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _curflight$[ebp], eax

; 1430 : 		if(curflight)

	cmp	DWORD PTR _curflight$[ebp], 0
	je	SHORT $LN52@UpdateMiss

; 1431 : 			curpackage=(Package)curflight->GetUnitParent();

	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	eax, DWORD PTR [edx+1008]
	call	eax
	mov	DWORD PTR _curpackage$[ebp], eax

; 1432 : 		else

	jmp	SHORT $LN51@UpdateMiss
$LN52@UpdateMiss:

; 1433 : 			curpackage=NULL;

	mov	DWORD PTR _curpackage$[ebp], 0
$LN51@UpdateMiss:

; 1434 : 
; 1435 : 		tree=(C_TreeList*)win->FindControl(MISSION_LIST_TREE);

	push	6130					; 000017f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1436 : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN50@UpdateMiss

; 1437 : 		{
; 1438 : 			cur=tree->GetRoot();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	mov	DWORD PTR _cur$[ebp], eax
$LN49@UpdateMiss:

; 1439 : 			while(cur)

	cmp	DWORD PTR _cur$[ebp], 0
	je	$LN50@UpdateMiss

; 1440 : 			{
; 1441 : 				if(((C_Mission*)cur->Item_)->GetVUID() == FalconLocalSession->GetPlayerFlightID())

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerFlightID
	push	eax
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ	; C_Mission::GetVUID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN47@UpdateMiss

; 1442 : 					cur->Item_->SetState(2);

	push	2
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1443 : 				else

	jmp	SHORT $LN46@UpdateMiss
$LN47@UpdateMiss:

; 1444 : 					cur->Item_->SetState(0);

	push	0
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN46@UpdateMiss:

; 1445 : 
; 1446 : 				if(((C_Mission*)cur->Item_)->GetVUID() == gCurrentFlightID)

	push	OFFSET ?gCurrentFlightID@@3VVU_ID@@A	; gCurrentFlightID
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	call	?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ	; C_Mission::GetVUID
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN45@UpdateMiss

; 1447 : 					cur->Item_->SetState(static_cast<short>(cur->Item_->GetState() | 1));

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	or	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN45@UpdateMiss:

; 1448 : 
; 1449 : 				cur=cur->Next;

	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _cur$[ebp], edx

; 1450 : 			}

	jmp	$LN49@UpdateMiss
$LN50@UpdateMiss:

; 1451 : 		}
; 1452 : 		planecount=0;

	xor	eax, eax
	mov	WORD PTR _planecount$[ebp], ax

; 1453 : 		if(curflight)

	cmp	DWORD PTR _curflight$[ebp], 0
	je	SHORT $LN44@UpdateMiss
$LN43@UpdateMiss:

; 1454 : 		{			
; 1455 : 			while(curflight->plane_stats[planecount] != AIRCRAFT_NOT_ASSIGNED && planecount < PILOTS_PER_FLIGHT)

	movsx	ecx, WORD PTR _planecount$[ebp]
	mov	edx, DWORD PTR _curflight$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+416]
	test	eax, eax
	je	SHORT $LN44@UpdateMiss
	movsx	ecx, WORD PTR _planecount$[ebp]
	cmp	ecx, 4
	jge	SHORT $LN44@UpdateMiss

; 1456 : 				planecount++;

	mov	dx, WORD PTR _planecount$[ebp]
	add	dx, 1
	mov	WORD PTR _planecount$[ebp], dx
	jmp	SHORT $LN43@UpdateMiss
$LN44@UpdateMiss:

; 1457 : 		}
; 1458 : 		if(curflight && curpackage && planecount)

	cmp	DWORD PTR _curflight$[ebp], 0
	je	$LN41@UpdateMiss
	cmp	DWORD PTR _curpackage$[ebp], 0
	je	$LN41@UpdateMiss
	movsx	eax, WORD PTR _planecount$[ebp]
	test	eax, eax
	je	$LN41@UpdateMiss

; 1459 : 		{
; 1460 : 			txt=(C_Text *)win->FindControl(FLIGHT_LABEL);

	push	6126					; 000017eeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1461 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN40@UpdateMiss

; 1462 : 			{
; 1463 : 				GetCallsign(curflight, Buffer);

	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curflight$[ebp]
	push	edx
	call	?GetCallsign@@YAXPAVFlightClass@@PAD@Z	; GetCallsign
	add	esp, 8

; 1464 : 				_tcscat(Buffer,": ");

	push	OFFSET ??_C@_02LMMGGCAJ@?3?5?$AA@
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 1465 : 				_tcscat(Buffer,MissStr[curflight->GetUnitMission()]);

	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	imul	eax, 20					; 00000014H
	add	eax, OFFSET ?MissStr@@3PAY0BE@DA	; MissStr
	push	eax
	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 1466 : 				txt->SetText(Buffer);

	lea	edx, DWORD PTR _Buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN40@UpdateMiss:

; 1467 : 			}
; 1468 : 
; 1469 : 			if(PlaneIDTable[planecount-1][0])

	movsx	ecx, WORD PTR _planecount$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, 4
	imul	edx, 0
	cmp	DWORD PTR _PlaneIDTable[ecx+edx], 0
	je	$LN39@UpdateMiss

; 1470 : 			{
; 1471 : 				for(i=0;i<planecount;i++)

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN38@UpdateMiss
$LN37@UpdateMiss:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN38@UpdateMiss:
	movsx	edx, WORD PTR _i$[ebp]
	movsx	eax, WORD PTR _planecount$[ebp]
	cmp	edx, eax
	jge	$LN39@UpdateMiss

; 1472 : 				{
; 1473 : 					btn=(C_Button *)win->FindControl(PlaneIDTable[planecount-1][i]);

	movsx	ecx, WORD PTR _planecount$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _PlaneIDTable[ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1474 : 
; 1475 : 					// JB 020211 Load the correct mission icons for each type of aircraft
; 1476 : 					if (g_bMissionACIcons)

	movzx	ecx, BYTE PTR ?g_bMissionACIcons@@3_NA	; g_bMissionACIcons
	test	ecx, ecx
	je	$LN35@UpdateMiss

; 1477 : 					{
; 1478 : 						UnitClassDataType *UnitPtr = NULL;

	mov	DWORD PTR _UnitPtr$5[ebp], 0

; 1479 : 						if (curflight)

	cmp	DWORD PTR _curflight$[ebp], 0
	je	SHORT $LN34@UpdateMiss

; 1480 : 							UnitPtr = curflight->GetUnitClassData();

	mov	ecx, DWORD PTR _curflight$[ebp]
	call	?GetUnitClassData@UnitClass@@QAEPAUUnitClassDataType@@XZ ; UnitClass::GetUnitClassData
	mov	DWORD PTR _UnitPtr$5[ebp], eax
$LN34@UpdateMiss:

; 1481 : 						if (UnitPtr)

	cmp	DWORD PTR _UnitPtr$5[ebp], 0
	je	SHORT $LN35@UpdateMiss

; 1482 : 						{
; 1483 : 							btn->SetImage(C_STATE_0,UnitPtr->IconIndex);

	mov	edx, DWORD PTR _UnitPtr$5[ebp]
	movsx	eax, WORD PTR [edx+332]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1484 : 							btn->SetImage(C_STATE_1,UnitPtr->IconIndex);

	mov	ecx, DWORD PTR _UnitPtr$5[ebp]
	movsx	edx, WORD PTR [ecx+332]
	push	edx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1485 : 							btn->SetImage(C_STATE_SELECTED,UnitPtr->IconIndex);

	mov	eax, DWORD PTR _UnitPtr$5[ebp]
	movsx	ecx, WORD PTR [eax+332]
	push	ecx
	push	22					; 00000016H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage

; 1486 : 							btn->SetImage(C_STATE_DISABLED,UnitPtr->IconIndex);

	mov	edx, DWORD PTR _UnitPtr$5[ebp]
	movsx	eax, WORD PTR [edx+332]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFJ@Z		; C_Button::SetImage
$LN35@UpdateMiss:

; 1487 : 						}
; 1488 : 					}
; 1489 : 										
; 1490 : 					if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN32@UpdateMiss

; 1491 : 					{
; 1492 : 						switch(curflight->plane_stats[i])

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _curflight$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+416]
	mov	DWORD PTR tv304[ebp], eax
	mov	ecx, DWORD PTR tv304[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv304[ebp], ecx
	cmp	DWORD PTR tv304[ebp], 3
	ja	$LN21@UpdateMiss
	mov	edx, DWORD PTR tv304[ebp]
	jmp	DWORD PTR $LN57@UpdateMiss[edx*4]
$LN29@UpdateMiss:

; 1493 : 						{
; 1494 : 							case AIRCRAFT_AVAILABLE:
; 1495 : 								session=gCommsMgr->FindCampaignPlayer(curflight->Id(),static_cast<uchar>(i));

	movzx	eax, BYTE PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _curflight$[ebp]
	call	?Id@VuEntity@@QBE?AVVU_ID@@XZ		; VuEntity::Id
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?FindCampaignPlayer@UIComms@@QAEPAVFalconSessionEntity@@VVU_ID@@E@Z ; UIComms::FindCampaignPlayer
	mov	DWORD PTR _session$[ebp], eax

; 1496 : 								btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1497 : 								if(session)

	cmp	DWORD PTR _session$[ebp], 0
	je	SHORT $LN28@UpdateMiss

; 1498 : 									_stprintf(Buffer,"[%s]",session->GetPlayerName());

	mov	ecx, DWORD PTR _session$[ebp]
	call	?GetPlayerName@FalconSessionEntity@@QAEPADXZ ; FalconSessionEntity::GetPlayerName
	push	eax
	push	OFFSET ??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@
	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1499 : 								else

	jmp	SHORT $LN27@UpdateMiss
$LN28@UpdateMiss:

; 1500 : 								{
; 1501 : 									if (!TheCampaign.MissionEvaluator->GetPilotName(i,PilotName))

	lea	edx, DWORD PTR _PilotName$[ebp]
	push	edx
	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	call	?GetPilotName@MissionEvaluationClass@@QAEHHPAD@Z ; MissionEvaluationClass::GetPilotName
	test	eax, eax
	jne	SHORT $LN26@UpdateMiss

; 1502 : 									{
; 1503 : 										_stprintf(Buffer,"[%s]",gStringMgr->GetString(TXT_TBD));

	push	314					; 0000013aH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@
	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1504 : 									}
; 1505 : 									else

	jmp	SHORT $LN27@UpdateMiss
$LN26@UpdateMiss:

; 1506 : 										_stprintf(Buffer,"[%s]",PilotName);

	lea	edx, DWORD PTR _PilotName$[ebp]
	push	edx
	push	OFFSET ??_C@_04LIFAFMCE@?$FL?$CFs?$FN?$AA@
	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN27@UpdateMiss:

; 1507 : 								}
; 1508 : 								btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1509 : 								btn->SetAllLabel(gStringMgr->GetText(gStringMgr->AddText(Buffer)));

	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?AddText@C_String@@QAEJPBD@Z		; C_String::AddText
	push	eax
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetText@C_String@@QAEPADJ@Z		; C_String::GetText
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetAllLabel@C_Button@@QAEXPAD@Z	; C_Button::SetAllLabel

; 1510 : 								break;

	jmp	$LN32@UpdateMiss
$LN24@UpdateMiss:

; 1511 : 							case AIRCRAFT_DEAD:
; 1512 : 								btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 1513 : 								btn->SetAllLabel(TXT_KIA);

	push	313					; 00000139H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetAllLabel@C_Button@@QAEXJ@Z		; C_Button::SetAllLabel

; 1514 : 								break;

	jmp	SHORT $LN32@UpdateMiss
$LN23@UpdateMiss:

; 1515 : 							case AIRCRAFT_RTB:
; 1516 : 								btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1517 : 								btn->SetAllLabel(TXT_RETURNTOBASE);

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetAllLabel@C_Button@@QAEXJ@Z		; C_Button::SetAllLabel

; 1518 : 								break;

	jmp	SHORT $LN32@UpdateMiss
$LN22@UpdateMiss:

; 1519 : 							case AIRCRAFT_MISSING:
; 1520 : 								btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1521 : 								btn->SetAllLabel(TXT_MIA);

	push	312					; 00000138H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetAllLabel@C_Button@@QAEXJ@Z		; C_Button::SetAllLabel

; 1522 : 								break;

	jmp	SHORT $LN32@UpdateMiss
$LN21@UpdateMiss:

; 1523 : 							default:
; 1524 : 								btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1525 : 								btn->SetAllLabel(TXT_RETURNTOBASE);

	push	26					; 0000001aH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetAllLabel@C_Button@@QAEXJ@Z		; C_Button::SetAllLabel
$LN32@UpdateMiss:

; 1526 : 								break;
; 1527 : 						}
; 1528 : 					}
; 1529 : 				}

	jmp	$LN37@UpdateMiss
$LN39@UpdateMiss:

; 1530 : 			}
; 1531 : 
; 1532 : 			// Get Task string
; 1533 : 			if (curpackage->GetMissionRequest()){

	mov	ecx, DWORD PTR _curpackage$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	test	eax, eax
	je	SHORT $LN20@UpdateMiss

; 1534 : 				_tcscpy(Task,MissStr[curpackage->GetMissionRequest()->mission]);

	mov	ecx, DWORD PTR _curpackage$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	movzx	ecx, BYTE PTR [eax+60]
	imul	ecx, 20					; 00000014H
	add	ecx, OFFSET ?MissStr@@3PAY0BE@DA	; MissStr
	push	ecx
	lea	edx, DWORD PTR _Task$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN20@UpdateMiss:

; 1535 : 			}
; 1536 : 
; 1537 : 			// Get Mission string
; 1538 : 
; 1539 : 			if((curflight != NULL) && (curflight->GetUnitMission() != AMIS_ABORT))

	cmp	DWORD PTR _curflight$[ebp], 0
	je	$LN19@UpdateMiss
	mov	eax, DWORD PTR _curflight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	cmp	eax, 39					; 00000027H
	je	$LN19@UpdateMiss

; 1540 : 			{
; 1541 : 				GetMissionTarget(curpackage,curflight,Buffer);

	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curflight$[ebp]
	push	edx
	mov	eax, DWORD PTR _curpackage$[ebp]
	push	eax
	call	?GetMissionTarget@@YAXPAVPackageClass@@PAVFlightClass@@QAD@Z ; GetMissionTarget
	add	esp, 12					; 0000000cH

; 1542 : 
; 1543 : 				_tcscpy(Mission,Buffer);

	lea	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Mission$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1544 : 
; 1545 : 				// Time on Target (TOT)
; 1546 : 				_tcscpy(TOT," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	eax, DWORD PTR _TOT$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1547 : 				wp=curflight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _curflight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax
$LN18@UpdateMiss:

; 1548 : 
; 1549 : 				while(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN17@UpdateMiss

; 1550 : 				{
; 1551 : 					if(wp->GetWPFlags() & WPF_TARGET)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN16@UpdateMiss

; 1552 : 					{
; 1553 : 						GetTimeString(wp->GetWPArrivalTime(),TOT);

	push	1
	lea	ecx, DWORD PTR _TOT$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	push	eax
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 1554 : 						wp=NULL;

	mov	DWORD PTR _wp$[ebp], 0

; 1555 : 					}
; 1556 : 					else

	jmp	SHORT $LN15@UpdateMiss
$LN16@UpdateMiss:

; 1557 : 						wp=wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax
$LN15@UpdateMiss:

; 1558 : 				}

	jmp	SHORT $LN18@UpdateMiss
$LN17@UpdateMiss:

; 1559 : 			}
; 1560 : 			else

	jmp	SHORT $LN14@UpdateMiss
$LN19@UpdateMiss:

; 1561 : 			{
; 1562 : 				_tcscpy(Task,gStringMgr->GetString(TXT_RETURN_TO_BASE));

	push	184					; 000000b8H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	edx, DWORD PTR _Task$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1563 : 				_tcscpy(Mission,gStringMgr->GetString(TXT_MISSION_ABORTED));

	push	185					; 000000b9H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	eax, DWORD PTR _Mission$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1564 : 				_tcscpy(TOT,gStringMgr->GetString(TXT_ABORTED));

	push	186					; 000000baH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	ecx, DWORD PTR _TOT$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN14@UpdateMiss:

; 1565 : 			}
; 1566 : 
; 1567 : 			// Task
; 1568 : 			txt=(C_Text *)win->FindControl(ROLE_FIELD);

	push	6103					; 000017d7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1569 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN13@UpdateMiss

; 1570 : 			{
; 1571 : 				txt->SetText(Task);

	lea	edx, DWORD PTR _Task$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN13@UpdateMiss:

; 1572 : 			}
; 1573 : 
; 1574 : 			// Mission
; 1575 : 			txt=(C_Text *)win->FindControl(MISSION_FIELD);

	push	6105					; 000017d9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1576 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN12@UpdateMiss

; 1577 : 			{
; 1578 : 				txt->SetText(Mission);

	lea	ecx, DWORD PTR _Mission$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN12@UpdateMiss:

; 1579 : 			}
; 1580 : 
; 1581 : 			// TOT
; 1582 : 			txt=(C_Text *)win->FindControl(TOT_FIELD);

	push	6107					; 000017dbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1583 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN11@UpdateMiss

; 1584 : 			{
; 1585 : 				txt->SetText(TOT);

	lea	eax, DWORD PTR _TOT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN11@UpdateMiss:

; 1586 : 			}
; 1587 : 			for(i=1;i<5;i++)

	mov	ecx, 1
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN10@UpdateMiss
$LN9@UpdateMiss:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN10@UpdateMiss:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 5
	jge	SHORT $LN8@UpdateMiss

; 1588 : 				if(i == planecount)

	movsx	ecx, WORD PTR _i$[ebp]
	movsx	edx, WORD PTR _planecount$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN7@UpdateMiss

; 1589 : 					win->UnHideCluster(i);

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1590 : 				else

	jmp	SHORT $LN6@UpdateMiss
$LN7@UpdateMiss:

; 1591 : 					win->HideCluster(i);

	movsx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN6@UpdateMiss:
	jmp	SHORT $LN9@UpdateMiss
$LN8@UpdateMiss:

; 1592 : 			win->UnHideCluster(5);

	push	5
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1593 : 		}
; 1594 : 		else

	jmp	$LN5@UpdateMiss
$LN41@UpdateMiss:

; 1595 : 		{
; 1596 : 			win->HideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1597 : 			win->HideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1598 : 			win->HideCluster(3);

	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1599 : 			win->HideCluster(4);

	push	4
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1600 : 			txt=(C_Text *)win->FindControl(FLIGHT_LABEL);

	push	6126					; 000017eeH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1601 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@UpdateMiss

; 1602 : 			{
; 1603 : 				_tcscpy(Buffer,gStringMgr->GetString(/*TXT_PLANNING*/TXT_NOT_AVAILABLE));//Cobra

	push	190					; 000000beH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	edx, DWORD PTR _Buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1604 : 				txt->SetText(Buffer);

	lea	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN4@UpdateMiss:

; 1605 : 			}
; 1606 : 
; 1607 : 			_tcscpy(Task,gStringMgr->GetString(TXT_NOT_AVAILABLE));

	push	190					; 000000beH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	ecx, DWORD PTR _Task$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1608 : 			_tcscpy(Mission,gStringMgr->GetString(TXT_NOT_AVAILABLE));

	push	190					; 000000beH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	edx, DWORD PTR _Mission$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1609 : 			_tcscpy(TOT,gStringMgr->GetString(TXT_NOT_AVAILABLE));

	push	190					; 000000beH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	lea	eax, DWORD PTR _TOT$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1610 : 
; 1611 : 			// Task
; 1612 : 			txt=(C_Text *)win->FindControl(ROLE_FIELD);

	push	6103					; 000017d7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1613 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@UpdateMiss

; 1614 : 			{
; 1615 : 				txt->SetText(Task);

	lea	ecx, DWORD PTR _Task$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN3@UpdateMiss:

; 1616 : 			}
; 1617 : 
; 1618 : 			// Mission
; 1619 : 			txt=(C_Text *)win->FindControl(MISSION_FIELD);

	push	6105					; 000017d9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1620 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@UpdateMiss

; 1621 : 			{
; 1622 : 				txt->SetText(Mission);

	lea	eax, DWORD PTR _Mission$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN2@UpdateMiss:

; 1623 : 			}
; 1624 : 
; 1625 : 			// TOT
; 1626 : 			txt=(C_Text *)win->FindControl(TOT_FIELD);

	push	6107					; 000017dbH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1627 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN5@UpdateMiss

; 1628 : 			{
; 1629 : 				txt->SetText(TOT);

	lea	ecx, DWORD PTR _TOT$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN5@UpdateMiss:

; 1630 : 			}
; 1631 : 		}
; 1632 : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 1633 : 		UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN55@UpdateMiss:

; 1634 : 	}
; 1635 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN57@UpdateMiss:
	DD	$LN22@UpdateMiss
	DD	$LN24@UpdateMiss
	DD	$LN23@UpdateMiss
	DD	$LN29@UpdateMiss
?UpdateMissionWindow@@YAXJ@Z ENDP			; UpdateMissionWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_wp$ = -8						; size = 4
_found$ = -4						; size = 2
_element$ = 8						; size = 4
_buffer$ = 12						; size = 4
?GetFlightStatus@@YAXPAVFlightClass@@QAD@Z PROC		; GetFlightStatus

; 1355 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1356 : 	WayPoint wp;
; 1357 : 	short found;
; 1358 : 
; 1359 : 	wp=element->GetCurrentUnitWP();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ ; UnitClass::GetCurrentUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 1360 : 	if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN15@GetFlightS

; 1361 : 	{
; 1362 : 		if(wp->GetWPAction() == WP_TAKEOFF)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 1
	jne	SHORT $LN14@GetFlightS

; 1363 : 			_tcscpy(buffer,gStringMgr->GetString(TXT_BRIEFING));

	push	25					; 00000019H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1364 : 		else

	jmp	$LN13@GetFlightS
$LN14@GetFlightS:

; 1365 : 		{
; 1366 : 			found=0;

	xor	ecx, ecx
	mov	WORD PTR _found$[ebp], cx

; 1367 : 			_tcscpy(buffer,gStringMgr->GetString(TXT_RETURNTOBASE));

	push	26					; 0000001aH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN12@GetFlightS:

; 1368 : 			while(found == 0 && wp)

	movsx	eax, WORD PTR _found$[ebp]
	test	eax, eax
	jne	$LN13@GetFlightS
	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN13@GetFlightS

; 1369 : 			{
; 1370 : 				if(wp->GetWPAction() == WP_ASSEMBLE)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 2
	jne	SHORT $LN10@GetFlightS

; 1371 : 				{
; 1372 : 					_tcscpy(buffer,gStringMgr->GetString(TXT_ENROUTE));

	push	33					; 00000021H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1373 : 					found=1;

	mov	edx, 1
	mov	WORD PTR _found$[ebp], dx
	jmp	$LN9@GetFlightS
$LN10@GetFlightS:

; 1374 : 				}
; 1375 : 				else if(wp->GetWPAction() == WP_POSTASSEMBLE)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 3
	jne	SHORT $LN8@GetFlightS

; 1376 : 				{
; 1377 : 					_tcscpy(buffer,gStringMgr->GetString(TXT_EGRESS));

	push	27					; 0000001bH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1378 : 					found=1;

	mov	ecx, 1
	mov	WORD PTR _found$[ebp], cx
	jmp	SHORT $LN9@GetFlightS
$LN8@GetFlightS:

; 1379 : 				}
; 1380 : 				else if(wp->GetWPFlags() & WPF_TARGET)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN6@GetFlightS

; 1381 : 				{
; 1382 : 					_tcscpy(buffer,gStringMgr->GetString(TXT_INGRESS));

	push	28					; 0000001cH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8

; 1383 : 					found=1;

	mov	eax, 1
	mov	WORD PTR _found$[ebp], ax
	jmp	SHORT $LN9@GetFlightS
$LN6@GetFlightS:

; 1384 : 				}
; 1385 : 				else if(wp->GetWPAction() == WP_LAND)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 7
	jne	SHORT $LN9@GetFlightS

; 1386 : 				{
; 1387 : 					_tcscpy(buffer,gStringMgr->GetString(TXT_LANDING));

	push	34					; 00000022H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1388 : 					found=0;

	xor	edx, edx
	mov	WORD PTR _found$[ebp], dx
$LN9@GetFlightS:

; 1389 : 				}
; 1390 : 				if(wp->GetWPAction() == WP_LAND)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 7
	jne	SHORT $LN3@GetFlightS

; 1391 : 					wp=NULL;

	mov	DWORD PTR _wp$[ebp], 0

; 1392 : 				else

	jmp	SHORT $LN2@GetFlightS
$LN3@GetFlightS:

; 1393 : 					wp=wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax
$LN2@GetFlightS:

; 1394 : 			}

	jmp	$LN12@GetFlightS
$LN13@GetFlightS:

; 1395 : 		}
; 1396 : 	}
; 1397 : 	else

	jmp	SHORT $LN16@GetFlightS
$LN15@GetFlightS:

; 1398 : 		_tcscpy(buffer,gStringMgr->GetString(TXT_RETURNTOBASE));

	push	26					; 0000001aH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN16@GetFlightS:

; 1399 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlightStatus@@YAXPAVFlightClass@@QAD@Z ENDP		; GetFlightStatus
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_wp$ = -16						; size = 4
_ent$ = -12						; size = 4
_x$ = -8						; size = 2
_y$ = -4						; size = 2
_curpackage$ = 8					; size = 4
_curflight$ = 12					; size = 4
_Buffer$ = 16						; size = 4
?GetMissionTarget@@YAXPAVPackageClass@@PAVFlightClass@@QAD@Z PROC ; GetMissionTarget

; 1301 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1302 : 	WayPoint wp;
; 1303 : 	CampEntity ent;
; 1304 : 	GridIndex x=0,y=0;

	xor	eax, eax
	mov	WORD PTR _x$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _y$[ebp], cx

; 1305 : 
; 1306 : 	if(((curflight) && (curflight->GetUnitMission() != AMIS_ABORT)) || (!curflight))

	cmp	DWORD PTR _curflight$[ebp], 0
	je	SHORT $LN12@GetMission
	mov	edx, DWORD PTR _curflight$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	edx, DWORD PTR [eax+664]
	call	edx
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN13@GetMission
$LN12@GetMission:
	cmp	DWORD PTR _curflight$[ebp], 0
	jne	$LN14@GetMission
$LN13@GetMission:

; 1307 : 	{
; 1308 : 		ent=FindEntity(curpackage->GetMissionRequest()->targetID);

	mov	ecx, DWORD PTR _curpackage$[ebp]
	call	?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ; PackageClass::GetMissionRequest
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	call	?FindEntity@@YAPAVCampBaseClass@@VVU_ID@@@Z ; FindEntity
	add	esp, 8
	mov	DWORD PTR _ent$[ebp], eax

; 1309 : 		
; 1310 : 		if(ent && DisplayTarget(static_cast<short>(curflight->GetUnitMission())))

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN11@GetMission
	mov	eax, DWORD PTR _curflight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _curflight$[ebp]
	mov	eax, DWORD PTR [edx+664]
	call	eax
	push	eax
	call	?DisplayTarget@@YAHF@Z			; DisplayTarget
	add	esp, 4
	test	eax, eax
	je	SHORT $LN11@GetMission

; 1311 : 		{
; 1312 : 			if (ent->IsObjective())

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+236]
	call	eax
	test	eax, eax
	je	SHORT $LN10@GetMission

; 1313 : 				ent->GetName(Buffer,39,TRUE);

	push	1
	push	39					; 00000027H
	mov	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [eax+380]
	call	edx

; 1314 : 			else

	jmp	SHORT $LN9@GetMission
$LN10@GetMission:

; 1315 : 				ent->GetName(Buffer,39,FALSE);

	push	0
	push	39					; 00000027H
	mov	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+380]
	call	eax
$LN9@GetMission:

; 1316 : 		}
; 1317 : 		else

	jmp	$LN8@GetMission
$LN11@GetMission:

; 1318 : 		{
; 1319 : 			wp=curflight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _curflight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 1320 : 			if (!wp)

	cmp	DWORD PTR _wp$[ebp], 0
	jne	SHORT $LN6@GetMission

; 1321 : 			{
; 1322 : 				_tcscpy (Buffer, gStringMgr->GetString(TXT_NO_TARGET));

	push	188					; 000000bcH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _Buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8

; 1323 : 				return;

	jmp	$LN15@GetMission
$LN6@GetMission:

; 1324 : 			}
; 1325 : 
; 1326 : 			while(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN5@GetMission

; 1327 : 			{
; 1328 : 				if(wp->GetWPFlags() & WPF_TARGET)

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPFlags@WayPointClass@@QAEKXZ	; WayPointClass::GetWPFlags
	and	eax, 1
	je	SHORT $LN4@GetMission

; 1329 : 				{
; 1330 : 					wp->GetWPLocation(&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPLocation@WayPointClass@@QBEXPAF0@Z ; WayPointClass::GetWPLocation

; 1331 : 					
; 1332 : 					wp=NULL;

	mov	DWORD PTR _wp$[ebp], 0

; 1333 : 				}
; 1334 : 				else

	jmp	SHORT $LN3@GetMission
$LN4@GetMission:

; 1335 : 				{
; 1336 : 					wp=wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax
$LN3@GetMission:

; 1337 : 				}
; 1338 : 			}

	jmp	SHORT $LN6@GetMission
$LN5@GetMission:

; 1339 : 
; 1340 : 			if (!x && !y)

	movsx	ecx, WORD PTR _x$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@GetMission
	movsx	edx, WORD PTR _y$[ebp]
	test	edx, edx
	jne	SHORT $LN2@GetMission

; 1341 : 			{
; 1342 : 				_tcscpy (Buffer, gStringMgr->GetString(TXT_NO_TARGET));

	push	188					; 000000bcH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8

; 1343 : 				return;

	jmp	SHORT $LN15@GetMission
$LN2@GetMission:

; 1344 : 			}
; 1345 : 
; 1346 : 			Buffer[0]=0;

	mov	ecx, 1
	imul	ecx, 0
	mov	edx, DWORD PTR _Buffer$[ebp]
	mov	BYTE PTR [edx+ecx], 0

; 1347 : 			AddLocationToBuffer('N',x,y,Buffer);

	mov	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	movzx	ecx, WORD PTR _y$[ebp]
	push	ecx
	movzx	edx, WORD PTR _x$[ebp]
	push	edx
	push	78					; 0000004eH
	call	?AddLocationToBuffer@@YAXDFFPAD@Z	; AddLocationToBuffer
	add	esp, 16					; 00000010H
$LN8@GetMission:

; 1348 : 		}
; 1349 : 	}
; 1350 : 	else

	jmp	SHORT $LN15@GetMission
$LN14@GetMission:

; 1351 : 		_tcscpy(Buffer,gStringMgr->GetString(TXT_ABORTED));

	push	186					; 000000baH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _Buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN15@GetMission:

; 1352 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionTarget@@YAXPAVPackageClass@@PAVFlightClass@@QAD@Z ENDP ; GetMissionTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
tv65 = -4						; size = 4
_MissType$ = 8						; size = 2
?DisplayTarget@@YAHF@Z PROC				; DisplayTarget

; 1274 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1275 : 	switch(MissType)

	movsx	eax, WORD PTR _MissType$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 37			; 00000025H
	ja	SHORT $LN1@DisplayTar
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN7@DisplayTar[edx]
	jmp	DWORD PTR $LN8@DisplayTar[eax*4]
$LN2@DisplayTar:

; 1276 : 	{
; 1277 : 		case AMIS_BARCAP:
; 1278 : 		case AMIS_BARCAP2:
; 1279 : 		case AMIS_HAVCAP:
; 1280 : 		case AMIS_TARCAP:
; 1281 : 		case AMIS_RESCAP:
; 1282 : 		case AMIS_AMBUSHCAP:
; 1283 : 		case AMIS_SWEEP:
; 1284 : 		case AMIS_FAC:
; 1285 : 		case AMIS_ONCALLCAS:
; 1286 : 		case AMIS_SAD:
; 1287 : 		case AMIS_INT:
; 1288 : 		case AMIS_BAI:
; 1289 : 		case AMIS_PATROL:
; 1290 : 		case AMIS_RECONPATROL:
; 1291 : 			return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN5@DisplayTar

; 1292 : 			break;

	jmp	SHORT $LN3@DisplayTar
$LN1@DisplayTar:

; 1293 : 		default:
; 1294 : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN5@DisplayTar
$LN3@DisplayTar:

; 1295 : 			break;
; 1296 : 	}
; 1297 : 	return(FALSE);

	xor	eax, eax
$LN5@DisplayTar:

; 1298 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@DisplayTar:
	DD	$LN2@DisplayTar
	DD	$LN1@DisplayTar
$LN7@DisplayTar:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
?DisplayTarget@@YAHF@Z ENDP				; DisplayTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ddPtr$ = -40						; size = 4
_h$ = -36						; size = 4
_Palette$ = -32						; size = 4
_prevsrc$ = -28						; size = 4
_w$ = -24						; size = 4
_src$ = -20						; size = 4
_dst$ = -16						; size = 4
_y$ = -12						; size = 2
_x$ = -8						; size = 2
_i$ = -4						; size = 2
_Map$ = 8						; size = 4
?MakeBigOccupationMap@@YAXPAVIMAGE_RSC@@@Z PROC		; MakeBigOccupationMap

; 1174 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 1175 : 	short x,y,i;
; 1176 : 	uchar *ddPtr,*dst;
; 1177 : 	uchar *src,*prevsrc;
; 1178 : 	WORD *Palette;
; 1179 : 	long w,h;
; 1180 : 
; 1181 : 	if(!Map)

	cmp	DWORD PTR _Map$[ebp], 0
	jne	SHORT $LN21@MakeBigOcc

; 1182 : 		return;

	jmp	$LN22@MakeBigOcc
$LN21@MakeBigOcc:

; 1183 : 	if(!Map->Owner)

	mov	eax, DWORD PTR _Map$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN20@MakeBigOcc

; 1184 : 		return;

	jmp	$LN22@MakeBigOcc
$LN20@MakeBigOcc:

; 1185 : 
; 1186 : 	// HACK: Set uninitialized variables in CampMap
; 1187 : 	// KCK TODO: Fix this, OR GetOwner() function for Terrain Team editor tool
; 1188 : //	MRX=Map_Max_X/MAP_RATIO;
; 1189 : //	MRY=Map_Max_Y/MAP_RATIO;
; 1190 : //	MAXOI = (sizeof(uchar)*MRX*MRY)/2;
; 1191 : 	ShiAssert(MRX && MRY && MAXOI);
; 1192 : 
; 1193 : 	Palette=Map->GetPalette();

	mov	ecx, DWORD PTR _Map$[ebp]
	call	?GetPalette@IMAGE_RSC@@QAEPAGXZ		; IMAGE_RSC::GetPalette
	mov	DWORD PTR _Palette$[ebp], eax

; 1194 : 
; 1195 : 	if(Palette)

	cmp	DWORD PTR _Palette$[ebp], 0
	je	$LN19@MakeBigOcc

; 1196 : 	{
; 1197 : 		Palette[0]=UI95_RGB24Bit(0);

	push	0
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx], ax

; 1198 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 1024				; 00000400H
	je	$LN18@MakeBigOcc

; 1199 : 		{
; 1200 : 			for(i=1;i<NUM_TEAMS;i++)

	mov	ecx, 1
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN17@MakeBigOcc
$LN16@MakeBigOcc:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN17@MakeBigOcc:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 8
	jge	SHORT $LN15@MakeBigOcc

; 1201 : 			{
; 1202 : 				if(TheCampaign.IsLoaded() && TeamInfo[i])

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN14@MakeBigOcc
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN14@MakeBigOcc

; 1203 : 					Palette[i]=UI95_RGB24Bit(TeamColorList[TeamInfo[i]->GetColor()]);

	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	eax, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	eax
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx*2], ax

; 1204 : 				else

	jmp	SHORT $LN13@MakeBigOcc
$LN14@MakeBigOcc:

; 1205 : 					Palette[i]=UI95_RGB24Bit(TeamColorList[TheCampaign.team_colour[i]]);

	movsx	eax, WORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A[eax+480]
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[ecx*4]
	push	edx
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN13@MakeBigOcc:

; 1206 : 			}

	jmp	$LN16@MakeBigOcc
$LN15@MakeBigOcc:

; 1207 : 		}
; 1208 : 		else

	jmp	SHORT $LN19@MakeBigOcc
$LN18@MakeBigOcc:

; 1209 : 		{
; 1210 : 			for(i=1;i<NUM_TEAMS;i++)

	mov	eax, 1
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN11@MakeBigOcc
$LN10@MakeBigOcc:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN11@MakeBigOcc:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 8
	jge	SHORT $LN19@MakeBigOcc

; 1211 : 				Palette[i]=UI95_RGB24Bit(TeamColorList[i]);

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	ecx
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
	jmp	SHORT $LN10@MakeBigOcc
$LN19@MakeBigOcc:

; 1212 : 		}
; 1213 : 	}
; 1214 : 	src=TheCampaign.CampMapData;

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+296
	mov	DWORD PTR _src$[ebp], edx

; 1215 : 	ddPtr=(uchar*)Map->GetImage();

	mov	ecx, DWORD PTR _Map$[ebp]
	call	?GetImage@IMAGE_RSC@@QAEPADXZ		; IMAGE_RSC::GetImage
	mov	DWORD PTR _ddPtr$[ebp], eax

; 1216 : 	if(ddPtr == NULL)

	cmp	DWORD PTR _ddPtr$[ebp], 0
	jne	SHORT $LN8@MakeBigOcc

; 1217 : 		return;

	jmp	$LN22@MakeBigOcc
$LN8@MakeBigOcc:

; 1218 : 	if (src == NULL)

	cmp	DWORD PTR _src$[ebp], 0
	jne	SHORT $LN7@MakeBigOcc

; 1219 : 		return;

	jmp	$LN22@MakeBigOcc
$LN7@MakeBigOcc:

; 1220 : 
; 1221 : 	w=Map->Header->w;

	mov	eax, DWORD PTR _Map$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+44]
	mov	DWORD PTR _w$[ebp], edx

; 1222 : 	h=Map->Header->h;

	mov	eax, DWORD PTR _Map$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+46]
	mov	DWORD PTR _h$[ebp], edx

; 1223 : 	dst=ddPtr+(h-2)*w;

	mov	eax, DWORD PTR _h$[ebp]
	sub	eax, 2
	imul	eax, DWORD PTR _w$[ebp]
	add	eax, DWORD PTR _ddPtr$[ebp]
	mov	DWORD PTR _dst$[ebp], eax

; 1224 : 	src+=w/2;

	mov	eax, DWORD PTR _w$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR _src$[ebp], eax

; 1225 : 	y=4; // Skip pixels on edges of map 

	mov	ecx, 4
	mov	WORD PTR _y$[ebp], cx
$LN6@MakeBigOcc:

; 1226 : 	while(y < (h-4) && y < h)

	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	sub	eax, 4
	cmp	edx, eax
	jge	$LN22@MakeBigOcc
	movsx	ecx, WORD PTR _y$[ebp]
	cmp	ecx, DWORD PTR _h$[ebp]
	jge	$LN22@MakeBigOcc

; 1227 : 	{
; 1228 : 		x=4;

	mov	edx, 4
	mov	WORD PTR _x$[ebp], dx

; 1229 : 		dst+=4;

	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 4
	mov	DWORD PTR _dst$[ebp], eax

; 1230 : 		src++;

	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 1
	mov	DWORD PTR _src$[ebp], ecx

; 1231 : 		prevsrc = src;

	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR _prevsrc$[ebp], edx
$LN4@MakeBigOcc:

; 1232 : 		while(x < (h-4) && x < w)

	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	sub	ecx, 4
	cmp	eax, ecx
	jge	SHORT $LN3@MakeBigOcc
	movsx	edx, WORD PTR _x$[ebp]
	cmp	edx, DWORD PTR _w$[ebp]
	jge	SHORT $LN3@MakeBigOcc

; 1233 : 		{
; 1234 : 			ShiAssert(src >=  TheCampaign.CampMapData &&
; 1235 : 				src < TheCampaign.CampMapData + TheCampaign.CampMapSize);
; 1236 : 			*dst++=static_cast<uchar>((*src)&0x0f);

	mov	eax, DWORD PTR _src$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 15					; 0000000fH
	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 1237 : 			*dst++=static_cast<uchar>((*src) >> 4);

	mov	ecx, DWORD PTR _src$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sar	edx, 4
	mov	eax, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _dst$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dst$[ebp], ecx

; 1238 : 			*dst++=static_cast<uchar>((*src)&0x0f);

	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _dst$[ebp]
	add	edx, 1
	mov	DWORD PTR _dst$[ebp], edx

; 1239 : 			*dst++=static_cast<uchar>((*src) >> 4);

	mov	eax, DWORD PTR _src$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sar	ecx, 4
	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 1240 : 			src++;

	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 1
	mov	DWORD PTR _src$[ebp], ecx

; 1241 : 			x+=4;

	movsx	edx, WORD PTR _x$[ebp]
	add	edx, 4
	mov	WORD PTR _x$[ebp], dx

; 1242 : 		}

	jmp	$LN4@MakeBigOcc
$LN3@MakeBigOcc:

; 1243 : 		src+=((w)-x)/2;

	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	sub	ecx, eax
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR _src$[ebp], eax

; 1244 : 		dst+=(w-x);

	movsx	edx, WORD PTR _x$[ebp]
	mov	eax, DWORD PTR _w$[ebp]
	sub	eax, edx
	add	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _dst$[ebp], eax

; 1245 : 		dst-=w*2;

	mov	ecx, DWORD PTR _w$[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR _dst$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _dst$[ebp], edx

; 1246 : 		y++;

	mov	ax, WORD PTR _y$[ebp]
	add	ax, 1
	mov	WORD PTR _y$[ebp], ax

; 1247 : 		x=4;

	mov	ecx, 4
	mov	WORD PTR _x$[ebp], cx

; 1248 : 		dst+=4;

	mov	edx, DWORD PTR _dst$[ebp]
	add	edx, 4
	mov	DWORD PTR _dst$[ebp], edx
$LN2@MakeBigOcc:

; 1249 : 		while(x < (h-4) && x < w)

	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	sub	ecx, 4
	cmp	eax, ecx
	jge	SHORT $LN1@MakeBigOcc
	movsx	edx, WORD PTR _x$[ebp]
	cmp	edx, DWORD PTR _w$[ebp]
	jge	SHORT $LN1@MakeBigOcc

; 1250 : 		{
; 1251 : 			*dst++=static_cast<uchar>((*prevsrc)&0x0f);

	mov	eax, DWORD PTR _prevsrc$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 15					; 0000000fH
	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 1252 : 			*dst++=static_cast<uchar>((*prevsrc) >> 4);

	mov	ecx, DWORD PTR _prevsrc$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sar	edx, 4
	mov	eax, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _dst$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dst$[ebp], ecx

; 1253 : 			*dst++=static_cast<uchar>((*prevsrc)&0x0f);

	mov	edx, DWORD PTR _prevsrc$[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _dst$[ebp]
	add	edx, 1
	mov	DWORD PTR _dst$[ebp], edx

; 1254 : 			*dst++=static_cast<uchar>((*prevsrc) >> 4);

	mov	eax, DWORD PTR _prevsrc$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sar	ecx, 4
	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 1255 : 			prevsrc++;

	mov	ecx, DWORD PTR _prevsrc$[ebp]
	add	ecx, 1
	mov	DWORD PTR _prevsrc$[ebp], ecx

; 1256 : 			x+=4;

	movsx	edx, WORD PTR _x$[ebp]
	add	edx, 4
	mov	WORD PTR _x$[ebp], dx

; 1257 : 		}

	jmp	$LN2@MakeBigOcc
$LN1@MakeBigOcc:

; 1258 : 		dst+=(w-x);

	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	sub	ecx, eax
	add	ecx, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _dst$[ebp], ecx

; 1259 : 		dst-=w*2;

	mov	edx, DWORD PTR _w$[ebp]
	shl	edx, 1
	mov	eax, DWORD PTR _dst$[ebp]
	sub	eax, edx
	mov	DWORD PTR _dst$[ebp], eax

; 1260 : 		y++;

	mov	cx, WORD PTR _y$[ebp]
	add	cx, 1
	mov	WORD PTR _y$[ebp], cx

; 1261 : 	}

	jmp	$LN6@MakeBigOcc
$LN22@MakeBigOcc:

; 1262 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MakeBigOccupationMap@@YAXPAVIMAGE_RSC@@@Z ENDP		; MakeBigOccupationMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ddPtr$ = -36						; size = 4
_h$ = -32						; size = 4
_Palette$ = -28						; size = 4
_w$ = -24						; size = 4
_src$ = -20						; size = 4
_dst$ = -16						; size = 4
_y$ = -12						; size = 2
_x$ = -8						; size = 2
_i$ = -4						; size = 2
_Map$ = 8						; size = 4
?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z PROC		; MakeOccupationMap

; 1100 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 1101 : 	short x,y,i;
; 1102 : 	uchar *ddPtr,*dst;
; 1103 : 	uchar *src;
; 1104 : 	WORD *Palette;
; 1105 : 	long w,h;
; 1106 : 
; 1107 : 	if(!Map)

	cmp	DWORD PTR _Map$[ebp], 0
	jne	SHORT $LN19@MakeOccupa

; 1108 : 		return;

	jmp	$LN20@MakeOccupa
$LN19@MakeOccupa:

; 1109 : 	if(!Map->Owner)

	mov	eax, DWORD PTR _Map$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN18@MakeOccupa

; 1110 : 		return;

	jmp	$LN20@MakeOccupa
$LN18@MakeOccupa:

; 1111 : 
; 1112 : 	// HACK: Set uninitialized variables in CampMap
; 1113 : 	// KCK TODO: Fix this, OR GetOwner() function for Terrain Team editor tool
; 1114 : //	MRX=Map_Max_X/MAP_RATIO;
; 1115 : //	MRY=Map_Max_Y/MAP_RATIO;
; 1116 : //	MAXOI = (sizeof(uchar)*MRX*MRY)/2;
; 1117 : 	ShiAssert(MRX && MRY && MAXOI);
; 1118 : 
; 1119 : 	Palette=Map->GetPalette();

	mov	ecx, DWORD PTR _Map$[ebp]
	call	?GetPalette@IMAGE_RSC@@QAEPAGXZ		; IMAGE_RSC::GetPalette
	mov	DWORD PTR _Palette$[ebp], eax

; 1120 : 
; 1121 : 	if(Palette)

	cmp	DWORD PTR _Palette$[ebp], 0
	je	$LN17@MakeOccupa

; 1122 : 	{
; 1123 : 		Palette[0]=UI95_RGB24Bit(0);

	push	0
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	mov	ecx, 2
	imul	ecx, 0
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx], ax

; 1124 : 		if(TheCampaign.Flags & CAMP_TACTICAL)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 1024				; 00000400H
	je	$LN16@MakeOccupa

; 1125 : 		{
; 1126 : 			for(i=1;i<NUM_TEAMS;i++)

	mov	ecx, 1
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN15@MakeOccupa
$LN14@MakeOccupa:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN15@MakeOccupa:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 8
	jge	SHORT $LN13@MakeOccupa

; 1127 : 			{
; 1128 : 				if(TheCampaign.IsLoaded() && TeamInfo[i])

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN12@MakeOccupa
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4], 0
	je	SHORT $LN12@MakeOccupa

; 1129 : 					Palette[i]=UI95_RGB24Bit(TeamColorList[TeamInfo[i]->GetColor()]);

	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	eax, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	eax
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx*2], ax

; 1130 : 				else

	jmp	SHORT $LN11@MakeOccupa
$LN12@MakeOccupa:

; 1131 : 					Palette[i]=UI95_RGB24Bit(TeamColorList[TheCampaign.team_colour[i]]);

	movsx	eax, WORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A[eax+480]
	mov	edx, DWORD PTR ?TeamColorList@@3PAKA[ecx*4]
	push	edx
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN11@MakeOccupa:

; 1132 : 			}

	jmp	$LN14@MakeOccupa
$LN13@MakeOccupa:

; 1133 : 		}
; 1134 : 		else

	jmp	SHORT $LN17@MakeOccupa
$LN16@MakeOccupa:

; 1135 : 		{
; 1136 : 			for(i=1;i<NUM_TEAMS;i++)

	mov	eax, 1
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN9@MakeOccupa
$LN8@MakeOccupa:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN9@MakeOccupa:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 8
	jge	SHORT $LN17@MakeOccupa

; 1137 : 				Palette[i]=UI95_RGB24Bit(TeamColorList[i]);

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamColorList@@3PAKA[eax*4]
	push	ecx
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _Palette$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
	jmp	SHORT $LN8@MakeOccupa
$LN17@MakeOccupa:

; 1138 : 		}
; 1139 : 	}
; 1140 : 	src=TheCampaign.CampMapData;

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+296
	mov	DWORD PTR _src$[ebp], edx

; 1141 : 	ddPtr=(uchar*)Map->GetImage();

	mov	ecx, DWORD PTR _Map$[ebp]
	call	?GetImage@IMAGE_RSC@@QAEPADXZ		; IMAGE_RSC::GetImage
	mov	DWORD PTR _ddPtr$[ebp], eax

; 1142 : 	if(ddPtr == NULL)

	cmp	DWORD PTR _ddPtr$[ebp], 0
	jne	SHORT $LN6@MakeOccupa

; 1143 : 		return;

	jmp	$LN20@MakeOccupa
$LN6@MakeOccupa:

; 1144 : 	if (src == NULL)

	cmp	DWORD PTR _src$[ebp], 0
	jne	SHORT $LN5@MakeOccupa

; 1145 : 		return;

	jmp	$LN20@MakeOccupa
$LN5@MakeOccupa:

; 1146 : 
; 1147 : 	w=Map->Header->w;

	mov	eax, DWORD PTR _Map$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+44]
	mov	DWORD PTR _w$[ebp], edx

; 1148 : 	h=Map->Header->h;

	mov	eax, DWORD PTR _Map$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, WORD PTR [ecx+46]
	mov	DWORD PTR _h$[ebp], edx

; 1149 : 	dst=ddPtr+(h-2)*w;

	mov	eax, DWORD PTR _h$[ebp]
	sub	eax, 2
	imul	eax, DWORD PTR _w$[ebp]
	add	eax, DWORD PTR _ddPtr$[ebp]
	mov	DWORD PTR _dst$[ebp], eax

; 1150 : 	src+=w/2;

	mov	eax, DWORD PTR _w$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR _src$[ebp], eax

; 1151 : 	y=1; // Skip pixels on edges of map 

	mov	ecx, 1
	mov	WORD PTR _y$[ebp], cx
$LN4@MakeOccupa:

; 1152 : 	while(y < (h-2) && y < h)

	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	sub	eax, 2
	cmp	edx, eax
	jge	$LN20@MakeOccupa
	movsx	ecx, WORD PTR _y$[ebp]
	cmp	ecx, DWORD PTR _h$[ebp]
	jge	$LN20@MakeOccupa

; 1153 : 	{
; 1154 : 		x=2;

	mov	edx, 2
	mov	WORD PTR _x$[ebp], dx

; 1155 : 		dst+=2;

	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 2
	mov	DWORD PTR _dst$[ebp], eax

; 1156 : 		src++;

	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 1
	mov	DWORD PTR _src$[ebp], ecx
$LN2@MakeOccupa:

; 1157 : 		while(x < (h-2) && x < w)

	movsx	edx, WORD PTR _x$[ebp]
	mov	eax, DWORD PTR _h$[ebp]
	sub	eax, 2
	cmp	edx, eax
	jge	SHORT $LN1@MakeOccupa
	movsx	ecx, WORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR _w$[ebp]
	jge	SHORT $LN1@MakeOccupa

; 1158 : 		{
; 1159 : 			ShiAssert(src >=  TheCampaign.CampMapData &&
; 1160 : 				src < TheCampaign.CampMapData + TheCampaign.CampMapSize);
; 1161 : 			*dst++=static_cast<uchar>((*src)&0x0f);

	mov	edx, DWORD PTR _src$[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _dst$[ebp]
	add	edx, 1
	mov	DWORD PTR _dst$[ebp], edx

; 1162 : 			*dst++=static_cast<uchar>((*src) >> 4);

	mov	eax, DWORD PTR _src$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sar	ecx, 4
	mov	edx, DWORD PTR _dst$[ebp]
	mov	BYTE PTR [edx], cl
	mov	eax, DWORD PTR _dst$[ebp]
	add	eax, 1
	mov	DWORD PTR _dst$[ebp], eax

; 1163 : 			src++;

	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, 1
	mov	DWORD PTR _src$[ebp], ecx

; 1164 : 			x+=2;

	movsx	edx, WORD PTR _x$[ebp]
	add	edx, 2
	mov	WORD PTR _x$[ebp], dx

; 1165 : 		}

	jmp	SHORT $LN2@MakeOccupa
$LN1@MakeOccupa:

; 1166 : 		src+=((w)-x)/2;

	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _w$[ebp]
	sub	ecx, eax
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _src$[ebp]
	mov	DWORD PTR _src$[ebp], eax

; 1167 : 		dst+=(w-x);

	movsx	edx, WORD PTR _x$[ebp]
	mov	eax, DWORD PTR _w$[ebp]
	sub	eax, edx
	add	eax, DWORD PTR _dst$[ebp]
	mov	DWORD PTR _dst$[ebp], eax

; 1168 : 		dst-=w*2;

	mov	ecx, DWORD PTR _w$[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR _dst$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _dst$[ebp], edx

; 1169 : 		y++;

	mov	ax, WORD PTR _y$[ebp]
	add	ax, 1
	mov	WORD PTR _y$[ebp], ax

; 1170 : 	}

	jmp	$LN4@MakeOccupa
$LN20@MakeOccupa:

; 1171 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z ENDP		; MakeOccupationMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_me$ = -28						; size = 4
_curidx$ = -24						; size = 4
tv89 = -20						; size = 4
_res$ = -16						; size = 4
_cur$ = -12						; size = 4
_lst$ = -8						; size = 4
_i$ = -4						; size = 4
_ID$ = 8						; size = 4
_startid$ = 12						; size = 4
?MakeVirtualListFromRsc@@YAXJJ@Z PROC			; MakeVirtualListFromRsc

; 1063 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 1064 : 	C_Resmgr *res;
; 1065 : 	C_Hash *lst;
; 1066 : 	C_HASHNODE *me;
; 1067 : 	IMAGE_RSC *cur;
; 1068 : 	long i=startid,curidx;

	mov	eax, DWORD PTR _startid$[ebp]
	mov	DWORD PTR _i$[ebp], eax

; 1069 : 
; 1070 : 	if(i >= 200)

	cmp	DWORD PTR _i$[ebp], 200			; 000000c8H
	jl	SHORT $LN5@MakeVirtua

; 1071 : 		return;

	jmp	$LN6@MakeVirtua
$LN5@MakeVirtua:

; 1072 : 
; 1073 : 	VirtualFileList[i][0]=0;

	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR ?VirtualFileList@@3PAY0EA@DA[ecx+edx], 0

; 1074 : 
; 1075 : 	res=gImageMgr->GetImageRes(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 1076 : 	if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	$LN6@MakeVirtua

; 1077 : 	{
; 1078 : 		lst=res->GetIDList();

	mov	ecx, DWORD PTR _res$[ebp]
	call	?GetIDList@C_Resmgr@@QAEPAVC_Hash@@XZ	; C_Resmgr::GetIDList
	mov	DWORD PTR _lst$[ebp], eax

; 1079 : 		if(lst)

	cmp	DWORD PTR _lst$[ebp], 0
	je	SHORT $LN6@MakeVirtua

; 1080 : 		{
; 1081 : 			cur=(IMAGE_RSC*)lst->GetFirst(&me,&curidx);

	lea	ecx, DWORD PTR _curidx$[ebp]
	push	ecx
	lea	edx, DWORD PTR _me$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lst$[ebp]
	call	?GetFirst@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetFirst
	mov	DWORD PTR _cur$[ebp], eax
$LN2@MakeVirtua:

; 1082 : 			while(cur && i < 200)

	cmp	DWORD PTR _cur$[ebp], 0
	je	SHORT $LN1@MakeVirtua
	cmp	DWORD PTR _i$[ebp], 200			; 000000c8H
	jge	SHORT $LN1@MakeVirtua

; 1083 : 			{
; 1084 : 				_tcscpy(VirtualFileList[i++],cur->Header->ID);

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET ?VirtualFileList@@3PAY0EA@DA ; VirtualFileList
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR tv89[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 1085 : 				cur=(IMAGE_RSC*)lst->GetNext(&me,&curidx);

	lea	edx, DWORD PTR _curidx$[ebp]
	push	edx
	lea	eax, DWORD PTR _me$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lst$[ebp]
	call	?GetNext@C_Hash@@QAEPAXPAPAVC_HASHNODE@@PAJ@Z ; C_Hash::GetNext
	mov	DWORD PTR _cur$[ebp], eax

; 1086 : 			}

	jmp	SHORT $LN2@MakeVirtua
$LN1@MakeVirtua:

; 1087 : 			VirtualFileList[i][0]=0;

	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, 1
	imul	edx, 0
	mov	BYTE PTR ?VirtualFileList@@3PAY0EA@DA[ecx+edx], 0
$LN6@MakeVirtua:

; 1088 : 		}
; 1089 : 	}
; 1090 : 
; 1091 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MakeVirtualListFromRsc@@YAXJJ@Z ENDP			; MakeVirtualListFromRsc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_txt$ = -12						; size = 4
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
_TitleID$ = 8						; size = 4
_OkCB$ = 12						; size = 4
_CancelCB$ = 16						; size = 4
?ExitVerify@@YAXJP6AXJFPAVC_Base@@@Z1@Z PROC		; ExitVerify

; 1021 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1022 : 	C_Window *win;
; 1023 : 	C_Button *btn;
; 1024 : 	C_Text *txt;
; 1025 : 
; 1026 : 	win=gMainHandler->FindWindow(EXIT_WIN);

	push	19550					; 00004c5eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1027 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN9@ExitVerify

; 1028 : 	{
; 1029 : 		txt=(C_Text *)win->FindControl(MODAL_TITLE);

	push	5062					; 000013c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1030 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@ExitVerify

; 1031 : 			txt->SetText(TitleID);

	mov	eax, DWORD PTR _TitleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN7@ExitVerify:

; 1032 : 
; 1033 : 		btn=(C_Button *)win->FindControl(ALERT_CANCEL);

	push	19502					; 00004c2eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1034 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@ExitVerify

; 1035 : 		{
; 1036 : 			if(CancelCB)

	cmp	DWORD PTR _CancelCB$[ebp], 0
	je	SHORT $LN5@ExitVerify

; 1037 : 			{
; 1038 : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1039 : 				btn->SetCallback(CancelCB);

	mov	ecx, DWORD PTR _CancelCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1040 : 			}
; 1041 : 			else

	jmp	SHORT $LN6@ExitVerify
$LN5@ExitVerify:

; 1042 : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN6@ExitVerify:

; 1043 : 		}
; 1044 : 
; 1045 : 		btn=(C_Button *)win->FindControl(ALERT_OK);

	push	19501					; 00004c2dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1046 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@ExitVerify

; 1047 : 		{
; 1048 : 			if(OkCB)

	cmp	DWORD PTR _OkCB$[ebp], 0
	je	SHORT $LN2@ExitVerify

; 1049 : 			{
; 1050 : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1051 : 				btn->SetCallback(OkCB);

	mov	ecx, DWORD PTR _OkCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1052 : 			}
; 1053 : 			else

	jmp	SHORT $LN3@ExitVerify
$LN2@ExitVerify:

; 1054 : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN3@ExitVerify:

; 1055 : 		}
; 1056 : 
; 1057 : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1058 : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN9@ExitVerify:

; 1059 : 	}
; 1060 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ExitVerify@@YAXJP6AXJFPAVC_Base@@@Z1@Z ENDP		; ExitVerify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_TitleID$ = 8						; size = 4
_YesCB$ = 12						; size = 4
_NoCB$ = 16						; size = 4
?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z PROC		; VerifyDelete

; 1016 : {

	push	ebp
	mov	ebp, esp

; 1017 : 	AreYouSure(TitleID,TXT_DELETE_FILE,YesCB,NoCB);

	mov	eax, DWORD PTR _NoCB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	push	248					; 000000f8H
	mov	edx, DWORD PTR _TitleID$[ebp]
	push	edx
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1018 : }

	pop	ebp
	ret	0
?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z ENDP		; VerifyDelete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_i$ = -268						; size = 2
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_directory$ = 12					; size = 4
_ExcludeList$ = 16					; size = 4
_extension$ = 20					; size = 4
?CheckExclude@@YAHPAD0QAPAD0@Z PROC			; CheckExclude

; 1000 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1001 : 	_TCHAR fname[MAX_PATH];
; 1002 : 	short i;
; 1003 : 
; 1004 : 	i=0;

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
$LN3@CheckExclu:

; 1005 : 	while(ExcludeList[i])

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ExcludeList$[ebp]
	cmp	DWORD PTR [edx+ecx*4], 0
	je	SHORT $LN2@CheckExclu

; 1006 : 	{
; 1007 : 		_stprintf(fname,"%s\\%s.%s",directory,ExcludeList[i],extension);

	mov	eax, DWORD PTR _extension$[ebp]
	push	eax
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ExcludeList$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _directory$[ebp]
	push	ecx
	push	OFFSET ??_C@_08IEFAEBKE@?$CFs?2?$CFs?4?$CFs?$AA@
	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 1008 : 		if(!_tcsicmp(filename,fname))

	lea	eax, DWORD PTR _fname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@CheckExclu

; 1009 : 			return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN4@CheckExclu
$LN1@CheckExclu:

; 1010 : 		i++;

	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx

; 1011 : 	}

	jmp	SHORT $LN3@CheckExclu
$LN2@CheckExclu:

; 1012 : 	return(FALSE);

	xor	eax, eax
$LN4@CheckExclu:

; 1013 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckExclude@@YAHPAD0QAPAD0@Z ENDP			; CheckExclude
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_TitleID$ = 8						; size = 4
_MessageID$ = 12					; size = 4
_OkCB$ = 16						; size = 4
_CancelCB$ = 20						; size = 4
?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z PROC		; AreYouSure

; 995  : {

	push	ebp
	mov	ebp, esp

; 996  : 	AreYouSure(TitleID,gStringMgr->GetString(MessageID),OkCB,CancelCB);

	mov	eax, DWORD PTR _CancelCB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _OkCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _MessageID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	eax, DWORD PTR _TitleID$[ebp]
	push	eax
	call	?AreYouSure@@YAXJPADP6AXJFPAVC_Base@@@Z2@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 997  : }

	pop	ebp
	ret	0
?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ENDP		; AreYouSure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_txt$ = -20						; size = 4
_win$ = -16						; size = 4
_btn$ = -12						; size = 4
_x$ = -8						; size = 2
_y$ = -4						; size = 2
_TitleID$ = 8						; size = 4
_text$ = 12						; size = 4
_OkCB$ = 16						; size = 4
_CancelCB$ = 20						; size = 4
?AreYouSure@@YAXJPADP6AXJFPAVC_Base@@@Z2@Z PROC		; AreYouSure

; 945  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi

; 946  : 	C_Window *win;
; 947  : 	C_Button *btn;
; 948  : 	C_Text *txt;
; 949  : 	short x,y;
; 950  : 
; 951  : 	if(!text)

	cmp	DWORD PTR _text$[ebp], 0
	jne	SHORT $LN9@AreYouSure

; 952  : 		return;

	jmp	$LN10@AreYouSure
$LN9@AreYouSure:

; 953  : 
; 954  : 	win=gMainHandler->FindWindow(AYS_WIN);

	push	19500					; 00004c2cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 955  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@AreYouSure

; 956  : 	{
; 957  : 		txt=(C_Text *)win->FindControl(MODAL_TITLE);

	push	5062					; 000013c6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 958  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@AreYouSure

; 959  : 			txt->SetText(TitleID);

	mov	eax, DWORD PTR _TitleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN7@AreYouSure:

; 960  : 
; 961  : 		btn=(C_Button *)win->FindControl(ALERT_CANCEL);

	push	19502					; 00004c2eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 962  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@AreYouSure

; 963  : 		{
; 964  : 			if(CancelCB)

	cmp	DWORD PTR _CancelCB$[ebp], 0
	je	SHORT $LN5@AreYouSure

; 965  : 			{
; 966  : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 967  : 				btn->SetCallback(CancelCB);

	mov	ecx, DWORD PTR _CancelCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 968  : 			}
; 969  : 			else

	jmp	SHORT $LN6@AreYouSure
$LN5@AreYouSure:

; 970  : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN6@AreYouSure:

; 971  : 		}
; 972  : 
; 973  : 		btn=(C_Button *)win->FindControl(ALERT_OK);

	push	19501					; 00004c2dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 974  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@AreYouSure

; 975  : 		{
; 976  : 			if(OkCB)

	cmp	DWORD PTR _OkCB$[ebp], 0
	je	SHORT $LN2@AreYouSure

; 977  : 			{
; 978  : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 979  : 				btn->SetCallback(OkCB);

	mov	ecx, DWORD PTR _OkCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 980  : 			}
; 981  : 			else

	jmp	SHORT $LN3@AreYouSure
$LN2@AreYouSure:

; 982  : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN3@AreYouSure:

; 983  : 		}
; 984  : 
; 985  : 		x=0; y=0;

	xor	ecx, ecx
	mov	WORD PTR _x$[ebp], cx
	xor	edx, edx
	mov	WORD PTR _y$[ebp], dx

; 986  : 		DeleteGroupList(win->GetID());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetID@C_Window@@QAEJXZ			; C_Window::GetID
	push	eax
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 987  : 		AddWordWrapTextToWindow(win,&x,&y,0,static_cast<short>(win->ClientArea_[1].right-win->ClientArea_[1].left),0xe0e0e0,text,1);

	push	1
	mov	eax, DWORD PTR _text$[ebp]
	push	eax
	push	14737632				; 00e0e0e0H
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	push	ecx
	push	0
	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z ; AddWordWrapTextToWindow
	add	esp, 32					; 00000020H

; 988  : 
; 989  : 		gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 990  : 		gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN10@AreYouSure:

; 991  : 	}
; 992  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?AreYouSure@@YAXJPADP6AXJFPAVC_Base@@@Z2@Z ENDP		; AreYouSure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?CloseAYS@@YAXXZ PROC					; CloseAYS

; 937  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 938  : 	C_Window *win;
; 939  : 	win=gMainHandler->FindWindow(AYS_WIN);

	push	19500					; 00004c2cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 940  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CloseAYS

; 941  : 		gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN2@CloseAYS:

; 942  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseAYS@@YAXXZ ENDP					; CloseAYS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ebox$ = -20						; size = 4
_txt$ = -16						; size = 4
_win$ = -12						; size = 4
_tree$ = -8						; size = 4
_btn$ = -4						; size = 4
_TitleID$ = 8						; size = 4
_filespec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_YesCB$ = 20						; size = 4
_NoCB$ = 24						; size = 4
_virtuallist$ = 28					; size = 4
_VirtualCB$ = 32					; size = 4
?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z PROC ; LoadVirtualFile

; 783  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 784  : 	C_Window *win;
; 785  : 	C_Button *btn;
; 786  : 	C_TreeList *tree;
; 787  : 	C_Text *txt;
; 788  : 	C_EditBox *ebox;
; 789  : 
; 790  : 	if(!YesCB || !filespec)

	cmp	DWORD PTR _YesCB$[ebp], 0
	je	SHORT $LN12@LoadVirtua
	cmp	DWORD PTR _filespec$[ebp], 0
	jne	SHORT $LN13@LoadVirtua
$LN12@LoadVirtua:

; 791  : 		return;

	jmp	$LN14@LoadVirtua
$LN13@LoadVirtua:

; 792  : 
; 793  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 794  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@LoadVirtua

; 795  : 	{
; 796  : 		txt=(C_Text*)win->FindControl(TITLE_LABEL);

	push	40303					; 00009d6fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 797  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN10@LoadVirtua

; 798  : 		{
; 799  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 800  : 			txt->SetText(TitleID);

	mov	ecx, DWORD PTR _TitleID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 801  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@LoadVirtua:

; 802  : 		}
; 803  : 		btn=(C_Button *)win->FindControl(SAVE);

	push	503					; 000001f7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 804  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN9@LoadVirtua

; 805  : 		{
; 806  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 807  : 			btn->SetCallback(NULL);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@LoadVirtua:

; 808  : 		}
; 809  : 		btn=(C_Button *)win->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 810  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@LoadVirtua

; 811  : 		{
; 812  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 813  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN8@LoadVirtua:

; 814  : 		}
; 815  : 		btn=(C_Button *)win->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 816  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@LoadVirtua

; 817  : 		{
; 818  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 819  : 			btn->SetCallback(VirtualCB);

	mov	ecx, DWORD PTR _VirtualCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN7@LoadVirtua:

; 820  : 		}
; 821  : 		btn=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 822  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@LoadVirtua

; 823  : 		{
; 824  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 825  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN6@LoadVirtua:

; 826  : 		}
; 827  : 		btn=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 828  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@LoadVirtua

; 829  : 		{
; 830  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 831  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN5@LoadVirtua:

; 832  : 		}
; 833  : 		ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 834  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN4@LoadVirtua

; 835  : 		{
; 836  : 			ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 837  : 			ebox->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 838  : 			ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN4@LoadVirtua:

; 839  : 		}
; 840  : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 841  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN3@LoadVirtua

; 842  : 		{
; 843  : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 844  : 			tree->SetUserNumber(0,1);

	push	1
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 845  : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 846  : 			tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 847  : 			tree->SetCallback(LoadVirtualSelectFileCB);

	push	OFFSET ?LoadVirtualSelectFileCB@@YAXJFPAVC_Base@@@Z ; LoadVirtualSelectFileCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 848  : 			if(virtuallist)

	cmp	DWORD PTR _virtuallist$[ebp], 0
	je	SHORT $LN2@LoadVirtua

; 849  : 				GetVirtualFileListTree(tree,virtuallist,C_TYPE_ITEM);

	push	50					; 00000032H
	mov	ecx, DWORD PTR _virtuallist$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z ; GetVirtualFileListTree
	add	esp, 12					; 0000000cH
$LN2@LoadVirtua:

; 850  : 			GetFileListTree(tree,filespec,excludelist,C_TYPE_ITEM,TRUE,DELETE_FILE_POPUP);

	push	18711					; 00004917H
	push	1
	push	50					; 00000032H
	mov	eax, DWORD PTR _excludelist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filespec$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 851  : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 852  : 			if(tree->Parent_)

	mov	eax, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN3@LoadVirtua

; 853  : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN3@LoadVirtua:

; 854  : 		}
; 855  : 		gMainHandler->ShowWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 856  : 		gMainHandler->WindowToFront(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN14@LoadVirtua:

; 857  : 	}
; 858  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadVirtualFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3QAY0EA@D3@Z ENDP ; LoadVirtualFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_item$ = -16						; size = 4
_tree$ = -12						; size = 4
_ebox$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadVirtualSelectFileCB@@YAXJFPAVC_Base@@@Z PROC	; LoadVirtualSelectFileCB

; 649  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 650  : 	C_TreeList *tree;
; 651  : 	C_EditBox *ebox;
; 652  : 	C_Button *btn;
; 653  : 	TREELIST *item;
; 654  : 
; 655  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN11@LoadVirtua

; 656  : 		return;

	jmp	$LN12@LoadVirtua
$LN11@LoadVirtua:

; 657  : 
; 658  : 	if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	$LN12@LoadVirtua

; 659  : 	{
; 660  : 		tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 661  : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 662  : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN9@LoadVirtua

; 663  : 		{
; 664  : 			tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 665  : 			btn=(C_Button*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn$[ebp], eax

; 666  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN9@LoadVirtua

; 667  : 			{
; 668  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 669  : 				ebox=(C_EditBox*)btn->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 670  : 				if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN9@LoadVirtua

; 671  : 				{
; 672  : 					ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 673  : 					ebox->SetText(btn->GetText(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 674  : 					ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 675  : 					if(btn->GetUserNumber(0))

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN6@LoadVirtua

; 676  : 					{
; 677  : 						btn=(C_Button*)control->Parent_->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 678  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@LoadVirtua

; 679  : 							btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN5@LoadVirtua:

; 680  : 						btn=(C_Button*)control->Parent_->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 681  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@LoadVirtua

; 682  : 						{
; 683  : 							btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 684  : 							btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@LoadVirtua:

; 685  : 						}
; 686  : 					}
; 687  : 					else

	jmp	SHORT $LN9@LoadVirtua
$LN6@LoadVirtua:

; 688  : 					{
; 689  : 						btn=(C_Button*)control->Parent_->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 690  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@LoadVirtua

; 691  : 							btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN2@LoadVirtua:

; 692  : 						btn=(C_Button*)control->Parent_->FindControl(LOAD);

	push	504					; 000001f8H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 693  : 						if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN9@LoadVirtua

; 694  : 						{
; 695  : 							btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 696  : 							btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@LoadVirtua:

; 697  : 						}
; 698  : 					}
; 699  : 				}
; 700  : 			}
; 701  : 		}
; 702  : 		tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@LoadVirtua:

; 703  : 	}
; 704  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadVirtualSelectFileCB@@YAXJFPAVC_Base@@@Z ENDP	; LoadVirtualSelectFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_item$ = -20						; size = 4
_win$ = -16						; size = 4
_tree$ = -12						; size = 4
_ebox$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadSaveSelectFileCB@@YAXJFPAVC_Base@@@Z PROC		; LoadSaveSelectFileCB

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 577  : 	C_TreeList *tree;
; 578  : 	C_EditBox *ebox;
; 579  : 	C_Button *btn;
; 580  : 	C_Window *win;
; 581  : 	TREELIST *item;
; 582  : 
; 583  : 	if(hittype == C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	jne	$LN15@LoadSaveSe

; 584  : 	{
; 585  : 		if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	$LN14@LoadSaveSe

; 586  : 		{
; 587  : 			tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 588  : 			item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 589  : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN13@LoadSaveSe

; 590  : 			{
; 591  : 				tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 592  : 				btn=(C_Button*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn$[ebp], eax

; 593  : 				if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN13@LoadSaveSe

; 594  : 				{
; 595  : 					btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 596  : 					btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 597  : 					ebox=(C_EditBox*)btn->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 598  : 					if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN13@LoadSaveSe

; 599  : 					{
; 600  : 						ebox->Refresh();

	mov	edx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 601  : 						ebox->SetText(btn->GetText(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 602  : 						ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN13@LoadSaveSe:

; 603  : 					}
; 604  : 				}
; 605  : 			}
; 606  : 			tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN14@LoadSaveSe:

; 607  : 		}
; 608  : 	}

	jmp	$LN16@LoadSaveSe
$LN15@LoadSaveSe:

; 609  : 	else if(hittype == C_TYPE_LMOUSEDBLCLK)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 53					; 00000035H
	jne	$LN16@LoadSaveSe

; 610  : 	{
; 611  : 		if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	$LN16@LoadSaveSe

; 612  : 		{
; 613  : 			win=control->Parent_;

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR _win$[ebp], eax

; 614  : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN16@LoadSaveSe

; 615  : 			{
; 616  : 				btn=(C_Button*)win->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 617  : 				if(btn && !(btn->GetFlags() & C_BIT_INVISIBLE))

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@LoadSaveSe
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN6@LoadSaveSe

; 618  : 				{
; 619  : 					if(btn->GetCallback())

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	test	eax, eax
	je	SHORT $LN5@LoadSaveSe

; 620  : 					{
; 621  : 						btn->GetCallback()(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+148]
	call	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN5@LoadSaveSe:

; 622  : 					}
; 623  : 					return;

	jmp	$LN16@LoadSaveSe
$LN6@LoadSaveSe:

; 624  : 				}
; 625  : 				btn=(C_Button*)win->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 626  : 				if(btn && !(btn->GetFlags() & C_BIT_INVISIBLE))

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@LoadSaveSe
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN4@LoadSaveSe

; 627  : 				{
; 628  : 					if(btn->GetCallback())

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	test	eax, eax
	je	SHORT $LN3@LoadSaveSe

; 629  : 					{
; 630  : 						btn->GetCallback()(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+148]
	call	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN3@LoadSaveSe:

; 631  : 					}
; 632  : 					return;

	jmp	SHORT $LN16@LoadSaveSe
$LN4@LoadSaveSe:

; 633  : 				}
; 634  : 				btn=(C_Button*)win->FindControl(SAVE);

	push	503					; 000001f7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 635  : 				if(btn && !(btn->GetFlags() & C_BIT_INVISIBLE))

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN16@LoadSaveSe
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 8192				; 00002000H
	jne	SHORT $LN16@LoadSaveSe

; 636  : 				{
; 637  : 					if(btn->GetCallback())

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	test	eax, eax
	je	SHORT $LN16@LoadSaveSe

; 638  : 					{
; 639  : 						btn->GetCallback()(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+148]
	call	edx
	call	eax
	add	esp, 12					; 0000000cH
$LN16@LoadSaveSe:

; 640  : 					}
; 641  : 					return;
; 642  : 				}
; 643  : 			}
; 644  : 		}
; 645  : 	}
; 646  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadSaveSelectFileCB@@YAXJFPAVC_Base@@@Z ENDP		; LoadSaveSelectFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
tv235 = -392						; size = 4
$T2 = -388						; size = 4
_item$ = -384						; size = 4
$T3 = -380						; size = 4
tv139 = -376						; size = 4
_last$ = -372						; size = 4
tv78 = -368						; size = 4
_extension$ = -364					; size = 4
_ignore$ = -360						; size = 4
_ffhnd$ = -356						; size = 4
_i$ = -352						; size = 4
_ptr$ = -348						; size = 4
_UniqueID$ = -344					; size = 4
_btn$ = -340						; size = 4
_filedata$ = -336					; size = 320
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_tree$ = 8						; size = 4
_fspec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_group$ = 20						; size = 4
_cutext$ = 24						; size = 4
_UseMenu$ = 28						; size = 4
?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z PROC	; GetFileListTree

; 490  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 380				; 0000017cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 491  : 	C_Button *btn;
; 492  : 	TREELIST *item;
; 493  : 	WIN32_FIND_DATA filedata;
; 494  : 	HANDLE ffhnd;
; 495  : 	BOOL last,ignore;
; 496  : 	long i,UniqueID;
; 497  : 	_TCHAR	*ptr, *extension;
; 498  : 
; 499  : 	if(!tree) return;

	cmp	DWORD PTR _tree$[ebp], 0
	jne	SHORT $LN17@GetFileLis
	jmp	$LN18@GetFileLis
$LN17@GetFileLis:

; 500  : 
; 501  : 	UniqueID=tree->GetUserNumber(0);

	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _UniqueID$[ebp], eax

; 502  : 	if(!UniqueID)

	cmp	DWORD PTR _UniqueID$[ebp], 0
	jne	SHORT $LN16@GetFileLis

; 503  : 		UniqueID++;

	mov	eax, DWORD PTR _UniqueID$[ebp]
	add	eax, 1
	mov	DWORD PTR _UniqueID$[ebp], eax
$LN16@GetFileLis:

; 504  : 
; 505  : 	ffhnd=FindFirstFile(fspec,&filedata);

	lea	ecx, DWORD PTR _filedata$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fspec$[ebp]
	push	edx
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _ffhnd$[ebp], eax

; 506  : 	last=(ffhnd != INVALID_HANDLE_VALUE);

	cmp	DWORD PTR _ffhnd$[ebp], -1
	je	SHORT $LN20@GetFileLis
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN21@GetFileLis
$LN20@GetFileLis:
	mov	DWORD PTR tv78[ebp], 0
$LN21@GetFileLis:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR _last$[ebp], eax
$LN15@GetFileLis:

; 507  : 	while(last)

	cmp	DWORD PTR _last$[ebp], 0
	je	$LN14@GetFileLis

; 508  : 	{
; 509  : 		if(cutext)

	cmp	DWORD PTR _cutext$[ebp], 0
	je	SHORT $LN13@GetFileLis

; 510  : 		{
; 511  : 			ptr = filedata.cFileName;

	lea	ecx, DWORD PTR _filedata$[ebp+44]
	mov	DWORD PTR _ptr$[ebp], ecx

; 512  : 			extension = NULL;

	mov	DWORD PTR _extension$[ebp], 0
$LN12@GetFileLis:

; 513  : 
; 514  : 			while (*ptr)

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN11@GetFileLis

; 515  : 			{
; 516  : 				if (*ptr == '.')

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN10@GetFileLis

; 517  : 				{
; 518  : 					extension = ptr;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _extension$[ebp], eax
$LN10@GetFileLis:

; 519  : 				}
; 520  : 				ptr ++;

	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$[ebp], ecx

; 521  : 			}

	jmp	SHORT $LN12@GetFileLis
$LN11@GetFileLis:

; 522  : 
; 523  : 			if (extension)

	cmp	DWORD PTR _extension$[ebp], 0
	je	SHORT $LN13@GetFileLis

; 524  : 			{
; 525  : 				*extension = 0;

	mov	edx, DWORD PTR _extension$[ebp]
	mov	BYTE PTR [edx], 0
$LN13@GetFileLis:

; 526  : 			}
; 527  : 		}
; 528  : 
; 529  : 		ignore=FALSE;

	mov	DWORD PTR _ignore$[ebp], 0

; 530  : 		if(excludelist)

	cmp	DWORD PTR _excludelist$[ebp], 0
	je	SHORT $LN8@GetFileLis

; 531  : 		{
; 532  : 			i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN7@GetFileLis:

; 533  : 			while(excludelist[i] && !ignore)

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _excludelist$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN8@GetFileLis
	cmp	DWORD PTR _ignore$[ebp], 0
	jne	SHORT $LN8@GetFileLis

; 534  : 			{
; 535  : 				if(stricmp(excludelist[i],filedata.cFileName) == 0)

	lea	edx, DWORD PTR _filedata$[ebp+44]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _excludelist$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@GetFileLis

; 536  : 				{
; 537  : 					ignore=TRUE;

	mov	DWORD PTR _ignore$[ebp], 1
$LN5@GetFileLis:

; 538  : 				}
; 539  : 
; 540  : 				i++;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 541  : 			}

	jmp	SHORT $LN7@GetFileLis
$LN8@GetFileLis:

; 542  : 		}
; 543  : 
; 544  : 		if(!ignore)

	cmp	DWORD PTR _ignore$[ebp], 0
	jne	$LN4@GetFileLis

; 545  : 		{
; 546  : 			btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN22@GetFileLis
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN23@GetFileLis
$LN22@GetFileLis:
	mov	DWORD PTR tv139[ebp], 0
$LN23@GetFileLis:
	mov	ecx, DWORD PTR tv139[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], edx

; 547  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN4@GetFileLis

; 548  : 			{
; 549  : 				btn->Setup(UniqueID,C_TYPE_CUSTOM,0,0);

	push	0
	push	0
	push	29					; 0000001dH
	mov	eax, DWORD PTR _UniqueID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 550  : 				btn->SetFont(tree->GetFont());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 551  : 				btn->SetText(C_STATE_0,filedata.cFileName);

	lea	ecx, DWORD PTR _filedata$[ebp+44]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 552  : 				btn->SetText(C_STATE_1,filedata.cFileName);

	lea	edx, DWORD PTR _filedata$[ebp+44]
	push	edx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 553  : 				btn->SetText(C_STATE_DISABLED,filedata.cFileName);

	lea	eax, DWORD PTR _filedata$[ebp+44]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 554  : 				btn->SetFgColor(C_STATE_0,0xcccccc);

	push	13421772				; 00ccccccH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 555  : 				btn->SetFgColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 556  : 				btn->SetFgColor(C_STATE_DISABLED,0x808080);

	push	8421504					; 00808080H
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 557  : 				btn->SetUserNumber(0,0);

	push	0
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 558  : 				btn->SetCursorID(tree->GetCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 559  : 				btn->SetDragCursorID(tree->GetDragCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax

; 560  : 				btn->SetMenu(UseMenu);

	mov	ecx, DWORD PTR _UseMenu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+64]
	call	edx

; 561  : 
; 562  : 				item=tree->CreateItem(UniqueID++,group,btn);

	mov	eax, DWORD PTR _UniqueID$[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _group$[ebp]
	push	edx
	mov	eax, DWORD PTR tv235[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax
	mov	ecx, DWORD PTR _UniqueID$[ebp]
	add	ecx, 1
	mov	DWORD PTR _UniqueID$[ebp], ecx

; 563  : 				if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@GetFileLis

; 564  : 					tree->AddItem(tree->GetRoot(),item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN4@GetFileLis:

; 565  : 			}
; 566  : 		}
; 567  : 		last= FindNextFile(ffhnd,&filedata);

	lea	eax, DWORD PTR _filedata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ffhnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindNextFileA@8
	mov	DWORD PTR _last$[ebp], eax

; 568  : 	}

	jmp	$LN15@GetFileLis
$LN14@GetFileLis:

; 569  : 	if (ffhnd != INVALID_HANDLE_VALUE)

	cmp	DWORD PTR _ffhnd$[ebp], -1
	je	SHORT $LN1@GetFileLis

; 570  : 	    FindClose(ffhnd);

	mov	edx, DWORD PTR _ffhnd$[ebp]
	push	edx
	call	DWORD PTR __imp__FindClose@4
$LN1@GetFileLis:

; 571  : 	tree->SetUserNumber(0,UniqueID);

	mov	eax, DWORD PTR _UniqueID$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN18@GetFileLis:

; 572  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-384]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ENDP	; GetFileListTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_popup$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z PROC	; SetDeleteCallback

; 479  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 480  : 	C_PopupList *popup;
; 481  : 
; 482  : 	popup = gPopupMgr->GetMenu (DELETE_FILE_POPUP);

	push	18711					; 00004917H
	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetMenu@C_PopupMgr@@QAEPAVC_PopupList@@J@Z ; C_PopupMgr::GetMenu
	mov	DWORD PTR _popup$[ebp], eax

; 483  : 	if (popup)

	cmp	DWORD PTR _popup$[ebp], 0
	je	SHORT $LN2@SetDeleteC

; 484  : 	{
; 485  : 		popup->SetCallback (LIST_DELETE, cb);

	mov	eax, DWORD PTR _cb$[ebp]
	push	eax
	push	18708					; 00004914H
	mov	ecx, DWORD PTR _popup$[ebp]
	call	?SetCallback@C_PopupList@@QAEXJP6AXJFPAVC_Base@@@Z@Z ; C_PopupList::SetCallback
$LN2@SetDeleteC:

; 486  : 	}
; 487  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ENDP	; SetDeleteCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -384						; size = 4
tv131 = -380						; size = 4
tv70 = -376						; size = 4
_ebox$ = -372						; size = 4
_last$ = -368						; size = 4
_ffhnd$ = -364						; size = 4
$T3 = -360						; size = 4
_extension$ = -356					; size = 4
_ignore$ = -352						; size = 4
_i$ = -348						; size = 4
_ptr$ = -344						; size = 4
_btn$ = -340						; size = 4
_filedata$ = -336					; size = 320
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_fspec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_client$ = 20						; size = 4
_group$ = 24						; size = 4
_cluster$ = 28						; size = 4
_cb$ = 32						; size = 4
_cutext$ = 36						; size = 4
_startx$ = 40						; size = 4
_starty$ = 44						; size = 4
?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z PROC ; GetFileList

; 396  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 372				; 00000174H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 397  : 	C_Button *btn;
; 398  : 	C_EditBox *ebox;
; 399  : 	WIN32_FIND_DATA filedata;
; 400  : 	HANDLE ffhnd;
; 401  : 	BOOL last,ignore;
; 402  : 	long i;
; 403  : 	_TCHAR	*ptr, *extension;
; 404  : 
; 405  : 	if(!win || !cb) return;

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN15@GetFileLis
	cmp	DWORD PTR _cb$[ebp], 0
	jne	SHORT $LN16@GetFileLis
$LN15@GetFileLis:
	jmp	$LN17@GetFileLis
$LN16@GetFileLis:

; 406  : 
; 407  : 	ffhnd=FindFirstFile(fspec,&filedata);

	lea	eax, DWORD PTR _filedata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fspec$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindFirstFileA@8
	mov	DWORD PTR _ffhnd$[ebp], eax

; 408  : 	last=(ffhnd != INVALID_HANDLE_VALUE);

	cmp	DWORD PTR _ffhnd$[ebp], -1
	je	SHORT $LN19@GetFileLis
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN20@GetFileLis
$LN19@GetFileLis:
	mov	DWORD PTR tv70[ebp], 0
$LN20@GetFileLis:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _last$[ebp], edx
$LN14@GetFileLis:

; 409  : 	while(last)

	cmp	DWORD PTR _last$[ebp], 0
	je	$LN13@GetFileLis

; 410  : 	{
; 411  : 		if(cutext)

	cmp	DWORD PTR _cutext$[ebp], 0
	je	SHORT $LN12@GetFileLis

; 412  : 		{
; 413  : 			ptr = filedata.cFileName;

	lea	eax, DWORD PTR _filedata$[ebp+44]
	mov	DWORD PTR _ptr$[ebp], eax

; 414  : 			extension = NULL;

	mov	DWORD PTR _extension$[ebp], 0
$LN11@GetFileLis:

; 415  : 
; 416  : 			while (*ptr)

	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN10@GetFileLis

; 417  : 			{
; 418  : 				if (*ptr == '.')

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN9@GetFileLis

; 419  : 				{
; 420  : 					extension = ptr;

	mov	edx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR _extension$[ebp], edx
$LN9@GetFileLis:

; 421  : 				}
; 422  : 				ptr ++;

	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax

; 423  : 			}

	jmp	SHORT $LN11@GetFileLis
$LN10@GetFileLis:

; 424  : 
; 425  : 			if (extension)

	cmp	DWORD PTR _extension$[ebp], 0
	je	SHORT $LN12@GetFileLis

; 426  : 			{
; 427  : 				*extension = 0;

	mov	ecx, DWORD PTR _extension$[ebp]
	mov	BYTE PTR [ecx], 0
$LN12@GetFileLis:

; 428  : 			}
; 429  : 		}
; 430  : 
; 431  : 		ignore=FALSE;

	mov	DWORD PTR _ignore$[ebp], 0

; 432  : 		if(excludelist)

	cmp	DWORD PTR _excludelist$[ebp], 0
	je	SHORT $LN7@GetFileLis

; 433  : 		{
; 434  : 			i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN6@GetFileLis:

; 435  : 			while(excludelist[i] && !ignore)

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _excludelist$[ebp]
	cmp	DWORD PTR [eax+edx*4], 0
	je	SHORT $LN7@GetFileLis
	cmp	DWORD PTR _ignore$[ebp], 0
	jne	SHORT $LN7@GetFileLis

; 436  : 			{
; 437  : 				if(stricmp(excludelist[i],filedata.cFileName) == 0)

	lea	ecx, DWORD PTR _filedata$[ebp+44]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _excludelist$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	_stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@GetFileLis

; 438  : 				{
; 439  : 					ignore=TRUE;

	mov	DWORD PTR _ignore$[ebp], 1
$LN4@GetFileLis:

; 440  : 				}
; 441  : 
; 442  : 				i++;

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 443  : 			}

	jmp	SHORT $LN6@GetFileLis
$LN7@GetFileLis:

; 444  : 		}
; 445  : 
; 446  : 		if(!ignore)

	cmp	DWORD PTR _ignore$[ebp], 0
	jne	$LN3@GetFileLis

; 447  : 		{
; 448  : 			btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN21@GetFileLis
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN22@GetFileLis
$LN21@GetFileLis:
	mov	DWORD PTR tv131[ebp], 0
$LN22@GetFileLis:
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], ecx

; 449  : 			btn->Setup(C_DONT_CARE,C_TYPE_RADIO,*startx,*starty);

	mov	edx, DWORD PTR _starty$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _startx$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	27					; 0000001bH
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 450  : 			btn->SetFont(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 451  : 			btn->SetText(C_STATE_0,filedata.cFileName);

	lea	eax, DWORD PTR _filedata$[ebp+44]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 452  : 			btn->SetText(C_STATE_1,filedata.cFileName);

	lea	ecx, DWORD PTR _filedata$[ebp+44]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 453  : 			btn->SetText(C_STATE_DISABLED,filedata.cFileName);

	lea	edx, DWORD PTR _filedata$[ebp+44]
	push	edx
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 454  : 			btn->SetFgColor(C_STATE_0,0xcccccc);

	push	13421772				; 00ccccccH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 455  : 			btn->SetFgColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 456  : 			btn->SetFgColor(C_STATE_DISABLED,0x808080);

	push	8421504					; 00808080H
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 457  : 			btn->SetCallback(cb);

	mov	eax, DWORD PTR _cb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 458  : 			btn->SetClient(static_cast<short>(client));

	movzx	ecx, WORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 459  : 			btn->SetGroup(group);

	mov	edx, DWORD PTR _group$[ebp]
	push	edx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 460  : 			btn->SetCluster(cluster);

	mov	eax, DWORD PTR _cluster$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 461  : 			btn->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 462  : 			btn->SetUserNumber(0,0); // Non virtual

	push	0
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 463  : 			win->AddControl(btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 464  : 
; 465  : 			if(!(*starty))

	mov	edx, DWORD PTR _starty$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN2@GetFileLis

; 466  : 			{
; 467  : 				ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 468  : 				if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN2@GetFileLis

; 469  : 					ebox->SetText(btn->GetText(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN2@GetFileLis:

; 470  : 			}
; 471  : 			(*starty)+=gFontList->GetHeight(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	edx, DWORD PTR _starty$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _starty$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@GetFileLis:

; 472  : 		}
; 473  : 		last= FindNextFile(ffhnd,&filedata);

	lea	edx, DWORD PTR _filedata$[ebp]
	push	edx
	mov	eax, DWORD PTR _ffhnd$[ebp]
	push	eax
	call	DWORD PTR __imp__FindNextFileA@8
	mov	DWORD PTR _last$[ebp], eax

; 474  : 	}

	jmp	$LN14@GetFileLis
$LN13@GetFileLis:

; 475  : 	win->ScanClientArea(client);

	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientArea@C_Window@@QAEXJ@Z	; C_Window::ScanClientArea
$LN17@GetFileLis:

; 476  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-376]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFileList@@YAXPAVC_Window@@PADQAPADJJJP6AXJFPAVC_Base@@@ZHPAJ5@Z ENDP ; GetFileList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
tv224 = -44						; size = 4
$T2 = -40						; size = 4
_item$ = -36						; size = 4
tv93 = -32						; size = 4
$T3 = -28						; size = 4
_btn$ = -24						; size = 4
_i$ = -20						; size = 2
_UniqueID$ = -16					; size = 2
__$EHRec$ = -12						; size = 12
_tree$ = 8						; size = 4
_virtlist$ = 12						; size = 4
_group$ = 16						; size = 4
?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z PROC ; GetVirtualFileListTree

; 356  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 357  : 	C_Button *btn;
; 358  : 	TREELIST *item;
; 359  : 	short i,UniqueID;
; 360  : 	
; 361  : 	if(!virtlist || !tree)

	cmp	DWORD PTR _virtlist$[ebp], 0
	je	SHORT $LN6@GetVirtual
	cmp	DWORD PTR _tree$[ebp], 0
	jne	SHORT $LN7@GetVirtual
$LN6@GetVirtual:

; 362  : 		return;

	jmp	$LN8@GetVirtual
$LN7@GetVirtual:

; 363  : 
; 364  : 	UniqueID=static_cast<short>(tree->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	WORD PTR _UniqueID$[ebp], ax

; 365  : 	if(!UniqueID)

	movsx	eax, WORD PTR _UniqueID$[ebp]
	test	eax, eax
	jne	SHORT $LN5@GetVirtual

; 366  : 		UniqueID++;

	mov	cx, WORD PTR _UniqueID$[ebp]
	add	cx, 1
	mov	WORD PTR _UniqueID$[ebp], cx
$LN5@GetVirtual:

; 367  : 
; 368  : 	i=0;

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
$LN4@GetVirtual:

; 369  : 	while(virtlist[i][0] && i < 200)

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, DWORD PTR _virtlist$[ebp]
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR [eax+ecx]
	test	edx, edx
	je	$LN3@GetVirtual
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 200				; 000000c8H
	jge	$LN3@GetVirtual

; 370  : 	{
; 371  : 		btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN10@GetVirtual
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN11@GetVirtual
$LN10@GetVirtual:
	mov	DWORD PTR tv93[ebp], 0
$LN11@GetVirtual:
	mov	ecx, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], edx

; 372  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN2@GetVirtual

; 373  : 		{
; 374  : 			btn->Setup(UniqueID,C_TYPE_CUSTOM,0,0);

	push	0
	push	0
	push	29					; 0000001dH
	movsx	eax, WORD PTR _UniqueID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 375  : 			btn->SetFont(tree->GetFont());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+124]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 376  : 			btn->SetText(C_STATE_0,virtlist[i]);

	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 6
	add	ecx, DWORD PTR _virtlist$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 377  : 			btn->SetText(C_STATE_1,virtlist[i]);

	movsx	edx, WORD PTR _i$[ebp]
	shl	edx, 6
	add	edx, DWORD PTR _virtlist$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 378  : 			btn->SetText(C_STATE_DISABLED,virtlist[i]);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, DWORD PTR _virtlist$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 379  : 			btn->SetFgColor(C_STATE_0,0xcccccc);

	push	13421772				; 00ccccccH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 380  : 			btn->SetFgColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 381  : 			btn->SetFgColor(C_STATE_DISABLED,0x808080);

	push	8421504					; 00808080H
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 382  : 			btn->SetUserNumber(0,1234); // Virtual

	push	1234					; 000004d2H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 383  : 			btn->SetCursorID(tree->GetCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+140]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 384  : 			btn->SetDragCursorID(tree->GetDragCursorID());

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax

; 385  : 
; 386  : 			item=tree->CreateItem(UniqueID++,group,btn);

	movsx	ecx, WORD PTR _UniqueID$[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	mov	eax, DWORD PTR _group$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv224[ebp]
	push	ecx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?CreateItem@C_TreeList@@QAEPAVTREELIST@@JJPAVC_Base@@@Z ; C_TreeList::CreateItem
	mov	DWORD PTR _item$[ebp], eax
	mov	dx, WORD PTR _UniqueID$[ebp]
	add	dx, 1
	mov	WORD PTR _UniqueID$[ebp], dx

; 387  : 			if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN2@GetVirtual

; 388  : 				tree->AddItem(tree->GetRoot(),item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?AddItem@C_TreeList@@QAEHPAVTREELIST@@0@Z ; C_TreeList::AddItem
$LN2@GetVirtual:

; 389  : 		}
; 390  : 		i++;

	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx

; 391  : 	}

	jmp	$LN4@GetVirtual
$LN3@GetVirtual:

; 392  : 	tree->SetUserNumber(0,UniqueID);

	movsx	edx, WORD PTR _UniqueID$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN8@GetVirtual:

; 393  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetVirtualFileListTree@@YAXPAVC_TreeList@@QAY0EA@DJ@Z ENDP ; GetVirtualFileListTree
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -40						; size = 4
_ebox$ = -36						; size = 4
tv95 = -32						; size = 4
$T3 = -28						; size = 4
_btn$ = -24						; size = 4
_half$ = -20						; size = 2
_i$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_virtlist$ = 12						; size = 4
_client$ = 16						; size = 4
_group$ = 20						; size = 4
_cluster$ = 24						; size = 4
_cb$ = 28						; size = 4
_startx$ = 32						; size = 4
_starty$ = 36						; size = 4
?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z PROC ; GetVirtualFileList

; 305  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 306  : 	C_Button *btn;
; 307  : 	C_EditBox *ebox;
; 308  : 	short i,half;
; 309  : 	
; 310  : 	if(!virtlist || !win)

	cmp	DWORD PTR _virtlist$[ebp], 0
	je	SHORT $LN8@GetVirtual
	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN9@GetVirtual
$LN8@GetVirtual:

; 311  : 		return;

	jmp	$LN10@GetVirtual
$LN9@GetVirtual:

; 312  : 
; 313  : 	half=static_cast<short>((win->ClientArea_[client].right - win->ClientArea_[client].left)/2);

	mov	eax, DWORD PTR _client$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _client$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+176]
	sub	eax, DWORD PTR [esi+ecx+168]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	WORD PTR _half$[ebp], ax

; 314  : 	if(half < 150)

	movsx	eax, WORD PTR _half$[ebp]
	cmp	eax, 150				; 00000096H
	jge	SHORT $LN7@GetVirtual

; 315  : 		half=0;

	xor	ecx, ecx
	mov	WORD PTR _half$[ebp], cx
$LN7@GetVirtual:

; 316  : 
; 317  : 	i=0;

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
$LN6@GetVirtual:

; 318  : 	while(virtlist[i][0] && i < 200)

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, DWORD PTR _virtlist$[ebp]
	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR [eax+ecx]
	test	edx, edx
	je	$LN5@GetVirtual
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 200				; 000000c8H
	jge	$LN5@GetVirtual

; 319  : 	{
; 320  : 		btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@GetVirtual
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN13@GetVirtual
$LN12@GetVirtual:
	mov	DWORD PTR tv95[ebp], 0
$LN13@GetVirtual:
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], edx

; 321  : 		btn->Setup(C_DONT_CARE,C_TYPE_RADIO,*startx,*starty);

	mov	eax, DWORD PTR _starty$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _startx$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	27					; 0000001bH
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 322  : 		btn->SetFont(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 323  : 		btn->SetText(C_STATE_0,virtlist[i]);

	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 6
	add	ecx, DWORD PTR _virtlist$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 324  : 		btn->SetText(C_STATE_1,virtlist[i]);

	movsx	edx, WORD PTR _i$[ebp]
	shl	edx, 6
	add	edx, DWORD PTR _virtlist$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 325  : 		btn->SetText(C_STATE_DISABLED,virtlist[i]);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, DWORD PTR _virtlist$[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 326  : 		btn->SetFgColor(C_STATE_0,0xcccccc);

	push	13421772				; 00ccccccH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 327  : 		btn->SetFgColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 328  : 		btn->SetFgColor(C_STATE_DISABLED,0x808080);

	push	8421504					; 00808080H
	push	21					; 00000015H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetFgColor@C_Button@@QAEXFK@Z		; C_Button::SetFgColor

; 329  : 		btn->SetCallback(cb);

	mov	ecx, DWORD PTR _cb$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 330  : 		btn->SetClient(static_cast<short>(client));

	movzx	eax, WORD PTR _client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 331  : 		btn->SetGroup(group);

	mov	ecx, DWORD PTR _group$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 332  : 		btn->SetCluster(cluster);

	mov	edx, DWORD PTR _cluster$[ebp]
	push	edx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 333  : 		btn->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 334  : 		btn->SetUserNumber(0,1234); // Virtual

	push	1234					; 000004d2H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 335  : 		win->AddControl(btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 336  : 
; 337  : 		if(!(*starty) && !(*startx))

	mov	ecx, DWORD PTR _starty$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN4@GetVirtual
	mov	edx, DWORD PTR _startx$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN4@GetVirtual

; 338  : 		{
; 339  : 			ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 340  : 			if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN4@GetVirtual

; 341  : 				ebox->SetText(virtlist[i]);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, DWORD PTR _virtlist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN4@GetVirtual:

; 342  : 		}
; 343  : 		if(!(*startx) && half)

	mov	ecx, DWORD PTR _startx$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN2@GetVirtual
	movsx	edx, WORD PTR _half$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetVirtual

; 344  : 			(*startx)+=half;

	movsx	eax, WORD PTR _half$[ebp]
	mov	ecx, DWORD PTR _startx$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _startx$[ebp]
	mov	DWORD PTR [edx], eax

; 345  : 		else

	jmp	SHORT $LN1@GetVirtual
$LN2@GetVirtual:

; 346  : 		{
; 347  : 			(*startx)=0;

	mov	eax, DWORD PTR _startx$[ebp]
	mov	DWORD PTR [eax], 0

; 348  : 			(*starty)+=gFontList->GetHeight(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	ecx, DWORD PTR _starty$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _starty$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@GetVirtual:

; 349  : 		}
; 350  : 		i++;

	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax

; 351  : 	}

	jmp	$LN6@GetVirtual
$LN5@GetVirtual:

; 352  : 	win->ScanClientArea(client);

	mov	ecx, DWORD PTR _client$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientArea@C_Window@@QAEXJ@Z	; C_Window::ScanClientArea
$LN10@GetVirtual:

; 353  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetVirtualFileList@@YAXPAVC_Window@@QAY0EA@DJJJP6AXJFPAVC_Base@@@ZPAJ4@Z ENDP ; GetVirtualFileList
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_second$ = -16						; size = 4
_first$ = -12						; size = 4
_btn2$ = -8						; size = 4
_btn1$ = -4						; size = 4
_list$ = 8						; size = 4
_newitem$ = 12						; size = 4
?FileNameSortCB@@YAHPAVTREELIST@@0@Z PROC		; FileNameSortCB

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 283  : 	_TCHAR *first,*second;
; 284  : 	C_Button *btn1,*btn2;
; 285  : 	if(!list || !newitem)

	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN6@FileNameSo
	cmp	DWORD PTR _newitem$[ebp], 0
	jne	SHORT $LN7@FileNameSo
$LN6@FileNameSo:

; 286  : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN8@FileNameSo
$LN7@FileNameSo:

; 287  : 
; 288  : 	btn1=(C_Button*)list->Item_;

	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn1$[ebp], ecx

; 289  : 	btn2=(C_Button*)newitem->Item_;

	mov	edx, DWORD PTR _newitem$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn2$[ebp], eax

; 290  : 
; 291  : 	if(!btn1 || !btn2)

	cmp	DWORD PTR _btn1$[ebp], 0
	je	SHORT $LN4@FileNameSo
	cmp	DWORD PTR _btn2$[ebp], 0
	jne	SHORT $LN5@FileNameSo
$LN4@FileNameSo:

; 292  : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN8@FileNameSo
$LN5@FileNameSo:

; 293  : 
; 294  : 	first=btn1->GetText(0);

	push	0
	mov	ecx, DWORD PTR _btn1$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	mov	DWORD PTR _first$[ebp], eax

; 295  : 	second=btn2->GetText(0);

	push	0
	mov	ecx, DWORD PTR _btn2$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	mov	DWORD PTR _second$[ebp], eax

; 296  : 
; 297  : 	if(!first || !second)

	cmp	DWORD PTR _first$[ebp], 0
	je	SHORT $LN2@FileNameSo
	cmp	DWORD PTR _second$[ebp], 0
	jne	SHORT $LN3@FileNameSo
$LN2@FileNameSo:

; 298  : 		return(FALSE);

	xor	eax, eax
	jmp	SHORT $LN8@FileNameSo
$LN3@FileNameSo:

; 299  : 	if(_tcsicmp(second,first) < 0)

	mov	ecx, DWORD PTR _first$[ebp]
	push	ecx
	mov	edx, DWORD PTR _second$[ebp]
	push	edx
	call	__tcsicmp
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN1@FileNameSo

; 300  : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN8@FileNameSo
$LN1@FileNameSo:

; 301  : 	return(FALSE);

	xor	eax, eax
$LN8@FileNameSo:

; 302  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FileNameSortCB@@YAHPAVTREELIST@@0@Z ENDP		; FileNameSortCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
_space$ = -16						; size = 4
_w$ = -12						; size = 2
_done$ = -8						; size = 2
_i$ = -4						; size = 2
_win$ = 8						; size = 4
_str$ = 12						; size = 4
_fontid$ = 16						; size = 4
_width$ = 20						; size = 2
_status$ = 24						; size = 4
?UI_WordWrap@@YAPADPAVC_Window@@PADJFPAH@Z PROC		; UI_WordWrap

; 194  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 195  : 	_TCHAR *space;
; 196  : 	short i,done;
; 197  : 	short w;
; 198  : 
; 199  : 	if(!win || (str == NULL && (WordWrap == NULL || WordPtr == NULL)))

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN20@UI_WordWra
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN21@UI_WordWra
	cmp	DWORD PTR _WordWrap, 0
	je	SHORT $LN20@UI_WordWra
	cmp	DWORD PTR _WordPtr, 0
	jne	SHORT $LN21@UI_WordWra
$LN20@UI_WordWra:

; 200  : 		return(NULL);

	xor	eax, eax
	jmp	$LN22@UI_WordWra
$LN21@UI_WordWra:

; 201  : 
; 202  : 	if(str)

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN18@UI_WordWra

; 203  : 	{
; 204  : 		if(WordWrap)

	cmp	DWORD PTR _WordWrap, 0
	je	SHORT $LN17@UI_WordWra

; 205  : 			delete WordWrap;

	mov	eax, DWORD PTR _WordWrap
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@UI_WordWra:

; 206  : 		WordWrap=new _TCHAR[_tcslen(str)+1];

	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _WordWrap, eax

; 207  : 		_tcscpy(WordWrap,str);

	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _WordWrap
	push	edx
	call	_strcpy
	add	esp, 8

; 208  : 		WordPtr=WordWrap;

	mov	eax, DWORD PTR _WordWrap
	mov	DWORD PTR _WordPtr, eax

; 209  : 		NextPtr=NULL;

	mov	DWORD PTR _NextPtr, 0

; 210  : 	}
; 211  : 	else

	jmp	$LN16@UI_WordWra
$LN18@UI_WordWra:

; 212  : 	{
; 213  : 		if(NextPtr == NULL)

	cmp	DWORD PTR _NextPtr, 0
	jne	SHORT $LN15@UI_WordWra

; 214  : 		{
; 215  : 			delete WordWrap;

	mov	ecx, DWORD PTR _WordWrap
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 216  : 			WordWrap=NULL;

	mov	DWORD PTR _WordWrap, 0

; 217  : 			WordPtr=NULL;

	mov	DWORD PTR _WordPtr, 0

; 218  : 			NextPtr=NULL;

	mov	DWORD PTR _NextPtr, 0

; 219  : 			return(NULL);

	xor	eax, eax
	jmp	$LN22@UI_WordWra
$LN15@UI_WordWra:

; 220  : 		}
; 221  : 		WordPtr=NextPtr;

	mov	eax, DWORD PTR _NextPtr
	mov	DWORD PTR _WordPtr, eax

; 222  : 		if(WordPtr)

	cmp	DWORD PTR _WordPtr, 0
	je	SHORT $LN16@UI_WordWra

; 223  : 		{
; 224  : 			if(!_tcslen(WordPtr))

	mov	ecx, DWORD PTR _WordPtr
	push	ecx
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN16@UI_WordWra

; 225  : 			{
; 226  : 				delete WordWrap;

	mov	edx, DWORD PTR _WordWrap
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 227  : 				WordWrap=NULL;

	mov	DWORD PTR _WordWrap, 0

; 228  : 				WordPtr=NULL;

	mov	DWORD PTR _WordPtr, 0

; 229  : 				NextPtr=NULL;

	mov	DWORD PTR _NextPtr, 0

; 230  : 				return(NULL);

	xor	eax, eax
	jmp	$LN22@UI_WordWra
$LN16@UI_WordWra:

; 231  : 			}
; 232  : 		}
; 233  : 	}
; 234  : 	i=0;

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx

; 235  : 	done=0;

	xor	edx, edx
	mov	WORD PTR _done$[ebp], dx

; 236  : 	space=NULL;

	mov	DWORD PTR _space$[ebp], 0
$LN12@UI_WordWra:

; 237  : 
; 238  : 	while(!done)

	movsx	eax, WORD PTR _done$[ebp]
	test	eax, eax
	jne	$LN11@UI_WordWra
$LN10@UI_WordWra:

; 239  : 	{
; 240  : 		// find a space
; 241  : 		while(WordPtr[i] != ' ' && (WordPtr[i] > 31))

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _WordPtr
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN9@UI_WordWra
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _WordPtr
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 31					; 0000001fH
	jle	SHORT $LN9@UI_WordWra

; 242  : 			i++;

	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN10@UI_WordWra
$LN9@UI_WordWra:

; 243  : 		if(i)

	movsx	edx, WORD PTR _i$[ebp]
	test	edx, edx
	je	$LN8@UI_WordWra

; 244  : 		{
; 245  : 			w=static_cast<short>(gFontList->StrWidth(fontid,WordPtr,i));

	movsx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _WordPtr
	push	ecx
	mov	edx, DWORD PTR _fontid$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?StrWidth@C_Font@@QAEHJPADH@Z		; C_Font::StrWidth
	mov	WORD PTR _w$[ebp], ax

; 246  : 			if(w > width)

	movsx	eax, WORD PTR _w$[ebp]
	movsx	ecx, WORD PTR _width$[ebp]
	cmp	eax, ecx
	jle	SHORT $LN7@UI_WordWra

; 247  : 			{
; 248  : 				if(space == NULL)

	cmp	DWORD PTR _space$[ebp], 0
	jne	SHORT $LN6@UI_WordWra

; 249  : 				{
; 250  : 					*status=FALSE;

	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 0

; 251  : 					NextPtr=&WordPtr[i];

	movsx	eax, WORD PTR _i$[ebp]
	add	eax, DWORD PTR _WordPtr
	mov	DWORD PTR _NextPtr, eax

; 252  : 					done=1;

	mov	ecx, 1
	mov	WORD PTR _done$[ebp], cx

; 253  : 				}
; 254  : 				else

	jmp	SHORT $LN5@UI_WordWra
$LN6@UI_WordWra:

; 255  : 				{
; 256  : 					NextPtr=space+1;

	mov	edx, DWORD PTR _space$[ebp]
	add	edx, 1
	mov	DWORD PTR _NextPtr, edx

; 257  : 					*space=0;

	mov	eax, DWORD PTR _space$[ebp]
	mov	BYTE PTR [eax], 0

; 258  : 					*status=TRUE;

	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], 1

; 259  : 					done=1;

	mov	edx, 1
	mov	WORD PTR _done$[ebp], dx
$LN5@UI_WordWra:

; 260  : 				}
; 261  : 			}
; 262  : 			else

	jmp	SHORT $LN4@UI_WordWra
$LN7@UI_WordWra:

; 263  : 			{
; 264  : 				if(WordPtr[i] == ' ')

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _WordPtr
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN3@UI_WordWra

; 265  : 					space=&WordPtr[i++];

	movsx	eax, WORD PTR _i$[ebp]
	add	eax, DWORD PTR _WordPtr
	mov	DWORD PTR _space$[ebp], eax
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx

; 266  : 				else

	jmp	SHORT $LN4@UI_WordWra
$LN3@UI_WordWra:

; 267  : 				{
; 268  : 					*status=TRUE;

	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 1

; 269  : 					NextPtr=NULL;

	mov	DWORD PTR _NextPtr, 0

; 270  : 					done=1;

	mov	eax, 1
	mov	WORD PTR _done$[ebp], ax
$LN4@UI_WordWra:

; 271  : 				}
; 272  : 			}
; 273  : 		}
; 274  : 		else

	jmp	SHORT $LN1@UI_WordWra
$LN8@UI_WordWra:

; 275  : 			i++;

	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN1@UI_WordWra:

; 276  : 	}

	jmp	$LN12@UI_WordWra
$LN11@UI_WordWra:

; 277  : 	return(WordPtr);

	mov	eax, DWORD PTR _WordPtr
$LN22@UI_WordWra:

; 278  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_WordWrap@@YAPADPAVC_Window@@PADJFPAH@Z ENDP		; UI_WordWrap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_decimal$ = -8						; size = 4
_i$ = -4						; size = 2
_buffer$ = 8						; size = 4
?Uni_Float@@YAXPAD@Z PROC				; Uni_Float

; 172  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 173  : 	short i;
; 174  : 	_TCHAR *decimal;
; 175  : 
; 176  : 	decimal=gStringMgr->GetString(TXT_DECIMAL_PLACE);

	push	398					; 0000018eH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	mov	DWORD PTR _decimal$[ebp], eax

; 177  : 	if(!decimal || !buffer)

	cmp	DWORD PTR _decimal$[ebp], 0
	je	SHORT $LN4@Uni_Float
	cmp	DWORD PTR _buffer$[ebp], 0
	jne	SHORT $LN5@Uni_Float
$LN4@Uni_Float:

; 178  : 		return;

	jmp	SHORT $LN6@Uni_Float
$LN5@Uni_Float:

; 179  : 
; 180  : 	i=0;

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
$LN3@Uni_Float:

; 181  : 	while(buffer[i] && i < 20)

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _buffer$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN6@Uni_Float
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 20					; 00000014H
	jge	SHORT $LN6@Uni_Float

; 182  : 	{
; 183  : 		if(buffer[i] == '.')

	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR _buffer$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN1@Uni_Float

; 184  : 			buffer[i]=decimal[0];

	mov	edx, 1
	imul	edx, 0
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	esi, DWORD PTR _decimal$[ebp]
	mov	dl, BYTE PTR [esi+edx]
	mov	BYTE PTR [ecx+eax], dl
$LN1@Uni_Float:

; 185  : 		i++;

	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax

; 186  : 	}

	jmp	SHORT $LN3@Uni_Float
$LN6@Uni_Float:

; 187  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Uni_Float@@YAXPAD@Z ENDP				; Uni_Float
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ordinal$ = -4						; size = 4
_value$ = 8						; size = 4
?OrdinalString@@YAPADJ@Z PROC				; OrdinalString

; 147  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 148  : 	long ordinal;
; 149  : 	static _TCHAR buffer[20];
; 150  : 
; 151  : 	if (gLangIDNum == F4LANG_FRENCH)

	cmp	DWORD PTR ?gLangIDNum@@3HA, 4		; gLangIDNum
	jne	SHORT $LN5@OrdinalStr

; 152  : 	{
; 153  : 		if(value == 1)

	cmp	DWORD PTR _value$[ebp], 1
	jne	SHORT $LN4@OrdinalStr

; 154  : 		{
; 155  : 			_stprintf(buffer,"%1ld%s",value,gStringMgr->GetString(Ordinals[1]));

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _Ordinals[eax]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	OFFSET ??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@
	push	OFFSET ?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H

; 156  : 		}
; 157  : 		else

	jmp	SHORT $LN3@OrdinalStr
$LN4@OrdinalStr:

; 158  : 		{
; 159  : 			_stprintf(buffer,"%1ld%s",value,gStringMgr->GetString(Ordinals[2]));

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _Ordinals[eax]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	OFFSET ??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@
	push	OFFSET ?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H
$LN3@OrdinalStr:

; 160  : 		}
; 161  : 	}
; 162  : 	else

	jmp	SHORT $LN2@OrdinalStr
$LN5@OrdinalStr:

; 163  : 	{
; 164  : 		ordinal=value % 10;

	mov	eax, DWORD PTR _value$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _ordinal$[ebp], edx

; 165  : 		if(ordinal < 0) ordinal=-ordinal;

	cmp	DWORD PTR _ordinal$[ebp], 0
	jge	SHORT $LN1@OrdinalStr
	mov	edx, DWORD PTR _ordinal$[ebp]
	neg	edx
	mov	DWORD PTR _ordinal$[ebp], edx
$LN1@OrdinalStr:

; 166  : 		_stprintf(buffer,"%1ld%s",value,gStringMgr->GetString(Ordinals[ordinal]));

	mov	eax, DWORD PTR _ordinal$[ebp]
	mov	ecx, DWORD PTR _Ordinals[eax*4]
	push	ecx
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	OFFSET ??_C@_06OCCCLGJE@?$CF1ld?$CFs?$AA@
	push	OFFSET ?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA
	call	_sprintf
	add	esp, 16					; 00000010H
$LN2@OrdinalStr:

; 167  : 	}
; 168  : 	return(&buffer[0]);

	mov	eax, 1
	imul	eax, 0
	add	eax, OFFSET ?buffer@?1??OrdinalString@@YAPADJ@Z@4PADA

; 169  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OrdinalString@@YAPADJ@Z ENDP				; OrdinalString
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_xrlen$ = -20						; size = 4
_idx$ = -16						; size = 4
_i$ = -12						; size = 4
_ptr$ = -8						; size = 4
_nextkey$ = -1						; size = 1
_startkey$ = 8						; size = 1
_buffer$ = 12						; size = 4
_length$ = 16						; size = 4
?EncryptBuffer@@YAXEPAEJ@Z PROC				; EncryptBuffer

; 2418 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2419 : 	long i,xrlen,idx;
; 2420 : 	uchar *ptr;
; 2421 : 	uchar nextkey;
; 2422 : 
; 2423 : 	if(!buffer || length <= 0)

	cmp	DWORD PTR _buffer$[ebp], 0
	je	SHORT $LN4@EncryptBuf
	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN5@EncryptBuf
$LN4@EncryptBuf:

; 2424 : 		return;

	jmp	$LN6@EncryptBuf
$LN5@EncryptBuf:

; 2425 : 
; 2426 : 	idx=0;

	mov	DWORD PTR _idx$[ebp], 0

; 2427 : 	xrlen=strlen(MasterXOR);

	push	OFFSET ?MasterXOR@@3PADA		; MasterXOR
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _xrlen$[ebp], eax

; 2428 : 
; 2429 : 	ptr=buffer;

	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _ptr$[ebp], eax

; 2430 : 	for(i=0;i<length;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@EncryptBuf
$LN2@EncryptBuf:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@EncryptBuf:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _length$[ebp]
	jge	SHORT $LN6@EncryptBuf

; 2431 : 	{
; 2432 : 		*ptr ^= MasterXOR[(idx++)%xrlen];

	mov	eax, DWORD PTR _idx$[ebp]
	cdq
	idiv	DWORD PTR _xrlen$[ebp]
	movsx	eax, BYTE PTR ?MasterXOR@@3PADA[edx]
	mov	ecx, DWORD PTR _ptr$[ebp]
	movzx	edx, BYTE PTR [ecx]
	xor	edx, eax
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	mov	DWORD PTR _idx$[ebp], ecx

; 2433 : 		*ptr ^= startkey;

	movzx	edx, BYTE PTR _startkey$[ebp]
	mov	eax, DWORD PTR _ptr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	xor	ecx, edx
	mov	edx, DWORD PTR _ptr$[ebp]
	mov	BYTE PTR [edx], cl

; 2434 : 		nextkey=*ptr++;

	mov	eax, DWORD PTR _ptr$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _nextkey$[ebp], cl
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx

; 2435 : 		startkey=nextkey;

	mov	al, BYTE PTR _nextkey$[ebp]
	mov	BYTE PTR _startkey$[ebp], al

; 2436 : 	}

	jmp	SHORT $LN2@EncryptBuf
$LN6@EncryptBuf:

; 2437 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EncryptBuffer@@YAXEPAEJ@Z ENDP				; EncryptBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ebox$ = -20						; size = 4
_txt$ = -16						; size = 4
_win$ = -12						; size = 4
_tree$ = -8						; size = 4
_btn$ = -4						; size = 4
_TitleID$ = 8						; size = 4
_filespec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_YesCB$ = 20						; size = 4
_NoCB$ = 24						; size = 4
_filename$ = 28						; size = 4
?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z PROC	; SaveAFile

; 861  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 862  : 	C_Window *win;
; 863  : 	C_Button *btn;
; 864  : 	C_Text *txt;
; 865  : 	C_EditBox *ebox;
; 866  : 	C_TreeList *tree;
; 867  : 
; 868  : 	if(!YesCB || !filespec)

	cmp	DWORD PTR _YesCB$[ebp], 0
	je	SHORT $LN11@SaveAFile
	cmp	DWORD PTR _filespec$[ebp], 0
	jne	SHORT $LN12@SaveAFile
$LN11@SaveAFile:

; 869  : 		return;

	jmp	$LN13@SaveAFile
$LN12@SaveAFile:

; 870  : 
; 871  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 872  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@SaveAFile

; 873  : 	{
; 874  : 		txt=(C_Text*)win->FindControl(TITLE_LABEL);

	push	40303					; 00009d6fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 875  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN9@SaveAFile

; 876  : 		{
; 877  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 878  : 			txt->SetText(TitleID);

	mov	ecx, DWORD PTR _TitleID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 879  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@SaveAFile:

; 880  : 		}
; 881  : 		btn=(C_Button *)win->FindControl(SAVE);

	push	503					; 000001f7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 882  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@SaveAFile

; 883  : 		{
; 884  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 885  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN8@SaveAFile:

; 886  : 		}
; 887  : 		btn=(C_Button *)win->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 888  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@SaveAFile

; 889  : 		{
; 890  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 891  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN7@SaveAFile:

; 892  : 		}
; 893  : 		btn=(C_Button *)win->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 894  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@SaveAFile

; 895  : 		{
; 896  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 897  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN6@SaveAFile:

; 898  : 		}
; 899  : 		btn=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 900  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@SaveAFile

; 901  : 		{
; 902  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 903  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN5@SaveAFile:

; 904  : 		}
; 905  : 		btn=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 906  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@SaveAFile

; 907  : 		{
; 908  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 909  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN4@SaveAFile:

; 910  : 		}
; 911  : 		ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 912  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN3@SaveAFile

; 913  : 		{
; 914  : 			ebox->SetText(filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 915  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 916  : 			ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN3@SaveAFile:

; 917  : 		}
; 918  : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 919  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN2@SaveAFile

; 920  : 		{
; 921  : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 922  : 			tree->SetUserNumber(0,1);

	push	1
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 923  : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 924  : 			tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 925  : 			tree->SetCallback(LoadSaveSelectFileCB);

	push	OFFSET ?LoadSaveSelectFileCB@@YAXJFPAVC_Base@@@Z ; LoadSaveSelectFileCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 926  : 			GetFileListTree(tree,filespec,excludelist,C_TYPE_ITEM,TRUE,DELETE_FILE_POPUP);

	push	18711					; 00004917H
	push	1
	push	50					; 00000032H
	mov	ecx, DWORD PTR _excludelist$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filespec$[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 927  : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 928  : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN2@SaveAFile

; 929  : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@SaveAFile:

; 930  : 		}
; 931  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 932  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN13@SaveAFile:

; 933  : 	}
; 934  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ENDP	; SaveAFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_ebox$ = -20						; size = 4
_txt$ = -16						; size = 4
_win$ = -12						; size = 4
_tree$ = -8						; size = 4
_btn$ = -4						; size = 4
_TitleID$ = 8						; size = 4
_filespec$ = 12						; size = 4
_excludelist$ = 16					; size = 4
_YesCB$ = 20						; size = 4
_NoCB$ = 24						; size = 4
?LoadAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3@Z PROC	; LoadAFile

; 707  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 708  : 	C_Window *win;
; 709  : 	C_Button *btn;
; 710  : 	C_Text *txt;
; 711  : 	C_TreeList *tree;
; 712  : 	C_EditBox *ebox;
; 713  : 
; 714  : 	if(!YesCB || !filespec)

	cmp	DWORD PTR _YesCB$[ebp], 0
	je	SHORT $LN11@LoadAFile
	cmp	DWORD PTR _filespec$[ebp], 0
	jne	SHORT $LN12@LoadAFile
$LN11@LoadAFile:

; 715  : 		return;

	jmp	$LN13@LoadAFile
$LN12@LoadAFile:

; 716  : 
; 717  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 718  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@LoadAFile

; 719  : 	{
; 720  : 		txt=(C_Text*)win->FindControl(TITLE_LABEL);

	push	40303					; 00009d6fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 721  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN9@LoadAFile

; 722  : 		{
; 723  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 724  : 			txt->SetText(TitleID);

	mov	ecx, DWORD PTR _TitleID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+252]
	call	edx

; 725  : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@LoadAFile:

; 726  : 		}
; 727  : 		btn=(C_Button *)win->FindControl(SAVE);

	push	503					; 000001f7H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 728  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN8@LoadAFile

; 729  : 		{
; 730  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 731  : 			btn->SetCallback(NULL);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@LoadAFile:

; 732  : 		}
; 733  : 		btn=(C_Button *)win->FindControl(LOAD_VIRTUAL);

	push	505					; 000001f9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 734  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@LoadAFile

; 735  : 		{
; 736  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 737  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN7@LoadAFile:

; 738  : 		}
; 739  : 		btn=(C_Button *)win->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 740  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@LoadAFile

; 741  : 		{
; 742  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 743  : 			btn->SetCallback(YesCB);

	mov	ecx, DWORD PTR _YesCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN6@LoadAFile:

; 744  : 		}
; 745  : 		btn=(C_Button *)win->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 746  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@LoadAFile

; 747  : 		{
; 748  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 749  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN5@LoadAFile:

; 750  : 		}
; 751  : 		btn=(C_Button *)win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 752  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@LoadAFile

; 753  : 		{
; 754  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 755  : 			btn->SetCallback(NoCB);

	mov	ecx, DWORD PTR _NoCB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN4@LoadAFile:

; 756  : 		}
; 757  : 		ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 758  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN3@LoadAFile

; 759  : 		{
; 760  : 			ebox->Refresh();

	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 761  : 			ebox->SetText("");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 762  : 			ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN3@LoadAFile:

; 763  : 		}
; 764  : 		tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 765  : 		if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN2@LoadAFile

; 766  : 		{
; 767  : 			tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 768  : 			tree->SetUserNumber(0,1);

	push	1
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 769  : 			tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 770  : 			tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 771  : 			tree->SetCallback(LoadSaveSelectFileCB);

	push	OFFSET ?LoadSaveSelectFileCB@@YAXJFPAVC_Base@@@Z ; LoadSaveSelectFileCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 772  : 			GetFileListTree(tree,filespec,excludelist,C_TYPE_ITEM,TRUE,DELETE_FILE_POPUP);

	push	18711					; 00004917H
	push	1
	push	50					; 00000032H
	mov	ecx, DWORD PTR _excludelist$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filespec$[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 773  : 			tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 774  : 			if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN2@LoadAFile

; 775  : 				tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@LoadAFile:

; 776  : 		}
; 777  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 778  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN13@LoadAFile:

; 779  : 	}
; 780  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3@Z ENDP	; LoadAFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelKeyFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelKeyFileCB

; 3034 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3035 : 	C_TreeList *tree;
; 3036 : 	C_Button *btn;
; 3037 : 	TREELIST *item;
; 3038 : 
; 3039 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 3040 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelKeyFile

; 3041 : 	{
; 3042 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 3043 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelKeyFile

; 3044 : 		{
; 3045 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 3046 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelKeyFile

; 3047 : 			{
; 3048 : 				if(DeleteAFile("config",btn->GetText(0),"key"))

	push	OFFSET ??_C@_03ICHNJLJF@key?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ??_C@_06HEJKKHEK@config?$AA@
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelKeyFile

; 3049 : 				{
; 3050 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 3051 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 3052 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelKeyFile:

; 3053 : 				}
; 3054 : 			}
; 3055 : 		}
; 3056 : 	}
; 3057 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 3058 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelKeyFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelKeyFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelVHSFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelVHSFileCB

; 3007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 3008 : 	C_TreeList *tree;
; 3009 : 	C_Button *btn;
; 3010 : 	TREELIST *item;
; 3011 : 
; 3012 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 3013 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelVHSFile

; 3014 : 	{
; 3015 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 3016 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelVHSFile

; 3017 : 		{
; 3018 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 3019 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelVHSFile

; 3020 : 			{
; 3021 : 				if(DeleteAFile("acmibin",btn->GetText(0),"vhs"))

	push	OFFSET ??_C@_03NCDJGPAO@vhs?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ??_C@_07DBNNFGHN@acmibin?$AA@
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelVHSFile

; 3022 : 				{
; 3023 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 3024 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 3025 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelVHSFile:

; 3026 : 				}
; 3027 : 			}
; 3028 : 		}
; 3029 : 	}
; 3030 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 3031 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelVHSFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelVHSFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelTGAFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelTGAFileCB

; 2980 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2981 : 	C_TreeList *tree;
; 2982 : 	C_Button *btn;
; 2983 : 	TREELIST *item;
; 2984 : 
; 2985 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2986 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelTGAFile

; 2987 : 	{
; 2988 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2989 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelTGAFile

; 2990 : 		{
; 2991 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2992 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelTGAFile

; 2993 : 			{
; 2994 : 				if(DeleteAFile(NULL,btn->GetText(0),"tga"))

	push	OFFSET ??_C@_03LJIJAGL@tga?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	0
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelTGAFile

; 2995 : 				{
; 2996 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2997 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2998 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelTGAFile:

; 2999 : 				}
; 3000 : 			}
; 3001 : 		}
; 3002 : 	}
; 3003 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 3004 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelTGAFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelTGAFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelTacFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelTacFileCB

; 2953 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2954 : 	C_TreeList *tree;
; 2955 : 	C_Button *btn;
; 2956 : 	TREELIST *item;
; 2957 : 
; 2958 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2959 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelTacFile

; 2960 : 	{
; 2961 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2962 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelTacFile

; 2963 : 		{
; 2964 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2965 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelTacFile

; 2966 : 			{
; 2967 : 				if(DeleteAFile(FalconCampUserSaveDirectory,btn->GetText(0),"tac"))

	push	OFFSET ??_C@_03DNCDIOFL@tac?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelTacFile

; 2968 : 				{
; 2969 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2970 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2971 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelTacFile:

; 2972 : 				}
; 2973 : 			}
; 2974 : 		}
; 2975 : 	}
; 2976 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 2977 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelTacFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelTacFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelCamFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelCamFileCB

; 2926 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2927 : 	C_TreeList *tree;
; 2928 : 	C_Button *btn;
; 2929 : 	TREELIST *item;
; 2930 : 
; 2931 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2932 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelCamFile

; 2933 : 	{
; 2934 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2935 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelCamFile

; 2936 : 		{
; 2937 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2938 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelCamFile

; 2939 : 			{
; 2940 : 				if(DeleteAFile(FalconCampUserSaveDirectory,btn->GetText(0),"cam"))

	push	OFFSET ??_C@_03GOGOMMPD@cam?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelCamFile

; 2941 : 				{
; 2942 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2943 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2944 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelCamFile:

; 2945 : 				}
; 2946 : 			}
; 2947 : 		}
; 2948 : 	}
; 2949 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 2950 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelCamFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelCamFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelLSTFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelLSTFileCB

; 2899 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2900 : 	C_TreeList *tree;
; 2901 : 	C_Button *btn;
; 2902 : 	TREELIST *item;
; 2903 : 
; 2904 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2905 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelLSTFile

; 2906 : 	{
; 2907 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2908 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelLSTFile

; 2909 : 		{
; 2910 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2911 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelLSTFile

; 2912 : 			{
; 2913 : 				if(DeleteAFile(NULL,btn->GetText(0),"lst"))

	push	OFFSET ??_C@_03LCKPACKD@lst?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	0
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelLSTFile

; 2914 : 				{
; 2915 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2916 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2917 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelLSTFile:

; 2918 : 				}
; 2919 : 			}
; 2920 : 		}
; 2921 : 	}
; 2922 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 2923 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelLSTFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelLSTFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelDFSFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelDFSFileCB

; 2872 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2873 : 	C_TreeList *tree;
; 2874 : 	C_Button *btn;
; 2875 : 	TREELIST *item;
; 2876 : 
; 2877 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2878 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelDFSFile

; 2879 : 	{
; 2880 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2881 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelDFSFile

; 2882 : 		{
; 2883 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2884 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelDFSFile

; 2885 : 			{
; 2886 : 				if(DeleteAFile(FalconCampUserSaveDirectory,btn->GetText(0),"dfs"))

	push	OFFSET ??_C@_03CCLHNNBA@dfs?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelDFSFile

; 2887 : 				{
; 2888 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2889 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2890 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelDFSFile:

; 2891 : 				}
; 2892 : 			}
; 2893 : 		}
; 2894 : 	}
; 2895 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 2896 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelDFSFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelDFSFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
_btn$ = -12						; size = 4
_item$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?DelSTRFileCB@@YAXJFPAVC_Base@@@Z PROC			; DelSTRFileCB

; 2845 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2846 : 	C_TreeList *tree;
; 2847 : 	C_Button *btn;
; 2848 : 	TREELIST *item;
; 2849 : 
; 2850 : 	tree = (C_TreeList*)gPopupMgr->GetCallingControl();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ; C_PopupMgr::GetCallingControl
	mov	DWORD PTR _tree$[ebp], eax

; 2851 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@DelSTRFile

; 2852 : 	{
; 2853 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 2854 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	SHORT $LN4@DelSTRFile

; 2855 : 		{
; 2856 : 			btn=(C_Button*)item->Item_;

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _btn$[ebp], ecx

; 2857 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN4@DelSTRFile

; 2858 : 			{
; 2859 : 				if(DeleteAFile(FalconCampUserSaveDirectory,btn->GetText(0),"str"))

	push	OFFSET ??_C@_03OJMAPEGJ@str?$AA@
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	call	?DeleteAFile@@YAHPAD00@Z		; DeleteAFile
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@DelSTRFile

; 2860 : 				{
; 2861 : 					tree->DeleteItem(item);

	mov	edx, DWORD PTR _item$[ebp]
	push	edx
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteItem@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteItem

; 2862 : 					tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 2863 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN4@DelSTRFile:

; 2864 : 				}
; 2865 : 			}
; 2866 : 		}
; 2867 : 	}
; 2868 : 	gPopupMgr->CloseMenu ();

	mov	ecx, DWORD PTR ?gPopupMgr@@3PAVC_PopupMgr@@A ; gPopupMgr
	call	?CloseMenu@C_PopupMgr@@QAEXXZ		; C_PopupMgr::CloseMenu

; 2869 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DelSTRFileCB@@YAXJFPAVC_Base@@@Z ENDP			; DelSTRFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\general.cpp
_TEXT	SEGMENT
$T2 = -40						; size = 4
_retval$ = -36						; size = 4
tv83 = -32						; size = 4
$T3 = -28						; size = 4
tv73 = -24						; size = 4
_txt$ = -20						; size = 4
_wrap_w$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
___formal$ = 20						; size = 2
_endcol$ = 24						; size = 2
_color$ = 28						; size = 4
_str$ = 32						; size = 4
_Client$ = 36						; size = 4
?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z PROC ; AddWordWrapTextToWindow

; 2017 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2018 : 	C_Text *txt;
; 2019 : 	short wrap_w;
; 2020 : 	BOOL retval;
; 2021 : 
; 2022 : 	retval=TRUE;

	mov	DWORD PTR _retval$[ebp], 1

; 2023 : 
; 2024 : 	if(win == NULL || str == NULL)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@AddWordWra
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN5@AddWordWra
$LN4@AddWordWra:

; 2025 : 		return(0);

	xor	eax, eax
	jmp	$LN6@AddWordWra
$LN5@AddWordWra:

; 2026 : 
; 2027 : 	wrap_w=static_cast<short>(max(50,endcol-*x));

	movsx	eax, WORD PTR _endcol$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	movsx	edx, WORD PTR [ecx]
	sub	eax, edx
	cmp	eax, 50					; 00000032H
	jge	SHORT $LN8@AddWordWra
	mov	DWORD PTR tv73[ebp], 50			; 00000032H
	jmp	SHORT $LN9@AddWordWra
$LN8@AddWordWra:
	movsx	eax, WORD PTR _endcol$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	movsx	edx, WORD PTR [ecx]
	sub	eax, edx
	mov	DWORD PTR tv73[ebp], eax
$LN9@AddWordWra:
	mov	ax, WORD PTR tv73[ebp]
	mov	WORD PTR _wrap_w$[ebp], ax

; 2028 : // Cobra Original code that crashes with Radeon 9800
; 2029 : 	if(str)

	cmp	DWORD PTR _str$[ebp], 0
	je	$LN3@AddWordWra

; 2030 : 	{
; 2031 : 		txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN10@AddWordWra
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN11@AddWordWra
$LN10@AddWordWra:
	mov	DWORD PTR tv83[ebp], 0
$LN11@AddWordWra:
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], edx

; 2032 : 		txt->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 2033 : 		txt->SetFixedWidth(_tcsclen(str)+1);

	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	__tcsclen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFixedWidth@C_Text@@QAEXJ@Z		; C_Text::SetFixedWidth

; 2034 : 		txt->SetXY(*x,*y);

	mov	edx, DWORD PTR _y$[ebp]
	movsx	eax, WORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 2035 : 		txt->SetW(wrap_w);

	movsx	ecx, WORD PTR _wrap_w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 2036 : 		txt->SetFGColor(color);

	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 2037 : 		txt->SetFont(win->Font_);

	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 2038 : 		txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2039 : 		txt->SetFlagBitOn(C_BIT_LEFT|C_BIT_WORDWRAP);

	push	33554464				; 02000020H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2040 : 		txt->SetText(str);

	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2041 : 		txt->SetClient(static_cast<short>(Client));

	movzx	eax, WORD PTR _Client$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2042 : 		win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2043 : 
; 2044 : 		if(gFontList->StrWidth(win->Font_,str) > wrap_w)

	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?StrWidth@C_Font@@QAEHJPAD@Z		; C_Font::StrWidth
	movsx	edx, WORD PTR _wrap_w$[ebp]
	cmp	eax, edx
	jle	SHORT $LN2@AddWordWra

; 2045 : 		{
; 2046 : 			*y += txt->GetH() - gFontList->GetHeight(win->Font_);

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	mov	esi, eax
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	sub	esi, eax
	mov	edx, DWORD PTR _y$[ebp]
	movsx	eax, WORD PTR [edx]
	add	eax, esi
	mov	ecx, DWORD PTR _y$[ebp]
	mov	WORD PTR [ecx], ax

; 2047 : 			*x += txt->GetW();

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetW@C_Base@@QAEJXZ			; C_Base::GetW
	mov	edx, DWORD PTR _x$[ebp]
	movsx	ecx, WORD PTR [edx]
	add	ecx, eax
	mov	edx, DWORD PTR _x$[ebp]
	mov	WORD PTR [edx], cx

; 2048 : 		}
; 2049 : 		else

	jmp	SHORT $LN1@AddWordWra
$LN2@AddWordWra:

; 2050 : 		{
; 2051 : 			*x += gFontList->StrWidth(win->Font_,str);

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?StrWidth@C_Font@@QAEHJPAD@Z		; C_Font::StrWidth
	mov	ecx, DWORD PTR _x$[ebp]
	movsx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _x$[ebp]
	mov	WORD PTR [eax], dx
$LN1@AddWordWra:

; 2052 : 		}
; 2053 : 		retval=1;

	mov	DWORD PTR _retval$[ebp], 1
$LN3@AddWordWra:

; 2054 : 
; 2055 : #if 0
; 2056 : 		wrap=UI_WordWrap(win,str,win->Font_,wrap_w,&status);
; 2057 : 		if(!status)
; 2058 : 			retval=status;
; 2059 : 
; 2060 : 		while(wrap)
; 2061 : 		{
; 2062 : 			wrap_w=endcol-startcol;
; 2063 : 			txt=new C_Text;
; 2064 : 			txt->Setup(C_DONT_CARE,C_TYPE_NORMAL);
; 2065 : 			txt->SetFixedWidth(_tcsclen(wrap)+1);
; 2066 : 			txt->SetText(wrap);
; 2067 : 			txt->SetXY(*x,*y);
; 2068 : 			txt->SetFGColor(color);
; 2069 : 			txt->SetFont(win->Font_);
; 2070 : 			txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);
; 2071 : 			txt->SetFlagBitOn(C_BIT_LEFT);
; 2072 : 			txt->SetClient(Client);
; 2073 : 			win->AddControl(txt);
; 2074 : 			wrap=UI_WordWrap(win,NULL,win->Font_,wrap_w,&status);
; 2075 : 			if(wrap)
; 2076 : 			{
; 2077 : 				*x=startcol;
; 2078 : 				*y+=gFontList->GetHeight(win->Font_);
; 2079 : 			}
; 2080 : 			if(!status)
; 2081 : 				retval=status;
; 2082 : 		}
; 2083 : 		*x=txt->GetX()+txt->GetW();
; 2084 : #endif
; 2085 : 	}
; 2086 : 	return(retval);

	mov	eax, DWORD PTR _retval$[ebp]
$LN6@AddWordWra:

; 2087 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddWordWrapTextToWindow@@YAHPAVC_Window@@PAF1FFKPADJ@Z ENDP ; AddWordWrapTextToWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ PROC ; FalconSessionEntity::GetPlayerSquadron, COMDAT
; _this$ = ecx

; 140  : 	SquadronClass* GetPlayerSquadron(void)	const { return playerSquadronPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerFlightID, COMDAT
; _this$ = ecx

; 134  : 	VU_ID GetPlayerFlightID(void) const           { return playerFlight; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+460]
	mov	edx, DWORD PTR [eax+464]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerFlightID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerFlightID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerName@FalconSessionEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerName@FalconSessionEntity@@QAEPADXZ PROC	; FalconSessionEntity::GetPlayerName, COMDAT
; _this$ = ecx

; 131  : 	_TCHAR* GetPlayerName(void)                   { return name; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerName@FalconSessionEntity@@QAEPADXZ ENDP	; FalconSessionEntity::GetPlayerName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ PROC ; VuBin<SquadronClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ENDP ; VuBin<SquadronClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmission.h
;	COMDAT ?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ PROC		; C_Mission::GetVUID, COMDAT
; _this$ = ecx

; 98   : 		VU_ID GetVUID() { return(vuID); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	edx, DWORD PTR [eax+168]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetVUID@C_Mission@@QAE?AVVU_ID@@XZ ENDP		; C_Mission::GetVUID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetGroup@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Window@@QAEJXZ PROC				; C_Window::GetGroup, COMDAT
; _this$ = ecx

; 317  : 		long GetGroup(void) { return(Group_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Window@@QAEJXZ ENDP				; C_Window::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetH@C_Window@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Window@@QAEFXZ PROC				; C_Window::GetH, COMDAT
; _this$ = ecx

; 313  : 		short GetH() { return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+434]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Window@@QAEFXZ ENDP				; C_Window::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetID@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Window@@QAEJXZ PROC				; C_Window::GetID, COMDAT
; _this$ = ecx

; 302  : 		long GetID() { return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Window@@QAEJXZ ENDP				; C_Window::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetTokenHash@C_Parser@@QAEPAVC_Hash@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTokenHash@C_Parser@@QAEPAVC_Hash@@XZ PROC		; C_Parser::GetTokenHash, COMDAT
; _this$ = ecx

; 96   : 		C_Hash *GetTokenHash() { return(TokenOrder_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+908]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTokenHash@C_Parser@@QAEPAVC_Hash@@XZ ENDP		; C_Parser::GetTokenHash
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpopmgr.h
;	COMDAT ?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ PROC	; C_PopupMgr::GetCallingControl, COMDAT
; _this$ = ecx

; 58   : 		C_Base *GetCallingControl() { return(Control_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCallingControl@C_PopupMgr@@QAEPAVC_Base@@XZ ENDP	; C_PopupMgr::GetCallingControl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetUpdateCallback, COMDAT
; _this$ = ecx

; 32   : 		void SetUpdateCallback(void (*routine)(long ID,short hittype,C_Base *control)) { UpdateCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetW@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetW@C_Base@@QAEJXZ PROC				; C_Base::GetW, COMDAT
; _this$ = ecx

; 143  : 		long GetW()					{ return(w_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetW@C_Base@@QAEJXZ ENDP				; C_Base::GetW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCluster@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCluster@C_Base@@QAEXJ@Z PROC			; C_Base::SetCluster, COMDAT
; _this$ = ecx

; 97   : 		void SetCluster(long id)								{ Section_[_CLUSTER_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCluster@C_Base@@QAEXJ@Z ENDP			; C_Base::SetCluster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetGroup@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetGroup@C_Base@@QAEXJ@Z PROC				; C_Base::SetGroup, COMDAT
; _this$ = ecx

; 96   : 		void SetGroup(long id)									{ Section_[_GROUP_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGroup@C_Base@@QAEXJ@Z ENDP				; C_Base::SetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Resmgr@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Resmgr@@QAEPAXI@Z PROC				; C_Resmgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Resmgr@@QAE@XZ			; C_Resmgr::~C_Resmgr
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Resmgr@@QAEPAXI@Z ENDP				; C_Resmgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?GetIDList@C_Resmgr@@QAEPAVC_Hash@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIDList@C_Resmgr@@QAEPAVC_Hash@@XZ PROC		; C_Resmgr::GetIDList, COMDAT
; _this$ = ecx

; 84   : 		C_Hash *GetIDList() { return(Index_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIDList@C_Resmgr@@QAEPAVC_Hash@@XZ ENDP		; C_Resmgr::GetIDList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\package.h
;	COMDAT ?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ PROC ; PackageClass::GetMissionRequest, COMDAT
; _this$ = ecx

; 96   : 		MissionRequestClass *GetMissionRequest (void)	{ return &mis_request; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 392				; 00000188H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMissionRequest@PackageClass@@QAEPAVMissionRequestClass@@XZ ENDP ; PackageClass::GetMissionRequest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetColor@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColor@TeamClass@@QAEHXZ PROC			; TeamClass::GetColor, COMDAT
; _this$ = ecx

; 329  : 	int GetColor (void)							{ return (int) teamColor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+889]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColor@TeamClass@@QAEHXZ ENDP			; TeamClass::GetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ PROC ; TeamClass::GetOffensiveAirAction, COMDAT
; _this$ = ecx

; 279  : 	TeamAirActionType *GetOffensiveAirAction (void) { return &offensiveAirAction; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 316				; 0000013cH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOffensiveAirAction@TeamClass@@QAEPAUTeamAirActionType@@XZ ENDP ; TeamClass::GetOffensiveAirAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ PROC ; TeamClass::GetGroundAction, COMDAT
; _this$ = ecx

; 277  : 	TeamGndActionType *GetGroundAction (void) { return &groundAction; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 267				; 0000010bH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroundAction@TeamClass@@QAEPAUTeamGndActionType@@XZ ENDP ; TeamClass::GetGroundAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ PROC ; TeamClass::GetCurrentStats, COMDAT
; _this$ = ecx

; 276  : 	TeamStatusType *GetCurrentStats (void) { return &currentStats; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurrentStats@TeamClass@@QAEPAUTeamStatusType@@XZ ENDP ; TeamClass::GetCurrentStats
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsLoaded@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLoaded@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsLoaded, COMDAT
; _this$ = ecx

; 177  : 	int IsLoaded (void)										{ return Flags & CAMP_LOADED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLoaded@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPLocation@WayPointClass@@QBEXPAF0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?GetWPLocation@WayPointClass@@QBEXPAF0@Z PROC		; WayPointClass::GetWPLocation, COMDAT
; _this$ = ecx

; 205  : 	void GetWPLocation (GridIndex* x, GridIndex* y) const { *x = GridX; *y = GridY; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+2]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	8
?GetWPLocation@WayPointClass@@QBEXPAF0@Z ENDP		; WayPointClass::GetWPLocation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPFlags@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPFlags@WayPointClass@@QAEKXZ PROC			; WayPointClass::GetWPFlags, COMDAT
; _this$ = ecx

; 173  : 	ulong GetWPFlags (void)							{ return (ulong)Flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPFlags@WayPointClass@@QAEKXZ ENDP			; WayPointClass::GetWPFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vuentity.h
;	COMDAT ?Id@VuEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Id@VuEntity@@QBE?AVVU_ID@@XZ PROC			; VuEntity::Id, COMDAT
; _this$ = ecx

; 131  : 	VU_ID Id() const	{ return share_.id_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Id@VuEntity@@QBE?AVVU_ID@@XZ ENDP			; VuEntity::Id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsclen
_TEXT	SEGMENT
__String$ = 8						; size = 4
__tcsclen PROC						; COMDAT

; 1748 : {

	push	ebp
	mov	ebp, esp

; 1749 :     return _mbslen((const unsigned char *)_String);

	mov	eax, DWORD PTR __String$[ebp]
	push	eax
	call	__mbslen
	add	esp, 4

; 1750 : }

	pop	ebp
	ret	0
__tcsclen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsicmp
_TEXT	SEGMENT
__String1$ = 8						; size = 4
__String2$ = 12						; size = 4
__tcsicmp PROC						; COMDAT

; 1654 : {

	push	ebp
	mov	ebp, esp

; 1655 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

	mov	eax, DWORD PTR __String2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String1$[ebp]
	push	ecx
	call	__mbsicmp
	add	esp, 8

; 1656 : }

	pop	ebp
	ret	0
__tcsicmp ENDP
_TEXT	ENDS
END
