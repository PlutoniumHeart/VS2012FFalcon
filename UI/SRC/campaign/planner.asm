; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\campaign\planner.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?set3DTexture@@3HA				; set3DTexture
PUBLIC	?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA		; OldReconCWCB
PUBLIC	?FeatureNo@@3JA					; FeatureNo
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
_BSS	SEGMENT
?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA DD 01H DUP (?)	; OldReconCWCB
?FeatureNo@@3JA DD 01H DUP (?)				; FeatureNo
_BSS	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
_NEAR_CLIP DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
_DATA	SEGMENT
?set3DTexture@@3HA DD 0ffffffffH			; set3DTexture
_DATA	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??9VU_ID@@QBE_NABV0@@Z				; VU_ID::operator!=
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?SetWPTarget@WayPointClass@@QAEXVVU_ID@@@Z	; WayPointClass::SetWPTarget
PUBLIC	?SetWPTargetBuilding@WayPointClass@@QAEXE@Z	; WayPointClass::SetWPTargetBuilding
PUBLIC	?GetWPAction@WayPointClass@@QAEHXZ		; WayPointClass::GetWPAction
PUBLIC	?GetNextWP@WayPointClass@@QAEPAV1@XZ		; WayPointClass::GetNextWP
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	??0LoadoutStruct@@QAE@XZ			; LoadoutStruct::LoadoutStruct
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?SetTimerCallback@C_Text@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Text::SetTimerCallback
PUBLIC	?GetHRange@C_Panner@@QAEJXZ			; C_Panner::GetHRange
PUBLIC	?GetVRange@C_Panner@@QAEJXZ			; C_Panner::GetVRange
PUBLIC	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback
PUBLIC	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback
PUBLIC	?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetDrawCallback
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z	; C_Window::SetDragCallback
PUBLIC	??0C_3dViewer@@QAE@XZ				; C_3dViewer::C_3dViewer
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
PUBLIC	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
PUBLIC	?GetPilotSlot@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetPilotSlot
PUBLIC	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag
PUBLIC	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z		; CloseReconWindowCB
PUBLIC	?AssignTargetCB@@YAXJFPAVC_Base@@@Z		; AssignTargetCB
PUBLIC	?HookupPlannerControls@@YAXJ@Z			; HookupPlannerControls
PUBLIC	?LoadPlannerWindows@@YAXXZ			; LoadPlannerWindows
PUBLIC	?TgtAssignCWCB@@YAXJFPAVC_Base@@@Z		; TgtAssignCWCB
PUBLIC	?OpenReconForVCCB@@YAXJFPAVC_Base@@@Z		; OpenReconForVCCB
PUBLIC	?ClosePlannerWindowCB@@YAXJFPAVC_Base@@@Z	; ClosePlannerWindowCB
PUBLIC	?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z	; OpenMunitionsWindowCB
PUBLIC	?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z	; CloseMunitionsWindowCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?FeatureID@@3VVU_ID@@A				; FeatureID
PUBLIC	??_C@_0M@DAMDDPBK@pln_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@HNILJLCK@pln_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@OALNFJFN@pln_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0M@MMKCJJJG@pln_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@		; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_08PIIHFKLC@?$CFs?2?$CK?4str?$AA@		; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_05KBIADNOD@?$CK?4str?$AA@			; `string'
PUBLIC	??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40200000
PUBLIC	__real@41200000
PUBLIC	__real@41f00000
PUBLIC	__real@42b40000
PUBLIC	__real@43b40000
PUBLIC	__real@44160000
PUBLIC	__real@44480000
PUBLIC	__real@468ca000
PUBLIC	__real@47001fcd
PUBLIC	__real@bf800000
PUBLIC	__real@c0000000
PUBLIC	__real@c0200000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_fwrite:PROC
EXTRN	_sprintf:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?WaitLoader@Loader@@QAEXXZ:PROC			; Loader::WaitLoader
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?GetLocation@WayPointClass@@QBEXPAM00@Z:PROC	; WayPointClass::GetLocation
EXTRN	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ:PROC ; UnitClass::GetCurrentUnitWP
EXTRN	?SetEvalFlag@FlightClass@@QAEXEH@Z:PROC		; FlightClass::SetEvalFlag
EXTRN	?ClearEvalFlag@FlightClass@@QAEXE@Z:PROC	; FlightClass::ClearEvalFlag
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	??0C_TimerHook@@QAE@XZ:PROC			; C_TimerHook::C_TimerHook
EXTRN	?Setup@C_TimerHook@@QAEXJF@Z:PROC		; C_TimerHook::Setup
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?GetWindowFlags@C_Handler@@QAEJJ@Z:PROC		; C_Handler::GetWindowFlags
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?Setup@C_3dViewer@@QAEHXZ:PROC			; C_3dViewer::Setup
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z:PROC	; C_3dViewer::Viewport
EXTRN	?Init3d@C_3dViewer@@QAEHM@Z:PROC		; C_3dViewer::Init3d
EXTRN	?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z:PROC ; MissionEvaluationClass::PreMissionEval
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?RedrawTreeWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; RedrawTreeWindowCB
EXTRN	?refresh_waypoint@@YAXPAVWayPointClass@@@Z:PROC	; refresh_waypoint
EXTRN	?ReconListSortCB@@YAHPAVTREELIST@@0@Z:PROC	; ReconListSortCB
EXTRN	?BuildTargetList@@YAXMMM@Z:PROC			; BuildTargetList
EXTRN	?AssignVCCB@@YAXJFPAVC_Base@@@Z:PROC		; AssignVCCB
EXTRN	?UpdateRemoteCompression@@YAXXZ:PROC		; UpdateRemoteCompression
EXTRN	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z:PROC ; PositionCamera
EXTRN	?LoadFlight@@YAXVVU_ID@@@Z:PROC			; LoadFlight
EXTRN	?SetPlaneToArm@@YAXJH@Z:PROC			; SetPlaneToArm
EXTRN	?SetupLoadoutDisplay@@YAXXZ:PROC		; SetupLoadoutDisplay
EXTRN	?GetJRackAndWeapon@@YAHPAUVehicleClassDataType@@PAUFalcon4EntityClassType@@FFFPAVRailInfo@@@Z:PROC ; GetJRackAndWeapon
EXTRN	?ClearHardPoint@@YAXJJJPAVRailInfo@@@Z:PROC	; ClearHardPoint
EXTRN	?LoadHardPoint@@YAXJJJPAVRailInfo@@@Z:PROC	; LoadHardPoint
EXTRN	?LoadAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3@Z:PROC ; LoadAFile
EXTRN	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z:PROC ; SaveAFile
EXTRN	?ViewTimerCB@@YAXJFPAVC_Base@@@Z:PROC		; ViewTimerCB
EXTRN	?ViewObjectCB@@YAXJFPAVC_Base@@@Z:PROC		; ViewObjectCB
EXTRN	?MoveViewTimerCB@@YAXJFPAVC_Base@@@Z:PROC	; MoveViewTimerCB
EXTRN	?DisplayView@@YAXJFPAVC_Base@@@Z:PROC		; DisplayView
EXTRN	?ViewTimerAnimCB@@YAXJFPAVC_Base@@@Z:PROC	; ViewTimerAnimCB
EXTRN	?CancelCampaignCompression@@YAXXZ:PROC		; CancelCampaignCompression
EXTRN	?SetupMunitionsWindow@@YAXVVU_ID@@@Z:PROC	; SetupMunitionsWindow
EXTRN	?SetCurrentLoadout@@YAXXZ:PROC			; SetCurrentLoadout
EXTRN	?RestoreStores@@YAXPAVC_Window@@@Z:PROC		; RestoreStores
EXTRN	?ClearStores@@YAXPAVC_Window@@@Z:PROC		; ClearStores
EXTRN	?UseStores@@YAXXZ:PROC				; UseStores
EXTRN	?MakeStoresList@@YAXPAVC_Window@@J@Z:PROC	; MakeStoresList
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?ToggleATOInfoCB@@YAXJFPAVC_Base@@@Z:PROC	; ToggleATOInfoCB
EXTRN	?DelSTRFileCB@@YAXJFPAVC_Base@@@Z:PROC		; DelSTRFileCB
EXTRN	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z:PROC ; SetDeleteCallback
EXTRN	?GotoFlightCB@@YAXJFPAVC_Base@@@Z:PROC		; GotoFlightCB
EXTRN	?GotoPrevWaypointCB@@YAXJFPAVC_Base@@@Z:PROC	; GotoPrevWaypointCB
EXTRN	?GotoNextWaypointCB@@YAXJFPAVC_Base@@@Z:PROC	; GotoNextWaypointCB
EXTRN	?set_waypoint_climb_mode@@YAXJFPAVC_Base@@@Z:PROC ; set_waypoint_climb_mode
EXTRN	?set_waypoint_enroute_action@@YAXJFPAVC_Base@@@Z:PROC ; set_waypoint_enroute_action
EXTRN	?set_waypoint_action@@YAXJFPAVC_Base@@@Z:PROC	; set_waypoint_action
EXTRN	?set_waypoint_formation@@YAXJFPAVC_Base@@@Z:PROC ; set_waypoint_formation
EXTRN	?MinMaxWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; MinMaxWindowCB
EXTRN	?MoveRendererCB@@YAXPAVC_Window@@@Z:PROC	; MoveRendererCB
EXTRN	?PlaceLoadedWeapons@@YAXPAULoadoutStruct@@@Z:PROC ; PlaceLoadedWeapons
EXTRN	?MoveRendererClient0CB@@YAXPAVC_Window@@@Z:PROC	; MoveRendererClient0CB
EXTRN	?ChangeTOSCB@@YAXJFPAVC_Base@@@Z:PROC		; ChangeTOSCB
EXTRN	?ChangeTOSLockCB@@YAXJFPAVC_Base@@@Z:PROC	; ChangeTOSLockCB
EXTRN	?ChangeAirspeedCB@@YAXJFPAVC_Base@@@Z:PROC	; ChangeAirspeedCB
EXTRN	?ChangeAirspeedLockCB@@YAXJFPAVC_Base@@@Z:PROC	; ChangeAirspeedLockCB
EXTRN	?ChangeAltCB@@YAXJFPAVC_Base@@@Z:PROC		; ChangeAltCB
EXTRN	?ChangePatrolCB@@YAXJFPAVC_Base@@@Z:PROC	; ChangePatrolCB
EXTRN	?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z:PROC	; ToggleOOBTeamCB
EXTRN	?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z:PROC	; ToggleOOBFilterCB
EXTRN	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC	; AreYouSure
EXTRN	?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z:PROC	; SquadronAirUnitCB
EXTRN	?PilotAirUnitCB@@YAXJFPAVC_Base@@@Z:PROC	; PilotAirUnitCB
EXTRN	?OpenPriorityCB@@YAXJFPAVC_Base@@@Z:PROC	; OpenPriorityCB
EXTRN	?OOBFindCB@@YAXJFPAVC_Base@@@Z:PROC		; OOBFindCB
EXTRN	?OOBInfoCB@@YAXJFPAVC_Base@@@Z:PROC		; OOBInfoCB
EXTRN	?SquadronFindCB@@YAXJFPAVC_Base@@@Z:PROC	; SquadronFindCB
EXTRN	?CloseAllRenderers@@YAXJ@Z:PROC			; CloseAllRenderers
EXTRN	?UpdateInventoryCount@@YAXXZ:PROC		; UpdateInventoryCount
EXTRN	?ChangeSkin@@YAXXZ:PROC				; ChangeSkin
EXTRN	?ClearAllHardPointBSPs@@YAXXZ:PROC		; ClearAllHardPointBSPs
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?IMatrix@@3UTrotation@@B:BYTE			; IMatrix
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?TheLoader@@3VLoader@@A:BYTE			; TheLoader
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuxGameTime@@3KA:DWORD				; vuxGameTime
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?gUIViewer@@3PAVC_3dViewer@@A:DWORD		; gUIViewer
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?PlannerLoaded@@3HA:DWORD			; PlannerLoaded
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?gSelectedFlightID@@3VVU_ID@@A:QWORD		; gSelectedFlightID
EXTRN	?gLoadoutFlightID@@3VVU_ID@@A:QWORD		; gLoadoutFlightID
EXTRN	?gPlayerFlightID@@3VVU_ID@@A:QWORD		; gPlayerFlightID
EXTRN	?gActiveFlightID@@3VVU_ID@@A:QWORD		; gActiveFlightID
EXTRN	?gActiveWPNum@@3FA:WORD				; gActiveWPNum
EXTRN	?UIrend3d@@3PAVRender3D@@A:DWORD		; UIrend3d
EXTRN	?PlaneEditList@@3PAJA:BYTE			; PlaneEditList
EXTRN	?FirstPlane@@3JA:DWORD				; FirstPlane
EXTRN	?gCurStores@@3PAULoadoutStruct@@A:BYTE		; gCurStores
EXTRN	?HardPoints@@3JA:DWORD				; HardPoints
EXTRN	?ReadyToPlayMovie@@3HA:DWORD			; ReadyToPlayMovie
EXTRN	?gCurRails@@3PAURailList@@A:BYTE		; gCurRails
EXTRN	?gVCPtr@@3PAUVehicleClassDataType@@A:DWORD	; gVCPtr
EXTRN	?gVehID@@3HA:DWORD				; gVehID
EXTRN	?Object@@3UOBJECTINFO@@A:BYTE			; Object
EXTRN	?Recon@@3UOBJECTINFO@@A:BYTE			; Recon
EXTRN	?gATOAll@@3PAVC_TreeList@@A:DWORD		; gATOAll
EXTRN	?gATOPackage@@3PAVC_TreeList@@A:DWORD		; gATOPackage
EXTRN	?gOOBTree@@3PAVC_TreeList@@A:DWORD		; gOOBTree
EXTRN	?TargetTree@@3PAVC_TreeList@@A:DWORD		; TargetTree
EXTRN	?gFlightOverloaded@@3JA:DWORD			; gFlightOverloaded
EXTRN	?g_bAllowOverload@@3_NA:BYTE			; g_bAllowOverload
EXTRN	?g_bEmptyFilenameFix@@3_NA:BYTE			; g_bEmptyFilenameFix
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?FeatureID@@3VVU_ID@@A DQ 01H DUP (?)			; FeatureID
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@c0200000
CONST	SEGMENT
__real@c0200000 DD 0c0200000r			; -2.5
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@47001fcd
CONST	SEGMENT
__real@47001fcd DD 047001fcdr			; 32799.8
CONST	ENDS
;	COMDAT __real@468ca000
CONST	SEGMENT
__real@468ca000 DD 0468ca000r			; 18000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d?$AA@
CONST	SEGMENT
??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d?$AA@ DB '%02d:%02d:%02d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KBIADNOD@?$CK?4str?$AA@
CONST	SEGMENT
??_C@_05KBIADNOD@?$CK?4str?$AA@ DB '*.str', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIIHFKLC@?$CFs?2?$CK?4str?$AA@
CONST	SEGMENT
??_C@_08PIIHFKLC@?$CFs?2?$CK?4str?$AA@ DB '%s\*.str', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@
CONST	SEGMENT
??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@ DB '%s\%s.str', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
CONST	SEGMENT
??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@ DB '%1ld %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MMKCJJJG@pln_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0M@MMKCJJJG@pln_scf?4lst?$AA@ DB 'pln_scf.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OALNFJFN@pln_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0M@OALNFJFN@pln_snd?4lst?$AA@ DB 'pln_snd.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HNILJLCK@pln_art?4lst?$AA@
CONST	SEGMENT
??_C@_0M@HNILJLCK@pln_art?4lst?$AA@ DB 'pln_art.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DAMDDPBK@pln_res?4lst?$AA@
CONST	SEGMENT
??_C@_0M@DAMDDPBK@pln_res?4lst?$AA@ DB 'pln_res.lst', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?LoadPlannerWindows@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPlannerWindows@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPlannerWindows@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPlannerWindows@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadPlannerWindows@@YAXXZ$3
__ehfuncinfo$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadPlannerWindows@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadPlannerWindows@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_FeatureID$initializer$ DD FLAT:??__EFeatureID@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_day$ = -72						; size = 4
_minute$ = -68						; size = 4
_fl$ = -64						; size = 4
_second$ = -60						; size = 4
_w$ = -56						; size = 4
_time$ = -52						; size = 4
_hour$ = -48						; size = 4
_txt$ = -44						; size = 4
_deltaTime$ = -40					; size = 4
_buffer$ = -36						; size = 30
__$ArrayPad$ = -4					; size = 4
_me$ = 8						; size = 4
?CampaignCountDownCB@@YAHPAVC_Base@@@Z PROC		; CampaignCountDownCB

; 1014 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1015 : 	Flight fl;
; 1016 : 	WayPoint w;
; 1017 : 	_TCHAR buffer[30];
; 1018 : 	C_Text *txt;
; 1019 : 	long time,hour,minute,second,day;
; 1020 : 	int deltaTime = 0;

	mov	DWORD PTR _deltaTime$[ebp], 0

; 1021 : 
; 1022 : 	txt=(C_Text*)me;

	mov	eax, DWORD PTR _me$[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 1023 : 	if(!txt)

	cmp	DWORD PTR _txt$[ebp], 0
	jne	SHORT $LN6@CampaignCo

; 1024 : 		return(FALSE);

	xor	eax, eax
	jmp	$LN7@CampaignCo
$LN6@CampaignCo:

; 1025 : 
; 1026 : 	fl = FalconLocalSession->GetPlayerFlight();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _fl$[ebp], eax

; 1027 : 	if(fl)

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN5@CampaignCo

; 1028 : 	{
; 1029 : 		w = fl->GetCurrentUnitWP();

	mov	ecx, DWORD PTR _fl$[ebp]
	call	?GetCurrentUnitWP@UnitClass@@QBEPAVWayPointClass@@XZ ; UnitClass::GetCurrentUnitWP
	mov	DWORD PTR _w$[ebp], eax

; 1030 : 		if (w && w->GetWPAction() == WP_TAKEOFF)

	cmp	DWORD PTR _w$[ebp], 0
	je	SHORT $LN5@CampaignCo
	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPAction@WayPointClass@@QAEHXZ	; WayPointClass::GetWPAction
	cmp	eax, 1
	jne	SHORT $LN5@CampaignCo

; 1031 : 			deltaTime = (w->GetWPArrivalTime() - vuxGameTime) / VU_TICS_PER_SECOND;

	mov	ecx, DWORD PTR _w$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	sub	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	DWORD PTR _deltaTime$[ebp], eax
$LN5@CampaignCo:

; 1032 : 	}
; 1033 : 
; 1034 : 	if (deltaTime < 0)

	cmp	DWORD PTR _deltaTime$[ebp], 0
	jge	SHORT $LN3@CampaignCo

; 1035 : 		deltaTime = 0;

	mov	DWORD PTR _deltaTime$[ebp], 0
$LN3@CampaignCo:

; 1036 : 
; 1037 : 	if(deltaTime != me->GetUserNumber(0))

	push	0
	mov	ecx, DWORD PTR _me$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	DWORD PTR _deltaTime$[ebp], eax
	je	$LN2@CampaignCo

; 1038 : 	{
; 1039 : 		txt->SetUserNumber(0,deltaTime);

	mov	edx, DWORD PTR _deltaTime$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1040 : 		day=(long)(deltaTime/(24*60*60));

	mov	eax, DWORD PTR _deltaTime$[ebp]
	cdq
	mov	ecx, 86400				; 00015180H
	idiv	ecx
	mov	DWORD PTR _day$[ebp], eax

; 1041 : 		time=(long)((deltaTime)-(day*24*60*60));

	mov	edx, DWORD PTR _day$[ebp]
	imul	edx, 24					; 00000018H
	imul	edx, 60					; 0000003cH
	imul	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _deltaTime$[ebp]
	sub	eax, edx
	mov	DWORD PTR _time$[ebp], eax

; 1042 : 		hour=time/(60*60);

	mov	eax, DWORD PTR _time$[ebp]
	cdq
	mov	ecx, 3600				; 00000e10H
	idiv	ecx
	mov	DWORD PTR _hour$[ebp], eax

; 1043 : 		minute=(time/60)%60;

	mov	eax, DWORD PTR _time$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _minute$[ebp], edx

; 1044 : 		second=time%60;

	mov	eax, DWORD PTR _time$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR _second$[ebp], edx

; 1045 : // 2002-04-18 MN HACK HACK HACK - sometimes the clock goes to 17 hours, 47 minutes - 
; 1046 : // god knows why...let's just set the timer to 00:00:00 when that happens...
; 1047 : 		if (hour >= 17)

	cmp	DWORD PTR _hour$[ebp], 17		; 00000011H
	jl	SHORT $LN1@CampaignCo

; 1048 : 		{
; 1049 : 			hour = 0;

	mov	DWORD PTR _hour$[ebp], 0

; 1050 : 			minute = 0;

	mov	DWORD PTR _minute$[ebp], 0

; 1051 : 			second = 0;

	mov	DWORD PTR _second$[ebp], 0
$LN1@CampaignCo:

; 1052 : 		}
; 1053 : 		_stprintf(buffer,"%02d:%02d:%02d",hour,minute,second);

	mov	edx, DWORD PTR _second$[ebp]
	push	edx
	mov	eax, DWORD PTR _minute$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hour$[ebp]
	push	ecx
	push	OFFSET ??_C@_0P@PLMNPDMB@?$CF02d?3?$CF02d?3?$CF02d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 1054 : 		txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 1055 : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1056 : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN7@CampaignCo
$LN2@CampaignCo:

; 1057 : 	}
; 1058 : 	return(FALSE);

	xor	eax, eax
$LN7@CampaignCo:

; 1059 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignCountDownCB@@YAHPAVC_Base@@@Z ENDP		; CampaignCountDownCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
tv93 = -12						; size = 4
_ent$ = -8						; size = 4
_fl$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CampaignTaxiCB@@YAXJFPAVC_Base@@@Z PROC		; CampaignTaxiCB

; 980  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 981  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN12@CampaignTa

; 982  : 		return;

	jmp	$LN13@CampaignTa
$LN12@CampaignTa:

; 983  : 	Flight fl;
; 984  : 	fl = FalconLocalSession->GetPlayerFlight();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _fl$[ebp], eax

; 985  : 
; 986  : 	// RV - Biker - Disable ramp and taxi for carrier take off
; 987  : 	CampEntity ent = NULL;

	mov	DWORD PTR _ent$[ebp], 0

; 988  : 
; 989  : 	if (fl)

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN11@CampaignTa

; 990  : 		ent = fl->GetUnitAirbase();

	mov	ecx, DWORD PTR _fl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _fl$[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _ent$[ebp], eax
$LN11@CampaignTa:

; 991  : 
; 992  : 	if (ent && ent->IsTaskForce())

	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN10@CampaignTa
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$[ebp]
	mov	eax, DWORD PTR [edx+264]
	call	eax
	test	eax, eax
	je	SHORT $LN10@CampaignTa

; 993  : 		ID = WAIT_TAKEOFF;

	mov	DWORD PTR _ID$[ebp], 6017		; 00001781H
$LN10@CampaignTa:

; 994  : 
; 995  : 	switch (ID) {

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv93[ebp], ecx
	cmp	DWORD PTR tv93[ebp], 6016		; 00001780H
	je	SHORT $LN7@CampaignTa
	cmp	DWORD PTR tv93[ebp], 6017		; 00001781H
	je	SHORT $LN5@CampaignTa
	cmp	DWORD PTR tv93[ebp], 6019		; 00001783H
	je	SHORT $LN3@CampaignTa
	jmp	SHORT $LN13@CampaignTa
$LN7@CampaignTa:

; 996  : 	case WAIT_TAXI:
; 997  : 		PlayerOptions.SetStartFlag(PlayerOptionsClass::START_TAXI);

	push	1
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag

; 998  : 		if(fl) fl->ClearEvalFlag(FEVAL_START_COLD);

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN6@CampaignTa
	push	16					; 00000010H
	mov	ecx, DWORD PTR _fl$[ebp]
	call	?ClearEvalFlag@FlightClass@@QAEXE@Z	; FlightClass::ClearEvalFlag
$LN6@CampaignTa:

; 999  : 		break;

	jmp	SHORT $LN13@CampaignTa
$LN5@CampaignTa:

; 1000 : 	case WAIT_TAKEOFF:
; 1001 : 		PlayerOptions.SetStartFlag(PlayerOptionsClass::START_RUNWAY);

	push	0
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag

; 1002 : 		if(fl) fl->ClearEvalFlag(FEVAL_START_COLD);

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN4@CampaignTa
	push	16					; 00000010H
	mov	ecx, DWORD PTR _fl$[ebp]
	call	?ClearEvalFlag@FlightClass@@QAEXE@Z	; FlightClass::ClearEvalFlag
$LN4@CampaignTa:

; 1003 : 		break;

	jmp	SHORT $LN13@CampaignTa
$LN3@CampaignTa:

; 1004 : 	case WAIT_RAMP:
; 1005 : 		PlayerOptions.SetStartFlag(PlayerOptionsClass::START_RAMP);

	push	2
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag

; 1006 : 		if(fl) fl->SetEvalFlag(FEVAL_START_COLD);

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN13@CampaignTa
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _fl$[ebp]
	call	?SetEvalFlag@FlightClass@@QAEXEH@Z	; FlightClass::SetEvalFlag
$LN13@CampaignTa:

; 1007 : 		break;
; 1008 : 	default:
; 1009 : 	    ShiWarning("Unexpected taxi ID");
; 1010 : 	}
; 1011 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignTaxiCB@@YAXJFPAVC_Base@@@Z ENDP		; CampaignTaxiCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampaignAbortTakeoffCB@@YAXJFPAVC_Base@@@Z PROC	; CampaignAbortTakeoffCB

; 969  : {

	push	ebp
	mov	ebp, esp

; 970  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CampaignAb

; 971  : 		return;

	jmp	SHORT $LN2@CampaignAb
$LN1@CampaignAb:

; 972  : 
; 973  : 	CancelCampaignCompression();

	call	?CancelCampaignCompression@@YAXXZ	; CancelCampaignCompression

; 974  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 975  : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 976  : 	ReadyToPlayMovie=TRUE;

	mov	DWORD PTR ?ReadyToPlayMovie@@3HA, 1	; ReadyToPlayMovie
$LN2@CampaignAb:

; 977  : }

	pop	ebp
	ret	0
?CampaignAbortTakeoffCB@@YAXJFPAVC_Base@@@Z ENDP	; CampaignAbortTakeoffCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenTargetWinCB@@YAXJFPAVC_Base@@@Z PROC		; OpenTargetWinCB

; 953  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 954  : 	C_Window *win;
; 955  : 
; 956  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@OpenTarget

; 957  : 		return;

	jmp	SHORT $LN3@OpenTarget
$LN2@OpenTarget:

; 958  : 
; 959  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 960  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@OpenTarget

; 961  : 	{
; 962  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 963  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 964  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN3@OpenTarget:

; 965  : 	}
; 966  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenTargetWinCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenTargetWinCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenReconWinCB@@YAXJFPAVC_Base@@@Z PROC		; OpenReconWinCB

; 933  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 934  : 	C_Window *win;
; 935  : 
; 936  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@OpenReconW

; 937  : 		return;

	jmp	$LN3@OpenReconW
$LN2@OpenReconW:

; 938  : 
; 939  : 	win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 940  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@OpenReconW

; 941  : 	{
; 942  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 943  : 		SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 944  : 		TheLoader.WaitLoader();

	mov	ecx, OFFSET ?TheLoader@@3VLoader@@A	; TheLoader
	call	?WaitLoader@Loader@@QAEXXZ		; Loader::WaitLoader

; 945  : 		PositionCamera(&Recon,win,0);

	push	0
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH

; 946  : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 947  : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 948  : 		SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN3@OpenReconW:

; 949  : 	}
; 950  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenReconWinCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenReconWinCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
tv90 = -20						; size = 4
$T1 = -16						; size = 4
_flight$2 = -12						; size = 4
_pilotSlot$3 = -8					; size = 4
$T4 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?UseStoresCB@@YAXJFPAVC_Base@@@Z PROC			; UseStoresCB

; 891  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 892  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN8@UseStoresC

; 893  : 		return;

	jmp	$LN9@UseStoresC
$LN8@UseStoresC:

; 894  : 
; 895  : 	if(gFlightOverloaded)

	cmp	DWORD PTR ?gFlightOverloaded@@3JA, 0	; gFlightOverloaded
	je	SHORT $LN7@UseStoresC

; 896  : 	{
; 897  : 		if (g_bAllowOverload)

	movzx	ecx, BYTE PTR ?g_bAllowOverload@@3_NA	; g_bAllowOverload
	test	ecx, ecx
	je	SHORT $LN6@UseStoresC

; 898  : 		{
; 899  : 			AreYouSure(TXT_WARNING,TXT_OVERLOADED,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	401					; 00000191H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 900  : 		}
; 901  : 		else

	jmp	SHORT $LN7@UseStoresC
$LN6@UseStoresC:

; 902  : 		{
; 903  : 			AreYouSure(TXT_ERROR,TXT_OVERLOADED,NULL,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	0
	push	401					; 00000191H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 904  : 			return;

	jmp	$LN9@UseStoresC
$LN7@UseStoresC:

; 905  : 		}
; 906  : 	}
; 907  : 
; 908  : 	UseStores();

	call	?UseStores@@YAXXZ			; UseStores

; 909  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	SHORT $LN4@UseStoresC

; 910  : 		gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN4@UseStoresC:

; 911  : 
; 912  : 	if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN3@UseStoresC

; 913  : 	{
; 914  : 		ClearAllHardPointBSPs(); // MLR 2/29/2004 - clear hardpoint drawables

	call	?ClearAllHardPointBSPs@@YAXXZ		; ClearAllHardPointBSPs

; 915  : 		gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 916  : 		delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T4[ebp], eax
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN11@UseStoresC
	push	1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN12@UseStoresC
$LN11@UseStoresC:
	mov	DWORD PTR tv90[ebp], 0
$LN12@UseStoresC:

; 917  : 		gUIViewer=NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN3@UseStoresC:

; 918  : 	}
; 919  : 
; 920  : 	// KCK: We need to update the mission evaluation stuff if this is the selected flight
; 921  : 	if (gLoadoutFlightID == gPlayerFlightID)

	push	OFFSET ?gPlayerFlightID@@3VVU_ID@@A	; gPlayerFlightID
	mov	ecx, OFFSET ?gLoadoutFlightID@@3VVU_ID@@A ; gLoadoutFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@UseStoresC

; 922  : 	{
; 923  : 		Flight	flight = (Flight) vuDatabase->Find(gLoadoutFlightID);

	mov	edx, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$2[ebp], eax

; 924  : 		int		pilotSlot = 255;

	mov	DWORD PTR _pilotSlot$3[ebp], 255	; 000000ffH

; 925  : 		if (!flight)

	cmp	DWORD PTR _flight$2[ebp], 0
	jne	SHORT $LN1@UseStoresC

; 926  : 			return;

	jmp	SHORT $LN9@UseStoresC
$LN1@UseStoresC:

; 927  : 		pilotSlot = FalconLocalSession->GetPilotSlot();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	ecx, al
	mov	DWORD PTR _pilotSlot$3[ebp], ecx

; 928  : 		TheCampaign.MissionEvaluator->PreMissionEval(flight, static_cast<uchar>(pilotSlot));

	movzx	edx, BYTE PTR _pilotSlot$3[ebp]
	push	edx
	mov	eax, DWORD PTR _flight$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	call	?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z ; MissionEvaluationClass::PreMissionEval
$LN9@UseStoresC:

; 929  : 	}
; 930  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UseStoresCB@@YAXJFPAVC_Base@@@Z ENDP			; UseStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ChangeSkinCB@@YAXJFPAVC_Base@@@Z PROC			; ChangeSkinCB

; 877  : {

	push	ebp
	mov	ebp, esp

; 878  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@ChangeSkin

; 879  : 		return;

	jmp	SHORT $LN2@ChangeSkin
$LN1@ChangeSkin:

; 880  : 
; 881  : 	//add code;
; 882  : 	
; 883  : 	ChangeSkin();

	call	?ChangeSkin@@YAXXZ			; ChangeSkin
$LN2@ChangeSkin:

; 884  : 
; 885  : 	return;
; 886  : }

	pop	ebp
	ret	0
?ChangeSkinCB@@YAXJFPAVC_Base@@@Z ENDP			; ChangeSkinCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ClearStoresCB@@YAXJFPAVC_Base@@@Z PROC			; ClearStoresCB

; 868  : {

	push	ebp
	mov	ebp, esp

; 869  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@ClearStore

; 870  : 		return;

	jmp	SHORT $LN2@ClearStore
$LN1@ClearStore:

; 871  : 
; 872  : 	ClearStores(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?ClearStores@@YAXPAVC_Window@@@Z	; ClearStores
	add	esp, 4
$LN2@ClearStore:

; 873  : }

	pop	ebp
	ret	0
?ClearStoresCB@@YAXJFPAVC_Base@@@Z ENDP			; ClearStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?RestoreStoresCB@@YAXJFPAVC_Base@@@Z PROC		; RestoreStoresCB

; 860  : {

	push	ebp
	mov	ebp, esp

; 861  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@RestoreSto

; 862  : 		return;

	jmp	SHORT $LN2@RestoreSto
$LN1@RestoreSto:

; 863  : 
; 864  : 	RestoreStores(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?RestoreStores@@YAXPAVC_Window@@@Z	; RestoreStores
	add	esp, 4
$LN2@RestoreSto:

; 865  : }

	pop	ebp
	ret	0
?RestoreStoresCB@@YAXJFPAVC_Base@@@Z ENDP		; RestoreStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_fname$1 = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?SaveStoresCB@@YAXJFPAVC_Base@@@Z PROC			; SaveStoresCB

; 842  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 843  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@SaveStores

; 844  : 		return;

	jmp	SHORT $LN4@SaveStores
$LN3@SaveStores:

; 845  : 
; 846  : 	SetDeleteCallback(DelSTRFileCB);

	push	OFFSET ?DelSTRFileCB@@YAXJFPAVC_Base@@@Z ; DelSTRFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 847  : //dpc SaveStoresListFix
; 848  : 	if (g_bEmptyFilenameFix)

	movzx	ecx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	ecx, ecx
	je	SHORT $LN2@SaveStores

; 849  : 	{
; 850  : 		_TCHAR fname[MAX_PATH];
; 851  : 		_stprintf(fname,"%s\\*.str",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_08PIIHFKLC@?$CFs?2?$CK?4str?$AA@
	lea	edx, DWORD PTR _fname$1[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 852  : 		SaveAFile(TXT_SAVE_STORES,fname,NULL,VerifySaveTheStoresCB,CloseWindowCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?VerifySaveTheStoresCB@@YAXJFPAVC_Base@@@Z ; VerifySaveTheStoresCB
	push	0
	lea	eax, DWORD PTR _fname$1[ebp]
	push	eax
	push	232					; 000000e8H
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H

; 853  : 	}
; 854  : 	else

	jmp	SHORT $LN4@SaveStores
$LN2@SaveStores:

; 855  : //end SaveStoresListFix
; 856  : 	SaveAFile(TXT_SAVE_STORES,"*.str",NULL,VerifySaveTheStoresCB,CloseWindowCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?VerifySaveTheStoresCB@@YAXJFPAVC_Base@@@Z ; VerifySaveTheStoresCB
	push	0
	push	OFFSET ??_C@_05KBIADNOD@?$CK?4str?$AA@
	push	232					; 000000e8H
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H
$LN4@SaveStores:

; 857  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveStoresCB@@YAXJFPAVC_Base@@@Z ENDP			; SaveStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_ofp$ = -272						; size = 4
_ebox$ = -268						; size = 4
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?VerifySaveTheStoresCB@@YAXJFPAVC_Base@@@Z PROC		; VerifySaveTheStoresCB

; 808  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 809  : 	_TCHAR fname[MAX_PATH];
; 810  : 	FILE *ofp;
; 811  : 	C_EditBox *ebox;
; 812  : 
; 813  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@VerifySave

; 814  : 		return;

	jmp	$LN7@VerifySave
$LN6@VerifySave:

; 815  : 
; 816  : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 817  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN7@VerifySave

; 818  : 	{
; 819  : 		//dpc EmptyFilenameSaveFix, modified by MN - added a warning to enter a filename
; 820  : 		if (g_bEmptyFilenameFix)

	movzx	edx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	edx, edx
	je	SHORT $LN4@VerifySave

; 821  : 		{
; 822  : 			if (_tcslen(ebox->GetText()) == 0)

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@VerifySave

; 823  : 			{
; 824  : 				AreYouSure(TXT_WARNING, TXT_ENTER_FILENAME,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	467					; 000001d3H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 825  : 				return;

	jmp	$LN7@VerifySave
$LN4@VerifySave:

; 826  : 			}
; 827  : 		}
; 828  : 		//end EmptyFilenameSaveFix
; 829  : 		_stprintf(fname,"%s\\%s.str",FalconCampUserSaveDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@
	lea	eax, DWORD PTR _fname$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 830  : 		ofp=fopen(fname,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _ofp$[ebp], eax

; 831  : 		if(ofp)

	cmp	DWORD PTR _ofp$[ebp], 0
	je	SHORT $LN2@VerifySave

; 832  : 		{
; 833  : 			fclose(ofp);

	mov	edx, DWORD PTR _ofp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 834  : 			AreYouSure(TXT_SAVE_STORES,TXT_FILE_EXISTS,SaveTheStoresCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?SaveTheStoresCB@@YAXJFPAVC_Base@@@Z ; SaveTheStoresCB
	push	241					; 000000f1H
	push	232					; 000000e8H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 835  : 		}
; 836  : 		else

	jmp	SHORT $LN7@VerifySave
$LN2@VerifySave:

; 837  : 			SaveTheStoresCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?SaveTheStoresCB@@YAXJFPAVC_Base@@@Z	; SaveTheStoresCB
	add	esp, 12					; 0000000cH
$LN7@VerifySave:

; 838  : 	}
; 839  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?VerifySaveTheStoresCB@@YAXJFPAVC_Base@@@Z ENDP		; VerifySaveTheStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_ebox$ = -276						; size = 4
_win$ = -272						; size = 4
_ofp$ = -268						; size = 4
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SaveTheStoresCB@@YAXJFPAVC_Base@@@Z PROC		; SaveTheStoresCB

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 779  : 	_TCHAR fname[MAX_PATH];
; 780  : 	FILE *ofp;
; 781  : 	C_EditBox *ebox;
; 782  : 	C_Window *win;
; 783  : 
; 784  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@SaveTheSto

; 785  : 		return;

	jmp	$LN5@SaveTheSto
$LN4@SaveTheSto:

; 786  : 
; 787  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 788  : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN3@SaveTheSto

; 789  : 		return;

	jmp	$LN5@SaveTheSto
$LN3@SaveTheSto:

; 790  : 
; 791  : 	gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 792  : 	gMainHandler->HideWindow(control->Parent_);

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 793  : 
; 794  : 	ebox=(C_EditBox*)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 795  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN5@SaveTheSto

; 796  : 	{
; 797  : 		_stprintf(fname,"%s\\%s.str",FalconCampUserSaveDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 798  : 		ofp=fopen(fname,"wb");

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _ofp$[ebp], eax

; 799  : 		if(ofp == NULL)

	cmp	DWORD PTR _ofp$[ebp], 0
	jne	SHORT $LN1@SaveTheSto

; 800  : 			return;

	jmp	SHORT $LN5@SaveTheSto
$LN1@SaveTheSto:

; 801  : 
; 802  : 		fwrite(&gCurStores[FirstPlane],sizeof(LoadoutStruct),1,ofp);

	mov	eax, DWORD PTR _ofp$[ebp]
	push	eax
	push	1
	push	48					; 00000030H
	mov	ecx, DWORD PTR ?FirstPlane@@3JA		; FirstPlane
	imul	ecx, 48					; 00000030H
	add	ecx, OFFSET ?gCurStores@@3PAULoadoutStruct@@A ; gCurStores
	push	ecx
	call	_fwrite
	add	esp, 16					; 00000010H

; 803  : 		fclose(ofp);

	mov	edx, DWORD PTR _ofp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4
$LN5@SaveTheSto:

; 804  : 	}
; 805  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveTheStoresCB@@YAXJFPAVC_Base@@@Z ENDP		; SaveTheStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?LoadStoresCB@@YAXJFPAVC_Base@@@Z PROC			; LoadStoresCB

; 766  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 767  : 	_TCHAR fname[MAX_PATH];
; 768  : 
; 769  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@LoadStores

; 770  : 		return;

	jmp	SHORT $LN2@LoadStores
$LN1@LoadStores:

; 771  : 
; 772  : 	SetDeleteCallback(DelSTRFileCB);

	push	OFFSET ?DelSTRFileCB@@YAXJFPAVC_Base@@@Z ; DelSTRFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 773  : 	_stprintf(fname,"%s\\*.str",FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_08PIIHFKLC@?$CFs?2?$CK?4str?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 774  : 	LoadAFile(TXT_LOAD_STORES,fname,NULL,LoadTheStoresCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?LoadTheStoresCB@@YAXJFPAVC_Base@@@Z ; LoadTheStoresCB
	push	0
	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	push	231					; 000000e7H
	call	?LoadAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z3@Z ; LoadAFile
	add	esp, 20					; 00000014H
$LN2@LoadStores:

; 775  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadStoresCB@@YAXJFPAVC_Base@@@Z ENDP			; LoadStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_Leave$ = -336						; size = 4
_ebox$ = -332						; size = 4
_ifp$ = -328						; size = 4
_win$ = -324						; size = 4
_j$ = -320						; size = 4
_i$ = -316						; size = 4
_hp$ = -312						; size = 48
_fname$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadTheStoresCB@@YAXJFPAVC_Base@@@Z PROC		; LoadTheStoresCB

; 717  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 718  : 	FILE *ifp;
; 719  : 	LoadoutStruct hp;

	lea	ecx, DWORD PTR _hp$[ebp]
	call	??0LoadoutStruct@@QAE@XZ		; LoadoutStruct::LoadoutStruct

; 720  : 	long i,j;
; 721  : 	_TCHAR fname[MAX_PATH];
; 722  : 	C_EditBox *ebox;
; 723  : 	C_Window *win;
; 724  : 	F4CSECTIONHANDLE *Leave;
; 725  : 
; 726  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN12@LoadTheSto

; 727  : 		return;

	jmp	$LN13@LoadTheSto
$LN12@LoadTheSto:

; 728  : 
; 729  : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 730  : 
; 731  : 	ebox=(C_EditBox*)control->Parent_->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 732  : 	if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN13@LoadTheSto

; 733  : 	{
; 734  : 		_stprintf(fname,"%s\\%s.str",FalconCampUserSaveDirectory,ebox->GetText());

	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09CHBPGKDP@?$CFs?2?$CFs?4str?$AA@
	lea	ecx, DWORD PTR _fname$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 735  : 		ifp=fopen(fname,"rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	lea	edx, DWORD PTR _fname$[ebp]
	push	edx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _ifp$[ebp], eax

; 736  : 		if(ifp == NULL)

	cmp	DWORD PTR _ifp$[ebp], 0
	jne	SHORT $LN10@LoadTheSto

; 737  : 			return;

	jmp	$LN13@LoadTheSto
$LN10@LoadTheSto:

; 738  : 
; 739  : 		fread(&hp,sizeof(LoadoutStruct),1,ifp);

	mov	eax, DWORD PTR _ifp$[ebp]
	push	eax
	push	1
	push	48					; 00000030H
	lea	ecx, DWORD PTR _hp$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 740  : 		fclose(ifp);

	mov	edx, DWORD PTR _ifp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 741  : 
; 742  : 		PlaceLoadedWeapons(&hp);

	lea	eax, DWORD PTR _hp$[ebp]
	push	eax
	call	?PlaceLoadedWeapons@@YAXPAULoadoutStruct@@@Z ; PlaceLoadedWeapons
	add	esp, 4

; 743  : 
; 744  : 		win=gMainHandler->FindWindow(MUNITIONS_WIN);

	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 745  : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN13@LoadTheSto

; 746  : 		{
; 747  : 			Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 748  : 			for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@LoadTheSto
$LN7@LoadTheSto:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN8@LoadTheSto:
	cmp	DWORD PTR _i$[ebp], 4
	jge	$LN6@LoadTheSto

; 749  : 				if(PlaneEditList[i])

	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?PlaneEditList@@3PAJA[eax*4], 0
	je	$LN5@LoadTheSto

; 750  : 					for(j=1;j<HardPoints;j++)

	mov	DWORD PTR _j$[ebp], 1
	jmp	SHORT $LN4@LoadTheSto
$LN3@LoadTheSto:
	mov	ecx, DWORD PTR _j$[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN4@LoadTheSto:
	mov	edx, DWORD PTR _j$[ebp]
	cmp	edx, DWORD PTR ?HardPoints@@3JA		; HardPoints
	jge	$LN5@LoadTheSto

; 751  : 					{
; 752  : 						ClearHardPoint(i,j,static_cast<short>(HardPoints/2),&gCurRails[i].rail[j]);

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 2560				; 00000a00H
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 160				; 000000a0H
	lea	edx, DWORD PTR ?gCurRails@@3PAURailList@@A[eax+ecx]
	push	edx
	mov	eax, DWORD PTR ?HardPoints@@3JA		; HardPoints
	cdq
	sub	eax, edx
	sar	eax, 1
	cwde
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	call	?ClearHardPoint@@YAXJJJPAVRailInfo@@@Z	; ClearHardPoint
	add	esp, 16					; 00000010H

; 753  : 						//if(GetRackAndWeapon(gVCPtr,static_cast<short>(gVehID),gCurStores[i].WeaponID[j],gCurStores[i].WeaponCount[j],static_cast<short>(j),static_cast<short>(HardPoints / 2),&gCurRails[i].rail[j]))
; 754  : 						if(GetJRackAndWeapon(gVCPtr,&Falcon4ClassTable[gVehID],gCurStores[i].WeaponID[j],gCurStores[i].WeaponCount[j],static_cast<short>(j),&gCurRails[i].rail[j])) // MLR 2/29/2004 - 

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 2560				; 00000a00H
	mov	ecx, DWORD PTR _j$[ebp]
	imul	ecx, 160				; 000000a0H
	lea	edx, DWORD PTR ?gCurRails@@3PAURailList@@A[eax+ecx]
	push	edx
	movzx	eax, WORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _j$[ebp]
	movzx	ax, BYTE PTR ?gCurStores@@3PAULoadoutStruct@@A[ecx+edx+32]
	movzx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 48					; 00000030H
	mov	eax, DWORD PTR _j$[ebp]
	movzx	ecx, WORD PTR ?gCurStores@@3PAULoadoutStruct@@A[edx+eax*2]
	push	ecx
	mov	edx, DWORD PTR ?gVehID@@3HA		; gVehID
	imul	edx, 81					; 00000051H
	add	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	push	edx
	mov	eax, DWORD PTR ?gVCPtr@@3PAUVehicleClassDataType@@A ; gVCPtr
	push	eax
	call	?GetJRackAndWeapon@@YAHPAUVehicleClassDataType@@PAUFalcon4EntityClassType@@FFFPAVRailInfo@@@Z ; GetJRackAndWeapon
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN1@LoadTheSto

; 755  : 							LoadHardPoint(i,j,static_cast<short>(HardPoints/2),&gCurRails[i].rail[j]);

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 2560				; 00000a00H
	mov	edx, DWORD PTR _j$[ebp]
	imul	edx, 160				; 000000a0H
	lea	eax, DWORD PTR ?gCurRails@@3PAURailList@@A[ecx+edx]
	push	eax
	mov	eax, DWORD PTR ?HardPoints@@3JA		; HardPoints
	cdq
	sub	eax, edx
	sar	eax, 1
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	?LoadHardPoint@@YAXJJJPAVRailInfo@@@Z	; LoadHardPoint
	add	esp, 16					; 00000010H
$LN1@LoadTheSto:

; 756  : 					}

	jmp	$LN3@LoadTheSto
$LN5@LoadTheSto:
	jmp	$LN7@LoadTheSto
$LN6@LoadTheSto:

; 757  : 
; 758  : 			MakeStoresList(win,1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?MakeStoresList@@YAXPAVC_Window@@J@Z	; MakeStoresList
	add	esp, 8

; 759  : 			win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 760  : 			UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN13@LoadTheSto:

; 761  : 		}
; 762  : 	}
; 763  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadTheStoresCB@@YAXJFPAVC_Base@@@Z ENDP		; LoadTheStoresCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?ChooseWeaponListCB@@YAXJFPAVC_Base@@@Z PROC		; ChooseWeaponListCB

; 699  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 700  : 	C_Window *win;
; 701  : 	F4CSECTIONHANDLE *Leave;
; 702  : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@ChooseWeap

; 703  : 		return;

	jmp	SHORT $LN3@ChooseWeap
$LN2@ChooseWeap:

; 704  : 
; 705  : 	win=gMainHandler->FindWindow(MUNITIONS_WIN);

	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 706  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@ChooseWeap

; 707  : 	{
; 708  : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 709  : 		MakeStoresList(win,1);

	push	1
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?MakeStoresList@@YAXPAVC_Window@@J@Z	; MakeStoresList
	add	esp, 8

; 710  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 711  : 		//win->RefreshClient(1);
; 712  : 		UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN3@ChooseWeap:

; 713  : 	}
; 714  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ChooseWeaponListCB@@YAXJFPAVC_Base@@@Z ENDP		; ChooseWeaponListCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_count$ = -16						; size = 4
_i$ = -12						; size = 4
tv66 = -8						; size = 4
_idx$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z PROC		; SelectPlaneToArmCB

; 651  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 652  : 	int i,idx,count;
; 653  : 
; 654  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN15@SelectPlan

; 655  : 		return;

	jmp	$LN16@SelectPlan
$LN15@SelectPlan:

; 656  : 
; 657  : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR tv66[ebp]
	sub	edx, 16018				; 00003e92H
	mov	DWORD PTR tv66[ebp], edx
	cmp	DWORD PTR tv66[ebp], 3
	ja	SHORT $LN8@SelectPlan
	mov	eax, DWORD PTR tv66[ebp]
	jmp	DWORD PTR $LN18@SelectPlan[eax*4]
$LN12@SelectPlan:

; 658  : 	{
; 659  : 		case AIR_1:
; 660  : 			idx=0;

	mov	DWORD PTR _idx$[ebp], 0

; 661  : 			break;

	jmp	SHORT $LN13@SelectPlan
$LN11@SelectPlan:

; 662  : 		case AIR_2:
; 663  : 			idx=1;

	mov	DWORD PTR _idx$[ebp], 1

; 664  : 			break;

	jmp	SHORT $LN13@SelectPlan
$LN10@SelectPlan:

; 665  : 		case AIR_3:
; 666  : 			idx=2;

	mov	DWORD PTR _idx$[ebp], 2

; 667  : 			break;

	jmp	SHORT $LN13@SelectPlan
$LN9@SelectPlan:

; 668  : 		case AIR_4:
; 669  : 			idx=3;

	mov	DWORD PTR _idx$[ebp], 3

; 670  : 			break;

	jmp	SHORT $LN13@SelectPlan
$LN8@SelectPlan:

; 671  : 		default:
; 672  : 			return;

	jmp	$LN16@SelectPlan
$LN13@SelectPlan:

; 673  : 	}
; 674  : 
; 675  : 	count=0;

	mov	DWORD PTR _count$[ebp], 0

; 676  : 	for(i=0;i<4;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@SelectPlan
$LN6@SelectPlan:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN7@SelectPlan:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN5@SelectPlan

; 677  : 		if(PlaneEditList[i])

	mov	edx, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?PlaneEditList@@3PAJA[edx*4], 0
	je	SHORT $LN4@SelectPlan

; 678  : 			count++;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN4@SelectPlan:

; 679  : 
; 680  : 	if(((C_Button *)control)->GetState())

	jmp	SHORT $LN6@SelectPlan
$LN5@SelectPlan:
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN3@SelectPlan

; 681  : 	{
; 682  : 		if(count < 2)

	cmp	DWORD PTR _count$[ebp], 2
	jge	SHORT $LN2@SelectPlan

; 683  : 			return;

	jmp	SHORT $LN16@SelectPlan
$LN2@SelectPlan:

; 684  : 
; 685  : 		((C_Button *)control)->SetState(0);

	push	0
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 686  : 		SetPlaneToArm(idx,FALSE);

	push	0
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	call	?SetPlaneToArm@@YAXJH@Z			; SetPlaneToArm
	add	esp, 8

; 687  : 	}
; 688  : 	else

	jmp	SHORT $LN1@SelectPlan
$LN3@SelectPlan:

; 689  : 	{
; 690  : 		((C_Button *)control)->SetState(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 691  : 		SetPlaneToArm(idx,TRUE);

	push	1
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	call	?SetPlaneToArm@@YAXJH@Z			; SetPlaneToArm
	add	esp, 8
$LN1@SelectPlan:

; 692  : 	}
; 693  : 	SetCurrentLoadout();

	call	?SetCurrentLoadout@@YAXXZ		; SetCurrentLoadout

; 694  : 	control->Refresh();

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 695  : 	control->Parent_->RefreshClient(2);

	push	2
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN16@SelectPlan:

; 696  : }

	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@SelectPlan:
	DD	$LN12@SelectPlan
	DD	$LN11@SelectPlan
	DD	$LN10@SelectPlan
	DD	$LN9@SelectPlan
?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectPlaneToArmCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
tv79 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z PROC	; CloseMunitionsWindowCB

; 634  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 635  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CloseMunit

; 636  : 		return;

	jmp	SHORT $LN4@CloseMunit
$LN3@CloseMunit:

; 637  : 
; 638  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	SHORT $LN2@CloseMunit

; 639  : 		gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@CloseMunit:

; 640  : 
; 641  : 	if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN4@CloseMunit

; 642  : 	{
; 643  : 		ClearAllHardPointBSPs(); // MLR 2/29/2004 - else CTD when reentering the loadout

	call	?ClearAllHardPointBSPs@@YAXXZ		; ClearAllHardPointBSPs

; 644  : 		gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 645  : 		delete gUIViewer;

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@CloseMunit
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN7@CloseMunit
$LN6@CloseMunit:
	mov	DWORD PTR tv79[ebp], 0
$LN7@CloseMunit:

; 646  : 		gUIViewer=NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN4@CloseMunit:

; 647  : 	}
; 648  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ENDP	; CloseMunitionsWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_Leave$ = -48						; size = 4
$T2 = -44						; size = 4
tv140 = -40						; size = 4
$T3 = -36						; size = 4
tv148 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
_flight$ = -20						; size = 4
_win$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenMunitionsWindowCB

; 575  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 576  : 	F4CSECTIONHANDLE *Leave;
; 577  : 	Flight flight;
; 578  : 	C_Window *win;
; 579  : 
; 580  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN8@OpenMuniti

; 581  : 		return;

	jmp	$LN9@OpenMuniti
$LN8@OpenMuniti:

; 582  : 
; 583  : 	if(gSelectedFlightID == FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?gSelectedFlightID@@3VVU_ID@@A ; gSelectedFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@OpenMuniti

; 584  : 		return;

	jmp	$LN9@OpenMuniti
$LN7@OpenMuniti:

; 585  : 
; 586  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	edx, 4
	imul	edx, 19					; 00000013H
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 587  : 
; 588  : 	// TODO: Check to see if the flight has already taken off
; 589  : 	// if so... open Error window... and don't do anything
; 590  : 	flight=(Flight)vuDatabase->Find(gSelectedFlightID);

	mov	ecx, DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 591  : 	if(!flight) return;

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN6@OpenMuniti
	jmp	$LN9@OpenMuniti
$LN6@OpenMuniti:

; 592  : 	if(!flight->IsFlight()) return;

	mov	eax, DWORD PTR _flight$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flight$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax
	test	eax, eax
	jne	SHORT $LN5@OpenMuniti
	jmp	$LN9@OpenMuniti
$LN5@OpenMuniti:

; 593  : 
; 594  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	$LN4@OpenMuniti

; 595  : 	{
; 596  : 		if(UIrend3d == NULL)

	cmp	DWORD PTR ?UIrend3d@@3PAVRender3D@@A, 0	; UIrend3d
	jne	$LN2@OpenMuniti

; 597  : 		{
; 598  : 			win=gMainHandler->FindWindow(MUNITIONS_WIN);

	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 599  : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN2@OpenMuniti

; 600  : 			{
; 601  : 				CloseAllRenderers(MUNITIONS_WIN);

	push	16000					; 00003e80H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 602  : 				Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 603  : 				if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN12@OpenMuniti

; 604  : 				{
; 605  : 					gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 606  : 					delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T5[ebp], eax
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN11@OpenMuniti
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN12@OpenMuniti
$LN11@OpenMuniti:
	mov	DWORD PTR tv140[ebp], 0
$LN12@OpenMuniti:

; 607  : 				}
; 608  : 				gUIViewer=new C_3dViewer;

	push	180					; 000000b4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN13@OpenMuniti
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0C_3dViewer@@QAE@XZ			; C_3dViewer::C_3dViewer
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN14@OpenMuniti
$LN13@OpenMuniti:
	mov	DWORD PTR tv148[ebp], 0
$LN14@OpenMuniti:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, edx ; gUIViewer

; 609  : 				gUIViewer->Setup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Setup@C_3dViewer@@QAEHXZ		; C_3dViewer::Setup

; 610  : 				gUIViewer->Viewport(win,2);

	push	2
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Viewport@C_3dViewer@@QAEXPAVC_Window@@J@Z ; C_3dViewer::Viewport

; 611  : 				gUIViewer->Init3d(30.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@41f00000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Init3d@C_3dViewer@@QAEHM@Z		; C_3dViewer::Init3d

; 612  : 
; 613  : 				gLoadoutFlightID=gSelectedFlightID;

	mov	ecx, DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4, edx

; 614  : 				SetupMunitionsWindow(gLoadoutFlightID);

	mov	eax, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A
	push	ecx
	call	?SetupMunitionsWindow@@YAXVVU_ID@@@Z	; SetupMunitionsWindow
	add	esp, 8

; 615  : 				LoadFlight(gLoadoutFlightID);

	mov	edx, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A
	push	eax
	call	?LoadFlight@@YAXVVU_ID@@@Z		; LoadFlight
	add	esp, 8

; 616  : 				SetupLoadoutDisplay();

	call	?SetupLoadoutDisplay@@YAXXZ		; SetupLoadoutDisplay

; 617  : 				UpdateInventoryCount();

	call	?UpdateInventoryCount@@YAXXZ		; UpdateInventoryCount

; 618  : 				MakeStoresList(win,1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?MakeStoresList@@YAXPAVC_Window@@J@Z	; MakeStoresList
	add	esp, 8

; 619  : 				win->RefreshClient(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 620  : 				TheLoader.WaitLoader();

	mov	ecx, OFFSET ?TheLoader@@3VLoader@@A	; TheLoader
	call	?WaitLoader@Loader@@QAEXXZ		; Loader::WaitLoader

; 621  : 
; 622  : 				PositionCamera(&Object,win,2);

	push	2
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	push	OFFSET ?Object@@3UOBJECTINFO@@A		; Object
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH

; 623  : 				UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@OpenMuniti:

; 624  : 			}
; 625  : 		}
; 626  : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN4@OpenMuniti:

; 627  : 	}
; 628  : 	SetCursor(gCursors[CRSR_F16]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4
$LN9@OpenMuniti:

; 629  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenMunitionsWindowCB
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_dy$ = -8						; size = 4
_pnr$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ObjectZoomCB@@YAXJFPAVC_Base@@@Z PROC			; ObjectZoomCB

; 557  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 558  : 	float dy;
; 559  : 	C_Panner *pnr;
; 560  : 
; 561  : 	if(hittype != C_TYPE_LMOUSEUP && hittype != C_TYPE_REPEAT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@ObjectZoom
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN3@ObjectZoom

; 562  : 		return;

	jmp	$LN4@ObjectZoom
$LN3@ObjectZoom:

; 563  : 
; 564  : 	pnr=(C_Panner*)control;

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _pnr$[ebp], edx

; 565  : 	dy=static_cast<float>(pnr->GetVRange());

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetVRange@C_Panner@@QAEJXZ		; C_Panner::GetVRange
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dy$[ebp], xmm0

; 566  : 
; 567  : 	Object.Distance+=dy;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+8
	addss	xmm0, DWORD PTR _dy$[ebp]
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+8, xmm0

; 568  : 	if(Object.Distance < Object.MinDistance) Object.Distance=Object.MinDistance;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+40
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+8
	jbe	SHORT $LN2@ObjectZoom
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+40
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+8, xmm0
$LN2@ObjectZoom:

; 569  : 	if(Object.Distance > Object.MaxDistance) Object.Distance=Object.MaxDistance;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+8
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+44
	jbe	SHORT $LN1@ObjectZoom
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+44
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+8, xmm0
$LN1@ObjectZoom:

; 570  : 
; 571  : 	PositionCamera(&Object,control->Parent_,control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	push	OFFSET ?Object@@3UOBJECTINFO@@A		; Object
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN4@ObjectZoom:

; 572  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectZoomCB@@YAXJFPAVC_Base@@@Z ENDP			; ObjectZoomCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_pnr$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ObjectPannerCB@@YAXJFPAVC_Base@@@Z PROC		; ObjectPannerCB

; 528  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 529  : 	float dx,dy;
; 530  : 	C_Panner *pnr;
; 531  : 
; 532  : 	if(hittype != C_TYPE_LMOUSEUP && hittype != C_TYPE_REPEAT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN9@ObjectPann
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN9@ObjectPann

; 533  : 		return;

	jmp	$LN10@ObjectPann
$LN9@ObjectPann:

; 534  : 
; 535  : 	pnr=(C_Panner*)control;

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _pnr$[ebp], edx

; 536  : 	dx=static_cast<float>(pnr->GetHRange());

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetHRange@C_Panner@@QAEJXZ		; C_Panner::GetHRange
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dx$[ebp], xmm0

; 537  : 	dy=static_cast<float>(pnr->GetVRange());

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetVRange@C_Panner@@QAEJXZ		; C_Panner::GetVRange
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dy$[ebp], xmm0

; 538  : 
; 539  : 	Object.Heading+=dx;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A
	addss	xmm0, DWORD PTR _dx$[ebp]
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A, xmm0

; 540  : 	Object.Pitch+=dy;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	addss	xmm0, DWORD PTR _dy$[ebp]
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+4, xmm0

; 541  : 	if(Object.Heading < 0) Object.Heading+=360;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A
	jbe	SHORT $LN8@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A
	addss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A, xmm0
$LN8@ObjectPann:

; 542  : 	if(Object.Heading > 360) Object.Heading-=360;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A
	comiss	xmm0, DWORD PTR __real@43b40000
	jbe	SHORT $LN7@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A
	subss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A, xmm0
$LN7@ObjectPann:

; 543  : 	if(Object.CheckPitch)

	cmp	DWORD PTR ?Object@@3UOBJECTINFO@@A+48, 0
	je	SHORT $LN6@ObjectPann

; 544  : 	{
; 545  : 		if(Object.Pitch < Object.MinPitch) Object.Pitch=Object.MinPitch;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+52
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	jbe	SHORT $LN5@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+52
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+4, xmm0
$LN5@ObjectPann:

; 546  : 		if(Object.Pitch < Object.MaxPitch) Object.Pitch=Object.MaxPitch;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+56
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	jbe	SHORT $LN4@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+56
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+4, xmm0
$LN4@ObjectPann:

; 547  : 	}
; 548  : 	else

	jmp	SHORT $LN1@ObjectPann
$LN6@ObjectPann:

; 549  : 	{
; 550  : 		if(Object.Pitch < 0) Object.Pitch+=360;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	jbe	SHORT $LN2@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	addss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+4, xmm0
$LN2@ObjectPann:

; 551  : 		if(Object.Pitch > 360) Object.Pitch-=360;

	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	comiss	xmm0, DWORD PTR __real@43b40000
	jbe	SHORT $LN1@ObjectPann
	movss	xmm0, DWORD PTR ?Object@@3UOBJECTINFO@@A+4
	subss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Object@@3UOBJECTINFO@@A+4, xmm0
$LN1@ObjectPann:

; 552  : 	}
; 553  : 	PositionCamera(&Object,control->Parent_,control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	push	OFFSET ?Object@@3UOBJECTINFO@@A		; Object
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN10@ObjectPann:

; 554  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectPannerCB@@YAXJFPAVC_Base@@@Z ENDP		; ObjectPannerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ClosePlannerWindowCB@@YAXJFPAVC_Base@@@Z PROC		; ClosePlannerWindowCB

; 519  : {

	push	ebp
	mov	ebp, esp

; 520  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@ClosePlann

; 521  : 		return;

	jmp	SHORT $LN3@ClosePlann
$LN2@ClosePlann:

; 522  : 
; 523  : 	if(control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	test	eax, eax
	je	SHORT $LN3@ClosePlann

; 524  : 		gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN3@ClosePlann:

; 525  : }

	pop	ebp
	ret	0
?ClosePlannerWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; ClosePlannerWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenReconForVCCB@@YAXJFPAVC_Base@@@Z PROC		; OpenReconForVCCB

; 484  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 485  : 	C_Window *win;
; 486  : 	C_Base *btn;
; 487  : 
; 488  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@OpenReconF

; 489  : 		return;

	jmp	$LN7@OpenReconF
$LN6@OpenReconF:

; 490  : 
; 491  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 492  : 
; 493  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 494  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@OpenReconF

; 495  : 	{
; 496  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 497  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN4@OpenReconF

; 498  : 			TargetTree->DeleteBranch(TargetTree->GetRoot());

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN4@OpenReconF:

; 499  : 
; 500  : 		if(!OldReconCWCB)

	cmp	DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA, 0 ; OldReconCWCB
	jne	SHORT $LN3@OpenReconF

; 501  : 		{
; 502  : 			btn=win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 503  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@OpenReconF

; 504  : 			{
; 505  : 				OldReconCWCB=btn->GetCallback();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	mov	DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA, eax ; OldReconCWCB

; 506  : 				btn->SetCallback(TgtAssignCWCB);

	push	OFFSET ?TgtAssignCWCB@@YAXJFPAVC_Base@@@Z ; TgtAssignCWCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@OpenReconF:

; 507  : 			}
; 508  : 		}
; 509  : 		btn=win->FindControl(SET_VC);

	push	18354					; 000047b2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 510  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN7@OpenReconF

; 511  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN7@OpenReconF:

; 512  : 
; 513  : 		// Find where user clicked... and do recon, OR pick as target
; 514  : 		// Set Cur VC's Target
; 515  : 	}
; 516  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenReconForVCCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenReconForVCCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_z$ = -32						; size = 4
_x$ = -28						; size = 4
_y$ = -24						; size = 4
_flight$ = -20						; size = 4
_i$ = -16						; size = 4
_win$ = -12						; size = 4
_wp$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenReconWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenReconWindowCB

; 433  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 434  : 	C_Window *win;
; 435  : 	C_Base *btn;
; 436  : 	Flight flight;
; 437  : 	WayPoint wp;
; 438  : 	int i;
; 439  : 	float x,y,z;
; 440  : 
; 441  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@OpenReconW

; 442  : 		return;

	jmp	$LN11@OpenReconW
$LN10@OpenReconW:

; 443  : 
; 444  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 445  : 
; 446  : 	win=gMainHandler->FindWindow(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 447  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN1@OpenReconW

; 448  : 	{
; 449  : 		CloseAllRenderers(RECON_WIN);

	push	18000					; 00004650H
	call	?CloseAllRenderers@@YAXJ@Z		; CloseAllRenderers
	add	esp, 4

; 450  : 		if(TargetTree)

	cmp	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, 0 ; TargetTree
	je	SHORT $LN8@OpenReconW

; 451  : 			TargetTree->DeleteBranch(TargetTree->GetRoot());

	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?TargetTree@@3PAVC_TreeList@@A ; TargetTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN8@OpenReconW:

; 452  : 
; 453  : 		if(!OldReconCWCB)

	cmp	DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA, 0 ; OldReconCWCB
	jne	SHORT $LN6@OpenReconW

; 454  : 		{
; 455  : 			btn=win->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 456  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@OpenReconW

; 457  : 			{
; 458  : 				OldReconCWCB=btn->GetCallback();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	mov	DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA, eax ; OldReconCWCB

; 459  : 				btn->SetCallback(TgtAssignCWCB);

	push	OFFSET ?TgtAssignCWCB@@YAXJFPAVC_Base@@@Z ; TgtAssignCWCB
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@OpenReconW:

; 460  : 			}
; 461  : 		}
; 462  : 		btn=win->FindControl(SET_TARGET);

	push	18345					; 000047a9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 463  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@OpenReconW

; 464  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN5@OpenReconW:

; 465  : 
; 466  : 		flight=(Flight)vuDatabase->Find(gActiveFlightID);

	mov	ecx, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 467  : 		if(flight == NULL) return;

	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN4@OpenReconW
	jmp	$LN11@OpenReconW
$LN4@OpenReconW:

; 468  : 		i=1;

	mov	DWORD PTR _i$[ebp], 1

; 469  : 		wp=flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax
$LN3@OpenReconW:

; 470  : 		while(i < gActiveWPNum && wp)

	movsx	eax, WORD PTR ?gActiveWPNum@@3FA	; gActiveWPNum
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@OpenReconW
	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN2@OpenReconW

; 471  : 		{
; 472  : 			wp=wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 473  : 			i++;

	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx

; 474  : 		}

	jmp	SHORT $LN3@OpenReconW
$LN2@OpenReconW:

; 475  : 		if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN1@OpenReconW

; 476  : 		{
; 477  : 			wp->GetLocation(&x,&y,&z);

	lea	edx, DWORD PTR _z$[ebp]
	push	edx
	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetLocation@WayPointClass@@QBEXPAM00@Z	; WayPointClass::GetLocation

; 478  : 			BuildTargetList(x,y,18000.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@468ca000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?BuildTargetList@@YAXMMM@Z		; BuildTargetList
	add	esp, 12					; 0000000cH
$LN1@OpenReconW:
$LN11@OpenReconW:

; 479  : 		}
; 480  : 	}
; 481  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenReconWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenReconWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_btn$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TgtAssignCWCB@@YAXJFPAVC_Base@@@Z PROC			; TgtAssignCWCB

; 412  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 413  : 	C_Base *btn;
; 414  : 
; 415  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@TgtAssignC

; 416  : 		return;

	jmp	$LN4@TgtAssignC
$LN3@TgtAssignC:

; 417  : 
; 418  : 	btn=control->Parent_->FindControl(SET_TARGET);

	push	18345					; 000047a9H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 419  : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@TgtAssignC

; 420  : 		btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN2@TgtAssignC:

; 421  : 
; 422  : 	btn=control->Parent_->FindControl(SET_VC);

	push	18354					; 000047b2H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 423  : 	if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN1@TgtAssignC

; 424  : 		btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN1@TgtAssignC:

; 425  : 
; 426  : 	control->SetCallback(OldReconCWCB);

	mov	ecx, DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA ; OldReconCWCB
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 427  : 	OldReconCWCB=NULL;

	mov	DWORD PTR ?OldReconCWCB@@3P6AXJFPAVC_Base@@@ZA, 0 ; OldReconCWCB

; 428  : 
; 429  : 	CloseReconWindowCB(ID,hittype,control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z	; CloseReconWindowCB
	add	esp, 12					; 0000000cH
$LN4@TgtAssignC:

; 430  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TgtAssignCWCB@@YAXJFPAVC_Base@@@Z ENDP			; TgtAssignCWCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_dx$ = -36						; size = 4
_pnr$ = -32						; size = 4
_txt$ = -28						; size = 4
_buffer$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ZoomPannerCB@@YAXJFPAVC_Base@@@Z PROC			; ZoomPannerCB

; 326  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 327  : 	C_Panner *pnr=(C_Panner*)control;

	mov	eax, DWORD PTR _control$[ebp]
	mov	DWORD PTR _pnr$[ebp], eax

; 328  : 	C_Text *txt;
; 329  : 	_TCHAR buffer[20];
; 330  : 	int dx;
; 331  : 	if(hittype != C_TYPE_LMOUSEUP && hittype != C_TYPE_REPEAT)

	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN4@ZoomPanner
	movsx	edx, WORD PTR _hittype$[ebp]
	cmp	edx, 70					; 00000046H
	je	SHORT $LN4@ZoomPanner

; 332  : 		return;

	jmp	$LN5@ZoomPanner
$LN4@ZoomPanner:

; 333  : 
; 334  : 	dx=pnr->GetVRange();

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetVRange@C_Panner@@QAEJXZ		; C_Panner::GetVRange
	mov	DWORD PTR _dx$[ebp], eax

; 335  : 
; 336  : 	Recon.Distance += dx*10;

	mov	eax, DWORD PTR _dx$[ebp]
	imul	eax, 10					; 0000000aH
	cvtsi2ss xmm0, eax
	addss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+8
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0

; 337  : 
; 338  : 	if(Recon.Distance < Recon.MinDistance)

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+40
	comiss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+8
	jbe	SHORT $LN3@ZoomPanner

; 339  : 		Recon.Distance=Recon.MinDistance;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+40
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0
$LN3@ZoomPanner:

; 340  : 	if(Recon.Distance > Recon.MaxDistance)

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+8
	comiss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+44
	jbe	SHORT $LN2@ZoomPanner

; 341  : 		Recon.Distance=Recon.MaxDistance;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+44
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+8, xmm0
$LN2@ZoomPanner:

; 342  : 
; 343  : 	txt=(C_Text*)control->Parent_->FindControl(SLANT_RANGE);

	push	18009					; 00004659H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 344  : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN1@ZoomPanner

; 345  : 	{
; 346  : 		txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 347  : 		_stprintf(buffer,"%1ld %s",(long)Recon.Distance,gStringMgr->GetString(TXT_FT));

	push	415					; 0000019fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	cvttss2si eax, DWORD PTR ?Recon@@3UOBJECTINFO@@A+8
	push	eax
	push	OFFSET ??_C@_07KMHNPNOO@?$CF1ld?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 348  : 		txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 349  : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@ZoomPanner:

; 350  : 	}
; 351  : 
; 352  : 	PositionCamera(&Recon,control->Parent_,0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN5@ZoomPanner:

; 353  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ZoomPannerCB@@YAXJFPAVC_Base@@@Z ENDP			; ZoomPannerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_pnr$ = -12						; size = 4
_dy$ = -8						; size = 4
_dx$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ViewPannerCB@@YAXJFPAVC_Base@@@Z PROC			; ViewPannerCB

; 294  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 295  : 	float dx,dy;
; 296  : 	C_Panner *pnr;
; 297  : 	if(hittype != C_TYPE_LMOUSEUP && hittype != C_TYPE_REPEAT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN11@ViewPanner
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN11@ViewPanner

; 298  : 		return;

	jmp	$LN12@ViewPanner
$LN11@ViewPanner:

; 299  : 
; 300  : 	pnr=(C_Panner*)control;

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _pnr$[ebp], edx

; 301  : 	dx=static_cast<float>(pnr->GetHRange());

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetHRange@C_Panner@@QAEJXZ		; C_Panner::GetHRange
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dx$[ebp], xmm0

; 302  : 	dy=static_cast<float>(pnr->GetVRange());

	mov	ecx, DWORD PTR _pnr$[ebp]
	call	?GetVRange@C_Panner@@QAEJXZ		; C_Panner::GetVRange
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _dy$[ebp], xmm0

; 303  : 
; 304  : 	if(dx < 0) dx=-2.5f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _dx$[ebp]
	jbe	SHORT $LN10@ViewPanner
	movss	xmm0, DWORD PTR __real@c0200000
	movss	DWORD PTR _dx$[ebp], xmm0
$LN10@ViewPanner:

; 305  : 	if(dx > 0) dx=2.5f;

	movss	xmm0, DWORD PTR _dx$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN9@ViewPanner
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR _dx$[ebp], xmm0
$LN9@ViewPanner:

; 306  : 	if(dy < 0) dy=-2.5f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR _dy$[ebp]
	jbe	SHORT $LN8@ViewPanner
	movss	xmm0, DWORD PTR __real@c0200000
	movss	DWORD PTR _dy$[ebp], xmm0
$LN8@ViewPanner:

; 307  : 	if(dy > 0) dy=2.5f;

	movss	xmm0, DWORD PTR _dy$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN7@ViewPanner
	movss	xmm0, DWORD PTR __real@40200000
	movss	DWORD PTR _dy$[ebp], xmm0
$LN7@ViewPanner:

; 308  : 
; 309  : 	if(dx)

	movss	xmm0, DWORD PTR _dx$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@ViewPanner

; 310  : 	{
; 311  : 		Recon.Heading -= dx;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A
	subss	xmm0, DWORD PTR _dx$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0

; 312  : 		if(Recon.Heading > 360.0f) Recon.Heading-=360.0f;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A
	comiss	xmm0, DWORD PTR __real@43b40000
	jbe	SHORT $LN5@ViewPanner
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A
	subss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0
$LN5@ViewPanner:

; 313  : 		if(Recon.Heading < 0.0f) Recon.Heading+=360.0f;

	movss	xmm0, DWORD PTR __real@00000000
	comiss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A
	jbe	SHORT $LN4@ViewPanner
	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A
	addss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A, xmm0
$LN4@ViewPanner:

; 314  : 	}
; 315  : 	if(dy)

	movss	xmm0, DWORD PTR _dy$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@ViewPanner

; 316  : 	{
; 317  : 		Recon.Pitch -= dy;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+4
	subss	xmm0, DWORD PTR _dy$[ebp]
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0

; 318  : 		if(Recon.Pitch > 90.0f) Recon.Pitch=90.0f;

	movss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+4
	comiss	xmm0, DWORD PTR __real@42b40000
	jbe	SHORT $LN2@ViewPanner
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0
$LN2@ViewPanner:

; 319  : 		if(Recon.Pitch < 10.0f) Recon.Pitch=10.0f;

	movss	xmm0, DWORD PTR __real@41200000
	comiss	xmm0, DWORD PTR ?Recon@@3UOBJECTINFO@@A+4
	jbe	SHORT $LN1@ViewPanner
	movss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0
$LN1@ViewPanner:

; 320  : 	}
; 321  : 
; 322  : 	PositionCamera(&Recon,control->Parent_,0);

	push	0
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN12@ViewPanner:

; 323  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ViewPannerCB@@YAXJFPAVC_Base@@@Z ENDP			; ViewPannerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OverHeadCB@@YAXJFPAVC_Base@@@Z PROC			; OverHeadCB

; 287  : {

	push	ebp
	mov	ebp, esp

; 288  : 	if(hittype != C_TYPE_LMOUSEUP) return;

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OverHeadCB
	jmp	SHORT $LN2@OverHeadCB
$LN1@OverHeadCB:

; 289  : 	Recon.Pitch=90;

	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+4, xmm0

; 290  : 	PositionCamera(&Recon,control->Parent_,0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	push	OFFSET ?Recon@@3UOBJECTINFO@@A		; Recon
	call	?PositionCamera@@YAXPAUOBJECTINFO@@PAVC_Window@@J@Z ; PositionCamera
	add	esp, 12					; 0000000cH
$LN2@OverHeadCB:

; 291  : }

	pop	ebp
	ret	0
?OverHeadCB@@YAXJFPAVC_Base@@@Z ENDP			; OverHeadCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_btn$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SpinViewCB@@YAXJFPAVC_Base@@@Z PROC			; SpinViewCB

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 239  : 	C_Button *btn;
; 240  : 	if(hittype != C_TYPE_LMOUSEUP) return;

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN11@SpinViewCB
	jmp	$LN12@SpinViewCB
$LN11@SpinViewCB:

; 241  : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 18005		; 00004655H
	je	SHORT $LN8@SpinViewCB
	cmp	DWORD PTR tv66[ebp], 18006		; 00004656H
	je	$LN4@SpinViewCB
	jmp	$LN9@SpinViewCB
$LN8@SpinViewCB:

; 242  : 	{
; 243  : 		case LEFT_SPIN:
; 244  : 			if(!((C_Button*)control)->GetState())

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cwde
	test	eax, eax
	jne	SHORT $LN7@SpinViewCB

; 245  : 			{
; 246  : 				Recon.Direction=2;

	movss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 247  : 				((C_Button*)control)->SetState(1);

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 248  : 				((C_Button*)control)->Refresh();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 249  : 			}
; 250  : 			else

	jmp	SHORT $LN6@SpinViewCB
$LN7@SpinViewCB:

; 251  : 			{
; 252  : 				Recon.Direction=0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 253  : 				((C_Button*)control)->SetState(0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 254  : 				((C_Button*)control)->Refresh();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@SpinViewCB:

; 255  : 			}
; 256  : 			btn=(C_Button *)control->Parent_->FindControl(RIGHT_SPIN);

	push	18006					; 00004656H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 257  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@SpinViewCB

; 258  : 			{
; 259  : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 260  : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@SpinViewCB:

; 261  : 			}
; 262  : 			break;

	jmp	$LN9@SpinViewCB
$LN4@SpinViewCB:

; 263  : 		case RIGHT_SPIN:
; 264  : 			if(!((C_Button*)control)->GetState())

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN3@SpinViewCB

; 265  : 			{
; 266  : 				Recon.Direction=-2;

	movss	xmm0, DWORD PTR __real@c0000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 267  : 				((C_Button*)control)->SetState(1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 268  : 				((C_Button*)control)->Refresh();

	mov	eax, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 269  : 			}
; 270  : 			else

	jmp	SHORT $LN2@SpinViewCB
$LN3@SpinViewCB:

; 271  : 			{
; 272  : 				Recon.Direction=0;

	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?Recon@@3UOBJECTINFO@@A+12, xmm0

; 273  : 				((C_Button*)control)->SetState(0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 274  : 				((C_Button*)control)->Refresh();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@SpinViewCB:

; 275  : 			}
; 276  : 			btn=(C_Button *)control->Parent_->FindControl(LEFT_SPIN);

	push	18005					; 00004655H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 277  : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN1@SpinViewCB

; 278  : 			{
; 279  : 				btn->SetState(0);

	push	0
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 280  : 				btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@SpinViewCB:
$LN9@SpinViewCB:
$LN12@SpinViewCB:

; 281  : 			}
; 282  : 			break;
; 283  : 	}
; 284  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SpinViewCB@@YAXJFPAVC_Base@@@Z ENDP			; SpinViewCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 4
tv343 = -56						; size = 4
$T6 = -52						; size = 4
tv252 = -48						; size = 4
$T7 = -44						; size = 4
tv215 = -40						; size = 4
$T8 = -36						; size = 4
tv92 = -32						; size = 4
$T9 = -28						; size = 4
_ID$ = -24						; size = 4
_win$ = -20						; size = 4
_tmr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?LoadPlannerWindows@@YAXXZ PROC				; LoadPlannerWindows

; 163  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadPlannerWindows@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 164  : 	long ID;
; 165  : 	C_Window *win;
; 166  : 	C_TimerHook *tmr;
; 167  : 	if(PlannerLoaded) return;

	cmp	DWORD PTR ?PlannerLoaded@@3HA, 0	; PlannerLoaded
	je	SHORT $LN7@LoadPlanne
	jmp	$LN8@LoadPlanne
$LN7@LoadPlanne:

; 168  : 
; 169  : 	if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN6@LoadPlanne

; 170  : 		gMainParser->LoadImageList("pln_res.lst");

	push	OFFSET ??_C@_0M@DAMDDPBK@pln_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 171  : 	else

	jmp	SHORT $LN5@LoadPlanne
$LN6@LoadPlanne:

; 172  : 		gMainParser->LoadImageList("pln_art.lst");

	push	OFFSET ??_C@_0M@HNILJLCK@pln_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN5@LoadPlanne:

; 173  : 	gMainParser->LoadSoundList("pln_snd.lst");

	push	OFFSET ??_C@_0M@OALNFJFN@pln_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 174  : 	gMainParser->LoadWindowList("pln_scf.lst");		// Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0M@MMKCJJJG@pln_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 175  : 
; 176  : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN4@LoadPlanne:

; 177  : 	while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN3@LoadPlanne

; 178  : 	{
; 179  : 		HookupPlannerControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupPlannerControls@@YAXJ@Z		; HookupPlannerControls
	add	esp, 4

; 180  : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 181  : 	}

	jmp	SHORT $LN4@LoadPlanne
$LN3@LoadPlanne:

; 182  : 	PlannerLoaded++;

	mov	ecx, DWORD PTR ?PlannerLoaded@@3HA	; PlannerLoaded
	add	ecx, 1
	mov	DWORD PTR ?PlannerLoaded@@3HA, ecx	; PlannerLoaded

; 183  : 	win=gMainHandler->FindWindow(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 184  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN2@LoadPlanne

; 185  : 	{
; 186  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN10@LoadPlanne
	mov	ecx, DWORD PTR $T9[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN11@LoadPlanne
$LN10@LoadPlanne:
	mov	DWORD PTR tv92[ebp], 0
$LN11@LoadPlanne:
	mov	edx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T5[ebp]
	mov	DWORD PTR _tmr$[ebp], eax

; 187  : 		tmr->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 188  : 		tmr->SetClient(0);

	push	0
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 189  : 		tmr->SetXY(win->ClientArea_[0].left,win->ClientArea_[0].top);

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 190  : 		tmr->SetW(win->ClientArea_[0].right - win->ClientArea_[0].left);

	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, 16					; 00000010H
	imul	edx, 0
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	push	ecx
	mov	edx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 191  : 		tmr->SetH(win->ClientArea_[0].bottom - win->ClientArea_[0].top);

	mov	eax, 16					; 00000010H
	imul	eax, 0
	mov	ecx, 16					; 00000010H
	imul	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+180]
	sub	eax, DWORD PTR [esi+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 192  : 		tmr->SetRefreshCallback(ViewTimerCB);

	push	OFFSET ?ViewTimerCB@@YAXJFPAVC_Base@@@Z	; ViewTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 193  : 		tmr->SetDrawCallback(DisplayView);

	push	OFFSET ?DisplayView@@YAXJFPAVC_Base@@@Z	; DisplayView
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetDrawCallback

; 194  : 		tmr->SetFlagBitOff(C_BIT_TIMER);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 195  : 		tmr->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 196  : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 197  : 
; 198  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN12@LoadPlanne
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv215[ebp], eax
	jmp	SHORT $LN13@LoadPlanne
$LN12@LoadPlanne:
	mov	DWORD PTR tv215[ebp], 0
$LN13@LoadPlanne:
	mov	edx, DWORD PTR tv215[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _tmr$[ebp], eax

; 199  : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 200  : 		tmr->SetUpdateCallback(MoveViewTimerCB);

	push	OFFSET ?MoveViewTimerCB@@YAXJFPAVC_Base@@@Z ; MoveViewTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 201  : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,2);

	push	2
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 202  : 		tmr->SetFlagBitOn(C_BIT_ABSOLUTE);

	push	262144					; 00040000H
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 203  : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN2@LoadPlanne:

; 204  : 
; 205  : 		// Add Drag CB
; 206  : 
; 207  : 	}
; 208  : 	win=gMainHandler->FindWindow(MUNITIONS_WIN);

	push	16000					; 00003e80H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 209  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN8@LoadPlanne

; 210  : 	{
; 211  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN14@LoadPlanne
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv252[ebp], eax
	jmp	SHORT $LN15@LoadPlanne
$LN14@LoadPlanne:
	mov	DWORD PTR tv252[ebp], 0
$LN15@LoadPlanne:
	mov	edx, DWORD PTR tv252[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _tmr$[ebp], eax

; 212  : 		tmr->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 213  : 		tmr->SetClient(2);

	push	2
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 214  : 		tmr->SetXY(win->ClientArea_[2].left,win->ClientArea_[2].top);

	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 215  : 		tmr->SetW(win->ClientArea_[2].right - win->ClientArea_[2].left);

	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	push	ecx
	mov	edx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 216  : 		tmr->SetH(win->ClientArea_[2].bottom - win->ClientArea_[2].top);

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+180]
	sub	eax, DWORD PTR [esi+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 217  : 		tmr->SetRefreshCallback(ViewTimerCB);

	push	OFFSET ?ViewTimerCB@@YAXJFPAVC_Base@@@Z	; ViewTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 218  : 		tmr->SetDrawCallback(ViewObjectCB);

	push	OFFSET ?ViewObjectCB@@YAXJFPAVC_Base@@@Z ; ViewObjectCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetDrawCallback

; 219  : 		tmr->SetFlagBitOff(C_BIT_TIMER);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 220  : 		tmr->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 221  : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 222  : 
; 223  : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN16@LoadPlanne
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv343[ebp], eax
	jmp	SHORT $LN17@LoadPlanne
$LN16@LoadPlanne:
	mov	DWORD PTR tv343[ebp], 0
$LN17@LoadPlanne:
	mov	edx, DWORD PTR tv343[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$[ebp], eax

; 224  : 		tmr->Setup(C_DONT_CARE,C_TYPE_NORMAL);

	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 225  : 		tmr->SetClient(2);

	push	2
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 226  : 		tmr->SetXY(win->ClientArea_[2].left,win->ClientArea_[2].top);

	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax

; 227  : 		tmr->SetW(win->ClientArea_[2].right - win->ClientArea_[2].left);

	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, 16					; 00000010H
	shl	edx, 1
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	push	ecx
	mov	edx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx

; 228  : 		tmr->SetH(win->ClientArea_[2].bottom - win->ClientArea_[2].top);

	mov	eax, 16					; 00000010H
	shl	eax, 1
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+180]
	sub	eax, DWORD PTR [esi+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tmr$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax

; 229  : 		tmr->SetUpdateCallback(ViewTimerAnimCB);

	push	OFFSET ?ViewTimerAnimCB@@YAXJFPAVC_Base@@@Z ; ViewTimerAnimCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 230  : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,1);

	push	1
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 231  : 		tmr->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 232  : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN8@LoadPlanne:

; 233  : 	}
; 234  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadPlannerWindows@@YAXXZ$0:
	mov	eax, DWORD PTR $T9[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPlannerWindows@@YAXXZ$1:
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPlannerWindows@@YAXXZ$2:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?LoadPlannerWindows@@YAXXZ$3:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadPlannerWindows@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadPlannerWindows@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadPlannerWindows@@YAXXZ ENDP				; LoadPlannerWindows
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
;	COMDAT ??__EFeatureID@@YAXXZ
text$yc	SEGMENT
??__EFeatureID@@YAXXZ PROC				; `dynamic initializer for 'FeatureID'', COMDAT

; 150  : VU_ID FeatureID=FalconNullId;

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?FeatureID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?FeatureID@@3VVU_ID@@A+4, ecx
	pop	ebp
	ret	0
??__EFeatureID@@YAXXZ ENDP				; `dynamic initializer for 'FeatureID''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_txt$ = -24						; size = 4
_pnr$ = -20						; size = 4
_tree$ = -16						; size = 4
_lbox$ = -12						; size = 4
_winme$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?HookupPlannerControls@@YAXJ@Z PROC			; HookupPlannerControls

; 1062 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 1063 : 	C_Window *winme;
; 1064 : 	C_Button *ctrl;
; 1065 : 	C_ListBox *lbox;
; 1066 : 	C_Panner *pnr;
; 1067 : 	C_Text *txt;
; 1068 : 	C_TreeList *tree;
; 1069 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 1070 : 
; 1071 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN79@HookupPlan

; 1072 : 		return;

	jmp	$LN80@HookupPlan
$LN79@HookupPlan:

; 1073 : 
; 1074 : 	// Hook up IDs here
; 1075 : 
; 1076 : 	ctrl=(C_Button*)winme->FindControl(SET_PRIORITIES);

	push	18342					; 000047a6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1077 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN78@HookupPlan

; 1078 : 		ctrl->SetCallback(OpenPriorityCB);

	push	OFFSET ?OpenPriorityCB@@YAXJFPAVC_Base@@@Z ; OpenPriorityCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN78@HookupPlan:

; 1079 : 
; 1080 : 	// Time/Date CB
; 1081 : 	txt=(C_Text *)winme->FindControl(COUNTDOWN_ID);

	push	6018					; 00001782H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1082 : 	if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN77@HookupPlan

; 1083 : 	{
; 1084 : 		txt->SetTimerCallback(CampaignCountDownCB);

	push	OFFSET ?CampaignCountDownCB@@YAHPAVC_Base@@@Z ; CampaignCountDownCB
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetTimerCallback@C_Text@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Text::SetTimerCallback

; 1085 : 		txt->SetFlagBitOn(C_BIT_TIMER);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1086 : 		txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN77@HookupPlan:

; 1087 : 	}
; 1088 : 
; 1089 : 	// Hook up Close Button
; 1090 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1091 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	$LN76@HookupPlan

; 1092 : 	{
; 1093 : 		if(ID == RECON_WIN)

	cmp	DWORD PTR _ID$[ebp], 18000		; 00004650H
	jne	SHORT $LN75@HookupPlan

; 1094 : 		{
; 1095 : 			ctrl->SetCallback(CloseReconWindowCB);

	push	OFFSET ?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z ; CloseReconWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1096 : 			winme->SetDragCallback(MoveRendererClient0CB);

	push	OFFSET ?MoveRendererClient0CB@@YAXPAVC_Window@@@Z ; MoveRendererClient0CB
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z ; C_Window::SetDragCallback
	jmp	SHORT $LN76@HookupPlan
$LN75@HookupPlan:

; 1097 : 		}
; 1098 : 		else if(ID == RECON_LIST_WIN)

	cmp	DWORD PTR _ID$[ebp], 18351		; 000047afH
	jne	SHORT $LN73@HookupPlan

; 1099 : 		{
; 1100 : 			ctrl->SetCallback(CloseReconWindowCB);

	push	OFFSET ?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z ; CloseReconWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	jmp	SHORT $LN76@HookupPlan
$LN73@HookupPlan:

; 1101 : 		}
; 1102 : 		else if(ID == MUNITIONS_WIN)

	cmp	DWORD PTR _ID$[ebp], 16000		; 00003e80H
	jne	SHORT $LN71@HookupPlan

; 1103 : 		{
; 1104 : 			ctrl->SetCallback(CloseMunitionsWindowCB);

	push	OFFSET ?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ; CloseMunitionsWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1105 : 			winme->SetDragCallback(MoveRendererCB);

	push	OFFSET ?MoveRendererCB@@YAXPAVC_Window@@@Z ; MoveRendererCB
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z ; C_Window::SetDragCallback

; 1106 : 		}
; 1107 : 		else

	jmp	SHORT $LN76@HookupPlan
$LN71@HookupPlan:

; 1108 : 			ctrl->SetCallback(ClosePlannerWindowCB);

	push	OFFSET ?ClosePlannerWindowCB@@YAXJFPAVC_Base@@@Z ; ClosePlannerWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN76@HookupPlan:

; 1109 : 	}
; 1110 : 
; 1111 : 	lbox=(C_ListBox *)winme->FindControl(LID_FLIGHT_CALLSIGN);

	push	13513					; 000034c9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1112 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN69@HookupPlan

; 1113 : 		lbox->SetCallback(GotoFlightCB);

	push	OFFSET ?GotoFlightCB@@YAXJFPAVC_Base@@@Z ; GotoFlightCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN69@HookupPlan:

; 1114 : 
; 1115 : 	ctrl=(C_Button*)winme->FindControl(WAIT_TAXI);

	push	6016					; 00001780H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1116 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN68@HookupPlan

; 1117 : 		ctrl->SetCallback(CampaignTaxiCB);

	push	OFFSET ?CampaignTaxiCB@@YAXJFPAVC_Base@@@Z ; CampaignTaxiCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN68@HookupPlan:

; 1118 : 
; 1119 : 	ctrl=(C_Button*)winme->FindControl(WAIT_TAKEOFF);

	push	6017					; 00001781H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1120 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN67@HookupPlan

; 1121 : 		ctrl->SetCallback(CampaignTaxiCB);

	push	OFFSET ?CampaignTaxiCB@@YAXJFPAVC_Base@@@Z ; CampaignTaxiCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN67@HookupPlan:

; 1122 : 
; 1123 : 	ctrl=(C_Button*)winme->FindControl(WAIT_RAMP);

	push	6019					; 00001783H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1124 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN66@HookupPlan

; 1125 : 		ctrl->SetCallback(CampaignTaxiCB);

	push	OFFSET ?CampaignTaxiCB@@YAXJFPAVC_Base@@@Z ; CampaignTaxiCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN66@HookupPlan:

; 1126 : 
; 1127 : 	ctrl=(C_Button*)winme->FindControl(WAIT_BACK);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1128 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN65@HookupPlan

; 1129 : 		ctrl->SetCallback(CampaignAbortTakeoffCB);

	push	OFFSET ?CampaignAbortTakeoffCB@@YAXJFPAVC_Base@@@Z ; CampaignAbortTakeoffCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN65@HookupPlan:

; 1130 : 
; 1131 : 	ctrl=(C_Button *)winme->FindControl(ALL_CTRL);

	push	15104					; 00003b00H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1132 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN64@HookupPlan

; 1133 : 		ctrl->SetCallback(ToggleATOInfoCB);

	push	OFFSET ?ToggleATOInfoCB@@YAXJFPAVC_Base@@@Z ; ToggleATOInfoCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN64@HookupPlan:

; 1134 : 
; 1135 : 	ctrl=(C_Button *)winme->FindControl(PREV_STPT);

	push	13035					; 000032ebH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1136 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN63@HookupPlan

; 1137 : 		ctrl->SetCallback(GotoPrevWaypointCB);

	push	OFFSET ?GotoPrevWaypointCB@@YAXJFPAVC_Base@@@Z ; GotoPrevWaypointCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN63@HookupPlan:

; 1138 : 
; 1139 : 	ctrl=(C_Button *)winme->FindControl(NEXT_STPT);

	push	13036					; 000032ecH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1140 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN62@HookupPlan

; 1141 : 		ctrl->SetCallback(GotoNextWaypointCB);

	push	OFFSET ?GotoNextWaypointCB@@YAXJFPAVC_Base@@@Z ; GotoNextWaypointCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN62@HookupPlan:

; 1142 : 
; 1143 : 	lbox=(C_ListBox *)winme->FindControl(ENR_ACTION_LISTBOX);

	push	13089					; 00003321H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1144 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN61@HookupPlan

; 1145 : 		lbox->SetCallback (set_waypoint_enroute_action);

	push	OFFSET ?set_waypoint_enroute_action@@YAXJFPAVC_Base@@@Z ; set_waypoint_enroute_action
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN61@HookupPlan:

; 1146 : 
; 1147 : 	lbox=(C_ListBox *)winme->FindControl(ACTION_LISTBOX);

	push	13048					; 000032f8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1148 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN60@HookupPlan

; 1149 : 		lbox->SetCallback (set_waypoint_action);

	push	OFFSET ?set_waypoint_action@@YAXJFPAVC_Base@@@Z ; set_waypoint_action
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN60@HookupPlan:

; 1150 : 
; 1151 : 	lbox=(C_ListBox *)winme->FindControl(FORM_LISTBOX);

	push	13047					; 000032f7H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1152 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN59@HookupPlan

; 1153 : 		lbox->SetCallback (set_waypoint_formation);

	push	OFFSET ?set_waypoint_formation@@YAXJFPAVC_Base@@@Z ; set_waypoint_formation
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN59@HookupPlan:

; 1154 : 
; 1155 : 	lbox=(C_ListBox *)winme->FindControl(CLIMB_LISTBOX);

	push	13046					; 000032f6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1156 : 	if (lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN58@HookupPlan

; 1157 : 		lbox->SetCallback (set_waypoint_climb_mode);

	push	OFFSET ?set_waypoint_climb_mode@@YAXJFPAVC_Base@@@Z ; set_waypoint_climb_mode
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN58@HookupPlan:

; 1158 : 
; 1159 : 	ctrl=(C_Button *)winme->FindControl(MINIMIZE_WINDOW);

	push	80002					; 00013882H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1160 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN57@HookupPlan

; 1161 : 		ctrl->SetCallback(MinMaxWindowCB);

	push	OFFSET ?MinMaxWindowCB@@YAXJFPAVC_Base@@@Z ; MinMaxWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN57@HookupPlan:

; 1162 : 
; 1163 : 	ctrl=(C_Button *)winme->FindControl(TGT_ASSIGN);

	push	13096					; 00003328H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1164 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN56@HookupPlan

; 1165 : 		ctrl->SetCallback(OpenReconWindowCB);

	push	OFFSET ?OpenReconWindowCB@@YAXJFPAVC_Base@@@Z ; OpenReconWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN56@HookupPlan:

; 1166 : 
; 1167 : 	ctrl=(C_Button *)winme->FindControl(SET_TARGET);

	push	18345					; 000047a9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1168 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN55@HookupPlan

; 1169 : 		ctrl->SetCallback(AssignTargetCB);

	push	OFFSET ?AssignTargetCB@@YAXJFPAVC_Base@@@Z ; AssignTargetCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN55@HookupPlan:

; 1170 : 
; 1171 : 	ctrl=(C_Button *)winme->FindControl(SET_VC);

	push	18354					; 000047b2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1172 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN54@HookupPlan

; 1173 : 		ctrl->SetCallback(AssignVCCB);

	push	OFFSET ?AssignVCCB@@YAXJFPAVC_Base@@@Z	; AssignVCCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN54@HookupPlan:

; 1174 : 
; 1175 : 	ctrl=(C_Button *)winme->FindControl(LEFT_SPIN);

	push	18005					; 00004655H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1176 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN53@HookupPlan

; 1177 : 		ctrl->SetCallback(SpinViewCB);

	push	OFFSET ?SpinViewCB@@YAXJFPAVC_Base@@@Z	; SpinViewCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN53@HookupPlan:

; 1178 : 
; 1179 : 	ctrl=(C_Button *)winme->FindControl(RIGHT_SPIN);

	push	18006					; 00004656H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1180 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN52@HookupPlan

; 1181 : 		ctrl->SetCallback(SpinViewCB);

	push	OFFSET ?SpinViewCB@@YAXJFPAVC_Base@@@Z	; SpinViewCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN52@HookupPlan:

; 1182 : 
; 1183 : 	ctrl=(C_Button *)winme->FindControl(RECON_OVERHEAD);

	push	18008					; 00004658H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1184 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN51@HookupPlan

; 1185 : 		ctrl->SetCallback(OverHeadCB);

	push	OFFSET ?OverHeadCB@@YAXJFPAVC_Base@@@Z	; OverHeadCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN51@HookupPlan:

; 1186 : 
; 1187 : 	pnr=(C_Panner*)winme->FindControl(RECON_PANNER);

	push	18004					; 00004654H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pnr$[ebp], eax

; 1188 : 	if(pnr)

	cmp	DWORD PTR _pnr$[ebp], 0
	je	SHORT $LN50@HookupPlan

; 1189 : 		pnr->SetCallback(ViewPannerCB);

	push	OFFSET ?ViewPannerCB@@YAXJFPAVC_Base@@@Z ; ViewPannerCB
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN50@HookupPlan:

; 1190 : 
; 1191 : 	pnr=(C_Panner*)winme->FindControl(ZOOMER);

	push	18007					; 00004657H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pnr$[ebp], eax

; 1192 : 	if(pnr)

	cmp	DWORD PTR _pnr$[ebp], 0
	je	SHORT $LN49@HookupPlan

; 1193 : 		pnr->SetCallback(ZoomPannerCB);

	push	OFFSET ?ZoomPannerCB@@YAXJFPAVC_Base@@@Z ; ZoomPannerCB
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN49@HookupPlan:

; 1194 : 
; 1195 : 	pnr=(C_Panner*)winme->FindControl(PLANE_PANNER);

	push	18100					; 000046b4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pnr$[ebp], eax

; 1196 : 	if(pnr)

	cmp	DWORD PTR _pnr$[ebp], 0
	je	SHORT $LN48@HookupPlan

; 1197 : 		pnr->SetCallback(ObjectPannerCB);

	push	OFFSET ?ObjectPannerCB@@YAXJFPAVC_Base@@@Z ; ObjectPannerCB
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN48@HookupPlan:

; 1198 : 
; 1199 : 	pnr=(C_Panner*)winme->FindControl(PLANE_ZOOMER);

	push	18101					; 000046b5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _pnr$[ebp], eax

; 1200 : 	if(pnr)

	cmp	DWORD PTR _pnr$[ebp], 0
	je	SHORT $LN47@HookupPlan

; 1201 : 		pnr->SetCallback(ObjectZoomCB);

	push	OFFSET ?ObjectZoomCB@@YAXJFPAVC_Base@@@Z ; ObjectZoomCB
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pnr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN47@HookupPlan:

; 1202 : 
; 1203 : 	ctrl=(C_Button *)winme->FindControl(AIR_1);

	push	16018					; 00003e92H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1204 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN46@HookupPlan

; 1205 : 		ctrl->SetCallback(SelectPlaneToArmCB);

	push	OFFSET ?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z ; SelectPlaneToArmCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN46@HookupPlan:

; 1206 : 
; 1207 : 	ctrl=(C_Button *)winme->FindControl(AIR_2);

	push	16019					; 00003e93H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1208 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN45@HookupPlan

; 1209 : 		ctrl->SetCallback(SelectPlaneToArmCB);

	push	OFFSET ?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z ; SelectPlaneToArmCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN45@HookupPlan:

; 1210 : 
; 1211 : 	ctrl=(C_Button *)winme->FindControl(AIR_3);

	push	16020					; 00003e94H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1212 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN44@HookupPlan

; 1213 : 		ctrl->SetCallback(SelectPlaneToArmCB);

	push	OFFSET ?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z ; SelectPlaneToArmCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN44@HookupPlan:

; 1214 : 
; 1215 : 	ctrl=(C_Button *)winme->FindControl(AIR_4);

	push	16021					; 00003e95H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1216 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN43@HookupPlan

; 1217 : 		ctrl->SetCallback(SelectPlaneToArmCB);

	push	OFFSET ?SelectPlaneToArmCB@@YAXJFPAVC_Base@@@Z ; SelectPlaneToArmCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN43@HookupPlan:

; 1218 : 
; 1219 : 	lbox=(C_ListBox *)winme->FindControl(WEAPON_LIST_CTRL);

	push	16032					; 00003ea0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1220 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN42@HookupPlan

; 1221 : 		lbox->SetCallback(ChooseWeaponListCB);

	push	OFFSET ?ChooseWeaponListCB@@YAXJFPAVC_Base@@@Z ; ChooseWeaponListCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN42@HookupPlan:

; 1222 : 
; 1223 : 	ctrl=(C_Button *)winme->FindControl(SAVE_AS);

	push	16022					; 00003e96H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1224 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN41@HookupPlan

; 1225 : 		ctrl->SetCallback(SaveStoresCB);

	push	OFFSET ?SaveStoresCB@@YAXJFPAVC_Base@@@Z ; SaveStoresCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN41@HookupPlan:

; 1226 : 
; 1227 : 	ctrl=(C_Button *)winme->FindControl(LOAD);

	push	504					; 000001f8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1228 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN40@HookupPlan

; 1229 : 		ctrl->SetCallback(LoadStoresCB);

	push	OFFSET ?LoadStoresCB@@YAXJFPAVC_Base@@@Z ; LoadStoresCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN40@HookupPlan:

; 1230 : 
; 1231 : 	ctrl=(C_Button *)winme->FindControl(RESTORE);

	push	16024					; 00003e98H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1232 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN39@HookupPlan

; 1233 : 		ctrl->SetCallback(RestoreStoresCB);

	push	OFFSET ?RestoreStoresCB@@YAXJFPAVC_Base@@@Z ; RestoreStoresCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN39@HookupPlan:

; 1234 : 
; 1235 : 	ctrl=(C_Button *)winme->FindControl(CLEAR);

	push	16025					; 00003e99H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1236 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN38@HookupPlan

; 1237 : 		ctrl->SetCallback(ClearStoresCB);

	push	OFFSET ?ClearStoresCB@@YAXJFPAVC_Base@@@Z ; ClearStoresCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN38@HookupPlan:

; 1238 : 
; 1239 : 	ctrl=(C_Button *)winme->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1240 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN37@HookupPlan

; 1241 : 		ctrl->SetCallback(CloseMunitionsWindowCB);

	push	OFFSET ?CloseMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ; CloseMunitionsWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN37@HookupPlan:

; 1242 : 
; 1243 : 	ctrl=(C_Button *)winme->FindControl(OK);

	push	16027					; 00003e9bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1244 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN36@HookupPlan

; 1245 : 		ctrl->SetCallback(UseStoresCB);

	push	OFFSET ?UseStoresCB@@YAXJFPAVC_Base@@@Z	; UseStoresCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN36@HookupPlan:

; 1246 : 
; 1247 : 	//TJL 01/02/04 Adding Change_Skin Button
; 1248 : 
; 1249 : 	ctrl=(C_Button *)winme->FindControl(CHANGE_SKIN);

	push	16033					; 00003ea1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1250 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN35@HookupPlan

; 1251 : 		ctrl->SetCallback(ChangeSkinCB);

	push	OFFSET ?ChangeSkinCB@@YAXJFPAVC_Base@@@Z ; ChangeSkinCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN35@HookupPlan:

; 1252 : 	//End
; 1253 : 
; 1254 : 	ctrl=(C_Button *)winme->FindControl(TOS_EARLIER);

	push	13032					; 000032e8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1255 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN34@HookupPlan

; 1256 : 		ctrl->SetCallback(ChangeTOSCB);

	push	OFFSET ?ChangeTOSCB@@YAXJFPAVC_Base@@@Z	; ChangeTOSCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN34@HookupPlan:

; 1257 : 
; 1258 : 	ctrl=(C_Button *)winme->FindControl(TOS_LATER);

	push	13033					; 000032e9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1259 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN33@HookupPlan

; 1260 : 		ctrl->SetCallback(ChangeTOSCB);

	push	OFFSET ?ChangeTOSCB@@YAXJFPAVC_Base@@@Z	; ChangeTOSCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN33@HookupPlan:

; 1261 : 
; 1262 : 	ctrl=(C_Button *)winme->FindControl(PATROL_LESS);

	push	13107					; 00003333H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1263 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN32@HookupPlan

; 1264 : 		ctrl->SetCallback(ChangePatrolCB);

	push	OFFSET ?ChangePatrolCB@@YAXJFPAVC_Base@@@Z ; ChangePatrolCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN32@HookupPlan:

; 1265 : 
; 1266 : 	ctrl=(C_Button *)winme->FindControl(PATROL_LONGER);

	push	13108					; 00003334H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1267 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN31@HookupPlan

; 1268 : 		ctrl->SetCallback(ChangePatrolCB);

	push	OFFSET ?ChangePatrolCB@@YAXJFPAVC_Base@@@Z ; ChangePatrolCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN31@HookupPlan:

; 1269 : 
; 1270 : 	ctrl=(C_Button *)winme->FindControl(AIRSPEED_DECR);

	push	13115					; 0000333bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1271 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN30@HookupPlan

; 1272 : 		ctrl->SetCallback(ChangeAirspeedCB);

	push	OFFSET ?ChangeAirspeedCB@@YAXJFPAVC_Base@@@Z ; ChangeAirspeedCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN30@HookupPlan:

; 1273 : 
; 1274 : 	ctrl=(C_Button *)winme->FindControl(AIRSPEED_INC);

	push	13114					; 0000333aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1275 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN29@HookupPlan

; 1276 : 		ctrl->SetCallback(ChangeAirspeedCB);

	push	OFFSET ?ChangeAirspeedCB@@YAXJFPAVC_Base@@@Z ; ChangeAirspeedCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN29@HookupPlan:

; 1277 : 
; 1278 : 	ctrl=(C_Button *)winme->FindControl(ALT_DECR);

	push	13117					; 0000333dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1279 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN28@HookupPlan

; 1280 : 		ctrl->SetCallback(ChangeAltCB);

	push	OFFSET ?ChangeAltCB@@YAXJFPAVC_Base@@@Z	; ChangeAltCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN28@HookupPlan:

; 1281 : 
; 1282 : 	ctrl=(C_Button *)winme->FindControl(ALT_INC);

	push	13116					; 0000333cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1283 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN27@HookupPlan

; 1284 : 		ctrl->SetCallback(ChangeAltCB);

	push	OFFSET ?ChangeAltCB@@YAXJFPAVC_Base@@@Z	; ChangeAltCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN27@HookupPlan:

; 1285 : 
; 1286 : 	ctrl=(C_Button *)winme->FindControl(TOS_LOCK);

	push	13113					; 00003339H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1287 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN26@HookupPlan

; 1288 : 		ctrl->SetCallback(ChangeTOSLockCB);

	push	OFFSET ?ChangeTOSLockCB@@YAXJFPAVC_Base@@@Z ; ChangeTOSLockCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN26@HookupPlan:

; 1289 : 
; 1290 : 	ctrl=(C_Button *)winme->FindControl(AIRSPEED_LOCK);

	push	13112					; 00003338H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1291 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN25@HookupPlan

; 1292 : 		ctrl->SetCallback(ChangeAirspeedLockCB);

	push	OFFSET ?ChangeAirspeedLockCB@@YAXJFPAVC_Base@@@Z ; ChangeAirspeedLockCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN25@HookupPlan:

; 1293 : 
; 1294 : 	ctrl=(C_Button *)winme->FindControl(GROUP1_FLAG);

	push	18311					; 00004787H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1295 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN24@HookupPlan

; 1296 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN24@HookupPlan:

; 1297 : 
; 1298 : 	ctrl=(C_Button *)winme->FindControl(GROUP2_FLAG);

	push	18313					; 00004789H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1299 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN23@HookupPlan

; 1300 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN23@HookupPlan:

; 1301 : 
; 1302 : 	ctrl=(C_Button *)winme->FindControl(GROUP3_FLAG);

	push	18315					; 0000478bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1303 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN22@HookupPlan

; 1304 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN22@HookupPlan:

; 1305 : 
; 1306 : 	ctrl=(C_Button *)winme->FindControl(GROUP4_FLAG);

	push	18317					; 0000478dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1307 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN21@HookupPlan

; 1308 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN21@HookupPlan:

; 1309 : 
; 1310 : 	ctrl=(C_Button *)winme->FindControl(GROUP5_FLAG);

	push	18319					; 0000478fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1311 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN20@HookupPlan

; 1312 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN20@HookupPlan:

; 1313 : 
; 1314 : 	ctrl=(C_Button *)winme->FindControl(GROUP6_FLAG);

	push	18321					; 00004791H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1315 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN19@HookupPlan

; 1316 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupPlan:

; 1317 : 
; 1318 : 	ctrl=(C_Button *)winme->FindControl(GROUP7_FLAG);

	push	18323					; 00004793H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1319 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN18@HookupPlan

; 1320 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupPlan:

; 1321 : 
; 1322 : 	ctrl=(C_Button *)winme->FindControl(GROUP8_FLAG);

	push	18325					; 00004795H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1323 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@HookupPlan

; 1324 : 		ctrl->SetCallback(ToggleOOBTeamCB);

	push	OFFSET ?ToggleOOBTeamCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBTeamCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupPlan:

; 1325 : 
; 1326 : 	ctrl=(C_Button *)winme->FindControl(AF_FILTER);

	push	18307					; 00004783H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1327 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupPlan

; 1328 : 		ctrl->SetCallback(ToggleOOBFilterCB);

	push	OFFSET ?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBFilterCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupPlan:

; 1329 : 
; 1330 : 	ctrl=(C_Button *)winme->FindControl(ARMY_FILTER);

	push	18308					; 00004784H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1331 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@HookupPlan

; 1332 : 		ctrl->SetCallback(ToggleOOBFilterCB);

	push	OFFSET ?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBFilterCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupPlan:

; 1333 : 
; 1334 : 	ctrl=(C_Button *)winme->FindControl(NAVY_FILTER);

	push	18309					; 00004785H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1335 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupPlan

; 1336 : 		ctrl->SetCallback(ToggleOOBFilterCB);

	push	OFFSET ?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBFilterCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupPlan:

; 1337 : 
; 1338 : 	ctrl=(C_Button *)winme->FindControl(OBJECTIVE_FILTER);

	push	18310					; 00004786H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1339 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN13@HookupPlan

; 1340 : 		ctrl->SetCallback(ToggleOOBFilterCB);

	push	OFFSET ?ToggleOOBFilterCB@@YAXJFPAVC_Base@@@Z ; ToggleOOBFilterCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupPlan:

; 1341 : 
; 1342 : 	ctrl=(C_Button *)winme->FindControl(UNIT_SQUADRON_TAB);

	push	13613					; 0000352dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1343 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN12@HookupPlan

; 1344 : 		ctrl->SetCallback(SquadronAirUnitCB);

	push	OFFSET ?SquadronAirUnitCB@@YAXJFPAVC_Base@@@Z ; SquadronAirUnitCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupPlan:

; 1345 : 
; 1346 : 	ctrl=(C_Button *)winme->FindControl(UNIT_PILOT_TAB);

	push	13614					; 0000352eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1347 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN11@HookupPlan

; 1348 : 		ctrl->SetCallback(PilotAirUnitCB);

	push	OFFSET ?PilotAirUnitCB@@YAXJFPAVC_Base@@@Z ; PilotAirUnitCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupPlan:

; 1349 : 
; 1350 : 	ctrl=(C_Button *)winme->FindControl(OOB_UNIT_FIND);

	push	18336					; 000047a0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1351 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@HookupPlan

; 1352 : 		ctrl->SetCallback(OOBFindCB);

	push	OFFSET ?OOBFindCB@@YAXJFPAVC_Base@@@Z	; OOBFindCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupPlan:

; 1353 : 
; 1354 : 	ctrl=(C_Button *)winme->FindControl(OOB_UNIT_INFO);

	push	18335					; 0000479fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1355 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupPlan

; 1356 : 		ctrl->SetCallback(OOBInfoCB);

	push	OFFSET ?OOBInfoCB@@YAXJFPAVC_Base@@@Z	; OOBInfoCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupPlan:

; 1357 : 
; 1358 : 	ctrl=(C_Button *)winme->FindControl(FIND_UNIT);

	push	13547					; 000034ebH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1359 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupPlan

; 1360 : 		ctrl->SetCallback(SquadronFindCB);

	push	OFFSET ?SquadronFindCB@@YAXJFPAVC_Base@@@Z ; SquadronFindCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupPlan:

; 1361 : 
; 1362 : 	ctrl=(C_Button *)winme->FindControl(OPEN_RECON_TARGETS);

	push	18353					; 000047b1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1363 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@HookupPlan

; 1364 : 		ctrl->SetCallback(OpenTargetWinCB);

	push	OFFSET ?OpenTargetWinCB@@YAXJFPAVC_Base@@@Z ; OpenTargetWinCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupPlan:

; 1365 : 
; 1366 : 	ctrl=(C_Button *)winme->FindControl(OPEN_RECON);

	push	18352					; 000047b0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1367 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@HookupPlan

; 1368 : 		ctrl->SetCallback(OpenReconWinCB);

	push	OFFSET ?OpenReconWinCB@@YAXJFPAVC_Base@@@Z ; OpenReconWinCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupPlan:

; 1369 : 
; 1370 : 	tree=(C_TreeList *)winme->FindControl(ATO_ALL_TREE);

	push	1234000					; 0012d450H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1371 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN5@HookupPlan

; 1372 : 	{
; 1373 : 		tree->SetCallback(RedrawTreeWindowCB);

	push	OFFSET ?RedrawTreeWindowCB@@YAXJFPAVC_Base@@@Z ; RedrawTreeWindowCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1374 : 		gATOAll=tree;

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?gATOAll@@3PAVC_TreeList@@A, ecx ; gATOAll
$LN5@HookupPlan:

; 1375 : 	}
; 1376 : 	tree=(C_TreeList *)winme->FindControl(ATO_PACKAGE_TREE);

	push	1234001					; 0012d451H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1377 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN4@HookupPlan

; 1378 : 	{
; 1379 : 		tree->SetCallback(RedrawTreeWindowCB);

	push	OFFSET ?RedrawTreeWindowCB@@YAXJFPAVC_Base@@@Z ; RedrawTreeWindowCB
	mov	edx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 1380 : 		gATOPackage=tree;

	mov	eax, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A, eax ; gATOPackage
$LN4@HookupPlan:

; 1381 : 	}
; 1382 : 	tree=(C_TreeList *)winme->FindControl(OOB_TREE);

	push	18340					; 000047a4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1383 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN3@HookupPlan

; 1384 : 	{
; 1385 : 		tree->SetCallback(RedrawTreeWindowCB);

	push	OFFSET ?RedrawTreeWindowCB@@YAXJFPAVC_Base@@@Z ; RedrawTreeWindowCB
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1386 : 		gOOBTree=tree;

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A, ecx ; gOOBTree
$LN3@HookupPlan:

; 1387 : 	}
; 1388 : 	tree=(C_TreeList *)winme->FindControl(RECON_TREE);

	push	18346					; 000047aaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1389 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN2@HookupPlan

; 1390 : 	{
; 1391 : 		TargetTree=tree;

	mov	edx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?TargetTree@@3PAVC_TreeList@@A, edx ; TargetTree

; 1392 : 		tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 1393 : 		tree->SetSortCallback(ReconListSortCB);

	push	OFFSET ?ReconListSortCB@@YAHPAVTREELIST@@0@Z ; ReconListSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
$LN2@HookupPlan:

; 1394 : 	}
; 1395 : // Help GUIDE thing
; 1396 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1397 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN80@HookupPlan

; 1398 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN80@HookupPlan:

; 1399 : 
; 1400 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HookupPlannerControls@@YAXJ@Z ENDP			; HookupPlannerControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
_flight$ = -12						; size = 4
_i$ = -8						; size = 4
_wp$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?AssignTargetCB@@YAXJFPAVC_Base@@@Z PROC		; AssignTargetCB

; 356  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 357  : 	Flight flight;
; 358  : 	WayPoint wp;
; 359  : 	long i;
; 360  : 
; 361  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@AssignTarg

; 362  : 		return;

	jmp	$LN7@AssignTarg
$LN6@AssignTarg:

; 363  : 
; 364  : 	CloseReconWindowCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z	; CloseReconWindowCB
	add	esp, 12					; 0000000cH

; 365  : 
; 366  : 	if(FeatureID != FalconNullId && FeatureNo >= 0)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?FeatureID@@3VVU_ID@@A	; FeatureID
	call	??9VU_ID@@QBE_NABV0@@Z			; VU_ID::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@AssignTarg
	cmp	DWORD PTR ?FeatureNo@@3JA, 0		; FeatureNo
	jl	$LN7@AssignTarg

; 367  : 	{
; 368  : 		// Set Target
; 369  : 		flight=(Flight)vuDatabase->Find(gActiveFlightID);

	mov	edx, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4
	push	edx
	mov	eax, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A
	push	eax
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 370  : 		if(flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	SHORT $LN7@AssignTarg

; 371  : 		{
; 372  : 			i=1;

	mov	DWORD PTR _i$[ebp], 1

; 373  : 			wp=flight->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax
$LN3@AssignTarg:

; 374  : 			while(i < gActiveWPNum && wp)

	movsx	ecx, WORD PTR ?gActiveWPNum@@3FA	; gActiveWPNum
	cmp	DWORD PTR _i$[ebp], ecx
	jge	SHORT $LN2@AssignTarg
	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN2@AssignTarg

; 375  : 			{
; 376  : 				wp=wp->GetNextWP();

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetNextWP@WayPointClass@@QAEPAV1@XZ	; WayPointClass::GetNextWP
	mov	DWORD PTR _wp$[ebp], eax

; 377  : 				i++;

	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx

; 378  : 			}

	jmp	SHORT $LN3@AssignTarg
$LN2@AssignTarg:

; 379  : 			if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN7@AssignTarg

; 380  : 			{
; 381  : 				wp->SetWPTarget(FeatureID);

	mov	eax, DWORD PTR ?FeatureID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?FeatureID@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?SetWPTarget@WayPointClass@@QAEXVVU_ID@@@Z ; WayPointClass::SetWPTarget

; 382  : 				wp->SetWPTargetBuilding(static_cast<uchar>(FeatureNo));

	movzx	edx, BYTE PTR ?FeatureNo@@3JA
	push	edx
	mov	ecx, DWORD PTR _wp$[ebp]
	call	?SetWPTargetBuilding@WayPointClass@@QAEXE@Z ; WayPointClass::SetWPTargetBuilding

; 383  : 				refresh_waypoint(wp);

	mov	eax, DWORD PTR _wp$[ebp]
	push	eax
	call	?refresh_waypoint@@YAXPAVWayPointClass@@@Z ; refresh_waypoint
	add	esp, 4
$LN7@AssignTarg:

; 384  : 			}
; 385  : 		}
; 386  : 	}
; 387  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AssignTargetCB@@YAXJFPAVC_Base@@@Z ENDP		; AssignTargetCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\planner.cpp
_TEXT	SEGMENT
tv85 = -20						; size = 4
$T1 = -16						; size = 4
_Flags2$ = -12						; size = 4
_Flags1$ = -8						; size = 4
$T2 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z PROC		; CloseReconWindowCB

; 390  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 391  : 	long Flags1,Flags2;
; 392  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CloseRecon

; 393  : 		return;

	jmp	$LN4@CloseRecon
$LN3@CloseRecon:

; 394  : 
; 395  : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 396  : 
; 397  : 	Flags1=gMainHandler->GetWindowFlags(RECON_WIN);

	push	18000					; 00004650H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	mov	DWORD PTR _Flags1$[ebp], eax

; 398  : 	Flags2=gMainHandler->GetWindowFlags(RECON_LIST_WIN);

	push	18351					; 000047afH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	mov	DWORD PTR _Flags2$[ebp], eax

; 399  : 
; 400  : 	if(!(Flags1 & C_BIT_ENABLED) && !(Flags2 & C_BIT_ENABLED))

	mov	eax, DWORD PTR _Flags1$[ebp]
	and	eax, 2048				; 00000800H
	jne	SHORT $LN4@CloseRecon
	mov	ecx, DWORD PTR _Flags2$[ebp]
	and	ecx, 2048				; 00000800H
	jne	SHORT $LN4@CloseRecon

; 401  : 	{
; 402  : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN4@CloseRecon

; 403  : 		{
; 404  : 			gUIViewer->Cleanup();

	mov	ecx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup

; 405  : 			delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@CloseRecon
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@CloseRecon
$LN6@CloseRecon:
	mov	DWORD PTR tv85[ebp], 0
$LN7@CloseRecon:

; 406  : 			gUIViewer=NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN4@CloseRecon:

; 407  : 		}
; 408  : 	}
; 409  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseReconWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseReconWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z PROC ; PlayerOptionsClass::SetStartFlag, COMDAT
; _this$ = ecx

; 199  : 	void SetStartFlag(StartFlag flag)								{ SimStartFlags=flag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flag$[ebp]
	mov	DWORD PTR [eax+196], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ENDP ; PlayerOptionsClass::SetStartFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPilotSlot@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotSlot@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetPilotSlot, COMDAT
; _this$ = ecx

; 146  : 	uchar GetPilotSlot (void) const               { return pilotSlot; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+512]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotSlot@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ PROC ; FalconSessionEntity::GetPlayerFlight, COMDAT
; _this$ = ecx

; 139  : 	FlightClass* GetPlayerFlight(void) const      { return playerFlightPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ENDP ; FalconSessionEntity::GetPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??0C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0C_3dViewer@@QAE@XZ PROC				; C_3dViewer::C_3dViewer, COMDAT
; _this$ = ecx

; 37   : 		C_3dViewer()

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 		{
; 39   : 			rend3d_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 40   : 			rendOTW_=NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 41   : 			viewPoint_=NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 42   : 			objects_=NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0

; 43   : 			l=-1.0f; t=1.0f;r=1.0f;b=-1.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+132], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [edx+136], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+140], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [ecx+144], xmm0

; 44   : 			viewPos_.x=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+24], xmm0

; 45   : 			viewPos_.y=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+28], xmm0

; 46   : 			viewPos_.z=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+32], xmm0

; 47   : 			zeroPos_=viewPos_;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 48   : 			currentPos_=viewPos_;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 49   : 			CameraPos_=viewPos_;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], ecx

; 50   : 			currentRot_=IMatrix;

	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 60					; 0000003cH
	mov	ecx, 9
	mov	esi, OFFSET ?IMatrix@@3UTrotation@@B	; IMatrix
	rep movsd

; 51   : 			CameraHeading_=0.0f;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+104], xmm0

; 52   : 			CameraPitch_=0.0f;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+108], xmm0

; 53   : 			CameraRoll_=0.0f;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+112], xmm0

; 54   : 			ViewDistance_=10.0f * FEET_PER_KM;

	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@47001fcd
	movss	DWORD PTR [edx+116], xmm0

; 55   : 			Time_=12l * 60l * 60l * 1000l;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 43200000		; 02932e00H

; 56   : 			MinTexture_=0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 57   : 			MaxTexture_=1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 1

; 58   : 			Weather_=0;

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax+156], xmm0

; 59   : //			TextureLevel_=2;
; 60   : //			SmoothShading_=TRUE;
; 61   : 			sw=800; sh=600;

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44480000
	movss	DWORD PTR [ecx+148], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@44160000
	movss	DWORD PTR [edx+152], xmm0

; 62   : 			LockOnView_=0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], 0

; 63   : 			m_pImgGray = NULL;	// OW

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 0

; 64   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??0C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z PROC	; C_Window::SetDragCallback, COMDAT
; _this$ = ecx

; 270  : 		void SetDragCallback(void (*cb)(C_Window *)) { DragCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+4316], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDragCallback@C_Window@@QAEXP6AXPAV1@@Z@Z ENDP	; C_Window::SetDragCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetDrawCallback, COMDAT
; _this$ = ecx

; 34   : 		void SetDrawCallback(void (*routine)(long ID,short hittype,C_Base *control)) { DrawCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDrawCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetDrawCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetRefreshCallback, COMDAT
; _this$ = ecx

; 33   : 		void SetRefreshCallback(void (*routine)(long ID,short hittype,C_Base *control)) { RefreshCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetRefreshCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetUpdateCallback, COMDAT
; _this$ = ecx

; 32   : 		void SetUpdateCallback(void (*routine)(long ID,short hittype,C_Base *control)) { UpdateCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpanner.h
;	COMDAT ?GetVRange@C_Panner@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVRange@C_Panner@@QAEJXZ PROC			; C_Panner::GetVRange, COMDAT
; _this$ = ecx

; 56   : 		long GetVRange() { return(SY_); }	  //! 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVRange@C_Panner@@QAEJXZ ENDP			; C_Panner::GetVRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cpanner.h
;	COMDAT ?GetHRange@C_Panner@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHRange@C_Panner@@QAEJXZ PROC			; C_Panner::GetHRange, COMDAT
; _this$ = ecx

; 55   : 		long GetHRange() { return(SX_); }	  //! 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHRange@C_Panner@@QAEJXZ ENDP			; C_Panner::GetHRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctext.h
;	COMDAT ?SetTimerCallback@C_Text@@QAEXP6AHPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Callback$ = 8						; size = 4
?SetTimerCallback@C_Text@@QAEXP6AHPAVC_Base@@@Z@Z PROC	; C_Text::SetTimerCallback, COMDAT
; _this$ = ecx

; 50   : 		void SetTimerCallback(BOOL (*Callback)(C_Base *me)) { TimerCallback_=Callback; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Callback$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTimerCallback@C_Text@@QAEXP6AHPAVC_Base@@@Z@Z ENDP	; C_Text::SetTimerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\loadout.h
;	COMDAT ??0LoadoutStruct@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0LoadoutStruct@@QAE@XZ PROC				; LoadoutStruct::LoadoutStruct, COMDAT
; _this$ = ecx

; 32   : 		LoadoutStruct(void)		

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 33   : 		{ 
; 34   : 			memset(WeaponID,	0,	(sizeof(short) * HARDPOINT_MAX)); 

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 35   : 			memset(WeaponCount,	0,	(sizeof(uchar) * HARDPOINT_MAX)); 

	push	16					; 00000010H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 36   : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0LoadoutStruct@@QAE@XZ ENDP				; LoadoutStruct::LoadoutStruct
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetNextWP@WayPointClass@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWP@WayPointClass@@QAEPAV1@XZ PROC		; WayPointClass::GetNextWP, COMDAT
; _this$ = ecx

; 175  : 	WayPoint GetNextWP (void)						{ return NextWP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWP@WayPointClass@@QAEPAV1@XZ ENDP		; WayPointClass::GetNextWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPAction@WayPointClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPAction@WayPointClass@@QAEHXZ PROC			; WayPointClass::GetWPAction, COMDAT
; _this$ = ecx

; 170  : 	int GetWPAction(void)							{ return (int)Action; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPAction@WayPointClass@@QAEHXZ ENDP			; WayPointClass::GetWPAction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPTargetBuilding@WayPointClass@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 1
?SetWPTargetBuilding@WayPointClass@@QAEXE@Z PROC	; WayPointClass::SetWPTargetBuilding, COMDAT
; _this$ = ecx

; 159  : 	void SetWPTargetBuilding (uchar t)				{ TargetBuilding = t; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _t$[ebp]
	mov	BYTE PTR [eax+27], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetWPTargetBuilding@WayPointClass@@QAEXE@Z ENDP	; WayPointClass::SetWPTargetBuilding
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?SetWPTarget@WayPointClass@@QAEXVVU_ID@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_e$ = 8							; size = 8
?SetWPTarget@WayPointClass@@QAEXVVU_ID@@@Z PROC		; WayPointClass::SetWPTarget, COMDAT
; _this$ = ecx

; 158  : 	void SetWPTarget (VU_ID e)						{ TargetID = e; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _e$[ebp+4]
	mov	DWORD PTR [eax+20], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetWPTarget@WayPointClass@@QAEXVVU_ID@@@Z ENDP		; WayPointClass::SetWPTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??9VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??9VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator!=, COMDAT
; _this$ = ecx

; 111  : 	bool operator != (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return (
; 113  : 			num_ == rhs.num_ ? 
; 114  : 			(creator_ == rhs.creator_ ? false : true) : 
; 115  : 			true
; 116  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 1
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 1
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 117  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??9VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END
