; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\campaign\cpselect.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?gOccupationMap@@3PAVIMAGE_RSC@@A		; gOccupationMap
PUBLIC	?gBigOccupationMap@@3PAVIMAGE_RSC@@A		; gBigOccupationMap
PUBLIC	?CampSelMode@@3HA				; CampSelMode
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?gUI_CampaignFile@@3PADA			; gUI_CampaignFile
PUBLIC	?gUI_ScenarioName@@3PADA			; gUI_ScenarioName
PUBLIC	?gLastCampFilename@@3PADA			; gLastCampFilename
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?SituationStr@@3PAJA				; SituationStr
PUBLIC	?SpecialtyStr@@3PAJA				; SpecialtyStr
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
_join_status_bits DD 01H DUP (?)
?gOccupationMap@@3PAVIMAGE_RSC@@A DD 01H DUP (?)	; gOccupationMap
?gBigOccupationMap@@3PAVIMAGE_RSC@@A DD 01H DUP (?)	; gBigOccupationMap
?CampSelMode@@3HA DD 01H DUP (?)			; CampSelMode
_oldCampSelMode DD 01H DUP (?)
?gUI_CampaignFile@@3PADA DB 0104H DUP (?)		; gUI_CampaignFile
?gUI_ScenarioName@@3PADA DB 040H DUP (?)		; gUI_ScenarioName
?gLastCampFilename@@3PADA DB 0104H DUP (?)		; gLastCampFilename
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
_DATA	SEGMENT
_gSelectedSquadronID DD 0ffffffffH
?SituationStr@@3PAJA DD 0145H				; SituationStr
	DD	0146H
	DD	0147H
	DD	0148H
	DD	0149H
?SpecialtyStr@@3PAJA DD 082H				; SpecialtyStr
	DD	080H
	DD	081H
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??0VU_SESSION_ID@@QAE@K@Z			; VU_SESSION_ID::VU_SESSION_ID
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??0VU_ID@@QAE@XZ				; VU_ID::VU_ID
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	?GameName@VuGameEntity@@QAEPADXZ		; VuGameEntity::GameName
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?SetColorKey@C_Resmgr@@QAEXG@Z			; C_Resmgr::SetColorKey
PUBLIC	?SetScreenFormat@C_Resmgr@@QAEXFFF@Z		; C_Resmgr::SetScreenFormat
PUBLIC	?SetData@C_Resmgr@@QAEXPAD@Z			; C_Resmgr::SetData
PUBLIC	?Find@C_Resmgr@@QAEPAXJ@Z			; C_Resmgr::Find
PUBLIC	?SetGroup@C_Base@@QAEXJ@Z			; C_Base::SetGroup
PUBLIC	?SetCluster@C_Base@@QAEXJ@Z			; C_Base::SetCluster
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetX@C_Base@@QAEJXZ				; C_Base::GetX
PUBLIC	?GetY@C_Base@@QAEJXZ				; C_Base::GetY
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?SetSortType@C_TreeList@@QAEXF@Z		; C_TreeList::SetSortType
PUBLIC	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetLastItem
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?GetGroup@C_Window@@QAEJXZ			; C_Window::GetGroup
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?IsLoaded@CampaignClass@@QAEHXZ			; CampaignClass::IsLoaded
PUBLIC	?CampaignGroundRatio@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::CampaignGroundRatio
PUBLIC	?CampaignAirRatio@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::CampaignAirRatio
PUBLIC	?CampaignAirDefenseRatio@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignAirDefenseRatio
PUBLIC	?CampaignNavalRatio@PlayerOptionsClass@@QAEHXZ	; PlayerOptionsClass::CampaignNavalRatio
PUBLIC	?CampaignEnemyAirExperience@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignEnemyAirExperience
PUBLIC	?CampaignEnemyGroundExperience@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignEnemyGroundExperience
PUBLIC	?SetCampEnemyAirExperience@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampEnemyAirExperience
PUBLIC	?SetCampEnemyGroundExperience@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampEnemyGroundExperience
PUBLIC	?SetCampGroundRatio@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetCampGroundRatio
PUBLIC	?SetCampAirRatio@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetCampAirRatio
PUBLIC	?SetCampAirDefenseRatio@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampAirDefenseRatio
PUBLIC	?SetCampNavalRatio@PlayerOptionsClass@@QAEXH@Z	; PlayerOptionsClass::SetCampNavalRatio
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	?CancelJoinCB@@YAXXZ				; CancelJoinCB
PUBLIC	?SetupMapSquadronWindow@@YAXHH@Z		; SetupMapSquadronWindow
PUBLIC	?SelectScenarioCB@@YAXJFPAVC_Base@@@Z		; SelectScenarioCB
PUBLIC	?DisplayJoinStatusWindow@@YAXH@Z		; DisplayJoinStatusWindow
PUBLIC	?CopySettingsToTemp@@YAXXZ			; CopySettingsToTemp
PUBLIC	?LoadCampaignSelectWindows@@YAXXZ		; LoadCampaignSelectWindows
PUBLIC	?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z	; CreateOccupationMap
PUBLIC	?SetupMapWindow@@YAXXZ				; SetupMapWindow
PUBLIC	?AddSquadronsToMap@@YAXXZ			; AddSquadronsToMap
PUBLIC	?LoadSquadronInfo@@YAXXZ			; LoadSquadronInfo
PUBLIC	?LoadScenarioInfo@@YAXXZ			; LoadScenarioInfo
PUBLIC	?EnableScenarioText@@YAXPAVC_Base@@@Z		; EnableScenarioText
PUBLIC	?CloseSelectWindowCB@@YAXJFPAVC_Base@@@Z	; CloseSelectWindowCB
PUBLIC	?SelectScenarioButtons@@YAXJ@Z			; SelectScenarioButtons
PUBLIC	?RecieveScenarioInfo@@YAXXZ			; RecieveScenarioInfo
PUBLIC	?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z	; SetCampaignSelectCB
PUBLIC	?OpenChallengeCB@@YAXJFPAVC_Base@@@Z		; OpenChallengeCB
PUBLIC	?CloseChallengeCB@@YAXJFPAVC_Base@@@Z		; CloseChallengeCB
PUBLIC	?CampDelFileCB@@YAXJFPAVC_Base@@@Z		; CampDelFileCB
PUBLIC	?CopyinTempSettings@@YAXXZ			; CopyinTempSettings
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?gPlayerSquadronId@@3VVU_ID@@A			; gPlayerSquadronId
PUBLIC	??_C@_0L@EFHDDHPD@cs_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@IDLJDMD@cs_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@JFANFBLE@cs_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@LJBCJBHP@cs_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0P@KAHNKOKO@?$CF1d?5?$CFs?0?5?$CF1d?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_05LINHLPLG@save0?$AA@			; `string'
PUBLIC	??_C@_05KBMMIOPH@save1?$AA@			; `string'
PUBLIC	??_C@_05IKOBNNDE@save2?$AA@			; `string'
PUBLIC	??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@		; `string'
PUBLIC	??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@		; `string'
PUBLIC	??_C@_06LMIEDEKA@?$CFs?4cam?$AA@		; `string'
PUBLIC	??_C@_03GOGOMMPD@cam?$AA@			; `string'
PUBLIC	??_C@_06LBNHNNMG@?$CFs?4his?$AA@		; `string'
PUBLIC	??_C@_06LLJPEDF@?$CFs?4frc?$AA@			; `string'
PUBLIC	??_C@_0N@GOGNFBAO@Cancel?5Join?6?$AA@		; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@454cffae
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_sprintf:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z:PROC ; VuSessionsIterator::VuSessionsIterator
EXTRN	??1VuSessionsIterator@@UAE@XZ:PROC		; VuSessionsIterator::~VuSessionsIterator
EXTRN	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetFirst
EXTRN	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ:PROC ; VuSessionsIterator::GetNext
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	?UI95_GetScreenColorInfo@@YAXAAKAAG0101@Z:PROC	; UI95_GetScreenColorInfo
EXTRN	?UI95_RGB24Bit@@YAGK@Z:PROC			; UI95_RGB24Bit
EXTRN	?Find@C_Hash@@QAEPAXJ@Z:PROC			; C_Hash::Find
EXTRN	??0C_Resmgr@@QAE@XZ:PROC			; C_Resmgr::C_Resmgr
EXTRN	?Setup@C_Resmgr@@QAEXJ@Z:PROC			; C_Resmgr::Setup
EXTRN	?AddIndex@C_Resmgr@@QAEXJPAVIMAGE_RSC@@@Z:PROC	; C_Resmgr::AddIndex
EXTRN	?GetHeight@C_Font@@QAEHJ@Z:PROC			; C_Font::GetHeight
EXTRN	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z:PROC	; C_Image::GetImageRes
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?GetUserPtr@C_Base@@QAEPAXJ@Z:PROC		; C_Base::GetUserPtr
EXTRN	?SetImage@C_Bitmap@@QAEXJ@Z:PROC		; C_Bitmap::SetImage
EXTRN	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z:PROC	; C_Bitmap::SetImage
EXTRN	??0C_Button@@QAE@XZ:PROC			; C_Button::C_Button
EXTRN	?Setup@C_Button@@QAEXJFJJ@Z:PROC		; C_Button::Setup
EXTRN	?SetColor@C_Button@@QAEXFK@Z:PROC		; C_Button::SetColor
EXTRN	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z:PROC	; C_Button::SetImage
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	?GetText@C_Button@@QAEPADF@Z:PROC		; C_Button::GetText
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z:PROC ; C_TreeList::SetAllControlStates
EXTRN	?RecalcSize@C_TreeList@@QAEXXZ:PROC		; C_TreeList::RecalcSize
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	??0C_Text@@QAE@XZ:PROC				; C_Text::C_Text
EXTRN	?SetFGColor@C_Text@@QAEXK@Z:PROC		; C_Text::SetFGColor
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	?SetTime@C_Clock@@QAEXJ@Z:PROC			; C_Clock::SetTime
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	?SetCountry@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetCountry
EXTRN	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z:PROC ; CampaignClass::LoadScenarioStats
EXTRN	?IsValidSquadron@CampaignClass@@QAEHH@Z:PROC	; CampaignClass::IsValidSquadron
EXTRN	?StartCampaignGame@@YAXHH@Z:PROC		; StartCampaignGame
EXTRN	?StopCampaignLoad@@YAXXZ:PROC			; StopCampaignLoad
EXTRN	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z:PROC ; UIComms::LookAtGame
EXTRN	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ:PROC ; UIComms::GetTargetGame
EXTRN	?AssignUISquadronID@@YAEF@Z:PROC		; AssignUISquadronID
EXTRN	?create_tactical_scenario_info@@YAXXZ:PROC	; create_tactical_scenario_info
EXTRN	?CommsErrorDialog@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC ; CommsErrorDialog
EXTRN	?SetupInfoWindow@@YAXP6AXXZ0@Z:PROC		; SetupInfoWindow
EXTRN	?InfoButtonCB@@YAXJFPAVC_Base@@@Z:PROC		; InfoButtonCB
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?SetSingle_Comms_Ctrls@@YAXXZ:PROC		; SetSingle_Comms_Ctrls
EXTRN	?LoadCampaignWindows@@YAXXZ:PROC		; LoadCampaignWindows
EXTRN	?LoadPlannerWindows@@YAXXZ:PROC			; LoadPlannerWindows
EXTRN	?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z:PROC	; MakeOccupationMap
EXTRN	?MakeBigOccupationMap@@YAXPAVIMAGE_RSC@@@Z:PROC	; MakeBigOccupationMap
EXTRN	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z:PROC ; GetFileListTree
EXTRN	?OrdinalString@@YAPADJ@Z:PROC			; OrdinalString
EXTRN	?PlayUIMovie@@YAXJ@Z:PROC			; PlayUIMovie
EXTRN	?CheckExclude@@YAHPAD0QAPAD0@Z:PROC		; CheckExclude
EXTRN	?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z:PROC	; VerifyDelete
EXTRN	?EnableScenarioInfo@@YAXJ@Z:PROC		; EnableScenarioInfo
EXTRN	?DisableScenarioInfo@@YAXXZ:PROC		; DisableScenarioInfo
EXTRN	?FileNameSortCB@@YAHPAVTREELIST@@0@Z:PROC	; FileNameSortCB
EXTRN	?DeleteGroupList@@YAXJ@Z:PROC			; DeleteGroupList
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gFontList@@3PAVC_Font@@A:DWORD			; gFontList
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A:DWORD ; Falcon4ClassTable
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?FalconCampaignSaveDirectory@@3PADA:BYTE	; FalconCampaignSaveDirectory
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?SquadronMatchIDs@@3PAY01JA:BYTE		; SquadronMatchIDs
EXTRN	?CampExcludeList@@3PAPADA:BYTE			; CampExcludeList
EXTRN	?max_veh@@3PAEA:BYTE				; max_veh
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?CPSelectLoaded@@3HA:DWORD			; CPSelectLoaded
EXTRN	?PlannerLoaded@@3HA:DWORD			; PlannerLoaded
EXTRN	?_IsF16_@@3JA:DWORD				; _IsF16_
EXTRN	?g_bHiResUI@@3_NA:BYTE				; g_bHiResUI
EXTRN	?g_LargeTheater@@3_NA:BYTE			; g_LargeTheater
EXTRN	?g_bExitCampSelectFix@@3_NA:BYTE		; g_bExitCampSelectFix
EXTRN	?g_bCampSavedMenuHack@@3_NA:BYTE		; g_bCampSavedMenuHack
EXTRN	?CampaignGames@@3PAVC_TreeList@@A:DWORD		; CampaignGames
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	8

?gPlayerSquadronId@@3VVU_ID@@A DQ 01H DUP (?)		; gPlayerSquadronId
_TEMP_Settings DB 07H DUP (?)
_BSS	ENDS
;	COMDAT ?last_id@?1??DisplayJoinStatusWindow@@YAXH@Z@4JA
_BSS	SEGMENT
?last_id@?1??DisplayJoinStatusWindow@@YAXH@Z@4JA DD 01H DUP (?) ; `DisplayJoinStatusWindow'::`2'::last_id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@454cffae
CONST	SEGMENT
__real@454cffae DD 0454cffaer			; 3279.98
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GOGNFBAO@Cancel?5Join?6?$AA@
CONST	SEGMENT
??_C@_0N@GOGNFBAO@Cancel?5Join?6?$AA@ DB 'Cancel Join', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LLJPEDF@?$CFs?4frc?$AA@
CONST	SEGMENT
??_C@_06LLJPEDF@?$CFs?4frc?$AA@ DB '%s.frc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBNHNNMG@?$CFs?4his?$AA@
CONST	SEGMENT
??_C@_06LBNHNNMG@?$CFs?4his?$AA@ DB '%s.his', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOGOMMPD@cam?$AA@
CONST	SEGMENT
??_C@_03GOGOMMPD@cam?$AA@ DB 'cam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMIEDEKA@?$CFs?4cam?$AA@
CONST	SEGMENT
??_C@_06LMIEDEKA@?$CFs?4cam?$AA@ DB '%s.cam', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@
CONST	SEGMENT
??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@ DB '%s\*.cam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
CONST	SEGMENT
??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@ DB '%s\%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IKOBNNDE@save2?$AA@
CONST	SEGMENT
??_C@_05IKOBNNDE@save2?$AA@ DB 'save2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KBMMIOPH@save1?$AA@
CONST	SEGMENT
??_C@_05KBMMIOPH@save1?$AA@ DB 'save1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LINHLPLG@save0?$AA@
CONST	SEGMENT
??_C@_05LINHLPLG@save0?$AA@ DB 'save0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@
CONST	SEGMENT
??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@ DB '%d %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KAHNKOKO@?$CF1d?5?$CFs?0?5?$CF1d?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@KAHNKOKO@?$CF1d?5?$CFs?0?5?$CF1d?5?$CFs?$AA@ DB '%1d %s, %1d %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@ DB '%s %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJBCJBHP@cs_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0L@LJBCJBHP@cs_scf?4lst?$AA@ DB 'cs_scf.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFANFBLE@cs_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0L@JFANFBLE@cs_snd?4lst?$AA@ DB 'cs_snd.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IDLJDMD@cs_art?4lst?$AA@
CONST	SEGMENT
??_C@_0L@IDLJDMD@cs_art?4lst?$AA@ DB 'cs_art.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EFHDDHPD@cs_res?4lst?$AA@
CONST	SEGMENT
??_C@_0L@EFHDDHPD@cs_res?4lst?$AA@ DB 'cs_res.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?LoadSquadronInfo@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSquadronInfo@@YAXXZ$0
__unwindtable$?AddSquadronsToMap@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddSquadronsToMap@@YAXXZ$0
__unwindtable$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z$0
__unwindtable$?SetupMapSquadronWindow@@YAXHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$2
__ehfuncinfo$?LoadSquadronInfo@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadSquadronInfo@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddSquadronsToMap@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddSquadronsToMap@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupMapSquadronWindow@@YAXHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetupMapSquadronWindow@@YAXHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_gPlayerSquadronId$initializer$ DD FLAT:??__EgPlayerSquadronId@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?JoinStatusCancelCB@@YAXJFPAVC_Base@@@Z PROC		; JoinStatusCancelCB

; 1786 : {

	push	ebp
	mov	ebp, esp

; 1787 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@JoinStatus

; 1788 : 		return;

	jmp	SHORT $LN2@JoinStatus
$LN1@JoinStatus:

; 1789 : 
; 1790 : 	MonoPrint ("Cancel Join\n");

	push	OFFSET ??_C@_0N@GOGNFBAO@Cancel?5Join?6?$AA@
	call	_MonoPrint
	add	esp, 4

; 1791 : 
; 1792 : 	gMainHandler->HideWindow(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1793 : 
; 1794 : 	StopCampaignLoad ();

	call	?StopCampaignLoad@@YAXXZ		; StopCampaignLoad
$LN2@JoinStatus:

; 1795 : }

	pop	ebp
	ret	0
?JoinStatusCancelCB@@YAXJFPAVC_Base@@@Z ENDP		; JoinStatusCancelCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
?CopyinTempSettings@@YAXXZ PROC				; CopyinTempSettings

; 1647 : 	{

	push	ebp
	mov	ebp, esp

; 1648 : 	TheCampaign.GroundRatio=TEMP_Settings.GroundForces;

	movzx	ax, BYTE PTR _TEMP_Settings+5
	mov	WORD PTR ?TheCampaign@@3VCampaignClass@@A+74, ax

; 1649 : 	TheCampaign.AirRatio=TEMP_Settings.AirForces;

	movzx	cx, BYTE PTR _TEMP_Settings+3
	mov	WORD PTR ?TheCampaign@@3VCampaignClass@@A+76, cx

; 1650 : 	TheCampaign.AirDefenseRatio=TEMP_Settings.AirDefenses;

	movzx	dx, BYTE PTR _TEMP_Settings+4
	mov	WORD PTR ?TheCampaign@@3VCampaignClass@@A+78, dx

; 1651 : 	TheCampaign.NavalRatio=TEMP_Settings.NavalForces;

	movzx	ax, BYTE PTR _TEMP_Settings+6
	mov	WORD PTR ?TheCampaign@@3VCampaignClass@@A+80, ax

; 1652 : 	TheCampaign.EnemyAirExp=TEMP_Settings.PilotSkill;

	mov	cl, BYTE PTR _TEMP_Settings+1
	mov	BYTE PTR ?TheCampaign@@3VCampaignClass@@A+95, cl

; 1653 : 	TheCampaign.EnemyADExp=TEMP_Settings.SAMSkill;

	mov	dl, BYTE PTR _TEMP_Settings+2
	mov	BYTE PTR ?TheCampaign@@3VCampaignClass@@A+96, dl

; 1654 : 	}

	pop	ebp
	ret	0
?CopyinTempSettings@@YAXXZ ENDP				; CopyinTempSettings
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?UseChallengeSettingsCB@@YAXJFPAVC_Base@@@Z PROC	; UseChallengeSettingsCB

; 1612 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1613 : 	C_Window *win;
; 1614 : 	C_Button *btn;
; 1615 : 
; 1616 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@UseChallen

; 1617 : 		return;

	jmp	$LN6@UseChallen
$LN5@UseChallen:

; 1618 : 	if(CampSelMode != 2)

	cmp	DWORD PTR ?CampSelMode@@3HA, 2		; CampSelMode
	je	SHORT $LN4@UseChallen

; 1619 : 	{
; 1620 : 		PlayerOptions.SetCampEnemyAirExperience(TEMP_Settings.PilotSkill);

	movzx	ecx, BYTE PTR _TEMP_Settings+1
	push	ecx
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampEnemyAirExperience@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampEnemyAirExperience

; 1621 : 		PlayerOptions.SetCampEnemyGroundExperience(TEMP_Settings.SAMSkill);

	movzx	edx, BYTE PTR _TEMP_Settings+2
	push	edx
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampEnemyGroundExperience@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampEnemyGroundExperience
$LN4@UseChallen:

; 1622 : 	}
; 1623 : 
; 1624 : 	if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN3@UseChallen

; 1625 : 	{
; 1626 : 		PlayerOptions.SetCampAirRatio(TEMP_Settings.AirForces);

	movzx	eax, BYTE PTR _TEMP_Settings+3
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampAirRatio@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampAirRatio

; 1627 : 		PlayerOptions.SetCampAirDefenseRatio(TEMP_Settings.AirDefenses);

	movzx	ecx, BYTE PTR _TEMP_Settings+4
	push	ecx
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampAirDefenseRatio@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampAirDefenseRatio

; 1628 : 		PlayerOptions.SetCampGroundRatio(TEMP_Settings.GroundForces);

	movzx	edx, BYTE PTR _TEMP_Settings+5
	push	edx
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampGroundRatio@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampGroundRatio

; 1629 : 		PlayerOptions.SetCampNavalRatio(TEMP_Settings.NavalForces);

	movzx	eax, BYTE PTR _TEMP_Settings+6
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetCampNavalRatio@PlayerOptionsClass@@QAEXH@Z ; PlayerOptionsClass::SetCampNavalRatio
$LN3@UseChallen:

; 1630 : 	}
; 1631 : 	win=gMainHandler->FindWindow(CS_PUA_WIN);

	push	40300					; 00009d6cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1632 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@UseChallen

; 1633 : 	{
; 1634 : 		btn=(C_Button *)win->FindControl(SET_CHALLENGE);

	push	40922					; 00009fdaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1635 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN2@UseChallen

; 1636 : 		{
; 1637 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1638 : 			btn->SetState(TEMP_Settings.Challenge);

	movzx	cx, BYTE PTR _TEMP_Settings
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1639 : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@UseChallen:

; 1640 : 		}
; 1641 : 	}
; 1642 : 	LoadSquadronInfo();

	call	?LoadSquadronInfo@@YAXXZ		; LoadSquadronInfo

; 1643 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN6@UseChallen:

; 1644 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UseChallengeSettingsCB@@YAXJFPAVC_Base@@@Z ENDP	; UseChallengeSettingsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
tv82 = -12						; size = 4
_sldr$ = -8						; size = 4
_val$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z PROC		; SetSliderSettingsCB

; 1575 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi

; 1576 : 	long val;
; 1577 : 	C_Slider *sldr;
; 1578 : 
; 1579 : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN9@SetSliderS

; 1580 : 		return;

	jmp	$LN10@SetSliderS
$LN9@SetSliderS:

; 1581 : 	sldr=(C_Slider *)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _sldr$[ebp], ecx

; 1582 : 
; 1583 : 	val  = (sldr->GetSliderPos() - sldr->GetSliderMin())*4;

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	shl	esi, 2
	mov	DWORD PTR _val$[ebp], esi

; 1584 : 	val /= (sldr->GetSliderMax() - sldr->GetSliderMin());

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	eax, DWORD PTR _val$[ebp]
	cdq
	idiv	esi
	mov	DWORD PTR _val$[ebp], eax

; 1585 : 
; 1586 : 	switch(ID)

	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv82[ebp], edx
	mov	eax, DWORD PTR tv82[ebp]
	sub	eax, 40908				; 00009fccH
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 9
	ja	SHORT $LN1@SetSliderS
	mov	ecx, DWORD PTR tv82[ebp]
	movzx	edx, BYTE PTR $LN12@SetSliderS[ecx]
	jmp	DWORD PTR $LN13@SetSliderS[edx*4]
$LN6@SetSliderS:

; 1587 : 	{
; 1588 : 		case BAR_1_SCROLL:
; 1589 : 			if (val != TEMP_Settings.AirForces)

	movzx	eax, BYTE PTR _TEMP_Settings+3
	cmp	DWORD PTR _val$[ebp], eax
	je	SHORT $LN5@SetSliderS

; 1590 : 				{
; 1591 : 				TEMP_Settings.AirForces=static_cast<uchar>(val);

	mov	cl, BYTE PTR _val$[ebp]
	mov	BYTE PTR _TEMP_Settings+3, cl

; 1592 : 				// Force the aircraft field to update
; 1593 : 				LoadSquadronInfo();

	call	?LoadSquadronInfo@@YAXXZ		; LoadSquadronInfo
$LN5@SetSliderS:

; 1594 : 				}
; 1595 : 			break;

	jmp	SHORT $LN7@SetSliderS
$LN4@SetSliderS:

; 1596 : 		case BAR_2_SCROLL:
; 1597 : 			TEMP_Settings.AirDefenses=static_cast<uchar>(val);

	mov	dl, BYTE PTR _val$[ebp]
	mov	BYTE PTR _TEMP_Settings+4, dl

; 1598 : 			break;

	jmp	SHORT $LN7@SetSliderS
$LN3@SetSliderS:

; 1599 : 		case BAR_3_SCROLL:
; 1600 : 			TEMP_Settings.GroundForces=static_cast<uchar>(val);

	mov	al, BYTE PTR _val$[ebp]
	mov	BYTE PTR _TEMP_Settings+5, al

; 1601 : 			break;

	jmp	SHORT $LN7@SetSliderS
$LN2@SetSliderS:

; 1602 : 		case BAR_4_SCROLL:
; 1603 : 			TEMP_Settings.NavalForces=static_cast<uchar>(val);

	mov	cl, BYTE PTR _val$[ebp]
	mov	BYTE PTR _TEMP_Settings+6, cl

; 1604 : 			break;

	jmp	SHORT $LN7@SetSliderS
$LN1@SetSliderS:

; 1605 : 		default:
; 1606 : 			return;

	jmp	SHORT $LN10@SetSliderS
$LN7@SetSliderS:

; 1607 : 	}
; 1608 : 	CalcChallengeLevel();

	call	?CalcChallengeLevel@@YAXXZ		; CalcChallengeLevel
$LN10@SetSliderS:

; 1609 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@SetSliderS:
	DD	$LN6@SetSliderS
	DD	$LN4@SetSliderS
	DD	$LN3@SetSliderS
	DD	$LN2@SetSliderS
	DD	$LN1@SetSliderS
$LN12@SetSliderS:
	DB	0
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	3
?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z ENDP		; SetSliderSettingsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv72 = -8						; size = 4
_value$ = -1						; size = 1
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetSkillSettingsCB@@YAXJFPAVC_Base@@@Z PROC		; SetSkillSettingsCB

; 1537 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1538 : 	uchar value;
; 1539 : 
; 1540 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN12@SetSkillSe

; 1541 : 		return;

	jmp	SHORT $LN13@SetSkillSe
$LN12@SetSkillSe:

; 1542 : 
; 1543 : 	switch(((C_ListBox *)control)->GetTextID())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR tv72[ebp]
	sub	ecx, 40328				; 00009d88H
	mov	DWORD PTR tv72[ebp], ecx
	cmp	DWORD PTR tv72[ebp], 3
	ja	SHORT $LN5@SetSkillSe
	mov	edx, DWORD PTR tv72[ebp]
	jmp	DWORD PTR $LN15@SetSkillSe[edx*4]
$LN9@SetSkillSe:

; 1544 : 	{
; 1545 : 		case CADET_LEVEL:
; 1546 : 			value=1;

	mov	BYTE PTR _value$[ebp], 1

; 1547 : 			break;

	jmp	SHORT $LN10@SetSkillSe
$LN8@SetSkillSe:

; 1548 : 		case ROOKIE_LEVEL:
; 1549 : 			value=2;

	mov	BYTE PTR _value$[ebp], 2

; 1550 : 			break;

	jmp	SHORT $LN10@SetSkillSe
$LN7@SetSkillSe:

; 1551 : 		case VETERAN_LEVEL:
; 1552 : 			value=3;

	mov	BYTE PTR _value$[ebp], 3

; 1553 : 			break;

	jmp	SHORT $LN10@SetSkillSe
$LN6@SetSkillSe:

; 1554 : 		case ACE_LEVEL:
; 1555 : 			value=4;

	mov	BYTE PTR _value$[ebp], 4

; 1556 : 			break;

	jmp	SHORT $LN10@SetSkillSe
$LN5@SetSkillSe:

; 1557 : 		default:
; 1558 : 			value=0;

	mov	BYTE PTR _value$[ebp], 0
$LN10@SetSkillSe:

; 1559 : 			break;
; 1560 : 	}
; 1561 : 	switch(ID)

	mov	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	cmp	DWORD PTR tv75[ebp], 40904		; 00009fc8H
	je	SHORT $LN1@SetSkillSe
	cmp	DWORD PTR tv75[ebp], 40905		; 00009fc9H
	je	SHORT $LN2@SetSkillSe
	jmp	SHORT $LN3@SetSkillSe
$LN2@SetSkillSe:

; 1562 : 	{
; 1563 : 		case PILOT_SKILL:
; 1564 : 			TEMP_Settings.PilotSkill=value;

	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR _TEMP_Settings+1, cl

; 1565 : 			break;

	jmp	SHORT $LN3@SetSkillSe
$LN1@SetSkillSe:

; 1566 : 		case SAM_SKILL:
; 1567 : 			TEMP_Settings.SAMSkill=value;

	mov	dl, BYTE PTR _value$[ebp]
	mov	BYTE PTR _TEMP_Settings+2, dl
$LN3@SetSkillSe:

; 1568 : 			break;
; 1569 : 	}
; 1570 : 
; 1571 : 	CalcChallengeLevel();

	call	?CalcChallengeLevel@@YAXXZ		; CalcChallengeLevel
$LN13@SetSkillSe:

; 1572 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@SetSkillSe:
	DD	$LN6@SetSkillSe
	DD	$LN7@SetSkillSe
	DD	$LN8@SetSkillSe
	DD	$LN9@SetSkillSe
?SetSkillSettingsCB@@YAXJFPAVC_Base@@@Z ENDP		; SetSkillSettingsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CampDelVerifyCB@@YAXJFPAVC_Base@@@Z PROC		; CampDelVerifyCB

; 1528 : {

	push	ebp
	mov	ebp, esp

; 1529 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@CampDelVer

; 1530 : 		return;

	jmp	SHORT $LN3@CampDelVer
$LN2@CampDelVer:

; 1531 : 
; 1532 : 	if(gLastCampFilename[0])

	mov	ecx, 1
	imul	ecx, 0
	movsx	edx, BYTE PTR ?gLastCampFilename@@3PADA[ecx]
	test	edx, edx
	je	SHORT $LN3@CampDelVer

; 1533 : 		VerifyDelete(0,CampDelFileCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CampDelFileCB@@YAXJFPAVC_Base@@@Z ; CampDelFileCB
	push	0
	call	?VerifyDelete@@YAXJP6AXJFPAVC_Base@@@Z1@Z ; VerifyDelete
	add	esp, 12					; 0000000cH
$LN3@CampDelVer:

; 1534 : }

	pop	ebp
	ret	0
?CampDelVerifyCB@@YAXJFPAVC_Base@@@Z ENDP		; CampDelVerifyCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
$T1 = -536						; size = 4
_win$ = -532						; size = 4
_tree$ = -528						; size = 4
_path$2 = -524						; size = 260
_filename$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampDelFileCB@@YAXJFPAVC_Base@@@Z PROC			; CampDelFileCB

; 1487 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1488 : 	C_TreeList *tree;
; 1489 : 	C_Window *win;
; 1490 : 
; 1491 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@CampDelFil

; 1492 : 		return;

	jmp	$LN7@CampDelFil
$LN5@CampDelFil:

; 1493 : 
; 1494 : 	win=gMainHandler->FindWindow(CS_SELECT_WIN);

	push	40200					; 00009d08H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1495 : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN4@CampDelFil

; 1496 : 		return;

	jmp	$LN7@CampDelFil
$LN4@CampDelFil:

; 1497 : 
; 1498 : 	gMainHandler->HideWindow(control->Parent_); // Close Verify Window

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 1499 : 
; 1500 : // 2002-02-04 MN modified to also delete .his/.frc file
; 1501 : 	_TCHAR filename[MAX_PATH];
; 1502 : 	_stprintf(filename,"%s.cam",gLastCampFilename);

	push	OFFSET ?gLastCampFilename@@3PADA	; gLastCampFilename
	push	OFFSET ??_C@_06LMIEDEKA@?$CFs?4cam?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1503 : 	if(!CheckExclude(filename,FalconCampUserSaveDirectory,CampExcludeList,"cam"))

	push	OFFSET ??_C@_03GOGOMMPD@cam?$AA@
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN3@CampDelFil

; 1504 : 	{
; 1505 : 		DeleteFile(filename); // .cam file

	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	DWORD PTR __imp__DeleteFileA@4

; 1506 : 		_stprintf(filename,"%s.his",gLastCampFilename);

	push	OFFSET ?gLastCampFilename@@3PADA	; gLastCampFilename
	push	OFFSET ??_C@_06LBNHNNMG@?$CFs?4his?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1507 : 		DeleteFile(filename);

	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeleteFileA@4

; 1508 : 		_stprintf(filename,"%s.frc",gLastCampFilename);

	push	OFFSET ?gLastCampFilename@@3PADA	; gLastCampFilename
	push	OFFSET ??_C@_06LLJPEDF@?$CFs?4frc?$AA@
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1509 : 		DeleteFile(filename);

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteFileA@4

; 1510 : 		gLastCampFilename[0]=0;

	mov	ecx, 1
	imul	ecx, 0
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN8@CampDelFil
	jmp	SHORT $LN9@CampDelFil
$LN8@CampDelFil:
	call	___report_rangecheckfailure
$LN9@CampDelFil:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR ?gLastCampFilename@@3PADA[edx], 0
$LN3@CampDelFil:

; 1511 : 	}
; 1512 : 
; 1513 : 	tree=(C_TreeList*)win->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1514 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN2@CampDelFil

; 1515 : 	{
; 1516 : 	    char path[_MAX_PATH];
; 1517 : 	    sprintf (path, "%s\\*.cam", FalconCampaignSaveDirectory);

	push	OFFSET ?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	push	OFFSET ??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@
	lea	eax, DWORD PTR _path$2[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1518 : 	    tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1519 : 		GetFileListTree(tree, path, CampExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	lea	ecx, DWORD PTR _path$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 1520 : 		tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1521 : 		if(tree->Parent_)

	mov	eax, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN2@CampDelFil

; 1522 : 			tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN2@CampDelFil:

; 1523 : 	}
; 1524 : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo
$LN7@CampDelFil:

; 1525 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampDelFileCB@@YAXJFPAVC_Base@@@Z ENDP			; CampDelFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseChallengeCB@@YAXJFPAVC_Base@@@Z PROC		; CloseChallengeCB

; 1481 : {

	push	ebp
	mov	ebp, esp

; 1482 : 	CopySettingsToTemp();

	call	?CopySettingsToTemp@@YAXXZ		; CopySettingsToTemp

; 1483 : 	CloseWindowCB(ID, hittype, control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	movzx	ecx, WORD PTR _hittype$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH

; 1484 : }

	pop	ebp
	ret	0
?CloseChallengeCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseChallengeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenChallengeCB@@YAXJFPAVC_Base@@@Z PROC		; OpenChallengeCB

; 1468 : {

	push	ebp
	mov	ebp, esp

; 1469 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenChalle

; 1470 : 		return;

	jmp	SHORT $LN2@OpenChalle
$LN1@OpenChalle:

; 1471 : 
; 1472 : 	// Copy in current settings
; 1473 : 	CopySettingsToTemp();

	call	?CopySettingsToTemp@@YAXXZ		; CopySettingsToTemp

; 1474 : 	CalcChallengeLevel();

	call	?CalcChallengeLevel@@YAXXZ		; CalcChallengeLevel

; 1475 : 	SetCampaignLevels();

	call	?SetCampaignLevels@@YAXXZ		; SetCampaignLevels

; 1476 : 
; 1477 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenChalle:

; 1478 : }

	pop	ebp
	ret	0
?OpenChallengeCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenChallengeCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
tv72 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?ChallengeLevelCB@@YAXJFPAVC_Base@@@Z PROC		; ChallengeLevelCB

; 1396 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1397 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN13@ChallengeL

; 1398 : 		return;

	jmp	$LN14@ChallengeL
$LN13@ChallengeL:

; 1399 : 
; 1400 : 	switch(((C_ListBox *)control)->GetTextID())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR tv72[ebp]
	sub	ecx, 40328				; 00009d88H
	mov	DWORD PTR tv72[ebp], ecx
	cmp	DWORD PTR tv72[ebp], 3
	ja	$LN2@ChallengeL
	mov	edx, DWORD PTR tv72[ebp]
	jmp	DWORD PTR $LN16@ChallengeL[edx*4]
$LN10@ChallengeL:

; 1401 : 	{
; 1402 : 		case ACE_LEVEL:
; 1403 : 			TEMP_Settings.Challenge=4;

	mov	BYTE PTR _TEMP_Settings, 4

; 1404 : 			TEMP_Settings.PilotSkill=4;

	mov	BYTE PTR _TEMP_Settings+1, 4

; 1405 : 			TEMP_Settings.SAMSkill=4;

	mov	BYTE PTR _TEMP_Settings+2, 4

; 1406 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN9@ChallengeL

; 1407 : 			{
; 1408 : 				TEMP_Settings.AirForces=0;

	mov	BYTE PTR _TEMP_Settings+3, 0

; 1409 : 				TEMP_Settings.AirDefenses=0;

	mov	BYTE PTR _TEMP_Settings+4, 0

; 1410 : 				TEMP_Settings.GroundForces=0;

	mov	BYTE PTR _TEMP_Settings+5, 0

; 1411 : 				TEMP_Settings.NavalForces=0;

	mov	BYTE PTR _TEMP_Settings+6, 0
$LN9@ChallengeL:

; 1412 : 			}
; 1413 : 			break;

	jmp	$LN11@ChallengeL
$LN8@ChallengeL:

; 1414 : 		case VETERAN_LEVEL:
; 1415 : 			TEMP_Settings.Challenge=3;

	mov	BYTE PTR _TEMP_Settings, 3

; 1416 : 			TEMP_Settings.PilotSkill=3;

	mov	BYTE PTR _TEMP_Settings+1, 3

; 1417 : 			TEMP_Settings.SAMSkill=3;

	mov	BYTE PTR _TEMP_Settings+2, 3

; 1418 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN7@ChallengeL

; 1419 : 			{
; 1420 : 				TEMP_Settings.AirForces=1;

	mov	BYTE PTR _TEMP_Settings+3, 1

; 1421 : 				TEMP_Settings.AirDefenses=1;

	mov	BYTE PTR _TEMP_Settings+4, 1

; 1422 : 				TEMP_Settings.GroundForces=1;

	mov	BYTE PTR _TEMP_Settings+5, 1

; 1423 : 				TEMP_Settings.NavalForces=1;

	mov	BYTE PTR _TEMP_Settings+6, 1
$LN7@ChallengeL:

; 1424 : 			}
; 1425 : 			break;

	jmp	$LN11@ChallengeL
$LN6@ChallengeL:

; 1426 : 		case ROOKIE_LEVEL:
; 1427 : 			TEMP_Settings.Challenge=2;

	mov	BYTE PTR _TEMP_Settings, 2

; 1428 : 			TEMP_Settings.PilotSkill=2;

	mov	BYTE PTR _TEMP_Settings+1, 2

; 1429 : 			TEMP_Settings.SAMSkill=2;

	mov	BYTE PTR _TEMP_Settings+2, 2

; 1430 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN5@ChallengeL

; 1431 : 			{
; 1432 : 				TEMP_Settings.AirForces=2;

	mov	BYTE PTR _TEMP_Settings+3, 2

; 1433 : 				TEMP_Settings.AirDefenses=2;

	mov	BYTE PTR _TEMP_Settings+4, 2

; 1434 : 				TEMP_Settings.GroundForces=2;

	mov	BYTE PTR _TEMP_Settings+5, 2

; 1435 : 				TEMP_Settings.NavalForces=2;

	mov	BYTE PTR _TEMP_Settings+6, 2
$LN5@ChallengeL:

; 1436 : 			}
; 1437 : 			break;

	jmp	SHORT $LN11@ChallengeL
$LN4@ChallengeL:

; 1438 : 		case CADET_LEVEL:
; 1439 : 			TEMP_Settings.Challenge=1;

	mov	BYTE PTR _TEMP_Settings, 1

; 1440 : 			TEMP_Settings.PilotSkill=1;

	mov	BYTE PTR _TEMP_Settings+1, 1

; 1441 : 			TEMP_Settings.SAMSkill=1;

	mov	BYTE PTR _TEMP_Settings+2, 1

; 1442 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN3@ChallengeL

; 1443 : 			{
; 1444 : 				TEMP_Settings.AirForces=3;

	mov	BYTE PTR _TEMP_Settings+3, 3

; 1445 : 				TEMP_Settings.AirDefenses=3;

	mov	BYTE PTR _TEMP_Settings+4, 3

; 1446 : 				TEMP_Settings.GroundForces=3;

	mov	BYTE PTR _TEMP_Settings+5, 3

; 1447 : 				TEMP_Settings.NavalForces=3;

	mov	BYTE PTR _TEMP_Settings+6, 3
$LN3@ChallengeL:

; 1448 : 			}
; 1449 : 			break;

	jmp	SHORT $LN11@ChallengeL
$LN2@ChallengeL:

; 1450 : 		default:
; 1451 : 			TEMP_Settings.Challenge=0;

	mov	BYTE PTR _TEMP_Settings, 0

; 1452 : 			TEMP_Settings.PilotSkill=0;

	mov	BYTE PTR _TEMP_Settings+1, 0

; 1453 : 			TEMP_Settings.SAMSkill=0;

	mov	BYTE PTR _TEMP_Settings+2, 0

; 1454 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN11@ChallengeL

; 1455 : 			{
; 1456 : 				TEMP_Settings.AirForces=4;

	mov	BYTE PTR _TEMP_Settings+3, 4

; 1457 : 				TEMP_Settings.AirDefenses=4;

	mov	BYTE PTR _TEMP_Settings+4, 4

; 1458 : 				TEMP_Settings.GroundForces=4;

	mov	BYTE PTR _TEMP_Settings+5, 4

; 1459 : 				TEMP_Settings.NavalForces=4;

	mov	BYTE PTR _TEMP_Settings+6, 4
$LN11@ChallengeL:

; 1460 : 			}
; 1461 : 			break;
; 1462 : 	}
; 1463 : 	SetCampaignLevels();

	call	?SetCampaignLevels@@YAXXZ		; SetCampaignLevels

; 1464 : 	CalcChallengeLevel();

	call	?CalcChallengeLevel@@YAXXZ		; CalcChallengeLevel
$LN14@ChallengeL:

; 1465 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@ChallengeL:
	DD	$LN10@ChallengeL
	DD	$LN8@ChallengeL
	DD	$LN6@ChallengeL
	DD	$LN4@ChallengeL
?ChallengeLevelCB@@YAXJFPAVC_Base@@@Z ENDP		; ChallengeLevelCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
tv188 = -28						; size = 4
tv152 = -24						; size = 4
tv84 = -20						; size = 4
_val$ = -16						; size = 4
_win$ = -12						; size = 4
_lb$ = -8						; size = 4
_sldr$ = -4						; size = 4
?SetCampaignLevels@@YAXXZ PROC				; SetCampaignLevels

; 1254 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 1255 : 	C_Window *win;
; 1256 : 	C_Slider *sldr;
; 1257 : 	C_ListBox *lb;
; 1258 : 	long val;
; 1259 : 
; 1260 : 	win=gMainHandler->FindWindow(CHALLENGE_WIN);

	push	40903					; 00009fc7H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1261 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN30@SetCampaig

; 1262 : 	{
; 1263 : 		lb=(C_ListBox *)win->FindControl(CHALLENGE_LIST);

	push	40314					; 00009d7aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1264 : 		if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	$LN28@SetCampaig

; 1265 : 		{
; 1266 : 			lb->Refresh();

	mov	eax, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1267 : 			switch(TEMP_Settings.Challenge)

	movzx	ecx, BYTE PTR _TEMP_Settings
	mov	DWORD PTR tv84[ebp], ecx
	mov	edx, DWORD PTR tv84[ebp]
	sub	edx, 1
	mov	DWORD PTR tv84[ebp], edx
	cmp	DWORD PTR tv84[ebp], 3
	ja	SHORT $LN21@SetCampaig
	mov	eax, DWORD PTR tv84[ebp]
	jmp	DWORD PTR $LN32@SetCampaig[eax*4]
$LN25@SetCampaig:

; 1268 : 			{
; 1269 : 				case 1:
; 1270 : 					lb->SetValue(CADET_LEVEL);

	push	40331					; 00009d8bH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1271 : 					break;

	jmp	SHORT $LN26@SetCampaig
$LN24@SetCampaig:

; 1272 : 				case 2:
; 1273 : 					lb->SetValue(ROOKIE_LEVEL);

	push	40330					; 00009d8aH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1274 : 					break;

	jmp	SHORT $LN26@SetCampaig
$LN23@SetCampaig:

; 1275 : 				case 3:
; 1276 : 					lb->SetValue(VETERAN_LEVEL);

	push	40329					; 00009d89H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1277 : 					break;

	jmp	SHORT $LN26@SetCampaig
$LN22@SetCampaig:

; 1278 : 				case 4:
; 1279 : 					lb->SetValue(ACE_LEVEL);

	push	40328					; 00009d88H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1280 : 					break;

	jmp	SHORT $LN26@SetCampaig
$LN21@SetCampaig:

; 1281 : 				default:
; 1282 : 					lb->SetValue(RECRUIT_LEVEL);

	push	40332					; 00009d8cH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN26@SetCampaig:

; 1283 : 					break;
; 1284 : 			}
; 1285 : 			lb->Refresh();

	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN28@SetCampaig:

; 1286 : 		}
; 1287 : 		lb=(C_ListBox *)win->FindControl(PILOT_SKILL);

	push	40905					; 00009fc9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1288 : 		if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	$LN20@SetCampaig

; 1289 : 		{
; 1290 : 			lb->Refresh();

	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1291 : 			switch(TEMP_Settings.PilotSkill)

	movzx	ecx, BYTE PTR _TEMP_Settings+1
	mov	DWORD PTR tv152[ebp], ecx
	mov	edx, DWORD PTR tv152[ebp]
	sub	edx, 1
	mov	DWORD PTR tv152[ebp], edx
	cmp	DWORD PTR tv152[ebp], 3
	ja	SHORT $LN13@SetCampaig
	mov	eax, DWORD PTR tv152[ebp]
	jmp	DWORD PTR $LN33@SetCampaig[eax*4]
$LN17@SetCampaig:

; 1292 : 			{
; 1293 : 				case 1:
; 1294 : 					lb->SetValue(CADET_LEVEL);

	push	40331					; 00009d8bH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1295 : 					break;

	jmp	SHORT $LN18@SetCampaig
$LN16@SetCampaig:

; 1296 : 				case 2:
; 1297 : 					lb->SetValue(ROOKIE_LEVEL);

	push	40330					; 00009d8aH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1298 : 					break;

	jmp	SHORT $LN18@SetCampaig
$LN15@SetCampaig:

; 1299 : 				case 3:
; 1300 : 					lb->SetValue(VETERAN_LEVEL);

	push	40329					; 00009d89H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1301 : 					break;

	jmp	SHORT $LN18@SetCampaig
$LN14@SetCampaig:

; 1302 : 				case 4:
; 1303 : 					lb->SetValue(ACE_LEVEL);

	push	40328					; 00009d88H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1304 : 					break;

	jmp	SHORT $LN18@SetCampaig
$LN13@SetCampaig:

; 1305 : 				default:
; 1306 : 					lb->SetValue(RECRUIT_LEVEL);

	push	40332					; 00009d8cH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN18@SetCampaig:

; 1307 : 					break;
; 1308 : 			}
; 1309 : 			lb->Refresh();

	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN20@SetCampaig:

; 1310 : 		}
; 1311 : 		lb=(C_ListBox *)win->FindControl(SAM_SKILL);

	push	40904					; 00009fc8H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1312 : 		if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	$LN12@SetCampaig

; 1313 : 		{
; 1314 : 			lb->Refresh();

	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1315 : 			switch(TEMP_Settings.SAMSkill)

	movzx	ecx, BYTE PTR _TEMP_Settings+2
	mov	DWORD PTR tv188[ebp], ecx
	mov	edx, DWORD PTR tv188[ebp]
	sub	edx, 1
	mov	DWORD PTR tv188[ebp], edx
	cmp	DWORD PTR tv188[ebp], 3
	ja	SHORT $LN5@SetCampaig
	mov	eax, DWORD PTR tv188[ebp]
	jmp	DWORD PTR $LN34@SetCampaig[eax*4]
$LN9@SetCampaig:

; 1316 : 			{
; 1317 : 				case 1:
; 1318 : 					lb->SetValue(CADET_LEVEL);

	push	40331					; 00009d8bH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1319 : 					break;

	jmp	SHORT $LN10@SetCampaig
$LN8@SetCampaig:

; 1320 : 				case 2:
; 1321 : 					lb->SetValue(ROOKIE_LEVEL);

	push	40330					; 00009d8aH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1322 : 					break;

	jmp	SHORT $LN10@SetCampaig
$LN7@SetCampaig:

; 1323 : 				case 3:
; 1324 : 					lb->SetValue(VETERAN_LEVEL);

	push	40329					; 00009d89H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1325 : 					break;

	jmp	SHORT $LN10@SetCampaig
$LN6@SetCampaig:

; 1326 : 				case 4:
; 1327 : 					lb->SetValue(ACE_LEVEL);

	push	40328					; 00009d88H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 1328 : 					break;

	jmp	SHORT $LN10@SetCampaig
$LN5@SetCampaig:

; 1329 : 				default:
; 1330 : 					lb->SetValue(RECRUIT_LEVEL);

	push	40332					; 00009d8cH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN10@SetCampaig:

; 1331 : 					break;
; 1332 : 			}
; 1333 : 			lb->Refresh();

	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN12@SetCampaig:

; 1334 : 		}
; 1335 : 
; 1336 : 		sldr=(C_Slider *)win->FindControl(BAR_1_SCROLL);

	push	40908					; 00009fccH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1337 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@SetCampaig

; 1338 : 		{
; 1339 : 			sldr->Refresh();

	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1340 : 			val=((sldr->GetSliderMax()-sldr->GetSliderMin()) * TEMP_Settings.AirForces)/4;

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	movzx	ecx, BYTE PTR _TEMP_Settings+3
	imul	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _val$[ebp], eax

; 1341 : 			sldr->SetSliderPos(val+sldr->GetSliderMin());

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	add	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1342 : 			sldr->Refresh();

	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN4@SetCampaig:

; 1343 : 		}
; 1344 : 		sldr=(C_Slider *)win->FindControl(BAR_2_SCROLL);

	push	40911					; 00009fcfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1345 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN3@SetCampaig

; 1346 : 		{
; 1347 : 			sldr->Refresh();

	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1348 : 			val=((sldr->GetSliderMax()-sldr->GetSliderMin()) * TEMP_Settings.AirDefenses)/4;

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	movzx	ecx, BYTE PTR _TEMP_Settings+4
	imul	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _val$[ebp], eax

; 1349 : 			sldr->SetSliderPos(val+sldr->GetSliderMin());

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	add	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1350 : 			sldr->Refresh();

	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN3@SetCampaig:

; 1351 : 		}
; 1352 : 		sldr=(C_Slider *)win->FindControl(BAR_3_SCROLL);

	push	40914					; 00009fd2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1353 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN2@SetCampaig

; 1354 : 		{
; 1355 : 			sldr->Refresh();

	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1356 : 			val=((sldr->GetSliderMax()-sldr->GetSliderMin()) * TEMP_Settings.GroundForces)/4;

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	movzx	ecx, BYTE PTR _TEMP_Settings+5
	imul	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _val$[ebp], eax

; 1357 : 			sldr->SetSliderPos(val+sldr->GetSliderMin());

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	add	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1358 : 			sldr->Refresh();

	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN2@SetCampaig:

; 1359 : 		}
; 1360 : 		sldr=(C_Slider *)win->FindControl(BAR_4_SCROLL);

	push	40917					; 00009fd5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1361 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN30@SetCampaig

; 1362 : 		{
; 1363 : 			sldr->Refresh();

	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1364 : 			val=((sldr->GetSliderMax()-sldr->GetSliderMin()) * TEMP_Settings.NavalForces)/4;

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	movzx	ecx, BYTE PTR _TEMP_Settings+6
	imul	esi, ecx
	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _val$[ebp], eax

; 1365 : 			sldr->SetSliderPos(val+sldr->GetSliderMin());

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	add	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 1366 : 			sldr->Refresh();

	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN30@SetCampaig:

; 1367 : 		}
; 1368 : 	}
; 1369 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN32@SetCampaig:
	DD	$LN25@SetCampaig
	DD	$LN24@SetCampaig
	DD	$LN23@SetCampaig
	DD	$LN22@SetCampaig
$LN33@SetCampaig:
	DD	$LN17@SetCampaig
	DD	$LN16@SetCampaig
	DD	$LN15@SetCampaig
	DD	$LN14@SetCampaig
$LN34@SetCampaig:
	DD	$LN9@SetCampaig
	DD	$LN8@SetCampaig
	DD	$LN7@SetCampaig
	DD	$LN6@SetCampaig
?SetCampaignLevels@@YAXXZ ENDP				; SetCampaignLevels
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_tmpID$ = -12						; size = 4
_game$ = -8						; size = 4
_item$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampSelectGameCB@@YAXJFPAVC_Base@@@Z PROC		; CampSelectGameCB

; 1211 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1212 : 	VU_ID *tmpID;
; 1213 : 	FalconGameEntity *game;
; 1214 : 	TREELIST *item;
; 1215 : 
; 1216 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN9@CampSelect

; 1217 : 		return;

	jmp	$LN10@CampSelect
$LN9@CampSelect:

; 1218 : 
; 1219 : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 1220 : 	item=((C_TreeList *)control)->GetLastItem();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 1221 : 	if(item == NULL) return;

	cmp	DWORD PTR _item$[ebp], 0
	jne	SHORT $LN8@CampSelect
	jmp	$LN10@CampSelect
$LN8@CampSelect:

; 1222 : 	if(item->Item_ == NULL) return;

	mov	eax, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN7@CampSelect
	jmp	$LN10@CampSelect
$LN7@CampSelect:

; 1223 : 
; 1224 : 	if(item->Type_ == C_TYPE_MENU)

	mov	ecx, DWORD PTR _item$[ebp]
	cmp	DWORD PTR [ecx+4], 49			; 00000031H
	jne	$LN10@CampSelect

; 1225 : 	{
; 1226 : 		if(!item->Item_->GetState())

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	movsx	ecx, ax
	test	ecx, ecx
	jne	$LN5@CampSelect

; 1227 : 		{
; 1228 : 			item->Item_->SetState(1);

	push	1
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1229 : 			item->Item_->Refresh();

	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1230 : 			tmpID=(VU_ID *)item->Item_->GetUserPtr(_UI95_VU_ID_SLOT_);

	push	6
	mov	ecx, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	call	?GetUserPtr@C_Base@@QAEPAXJ@Z		; C_Base::GetUserPtr
	mov	DWORD PTR _tmpID$[ebp], eax

; 1231 : 			if(tmpID)

	cmp	DWORD PTR _tmpID$[ebp], 0
	je	SHORT $LN4@CampSelect

; 1232 : 			{
; 1233 : 				game = (FalconGameEntity*) vuDatabase->Find(*tmpID);

	mov	edx, DWORD PTR _tmpID$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _game$[ebp], eax

; 1234 : 				gCommsMgr->LookAtGame(game);

	mov	edx, DWORD PTR _game$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame

; 1235 : 				if (game)

	cmp	DWORD PTR _game$[ebp], 0
	je	SHORT $LN4@CampSelect

; 1236 : 				{
; 1237 : 					if(game->GetGameType() == game_Campaign)

	mov	ecx, DWORD PTR _game$[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	cmp	eax, 4
	jne	SHORT $LN4@CampSelect

; 1238 : 						SendMessage(gMainHandler->GetAppWnd(),FM_JOIN_CAMPAIGN,JOIN_PRELOAD_ONLY,game_Campaign);

	push	4
	push	1
	push	1036					; 0000040cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__SendMessageA@16
$LN4@CampSelect:

; 1239 : 				}
; 1240 : 			}
; 1241 : 		}
; 1242 : 		else

	jmp	SHORT $LN10@CampSelect
$LN5@CampSelect:

; 1243 : 		{
; 1244 : 			item->Item_->SetState(0);

	push	0
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+56]
	call	edx

; 1245 : 			item->Item_->Refresh();

	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 1246 : 			gCommsMgr->LookAtGame(NULL);

	push	0
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?LookAtGame@UIComms@@QAEHPAVVuGameEntity@@@Z ; UIComms::LookAtGame

; 1247 : 			DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo
$LN10@CampSelect:

; 1248 : 		}
; 1249 : 	}
; 1250 : 	//SetCursor(gCursors[CRSR_F16]);
; 1251 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CampSelectGameCB@@YAXJFPAVC_Base@@@Z ENDP		; CampSelectGameCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
$T1 = -288						; size = 4
tv133 = -284						; size = 4
tv66 = -280						; size = 4
_win$ = -276						; size = 4
_tree$ = -272						; size = 4
_sldr$ = -268						; size = 4
_path$2 = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z PROC		; SetCampaignSelectCB

; 1089 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 1090 : 	C_Window *win;
; 1091 : 	C_Slider *sldr;
; 1092 : 	C_TreeList *tree;
; 1093 : 
; 1094 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN34@SetCampaig

; 1095 : 		return;

	jmp	$LN36@SetCampaig
$LN34@SetCampaig:

; 1096 : 
; 1097 : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 40203		; 00009d0bH
	je	SHORT $LN31@SetCampaig
	cmp	DWORD PTR tv66[ebp], 40204		; 00009d0cH
	je	SHORT $LN29@SetCampaig
	cmp	DWORD PTR tv66[ebp], 40205		; 00009d0dH
	je	SHORT $LN26@SetCampaig
	jmp	SHORT $LN32@SetCampaig
$LN31@SetCampaig:

; 1098 : 	{
; 1099 : 		case CS_NEW_CTRL:
; 1100 : 			if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN30@SetCampaig

; 1101 : 				return;

	jmp	$LN36@SetCampaig
$LN30@SetCampaig:

; 1102 : 			break;

	jmp	SHORT $LN32@SetCampaig
$LN29@SetCampaig:

; 1103 : 		case CS_LOAD_CTRL:
; 1104 : //dpc CampSavedWindowRefreshHack
; 1105 : //Enable refresh of Campaign load menu if CAMP.SAVED TAB is clicked.
; 1106 : //This is a hack to enable user to refresh saved campaign list manually.
; 1107 : //Ideally after exiting Campaing to Main UI this list should be refreshed automatically
; 1108 : //and last played campaign selected. This is a compromise solution - last
; 1109 : //choosen campaign is selected but user has to refresh list manually.
; 1110 : 			if (!g_bCampSavedMenuHack)

	movzx	edx, BYTE PTR ?g_bCampSavedMenuHack@@3_NA ; g_bCampSavedMenuHack
	test	edx, edx
	jne	SHORT $LN28@SetCampaig

; 1111 : 			{
; 1112 : 				if(CampSelMode == 1)

	cmp	DWORD PTR ?CampSelMode@@3HA, 1		; CampSelMode
	jne	SHORT $LN28@SetCampaig

; 1113 : 				return;

	jmp	$LN36@SetCampaig
$LN28@SetCampaig:

; 1114 : 			}
; 1115 : //end CampSavedWindowRefreshHack
; 1116 : 			break;

	jmp	SHORT $LN32@SetCampaig
$LN26@SetCampaig:

; 1117 : 		case CS_JOIN_CTRL:
; 1118 : 			if(CampSelMode == 2)

	cmp	DWORD PTR ?CampSelMode@@3HA, 2		; CampSelMode
	jne	SHORT $LN32@SetCampaig

; 1119 : 				return;

	jmp	$LN36@SetCampaig
$LN32@SetCampaig:

; 1120 : 			break;
; 1121 : 	}
; 1122 : 
; 1123 : 	SelectScenarioButtons(0); // Unselect any Scenario

	push	0
	call	?SelectScenarioButtons@@YAXJ@Z		; SelectScenarioButtons
	add	esp, 4

; 1124 : 
; 1125 : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 1126 : 	if(control->Parent_)

	mov	eax, DWORD PTR _control$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN24@SetCampaig

; 1127 : 	{
; 1128 : 		control->Parent_->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 1129 : 		control->Parent_->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 1130 : 		control->Parent_->HideCluster(control->GetUserNumber(2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN24@SetCampaig:

; 1131 : 	}
; 1132 : 	control->Parent_->RefreshWindow();

	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 1133 : 	gLastCampFilename[0]=0;

	mov	edx, 1
	imul	edx, 0
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN37@SetCampaig
	jmp	SHORT $LN38@SetCampaig
$LN37@SetCampaig:
	call	___report_rangecheckfailure
$LN38@SetCampaig:
	mov	eax, DWORD PTR $T1[ebp]
	mov	BYTE PTR ?gLastCampFilename@@3PADA[eax], 0

; 1134 : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv133[ebp], ecx
	cmp	DWORD PTR tv133[ebp], 40203		; 00009d0bH
	je	SHORT $LN21@SetCampaig
	cmp	DWORD PTR tv133[ebp], 40204		; 00009d0cH
	je	SHORT $LN20@SetCampaig
	cmp	DWORD PTR tv133[ebp], 40205		; 00009d0dH
	je	$LN17@SetCampaig
	jmp	$LN22@SetCampaig
$LN21@SetCampaig:

; 1135 : 	{
; 1136 : 		case CS_NEW_CTRL:
; 1137 : 			CampSelMode=0;

	mov	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode

; 1138 : 			break;

	jmp	$LN22@SetCampaig
$LN20@SetCampaig:

; 1139 : 		case CS_LOAD_CTRL:
; 1140 : 			CampSelMode=1;

	mov	DWORD PTR ?CampSelMode@@3HA, 1		; CampSelMode

; 1141 : 			tree=(C_TreeList*)control->Parent_->FindControl(FILELIST_TREE);

	push	506					; 000001faH
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1142 : 			if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN19@SetCampaig

; 1143 : 			{
; 1144 : 				tree->DeleteBranch(tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch

; 1145 : 				tree->SetUserNumber(0,1);

	push	1
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1146 : 				tree->SetSortType(TREE_SORT_CALLBACK);

	push	3
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortType@C_TreeList@@QAEXF@Z	; C_TreeList::SetSortType

; 1147 : 				tree->SetSortCallback(FileNameSortCB);

	push	OFFSET ?FileNameSortCB@@YAHPAVTREELIST@@0@Z ; FileNameSortCB
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ; C_TreeList::SetSortCallback

; 1148 : 				tree->SetCallback(LoadCampaignFileCB);

	push	OFFSET ?LoadCampaignFileCB@@YAXJFPAVC_Base@@@Z ; LoadCampaignFileCB
	mov	eax, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 1149 : 			    char path[_MAX_PATH];
; 1150 : 				sprintf (path, "%s\\*.cam", FalconCampaignSaveDirectory);

	push	OFFSET ?FalconCampaignSaveDirectory@@3PADA ; FalconCampaignSaveDirectory
	push	OFFSET ??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@
	lea	ecx, DWORD PTR _path$2[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 1151 : 				GetFileListTree(tree, path, CampExcludeList,C_TYPE_ITEM,TRUE,0);

	push	0
	push	1
	push	50					; 00000032H
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	lea	edx, DWORD PTR _path$2[ebp]
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	call	?GetFileListTree@@YAXPAVC_TreeList@@PADQAPADJHJ@Z ; GetFileListTree
	add	esp, 24					; 00000018H

; 1152 : 				tree->RecalcSize();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?RecalcSize@C_TreeList@@QAEXXZ		; C_TreeList::RecalcSize

; 1153 : 				if(tree->Parent_)

	mov	ecx, DWORD PTR _tree$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	SHORT $LN19@SetCampaig

; 1154 : 					tree->Parent_->RefreshClient(tree->GetClient());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _tree$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN19@SetCampaig:

; 1155 : 			}
; 1156 : 			break;

	jmp	SHORT $LN22@SetCampaig
$LN17@SetCampaig:

; 1157 : 		case CS_JOIN_CTRL:
; 1158 : 			CampSelMode=2;

	mov	DWORD PTR ?CampSelMode@@3HA, 2		; CampSelMode

; 1159 : 			if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN22@SetCampaig

; 1160 : 			{
; 1161 : 				win=gMainHandler->FindWindow(PB_WIN);

	push	60004					; 0000ea64H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1162 : 				if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN22@SetCampaig

; 1163 : 					gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN22@SetCampaig:

; 1164 : 			}
; 1165 : 			break;
; 1166 : 	}
; 1167 : 	win=gMainHandler->FindWindow(CHALLENGE_WIN);

	push	40903					; 00009fc7H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1168 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@SetCampaig

; 1169 : 	{
; 1170 : 		sldr=(C_Slider *)win->FindControl(BAR_1_SCROLL);

	push	40908					; 00009fccH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1171 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN13@SetCampaig

; 1172 : 		{
; 1173 : 			if(CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	je	SHORT $LN12@SetCampaig

; 1174 : 				sldr->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1175 : 			else

	jmp	SHORT $LN13@SetCampaig
$LN12@SetCampaig:

; 1176 : 				sldr->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN13@SetCampaig:

; 1177 : 		}
; 1178 : 		sldr=(C_Slider *)win->FindControl(BAR_2_SCROLL);

	push	40911					; 00009fcfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1179 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN10@SetCampaig

; 1180 : 		{
; 1181 : 			if(CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	je	SHORT $LN9@SetCampaig

; 1182 : 				sldr->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1183 : 			else

	jmp	SHORT $LN10@SetCampaig
$LN9@SetCampaig:

; 1184 : 				sldr->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN10@SetCampaig:

; 1185 : 		}
; 1186 : 		sldr=(C_Slider *)win->FindControl(BAR_3_SCROLL);

	push	40914					; 00009fd2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1187 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@SetCampaig

; 1188 : 		{
; 1189 : 			if(CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	je	SHORT $LN6@SetCampaig

; 1190 : 				sldr->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1191 : 			else

	jmp	SHORT $LN7@SetCampaig
$LN6@SetCampaig:

; 1192 : 				sldr->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN7@SetCampaig:

; 1193 : 		}
; 1194 : 		sldr=(C_Slider *)win->FindControl(BAR_4_SCROLL);

	push	40917					; 00009fd5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1195 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN14@SetCampaig

; 1196 : 		{
; 1197 : 			if(CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	je	SHORT $LN3@SetCampaig

; 1198 : 				sldr->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1199 : 			else

	jmp	SHORT $LN14@SetCampaig
$LN3@SetCampaig:

; 1200 : 				sldr->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN14@SetCampaig:

; 1201 : 		}
; 1202 : 	}
; 1203 : 	//dpc ExitCampSelectFix
; 1204 : 	if (g_bExitCampSelectFix)

	movzx	ecx, BYTE PTR ?g_bExitCampSelectFix@@3_NA ; g_bExitCampSelectFix
	test	ecx, ecx
	je	SHORT $LN36@SetCampaig

; 1205 : 		oldCampSelMode = CampSelMode;

	mov	edx, DWORD PTR ?CampSelMode@@3HA	; CampSelMode
	mov	DWORD PTR _oldCampSelMode, edx
$LN36@SetCampaig:

; 1206 : //end ExitCampSelectFix
; 1207 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z ENDP		; SetCampaignSelectCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_item$ = -16						; size = 4
_btn$ = -12						; size = 4
_i$ = -8						; size = 4
_tree$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?LoadCampaignFileCB@@YAXJFPAVC_Base@@@Z PROC		; LoadCampaignFileCB

; 1049 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1050 : 	C_TreeList *tree;
; 1051 : 	TREELIST *item;
; 1052 : 	C_Button   *btn;
; 1053 : 
; 1054 : 	int	i;
; 1055 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN8@LoadCampai

; 1056 : 		return;

	jmp	$LN9@LoadCampai
$LN8@LoadCampai:

; 1057 : 
; 1058 : 	tree=(C_TreeList*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _tree$[ebp], ecx

; 1059 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	$LN9@LoadCampai

; 1060 : 	{
; 1061 : 		item=tree->GetLastItem();

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ; C_TreeList::GetLastItem
	mov	DWORD PTR _item$[ebp], eax

; 1062 : 		if(item)

	cmp	DWORD PTR _item$[ebp], 0
	je	$LN9@LoadCampai

; 1063 : 		{
; 1064 : 			btn=(C_Button*)item->Item_;

	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _btn$[ebp], eax

; 1065 : 
; 1066 : 			if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN9@LoadCampai

; 1067 : 			{
; 1068 : 				tree->SetAllControlStates(0,tree->GetRoot());

	mov	ecx, DWORD PTR _tree$[ebp]
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	push	0
	mov	ecx, DWORD PTR _tree$[ebp]
	call	?SetAllControlStates@C_TreeList@@QAEXFPAVTREELIST@@@Z ; C_TreeList::SetAllControlStates

; 1069 : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1070 : 				tree->Refresh();

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tree$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1071 : 				_tcscpy(gUI_CampaignFile,btn->GetText(C_STATE_0));

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetText@C_Button@@QAEPADF@Z		; C_Button::GetText
	push	eax
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 1072 : 		// MN 2002-02-04 removed ".cam" to be able to also delete .his .frc-files
; 1073 : 				_stprintf(gLastCampFilename,"%s\\%s",FalconCampUserSaveDirectory,gUI_CampaignFile);

	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
	push	OFFSET ?gLastCampFilename@@3PADA	; gLastCampFilename
	call	_sprintf
	add	esp, 16					; 00000010H

; 1074 : 				TheCampaign.LoadScenarioStats(game_Campaign, gUI_CampaignFile);

	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	push	4
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadScenarioStats

; 1075 : 				// Pick the last selected squadron
; 1076 : 				for(i=0;i<TheCampaign.NumAvailSquadrons;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@LoadCampai
$LN3@LoadCampai:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@LoadCampai:
	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], edx
	jge	SHORT $LN2@LoadCampai

; 1077 : 					{
; 1078 : 					if (TheCampaign.CampaignSquadronData[i].id == TheCampaign.PlayerSquadronID)

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+268
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	lea	ecx, DWORD PTR [ecx+eax+8]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@LoadCampai

; 1079 : 						gSelectedSquadronID = i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _gSelectedSquadronID, eax
$LN1@LoadCampai:

; 1080 : 					}

	jmp	SHORT $LN3@LoadCampai
$LN2@LoadCampai:

; 1081 : 				_tcscpy(gUI_ScenarioName,TheCampaign.SaveFile);

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+182
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 1082 : 				LoadScenarioInfo();

	call	?LoadScenarioInfo@@YAXXZ		; LoadScenarioInfo
$LN9@LoadCampai:

; 1083 : 			}
; 1084 : 		}
; 1085 : 	}
; 1086 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadCampaignFileCB@@YAXJFPAVC_Base@@@Z ENDP		; LoadCampaignFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?HostCampaignCB@@YAXJFPAVC_Base@@@Z PROC		; HostCampaignCB

; 1043 : {

	push	ebp
	mov	ebp, esp

; 1044 : 	if(hittype != C_TYPE_LMOUSEUP)
; 1045 : 		return;
; 1046 : }

	pop	ebp
	ret	0
?HostCampaignCB@@YAXJFPAVC_Base@@@Z ENDP		; HostCampaignCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CommsCommitCB@@YAXJFPAVC_Base@@@Z PROC			; CommsCommitCB

; 1017 : {

	push	ebp
	mov	ebp, esp

; 1018 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CommsCommi

; 1019 : 		return;

	jmp	SHORT $LN4@CommsCommi
$LN3@CommsCommi:

; 1020 : 
; 1021 : 	if(TheCampaign.NumAvailSquadrons < 1)

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	ecx, 1
	jge	SHORT $LN2@CommsCommi

; 1022 : 		return;

	jmp	SHORT $LN4@CommsCommi
$LN2@CommsCommi:

; 1023 : 
; 1024 : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN1@CommsCommi

; 1025 : 		return;

	jmp	SHORT $LN4@CommsCommi
$LN1@CommsCommi:

; 1026 : 
; 1027 : 	CommitCB(ID,hittype,control); // Do rest of NORMAL Commit button

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?CommitCB@@YAXJFPAVC_Base@@@Z		; CommitCB
	add	esp, 12					; 0000000cH
$LN4@CommsCommi:

; 1028 : }

	pop	ebp
	ret	0
?CommsCommitCB@@YAXJFPAVC_Base@@@Z ENDP			; CommsCommitCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ebox$ = -16						; size = 4
_win$ = -12						; size = 4
tv144 = -8						; size = 4
_game$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CommitCB@@YAXJFPAVC_Base@@@Z PROC			; CommitCB

; 961  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 962  : 	FalconGameEntity *game=NULL;

	mov	DWORD PTR _game$[ebp], 0

; 963  : 	C_EditBox *ebox;
; 964  : 	C_Window *win;
; 965  : 
; 966  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN12@CommitCB

; 967  : 		return;

	jmp	$LN13@CommitCB
$LN12@CommitCB:

; 968  : 
; 969  : 	if(TheCampaign.NumAvailSquadrons < 1)

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	ecx, 1
	jge	SHORT $LN11@CommitCB

; 970  : 		return;

	jmp	$LN13@CommitCB
$LN11@CommitCB:

; 971  : 
; 972  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	edx, 4
	imul	edx, 19					; 00000013H
	mov	eax, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[edx]
	push	eax
	call	DWORD PTR __imp__SetCursor@4

; 973  : 	LoadCampaignWindows();

	call	?LoadCampaignWindows@@YAXXZ		; LoadCampaignWindows

; 974  : 
; 975  : 	if (!TheCampaign.CampaignSquadronData)

	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312, 0
	jne	SHORT $LN10@CommitCB

; 976  : 		return;

	jmp	$LN13@CommitCB
$LN10@CommitCB:

; 977  : 
; 978  : 	FalconLocalSession->SetCountry(TheCampaign.CampaignSquadronData[gSelectedSquadronID].country);

	mov	ecx, DWORD PTR _gSelectedSquadronID
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movzx	eax, BYTE PTR [edx+ecx+26]
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetCountry@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetCountry

; 979  : 	gPlayerSquadronId = TheCampaign.CampaignSquadronData[gSelectedSquadronID].id;

	mov	ecx, DWORD PTR _gSelectedSquadronID
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	ecx, DWORD PTR [edx+ecx+12]
	mov	DWORD PTR ?gPlayerSquadronId@@3VVU_ID@@A, eax
	mov	DWORD PTR ?gPlayerSquadronId@@3VVU_ID@@A+4, ecx

; 980  : 
; 981  : 	if(CampSelMode != 2)

	cmp	DWORD PTR ?CampSelMode@@3HA, 2		; CampSelMode
	je	SHORT $LN9@CommitCB

; 982  : 	{
; 983  : 		if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN8@CommitCB

; 984  : 			SetupInfoWindow(ReallyCreateCB,CancelJoinCB);

	push	OFFSET ?CancelJoinCB@@YAXXZ		; CancelJoinCB
	push	OFFSET ?ReallyCreateCB@@YAXXZ		; ReallyCreateCB
	call	?SetupInfoWindow@@YAXP6AXXZ0@Z		; SetupInfoWindow
	add	esp, 8

; 985  : 		else

	jmp	SHORT $LN7@CommitCB
$LN8@CommitCB:

; 986  : 			ReallyCreateCB();

	call	?ReallyCreateCB@@YAXXZ			; ReallyCreateCB
$LN7@CommitCB:

; 987  : 	}
; 988  : 	else

	jmp	$LN13@CommitCB
$LN9@CommitCB:

; 989  : 	{
; 990  : 		// Join a Campaign
; 991  : 		game=(FalconGameEntity*)gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 992  : 		if(!game)

	cmp	DWORD PTR _game$[ebp], 0
	jne	SHORT $LN5@CommitCB

; 993  : 			return;

	jmp	SHORT $LN13@CommitCB
$LN5@CommitCB:

; 994  : 		if(game != FalconLocalGame)

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@CommitCB
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN16@CommitCB
$LN15@CommitCB:
	mov	DWORD PTR tv144[ebp], 0
$LN16@CommitCB:
	mov	eax, DWORD PTR _game$[ebp]
	cmp	eax, DWORD PTR tv144[ebp]
	je	SHORT $LN4@CommitCB

; 995  : 			{
; 996  : 			win=gMainHandler->FindWindow(INFO_WIN);

	push	5004					; 0000138cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 997  : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@CommitCB

; 998  : 				{
; 999  : 				ebox=(C_EditBox*)win->FindControl(INFO_PASSWORD);

	push	5026					; 000013a2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1000 : 				if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN3@CommitCB

; 1001 : 					{
; 1002 : //					if(!PlayerOptions.InCompliance(game->GetRules()) || !game->CheckPassword(ebox->GetText()))
; 1003 : //						{
; 1004 : 						SetupInfoWindow(ReallyJoinCB,CancelJoinCB);

	push	OFFSET ?CancelJoinCB@@YAXXZ		; CancelJoinCB
	push	OFFSET ?ReallyJoinCB@@YAXXZ		; ReallyJoinCB
	call	?SetupInfoWindow@@YAXP6AXXZ0@Z		; SetupInfoWindow
	add	esp, 8
$LN3@CommitCB:

; 1005 : //						}
; 1006 : //					else
; 1007 : //						ReallyJoinCB();
; 1008 : 					}
; 1009 : 				}
; 1010 : 			}
; 1011 : 		else

	jmp	SHORT $LN13@CommitCB
$LN4@CommitCB:

; 1012 : 			ReallyJoinCB();

	call	?ReallyJoinCB@@YAXXZ			; ReallyJoinCB
$LN13@CommitCB:

; 1013 : 	}
; 1014 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CommitCB@@YAXJFPAVC_Base@@@Z ENDP			; CommitCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
?ReallyJoinCB@@YAXXZ PROC				; ReallyJoinCB

; 950  : {

	push	ebp
	mov	ebp, esp

; 951  : 	DisplayJoinStatusWindow (0);

	push	0
	call	?DisplayJoinStatusWindow@@YAXH@Z	; DisplayJoinStatusWindow
	add	esp, 4

; 952  : 
; 953  : 	StartCampaignGame(FALSE, game_Campaign);

	push	4
	push	0
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8

; 954  : }

	pop	ebp
	ret	0
?ReallyJoinCB@@YAXXZ ENDP				; ReallyJoinCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
?ReallyCreateCB@@YAXXZ PROC				; ReallyCreateCB

; 944  : {

	push	ebp
	mov	ebp, esp

; 945  : 	// Load a Campaign
; 946  : 	StartCampaignGame(TRUE, game_Campaign);

	push	4
	push	1
	call	?StartCampaignGame@@YAXHH@Z		; StartCampaignGame
	add	esp, 8

; 947  : }

	pop	ebp
	ret	0
?ReallyCreateCB@@YAXXZ ENDP				; ReallyCreateCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_name$ = -12						; size = 4
_game$ = -8						; size = 4
_i$ = -4						; size = 4
?RecieveScenarioInfo@@YAXXZ PROC			; RecieveScenarioInfo

; 882  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 883  : 	_TCHAR *name;
; 884  : 	int i;
; 885  : 	VuGameEntity * game;
; 886  : 	if(gMainHandler == NULL)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN20@RecieveSce

; 887  : 		return;

	jmp	$LN21@RecieveSce
$LN20@RecieveSce:

; 888  : 
; 889  : 	// KCK: These really should be a better way to figure out which windows need updating than 
; 890  : 	// checking the flag field of TheCampaign. Doesn't the UI know which window groups are active?
; 891  : 	if (TheCampaign.Flags & CAMP_LIGHT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 128				; 00000080H
	je	SHORT $LN19@RecieveSce
	jmp	$LN21@RecieveSce
$LN19@RecieveSce:

; 892  : 		{
; 893  : 		// Do dogfight/IA stuff
; 894  : 		}
; 895  : 	else if (TheCampaign.Flags & CAMP_TACTICAL)

	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	ecx, 1024				; 00000400H
	je	$LN17@RecieveSce

; 896  : 		{
; 897  : 		game=gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 898  : 		if(game)

	cmp	DWORD PTR _game$[ebp], 0
	je	SHORT $LN16@RecieveSce

; 899  : 		{
; 900  : 			name=game->GameName();

	mov	ecx, DWORD PTR _game$[ebp]
	call	?GameName@VuGameEntity@@QAEPADXZ	; VuGameEntity::GameName
	mov	DWORD PTR _name$[ebp], eax

; 901  : 			_tcscpy(gUI_ScenarioName,name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8
$LN16@RecieveSce:

; 902  : 		}
; 903  : 
; 904  : 		gSelectedSquadronID = -1;

	mov	DWORD PTR _gSelectedSquadronID, -1

; 905  : 		for(i=0; i<TheCampaign.NumAvailSquadrons; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@RecieveSce
$LN14@RecieveSce:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@RecieveSce:
	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], ecx
	jge	SHORT $LN13@RecieveSce

; 906  : 			{
; 907  : 			if (TheCampaign.CampaignSquadronData[i].id == TheCampaign.PlayerSquadronID && (TheCampaign.IsValidSquadron(i) || _IsF16_))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+268
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	lea	ecx, DWORD PTR [eax+edx+8]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@RecieveSce
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN11@RecieveSce
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	SHORT $LN12@RecieveSce
$LN11@RecieveSce:

; 908  : 				gSelectedSquadronID = i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _gSelectedSquadronID, eax
$LN12@RecieveSce:

; 909  : 			}

	jmp	SHORT $LN14@RecieveSce
$LN13@RecieveSce:

; 910  : 		// Update the campaign selection windows
; 911  : 		create_tactical_scenario_info ();

	call	?create_tactical_scenario_info@@YAXXZ	; create_tactical_scenario_info

; 912  : 		}
; 913  : 	else

	jmp	$LN21@RecieveSce
$LN17@RecieveSce:

; 914  : 		{
; 915  : 		game=gCommsMgr->GetTargetGame();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	mov	DWORD PTR _game$[ebp], eax

; 916  : 		if(game)

	cmp	DWORD PTR _game$[ebp], 0
	je	SHORT $LN9@RecieveSce

; 917  : 		{
; 918  : 			name=game->GameName();

	mov	ecx, DWORD PTR _game$[ebp]
	call	?GameName@VuGameEntity@@QAEPADXZ	; VuGameEntity::GameName
	mov	DWORD PTR _name$[ebp], eax

; 919  : 			_tcscpy(gUI_ScenarioName,name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8
$LN9@RecieveSce:

; 920  : 		}
; 921  : 
; 922  : 		gSelectedSquadronID = -1;

	mov	DWORD PTR _gSelectedSquadronID, -1

; 923  : 		for(i=0; i<TheCampaign.NumAvailSquadrons; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@RecieveSce
$LN7@RecieveSce:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN8@RecieveSce:
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN6@RecieveSce

; 924  : 			{
; 925  : 			if (TheCampaign.CampaignSquadronData[i].id == TheCampaign.PlayerSquadronID && (TheCampaign.IsValidSquadron(i) || _IsF16_))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+268
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	lea	ecx, DWORD PTR [edx+ecx+8]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@RecieveSce
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN4@RecieveSce
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	SHORT $LN5@RecieveSce
$LN4@RecieveSce:

; 926  : 				gSelectedSquadronID = i;

	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _gSelectedSquadronID, edx
$LN5@RecieveSce:

; 927  : 			}

	jmp	SHORT $LN7@RecieveSce
$LN6@RecieveSce:

; 928  : 		// Update the campaign selection windows
; 929  : //dpc ExitCampSelectFix
; 930  : 		if (g_bExitCampSelectFix)

	movzx	eax, BYTE PTR ?g_bExitCampSelectFix@@3_NA ; g_bExitCampSelectFix
	test	eax, eax
	je	SHORT $LN3@RecieveSce

; 931  : 		{
; 932  : 			if (oldCampSelMode != 1)

	cmp	DWORD PTR _oldCampSelMode, 1
	je	SHORT $LN2@RecieveSce

; 933  : 			{
; 934  : 				LoadScenarioInfo();

	call	?LoadScenarioInfo@@YAXXZ		; LoadScenarioInfo
$LN2@RecieveSce:

; 935  : 			}
; 936  : 		}
; 937  : 		else

	jmp	SHORT $LN21@RecieveSce
$LN3@RecieveSce:

; 938  : //end ExitCampSelectFix
; 939  : 			LoadScenarioInfo();

	call	?LoadScenarioInfo@@YAXXZ		; LoadScenarioInfo
$LN21@RecieveSce:

; 940  : 		}
; 941  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RecieveScenarioInfo@@YAXXZ ENDP			; RecieveScenarioInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_Leave$ = -12						; size = 4
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
_ID$ = 8						; size = 4
?SelectScenarioButtons@@YAXJ@Z PROC			; SelectScenarioButtons

; 778  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 779  : 	C_Window *win;
; 780  : 	C_Button *btn;
; 781  : 	F4CSECTIONHANDLE *Leave;
; 782  : 
; 783  : 	win=gMainHandler->FindWindow(CS_SELECT_WIN);

	push	40200					; 00009d08H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 784  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN11@SelectScen

; 785  : 	{
; 786  : 		Leave=UI_Enter(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 787  : 		btn=(C_Button*)win->FindControl(CS_LOAD_SCENARIO1);

	push	40900					; 00009fc4H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 788  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN9@SelectScen

; 789  : 		{
; 790  : 			if(btn->GetID() == ID)

	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	cmp	eax, DWORD PTR _ID$[ebp]
	jne	SHORT $LN8@SelectScen

; 791  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 792  : 			else

	jmp	SHORT $LN7@SelectScen
$LN8@SelectScen:

; 793  : 				btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN7@SelectScen:

; 794  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN9@SelectScen:

; 795  : 		}
; 796  : 		btn=(C_Button*)win->FindControl(CS_LOAD_SCENARIO2);

	push	40901					; 00009fc5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 797  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@SelectScen

; 798  : 		{
; 799  : 			if(btn->GetID() == ID)

	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	cmp	eax, DWORD PTR _ID$[ebp]
	jne	SHORT $LN5@SelectScen

; 800  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 801  : 			else

	jmp	SHORT $LN4@SelectScen
$LN5@SelectScen:

; 802  : 				btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN4@SelectScen:

; 803  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@SelectScen:

; 804  : 		}
; 805  : 		btn=(C_Button*)win->FindControl(CS_LOAD_SCENARIO3);

	push	40902					; 00009fc6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 806  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@SelectScen

; 807  : 		{
; 808  : 			if(btn->GetID() == ID)

	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	cmp	eax, DWORD PTR _ID$[ebp]
	jne	SHORT $LN2@SelectScen

; 809  : 				btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 810  : 			else

	jmp	SHORT $LN1@SelectScen
$LN2@SelectScen:

; 811  : 				btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN1@SelectScen:

; 812  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@SelectScen:

; 813  : 		}
; 814  : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN11@SelectScen:

; 815  : 	}
; 816  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectScenarioButtons@@YAXJ@Z ENDP			; SelectScenarioButtons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseSelectWindowCB@@YAXJFPAVC_Base@@@Z PROC		; CloseSelectWindowCB

; 769  : {

	push	ebp
	mov	ebp, esp

; 770  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CloseSelec

; 771  : 		return;

	jmp	SHORT $LN2@CloseSelec
$LN1@CloseSelec:

; 772  : 
; 773  : 	DisableScenarioInfo();

	call	?DisableScenarioInfo@@YAXXZ		; DisableScenarioInfo

; 774  : 	CloseWindowCB(ID,hittype,control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@CloseSelec:

; 775  : }

	pop	ebp
	ret	0
?CloseSelectWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseSelectWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
_control$ = 8						; size = 4
?EnableScenarioText@@YAXPAVC_Base@@@Z PROC		; EnableScenarioText

; 747  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 748  : 	C_Window *win;
; 749  : 
; 750  : 	win=gMainHandler->FindWindow(CS_PUA_WIN);

	push	40300					; 00009d6cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 751  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@EnableScen

; 752  : 	{
; 753  : 		if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	SHORT $LN2@EnableScen

; 754  : 		{
; 755  : 			win->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 756  : 			win->HideCluster(control->GetUserNumber(2));

	push	2
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 757  : 			win->UnHideCluster(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 758  : 		}
; 759  : 		else

	jmp	SHORT $LN4@EnableScen
$LN2@EnableScen:

; 760  : 		{
; 761  : 			win->HideCluster(2);

	push	2
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 762  : 			win->HideCluster(3);

	push	3
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 763  : 			win->UnHideCluster(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN4@EnableScen:

; 764  : 		}
; 765  : 	}
; 766  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EnableScenarioText@@YAXPAVC_Base@@@Z ENDP		; EnableScenarioText
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ebox$ = -84						; size = 4
_txt$ = -80						; size = 4
_clk$ = -76						; size = 4
_btn$ = -72						; size = 4
_win$ = -68						; size = 4
_buffer$ = -64						; size = 60
__$ArrayPad$ = -4					; size = 4
?LoadScenarioInfo@@YAXXZ PROC				; LoadScenarioInfo

; 694  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 695  : 	C_Window *win;
; 696  : 	C_Text *txt;
; 697  : 	C_EditBox *ebox;
; 698  : 	C_Button *btn;
; 699  : 	C_Clock *clk;
; 700  : 	_TCHAR buffer[60];
; 701  : 
; 702  : 	CopySettingsToTemp();

	call	?CopySettingsToTemp@@YAXXZ		; CopySettingsToTemp

; 703  : 	CalcChallengeLevel();

	call	?CalcChallengeLevel@@YAXXZ		; CalcChallengeLevel

; 704  : 
; 705  : 	win=gMainHandler->FindWindow(CS_PUA_WIN);

	push	40300					; 00009d6cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 706  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN6@LoadScenar

; 707  : 	{
; 708  : 		ebox=(C_EditBox *)win->FindControl(TITLE_LABEL);

	push	40303					; 00009d6fH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 709  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN5@LoadScenar

; 710  : 		{
; 711  : 			_stprintf(buffer,"%s",gUI_ScenarioName);

	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 712  : 			ebox->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText
$LN5@LoadScenar:

; 713  : 		}
; 714  : 
; 715  : 		// Situation
; 716  : 		txt=(C_Text *)win->FindControl(SIT_FIELD);

	push	40308					; 00009d74H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 717  : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@LoadScenar

; 718  : 		{
; 719  : 			txt->SetText(SituationStr[TheCampaign.Situation%5]);

	movzx	eax, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+94
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR ?SituationStr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN4@LoadScenar:

; 720  : 		}
; 721  : 		LoadSquadronInfo();

	call	?LoadSquadronInfo@@YAXXZ		; LoadSquadronInfo

; 722  : 		btn=(C_Button *)win->FindControl(SET_CHALLENGE);

	push	40922					; 00009fdaH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 723  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN6@LoadScenar

; 724  : 		{
; 725  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 726  : 			btn->SetState(TEMP_Settings.Challenge);

	movzx	cx, BYTE PTR _TEMP_Settings
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 727  : 			btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@LoadScenar:

; 728  : 		}
; 729  : 	}
; 730  : 	win=gMainHandler->FindWindow(CS_SUA_WIN);

	push	40102					; 00009ca6H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 731  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@LoadScenar

; 732  : 	{
; 733  : 		clk=(C_Clock *)win->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 734  : 		if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN2@LoadScenar

; 735  : 		{
; 736  : 			clk->SetTime(TheCampaign.CurrentTime / VU_TICS_PER_SECOND);

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 737  : 			clk->Refresh();

	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx
$LN2@LoadScenar:

; 738  : 		}
; 739  : 
; 740  : 	}
; 741  : 	SetupMapWindow();

	call	?SetupMapWindow@@YAXXZ			; SetupMapWindow

; 742  : 	AddSquadronsToMap();

	call	?AddSquadronsToMap@@YAXXZ		; AddSquadronsToMap

; 743  : 	EnableScenarioInfo(4050);

	push	4050					; 00000fd2H
	call	?EnableScenarioInfo@@YAXJ@Z		; EnableScenarioInfo
	add	esp, 4

; 744  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?LoadScenarioInfo@@YAXXZ ENDP				; LoadScenarioInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_win$ = -12						; size = 4
tv143 = -8						; size = 4
_lb$ = -4						; size = 4
?CalcChallengeLevel@@YAXXZ PROC				; CalcChallengeLevel

; 649  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 650  : 	C_Window *win;
; 651  : 	C_ListBox *lb;
; 652  : 
; 653  : 	// Joes Equation Goes HERE
; 654  : 	TEMP_Settings.Challenge=TEMP_Settings.PilotSkill;

	mov	al, BYTE PTR _TEMP_Settings+1
	mov	BYTE PTR _TEMP_Settings, al

; 655  : 	TEMP_Settings.Challenge+=TEMP_Settings.SAMSkill;

	movzx	ecx, BYTE PTR _TEMP_Settings+2
	movzx	edx, BYTE PTR _TEMP_Settings
	add	edx, ecx
	mov	BYTE PTR _TEMP_Settings, dl

; 656  : 	TEMP_Settings.Challenge+=(4-TEMP_Settings.AirForces);

	movzx	eax, BYTE PTR _TEMP_Settings+3
	mov	ecx, 4
	sub	ecx, eax
	movzx	edx, BYTE PTR _TEMP_Settings
	add	edx, ecx
	mov	BYTE PTR _TEMP_Settings, dl

; 657  : 	TEMP_Settings.Challenge+=(4-TEMP_Settings.AirDefenses);

	movzx	eax, BYTE PTR _TEMP_Settings+4
	mov	ecx, 4
	sub	ecx, eax
	movzx	edx, BYTE PTR _TEMP_Settings
	add	edx, ecx
	mov	BYTE PTR _TEMP_Settings, dl

; 658  : 	TEMP_Settings.Challenge+=(4-TEMP_Settings.GroundForces);

	movzx	eax, BYTE PTR _TEMP_Settings+5
	mov	ecx, 4
	sub	ecx, eax
	movzx	edx, BYTE PTR _TEMP_Settings
	add	edx, ecx
	mov	BYTE PTR _TEMP_Settings, dl

; 659  : 	TEMP_Settings.Challenge+=(4-TEMP_Settings.NavalForces);

	movzx	eax, BYTE PTR _TEMP_Settings+6
	mov	ecx, 4
	sub	ecx, eax
	movzx	edx, BYTE PTR _TEMP_Settings
	add	edx, ecx
	mov	BYTE PTR _TEMP_Settings, dl

; 660  : 
; 661  : 	TEMP_Settings.Challenge /= 6;

	movzx	eax, BYTE PTR _TEMP_Settings
	cdq
	mov	ecx, 6
	idiv	ecx
	mov	BYTE PTR _TEMP_Settings, al

; 662  : 
; 663  : 	win=gMainHandler->FindWindow(CHALLENGE_WIN);

	push	40903					; 00009fc7H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 664  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@CalcChalle

; 665  : 	{
; 666  : 		lb=(C_ListBox *)win->FindControl(CHALLENGE_LIST);

	push	40314					; 00009d7aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 667  : 		if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	$LN10@CalcChalle

; 668  : 		{
; 669  : 			lb->Refresh();

	mov	edx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 670  : 			switch(TEMP_Settings.Challenge)

	movzx	eax, BYTE PTR _TEMP_Settings
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv143[ebp], ecx
	cmp	DWORD PTR tv143[ebp], 3
	ja	SHORT $LN1@CalcChalle
	mov	edx, DWORD PTR tv143[ebp]
	jmp	DWORD PTR $LN12@CalcChalle[edx*4]
$LN5@CalcChalle:

; 671  : 			{
; 672  : 				case 1:
; 673  : 					lb->SetValue(CADET_LEVEL);

	push	40331					; 00009d8bH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 674  : 					break;

	jmp	SHORT $LN6@CalcChalle
$LN4@CalcChalle:

; 675  : 				case 2:
; 676  : 					lb->SetValue(ROOKIE_LEVEL);

	push	40330					; 00009d8aH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 677  : 					break;

	jmp	SHORT $LN6@CalcChalle
$LN3@CalcChalle:

; 678  : 				case 3:
; 679  : 					lb->SetValue(VETERAN_LEVEL);

	push	40329					; 00009d89H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 680  : 					break;

	jmp	SHORT $LN6@CalcChalle
$LN2@CalcChalle:

; 681  : 				case 4:
; 682  : 					lb->SetValue(ACE_LEVEL);

	push	40328					; 00009d88H
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 683  : 					break;

	jmp	SHORT $LN6@CalcChalle
$LN1@CalcChalle:

; 684  : 				default:
; 685  : 					lb->SetValue(RECRUIT_LEVEL);

	push	40332					; 00009d8cH
	mov	ecx, DWORD PTR _lb$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN6@CalcChalle:

; 686  : 					break;
; 687  : 			}
; 688  : 			lb->Refresh();

	mov	eax, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN10@CalcChalle:

; 689  : 		}
; 690  : 	}
; 691  : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@CalcChalle:
	DD	$LN5@CalcChalle
	DD	$LN4@CalcChalle
	DD	$LN3@CalcChalle
	DD	$LN2@CalcChalle
?CalcChallengeLevel@@YAXXZ ENDP				; CalcChallengeLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
$T2 = -152						; size = 8
$T3 = -144						; size = 8
_sit$4 = -136						; size = 12
_mv$5 = -124						; size = 4
_bmp$ = -120						; size = 4
_aircraft$6 = -116					; size = 4
_uc$7 = -112						; size = 4
_players$8 = -108					; size = 4
_session$9 = -104					; size = 4
_i$10 = -100						; size = 4
_vc$11 = -96						; size = 4
_i$12 = -92						; size = 4
_win$ = -88						; size = 4
_SquadPtr$ = -84					; size = 4
_txt$ = -80						; size = 4
_buffer$ = -76						; size = 60
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadSquadronInfo@@YAXXZ PROC				; LoadSquadronInfo

; 545  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadSquadronInfo@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 546  : 	C_Window *win;
; 547  : 	C_Text *txt;
; 548  : 	C_Bitmap *bmp;
; 549  : 	SquadUIInfoClass *SquadPtr;
; 550  : 	_TCHAR buffer[60];
; 551  : 
; 552  : 	win=gMainHandler->FindWindow(CS_PUA_WIN);

	push	40300					; 00009d6cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 553  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN29@LoadSquadr

; 554  : 	{
; 555  : 		// Need squadron info now
; 556  : 
; 557  : 		if(gSelectedSquadronID < 0 || gSelectedSquadronID >= TheCampaign.NumAvailSquadrons)

	cmp	DWORD PTR _gSelectedSquadronID, 0
	jl	SHORT $LN26@LoadSquadr
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _gSelectedSquadronID, eax
	jl	SHORT $LN27@LoadSquadr
$LN26@LoadSquadr:

; 558  : 			{
; 559  : 			// KCK: Pick a valid squadron with the lowest id.
; 560  : 			gSelectedSquadronID = -1;

	mov	DWORD PTR _gSelectedSquadronID, -1

; 561  : 			for (int i=0; i<TheCampaign.NumAvailSquadrons; i++)

	mov	DWORD PTR _i$12[ebp], 0
	jmp	SHORT $LN25@LoadSquadr
$LN24@LoadSquadr:
	mov	ecx, DWORD PTR _i$12[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$12[ebp], ecx
$LN25@LoadSquadr:
	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$12[ebp], edx
	jge	SHORT $LN27@LoadSquadr

; 562  : 				{
; 563  : 				if ((TheCampaign.IsValidSquadron(i) || _IsF16_) && (gSelectedSquadronID < 0 || TheCampaign.CampaignSquadronData[i].id.num_ < TheCampaign.CampaignSquadronData[gSelectedSquadronID].id.num_))

	mov	eax, DWORD PTR _i$12[ebp]
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN21@LoadSquadr
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	SHORT $LN22@LoadSquadr
$LN21@LoadSquadr:
	cmp	DWORD PTR _gSelectedSquadronID, 0
	jl	SHORT $LN20@LoadSquadr
	mov	ecx, DWORD PTR _i$12[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR _gSelectedSquadronID
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	mov	esi, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	mov	ecx, DWORD PTR [eax+ecx+8]
	cmp	ecx, DWORD PTR [esi+edx+8]
	jae	SHORT $LN22@LoadSquadr
$LN20@LoadSquadr:

; 564  : 					gSelectedSquadronID=i;

	mov	edx, DWORD PTR _i$12[ebp]
	mov	DWORD PTR _gSelectedSquadronID, edx
$LN22@LoadSquadr:

; 565  : 				}

	jmp	SHORT $LN24@LoadSquadr
$LN27@LoadSquadr:

; 566  : 			}
; 567  : 
; 568  : 		if (gSelectedSquadronID < 0)

	cmp	DWORD PTR _gSelectedSquadronID, 0
	jge	SHORT $LN19@LoadSquadr

; 569  : 			return;

	jmp	$LN29@LoadSquadr
$LN19@LoadSquadr:

; 570  : 
; 571  : 		SquadPtr=&TheCampaign.CampaignSquadronData[gSelectedSquadronID];

	mov	eax, DWORD PTR _gSelectedSquadronID
	imul	eax, 68					; 00000044H
	add	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	mov	DWORD PTR _SquadPtr$[ebp], eax

; 572  : 		if(SquadPtr)

	je	$LN18@LoadSquadr

; 573  : 		{
; 574  : 			UnitClassDataType*		uc = (UnitClassDataType*)(Falcon4ClassTable[SquadPtr->dIndex].dataPtr);

	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	imul	edx, 81					; 00000051H
	mov	eax, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	ecx, DWORD PTR [eax+edx+77]
	mov	DWORD PTR _uc$7[ebp], ecx

; 575  : 			VehicleClassDataType*	vc = NULL;

	mov	DWORD PTR _vc$11[ebp], 0

; 576  : 			ShiAssert(uc);
; 577  : 			if (uc)

	cmp	DWORD PTR _uc$7[ebp], 0
	je	SHORT $LN17@LoadSquadr

; 578  : 				vc = (VehicleClassDataType*)(Falcon4ClassTable[uc->VehicleType[0]].dataPtr);

	mov	edx, 2
	imul	edx, 0
	mov	eax, DWORD PTR _uc$7[ebp]
	movsx	ecx, WORD PTR [eax+edx+68]
	imul	ecx, 81					; 00000051H
	mov	edx, DWORD PTR ?Falcon4ClassTable@@3PAUFalcon4EntityClassType@@A ; Falcon4ClassTable
	mov	eax, DWORD PTR [edx+ecx+77]
	mov	DWORD PTR _vc$11[ebp], eax
$LN17@LoadSquadr:

; 579  : 		// Specialty
; 580  : 			txt=(C_Text *)win->FindControl(SPEC_FIELD);

	push	40310					; 00009d76H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 581  : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN16@LoadSquadr

; 582  : 			{
; 583  : 				txt->SetText(SpecialtyStr[SquadPtr->specialty%3]);

	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	movzx	eax, BYTE PTR [ecx+24]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR ?SpecialtyStr@@3PAJA[edx*4]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax
$LN16@LoadSquadr:

; 584  : 			}
; 585  : 			// status (# humans,%strength)
; 586  : 			txt=(C_Text *)win->FindControl(STATUS_FIELD);

	push	18002					; 00004652H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 587  : 			if(txt && vc)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN15@LoadSquadr
	cmp	DWORD PTR _vc$11[ebp], 0
	je	$LN15@LoadSquadr

; 588  : 			{
; 589  : 				if (CampSelMode == 2 && gCommsMgr && gCommsMgr->GetTargetGame())

	cmp	DWORD PTR ?CampSelMode@@3HA, 2		; CampSelMode
	jne	$LN14@LoadSquadr
	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	$LN14@LoadSquadr
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	test	eax, eax
	je	$LN14@LoadSquadr

; 590  : 					{
; 591  : 					// Online game - Count # of players
; 592  : 					int		players = 0;

	mov	DWORD PTR _players$8[ebp], 0

; 593  : 					FalconSessionEntity		*session;
; 594  : 					VuSessionsIterator		sit(gCommsMgr->GetTargetGame());

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?GetTargetGame@UIComms@@QAEPAVVuGameEntity@@XZ ; UIComms::GetTargetGame
	push	eax
	lea	ecx, DWORD PTR _sit$4[ebp]
	call	??0VuSessionsIterator@@QAE@PAVVuGroupEntity@@@Z ; VuSessionsIterator::VuSessionsIterator
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 595  : 		
; 596  : 					session = (FalconSessionEntity*) sit.GetFirst();

	lea	ecx, DWORD PTR _sit$4[ebp]
	call	?GetFirst@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetFirst
	mov	DWORD PTR _session$9[ebp], eax
$LN13@LoadSquadr:

; 597  : 					while (session)

	cmp	DWORD PTR _session$9[ebp], 0
	je	SHORT $LN12@LoadSquadr

; 598  : 						{
; 599  : 						// WM 09-28-03  Display the number of players actually in the selected
; 600  : 						//  squadron.  Not just the number of total players in the game.
; 601  : 						if (session->GetPlayerSquadronID()  && 
; 602  : 							session->GetPlayerSquadronID().num_ == SquadPtr->id.num_)

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _session$9[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN11@LoadSquadr
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _session$9[ebp]
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN11@LoadSquadr

; 603  : 							players++;

	mov	eax, DWORD PTR _players$8[ebp]
	add	eax, 1
	mov	DWORD PTR _players$8[ebp], eax
$LN11@LoadSquadr:

; 604  : 						session = (FalconSessionEntity*) sit.GetNext();

	lea	ecx, DWORD PTR _sit$4[ebp]
	call	?GetNext@VuSessionsIterator@@QAEPAVVuSessionEntity@@XZ ; VuSessionsIterator::GetNext
	mov	DWORD PTR _session$9[ebp], eax

; 605  : 						}

	jmp	SHORT $LN13@LoadSquadr
$LN12@LoadSquadr:

; 606  : 					_stprintf(buffer,"%1d %s, %1d %s",players,gStringMgr->GetString(TXT_PLAYERS),SquadPtr->currentStrength,vc->Name);

	mov	ecx, DWORD PTR _vc$11[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _SquadPtr$[ebp]
	movzx	eax, BYTE PTR [edx+25]
	push	eax
	push	93					; 0000005dH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _players$8[ebp]
	push	ecx
	push	OFFSET ??_C@_0P@KAHNKOKO@?$CF1d?5?$CFs?0?5?$CF1d?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 24					; 00000018H

; 607  : 					}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sit$4[ebp]
	call	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
	jmp	$LN10@LoadSquadr
$LN14@LoadSquadr:

; 608  : 				else if (!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN9@LoadSquadr

; 609  : 					{
; 610  : 					// # of aircraft based on ratio setting for new games
; 611  : 					int		aircraft = 0,mv,i;

	mov	DWORD PTR _aircraft$6[ebp], 0

; 612  : 					mv = max_veh[PlayerOptions.CampAirRatio];

	mov	eax, DWORD PTR ?PlayerOptions@@3VPlayerOptionsClass@@A+92
	movzx	ecx, BYTE PTR ?max_veh@@3PAEA[eax]
	mov	DWORD PTR _mv$5[ebp], ecx

; 613  : 					for (i=0; i<mv; i++)

	mov	DWORD PTR _i$10[ebp], 0
	jmp	SHORT $LN8@LoadSquadr
$LN7@LoadSquadr:
	mov	edx, DWORD PTR _i$10[ebp]
	add	edx, 1
	mov	DWORD PTR _i$10[ebp], edx
$LN8@LoadSquadr:
	mov	eax, DWORD PTR _i$10[ebp]
	cmp	eax, DWORD PTR _mv$5[ebp]
	jge	SHORT $LN6@LoadSquadr

; 614  : 						aircraft += uc->NumElements[i];	

	mov	ecx, DWORD PTR _i$10[ebp]
	mov	edx, DWORD PTR _uc$7[ebp]
	mov	eax, DWORD PTR _aircraft$6[ebp]
	add	eax, DWORD PTR [edx+ecx*4+4]
	mov	DWORD PTR _aircraft$6[ebp], eax
	jmp	SHORT $LN7@LoadSquadr
$LN6@LoadSquadr:

; 615  : 					_stprintf(buffer,"%d %s",aircraft,vc->Name);

	mov	ecx, DWORD PTR _vc$11[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _aircraft$6[ebp]
	push	edx
	push	OFFSET ??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 616  : 					}
; 617  : 				else

	jmp	SHORT $LN10@LoadSquadr
$LN9@LoadSquadr:

; 618  : 					_stprintf(buffer,"%d %s",SquadPtr->currentStrength,vc->Name);

	mov	ecx, DWORD PTR _vc$11[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _SquadPtr$[ebp]
	movzx	eax, BYTE PTR [edx+25]
	push	eax
	push	OFFSET ??_C@_05OPEIBKFE@?$CFd?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN10@LoadSquadr:

; 619  : 				txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 620  : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN15@LoadSquadr:

; 621  : 			}
; 622  : 			txt=(C_Text *)win->FindControl(SQUAD_NAME);

	push	40322					; 00009d82H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 623  : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@LoadSquadr

; 624  : 			{
; 625  : 				_stprintf(buffer,"%s %s",OrdinalString(SquadPtr->nameId),gStringMgr->GetString(TXT_FS));

	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	push	edx
	call	?OrdinalString@@YAPADJ@Z		; OrdinalString
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 626  : 				txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN4@LoadSquadr:

; 627  : 			}
; 628  : 			txt=(C_Text *)win->FindControl(AIRBASE_NAME);

	push	40323					; 00009d83H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 629  : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@LoadSquadr

; 630  : 			{
; 631  : 				_stprintf(buffer,"%s",SquadPtr->airbaseName);

	mov	eax, DWORD PTR _SquadPtr$[ebp]
	add	eax, 27					; 0000001bH
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 632  : 				txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN3@LoadSquadr:

; 633  : 			}
; 634  : 			bmp=(C_Bitmap *)win->FindControl(PATCH);

	push	40321					; 00009d81H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 635  : 			if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN18@LoadSquadr

; 636  : 			{
; 637  : 				if(!SquadPtr->squadronPatch)

	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	movsx	edx, WORD PTR [ecx+22]
	test	edx, edx
	jne	SHORT $LN1@LoadSquadr

; 638  : 				{
; 639  : 					SquadPtr->squadronPatch=AssignUISquadronID(SquadPtr->nameId);

	mov	eax, DWORD PTR _SquadPtr$[ebp]
	movzx	ecx, WORD PTR [eax+18]
	push	ecx
	call	?AssignUISquadronID@@YAEF@Z		; AssignUISquadronID
	add	esp, 4
	movzx	dx, al
	mov	eax, DWORD PTR _SquadPtr$[ebp]
	mov	WORD PTR [eax+22], dx
$LN1@LoadSquadr:

; 640  : 				}
; 641  : 				bmp->SetImage(SquadronMatchIDs[SquadPtr->squadronPatch][0]);

	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	movsx	edx, WORD PTR [ecx+22]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR ?SquadronMatchIDs@@3PAY01JA[eax+edx*8]
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage
$LN18@LoadSquadr:

; 642  : 			}
; 643  : 		}
; 644  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN29@LoadSquadr:

; 645  : 	}
; 646  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadSquadronInfo@@YAXXZ$0:
	lea	ecx, DWORD PTR _sit$4[ebp]
	jmp	??1VuSessionsIterator@@UAE@XZ		; VuSessionsIterator::~VuSessionsIterator
__ehhandler$?LoadSquadronInfo@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadSquadronInfo@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadSquadronInfo@@YAXXZ ENDP				; LoadSquadronInfo
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
$T2 = -80						; size = 4
_maxy$ = -76						; size = 4
_IconID$ = -72						; size = 4
tv205 = -68						; size = 4
$T3 = -64						; size = 4
tv79 = -60						; size = 4
_savex$ = -56						; size = 4
_savey$ = -52						; size = 4
_win$ = -48						; size = 4
_mapratio$4 = -44					; size = 4
_y$ = -40						; size = 4
_x$ = -36						; size = 4
_rsc$ = -32						; size = 4
_i$ = -28						; size = 4
_res_w$ = -24						; size = 4
_res$ = -20						; size = 4
_btn$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?AddSquadronsToMap@@YAXXZ PROC				; AddSquadronsToMap

; 333  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddSquadronsToMap@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 334  : 	C_Window *win;
; 335  : 	C_Button *btn;
; 336  : 	C_Resmgr *res,*res_w;
; 337  : 	IMAGE_RSC *rsc;
; 338  : 	int i;//! was uint
; 339  : 	long IconID;
; 340  : 	int savex=-1,savey=-1;

	mov	DWORD PTR _savex$[ebp], -1
	mov	DWORD PTR _savey$[ebp], -1

; 341  : 	float x,y;
; 342  : 	float maxy;
; 343  : 
; 344  : 	maxy=(float)(TheCampaign.TheaterSizeY)*FEET_PER_KM;

	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	DWORD PTR _maxy$[ebp], xmm0

; 345  : 
; 346  : 	win=gMainHandler->FindWindow(CS_MAP_WIN);

	push	40400					; 00009dd0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 347  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN25@AddSquadro

; 348  : 	{
; 349  : 		// This should be found based on your team...
; 350  : 		// NOT hard coded
; 351  : 		DeleteGroupList(CS_MAP_WIN);

	push	40400					; 00009dd0H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 352  : 
; 353  : 		// Add all the Squadron Patches into the map M.N. use different colors per team
; 354  : 		for(i=0;i<TheCampaign.NumAvailSquadrons;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN24@AddSquadro
$LN23@AddSquadro:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN24@AddSquadro:
	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], edx
	jge	$LN22@AddSquadro

; 355  : 		{
; 356  : 			switch (TheCampaign.CampaignSquadronData[i].country)

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movzx	edx, BYTE PTR [ecx+eax+26]
	mov	DWORD PTR tv79[ebp], edx
	cmp	DWORD PTR tv79[ebp], 7
	ja	$LN11@AddSquadro
	mov	eax, DWORD PTR tv79[ebp]
	jmp	DWORD PTR $LN32@AddSquadro[eax*4]
$LN19@AddSquadro:

; 357  : 			{
; 358  : 			case 0:
; 359  : 				res=gImageMgr->GetImageRes(GREY_TEAM_ICONS);

	push	565120006				; 21af0c06H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 360  : 				res_w=gImageMgr->GetImageRes(GREY_TEAM_ICONS_W);

	push	565120007				; 21af0c07H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 361  : 				break;

	jmp	$LN20@AddSquadro
$LN18@AddSquadro:

; 362  : 			case 1:
; 363  : 				res=gImageMgr->GetImageRes(WHITE_TEAM_ICONS);

	push	565120012				; 21af0c0cH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 364  : 				res_w=gImageMgr->GetImageRes(WHITE_TEAM_ICONS_W);

	push	565120013				; 21af0c0dH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 365  : 				break;

	jmp	$LN20@AddSquadro
$LN17@AddSquadro:

; 366  : 			case 2:
; 367  : 				res=gImageMgr->GetImageRes(BLUE_TEAM_ICONS);

	push	565120000				; 21af0c00H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 368  : 				res_w=gImageMgr->GetImageRes(BLUE_TEAM_ICONS_W);

	push	565120001				; 21af0c01H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 369  : 				break;

	jmp	$LN20@AddSquadro
$LN16@AddSquadro:

; 370  : 			case 3:
; 371  : 				res=gImageMgr->GetImageRes(BROWN_TEAM_ICONS);

	push	565120002				; 21af0c02H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 372  : 				res_w=gImageMgr->GetImageRes(BROWN_TEAM_ICONS_W);

	push	565120003				; 21af0c03H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 373  : 				break;

	jmp	$LN20@AddSquadro
$LN15@AddSquadro:

; 374  : 			case 4:
; 375  : 				res=gImageMgr->GetImageRes(ORANGE_TEAM_ICONS);

	push	565120008				; 21af0c08H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 376  : 				res_w=gImageMgr->GetImageRes(ORANGE_TEAM_ICONS_W);

	push	565120009				; 21af0c09H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 377  : 				break;

	jmp	$LN20@AddSquadro
$LN14@AddSquadro:

; 378  : 			case 5:
; 379  : 				res=gImageMgr->GetImageRes(YELLOW_TEAM_ICONS);

	push	565120014				; 21af0c0eH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 380  : 				res_w=gImageMgr->GetImageRes(YELLOW_TEAM_ICONS_W);

	push	565120015				; 21af0c0fH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 381  : 				break;

	jmp	SHORT $LN20@AddSquadro
$LN13@AddSquadro:

; 382  : 			case 6:
; 383  : 				res=gImageMgr->GetImageRes(RED_TEAM_ICONS);

	push	565120010				; 21af0c0aH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 384  : 				res_w=gImageMgr->GetImageRes(RED_TEAM_ICONS_W);

	push	565120011				; 21af0c0bH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 385  : 				break;

	jmp	SHORT $LN20@AddSquadro
$LN12@AddSquadro:

; 386  : 			case 7:
; 387  : 				res=gImageMgr->GetImageRes(GREEN_TEAM_ICONS);

	push	565120004				; 21af0c04H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 388  : 				res_w=gImageMgr->GetImageRes(GREEN_TEAM_ICONS_W);

	push	565120005				; 21af0c05H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax

; 389  : 				break;

	jmp	SHORT $LN20@AddSquadro
$LN11@AddSquadro:

; 390  : 			default:
; 391  : 				ShiWarning("Bad team found");
; 392  : 				res=gImageMgr->GetImageRes(BLUE_TEAM_ICONS);

	push	565120000				; 21af0c00H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res$[ebp], eax

; 393  : 				res_w=gImageMgr->GetImageRes(BLUE_TEAM_ICONS_W);

	push	565120001				; 21af0c01H
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImageRes@C_Image@@QAEPAVC_Resmgr@@J@Z ; C_Image::GetImageRes
	mov	DWORD PTR _res_w$[ebp], eax
$LN20@AddSquadro:

; 394  : 			}
; 395  : 		
; 396  : 			if (TheCampaign.IsValidSquadron(i)  || _IsF16_)

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN9@AddSquadro
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	$LN10@AddSquadro
$LN9@AddSquadro:

; 397  : 			{
; 398  : 				x=TheCampaign.CampaignSquadronData[i].y; // real world x & y are y & x

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movss	xmm0, DWORD PTR [eax+edx+4]
	movss	DWORD PTR _x$[ebp], xmm0

; 399  : 				y=TheCampaign.CampaignSquadronData[i].x;

	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movss	xmm0, DWORD PTR [edx+ecx]
	movss	DWORD PTR _y$[ebp], xmm0

; 400  : 
; 401  : 				int mapratio = MAP_RATIO;

	mov	DWORD PTR _mapratio$4[ebp], 6

; 402  : 	// 2002-02-01 MN This fixes squad selection map in hires UI - still need a solution for lowres UI
; 403  : 				if (g_bHiResUI && !g_LargeTheater)

	movzx	eax, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	eax, eax
	je	SHORT $LN8@AddSquadro
	movzx	ecx, BYTE PTR ?g_LargeTheater@@3_NA	; g_LargeTheater
	test	ecx, ecx
	jne	SHORT $LN8@AddSquadro

; 404  : 				{
; 405  : 					mapratio /= 2;

	mov	eax, DWORD PTR _mapratio$4[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mapratio$4[ebp], eax
$LN8@AddSquadro:

; 406  : 				}
; 407  : 				x=x/(FEET_PER_KM * mapratio);

	cvtsi2ss xmm0, DWORD PTR _mapratio$4[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	xmm1, DWORD PTR _x$[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _x$[ebp], xmm1

; 408  : 				y=(maxy-y)/(FEET_PER_KM * mapratio);

	movss	xmm0, DWORD PTR _maxy$[ebp]
	subss	xmm0, DWORD PTR _y$[ebp]
	cvtsi2ss xmm1, DWORD PTR _mapratio$4[ebp]
	mulss	xmm1, DWORD PTR __real@454cffae
	divss	xmm0, xmm1
	movss	DWORD PTR _y$[ebp], xmm0

; 409  : 
; 410  : //				IconID=TheCampaign.CampaignSquadronData[i].airbaseIcon; // too big
; 411  : 				IconID=10003;

	mov	DWORD PTR _IconID$[ebp], 10003		; 00002713H

; 412  : 
; 413  : 				if (i == gSelectedSquadronID || savex == -1 || savey == -1)

	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _gSelectedSquadronID
	je	SHORT $LN6@AddSquadro
	cmp	DWORD PTR _savex$[ebp], -1
	je	SHORT $LN6@AddSquadro
	cmp	DWORD PTR _savey$[ebp], -1
	jne	SHORT $LN7@AddSquadro
$LN6@AddSquadro:

; 414  : 				{
; 415  : 					savex=static_cast<int>(x);

	cvttss2si eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _savex$[ebp], eax

; 416  : 					savey=static_cast<int>(y);

	cvttss2si ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR _savey$[ebp], ecx
$LN7@AddSquadro:

; 417  : 				}
; 418  : 
; 419  : 				btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN28@AddSquadro
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv205[ebp], eax
	jmp	SHORT $LN29@AddSquadro
$LN28@AddSquadro:
	mov	DWORD PTR tv205[ebp], 0
$LN29@AddSquadro:
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], eax

; 420  : 				btn->Setup(((long)x << 16) | (long)y,C_TYPE_RADIO,(int)x,(int)y);

	cvttss2si ecx, DWORD PTR _y$[ebp]
	push	ecx
	cvttss2si edx, DWORD PTR _x$[ebp]
	push	edx
	push	27					; 0000001bH
	cvttss2si eax, DWORD PTR _x$[ebp]
	shl	eax, 16					; 00000010H
	cvttss2si ecx, DWORD PTR _y$[ebp]
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 421  : 				btn->SetFlagBitOn(C_BIT_HCENTER|C_BIT_VCENTER);

	push	1536					; 00000600H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 422  : 				btn->SetGroup(-100);

	push	-100					; ffffff9cH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 423  : 				btn->SetCluster(i+1);

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetCluster@C_Base@@QAEXJ@Z		; C_Base::SetCluster

; 424  : 				if(res)

	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN4@AddSquadro

; 425  : 				{
; 426  : 					rsc=(IMAGE_RSC*)res->Find(IconID);

	mov	ecx, DWORD PTR _IconID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 427  : 					if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN4@AddSquadro
	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax], 100			; 00000064H
	jne	SHORT $LN4@AddSquadro

; 428  : 						btn->SetImage(C_STATE_0,rsc);

	mov	ecx, DWORD PTR _rsc$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage
$LN4@AddSquadro:

; 429  : 				}
; 430  : 				if(res_w)

	cmp	DWORD PTR _res_w$[ebp], 0
	je	SHORT $LN2@AddSquadro

; 431  : 				{
; 432  : 					rsc=(IMAGE_RSC*)res_w->Find(IconID);

	mov	edx, DWORD PTR _IconID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _res_w$[ebp]
	call	?Find@C_Resmgr@@QAEPAXJ@Z		; C_Resmgr::Find
	mov	DWORD PTR _rsc$[ebp], eax

; 433  : 					if(rsc && rsc->Header->Type == _RSC_IS_IMAGE_)

	cmp	DWORD PTR _rsc$[ebp], 0
	je	SHORT $LN2@AddSquadro
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx], 100			; 00000064H
	jne	SHORT $LN2@AddSquadro

; 434  : 						btn->SetImage(C_STATE_1,rsc);

	mov	edx, DWORD PTR _rsc$[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetImage@C_Button@@QAEXFPAVIMAGE_RSC@@@Z ; C_Button::SetImage
$LN2@AddSquadro:

; 435  : 				}
; 436  : 				btn->SetCallback(PickAirbaseCB);

	push	OFFSET ?PickAirbaseCB@@YAXJFPAVC_Base@@@Z ; PickAirbaseCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 437  : 				btn->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 438  : 				btn->SetHelpText(HELP_PICK_AIRBASE);

	push	227					; 000000e3H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax

; 439  : 				btn->SetCursorID(CRSR_F16_ON);

	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 440  : 				if(gSelectedSquadronID == i)

	mov	ecx, DWORD PTR _gSelectedSquadronID
	cmp	ecx, DWORD PTR _i$[ebp]
	jne	SHORT $LN1@AddSquadro

; 441  : 					btn->SetState(1);

	push	1
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN1@AddSquadro:

; 442  : 				win->AddControl(btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN10@AddSquadro:

; 443  : 			}
; 444  : 		}

	jmp	$LN23@AddSquadro
$LN22@AddSquadro:

; 445  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 446  : 		SetupMapSquadronWindow(savex,savey);

	mov	ecx, DWORD PTR _savey$[ebp]
	push	ecx
	mov	edx, DWORD PTR _savex$[ebp]
	push	edx
	call	?SetupMapSquadronWindow@@YAXHH@Z	; SetupMapSquadronWindow
	add	esp, 8
$LN25@AddSquadro:

; 447  : 	}
; 448  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN32@AddSquadro:
	DD	$LN19@AddSquadro
	DD	$LN18@AddSquadro
	DD	$LN17@AddSquadro
	DD	$LN16@AddSquadro
	DD	$LN15@AddSquadro
	DD	$LN14@AddSquadro
	DD	$LN13@AddSquadro
	DD	$LN12@AddSquadro
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddSquadronsToMap@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddSquadronsToMap@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddSquadronsToMap@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddSquadronsToMap@@YAXXZ ENDP				; AddSquadronsToMap
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_bmp$ = -4						; size = 4
?SetupMapWindow@@YAXXZ PROC				; SetupMapWindow

; 292  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 293  : 	C_Window *win;
; 294  : 	C_Bitmap *bmp;
; 295  : 
; 296  : 	win=gMainHandler->FindWindow(CS_MAP_WIN);

	push	40400					; 00009dd0H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 297  : // MN turn off the occupation maps for now for 128x128 theaters - they cause CTD's...
; 298  : 	if(win && !g_LargeTheater)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN10@SetupMapWi
	movzx	eax, BYTE PTR ?g_LargeTheater@@3_NA	; g_LargeTheater
	test	eax, eax
	jne	$LN10@SetupMapWi

; 299  : 	{
; 300  : 		DeleteGroupList(CS_MAP_WIN);

	push	40400					; 00009dd0H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 301  : 		// Create Occupation Map
; 302  : 		if (gOccupationMap == NULL && (TheCampaign.TheaterSizeX && TheCampaign.TheaterSizeY))

	cmp	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gOccupationMap
	jne	SHORT $LN8@SetupMapWi
	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	test	ecx, ecx
	je	SHORT $LN8@SetupMapWi
	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	test	edx, edx
	je	SHORT $LN8@SetupMapWi

; 303  : 			gOccupationMap=CreateOccupationMap(1,TheCampaign.TheaterSizeX/MAP_RATIO,TheCampaign.TheaterSizeY/MAP_RATIO,16);

	push	16					; 00000010H
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cdq
	mov	ecx, 6
	idiv	ecx
	push	eax
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cdq
	mov	ecx, 6
	idiv	ecx
	push	eax
	push	1
	call	?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z ; CreateOccupationMap
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, eax ; gOccupationMap
$LN8@SetupMapWi:

; 304  : 		if (gOccupationMap)

	cmp	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gOccupationMap
	je	SHORT $LN7@SetupMapWi

; 305  : 			MakeOccupationMap(gOccupationMap);

	mov	edx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	edx
	call	?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z	; MakeOccupationMap
	add	esp, 4
$LN7@SetupMapWi:

; 306  : // MN big occupation map when HiResUI
; 307  : 		if (g_bHiResUI)

	movzx	eax, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	eax, eax
	je	SHORT $LN6@SetupMapWi

; 308  : 		{
; 309  : 			if (gBigOccupationMap == NULL && (TheCampaign.TheaterSizeX && TheCampaign.TheaterSizeY))

	cmp	DWORD PTR ?gBigOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gBigOccupationMap
	jne	SHORT $LN5@SetupMapWi
	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	test	ecx, ecx
	je	SHORT $LN5@SetupMapWi
	movsx	edx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	test	edx, edx
	je	SHORT $LN5@SetupMapWi

; 310  : 				gBigOccupationMap=CreateOccupationMap(2,TheCampaign.TheaterSizeX/(MAP_RATIO/2),TheCampaign.TheaterSizeY/(MAP_RATIO/2),16);

	push	16					; 00000010H
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cdq
	mov	ecx, 3
	idiv	ecx
	push	eax
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+86
	cdq
	mov	ecx, 3
	idiv	ecx
	push	eax
	push	2
	call	?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z ; CreateOccupationMap
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?gBigOccupationMap@@3PAVIMAGE_RSC@@A, eax ; gBigOccupationMap
$LN5@SetupMapWi:

; 311  : 			if (gBigOccupationMap)

	cmp	DWORD PTR ?gBigOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gBigOccupationMap
	je	SHORT $LN6@SetupMapWi

; 312  : 				MakeBigOccupationMap(gBigOccupationMap);

	mov	edx, DWORD PTR ?gBigOccupationMap@@3PAVIMAGE_RSC@@A ; gBigOccupationMap
	push	edx
	call	?MakeBigOccupationMap@@YAXPAVIMAGE_RSC@@@Z ; MakeBigOccupationMap
	add	esp, 4
$LN6@SetupMapWi:

; 313  : 		}
; 314  : 		bmp=(C_Bitmap *)win->FindControl(CS_MAP_WIN);

	push	40400					; 00009dd0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 315  : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN10@SetupMapWi

; 316  : 		{
; 317  : /*			if(gOccupationMap == NULL && (TheCampaign.TheaterSizeX && TheCampaign.TheaterSizeY))
; 318  : 			{
; 319  : 				// Create Occupation map...
; 320  : 				gOccupationMap=CreateOccupationMap(1,TheCampaign.TheaterSizeX/MAP_RATIO,TheCampaign.TheaterSizeY/MAP_RATIO,16);*/
; 321  : 			if (g_bHiResUI)

	movzx	eax, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	eax, eax
	je	SHORT $LN2@SetupMapWi

; 322  : 				bmp->SetImage(gBigOccupationMap);

	mov	ecx, DWORD PTR ?gBigOccupationMap@@3PAVIMAGE_RSC@@A ; gBigOccupationMap
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 323  : 			else

	jmp	SHORT $LN10@SetupMapWi
$LN2@SetupMapWi:

; 324  : 				bmp->SetImage(gOccupationMap);

	mov	edx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	edx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage
$LN10@SetupMapWi:

; 325  : /*			}
; 326  : //			if(gOccupationMap)
; 327  : 				MakeOccupationMap(gOccupationMap);*/
; 328  : 		}
; 329  : 	}
; 330  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SetupMapWindow@@YAXXZ ENDP				; SetupMapWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_r_mask$ = -76						; size = 4
_g_mask$ = -72						; size = 4
_b_mask$ = -68						; size = 4
$T2 = -64						; size = 4
$T3 = -60						; size = 4
$T4 = -56						; size = 4
$T5 = -52						; size = 4
_size$ = -48						; size = 4
tv78 = -44						; size = 4
$T6 = -40						; size = 4
_data8$ = -36						; size = 4
_res$ = -32						; size = 4
_rsc$ = -28						; size = 4
_r_shift$ = -24						; size = 2
_g_shift$ = -20						; size = 2
_b_shift$ = -16						; size = 2
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
_w$ = 12						; size = 4
_h$ = 16						; size = 4
_palsize$ = 20						; size = 4
?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z PROC	; CreateOccupationMap

; 243  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 244  : 	IMAGE_RSC *rsc;
; 245  : 	C_Resmgr  *res;
; 246  : 	unsigned char *data8;
; 247  : 	long size;
; 248  : 	DWORD r_mask;
; 249  : 	WORD r_shift;
; 250  : 	DWORD g_mask;
; 251  : 	WORD g_shift;
; 252  : 	DWORD b_mask;
; 253  : 	WORD b_shift;
; 254  : 
; 255  : 	if(palsize > 256)

	cmp	DWORD PTR _palsize$[ebp], 256		; 00000100H
	jle	SHORT $LN2@CreateOccu

; 256  : 		return(NULL);

	xor	eax, eax
	jmp	$LN3@CreateOccu
$LN2@CreateOccu:

; 257  : 
; 258  : 	size=w*h+palsize*2;

	mov	eax, DWORD PTR _w$[ebp]
	imul	eax, DWORD PTR _h$[ebp]
	mov	ecx, DWORD PTR _palsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _size$[ebp], edx

; 259  : 	data8=new unsigned char[size];

	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR _data8$[ebp], ecx

; 260  : 	if(!data8)

	cmp	DWORD PTR _data8$[ebp], 0
	jne	SHORT $LN1@CreateOccu

; 261  : 		return(NULL);

	xor	eax, eax
	jmp	$LN3@CreateOccu
$LN1@CreateOccu:

; 262  : 
; 263  : 	res=new C_Resmgr;

	push	304					; 00000130H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN5@CreateOccu
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_Resmgr@@QAE@XZ			; C_Resmgr::C_Resmgr
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@CreateOccu
$LN5@CreateOccu:
	mov	DWORD PTR tv78[ebp], 0
$LN6@CreateOccu:
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _res$[ebp], eax

; 264  : 	res->Setup(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?Setup@C_Resmgr@@QAEXJ@Z		; C_Resmgr::Setup

; 265  : 	res->SetColorKey(UI95_RGB24Bit(0x00ff00ff));

	push	16711935				; 00ff00ffH
	call	?UI95_RGB24Bit@@YAGK@Z			; UI95_RGB24Bit
	add	esp, 4
	movzx	edx, ax
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?SetColorKey@C_Resmgr@@QAEXG@Z		; C_Resmgr::SetColorKey

; 266  : //!	UI95_GetScreenColorInfo(&r_mask,&r_shift,&g_mask,&g_shift,&b_mask,&b_shift);
; 267  : 	UI95_GetScreenColorInfo(r_mask,r_shift,g_mask,g_shift,b_mask,b_shift);

	lea	eax, DWORD PTR _b_shift$[ebp]
	push	eax
	lea	ecx, DWORD PTR _b_mask$[ebp]
	push	ecx
	lea	edx, DWORD PTR _g_shift$[ebp]
	push	edx
	lea	eax, DWORD PTR _g_mask$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r_shift$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r_mask$[ebp]
	push	edx
	call	?UI95_GetScreenColorInfo@@YAXAAKAAG0101@Z ; UI95_GetScreenColorInfo
	add	esp, 24					; 00000018H

; 268  : 	res->SetScreenFormat(r_shift,g_shift,b_shift);

	movzx	eax, WORD PTR _b_shift$[ebp]
	push	eax
	movzx	ecx, WORD PTR _g_shift$[ebp]
	push	ecx
	movzx	edx, WORD PTR _r_shift$[ebp]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?SetScreenFormat@C_Resmgr@@QAEXFFF@Z	; C_Resmgr::SetScreenFormat

; 269  : 
; 270  : 	rsc=new IMAGE_RSC;

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _rsc$[ebp], eax

; 271  : 	rsc->ID=ID;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [ecx], edx

; 272  : 	rsc->Header=new ImageHeader;

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax+8], ecx

; 273  : 	rsc->Header->Type=_RSC_IS_IMAGE_;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], 100			; 00000064H

; 274  : 	rsc->Header->ID[0]=0;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, 1
	imul	eax, 0
	mov	BYTE PTR [edx+eax+4], 0

; 275  : 	rsc->Header->flags=_RSC_8_BIT_;

	mov	ecx, DWORD PTR _rsc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+36], 1

; 276  : 	rsc->Header->w=static_cast<short>(w);

	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR _w$[ebp]
	mov	WORD PTR [ecx+44], dx

; 277  : 	rsc->Header->h=static_cast<short>(h);

	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR _h$[ebp]
	mov	WORD PTR [ecx+46], dx

; 278  : 	rsc->Header->centerx=0;

	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	edx, edx
	mov	WORD PTR [ecx+40], dx

; 279  : 	rsc->Header->centery=0;

	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	edx, edx
	mov	WORD PTR [ecx+42], dx

; 280  : 	rsc->Header->imageoffset=0;

	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+48], 0

; 281  : 	rsc->Header->paletteoffset=w*h;

	mov	edx, DWORD PTR _w$[ebp]
	imul	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR _rsc$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+56], edx

; 282  : 	rsc->Header->palettesize=palsize;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _palsize$[ebp]
	mov	DWORD PTR [eax+52], ecx

; 283  : 	rsc->Owner=res;

	mov	edx, DWORD PTR _rsc$[ebp]
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR [edx+4], eax

; 284  : 
; 285  : 	res->AddIndex(ID,rsc);

	mov	ecx, DWORD PTR _rsc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?AddIndex@C_Resmgr@@QAEXJPAVIMAGE_RSC@@@Z ; C_Resmgr::AddIndex

; 286  : 	res->SetData((char*)data8);

	mov	eax, DWORD PTR _data8$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?SetData@C_Resmgr@@QAEXPAD@Z		; C_Resmgr::SetData

; 287  : 	memset(data8,0,size);

	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _data8$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 288  : 	return(rsc);

	mov	eax, DWORD PTR _rsc$[ebp]
$LN3@CreateOccu:

; 289  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z$0:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateOccupationMap@@YAPAVIMAGE_RSC@@JJJJ@Z ENDP	; CreateOccupationMap
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ID$ = -4						; size = 4
?LoadCampaignSelectWindows@@YAXXZ PROC			; LoadCampaignSelectWindows

; 199  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 200  : 	long ID;
; 201  : 
; 202  : 	if(CPSelectLoaded) return;

	cmp	DWORD PTR ?CPSelectLoaded@@3HA, 0	; CPSelectLoaded
	je	SHORT $LN6@LoadCampai
	jmp	$LN7@LoadCampai
$LN6@LoadCampai:

; 203  : 
; 204  : 	if( _LOAD_ART_RESOURCES_)

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN5@LoadCampai

; 205  : 		gMainParser->LoadImageList("cs_res.lst");

	push	OFFSET ??_C@_0L@EFHDDHPD@cs_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 206  : 	else

	jmp	SHORT $LN4@LoadCampai
$LN5@LoadCampai:

; 207  : 		gMainParser->LoadImageList("cs_art.lst");

	push	OFFSET ??_C@_0L@IDLJDMD@cs_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN4@LoadCampai:

; 208  : 	gMainParser->LoadSoundList("cs_snd.lst");

	push	OFFSET ??_C@_0L@JFANFBLE@cs_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 209  : 	gMainParser->LoadWindowList("cs_scf.lst");  // Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0L@LJBCJBHP@cs_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 210  : 
; 211  : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN3@LoadCampai:

; 212  : 	while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN2@LoadCampai

; 213  : 	{
; 214  : 		HookupCampaignSelectControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupCampaignSelectControls@@YAXJ@Z	; HookupCampaignSelectControls
	add	esp, 4

; 215  : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 216  : 	}

	jmp	SHORT $LN3@LoadCampai
$LN2@LoadCampai:

; 217  : 
; 218  : 	CPSelectLoaded++;

	mov	ecx, DWORD PTR ?CPSelectLoaded@@3HA	; CPSelectLoaded
	add	ecx, 1
	mov	DWORD PTR ?CPSelectLoaded@@3HA, ecx	; CPSelectLoaded

; 219  : 	SetSingle_Comms_Ctrls();

	call	?SetSingle_Comms_Ctrls@@YAXXZ		; SetSingle_Comms_Ctrls

; 220  : 
; 221  : 	if(!PlannerLoaded)

	cmp	DWORD PTR ?PlannerLoaded@@3HA, 0	; PlannerLoaded
	jne	SHORT $LN1@LoadCampai

; 222  : 		LoadPlannerWindows();

	call	?LoadPlannerWindows@@YAXXZ		; LoadPlannerWindows
$LN1@LoadCampai:

; 223  : 	CampSelMode=0;

	mov	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
$LN7@LoadCampai:

; 224  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?LoadCampaignSelectWindows@@YAXXZ ENDP			; LoadCampaignSelectWindows
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
;	COMDAT ??__EgPlayerSquadronId@@YAXXZ
text$yc	SEGMENT
??__EgPlayerSquadronId@@YAXXZ PROC			; `dynamic initializer for 'gPlayerSquadronId'', COMDAT

; 142  : VU_ID gPlayerSquadronId;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?gPlayerSquadronId@@3VVU_ID@@A ; gPlayerSquadronId
	call	??0VU_ID@@QAE@XZ			; VU_ID::VU_ID
	pop	ebp
	ret	0
??__EgPlayerSquadronId@@YAXXZ ENDP			; `dynamic initializer for 'gPlayerSquadronId''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
?CopySettingsToTemp@@YAXXZ PROC				; CopySettingsToTemp

; 1372 : 	{

	push	ebp
	mov	ebp, esp

; 1373 : 	if(!CampSelMode)

	cmp	DWORD PTR ?CampSelMode@@3HA, 0		; CampSelMode
	jne	SHORT $LN2@CopySettin

; 1374 : 		{
; 1375 : 		TEMP_Settings.PilotSkill=static_cast<uchar>(PlayerOptions.CampaignEnemyAirExperience());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignEnemyAirExperience@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignEnemyAirExperience
	mov	BYTE PTR _TEMP_Settings+1, al

; 1376 : 		TEMP_Settings.SAMSkill=static_cast<uchar>(PlayerOptions.CampaignEnemyGroundExperience());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignEnemyGroundExperience@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignEnemyGroundExperience
	mov	BYTE PTR _TEMP_Settings+2, al

; 1377 : 
; 1378 : 		TEMP_Settings.AirForces=static_cast<uchar>(PlayerOptions.CampaignAirRatio());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignAirRatio@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignAirRatio
	mov	BYTE PTR _TEMP_Settings+3, al

; 1379 : 		TEMP_Settings.AirDefenses=static_cast<uchar>(PlayerOptions.CampaignAirDefenseRatio());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignAirDefenseRatio@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignAirDefenseRatio
	mov	BYTE PTR _TEMP_Settings+4, al

; 1380 : 		TEMP_Settings.GroundForces=static_cast<uchar>(PlayerOptions.CampaignGroundRatio());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignGroundRatio@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignGroundRatio
	mov	BYTE PTR _TEMP_Settings+5, al

; 1381 : 		TEMP_Settings.NavalForces=static_cast<uchar>(PlayerOptions.CampaignNavalRatio());

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?CampaignNavalRatio@PlayerOptionsClass@@QAEHXZ ; PlayerOptionsClass::CampaignNavalRatio
	mov	BYTE PTR _TEMP_Settings+6, al

; 1382 : 		}
; 1383 : 	else

	jmp	SHORT $LN3@CopySettin
$LN2@CopySettin:

; 1384 : 		{
; 1385 : 		TEMP_Settings.PilotSkill=TheCampaign.EnemyAirExp;

	mov	al, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+95
	mov	BYTE PTR _TEMP_Settings+1, al

; 1386 : 		TEMP_Settings.SAMSkill=TheCampaign.EnemyADExp;

	mov	cl, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+96
	mov	BYTE PTR _TEMP_Settings+2, cl

; 1387 : 
; 1388 : 		TEMP_Settings.AirForces=static_cast<uchar>(TheCampaign.AirRatio);

	mov	dl, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+76
	mov	BYTE PTR _TEMP_Settings+3, dl

; 1389 : 		TEMP_Settings.AirDefenses=static_cast<uchar>(TheCampaign.AirDefenseRatio);

	mov	al, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+78
	mov	BYTE PTR _TEMP_Settings+4, al

; 1390 : 		TEMP_Settings.GroundForces=static_cast<uchar>(TheCampaign.GroundRatio);

	mov	cl, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+74
	mov	BYTE PTR _TEMP_Settings+5, cl

; 1391 : 		TEMP_Settings.NavalForces=static_cast<uchar>(TheCampaign.NavalRatio);

	mov	dl, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+80
	mov	BYTE PTR _TEMP_Settings+6, dl
$LN3@CopySettin:

; 1392 : 		}
; 1393 : 	}

	pop	ebp
	ret	0
?CopySettingsToTemp@@YAXXZ ENDP				; CopySettingsToTemp
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_win$ = -16						; size = 4
tv82 = -12						; size = 4
_id$ = -8						; size = 4
tv93 = -4						; size = 4
_bits$ = 8						; size = 4
?DisplayJoinStatusWindow@@YAXH@Z PROC			; DisplayJoinStatusWindow

; 1839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1840 : 	static long
; 1841 : 		last_id;
; 1842 : 
; 1843 : 	long
; 1844 : 		id = 0;//! uninitialized

	mov	DWORD PTR _id$[ebp], 0

; 1845 : 
; 1846 : 	C_Window
; 1847 : 		*win;
; 1848 : 
; 1849 : 	if ((!gCommsMgr->Online()) || (FalconLocalGame->IsLocal()))

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN13@DisplayJoi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@DisplayJoi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN18@DisplayJoi
$LN17@DisplayJoi:
	mov	DWORD PTR tv82[ebp], 0
$LN18@DisplayJoi:
	mov	ecx, DWORD PTR tv82[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@DisplayJoi
$LN13@DisplayJoi:

; 1850 : 	{
; 1851 : 		return;

	jmp	$LN15@DisplayJoi
$LN14@DisplayJoi:

; 1852 : 	}
; 1853 : 
; 1854 : 	if (TheCampaign.IsLoaded ())

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsLoaded@CampaignClass@@QAEHXZ		; CampaignClass::IsLoaded
	test	eax, eax
	je	SHORT $LN12@DisplayJoi

; 1855 : 	{
; 1856 : 		return;

	jmp	$LN15@DisplayJoi
$LN12@DisplayJoi:

; 1857 : 	}
; 1858 : 
; 1859 : 	if (bits == 0)

	cmp	DWORD PTR _bits$[ebp], 0
	jne	SHORT $LN11@DisplayJoi

; 1860 : 	{
; 1861 : 		join_status_bits = 0;

	mov	DWORD PTR _join_status_bits, 0

; 1862 : 	}
; 1863 : 	else

	jmp	SHORT $LN10@DisplayJoi
$LN11@DisplayJoi:

; 1864 : 	{
; 1865 : 		join_status_bits |= bits;

	mov	edx, DWORD PTR _join_status_bits
	or	edx, DWORD PTR _bits$[ebp]
	mov	DWORD PTR _join_status_bits, edx
$LN10@DisplayJoi:

; 1866 : 	}
; 1867 : 
; 1868 : 	switch (bits)

	mov	eax, DWORD PTR _bits$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	cmp	DWORD PTR tv93[ebp], 8388608		; 00800000H
	jg	SHORT $LN19@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 8388608		; 00800000H
	je	$LN4@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 1048576		; 00100000H
	jg	SHORT $LN20@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 1048576		; 00100000H
	je	SHORT $LN5@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 0
	je	SHORT $LN6@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 65536		; 00010000H
	je	SHORT $LN7@DisplayJoi
	jmp	SHORT $LN8@DisplayJoi
$LN20@DisplayJoi:
	cmp	DWORD PTR tv93[ebp], 2097152		; 00200000H
	je	SHORT $LN5@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 4194304		; 00400000H
	je	SHORT $LN4@DisplayJoi
	jmp	SHORT $LN8@DisplayJoi
$LN19@DisplayJoi:
	cmp	DWORD PTR tv93[ebp], 67108864		; 04000000H
	jg	SHORT $LN21@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 67108864		; 04000000H
	je	SHORT $LN3@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 16777216		; 01000000H
	je	SHORT $LN6@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 33554432		; 02000000H
	je	SHORT $LN3@DisplayJoi
	jmp	SHORT $LN8@DisplayJoi
$LN21@DisplayJoi:
	cmp	DWORD PTR tv93[ebp], 134217728		; 08000000H
	je	SHORT $LN3@DisplayJoi
	cmp	DWORD PTR tv93[ebp], 268435456		; 10000000H
	je	SHORT $LN3@DisplayJoi
	jmp	SHORT $LN8@DisplayJoi
$LN7@DisplayJoi:

; 1869 : 	{
; 1870 : 		case CAMP_GAME_FULL:
; 1871 : 			id = TXT_GAME_IS_OVER;

	mov	DWORD PTR _id$[ebp], 316		; 0000013cH

; 1872 : 			break;

	jmp	SHORT $LN8@DisplayJoi
$LN6@DisplayJoi:

; 1873 : 		case 0:
; 1874 : 		case CAMP_NEED_PRELOAD:
; 1875 : 			id = TXT_JOIN_STARTING;

	mov	DWORD PTR _id$[ebp], 318		; 0000013eH

; 1876 : 			break;

	jmp	SHORT $LN8@DisplayJoi
$LN5@DisplayJoi:

; 1877 : 		case CAMP_NEED_ENTITIES:
; 1878 : 		case CAMP_NEED_WEATHER:
; 1879 : 			id = TXT_JOIN_WEATHER;

	mov	DWORD PTR _id$[ebp], 319		; 0000013fH

; 1880 : 			break;

	jmp	SHORT $LN8@DisplayJoi
$LN4@DisplayJoi:

; 1881 : 		case CAMP_NEED_PERSIST:
; 1882 : 		case CAMP_NEED_OBJ_DELTAS:
; 1883 : 			id = TXT_JOIN_OBJECTS;

	mov	DWORD PTR _id$[ebp], 320		; 00000140H

; 1884 : 			break;

	jmp	SHORT $LN8@DisplayJoi
$LN3@DisplayJoi:

; 1885 : 		case CAMP_NEED_TEAM_DATA:
; 1886 : 		case CAMP_NEED_UNIT_DATA:
; 1887 : 		case CAMP_NEED_VC:
; 1888 : 		case CAMP_NEED_PRIORITIES:
; 1889 : 			id = TXT_JOIN_UNITS;

	mov	DWORD PTR _id$[ebp], 321		; 00000141H
$LN8@DisplayJoi:

; 1890 : 			break;
; 1891 : 	}
; 1892 : 
; 1893 : 	if (id != last_id)

	mov	ecx, DWORD PTR _id$[ebp]
	cmp	ecx, DWORD PTR ?last_id@?1??DisplayJoinStatusWindow@@YAXH@Z@4JA
	je	SHORT $LN2@DisplayJoi

; 1894 : 	{
; 1895 : 		win=gMainHandler->FindWindow(COMMLINK_WIN);

	push	19600					; 00004c90H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1896 : 		if (win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@DisplayJoi

; 1897 : 		{
; 1898 : 			gMainHandler->HideWindow (win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@DisplayJoi:

; 1899 : 		}
; 1900 : 
; 1901 : 		last_id = id;

	mov	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR ?last_id@?1??DisplayJoinStatusWindow@@YAXH@Z@4JA, eax
$LN2@DisplayJoi:

; 1902 : 	}
; 1903 : 
; 1904 : 	CommsErrorDialog (TXT_JOINING_GAME, id, NULL, JoinStatusCancelCB);

	push	OFFSET ?JoinStatusCancelCB@@YAXJFPAVC_Base@@@Z ; JoinStatusCancelCB
	push	0
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	317					; 0000013dH
	call	?CommsErrorDialog@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; CommsErrorDialog
	add	esp, 16					; 00000010H
$LN15@DisplayJoi:

; 1905 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DisplayJoinStatusWindow@@YAXH@Z ENDP			; DisplayJoinStatusWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?PickAirbaseCB@@YAXJFPAVC_Base@@@Z PROC			; PickAirbaseCB

; 1031 : {

	push	ebp
	mov	ebp, esp

; 1032 : 	gSelectedSquadronID=-1;

	mov	DWORD PTR _gSelectedSquadronID, -1

; 1033 : 	SetupMapSquadronWindow(control->GetX(),control->GetY());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetY@C_Base@@QAEJXZ			; C_Base::GetY
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetX@C_Base@@QAEJXZ			; C_Base::GetX
	push	eax
	call	?SetupMapSquadronWindow@@YAXHH@Z	; SetupMapSquadronWindow
	add	esp, 8

; 1034 : }

	pop	ebp
	ret	0
?PickAirbaseCB@@YAXJFPAVC_Base@@@Z ENDP			; PickAirbaseCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?PickSquadronCB@@YAXJFPAVC_Base@@@Z PROC		; PickSquadronCB

; 1037 : {

	push	ebp
	mov	ebp, esp

; 1038 : 	gSelectedSquadronID=ID-1;

	mov	eax, DWORD PTR _ID$[ebp]
	sub	eax, 1
	mov	DWORD PTR _gSelectedSquadronID, eax

; 1039 : 	LoadSquadronInfo();

	call	?LoadSquadronInfo@@YAXXZ		; LoadSquadronInfo

; 1040 : }

	pop	ebp
	ret	0
?PickSquadronCB@@YAXJFPAVC_Base@@@Z ENDP		; PickSquadronCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
tv70 = -8						; size = 4
_i$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectScenarioCB@@YAXJFPAVC_Base@@@Z PROC		; SelectScenarioCB

; 819  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 820  : 	int	i;
; 821  : 
; 822  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN17@SelectScen

; 823  : 		return;

	jmp	$LN19@SelectScen
$LN17@SelectScen:

; 824  : 
; 825  : 	SelectScenarioButtons(ID);

	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?SelectScenarioButtons@@YAXJ@Z		; SelectScenarioButtons
	add	esp, 4

; 826  : 
; 827  : 	gLastCampFilename[0]=0;

	mov	edx, 1
	imul	edx, 0
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 260			; 00000104H
	jae	SHORT $LN20@SelectScen
	jmp	SHORT $LN21@SelectScen
$LN20@SelectScen:
	call	___report_rangecheckfailure
$LN21@SelectScen:
	mov	eax, DWORD PTR $T1[ebp]
	mov	BYTE PTR ?gLastCampFilename@@3PADA[eax], 0

; 828  : 	switch(ID)

	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 40900		; 00009fc4H
	je	SHORT $LN14@SelectScen
	cmp	DWORD PTR tv70[ebp], 40901		; 00009fc5H
	je	SHORT $LN13@SelectScen
	cmp	DWORD PTR tv70[ebp], 40902		; 00009fc6H
	je	SHORT $LN12@SelectScen
	jmp	$LN11@SelectScen
$LN14@SelectScen:

; 829  : 	{
; 830  : 		case CS_LOAD_SCENARIO1:
; 831  : 			strcpy(gUI_CampaignFile,"save0");

	push	OFFSET ??_C@_05LINHLPLG@save0?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 832  : 			_tcscpy(gUI_ScenarioName,gStringMgr->GetString(TXT_SCENARIO_1));

	push	121					; 00000079H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 833  : 			break;

	jmp	SHORT $LN15@SelectScen
$LN13@SelectScen:

; 834  : 
; 835  : 		case CS_LOAD_SCENARIO2:
; 836  : 			strcpy(gUI_CampaignFile,"save1");

	push	OFFSET ??_C@_05KBMMIOPH@save1?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 837  : 			_tcscpy(gUI_ScenarioName,gStringMgr->GetString(TXT_SCENARIO_2));

	push	122					; 0000007aH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 838  : 			break;

	jmp	SHORT $LN15@SelectScen
$LN12@SelectScen:

; 839  : 
; 840  : 		case CS_LOAD_SCENARIO3:
; 841  : 			strcpy(gUI_CampaignFile,"save2");

	push	OFFSET ??_C@_05IKOBNNDE@save2?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcpy
	add	esp, 8

; 842  : 			_tcscpy(gUI_ScenarioName,gStringMgr->GetString(TXT_SCENARIO_3));

	push	123					; 0000007bH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ?gUI_ScenarioName@@3PADA		; gUI_ScenarioName
	call	_strcpy
	add	esp, 8

; 843  : 			break;

	jmp	SHORT $LN15@SelectScen
$LN11@SelectScen:

; 844  : 		default:
; 845  : 			return;

	jmp	$LN19@SelectScen
$LN15@SelectScen:

; 846  : 	}
; 847  : 	TheCampaign.LoadScenarioStats(game_Campaign, gUI_CampaignFile);

	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	push	4
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?LoadScenarioStats@CampaignClass@@QAEHW4FalconGameType@@PAD@Z ; CampaignClass::LoadScenarioStats

; 848  : 	// Pick the default squadron ID
; 849  : 	gSelectedSquadronID = -1;

	mov	DWORD PTR _gSelectedSquadronID, -1

; 850  : 	for(i=0; i<TheCampaign.NumAvailSquadrons; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@SelectScen
$LN9@SelectScen:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@SelectScen:
	movsx	eax, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN8@SelectScen

; 851  : 	{
; 852  : 		if (TheCampaign.CampaignSquadronData[i].id == TheCampaign.PlayerSquadronID && (TheCampaign.IsValidSquadron(i) || _IsF16_))

	push	OFFSET ?TheCampaign@@3VCampaignClass@@A+268
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 68					; 00000044H
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	lea	ecx, DWORD PTR [edx+ecx+8]
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@SelectScen
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN6@SelectScen
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	SHORT $LN7@SelectScen
$LN6@SelectScen:

; 853  : 			gSelectedSquadronID = i;

	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _gSelectedSquadronID, edx
$LN7@SelectScen:

; 854  : 	}

	jmp	SHORT $LN9@SelectScen
$LN8@SelectScen:

; 855  : 	EnableScenarioText(control);

	mov	eax, DWORD PTR _control$[ebp]
	push	eax
	call	?EnableScenarioText@@YAXPAVC_Base@@@Z	; EnableScenarioText
	add	esp, 4

; 856  : //dpc ExitCampSelectFix
; 857  : //When exiting from Campaign module to Main UI if no mission was flown,
; 858  : //SAVED tab with last mission selected was shown, but Rolling Fire campaign
; 859  : //was actually loaded. This fix disables campaing info in that case, so
; 860  : //user has to select save file manually. This way it's not possible to start
; 861  : //wrong campaign.
; 862  : 	if (g_bExitCampSelectFix)

	movzx	ecx, BYTE PTR ?g_bExitCampSelectFix@@3_NA ; g_bExitCampSelectFix
	test	ecx, ecx
	je	SHORT $LN5@SelectScen

; 863  : 	{
; 864  : 		if (oldCampSelMode != 1)

	cmp	DWORD PTR _oldCampSelMode, 1
	je	SHORT $LN4@SelectScen

; 865  : 		{
; 866  : 			LoadScenarioInfo();

	call	?LoadScenarioInfo@@YAXXZ		; LoadScenarioInfo
$LN4@SelectScen:

; 867  : 		}
; 868  : 	}
; 869  : 	else

	jmp	SHORT $LN3@SelectScen
$LN5@SelectScen:

; 870  : //end ExitCampSelectFix
; 871  : 		LoadScenarioInfo();

	call	?LoadScenarioInfo@@YAXXZ		; LoadScenarioInfo
$LN3@SelectScen:

; 872  : 	if(control)

	cmp	DWORD PTR _control$[ebp], 0
	je	SHORT $LN19@SelectScen

; 873  : 	{
; 874  : 		if(control->GetUserNumber(0))

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	test	eax, eax
	je	SHORT $LN19@SelectScen

; 875  : 		{
; 876  : 			PlayUIMovie(control->GetUserNumber(100));

	push	100					; 00000064H
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?PlayUIMovie@@YAXJ@Z			; PlayUIMovie
	add	esp, 4
$LN19@SelectScen:

; 877  : 		}
; 878  : 	}
; 879  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectScenarioCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectScenarioCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_maxy$ = -128						; size = 4
$T2 = -124						; size = 4
$T3 = -120						; size = 4
$T4 = -116						; size = 4
$T5 = -112						; size = 4
tv212 = -108						; size = 4
tv296 = -104						; size = 4
tv79 = -100						; size = 4
$T6 = -96						; size = 4
$T7 = -92						; size = 4
_y$ = -88						; size = 4
_SquadPtr$ = -84					; size = 4
_x$ = -80						; size = 4
_mapratio$ = -76					; size = 4
_NameShown$ = -72					; size = 2
_icony$ = -68						; size = 4
_win$ = -64						; size = 4
_i$ = -60						; size = 4
_btn$ = -56						; size = 4
_txt$ = -52						; size = 4
_buffer$ = -48						; size = 30
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_airbasex$ = 8						; size = 4
_airbasey$ = 12						; size = 4
?SetupMapSquadronWindow@@YAXHH@Z PROC			; SetupMapSquadronWindow

; 451  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupMapSquadronWindow@@YAXHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 452  : 	C_Window *win;
; 453  : 	C_Button *btn;
; 454  : 	C_Text   *txt;
; 455  : 	int i;//! was uint
; 456  : 	int icony, mapratio;
; 457  : 	float x,y;
; 458  : 	float maxy;
; 459  : 	short NameShown=0;

	xor	eax, eax
	mov	WORD PTR _NameShown$[ebp], ax

; 460  : 	SquadUIInfoClass *SquadPtr;
; 461  : 	_TCHAR buffer[30];
; 462  : 
; 463  : 	maxy=(float)(TheCampaign.TheaterSizeY)*FEET_PER_KM;

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	DWORD PTR _maxy$[ebp], xmm0

; 464  : 
; 465  : 	win=gMainHandler->FindWindow(CS_SUA_WIN);

	push	40102					; 00009ca6H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 466  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN11@SetupMapSq

; 467  : 	{
; 468  : 		DeleteGroupList(CS_SUA_WIN);

	push	40102					; 00009ca6H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 469  : 
; 470  : 		icony=40;

	mov	DWORD PTR _icony$[ebp], 40		; 00000028H

; 471  : 
; 472  : 		txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN14@SetupMapSq
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN15@SetupMapSq
$LN14@SetupMapSq:
	mov	DWORD PTR tv79[ebp], 0
$LN15@SetupMapSq:
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _txt$[ebp], eax

; 473  : 		txt->Setup(C_DONT_CARE,C_TYPE_LEFT);

	push	44					; 0000002cH
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 474  : 		txt->SetText(TXT_CHOOSE_SQUADRON);

	push	226					; 000000e2H
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+252]
	call	eax

; 475  : 		txt->SetXY(10,icony);

	mov	ecx, DWORD PTR _icony$[ebp]
	push	ecx
	push	10					; 0000000aH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 476  : 		txt->SetFont(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 477  : 		txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 478  : 		txt->SetFlagBitOn(C_BIT_LEFT);

	push	32					; 00000020H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 479  : 		txt->SetFGColor(0x00e0e0e0);

	push	14737632				; 00e0e0e0H
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 480  : 		win->AddControl(txt);

	mov	ecx, DWORD PTR _txt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 481  : 		icony+=gFontList->GetHeight(win->Font_)+4;

	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR ?gFontList@@3PAVC_Font@@A ; gFontList
	call	?GetHeight@C_Font@@QAEHJ@Z		; C_Font::GetHeight
	mov	ecx, DWORD PTR _icony$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	DWORD PTR _icony$[ebp], edx

; 482  : 
; 483  : 		for(i=0;i<TheCampaign.NumAvailSquadrons;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@SetupMapSq
$LN9@SetupMapSq:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@SetupMapSq:
	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+310
	cmp	DWORD PTR _i$[ebp], ecx
	jge	$LN8@SetupMapSq

; 484  : 		{
; 485  : 			if (TheCampaign.IsValidSquadron(i)  || _IsF16_)

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?IsValidSquadron@CampaignClass@@QAEHH@Z	; CampaignClass::IsValidSquadron
	test	eax, eax
	jne	SHORT $LN6@SetupMapSq
	cmp	DWORD PTR ?_IsF16_@@3JA, 0		; _IsF16_
	je	$LN4@SetupMapSq
$LN6@SetupMapSq:

; 486  : 			{
; 487  : 				x=TheCampaign.CampaignSquadronData[i].y; // real world x & y are y & x

	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movss	xmm0, DWORD PTR [ecx+eax+4]
	movss	DWORD PTR _x$[ebp], xmm0

; 488  : 				y=TheCampaign.CampaignSquadronData[i].x;

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	movss	xmm0, DWORD PTR [eax+edx]
	movss	DWORD PTR _y$[ebp], xmm0

; 489  : 				
; 490  : 	// 2001-12-12 M.N. adapted for 1024 UI
; 491  : 				mapratio = MAP_RATIO;

	mov	DWORD PTR _mapratio$[ebp], 6

; 492  : 				if (g_bHiResUI && !g_LargeTheater)

	movzx	ecx, BYTE PTR ?g_bHiResUI@@3_NA		; g_bHiResUI
	test	ecx, ecx
	je	SHORT $LN5@SetupMapSq
	movzx	edx, BYTE PTR ?g_LargeTheater@@3_NA	; g_LargeTheater
	test	edx, edx
	jne	SHORT $LN5@SetupMapSq

; 493  : 					mapratio /= 2;

	mov	eax, DWORD PTR _mapratio$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _mapratio$[ebp], eax
$LN5@SetupMapSq:

; 494  : 				x=x/(FEET_PER_KM * mapratio);

	cvtsi2ss xmm0, DWORD PTR _mapratio$[ebp]
	mulss	xmm0, DWORD PTR __real@454cffae
	movss	xmm1, DWORD PTR _x$[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _x$[ebp], xmm1

; 495  : 				y=(maxy-y)/(FEET_PER_KM * mapratio);

	movss	xmm0, DWORD PTR _maxy$[ebp]
	subss	xmm0, DWORD PTR _y$[ebp]
	cvtsi2ss xmm1, DWORD PTR _mapratio$[ebp]
	mulss	xmm1, DWORD PTR __real@454cffae
	divss	xmm0, xmm1
	movss	DWORD PTR _y$[ebp], xmm0

; 496  : 
; 497  : 				if((int)x == airbasex && (int)y == airbasey)

	cvttss2si eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _airbasex$[ebp]
	jne	$LN4@SetupMapSq
	cvttss2si ecx, DWORD PTR _y$[ebp]
	cmp	ecx, DWORD PTR _airbasey$[ebp]
	jne	$LN4@SetupMapSq

; 498  : 				{
; 499  : 					SquadPtr=&TheCampaign.CampaignSquadronData[i];

	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 68					; 00000044H
	add	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+312
	mov	DWORD PTR _SquadPtr$[ebp], edx

; 500  : 					if(!NameShown && SquadPtr) 

	movsx	eax, WORD PTR _NameShown$[ebp]
	test	eax, eax
	jne	$LN3@SetupMapSq
	cmp	DWORD PTR _SquadPtr$[ebp], 0
	je	$LN3@SetupMapSq

; 501  : 					{ // Airbase Name
; 502  : 						txt=new C_Text;

	push	76					; 0000004cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN16@SetupMapSq
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_Text@@QAE@XZ			; C_Text::C_Text
	mov	DWORD PTR tv212[ebp], eax
	jmp	SHORT $LN17@SetupMapSq
$LN16@SetupMapSq:
	mov	DWORD PTR tv212[ebp], 0
$LN17@SetupMapSq:
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _txt$[ebp], edx

; 503  : 						txt->Setup(C_DONT_CARE,C_TYPE_LEFT);

	push	44					; 0000002cH
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+248]
	call	eax

; 504  : 						txt->SetXY(10,icony);

	mov	ecx, DWORD PTR _icony$[ebp]
	push	ecx
	push	10					; 0000000aH
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 505  : 						txt->SetFont(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 506  : 						txt->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 507  : 						txt->SetFlagBitOn(C_BIT_LEFT|C_BIT_WORDWRAP);

	push	33554464				; 02000020H
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 508  : 						txt->SetW(123);

	push	123					; 0000007bH
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax

; 509  : 						txt->SetFGColor(0x00e0e0e0);

	push	14737632				; 00e0e0e0H
	mov	ecx, DWORD PTR _txt$[ebp]
	call	?SetFGColor@C_Text@@QAEXK@Z		; C_Text::SetFGColor

; 510  : 						txt->SetText(SquadPtr->airbaseName);

	mov	ecx, DWORD PTR _SquadPtr$[ebp]
	add	ecx, 27					; 0000001bH
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 511  : 						win->AddControl(txt);

	mov	eax, DWORD PTR _txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 512  : 						icony+=txt->GetH();

	mov	ecx, DWORD PTR _txt$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	add	eax, DWORD PTR _icony$[ebp]
	mov	DWORD PTR _icony$[ebp], eax

; 513  : 						NameShown=1;

	mov	ecx, 1
	mov	WORD PTR _NameShown$[ebp], cx
$LN3@SetupMapSq:

; 514  : 					}
; 515  : 					_stprintf(buffer,"%s %s",OrdinalString(SquadPtr->nameId),gStringMgr->GetString(TXT_SQUADRON));

	push	131					; 00000083H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	edx, DWORD PTR _SquadPtr$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	call	?OrdinalString@@YAPADJ@Z		; OrdinalString
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H

; 516  : 					btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN18@SetupMapSq
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv296[ebp], eax
	jmp	SHORT $LN19@SetupMapSq
$LN18@SetupMapSq:
	mov	DWORD PTR tv296[ebp], 0
$LN19@SetupMapSq:
	mov	edx, DWORD PTR tv296[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR _btn$[ebp], eax

; 517  : 					btn->Setup(i+1,C_TYPE_RADIO,20,icony);

	mov	ecx, DWORD PTR _icony$[ebp]
	push	ecx
	push	20					; 00000014H
	push	27					; 0000001bH
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 518  : 					btn->SetGroup(-200);

	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 519  : 					btn->SetFont(win->Font_);

	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+68]
	call	edx

; 520  : 					btn->SetText(C_STATE_0,buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 521  : 					btn->SetText(C_STATE_1,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 522  : 					btn->SetColor(C_STATE_0,0xe0e0e0);

	push	14737632				; 00e0e0e0H
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 523  : 					btn->SetColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 524  : 					btn->SetFlagBitOn(C_BIT_LEFT|C_BIT_USELINE);

	push	4194336					; 00400020H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 525  : 					btn->SetCallback(PickSquadronCB);

	push	OFFSET ?PickSquadronCB@@YAXJFPAVC_Base@@@Z ; PickSquadronCB
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax

; 526  : 					btn->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_); // used in DeleteGameList to find records to remove

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 527  : 					btn->SetHelpText(HELP_PICK_SQUADRON);

	push	228					; 000000e4H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax

; 528  : 					btn->SetCursorID(CRSR_F16_ON);

	push	2
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 529  : 					win->AddControl(btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 530  : 					if(i == gSelectedSquadronID || gSelectedSquadronID < 0)

	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _gSelectedSquadronID
	je	SHORT $LN1@SetupMapSq
	cmp	DWORD PTR _gSelectedSquadronID, 0
	jge	SHORT $LN2@SetupMapSq
$LN1@SetupMapSq:

; 531  : 					{
; 532  : 						gSelectedSquadronID=i;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _gSelectedSquadronID, eax

; 533  : 						btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 534  : 						PickSquadronCB(i+1,C_TYPE_LMOUSEUP,btn);

	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	push	52					; 00000034H
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	push	edx
	call	?PickSquadronCB@@YAXJFPAVC_Base@@@Z	; PickSquadronCB
	add	esp, 12					; 0000000cH
$LN2@SetupMapSq:

; 535  : 					}
; 536  : 					icony+=(btn->GetH()+2);

	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	mov	ecx, DWORD PTR _icony$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _icony$[ebp], edx
$LN4@SetupMapSq:

; 537  : 				}
; 538  : 			}
; 539  : 		}

	jmp	$LN9@SetupMapSq
$LN8@SetupMapSq:

; 540  : 		win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow
$LN11@SetupMapSq:

; 541  : 	}
; 542  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$1:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?SetupMapSquadronWindow@@YAXHH@Z$2:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupMapSquadronWindow@@YAXHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupMapSquadronWindow@@YAXHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupMapSquadronWindow@@YAXHH@Z ENDP			; SetupMapSquadronWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
_tree$ = -20						; size = 4
_lb$ = -16						; size = 4
_sldr$ = -12						; size = 4
_winme$ = -8						; size = 4
_ctrl$ = -4						; size = 4
_ID$ = 8						; size = 4
?HookupCampaignSelectControls@@YAXJ@Z PROC		; HookupCampaignSelectControls

; 1657 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1658 : 	C_Window *winme;
; 1659 : 	C_Button *ctrl;
; 1660 : 	C_ListBox *lb;
; 1661 : 	C_Slider *sldr;
; 1662 : 	C_TreeList *tree;
; 1663 : 
; 1664 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 1665 : 
; 1666 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN26@HookupCamp

; 1667 : 		return;

	jmp	$LN27@HookupCamp
$LN26@HookupCamp:

; 1668 : 
; 1669 : 	// Hook up IDs here
; 1670 : 
; 1671 : 	// Set Commit Button
; 1672 : 	ctrl=(C_Button *)winme->FindControl(SINGLE_COMMIT_CTRL);

	push	2000002					; 001e8482H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1673 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN25@HookupCamp

; 1674 : 		ctrl->SetCallback(CommitCB);

	push	OFFSET ?CommitCB@@YAXJFPAVC_Base@@@Z	; CommitCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN25@HookupCamp:

; 1675 : 
; 1676 : 	// Set Commit Button
; 1677 : 	ctrl=(C_Button *)winme->FindControl(CS_DELETE);

	push	40929					; 00009fe1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1678 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN24@HookupCamp

; 1679 : 		ctrl->SetCallback(CampDelVerifyCB);

	push	OFFSET ?CampDelVerifyCB@@YAXJFPAVC_Base@@@Z ; CampDelVerifyCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN24@HookupCamp:

; 1680 : 
; 1681 : 	ctrl=(C_Button *)winme->FindControl(COMMS_COMMIT_CTRL);

	push	2000003					; 001e8483H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1682 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN23@HookupCamp

; 1683 : 		ctrl->SetCallback(CommsCommitCB);

	push	OFFSET ?CommsCommitCB@@YAXJFPAVC_Base@@@Z ; CommsCommitCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN23@HookupCamp:

; 1684 : 
; 1685 : 	// Hook up Close Button
; 1686 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1687 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN22@HookupCamp

; 1688 : 		ctrl->SetCallback(CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN22@HookupCamp:

; 1689 : 
; 1690 : 	ctrl=(C_Button *)winme->FindControl(SELECT_CLOSE_WINDOW);

	push	40105					; 00009ca9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1691 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN21@HookupCamp

; 1692 : 		ctrl->SetCallback(CloseSelectWindowCB);

	push	OFFSET ?CloseSelectWindowCB@@YAXJFPAVC_Base@@@Z ; CloseSelectWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN21@HookupCamp:

; 1693 : 
; 1694 : 	ctrl=(C_Button *)winme->FindControl(CS_LOAD_SCENARIO1);

	push	40900					; 00009fc4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1695 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN20@HookupCamp

; 1696 : 		ctrl->SetCallback(SelectScenarioCB);

	push	OFFSET ?SelectScenarioCB@@YAXJFPAVC_Base@@@Z ; SelectScenarioCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN20@HookupCamp:

; 1697 : 
; 1698 : 	ctrl=(C_Button *)winme->FindControl(CS_LOAD_SCENARIO2);

	push	40901					; 00009fc5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1699 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN19@HookupCamp

; 1700 : 		ctrl->SetCallback(SelectScenarioCB);

	push	OFFSET ?SelectScenarioCB@@YAXJFPAVC_Base@@@Z ; SelectScenarioCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupCamp:

; 1701 : 
; 1702 : 	ctrl=(C_Button *)winme->FindControl(CS_LOAD_SCENARIO3);

	push	40902					; 00009fc6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1703 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN18@HookupCamp

; 1704 : 		ctrl->SetCallback(SelectScenarioCB);

	push	OFFSET ?SelectScenarioCB@@YAXJFPAVC_Base@@@Z ; SelectScenarioCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupCamp:

; 1705 : 
; 1706 : 	ctrl=(C_Button *)winme->FindControl(CS_HOST_CTRL);

	push	40210					; 00009d12H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1707 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@HookupCamp

; 1708 : 		ctrl->SetCallback(HostCampaignCB);

	push	OFFSET ?HostCampaignCB@@YAXJFPAVC_Base@@@Z ; HostCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupCamp:

; 1709 : 
; 1710 : 	ctrl=(C_Button *)winme->FindControl(CS_NEW_CTRL);

	push	40203					; 00009d0bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1711 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupCamp

; 1712 : 		ctrl->SetCallback(SetCampaignSelectCB);

	push	OFFSET ?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z ; SetCampaignSelectCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupCamp:

; 1713 : 
; 1714 : 	ctrl=(C_Button *)winme->FindControl(CS_LOAD_CTRL);

	push	40204					; 00009d0cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1715 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@HookupCamp

; 1716 : 		ctrl->SetCallback(SetCampaignSelectCB);

	push	OFFSET ?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z ; SetCampaignSelectCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupCamp:

; 1717 : 
; 1718 : 	ctrl=(C_Button *)winme->FindControl(CS_JOIN_CTRL);

	push	40205					; 00009d0dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1719 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupCamp

; 1720 : 	{
; 1721 : 		ctrl->SetCallback(SetCampaignSelectCB);

	push	OFFSET ?SetCampaignSelectCB@@YAXJFPAVC_Base@@@Z ; SetCampaignSelectCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupCamp:

; 1722 : 	}
; 1723 : 
; 1724 : 	lb=(C_ListBox *)winme->FindControl(CHALLENGE_LIST);

	push	40314					; 00009d7aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1725 : 	if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	SHORT $LN13@HookupCamp

; 1726 : 		lb->SetCallback(ChallengeLevelCB);

	push	OFFSET ?ChallengeLevelCB@@YAXJFPAVC_Base@@@Z ; ChallengeLevelCB
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupCamp:

; 1727 : 
; 1728 : 	lb=(C_ListBox *)winme->FindControl(PILOT_SKILL);

	push	40905					; 00009fc9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1729 : 	if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	SHORT $LN12@HookupCamp

; 1730 : 		lb->SetCallback(SetSkillSettingsCB);

	push	OFFSET ?SetSkillSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSkillSettingsCB
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupCamp:

; 1731 : 
; 1732 : 	lb=(C_ListBox *)winme->FindControl(SAM_SKILL);

	push	40904					; 00009fc8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lb$[ebp], eax

; 1733 : 	if(lb)

	cmp	DWORD PTR _lb$[ebp], 0
	je	SHORT $LN11@HookupCamp

; 1734 : 		lb->SetCallback(SetSkillSettingsCB);

	push	OFFSET ?SetSkillSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSkillSettingsCB
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lb$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupCamp:

; 1735 : 
; 1736 : 	ctrl=(C_Button *)winme->FindControl(SET_CHALLENGE);

	push	40922					; 00009fdaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1737 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN10@HookupCamp

; 1738 : 		ctrl->SetCallback(OpenChallengeCB);

	push	OFFSET ?OpenChallengeCB@@YAXJFPAVC_Base@@@Z ; OpenChallengeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN10@HookupCamp:

; 1739 : 
; 1740 : 	ctrl=(C_Button *)winme->FindControl(CHALL_OK);

	push	40921					; 00009fd9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1741 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupCamp

; 1742 : 		ctrl->SetCallback(UseChallengeSettingsCB);

	push	OFFSET ?UseChallengeSettingsCB@@YAXJFPAVC_Base@@@Z ; UseChallengeSettingsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupCamp:

; 1743 : 
; 1744 : 	ctrl=(C_Button *)winme->FindControl(CHALL_CANCEL);

	push	40920					; 00009fd8H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1745 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupCamp

; 1746 : 		ctrl->SetCallback(CloseChallengeCB);

	push	OFFSET ?CloseChallengeCB@@YAXJFPAVC_Base@@@Z ; CloseChallengeCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupCamp:

; 1747 : 
; 1748 : 	sldr=(C_Slider *)winme->FindControl(BAR_1_SCROLL);

	push	40908					; 00009fccH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1749 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN7@HookupCamp

; 1750 : 		sldr->SetCallback(SetSliderSettingsCB);

	push	OFFSET ?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSliderSettingsCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupCamp:

; 1751 : 
; 1752 : 	sldr=(C_Slider *)winme->FindControl(BAR_2_SCROLL);

	push	40911					; 00009fcfH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1753 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN6@HookupCamp

; 1754 : 		sldr->SetCallback(SetSliderSettingsCB);

	push	OFFSET ?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSliderSettingsCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupCamp:

; 1755 : 
; 1756 : 	sldr=(C_Slider *)winme->FindControl(BAR_3_SCROLL);

	push	40914					; 00009fd2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1757 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@HookupCamp

; 1758 : 		sldr->SetCallback(SetSliderSettingsCB);

	push	OFFSET ?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSliderSettingsCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupCamp:

; 1759 : 
; 1760 : 	sldr=(C_Slider *)winme->FindControl(BAR_4_SCROLL);

	push	40917					; 00009fd5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 1761 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN4@HookupCamp

; 1762 : 		sldr->SetCallback(SetSliderSettingsCB);

	push	OFFSET ?SetSliderSettingsCB@@YAXJFPAVC_Base@@@Z ; SetSliderSettingsCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupCamp:

; 1763 : 
; 1764 : 	ctrl=(C_Button *)winme->FindControl(CS_INFO_CTRL);

	push	40924					; 00009fdcH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1765 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupCamp

; 1766 : 		ctrl->SetCallback(InfoButtonCB);

	push	OFFSET ?InfoButtonCB@@YAXJFPAVC_Base@@@Z ; InfoButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupCamp:

; 1767 : 
; 1768 : 	tree=(C_TreeList *)winme->FindControl(CAMPAIGN_TREE);

	push	40211					; 00009d13H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1769 : 	if(tree)

	cmp	DWORD PTR _tree$[ebp], 0
	je	SHORT $LN2@HookupCamp

; 1770 : 	{
; 1771 : 		CampaignGames=tree;

	mov	ecx, DWORD PTR _tree$[ebp]
	mov	DWORD PTR ?CampaignGames@@3PAVC_TreeList@@A, ecx ; CampaignGames

; 1772 : 		CampaignGames->SetCallback(CampSelectGameCB);

	push	OFFSET ?CampSelectGameCB@@YAXJFPAVC_Base@@@Z ; CampSelectGameCB
	mov	edx, DWORD PTR ?CampaignGames@@3PAVC_TreeList@@A ; CampaignGames
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?CampaignGames@@3PAVC_TreeList@@A ; CampaignGames
	mov	edx, DWORD PTR [eax+100]
	call	edx
$LN2@HookupCamp:

; 1773 : 	}
; 1774 : 
; 1775 : // Help GUIDE thing
; 1776 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 1777 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN27@HookupCamp

; 1778 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN27@HookupCamp:

; 1779 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HookupCampaignSelectControls@@YAXJ@Z ENDP		; HookupCampaignSelectControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\cpselect.cpp
_TEXT	SEGMENT
?CancelJoinCB@@YAXXZ PROC				; CancelJoinCB

; 957  : {

	push	ebp
	mov	ebp, esp

; 958  : }

	pop	ebp
	ret	0
?CancelJoinCB@@YAXXZ ENDP				; CancelJoinCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampNavalRatio@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ratio$ = 8						; size = 4
?SetCampNavalRatio@PlayerOptionsClass@@QAEXH@Z PROC	; PlayerOptionsClass::SetCampNavalRatio, COMDAT
; _this$ = ecx

; 224  : 	void SetCampNavalRatio (int ratio)						{ CampNavalRatio=ratio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ratio$[ebp]
	mov	DWORD PTR [eax+100], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampNavalRatio@PlayerOptionsClass@@QAEXH@Z ENDP	; PlayerOptionsClass::SetCampNavalRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampAirDefenseRatio@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ratio$ = 8						; size = 4
?SetCampAirDefenseRatio@PlayerOptionsClass@@QAEXH@Z PROC ; PlayerOptionsClass::SetCampAirDefenseRatio, COMDAT
; _this$ = ecx

; 223  : 	void SetCampAirDefenseRatio (int ratio)					{ CampAirDefenseRatio=ratio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ratio$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampAirDefenseRatio@PlayerOptionsClass@@QAEXH@Z ENDP ; PlayerOptionsClass::SetCampAirDefenseRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampAirRatio@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ratio$ = 8						; size = 4
?SetCampAirRatio@PlayerOptionsClass@@QAEXH@Z PROC	; PlayerOptionsClass::SetCampAirRatio, COMDAT
; _this$ = ecx

; 222  : 	void SetCampAirRatio (int ratio)						{ CampAirRatio=ratio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ratio$[ebp]
	mov	DWORD PTR [eax+92], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampAirRatio@PlayerOptionsClass@@QAEXH@Z ENDP	; PlayerOptionsClass::SetCampAirRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampGroundRatio@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ratio$ = 8						; size = 4
?SetCampGroundRatio@PlayerOptionsClass@@QAEXH@Z PROC	; PlayerOptionsClass::SetCampGroundRatio, COMDAT
; _this$ = ecx

; 221  : 	void SetCampGroundRatio (int ratio)						{ CampGroundRatio=ratio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ratio$[ebp]
	mov	DWORD PTR [eax+88], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampGroundRatio@PlayerOptionsClass@@QAEXH@Z ENDP	; PlayerOptionsClass::SetCampGroundRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampEnemyGroundExperience@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_exp$ = 8						; size = 4
?SetCampEnemyGroundExperience@PlayerOptionsClass@@QAEXH@Z PROC ; PlayerOptionsClass::SetCampEnemyGroundExperience, COMDAT
; _this$ = ecx

; 219  : 	void SetCampEnemyGroundExperience(int exp)				{ CampEnemyGroundExperience=exp; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _exp$[ebp]
	mov	DWORD PTR [eax+108], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampEnemyGroundExperience@PlayerOptionsClass@@QAEXH@Z ENDP ; PlayerOptionsClass::SetCampEnemyGroundExperience
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetCampEnemyAirExperience@PlayerOptionsClass@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_exp$ = 8						; size = 4
?SetCampEnemyAirExperience@PlayerOptionsClass@@QAEXH@Z PROC ; PlayerOptionsClass::SetCampEnemyAirExperience, COMDAT
; _this$ = ecx

; 218  : 	void SetCampEnemyAirExperience(int exp)					{ CampEnemyAirExperience=exp; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _exp$[ebp]
	mov	DWORD PTR [eax+104], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampEnemyAirExperience@PlayerOptionsClass@@QAEXH@Z ENDP ; PlayerOptionsClass::SetCampEnemyAirExperience
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignEnemyGroundExperience@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignEnemyGroundExperience@PlayerOptionsClass@@QAEHXZ PROC ; PlayerOptionsClass::CampaignEnemyGroundExperience, COMDAT
; _this$ = ecx

; 173  : 	int CampaignEnemyGroundExperience (void)				{ return CampEnemyGroundExperience; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignEnemyGroundExperience@PlayerOptionsClass@@QAEHXZ ENDP ; PlayerOptionsClass::CampaignEnemyGroundExperience
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignEnemyAirExperience@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignEnemyAirExperience@PlayerOptionsClass@@QAEHXZ PROC ; PlayerOptionsClass::CampaignEnemyAirExperience, COMDAT
; _this$ = ecx

; 172  : 	int CampaignEnemyAirExperience (void)					{ return CampEnemyAirExperience; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignEnemyAirExperience@PlayerOptionsClass@@QAEHXZ ENDP ; PlayerOptionsClass::CampaignEnemyAirExperience
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignNavalRatio@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignNavalRatio@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::CampaignNavalRatio, COMDAT
; _this$ = ecx

; 170  : 	int CampaignNavalRatio (void)							{ return CampNavalRatio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignNavalRatio@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::CampaignNavalRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignAirDefenseRatio@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignAirDefenseRatio@PlayerOptionsClass@@QAEHXZ PROC ; PlayerOptionsClass::CampaignAirDefenseRatio, COMDAT
; _this$ = ecx

; 169  : 	int CampaignAirDefenseRatio (void)						{ return CampAirDefenseRatio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+96]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignAirDefenseRatio@PlayerOptionsClass@@QAEHXZ ENDP ; PlayerOptionsClass::CampaignAirDefenseRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignAirRatio@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignAirRatio@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::CampaignAirRatio, COMDAT
; _this$ = ecx

; 168  : 	int CampaignAirRatio (void)								{ return CampAirRatio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+92]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignAirRatio@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::CampaignAirRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?CampaignGroundRatio@PlayerOptionsClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CampaignGroundRatio@PlayerOptionsClass@@QAEHXZ PROC	; PlayerOptionsClass::CampaignGroundRatio, COMDAT
; _this$ = ecx

; 167  : 	int CampaignGroundRatio (void)							{ return CampGroundRatio; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+88]
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignGroundRatio@PlayerOptionsClass@@QAEHXZ ENDP	; PlayerOptionsClass::CampaignGroundRatio
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?IsLoaded@CampaignClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLoaded@CampaignClass@@QAEHXZ PROC			; CampaignClass::IsLoaded, COMDAT
; _this$ = ecx

; 177  : 	int IsLoaded (void)										{ return Flags & CAMP_LOADED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	and	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLoaded@CampaignClass@@QAEHXZ ENDP			; CampaignClass::IsLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerSquadronID, COMDAT
; _this$ = ecx

; 133  : 	VU_ID GetPlayerSquadronID(void) const         { return playerSquadron; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	edx, DWORD PTR [eax+456]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetGroup@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Window@@QAEJXZ PROC				; C_Window::GetGroup, COMDAT
; _this$ = ecx

; 317  : 		long GetGroup(void) { return(Group_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Window@@QAEJXZ ENDP				; C_Window::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ PROC	; C_TreeList::GetLastItem, COMDAT
; _this$ = ecx

; 119  : 		TREELIST *GetLastItem() { return(LastFound_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+140]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastItem@C_TreeList@@QAEPAVTREELIST@@XZ ENDP	; C_TreeList::GetLastItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z PROC ; C_TreeList::SetSortCallback, COMDAT
; _this$ = ecx

; 100  : 		void SetSortCallback(BOOL (*cb)(TREELIST*,TREELIST*)) { SortCB_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+168], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortCallback@C_TreeList@@QAEXP6AHPAVTREELIST@@0@Z@Z ENDP ; C_TreeList::SetSortCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?SetSortType@C_TreeList@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sortby$ = 8						; size = 2
?SetSortType@C_TreeList@@QAEXF@Z PROC			; C_TreeList::SetSortType, COMDAT
; _this$ = ecx

; 87   : 		void SetSortType(short sortby) { SortType_=sortby; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _sortby$[ebp]
	mov	WORD PTR [eax+108], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSortType@C_TreeList@@QAEXF@Z ENDP			; C_TreeList::SetSortType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetY@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetY@C_Base@@QAEJXZ PROC				; C_Base::GetY, COMDAT
; _this$ = ecx

; 142  : 		long GetY()					{ return(y_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetY@C_Base@@QAEJXZ ENDP				; C_Base::GetY
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetX@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetX@C_Base@@QAEJXZ PROC				; C_Base::GetX, COMDAT
; _this$ = ecx

; 141  : 		long GetX()					{ return(x_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetX@C_Base@@QAEJXZ ENDP				; C_Base::GetX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetCluster@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetCluster@C_Base@@QAEXJ@Z PROC			; C_Base::SetCluster, COMDAT
; _this$ = ecx

; 97   : 		void SetCluster(long id)								{ Section_[_CLUSTER_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCluster@C_Base@@QAEXJ@Z ENDP			; C_Base::SetCluster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetGroup@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetGroup@C_Base@@QAEXJ@Z PROC				; C_Base::SetGroup, COMDAT
; _this$ = ecx

; 96   : 		void SetGroup(long id)									{ Section_[_GROUP_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGroup@C_Base@@QAEXJ@Z ENDP				; C_Base::SetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?Find@C_Resmgr@@QAEPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?Find@C_Resmgr@@QAEPAXJ@Z PROC				; C_Resmgr::Find, COMDAT
; _this$ = ecx

; 80   : 		void *Find(long ID) { if(Index_) return(Index_->Find(ID)); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@Find
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	call	?Find@C_Hash@@QAEPAXJ@Z			; C_Hash::Find
	jmp	SHORT $LN2@Find
$LN1@Find:
	xor	eax, eax
$LN2@Find:
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@C_Resmgr@@QAEPAXJ@Z ENDP				; C_Resmgr::Find
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?SetData@C_Resmgr@@QAEXPAD@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?SetData@C_Resmgr@@QAEXPAD@Z PROC			; C_Resmgr::SetData, COMDAT
; _this$ = ecx

; 76   : 		void SetData(char *data) { if(Data_) delete Data_; Data_=data; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN1@SetData
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@SetData:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx+36], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetData@C_Resmgr@@QAEXPAD@Z ENDP			; C_Resmgr::SetData
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?SetScreenFormat@C_Resmgr@@QAEXFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rs$ = 8						; size = 2
_gs$ = 12						; size = 2
_bs$ = 16						; size = 2
?SetScreenFormat@C_Resmgr@@QAEXFFF@Z PROC		; C_Resmgr::SetScreenFormat, COMDAT
; _this$ = ecx

; 72   : 		void SetScreenFormat(short rs,short gs,short bs) { reds=rs; greens=gs; blues=bs; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _rs$[ebp]
	mov	WORD PTR [eax+16], cx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _gs$[ebp]
	mov	WORD PTR [edx+18], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _bs$[ebp]
	mov	WORD PTR [ecx+20], dx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetScreenFormat@C_Resmgr@@QAEXFFF@Z ENDP		; C_Resmgr::SetScreenFormat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cresmgr.h
;	COMDAT ?SetColorKey@C_Resmgr@@QAEXG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Key$ = 8						; size = 2
?SetColorKey@C_Resmgr@@QAEXG@Z PROC			; C_Resmgr::SetColorKey, COMDAT
; _this$ = ecx

; 69   : 		void SetColorKey(WORD Key) { ColorKey_=Key; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _Key$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColorKey@C_Resmgr@@QAEXG@Z ENDP			; C_Resmgr::SetColorKey
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vusessn.h
;	COMDAT ?GameName@VuGameEntity@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GameName@VuGameEntity@@QAEPADXZ PROC			; VuGameEntity::GameName, COMDAT
; _this$ = ecx

; 400  : 	char *GameName()		{ return gameName_; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+348]
	mov	esp, ebp
	pop	ebp
	ret	0
?GameName@VuGameEntity@@QAEPADXZ ENDP			; VuGameEntity::GameName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_ID@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VU_ID@@QAE@XZ PROC					; VU_ID::VU_ID, COMDAT
; _this$ = ecx

; 100  : 	VU_ID() : num_(0), creator_(0){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0VU_SESSION_ID@@QAE@K@Z		; VU_SESSION_ID::VU_SESSION_ID
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0VU_ID@@QAE@XZ ENDP					; VU_ID::VU_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??0VU_SESSION_ID@@QAE@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??0VU_SESSION_ID@@QAE@K@Z PROC				; VU_SESSION_ID::VU_SESSION_ID, COMDAT
; _this$ = ecx

; 53   : 	VU_SESSION_ID(unsigned long value) : value_((unsigned long)value) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0VU_SESSION_ID@@QAE@K@Z ENDP				; VU_SESSION_ID::VU_SESSION_ID
_TEXT	ENDS
END
