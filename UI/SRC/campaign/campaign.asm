; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.51106.1 

	TITLE	C:\Users\Zhitao Li\Documents\Visual Studio 2012\Projects\Freefalcon\UI\SRC\campaign\campaign.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?gGps@@3PAVGlobalPositioningSystem@@A		; gGps
PUBLIC	?StupidHackToCloseCSECT@@3HA			; StupidHackToCloseCSECT
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::SIMDIRTYDATA_INTERVAL
PUBLIC	?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB	; FalconEntity::CMPDIRTYDATA_INTERVAL
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?ReconWPNum@@3HA				; ReconWPNum
PUBLIC	?gAWWTimeout@@3HA				; gAWWTimeout
PUBLIC	?gMoveBattalion@@3HA				; gMoveBattalion
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?LastForceCatID@@3JA				; LastForceCatID
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?gUIViewer@@3PAVC_3dViewer@@A			; gUIViewer
PUBLIC	?InCleanup@@3FA					; InCleanup
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?gLastUpdateGround@@3JA				; gLastUpdateGround
PUBLIC	?gLastUpdateAir@@3JA				; gLastUpdateAir
PUBLIC	?mcnt@@3HA					; mcnt
PUBLIC	?atocnt@@3HA					; atocnt
PUBLIC	?uintcnt@@3HA					; uintcnt
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?CampExcludeList@@3PAPADA			; CampExcludeList
PUBLIC	??_C@_05LPHLLKIA@Save0?$AA@			; `string'
PUBLIC	??_C@_05KGGAILMB@Save1?$AA@			; `string'
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	??_C@_05INENNIAC@Save2?$AA@			; `string'
PUBLIC	??_C@_07HMOCDNDG@Instant?$AA@			; `string'
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?FrcLvlCatID@@3PAJA				; FrcLvlCatID
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?ReadyToPlayMovie@@3HA				; ReadyToPlayMovie
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?MovieQInUse@@3HA				; MovieQInUse
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?gMapMgr@@3PAVC_Map@@A				; gMapMgr
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?CampEventSoundID@@3JA				; CampEventSoundID
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?FrcTeamColors@@3PAKA				; FrcTeamColors
PUBLIC	?MovieQTime@@3PAJA				; MovieQTime
PUBLIC	?MovieQ@@3PAJA					; MovieQ
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?MovieQDesc@@3PAY0FA@DA				; MovieQDesc
PUBLIC	?MovieCount@@3JA				; MovieCount
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?MovieY@@3FA					; MovieY
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B ; std::ios_base::failure::_Stream_err
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
_BSS	SEGMENT
?gGps@@3PAVGlobalPositioningSystem@@A DD 01H DUP (?)	; gGps
?StupidHackToCloseCSECT@@3HA DD 01H DUP (?)		; StupidHackToCloseCSECT
?ReconWPNum@@3HA DD 01H DUP (?)				; ReconWPNum
?gAWWTimeout@@3HA DD 01H DUP (?)			; gAWWTimeout
?gMoveBattalion@@3HA DD 01H DUP (?)			; gMoveBattalion
?LastForceCatID@@3JA DD 01H DUP (?)			; LastForceCatID
?gUIViewer@@3PAVC_3dViewer@@A DD 01H DUP (?)		; gUIViewer
?InCleanup@@3FA DW 01H DUP (?)				; InCleanup
	ALIGN	4

_JStarsFirst DD	01H DUP (?)
_JStarsLast DD	01H DUP (?)
_JStarsCurrent DD 01H DUP (?)
_JStarsPrevious DD 01H DUP (?)
_JStarsDirection DD 01H DUP (?)
_JStarsDelay DD	01H DUP (?)
?gLastUpdateGround@@3JA DD 01H DUP (?)			; gLastUpdateGround
?gLastUpdateAir@@3JA DD 01H DUP (?)			; gLastUpdateAir
?mcnt@@3HA DD	01H DUP (?)				; mcnt
?atocnt@@3HA DD	01H DUP (?)				; atocnt
?uintcnt@@3HA DD 01H DUP (?)				; uintcnt
?ReadyToPlayMovie@@3HA DD 01H DUP (?)			; ReadyToPlayMovie
?MovieQInUse@@3HA DD 01H DUP (?)			; MovieQInUse
?gMapMgr@@3PAVC_Map@@A DD 01H DUP (?)			; gMapMgr
?CampEventSoundID@@3JA DD 01H DUP (?)			; CampEventSoundID
?MovieQTime@@3PAJA DD 0fH DUP (?)			; MovieQTime
?MovieQ@@3PAJA DD 0fH DUP (?)				; MovieQ
?MovieQDesc@@3PAY0FA@DA DB 04b0H DUP (?)		; MovieQDesc
?MovieCount@@3JA DD 01H DUP (?)				; MovieCount
_NewEvents DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@U_Nil@std@@U12@U12@U12@U12@U12@U12@U12@@std@@2IB DD 00H ; std::_Sizeof<std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B
CONST	SEGMENT
?_Stream_err@failure@ios_base@std@@0W4io_errc@43@B DD 01H ; std::ios_base::failure::_Stream_err
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ??_C@_07HMOCDNDG@Instant?$AA@
CONST	SEGMENT
??_C@_07HMOCDNDG@Instant?$AA@ DB 'Instant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05INENNIAC@Save2?$AA@
CONST	SEGMENT
??_C@_05INENNIAC@Save2?$AA@ DB 'Save2', 00H		; `string'
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ??_C@_05KGGAILMB@Save1?$AA@
CONST	SEGMENT
??_C@_05KGGAILMB@Save1?$AA@ DB 'Save1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LPHLLKIA@Save0?$AA@
CONST	SEGMENT
??_C@_05LPHLLKIA@Save0?$AA@ DB 'Save0', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?CampExcludeList@@3PAPADA DD FLAT:??_C@_05LPHLLKIA@Save0?$AA@ ; CampExcludeList
	DD	FLAT:??_C@_05KGGAILMB@Save1?$AA@
	DD	FLAT:??_C@_05INENNIAC@Save2?$AA@
	DD	FLAT:??_C@_07HMOCDNDG@Instant?$AA@
	DD	00H
?FrcLvlCatID@@3PAJA DD 01856H				; FrcLvlCatID
	DD	01857H
	DD	01858H
	DD	01859H
	DD	0185aH
	DD	0185bH
	DD	0185cH
?FrcTeamColors@@3PAKA DD 00H				; FrcTeamColors
	DD	0ff0000H
	DD	0f5f502H
	DD	00H
	DD	098ecH
	DD	0ffffH
	DD	0202f8H
	DD	00H
?MovieY@@3FA DW	05H					; MovieY
_DATA	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB
CONST	SEGMENT
?value@?$_Sizeof@HU_Nil@std@@U12@U12@U12@U12@U12@U12@@std@@2IB DD 01H ; std::_Sizeof<int,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
CONST	SEGMENT
_L_2	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?CMPDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::CMPDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB
CONST	SEGMENT
?SIMDIRTYDATA_INTERVAL@FalconEntity@@2KB DD 0c8H	; FalconEntity::SIMDIRTYDATA_INTERVAL
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
PUBLIC	??8VU_SESSION_ID@@QBEHABV0@@Z			; VU_SESSION_ID::operator==
PUBLIC	??BVU_SESSION_ID@@QBEKXZ			; VU_SESSION_ID::operator unsigned long
PUBLIC	??8VU_ID@@QBE_NABV0@@Z				; VU_ID::operator==
PUBLIC	??BVU_ID@@QBEKXZ				; VU_ID::operator unsigned long
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ		; VuBin<VuSessionEntity>::operator bool
PUBLIC	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	__tcsnccpy
PUBLIC	??_GC_Resmgr@@QAEPAXI@Z				; C_Resmgr::`scalar deleting destructor'
PUBLIC	?PlaySoundA@C_Sound@@QAEHJ@Z			; C_Sound::PlaySoundA
PUBLIC	?SetGroup@C_Base@@QAEXJ@Z			; C_Base::SetGroup
PUBLIC	?SetClient@C_Base@@QAEXF@Z			; C_Base::SetClient
PUBLIC	?SetReady@C_Base@@QAEXF@Z			; C_Base::SetReady
PUBLIC	?GetID@C_Base@@QAEJXZ				; C_Base::GetID
PUBLIC	?GetType@C_Base@@QAEFXZ				; C_Base::GetType
PUBLIC	?GetGroup@C_Base@@QAEJXZ			; C_Base::GetGroup
PUBLIC	?GetFlags@C_Base@@QAEJXZ			; C_Base::GetFlags
PUBLIC	?GetClient@C_Base@@QAEFXZ			; C_Base::GetClient
PUBLIC	?GetH@C_Base@@QAEJXZ				; C_Base::GetH
PUBLIC	?GetIncrement@C_Control@@QAEHXZ			; C_Control::GetIncrement
PUBLIC	?SetTimerCallback@C_Bitmap@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Bitmap::SetTimerCallback
PUBLIC	?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z	; C_Blip::SetImage
PUBLIC	?SetImage@C_Blip@@QAEXJEE@Z			; C_Blip::SetImage
PUBLIC	?SetLabelColor@C_ListBox@@QAEXK@Z		; C_ListBox::SetLabelColor
PUBLIC	?GetTextID@C_ListBox@@QAEJXZ			; C_ListBox::GetTextID
PUBLIC	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ		; C_TreeList::GetRoot
PUBLIC	?GetSliderMax@C_Slider@@QAEJXZ			; C_Slider::GetSliderMax
PUBLIC	?GetSliderMin@C_Slider@@QAEJXZ			; C_Slider::GetSliderMin
PUBLIC	?GetSliderPos@C_Slider@@QAEJXZ			; C_Slider::GetSliderPos
PUBLIC	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback
PUBLIC	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback
PUBLIC	?SetTimerCallback@C_Clock@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Clock::SetTimerCallback
PUBLIC	?GetFirstWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetFirstWindowLoaded
PUBLIC	?GetNextWindowLoaded@C_Parser@@QAEJXZ		; C_Parser::GetNextWindowLoaded
PUBLIC	?GetGroup@C_Window@@QAEJXZ			; C_Window::GetGroup
PUBLIC	?SetSection@C_Handler@@QAEXJ@Z			; C_Handler::SetSection
PUBLIC	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ		; C_Handler::GetAppWnd
PUBLIC	?SetImage@C_History@@QAEXJJ@Z			; C_History::SetImage
PUBLIC	?SetStart@C_Level@@QAEXJ@Z			; C_Level::SetStart
PUBLIC	?SetEnd@C_Level@@QAEXJ@Z			; C_Level::SetEnd
PUBLIC	?SetDrawArea@C_Level@@QAEXFFFF@Z		; C_Level::SetDrawArea
PUBLIC	?SetTeamColor@C_Level@@QAEXFK@Z			; C_Level::SetTeamColor
PUBLIC	?GetMinValue@C_Level@@QAEJXZ			; C_Level::GetMinValue
PUBLIC	?GetMaxValue@C_Level@@QAEJXZ			; C_Level::GetMaxValue
PUBLIC	?SetYLabel@C_Level@@QAEXFPAD@Z			; C_Level::SetYLabel
PUBLIC	?GetYLabel@C_Level@@QAEPADF@Z			; C_Level::GetYLabel
PUBLIC	?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_MapMover::SetDrawCallback
PUBLIC	?GetHRange@C_MapMover@@QAEJXZ			; C_MapMover::GetHRange
PUBLIC	?GetVRange@C_MapMover@@QAEJXZ			; C_MapMover::GetVRange
PUBLIC	?ToggleStream@C_Music@@QAEXXZ			; C_Music::ToggleStream
PUBLIC	?GetWPArrivalTime@WayPointClass@@QAEKXZ		; WayPointClass::GetWPArrivalTime
PUBLIC	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ	; RulesClass::GetRules
PUBLIC	?Callsign@LogBookData@@QAEPADXZ			; LogBookData::Callsign
PUBLIC	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
PUBLIC	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
PUBLIC	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
PUBLIC	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
PUBLIC	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
PUBLIC	?GetPilotSlot@FalconSessionEntity@@QBEEXZ	; FalconSessionEntity::GetPilotSlot
PUBLIC	?GetReqCompression@FalconSessionEntity@@QBEFXZ	; FalconSessionEntity::GetReqCompression
PUBLIC	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
PUBLIC	?CampEnterCriticalSection@@YAXXZ		; CampEnterCriticalSection
PUBLIC	?CampLeaveCriticalSection@@YAXXZ		; CampLeaveCriticalSection
PUBLIC	?GetTEStartTime@CampaignClass@@QAEKXZ		; CampaignClass::GetTEStartTime
PUBLIC	?GetTETimeLimitTime@CampaignClass@@QAEKXZ	; CampaignClass::GetTETimeLimitTime
PUBLIC	?SetCreatorIP@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreatorIP
PUBLIC	?SetCreationIter@CampaignClass@@QAEXJ@Z		; CampaignClass::SetCreationIter
PUBLIC	?GetCreatorIP@CampaignClass@@QAEJXZ		; CampaignClass::GetCreatorIP
PUBLIC	?GetCreationIter@CampaignClass@@QAEJXZ		; CampaignClass::GetCreationIter
PUBLIC	?GetUnitNameID@UnitClass@@QAEHXZ		; UnitClass::GetUnitNameID
PUBLIC	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
PUBLIC	?GetColor@TeamClass@@QAEHXZ			; TeamClass::GetColor
PUBLIC	?SetLogRanges@C_Map@@QAEXMMMM@Z			; C_Map::SetLogRanges
PUBLIC	?SetStrtRanges@C_Map@@QAEXMMMM@Z		; C_Map::SetStrtRanges
PUBLIC	?SetAirIcons@C_Map@@QAEXJJJJ@Z			; C_Map::SetAirIcons
PUBLIC	?SetArmyIcons@C_Map@@QAEXJJJ@Z			; C_Map::SetArmyIcons
PUBLIC	?SetNavyIcons@C_Map@@QAEXJJJ@Z			; C_Map::SetNavyIcons
PUBLIC	?SetObjectiveIcons@C_Map@@QAEXJJJ@Z		; C_Map::SetObjectiveIcons
PUBLIC	?GetZWindow@C_Map@@QAEPAVC_Window@@XZ		; C_Map::GetZWindow
PUBLIC	?GetCurWPZ@C_Map@@QAEPAVC_Waypoint@@XZ		; C_Map::GetCurWPZ
PUBLIC	?SetTeamFlags@C_Map@@QAEXJJ@Z			; C_Map::SetTeamFlags
PUBLIC	??_GC_Map@@QAEPAXI@Z				; C_Map::`scalar deleting destructor'
PUBLIC	?Online@UIComms@@QAEHXZ				; UIComms::Online
PUBLIC	?SetCampaignFlag@UIComms@@QAEXD@Z		; UIComms::SetCampaignFlag
PUBLIC	??1C_3dViewer@@QAE@XZ				; C_3dViewer::~C_3dViewer
PUBLIC	??_GC_3dViewer@@QAEPAXI@Z			; C_3dViewer::`scalar deleting destructor'
PUBLIC	?SetMap@GlobalPositioningSystem@@QAEXPAVC_Map@@@Z ; GlobalPositioningSystem::SetMap
PUBLIC	?SetObjectiveMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetObjectiveMenu
PUBLIC	?SetUnitMenu@GlobalPositioningSystem@@QAEXJ@Z	; GlobalPositioningSystem::SetUnitMenu
PUBLIC	?SetSquadronMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetSquadronMenu
PUBLIC	?SetMissionMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetMissionMenu
PUBLIC	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z	; GlobalPositioningSystem::SetAllowed
PUBLIC	?GetAllowed@GlobalPositioningSystem@@QAEJXZ	; GlobalPositioningSystem::GetAllowed
PUBLIC	?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z	; GlobalPositioningSystem::SetTeamNo
PUBLIC	??_GGlobalPositioningSystem@@QAEPAXI@Z		; GlobalPositioningSystem::`scalar deleting destructor'
PUBLIC	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag
PUBLIC	?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ ; PlayerOptionsClass::GetStartFlag
PUBLIC	?ViewTimerCB@@YAXJFPAVC_Base@@@Z		; ViewTimerCB
PUBLIC	?CampaignSoundEventCB@@YAXXZ			; CampaignSoundEventCB
PUBLIC	?CampaignListCB@@YAXXZ				; CampaignListCB
PUBLIC	?TacEngListCB@@YAXXZ				; TacEngListCB
PUBLIC	?CleanupTacticalEngagementUI@@YAXXZ		; CleanupTacticalEngagementUI
PUBLIC	?Cancel_Scramble_CB@@YAXJFPAVC_Base@@@Z		; Cancel_Scramble_CB
PUBLIC	?LoadTroopMovementHistory@@YAXXZ		; LoadTroopMovementHistory
PUBLIC	?LoadForceLevelHistory@@YAXXZ			; LoadForceLevelHistory
PUBLIC	?InitTimeCompressionBox@@YAXJ@Z			; InitTimeCompressionBox
PUBLIC	?UpdateRemoteCompression@@YAXXZ			; UpdateRemoteCompression
PUBLIC	?StartCampaignCB@@YAXJFPAVC_Base@@@Z		; StartCampaignCB
PUBLIC	?OpenHistoryWindowCB@@YAXJFPAVC_Base@@@Z	; OpenHistoryWindowCB
PUBLIC	?OpenForceLevelsWindowCB@@YAXJFPAVC_Base@@@Z	; OpenForceLevelsWindowCB
PUBLIC	?ActivateCampMissionSchedule@@YAXXZ		; ActivateCampMissionSchedule
PUBLIC	?OpenOOBWindowCB@@YAXJFPAVC_Base@@@Z		; OpenOOBWindowCB
PUBLIC	?OpenSquadronWindowCB@@YAXJFPAVC_Base@@@Z	; OpenSquadronWindowCB
PUBLIC	?OpenSierraHotelCB@@YAXJFPAVC_Base@@@Z		; OpenSierraHotelCB
PUBLIC	?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z	; PickCampaignPlaneCB
PUBLIC	?ViewTimerAnimCB@@YAXJFPAVC_Base@@@Z		; ViewTimerAnimCB
PUBLIC	?UI_UpdateEventList@@YAXXZ			; UI_UpdateEventList
PUBLIC	?StartMovieQ@@YAXXZ				; StartMovieQ
PUBLIC	?StartAMovieCB@@YAXJFPAVC_Base@@@Z		; StartAMovieCB
PUBLIC	?InitNewFlash@@YAXXZ				; InitNewFlash
PUBLIC	?AddToNewsWindow@@YAXJPADJ@Z			; AddToNewsWindow
PUBLIC	?PlayUIMovieQ@@YAXXZ				; PlayUIMovieQ
PUBLIC	?ReplayUIMovie@@YAXJ@Z				; ReplayUIMovie
PUBLIC	?CloseAWWWindowTimer@@YAXXZ			; CloseAWWWindowTimer
PUBLIC	?UI_HandleAirbaseDestroyed@@YAXXZ		; UI_HandleAirbaseDestroyed
PUBLIC	?UI_HandleFlightCancel@@YAXXZ			; UI_HandleFlightCancel
PUBLIC	?UI_HandleFlightScrub@@YAXXZ			; UI_HandleFlightScrub
PUBLIC	?UI_HandleAircraftDestroyed@@YAXXZ		; UI_HandleAircraftDestroyed
PUBLIC	?UIScramblePlayerFlight@@YAXXZ			; UIScramblePlayerFlight
PUBLIC	?Scramble_Intercept_CB@@YAXJFPAVC_Base@@@Z	; Scramble_Intercept_CB
PUBLIC	?UI_AddMovieToList@@YAXJJPAD@Z			; UI_AddMovieToList
PUBLIC	?UI_UpdateOccupationMap@@YAXXZ			; UI_UpdateOccupationMap
PUBLIC	?AircraftLaunch@@YAXPAVFlightClass@@@Z		; AircraftLaunch
PUBLIC	?PlayAmbientSound@@YAXXZ			; PlayAmbientSound
PUBLIC	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
PUBLIC	?SetupMapMgr@@YAX_N@Z				; SetupMapMgr
PUBLIC	?SetupGPS@@YAXPAVC_TreeList@@@Z			; SetupGPS
PUBLIC	?CampBriefPrintCB@@YAXJFPAVC_Base@@@Z		; CampBriefPrintCB
PUBLIC	?CampDeBriefPrintCB@@YAXJFPAVC_Base@@@Z		; CampDeBriefPrintCB
PUBLIC	?CampSaveAsCB@@YAXJFPAVC_Base@@@Z		; CampSaveAsCB
PUBLIC	?CampaignSetup@@YAXXZ				; CampaignSetup
PUBLIC	?TacticalEngagementSetup@@YAX_N@Z		; TacticalEngagementSetup
PUBLIC	?LoadCampaignWindows@@YAXXZ			; LoadCampaignWindows
PUBLIC	?CampaignButtonCB@@YAXJFPAVC_Base@@@Z		; CampaignButtonCB
PUBLIC	?CampaignClockCB@@YAHPAVC_Base@@@Z		; CampaignClockCB
PUBLIC	?CleanupCampaignUI@@YAXXZ			; CleanupCampaignUI
PUBLIC	?EndCommitCB@@YAXJFPAVC_Base@@@Z		; EndCommitCB
PUBLIC	?OpenPlannerWindowCB@@YAXJFPAVC_Base@@@Z	; OpenPlannerWindowCB
PUBLIC	?CheckPlayersFlight@@YAXPAVFalconSessionEntity@@@Z ; CheckPlayersFlight
PUBLIC	?UpdateEventBlipsCB@@YAXJFPAVC_Base@@@Z		; UpdateEventBlipsCB
PUBLIC	?OpenCampaignCommsCB@@YAXJFPAVC_Base@@@Z	; OpenCampaignCommsCB
PUBLIC	?HistoryPlayForward@@YAXJFPAVC_Base@@@Z		; HistoryPlayForward
PUBLIC	?HistoryPlayReverse@@YAXJFPAVC_Base@@@Z		; HistoryPlayReverse
PUBLIC	?HistoryStepForward@@YAXJFPAVC_Base@@@Z		; HistoryStepForward
PUBLIC	?HistoryStepReverse@@YAXJFPAVC_Base@@@Z		; HistoryStepReverse
PUBLIC	?HistoryFastForward@@YAXJFPAVC_Base@@@Z		; HistoryFastForward
PUBLIC	?HistoryFastReverse@@YAXJFPAVC_Base@@@Z		; HistoryFastReverse
PUBLIC	?HistoryStop@@YAXJFPAVC_Base@@@Z		; HistoryStop
PUBLIC	?HistoryDragBallCB@@YAXJFPAVC_Base@@@Z		; HistoryDragBallCB
PUBLIC	?HistoryTimerCB@@YAXJFPAVC_Base@@@Z		; HistoryTimerCB
PUBLIC	?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z		; FitFlightPlanCB
PUBLIC	?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z		; OpenCrossSectionCB
PUBLIC	?SelectForceCategoryCB@@YAXJFPAVC_Base@@@Z	; SelectForceCategoryCB
PUBLIC	?TimeCompressionCB@@YAXJFPAVC_Base@@@Z		; TimeCompressionCB
PUBLIC	?OpenNewsWindowCB@@YAXJFPAVC_Base@@@Z		; OpenNewsWindowCB
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?ReconFlightID@@3VVU_ID@@A			; ReconFlightID
PUBLIC	??_C@_0BM@OMFOOALH@GPS?3?5OOB?5Allow?5time?5?$DN?5?$CF1ld?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@EJFMANNM@?$CF02ld?3?$CF02ld?5?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_08HJFJOAMM@Briefing?$AA@			; `string'
PUBLIC	??_C@_0L@CHHJGCHE@Debriefing?$AA@		; `string'
PUBLIC	??_C@_09KALBFCKF@?$CFs?2?$CFs?4cam?$AA@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03GOGOMMPD@cam?$AA@			; `string'
PUBLIC	??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@		; `string'
PUBLIC	??_C@_0BK@GOFFMNEM@?$CFs?9?$CFs?5?$CF1ld?5?$CF02d?5?$CF02d?5?$CF02d?$AA@ ; `string'
PUBLIC	??_C@_08EPEHIMMI@?$CFs?5?$CFs?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_05LINHLPLG@save0?$AA@			; `string'
PUBLIC	??_C@_05KBMMIOPH@save1?$AA@			; `string'
PUBLIC	??_C@_05IKOBNNDE@save2?$AA@			; `string'
PUBLIC	??_C@_0L@KOEEIMPA@cp_res?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@ODAMCIMA@cp_art?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@HODKOKLH@cp_snd?4lst?$AA@		; `string'
PUBLIC	??_C@_0L@FCCFCKHM@cp_scf?4lst?$AA@		; `string'
PUBLIC	??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BA@BPFGNMGI@?$CFs?$CF2ld?5?5?$CF02d?300?$AA@ ; `string'
PUBLIC	??_C@_07FECODFMA@?$CF5?41f?$CFs?$AA@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_04DIDHKLLF@?$CF1ld?$AA@			; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_03GDDNCFJF@his?$AA@			; `string'
PUBLIC	??_C@_03FFNGDGKN@tmp?$AA@			; `string'
PUBLIC	??_C@_03NJFDAMGG@frc?$AA@			; `string'
PUBLIC	??_C@_0BL@BJCEFPAP@Error?5Reading?5Force?5Level?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@IGDOPJFN@?$CFs?5?$CF1ld?5?$CF02ld?300?$AA@ ; `string'
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	?id@?$numpunct@_W@std@@2V0locale@2@A		; std::numpunct<wchar_t>::id
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@392c987a
PUBLIC	__real@3fd72aae297396d1
PUBLIC	__real@428c0000
PUBLIC	__real@44390000
PUBLIC	__real@447a0000
PUBLIC	__real@454cffae
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_sprintf:PROC
EXTRN	_MonoPrint:PROC
EXTRN	?IsLocal@VuEntity@@QBEEXZ:PROC			; VuEntity::IsLocal
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z:PROC ; VuDatabase::Find
EXTRN	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ:PROC ; VuSessionEntity::Game
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPBDH@Z:PROC		; std::_Syserror_map
EXTRN	?_Winerror_map@std@@YAPBDH@Z:PROC		; std::_Winerror_map
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__mbsncpy:PROC
EXTRN	_F4EnterCriticalSection:PROC
EXTRN	_F4LeaveCriticalSection:PROC
EXTRN	??1C_Resmgr@@QAE@XZ:PROC			; C_Resmgr::~C_Resmgr
EXTRN	?Cleanup@C_Resmgr@@QAEXXZ:PROC			; C_Resmgr::Cleanup
EXTRN	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z:PROC	; C_Image::GetImage
EXTRN	?GetSound@C_Sound@@QAEPAVSOUND_RES@@J@Z:PROC	; C_Sound::GetSound
EXTRN	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z:PROC	; C_Sound::PlaySoundA
EXTRN	?GetString@C_String@@QAEPADJ@Z:PROC		; C_String::GetString
EXTRN	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z:PROC ; UI_Enter
EXTRN	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z:PROC	; UI_Leave
EXTRN	?SetUserNumber@C_Base@@QAEXJJ@Z:PROC		; C_Base::SetUserNumber
EXTRN	?GetUserNumber@C_Base@@QAEJJ@Z:PROC		; C_Base::GetUserNumber
EXTRN	?SetImage@C_Bitmap@@QAEXJ@Z:PROC		; C_Bitmap::SetImage
EXTRN	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z:PROC	; C_Bitmap::SetImage
EXTRN	??0C_Button@@QAE@XZ:PROC			; C_Button::C_Button
EXTRN	?Setup@C_Button@@QAEXJFJJ@Z:PROC		; C_Button::Setup
EXTRN	?SetColor@C_Button@@QAEXFK@Z:PROC		; C_Button::SetColor
EXTRN	?SetText@C_Button@@QAEXFPBD@Z:PROC		; C_Button::SetText
EXTRN	??0C_Blip@@QAE@XZ:PROC				; C_Blip::C_Blip
EXTRN	?Setup@C_Blip@@QAEXJF@Z:PROC			; C_Blip::Setup
EXTRN	?InitDrawer@C_Blip@@QAEXXZ:PROC			; C_Blip::InitDrawer
EXTRN	?BlinkLast@C_Blip@@QAEXXZ:PROC			; C_Blip::BlinkLast
EXTRN	?Update@C_Blip@@QAEXJ@Z:PROC			; C_Blip::Update
EXTRN	?RemoveAll@C_Blip@@QAEXXZ:PROC			; C_Blip::RemoveAll
EXTRN	?SetValue@C_ListBox@@QAEXJ@Z:PROC		; C_ListBox::SetValue
EXTRN	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z:PROC ; C_TreeList::DeleteBranch
EXTRN	??0C_EditBox@@QAE@XZ:PROC			; C_EditBox::C_EditBox
EXTRN	??1C_EditBox@@UAE@XZ:PROC			; C_EditBox::~C_EditBox
EXTRN	?Setup@C_EditBox@@QAEXJF@Z:PROC			; C_EditBox::Setup
EXTRN	?Cleanup@C_EditBox@@UAEXXZ:PROC			; C_EditBox::Cleanup
EXTRN	?SetText@C_EditBox@@QAEXPAD@Z:PROC		; C_EditBox::SetText
EXTRN	?GetText@C_EditBox@@QAEPADXZ:PROC		; C_EditBox::GetText
EXTRN	?SetSliderPos@C_Slider@@QAEXJ@Z:PROC		; C_Slider::SetSliderPos
EXTRN	??0C_TimerHook@@QAE@XZ:PROC			; C_TimerHook::C_TimerHook
EXTRN	?Setup@C_TimerHook@@QAEXJF@Z:PROC		; C_TimerHook::Setup
EXTRN	?SetTime@C_Clock@@QAEXJ@Z:PROC			; C_Clock::SetTime
EXTRN	?GetTime@C_Clock@@QAEJXZ:PROC			; C_Clock::GetTime
EXTRN	?LoadWindowList@C_Parser@@QAEHPAD@Z:PROC	; C_Parser::LoadWindowList
EXTRN	?LoadSoundList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadSoundList
EXTRN	?LoadImageList@C_Parser@@QAEHPAD@Z:PROC		; C_Parser::LoadImageList
EXTRN	?ScanClientArea@C_Window@@QAEXJ@Z:PROC		; C_Window::ScanClientArea
EXTRN	?AddControl@C_Window@@QAEXPAVC_Base@@@Z:PROC	; C_Window::AddControl
EXTRN	?UnHideGroup@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideGroup
EXTRN	?HideGroup@C_Window@@QAEXJ@Z:PROC		; C_Window::HideGroup
EXTRN	?UnHideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::UnHideCluster
EXTRN	?HideCluster@C_Window@@QAEXJ@Z:PROC		; C_Window::HideCluster
EXTRN	?SetGroupState@C_Window@@QAEXJF@Z:PROC		; C_Window::SetGroupState
EXTRN	?RefreshWindow@C_Window@@QAEXXZ:PROC		; C_Window::RefreshWindow
EXTRN	?RefreshClient@C_Window@@QAEXJ@Z:PROC		; C_Window::RefreshClient
EXTRN	?FindControl@C_Window@@QAEPAVC_Base@@J@Z:PROC	; C_Window::FindControl
EXTRN	?EnterCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::EnterCritical
EXTRN	?LeaveCritical@C_Handler@@QAEXXZ:PROC		; C_Handler::LeaveCritical
EXTRN	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z:PROC	; C_Handler::AddUserCallback
EXTRN	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z:PROC ; C_Handler::RemoveUserCallback
EXTRN	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::ShowWindow
EXTRN	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z:PROC	; C_Handler::HideWindow
EXTRN	?DisableSection@C_Handler@@QAEXJ@Z:PROC		; C_Handler::DisableSection
EXTRN	?EnableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::EnableWindowGroup
EXTRN	?DisableWindowGroup@C_Handler@@QAEXJ@Z:PROC	; C_Handler::DisableWindowGroup
EXTRN	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z:PROC ; C_Handler::WindowToFront
EXTRN	?GetWindowFlags@C_Handler@@QAEJJ@Z:PROC		; C_Handler::GetWindowFlags
EXTRN	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z:PROC ; C_Handler::FindWindowA
EXTRN	??0C_History@@QAE@XZ:PROC			; C_History::C_History
EXTRN	?Setup@C_History@@QAEXJFF@Z:PROC		; C_History::Setup
EXTRN	?AddIconSet@C_History@@QAEXFFFF@Z:PROC		; C_History::AddIconSet
EXTRN	??0C_Level@@QAE@XZ:PROC				; C_Level::C_Level
EXTRN	?Setup@C_Level@@QAEXJF@Z:PROC			; C_Level::Setup
EXTRN	?AddPoint@C_Level@@QAEXFF@Z:PROC		; C_Level::AddPoint
EXTRN	?CalcPositions@C_Level@@QAEXXZ:PROC		; C_Level::CalcPositions
EXTRN	??0C_MapMover@@QAE@XZ:PROC			; C_MapMover::C_MapMover
EXTRN	?Setup@C_MapMover@@QAEXJF@Z:PROC		; C_MapMover::Setup
EXTRN	?FadeOut_Stop@C_Music@@QAEXXZ:PROC		; C_Music::FadeOut_Stop
EXTRN	?ClearQ@C_Music@@QAEXXZ:PROC			; C_Music::ClearQ
EXTRN	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z:PROC	; OpenCampFile
EXTRN	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ:PROC ; FalconGameEntity::GetGameType
EXTRN	?GetTeam@FalconSessionEntity@@QAEEXZ:PROC	; FalconSessionEntity::GetTeam
EXTRN	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z:PROC ; FalconSessionEntity::SetPlayerSquadron
EXTRN	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z:PROC ; FalconSessionEntity::SetPlayerFlight
EXTRN	?SetPilotSlot@FalconSessionEntity@@QAEXE@Z:PROC	; FalconSessionEntity::SetPilotSlot
EXTRN	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z:PROC ; CampaignClass::SaveCampaign
EXTRN	?Suspend@CampaignClass@@QAEXXZ:PROC		; CampaignClass::Suspend
EXTRN	?Resume@CampaignClass@@QAEXXZ:PROC		; CampaignClass::Resume
EXTRN	?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z:PROC ; CampaignClass::GetBullseyeLocation
EXTRN	?GetTotalVehicles@UnitClass@@QAEHXZ:PROC	; UnitClass::GetTotalVehicles
EXTRN	?GetAdjustedAircraftSlot@FlightClass@@QAEHH@Z:PROC ; FlightClass::GetAdjustedAircraftSlot
EXTRN	?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z:PROC ; MissionEvaluationClass::PreMissionEval
EXTRN	?GetTimeString@@YAPADKQADH@Z:PROC		; GetTimeString
EXTRN	?SetTimeCompression@@YAXH@Z:PROC		; SetTimeCompression
EXTRN	??0C_Map@@QAE@XZ:PROC				; C_Map::C_Map
EXTRN	??1C_Map@@QAE@XZ:PROC				; C_Map::~C_Map
EXTRN	?SetupOverlay@C_Map@@QAEXXZ:PROC		; C_Map::SetupOverlay
EXTRN	?Cleanup@C_Map@@QAEXXZ:PROC			; C_Map::Cleanup
EXTRN	?SetMapImage@C_Map@@QAEXJ@Z:PROC		; C_Map::SetMapImage
EXTRN	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z:PROC	; C_Map::SetWindow
EXTRN	?SetWPZWindow@C_Map@@QAEXPAVC_Window@@@Z:PROC	; C_Map::SetWPZWindow
EXTRN	?FitFlightPlan@C_Map@@QAEXXZ:PROC		; C_Map::FitFlightPlan
EXTRN	?SetZoomLevel@C_Map@@QAEXF@Z:PROC		; C_Map::SetZoomLevel
EXTRN	?ZoomIn@C_Map@@QAEXXZ:PROC			; C_Map::ZoomIn
EXTRN	?ZoomOut@C_Map@@QAEXXZ:PROC			; C_Map::ZoomOut
EXTRN	?SetBullsEye@C_Map@@QAEXMM@Z:PROC		; C_Map::SetBullsEye
EXTRN	?SetMapCenter@C_Map@@QAEXJJ@Z:PROC		; C_Map::SetMapCenter
EXTRN	?MoveCenter@C_Map@@QAEXJJ@Z:PROC		; C_Map::MoveCenter
EXTRN	?RemoveOldWaypoints@C_Map@@QAEXXZ:PROC		; C_Map::RemoveOldWaypoints
EXTRN	?DrawMap@C_Map@@QAEXXZ:PROC			; C_Map::DrawMap
EXTRN	?RecalcWaypointZs@C_Map@@QAEXJ@Z:PROC		; C_Map::RecalcWaypointZs
EXTRN	?ShutdownCampaign@@YAXXZ:PROC			; ShutdownCampaign
EXTRN	?SaveStats@UIComms@@QAEXXZ:PROC			; UIComms::SaveStats
EXTRN	?UpdateGameIter@UIComms@@QAEXXZ:PROC		; UIComms::UpdateGameIter
EXTRN	?Cleanup@C_3dViewer@@QAEHXZ:PROC		; C_3dViewer::Cleanup
EXTRN	??0GlobalPositioningSystem@@QAE@XZ:PROC		; GlobalPositioningSystem::GlobalPositioningSystem
EXTRN	??1GlobalPositioningSystem@@QAE@XZ:PROC		; GlobalPositioningSystem::~GlobalPositioningSystem
EXTRN	?Setup@GlobalPositioningSystem@@QAEXXZ:PROC	; GlobalPositioningSystem::Setup
EXTRN	?Cleanup@GlobalPositioningSystem@@QAEXXZ:PROC	; GlobalPositioningSystem::Cleanup
EXTRN	?SetMissionTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z:PROC ; GlobalPositioningSystem::SetMissionTree
EXTRN	?SetATOTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z:PROC ; GlobalPositioningSystem::SetATOTree
EXTRN	?SetOOBTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z:PROC ; GlobalPositioningSystem::SetOOBTree
EXTRN	?Update@GlobalPositioningSystem@@QAEXXZ:PROC	; GlobalPositioningSystem::Update
EXTRN	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z:PROC	; RequestACSlot
EXTRN	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z:PROC	; PlayerOptionsClass::SaveOptions
EXTRN	?ComplyWRules@PlayerOptionsClass@@QAEXPAURulesStruct@@@Z:PROC ; PlayerOptionsClass::ComplyWRules
EXTRN	?CampHackButton1CB@@YAXJFPAVC_Base@@@Z:PROC	; CampHackButton1CB
EXTRN	?CampHackButton2CB@@YAXJFPAVC_Base@@@Z:PROC	; CampHackButton2CB
EXTRN	?CampHackButton3CB@@YAXJFPAVC_Base@@@Z:PROC	; CampHackButton3CB
EXTRN	?CampHackButton4CB@@YAXJFPAVC_Base@@@Z:PROC	; CampHackButton4CB
EXTRN	?CampHackButton5CB@@YAXJFPAVC_Base@@@Z:PROC	; CampHackButton5CB
EXTRN	?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z:PROC	; UI_Help_Guide_CB
EXTRN	?add_all_vcs_to_ui@@YAXXZ:PROC			; add_all_vcs_to_ui
EXTRN	?UpdateSierraHotel@@YAXXZ:PROC			; UpdateSierraHotel
EXTRN	?CampaignAutoSave@@YAXW4FalconGameType@@@Z:PROC	; CampaignAutoSave
EXTRN	?PlayUIMovie@@YAXJ@Z:PROC			; PlayUIMovie
EXTRN	?PlayUIMusic@@YAXXZ:PROC			; PlayUIMusic
EXTRN	?PlayCampaignMusic@@YAXXZ:PROC			; PlayCampaignMusic
EXTRN	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z:PROC	; PositionSlider
EXTRN	?ClearMapToolStates@@YAXJ@Z:PROC		; ClearMapToolStates
EXTRN	?CheckCampaignFlyButton@@YAXXZ:PROC		; CheckCampaignFlyButton
EXTRN	?UpdateWaypointWindowInfo@@YAXPAVC_Window@@PAVWayPointClass@@HH@Z:PROC ; UpdateWaypointWindowInfo
EXTRN	?Uni_Float@@YAXPAD@Z:PROC			; Uni_Float
EXTRN	?DelCamFileCB@@YAXJFPAVC_Base@@@Z:PROC		; DelCamFileCB
EXTRN	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z:PROC ; SetDeleteCallback
EXTRN	?ACMIButtonCB@@YAXJFPAVC_Base@@@Z:PROC		; ACMIButtonCB
EXTRN	?SetupOOBWindow@@YAXXZ:PROC			; SetupOOBWindow
EXTRN	?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z:PROC	; UpdateIntelBarCB
EXTRN	?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z:PROC	; MakeOccupationMap
EXTRN	?UpdateIntel@@YAXJ@Z:PROC			; UpdateIntel
EXTRN	?GetFlightStatusID@@YAFPAVFlightClass@@@Z:PROC	; GetFlightStatusID
EXTRN	?RefreshEventList@@YAXXZ:PROC			; RefreshEventList
EXTRN	?FindMissionInBriefing@@YAXJ@Z:PROC		; FindMissionInBriefing
EXTRN	?RefreshMapEventList@@YAXJJ@Z:PROC		; RefreshMapEventList
EXTRN	?do_tactical_debrief@@YAXXZ:PROC		; do_tactical_debrief
EXTRN	?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z:PROC	; SelectMissionSortCB
EXTRN	?SetSingle_Comms_Ctrls@@YAXXZ:PROC		; SetSingle_Comms_Ctrls
EXTRN	?SelectScenarioCB@@YAXJFPAVC_Base@@@Z:PROC	; SelectScenarioCB
EXTRN	?OpenLogBookCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenLogBookCB
EXTRN	?GenericTimerCB@@YAXJFPAVC_Base@@@Z:PROC	; GenericTimerCB
EXTRN	?BlinkCommsButtonTimerCB@@YAXJFPAVC_Base@@@Z:PROC ; BlinkCommsButtonTimerCB
EXTRN	?LoadCommonWindows@@YAXXZ:PROC			; LoadCommonWindows
EXTRN	?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z:PROC	; OpenMunitionsWindowCB
EXTRN	?OpenSetupCB@@YAXJFPAVC_Base@@@Z:PROC		; OpenSetupCB
EXTRN	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z:PROC ; SaveAFile
EXTRN	?TallyPlayerSquadrons@@YAXXZ:PROC		; TallyPlayerSquadrons
EXTRN	?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z:PROC ; OpenTacticalReferenceCB
EXTRN	?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z:PROC	; SetupSquadronInfoWindow
EXTRN	?PriorityTabsCB@@YAXJFPAVC_Base@@@Z:PROC	; PriorityTabsCB
EXTRN	?UsePriotityCB@@YAXJFPAVC_Base@@@Z:PROC		; UsePriotityCB
EXTRN	?CancelPriorityCB@@YAXJFPAVC_Base@@@Z:PROC	; CancelPriorityCB
EXTRN	?MapSelectPAKCB@@YAXJFPAVC_Base@@@Z:PROC	; MapSelectPAKCB
EXTRN	?SelectPAKCB@@YAXJFPAVC_Base@@@Z:PROC		; SelectPAKCB
EXTRN	?SetPAKPriorityCB@@YAXJFPAVC_Base@@@Z:PROC	; SetPAKPriorityCB
EXTRN	?InitPAKNames@@YAXXZ:PROC			; InitPAKNames
EXTRN	?PAKMapTimerCB@@YAHPAVC_Base@@@Z:PROC		; PAKMapTimerCB
EXTRN	?SetCampaignPrioritiesCB@@YAXJFPAVC_Base@@@Z:PROC ; SetCampaignPrioritiesCB
EXTRN	?OpenPriorityCB@@YAXJFPAVC_Base@@@Z:PROC	; OpenPriorityCB
EXTRN	?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z:PROC	; gMapMgr_TACmover
EXTRN	?SetupTacEngMenus@@YAXF@Z:PROC			; SetupTacEngMenus
EXTRN	?SetupCampaignMenus@@YAXXZ:PROC			; SetupCampaignMenus
EXTRN	?SetMapSettings@@YAXXZ:PROC			; SetMapSettings
EXTRN	?InitVCArgLists@@YAXXZ:PROC			; InitVCArgLists
EXTRN	?CleanupVCArgLists@@YAXXZ:PROC			; CleanupVCArgLists
EXTRN	?CloseWindowCB@@YAXJFPAVC_Base@@@Z:PROC		; CloseWindowCB
EXTRN	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z:PROC	; AreYouSure
EXTRN	?CheckExclude@@YAHPAD0QAPAD0@Z:PROC		; CheckExclude
EXTRN	?FindMissionItem@@YAPAVUI_Refresher@@PAVFlightClass@@@Z:PROC ; FindMissionItem
EXTRN	?tactical_is_training@@YAHXZ:PROC		; tactical_is_training
EXTRN	?UpdateVCs@@YAXXZ:PROC				; UpdateVCs
EXTRN	?SendChatStringCB@@YAXJFPAVC_Base@@@Z:PROC	; SendChatStringCB
EXTRN	?BuildCampBrief@@YAXPAVC_Window@@@Z:PROC	; BuildCampBrief
EXTRN	?BuildCampDebrief@@YAXPAVC_Window@@@Z:PROC	; BuildCampDebrief
EXTRN	?BuildCampBrief@@YAXPAD@Z:PROC			; BuildCampBrief
EXTRN	?BuildCampDebrief@@YAXPAD@Z:PROC		; BuildCampDebrief
EXTRN	?DeleteGroupList@@YAXJ@Z:PROC			; DeleteGroupList
EXTRN	?UpdateMissionWindow@@YAXJ@Z:PROC		; UpdateMissionWindow
EXTRN	?CompressCampaignUntilTakeoff@@YAHPAVFlightClass@@@Z:PROC ; CompressCampaignUntilTakeoff
EXTRN	?SendStringToPrinter@@YAHPAD0@Z:PROC		; SendStringToPrinter
EXTRN	?OrdinalString@@YAPADJ@Z:PROC			; OrdinalString
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	?vuDatabase@@3PAVVuDatabase@@A:DWORD		; vuDatabase
EXTRN	?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A:DWORD ; vuLocalSessionEntity
EXTRN	?vuLocalSession@@3VVU_ID@@A:QWORD		; vuLocalSession
EXTRN	?vuxGameTime@@3KA:DWORD				; vuxGameTime
EXTRN	?FalconNullId@@3VVU_ID@@A:QWORD			; FalconNullId
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?gImageMgr@@3PAVC_Image@@A:DWORD		; gImageMgr
EXTRN	?gSoundMgr@@3PAVC_Sound@@A:DWORD		; gSoundMgr
EXTRN	?gStringMgr@@3PAVC_String@@A:DWORD		; gStringMgr
EXTRN	?gCursors@@3PAPAUHICON__@@A:BYTE		; gCursors
EXTRN	?_LOAD_ART_RESOURCES_@@3JA:DWORD		; _LOAD_ART_RESOURCES_
EXTRN	?gMusic@@3PAVC_Music@@A:DWORD			; gMusic
EXTRN	?LogBook@@3VLogBookData@@A:BYTE			; LogBook
EXTRN	?campCritical@@3PAUF4CSECTIONHANDLE@@A:DWORD	; campCritical
EXTRN	?TheCampaign@@3VCampaignClass@@A:BYTE		; TheCampaign
EXTRN	?TeamInfo@@3PAPAVTeamClass@@A:BYTE		; TeamInfo
EXTRN	?FalconCampUserSaveDirectory@@3PADA:BYTE	; FalconCampUserSaveDirectory
EXTRN	?gCompressTillTime@@3KA:DWORD			; gCompressTillTime
EXTRN	?targetCompressionRatio@@3HA:DWORD		; targetCompressionRatio
EXTRN	?remoteCompressionRequests@@3HA:DWORD		; remoteCompressionRequests
EXTRN	?gTimeModeServer@@3HA:DWORD			; gTimeModeServer
EXTRN	?gCommsMgr@@3PAVUIComms@@A:DWORD		; gCommsMgr
EXTRN	?TeamColorIconIDs@@3PAY01JA:BYTE		; TeamColorIconIDs
EXTRN	?TeamFlightColorIconIDs@@3PAY171JA:BYTE		; TeamFlightColorIconIDs
EXTRN	?BLIP_IDS@@3PAY07JA:BYTE			; BLIP_IDS
EXTRN	?FalconDisplay@@3VFalconDisplayConfiguration@@A:BYTE ; FalconDisplay
EXTRN	?PlayerOptions@@3VPlayerOptionsClass@@A:BYTE	; PlayerOptions
EXTRN	?gMainHandler@@3PAVC_Handler@@A:DWORD		; gMainHandler
EXTRN	?gMainParser@@3PAVC_Parser@@A:DWORD		; gMainParser
EXTRN	?MainLastGroup@@3HA:DWORD			; MainLastGroup
EXTRN	?CPLoaded@@3HA:DWORD				; CPLoaded
EXTRN	?CampaignLastGroup@@3HA:DWORD			; CampaignLastGroup
EXTRN	?TacLastGroup@@3HA:DWORD			; TacLastGroup
EXTRN	?gNewMessage@@3HA:DWORD				; gNewMessage
EXTRN	?gOccupationMap@@3PAVIMAGE_RSC@@A:DWORD		; gOccupationMap
EXTRN	?StopLookingforMission@@3JA:DWORD		; StopLookingforMission
EXTRN	?CurMapTool@@3PAVC_Base@@A:DWORD		; CurMapTool
EXTRN	?g_bServer@@3_NA:BYTE				; g_bServer
EXTRN	?gRefreshScoresList@@3JA:DWORD			; gRefreshScoresList
EXTRN	?gCurrentFlightID@@3VVU_ID@@A:QWORD		; gCurrentFlightID
EXTRN	?gPlayerFlightID@@3VVU_ID@@A:QWORD		; gPlayerFlightID
EXTRN	?gPlayerPlane@@3FA:WORD				; gPlayerPlane
EXTRN	?gActiveFlightID@@3VVU_ID@@A:QWORD		; gActiveFlightID
EXTRN	?gActiveWPNum@@3FA:WORD				; gActiveWPNum
EXTRN	?gSelectedFlightID@@3VVU_ID@@A:QWORD		; gSelectedFlightID
EXTRN	?gLoadoutFlightID@@3VVU_ID@@A:QWORD		; gLoadoutFlightID
EXTRN	?gInterceptersId@@3VVU_ID@@A:QWORD		; gInterceptersId
EXTRN	?CurrRules@@3VRulesClass@@A:BYTE		; CurrRules
EXTRN	?ShowGameOverWindow@@3JA:DWORD			; ShowGameOverWindow
EXTRN	?gATOAll@@3PAVC_TreeList@@A:DWORD		; gATOAll
EXTRN	?gATOPackage@@3PAVC_TreeList@@A:DWORD		; gATOPackage
EXTRN	?gOOBTree@@3PAVC_TreeList@@A:DWORD		; gOOBTree
EXTRN	?gVCTree@@3PAVC_TreeList@@A:DWORD		; gVCTree
EXTRN	?te_restore_map@@3PAEA:DWORD			; te_restore_map
EXTRN	?gSelectedTeam@@3EA:BYTE			; gSelectedTeam
EXTRN	?PAKMap@@3PAVIMAGE_RSC@@A:DWORD			; PAKMap
EXTRN	?gUI_CampaignFile@@3PADA:BYTE			; gUI_CampaignFile
EXTRN	?campaignStart@@3_NA:BYTE			; campaignStart
EXTRN	?g_bAWACSSupport@@3_NA:BYTE			; g_bAWACSSupport
EXTRN	?g_bAWACSBackground@@3_NA:BYTE			; g_bAWACSBackground
EXTRN	?g_bEmptyFilenameFix@@3_NA:BYTE			; g_bEmptyFilenameFix
EXTRN	?g_bTakeoffSound@@3_NA:BYTE			; g_bTakeoffSound
EXTRN	?g_bMPStartRestricted@@3_NA:BYTE		; g_bMPStartRestricted
EXTRN	?g_LargeTheater@@3_NA:BYTE			; g_LargeTheater
EXTRN	?gOldCompressTillTime@@3KA:DWORD		; gOldCompressTillTime
EXTRN	?gOldCompressionRatio@@3KA:DWORD		; gOldCompressionRatio
EXTRN	?ObjStr@@3PAPADA:BYTE				; ObjStr
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	8

?ReconFlightID@@3VVU_ID@@A DQ 01H DUP (?)		; ReconFlightID
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@_W@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@_W@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<wchar_t>::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@454cffae
CONST	SEGMENT
__real@454cffae DD 0454cffaer			; 3279.98
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44390000
CONST	SEGMENT
__real@44390000 DD 044390000r			; 740
CONST	ENDS
;	COMDAT __real@428c0000
CONST	SEGMENT
__real@428c0000 DD 0428c0000r			; 70
CONST	ENDS
;	COMDAT __real@3fd72aae297396d1
CONST	SEGMENT
__real@3fd72aae297396d1 DQ 03fd72aae297396d1r	; 0.36198
CONST	ENDS
;	COMDAT __real@392c987a
CONST	SEGMENT
__real@392c987a DD 0392c987ar			; 0.0001646
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
_DATA	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
_DATA	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IGDOPJFN@?$CFs?5?$CF1ld?5?$CF02ld?300?$AA@
CONST	SEGMENT
??_C@_0BB@IGDOPJFN@?$CFs?5?$CF1ld?5?$CF02ld?300?$AA@ DB '%s %1ld %02ld:00'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BJCEFPAP@Error?5Reading?5Force?5Level?6?$AA@
CONST	SEGMENT
??_C@_0BL@BJCEFPAP@Error?5Reading?5Force?5Level?6?$AA@ DB 'Error Reading '
	DB	'Force Level', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NJFDAMGG@frc?$AA@
CONST	SEGMENT
??_C@_03NJFDAMGG@frc?$AA@ DB 'frc', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFNGDGKN@tmp?$AA@
CONST	SEGMENT
??_C@_03FFNGDGKN@tmp?$AA@ DB 'tmp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GDDNCFJF@his?$AA@
CONST	SEGMENT
??_C@_03GDDNCFJF@his?$AA@ DB 'his', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DIDHKLLF@?$CF1ld?$AA@
CONST	SEGMENT
??_C@_04DIDHKLLF@?$CF1ld?$AA@ DB '%1ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07FECODFMA@?$CF5?41f?$CFs?$AA@
CONST	SEGMENT
??_C@_07FECODFMA@?$CF5?41f?$CFs?$AA@ DB '%5.1f%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPFGNMGI@?$CFs?$CF2ld?5?5?$CF02d?300?$AA@
CONST	SEGMENT
??_C@_0BA@BPFGNMGI@?$CFs?$CF2ld?5?5?$CF02d?300?$AA@ DB '%s%2ld  %02d:00', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@ DB '( is commiting'
	DB	' now )', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FCCFCKHM@cp_scf?4lst?$AA@
CONST	SEGMENT
??_C@_0L@FCCFCKHM@cp_scf?4lst?$AA@ DB 'cp_scf.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HODKOKLH@cp_snd?4lst?$AA@
CONST	SEGMENT
??_C@_0L@HODKOKLH@cp_snd?4lst?$AA@ DB 'cp_snd.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODAMCIMA@cp_art?4lst?$AA@
CONST	SEGMENT
??_C@_0L@ODAMCIMA@cp_art?4lst?$AA@ DB 'cp_art.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KOEEIMPA@cp_res?4lst?$AA@
CONST	SEGMENT
??_C@_0L@KOEEIMPA@cp_res?4lst?$AA@ DB 'cp_res.lst', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IKOBNNDE@save2?$AA@
CONST	SEGMENT
??_C@_05IKOBNNDE@save2?$AA@ DB 'save2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KBMMIOPH@save1?$AA@
CONST	SEGMENT
??_C@_05KBMMIOPH@save1?$AA@ DB 'save1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LINHLPLG@save0?$AA@
CONST	SEGMENT
??_C@_05LINHLPLG@save0?$AA@ DB 'save0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPEHIMMI@?$CFs?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_08EPEHIMMI@?$CFs?5?$CFs?5?$CFs?$AA@ DB '%s %s %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GOFFMNEM@?$CFs?9?$CFs?5?$CF1ld?5?$CF02d?5?$CF02d?5?$CF02d?$AA@
CONST	SEGMENT
??_C@_0BK@GOFFMNEM@?$CFs?9?$CFs?5?$CF1ld?5?$CF02d?5?$CF02d?5?$CF02d?$AA@ DB '%'
	DB	's-%s %1ld %02d %02d %02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@
CONST	SEGMENT
??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@ DB '%s\*.cam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOGOMMPD@cam?$AA@
CONST	SEGMENT
??_C@_03GOGOMMPD@cam?$AA@ DB 'cam', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09KALBFCKF@?$CFs?2?$CFs?4cam?$AA@
CONST	SEGMENT
??_C@_09KALBFCKF@?$CFs?2?$CFs?4cam?$AA@ DB '%s\%s.cam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CHHJGCHE@Debriefing?$AA@
CONST	SEGMENT
??_C@_0L@CHHJGCHE@Debriefing?$AA@ DB 'Debriefing', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HJFJOAMM@Briefing?$AA@
CONST	SEGMENT
??_C@_08HJFJOAMM@Briefing?$AA@ DB 'Briefing', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJFMANNM@?$CF02ld?3?$CF02ld?5?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@EJFMANNM@?$CF02ld?3?$CF02ld?5?5?$CFs?$AA@ DB '%02ld:%02ld  %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OMFOOALH@GPS?3?5OOB?5Allow?5time?5?$DN?5?$CF1ld?6?$AA@
CONST	SEGMENT
??_C@_0BM@OMFOOALH@GPS?3?5OOB?5Allow?5time?5?$DN?5?$CF1ld?6?$AA@ DB 'GPS:'
	DB	' OOB Allow time = %1ld', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z$0
__unwindtable$?LoadCampaignWindows@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCampaignWindows@@YAXXZ$0
__unwindtable$?SetupGPS@@YAXPAVC_TreeList@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupGPS@@YAXPAVC_TreeList@@@Z$0
__unwindtable$?SetupMapMgr@@YAX_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupMapMgr@@YAX_N@Z$0
__unwindtable$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z$0
__unwindtable$?AddToNewsWindow@@YAXJPADJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddToNewsWindow@@YAXJPADJ@Z$0
__unwindtable$?LoadForceLevelHistory@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadForceLevelHistory@@YAXXZ$0
__unwindtable$?LoadTroopMovementHistory@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadTroopMovementHistory@@YAXXZ$0
__unwindtable$?HookupCampaignControls@@YAXJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$2
__ehfuncinfo$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadCampaignWindows@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadCampaignWindows@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupGPS@@YAXPAVC_TreeList@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupGPS@@YAXPAVC_TreeList@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupMapMgr@@YAX_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupMapMgr@@YAX_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?AddToNewsWindow@@YAXJPADJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddToNewsWindow@@YAXJPADJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadForceLevelHistory@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadForceLevelHistory@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?LoadTroopMovementHistory@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadTroopMovementHistory@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?HookupCampaignControls@@YAXJ@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?HookupCampaignControls@@YAXJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ReconFlightID$initializer$ DD FLAT:??__EReconFlightID@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@D@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<char>::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$numpunct@_W@std@@2P6AXXZA DD FLAT:??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ; std::numpunct<wchar_t>::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx

; 621  : 		void destroy(_Uty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 622  : 		{	// destroy object at _Ptr
; 623  : 		_Ptr->~_Uty();
; 624  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_this$ = -24						; size = 4
tv73 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 617  : _VARIADIC_EXPAND_0X(_ALLOC_MEMBER_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __V0$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T3[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<wchar_t>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@_W@std@@2V0locale@2@A ; std::numpunct<wchar_t>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<wchar_t>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$yc	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT

; 155  : 		void _Getvals(wchar_t, const lconv *_Ptr, _Locinfo::_Cvtvec)

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 755  : 		static void destroy(_Alloc& _Al, _Uty *_Ptr)

	push	ebp
	mov	ebp, esp

; 756  : 		{	// destroy object at _Ptr
; 757  : 		_Al.destroy(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>

; 758  : 		}

	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__V0$ = 16						; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT

; 751  : _VARIADIC_EXPAND_0X(_ALLOC_TRAITS_SPECIAL_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT

; 1775 : 	{	// forward an lvalue

	push	ebp
	mov	ebp, esp

; 1776 : 	return (static_cast<_Ty&&>(_Arg));

	mov	eax, DWORD PTR __Arg$[ebp]

; 1777 : 	}

	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$yc	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yc	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 22   : 	{	// allocate storage for _Count elements of type _Ty

	push	ebp
	mov	ebp, esp
	push	ecx

; 23   : 	void *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 24   : 
; 25   : 	if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate

; 26   : 		;
; 27   : 	else if (((size_t)(-1) / sizeof (_Ty) < _Count)

	jmp	SHORT $LN3@Allocate
$LN4@Allocate:

; 28   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:

; 29   : 		_Xbad_alloc();	// report no memory

	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN3@Allocate:

; 30   : 
; 31   : 	return ((_Ty *)_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:

; 32   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT

; 85   : 	{	// return address of _Val

	push	ebp
	mov	ebp, esp

; 86   : 	return (reinterpret_cast<_Ty *>(
; 87   : 		(&const_cast<char&>(
; 88   : 		reinterpret_cast<const volatile char&>(_Val)))));

	mov	eax, DWORD PTR __Val$[ebp]

; 89   : 	}

	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx

; 907  : 		void destroy(_Ty *_Ptr)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 908  : 		{	// destroy object at _Ptr
; 909  : 		_Mytraits::destroy(*this, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8

; 910  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__V0$ = 12						; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx

; 903  : _VARIADIC_EXPAND_0X(_WRAP_ALLOC_CONSTRUCT, , , , )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __V0$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenNewsWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenNewsWindowCB

; 2983 : {

	push	ebp
	mov	ebp, esp

; 2984 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenNewsWi

; 2985 : 		return;

	jmp	SHORT $LN2@OpenNewsWi
$LN1@OpenNewsWi:

; 2986 : 
; 2987 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenNewsWi:

; 2988 : }

	pop	ebp
	ret	0
?OpenNewsWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenNewsWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?TimeCompressionCB@@YAXJFPAVC_Base@@@Z PROC		; TimeCompressionCB

; 2967 : {

	push	ebp
	mov	ebp, esp

; 2968 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN3@TimeCompre

; 2969 : 		return;

	jmp	SHORT $LN4@TimeCompre
$LN3@TimeCompre:

; 2970 : 
; 2971 : 	if (((C_ListBox *)control)->GetTextID() == ACCEL_0)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	cmp	eax, 45210				; 0000b09aH
	jne	SHORT $LN2@TimeCompre

; 2972 : 	{
; 2973 : 		SetTimeCompression (0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 2974 : 	}
; 2975 : 	else

	jmp	SHORT $LN1@TimeCompre
$LN2@TimeCompre:

; 2976 : 	{
; 2977 : 		SetTimeCompression (((C_ListBox *)control)->GetTextID());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	push	eax
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4
$LN1@TimeCompre:

; 2978 : 	}
; 2979 : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression
$LN4@TimeCompre:

; 2980 : }

	pop	ebp
	ret	0
?TimeCompressionCB@@YAXJFPAVC_Base@@@Z ENDP		; TimeCompressionCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_lvl$ = -12						; size = 4
_win$ = -8						; size = 4
_txt$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SelectForceCategoryCB@@YAXJFPAVC_Base@@@Z PROC		; SelectForceCategoryCB

; 2652 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2653 : 	C_Window *win;
; 2654 : 	C_Text *txt;
; 2655 : 	C_Level *lvl;
; 2656 : 	if(hittype != C_TYPE_SELECT)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN6@SelectForc

; 2657 : 		return;

	jmp	$LN7@SelectForc
$LN6@SelectForc:

; 2658 : 
; 2659 : 	win=gMainHandler->FindWindow(FORCE_WIN);

	push	6253					; 0000186dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2660 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN7@SelectForc

; 2661 : 	{
; 2662 : 		win->HideGroup(LastForceCatID);

	mov	ecx, DWORD PTR ?LastForceCatID@@3JA	; LastForceCatID
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideGroup@C_Window@@QAEXJ@Z		; C_Window::HideGroup

; 2663 : 		LastForceCatID=((C_ListBox *)control)->GetTextID();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?LastForceCatID@@3JA, eax	; LastForceCatID

; 2664 : 		lvl=(C_Level*)win->FindControl(4441313+FindStatIndex(LastForceCatID));

	mov	edx, DWORD PTR ?LastForceCatID@@3JA	; LastForceCatID
	push	edx
	call	?FindStatIndex@@YAJJ@Z			; FindStatIndex
	add	esp, 4
	add	eax, 4441313				; 0043c4e1H
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lvl$[ebp], eax

; 2665 : 		if(lvl)

	cmp	DWORD PTR _lvl$[ebp], 0
	je	$LN4@SelectForc

; 2666 : 		{
; 2667 : 			txt=(C_Text*)win->FindControl(HIGH_Y);

	push	6257					; 00001871H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2668 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@SelectForc

; 2669 : 			{
; 2670 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2671 : 				txt->SetText(lvl->GetYLabel(2));

	push	2
	mov	ecx, DWORD PTR _lvl$[ebp]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2672 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@SelectForc:

; 2673 : 			}
; 2674 : 			txt=(C_Text*)win->FindControl(HALF_Y);

	push	6256					; 00001870H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2675 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@SelectForc

; 2676 : 			{
; 2677 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2678 : 				txt->SetText(lvl->GetYLabel(1));

	push	1
	mov	ecx, DWORD PTR _lvl$[ebp]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2679 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@SelectForc:

; 2680 : 			}
; 2681 : 			txt=(C_Text*)win->FindControl(LOW_Y);

	push	6254					; 0000186eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2682 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@SelectForc

; 2683 : 			{
; 2684 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2685 : 				txt->SetText(lvl->GetYLabel(0));

	push	0
	mov	ecx, DWORD PTR _lvl$[ebp]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2686 : 				txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@SelectForc:

; 2687 : 			}
; 2688 : 		}
; 2689 : 		win->UnHideGroup(LastForceCatID);

	mov	ecx, DWORD PTR ?LastForceCatID@@3JA	; LastForceCatID
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideGroup@C_Window@@QAEXJ@Z		; C_Window::UnHideGroup

; 2690 : 		win->RefreshClient(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN7@SelectForc:

; 2691 : 	}
; 2692 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SelectForceCategoryCB@@YAXJFPAVC_Base@@@Z ENDP		; SelectForceCategoryCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 2
_ID$ = 8						; size = 4
?FindStatIndex@@YAJJ@Z PROC				; FindStatIndex

; 2642 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2643 : 	short i;
; 2644 : 
; 2645 : 	for(i=0;i<_MAX_CATEGORIES_;i++)

	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN4@FindStatIn
$LN3@FindStatIn:
	mov	cx, WORD PTR _i$[ebp]
	add	cx, 1
	mov	WORD PTR _i$[ebp], cx
$LN4@FindStatIn:
	movsx	edx, WORD PTR _i$[ebp]
	cmp	edx, 7
	jge	SHORT $LN2@FindStatIn

; 2646 : 		if(ID == FrcLvlCatID[i])

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	cmp	ecx, DWORD PTR ?FrcLvlCatID@@3PAJA[eax*4]
	jne	SHORT $LN1@FindStatIn

; 2647 : 			return(i);

	movsx	eax, WORD PTR _i$[ebp]
	jmp	SHORT $LN5@FindStatIn
$LN1@FindStatIn:

; 2648 : 	return(0);

	jmp	SHORT $LN3@FindStatIn
$LN2@FindStatIn:
	xor	eax, eax
$LN5@FindStatIn:

; 2649 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindStatIndex@@YAJJ@Z ENDP				; FindStatIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -52						; size = 4
_wpz$ = -48						; size = 4
_win$ = -44						; size = 4
_txt$ = -40						; size = 4
_buffer$ = -36						; size = 30
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z PROC		; OpenCrossSectionCB

; 2453 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2454 : 	C_Text *txt;
; 2455 : 	C_Window *win;
; 2456 : 	C_Waypoint *wpz;
; 2457 : 	_TCHAR buffer[30];
; 2458 : 	F4CSECTIONHANDLE *Leave;
; 2459 : 
; 2460 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN13@OpenCrossS

; 2461 : 		return;

	jmp	$LN14@OpenCrossS
$LN13@OpenCrossS:

; 2462 : 
; 2463 : 	win=gMapMgr->GetZWindow();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetZWindow@C_Map@@QAEPAVC_Window@@XZ	; C_Map::GetZWindow
	mov	DWORD PTR _win$[ebp], eax

; 2464 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN12@OpenCrossS

; 2465 : 	{
; 2466 : 		Leave=UI_Enter(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2467 : 		if(StupidHackToCloseCSECT != control->GetUserNumber(0))

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	DWORD PTR ?StupidHackToCloseCSECT@@3HA, eax ; StupidHackToCloseCSECT
	je	$LN11@OpenCrossS

; 2468 : 		{
; 2469 : 			StupidHackToCloseCSECT=control->GetUserNumber(0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR ?StupidHackToCloseCSECT@@3HA, eax ; StupidHackToCloseCSECT

; 2470 : 			gMapMgr->RecalcWaypointZs(StupidHackToCloseCSECT/100);

	mov	eax, DWORD PTR ?StupidHackToCloseCSECT@@3HA ; StupidHackToCloseCSECT
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RecalcWaypointZs@C_Map@@QAEXJ@Z	; C_Map::RecalcWaypointZs

; 2471 : 			wpz=gMapMgr->GetCurWPZ();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?GetCurWPZ@C_Map@@QAEPAVC_Waypoint@@XZ	; C_Map::GetCurWPZ
	mov	DWORD PTR _wpz$[ebp], eax

; 2472 : 			txt=(C_Text*)win->FindControl(DISTANCE_FIELD);

	push	13023					; 000032dfH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2473 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN10@OpenCrossS

; 2474 : 			{
; 2475 : 				if(wpz)

	cmp	DWORD PTR _wpz$[ebp], 0
	je	SHORT $LN9@OpenCrossS

; 2476 : 					_stprintf(buffer,"%5.1f%s",(float)(wpz->GetUserNumber(2))*FT_TO_NM,gStringMgr->GetString(TXT_NM));

	push	182					; 000000b6H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	2
	mov	ecx, DWORD PTR _wpz$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@392c987a
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_07FECODFMA@?$CF5?41f?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2477 : 				else

	jmp	SHORT $LN8@OpenCrossS
$LN9@OpenCrossS:

; 2478 : 					_tcscpy(buffer," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN8@OpenCrossS:

; 2479 : 				Uni_Float(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?Uni_Float@@YAXPAD@Z			; Uni_Float
	add	esp, 4

; 2480 : 				txt->SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN10@OpenCrossS:

; 2481 : 			}
; 2482 : 			txt=(C_Text*)win->FindControl(FUEL_FIELD);

	push	13024					; 000032e0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2483 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@OpenCrossS

; 2484 : 			{
; 2485 : 				if(wpz)

	cmp	DWORD PTR _wpz$[ebp], 0
	je	SHORT $LN6@OpenCrossS

; 2486 : 					_stprintf(buffer,"%1ld",wpz->GetUserNumber(3));

	push	3
	mov	ecx, DWORD PTR _wpz$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2487 : 				else

	jmp	SHORT $LN5@OpenCrossS
$LN6@OpenCrossS:

; 2488 : 					_tcscpy(buffer," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN5@OpenCrossS:

; 2489 : 				txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN7@OpenCrossS:

; 2490 : 			}
; 2491 : 			txt=(C_Text*)win->FindControl(DURATION_FIELD);

	push	13025					; 000032e1H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2492 : 			if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN4@OpenCrossS

; 2493 : 			{
; 2494 : 				if(wpz)

	cmp	DWORD PTR _wpz$[ebp], 0
	je	SHORT $LN3@OpenCrossS

; 2495 : 					GetTimeString(wpz->GetUserNumber(1),buffer);

	push	1
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _wpz$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	call	?GetTimeString@@YAPADKQADH@Z		; GetTimeString
	add	esp, 12					; 0000000cH

; 2496 : 				else

	jmp	SHORT $LN2@OpenCrossS
$LN3@OpenCrossS:

; 2497 : 					_tcscpy(buffer," ");

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN2@OpenCrossS:

; 2498 : 				txt->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax
$LN4@OpenCrossS:

; 2499 : 			}
; 2500 : 			win->HideCluster(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster

; 2501 : 			win->UnHideCluster(StupidHackToCloseCSECT);

	mov	ecx, DWORD PTR ?StupidHackToCloseCSECT@@3HA ; StupidHackToCloseCSECT
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster

; 2502 : 			win->RefreshWindow();

	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 2503 : 			gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 2504 : 		}
; 2505 : 		else

	jmp	SHORT $LN1@OpenCrossS
$LN11@OpenCrossS:

; 2506 : 		{
; 2507 : 			gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 2508 : 			StupidHackToCloseCSECT=0;

	mov	DWORD PTR ?StupidHackToCloseCSECT@@3HA, 0 ; StupidHackToCloseCSECT
$LN1@OpenCrossS:

; 2509 : 		}
; 2510 : 		UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN12@OpenCrossS:
$LN14@OpenCrossS:

; 2511 : 	}
; 2512 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenCrossSectionCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z PROC		; FitFlightPlanCB

; 2435 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2436 : 	F4CSECTIONHANDLE *Leave;
; 2437 : 
; 2438 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@FitFlightP

; 2439 : 		return;

	jmp	SHORT $LN3@FitFlightP
$LN2@FitFlightP:

; 2440 : 
; 2441 : 	if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN3@FitFlightP

; 2442 : 	{
; 2443 : 		Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2444 : 
; 2445 : 		gMapMgr->FitFlightPlan();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?FitFlightPlan@C_Map@@QAEXXZ		; C_Map::FitFlightPlan

; 2446 : 		gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 2447 : 
; 2448 : 		UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN3@FitFlightP:

; 2449 : 	}
; 2450 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z ENDP		; FitFlightPlanCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -40						; size = 4
_sldr$ = -36						; size = 4
_hist$ = -32						; size = 4
_TimeID$ = -28						; size = 4
_txt$ = -24						; size = 4
_buffer$ = -20						; size = 15
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryTimerCB@@YAXJFPAVC_Base@@@Z PROC		; HistoryTimerCB

; 2378 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 2379 : 	C_History *hist;
; 2380 : 	C_Text *txt;
; 2381 : 	C_Slider *sldr;
; 2382 : 	long TimeID;
; 2383 : 	_TCHAR buffer[15];
; 2384 : 	F4CSECTIONHANDLE *Leave;
; 2385 : 	if(JStarsCurrent != JStarsPrevious)

	mov	eax, DWORD PTR _JStarsCurrent
	cmp	eax, DWORD PTR _JStarsPrevious
	je	$LN8@HistoryTim

; 2386 : 	{
; 2387 : 		Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2388 : 		control->Parent_->HideGroup(JStarsPrevious);

	mov	eax, DWORD PTR _JStarsPrevious
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?HideGroup@C_Window@@QAEXJ@Z		; C_Window::HideGroup

; 2389 : 		JStarsPrevious=JStarsCurrent;

	mov	edx, DWORD PTR _JStarsCurrent
	mov	DWORD PTR _JStarsPrevious, edx

; 2390 : 		control->Parent_->UnHideGroup(JStarsPrevious);

	mov	eax, DWORD PTR _JStarsPrevious
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?UnHideGroup@C_Window@@QAEXJ@Z		; C_Window::UnHideGroup

; 2391 : 		control->Parent_->RefreshClient(control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	push	edx
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 2392 : 		txt=(C_Text*)control->Parent_->FindControl(COUNTER);

	push	200002					; 00030d42H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2393 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN7@HistoryTim

; 2394 : 		{
; 2395 : 			hist=(C_History*)control->Parent_->FindControl(JStarsCurrent);

	mov	edx, DWORD PTR _JStarsCurrent
	push	edx
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _hist$[ebp], eax

; 2396 : 			if(hist)

	cmp	DWORD PTR _hist$[ebp], 0
	je	$LN7@HistoryTim

; 2397 : 			{
; 2398 : 				TimeID=hist->GetUserNumber(0);

	push	0
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	mov	DWORD PTR _TimeID$[ebp], eax

; 2399 : 				_stprintf(buffer,"%s%2ld  %02d:00",gStringMgr->GetString(TXT_DAY),TimeID/1440l+1,(TimeID/60)%24);

	mov	eax, DWORD PTR _TimeID$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR _TimeID$[ebp]
	cdq
	mov	ecx, 1440				; 000005a0H
	idiv	ecx
	add	eax, 1
	push	eax
	push	127					; 0000007fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_0BA@BPFGNMGI@?$CFs?$CF2ld?5?5?$CF02d?300?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2400 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2401 : 				txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2402 : 				txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@HistoryTim:

; 2403 : 			}
; 2404 : 		}
; 2405 : 		sldr=(C_Slider*)control->Parent_->FindControl(PLAYBALL);

	push	6203					; 0000183bH
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 2406 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN5@HistoryTim

; 2407 : 			PositionSlider(sldr,JStarsCurrent,JStarsFirst,JStarsLast-2);

	mov	edx, DWORD PTR _JStarsLast
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _JStarsFirst
	push	eax
	mov	ecx, DWORD PTR _JStarsCurrent
	push	ecx
	mov	edx, DWORD PTR _sldr$[ebp]
	push	edx
	call	?PositionSlider@@YAXPAVC_Slider@@JJJ@Z	; PositionSlider
	add	esp, 16					; 00000010H
$LN5@HistoryTim:

; 2408 : 		UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN8@HistoryTim:

; 2409 : 	}
; 2410 : 
; 2411 : 	if(!JStarsDirection)

	cmp	DWORD PTR _JStarsDirection, 0
	jne	SHORT $LN4@HistoryTim

; 2412 : 		return;

	jmp	$LN9@HistoryTim
$LN4@HistoryTim:

; 2413 : 
; 2414 : 	if(control->GetUserNumber(_UI95_TIMER_COUNTER_) < 1)

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 1
	jge	$LN3@HistoryTim

; 2415 : 	{
; 2416 : 		JStarsCurrent+=JStarsDirection;

	mov	ecx, DWORD PTR _JStarsCurrent
	add	ecx, DWORD PTR _JStarsDirection
	mov	DWORD PTR _JStarsCurrent, ecx

; 2417 : 		if(JStarsCurrent >= JStarsLast)

	mov	edx, DWORD PTR _JStarsCurrent
	cmp	edx, DWORD PTR _JStarsLast
	jl	SHORT $LN2@HistoryTim

; 2418 : 		{
; 2419 : 			JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2420 : 			JStarsCurrent=JStarsLast-1;

	mov	eax, DWORD PTR _JStarsLast
	sub	eax, 1
	mov	DWORD PTR _JStarsCurrent, eax

; 2421 : 			control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState
$LN2@HistoryTim:

; 2422 : 		}
; 2423 : 		if(JStarsCurrent < JStarsFirst)

	mov	edx, DWORD PTR _JStarsCurrent
	cmp	edx, DWORD PTR _JStarsFirst
	jge	SHORT $LN1@HistoryTim

; 2424 : 		{
; 2425 : 			JStarsCurrent=JStarsFirst;

	mov	eax, DWORD PTR _JStarsFirst
	mov	DWORD PTR _JStarsCurrent, eax

; 2426 : 			JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2427 : 			control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState
$LN1@HistoryTim:

; 2428 : 		}
; 2429 : 		control->SetUserNumber(_UI95_TIMER_COUNTER_,JStarsDelay);

	mov	edx, DWORD PTR _JStarsDelay
	push	edx
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN3@HistoryTim:

; 2430 : 	}
; 2431 : 	control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_COUNTER_)-1);

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	eax, 1
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN9@HistoryTim:

; 2432 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?HistoryTimerCB@@YAXJFPAVC_Base@@@Z ENDP		; HistoryTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Offset$ = -16						; size = 4
_Range$ = -12						; size = 4
_sldr$ = -8						; size = 4
_step$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryDragBallCB@@YAXJFPAVC_Base@@@Z PROC		; HistoryDragBallCB

; 2355 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi

; 2356 : 	C_Slider *sldr;
; 2357 : 	long Offset,step,Range;
; 2358 : 	if(hittype != C_TYPE_MOUSEMOVE)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 61					; 0000003dH
	je	SHORT $LN4@HistoryDra

; 2359 : 		return;

	jmp	$LN5@HistoryDra
$LN4@HistoryDra:

; 2360 : 
; 2361 : 	JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2362 : 
; 2363 : 	sldr=(C_Slider*)control;

	mov	ecx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _sldr$[ebp], ecx

; 2364 : 	Offset=sldr->GetSliderPos()-sldr->GetSliderMin();

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderPos@C_Slider@@QAEJXZ		; C_Slider::GetSliderPos
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	DWORD PTR _Offset$[ebp], esi

; 2365 : 	Range=sldr->GetSliderMax()-sldr->GetSliderMin();

	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMax@C_Slider@@QAEJXZ		; C_Slider::GetSliderMax
	mov	esi, eax
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?GetSliderMin@C_Slider@@QAEJXZ		; C_Slider::GetSliderMin
	sub	esi, eax
	mov	DWORD PTR _Range$[ebp], esi

; 2366 : 	if(Range >= 1)

	cmp	DWORD PTR _Range$[ebp], 1
	jl	SHORT $LN5@HistoryDra

; 2367 : 	{
; 2368 : 		step=(Offset * (JStarsLast-2)) / Range + JStarsFirst;

	mov	edx, DWORD PTR _JStarsLast
	sub	edx, 2
	mov	eax, edx
	imul	eax, DWORD PTR _Offset$[ebp]
	cdq
	idiv	DWORD PTR _Range$[ebp]
	add	eax, DWORD PTR _JStarsFirst
	mov	DWORD PTR _step$[ebp], eax

; 2369 : 		if(step < JStarsFirst)

	mov	eax, DWORD PTR _step$[ebp]
	cmp	eax, DWORD PTR _JStarsFirst
	jge	SHORT $LN2@HistoryDra

; 2370 : 			step=JStarsFirst;

	mov	ecx, DWORD PTR _JStarsFirst
	mov	DWORD PTR _step$[ebp], ecx
$LN2@HistoryDra:

; 2371 : 		if(step >= (JStarsLast-1))

	mov	edx, DWORD PTR _JStarsLast
	sub	edx, 1
	cmp	DWORD PTR _step$[ebp], edx
	jl	SHORT $LN1@HistoryDra

; 2372 : 			step=JStarsLast-1;

	mov	eax, DWORD PTR _JStarsLast
	sub	eax, 1
	mov	DWORD PTR _step$[ebp], eax
$LN1@HistoryDra:

; 2373 : 		JStarsCurrent=step;

	mov	ecx, DWORD PTR _step$[ebp]
	mov	DWORD PTR _JStarsCurrent, ecx
$LN5@HistoryDra:

; 2374 : 	}
; 2375 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?HistoryDragBallCB@@YAXJFPAVC_Base@@@Z ENDP		; HistoryDragBallCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryStop@@YAXJFPAVC_Base@@@Z PROC			; HistoryStop

; 2346 : {

	push	ebp
	mov	ebp, esp

; 2347 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@HistorySto

; 2348 : 		return;

	jmp	SHORT $LN2@HistorySto
$LN1@HistorySto:

; 2349 : 
; 2350 : 	JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2351 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState
$LN2@HistorySto:

; 2352 : }

	pop	ebp
	ret	0
?HistoryStop@@YAXJFPAVC_Base@@@Z ENDP			; HistoryStop
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryFastReverse@@YAXJFPAVC_Base@@@Z PROC		; HistoryFastReverse

; 2335 : {

	push	ebp
	mov	ebp, esp

; 2336 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@HistoryFas

; 2337 : 		return;

	jmp	SHORT $LN2@HistoryFas
$LN1@HistoryFas:

; 2338 : 
; 2339 : 	JStarsDirection=-1;

	mov	DWORD PTR _JStarsDirection, -1

; 2340 : 	JStarsDelay=static_cast<long>(0.25*_UI95_TICKS_PER_SECOND_); // Second

	mov	DWORD PTR _JStarsDelay, 2

; 2341 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState

; 2342 : 	control->SetState(1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN2@HistoryFas:

; 2343 : }

	pop	ebp
	ret	0
?HistoryFastReverse@@YAXJFPAVC_Base@@@Z ENDP		; HistoryFastReverse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryFastForward@@YAXJFPAVC_Base@@@Z PROC		; HistoryFastForward

; 2324 : {

	push	ebp
	mov	ebp, esp

; 2325 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@HistoryFas

; 2326 : 		return;

	jmp	SHORT $LN2@HistoryFas
$LN1@HistoryFas:

; 2327 : 
; 2328 : 	JStarsDirection=1;

	mov	DWORD PTR _JStarsDirection, 1

; 2329 : 	JStarsDelay=static_cast<long>(0.25*_UI95_TICKS_PER_SECOND_); // Second

	mov	DWORD PTR _JStarsDelay, 2

; 2330 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState

; 2331 : 	control->SetState(1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN2@HistoryFas:

; 2332 : }

	pop	ebp
	ret	0
?HistoryFastForward@@YAXJFPAVC_Base@@@Z ENDP		; HistoryFastForward
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryStepReverse@@YAXJFPAVC_Base@@@Z PROC		; HistoryStepReverse

; 2313 : {

	push	ebp
	mov	ebp, esp

; 2314 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@HistorySte

; 2315 : 		return;

	jmp	SHORT $LN3@HistorySte
$LN2@HistorySte:

; 2316 : 
; 2317 : 	JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2318 : 	if(JStarsCurrent > JStarsFirst)

	mov	ecx, DWORD PTR _JStarsCurrent
	cmp	ecx, DWORD PTR _JStarsFirst
	jle	SHORT $LN1@HistorySte

; 2319 : 		JStarsCurrent--;

	mov	edx, DWORD PTR _JStarsCurrent
	sub	edx, 1
	mov	DWORD PTR _JStarsCurrent, edx
$LN1@HistorySte:

; 2320 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState
$LN3@HistorySte:

; 2321 : }

	pop	ebp
	ret	0
?HistoryStepReverse@@YAXJFPAVC_Base@@@Z ENDP		; HistoryStepReverse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryStepForward@@YAXJFPAVC_Base@@@Z PROC		; HistoryStepForward

; 2302 : {

	push	ebp
	mov	ebp, esp

; 2303 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@HistorySte

; 2304 : 		return;

	jmp	SHORT $LN3@HistorySte
$LN2@HistorySte:

; 2305 : 
; 2306 : 	JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2307 : 	if(JStarsCurrent < (JStarsLast-1))

	mov	ecx, DWORD PTR _JStarsLast
	sub	ecx, 1
	cmp	DWORD PTR _JStarsCurrent, ecx
	jge	SHORT $LN1@HistorySte

; 2308 : 		JStarsCurrent++;

	mov	edx, DWORD PTR _JStarsCurrent
	add	edx, 1
	mov	DWORD PTR _JStarsCurrent, edx
$LN1@HistorySte:

; 2309 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState
$LN3@HistorySte:

; 2310 : }

	pop	ebp
	ret	0
?HistoryStepForward@@YAXJFPAVC_Base@@@Z ENDP		; HistoryStepForward
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryPlayReverse@@YAXJFPAVC_Base@@@Z PROC		; HistoryPlayReverse

; 2291 : {

	push	ebp
	mov	ebp, esp

; 2292 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@HistoryPla

; 2293 : 		return;

	jmp	SHORT $LN2@HistoryPla
$LN1@HistoryPla:

; 2294 : 
; 2295 : 	JStarsDirection=-1;

	mov	DWORD PTR _JStarsDirection, -1

; 2296 : 	JStarsDelay=1*_UI95_TICKS_PER_SECOND_; // Seconds

	mov	DWORD PTR _JStarsDelay, 10		; 0000000aH

; 2297 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState

; 2298 : 	control->SetState(1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN2@HistoryPla:

; 2299 : }

	pop	ebp
	ret	0
?HistoryPlayReverse@@YAXJFPAVC_Base@@@Z ENDP		; HistoryPlayReverse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?HistoryPlayForward@@YAXJFPAVC_Base@@@Z PROC		; HistoryPlayForward

; 2280 : {

	push	ebp
	mov	ebp, esp

; 2281 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@HistoryPla

; 2282 : 		return;

	jmp	SHORT $LN2@HistoryPla
$LN1@HistoryPla:

; 2283 : 
; 2284 : 	JStarsDirection=1;

	mov	DWORD PTR _JStarsDirection, 1

; 2285 : 	JStarsDelay=1 * _UI95_TICKS_PER_SECOND_; // Seconds

	mov	DWORD PTR _JStarsDelay, 10		; 0000000aH

; 2286 : 	control->Parent_->SetGroupState(-200,0);

	push	0
	push	-200					; ffffff38H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?SetGroupState@C_Window@@QAEXJF@Z	; C_Window::SetGroupState

; 2287 : 	control->SetState(1);

	push	1
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
$LN2@HistoryPla:

; 2288 : }

	pop	ebp
	ret	0
?HistoryPlayForward@@YAXJFPAVC_Base@@@Z ENDP		; HistoryPlayForward
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenCampaignCommsCB@@YAXJFPAVC_Base@@@Z PROC		; OpenCampaignCommsCB

; 2266 : {

	push	ebp
	mov	ebp, esp

; 2267 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@OpenCampai

; 2268 : 		return;

	jmp	SHORT $LN4@OpenCampai
$LN3@OpenCampai:

; 2269 : 
; 2270 : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN2@OpenCampai

; 2271 : 		gMainHandler->EnableWindowGroup(control->GetUserNumber(1));

	push	1
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 2272 : 	else

	jmp	SHORT $LN4@OpenCampai
$LN2@OpenCampai:

; 2273 : 	{
; 2274 : 		gNewMessage=NULL;

	mov	DWORD PTR ?gNewMessage@@3HA, 0		; gNewMessage

; 2275 : 		gMainHandler->EnableWindowGroup(control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN4@OpenCampai:

; 2276 : 	}
; 2277 : }

	pop	ebp
	ret	0
?OpenCampaignCommsCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenCampaignCommsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -12						; size = 4
_Blip$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?UpdateEventBlipsCB@@YAXJFPAVC_Base@@@Z PROC		; UpdateEventBlipsCB

; 2239 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2240 : 	C_Window *win;
; 2241 : 	C_Blip *Blip;
; 2242 : 	F4CSECTIONHANDLE *Leave;
; 2243 : 
; 2244 : 	win=control->Parent_;

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _win$[ebp], ecx

; 2245 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN4@UpdateEven

; 2246 : 	{
; 2247 : 
; 2248 : 		Blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _Blip$[ebp], eax

; 2249 : 		if(Blip)

	cmp	DWORD PTR _Blip$[ebp], 0
	je	SHORT $LN4@UpdateEven

; 2250 : 		{
; 2251 : 			Leave=UI_Enter(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2252 : 			if(control->GetUserNumber(_UI95_TIMER_COUNTER_) & 1)

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	and	eax, 1
	je	SHORT $LN2@UpdateEven

; 2253 : 				Blip->BlinkLast();

	mov	ecx, DWORD PTR _Blip$[ebp]
	call	?BlinkLast@C_Blip@@QAEXXZ		; C_Blip::BlinkLast
$LN2@UpdateEven:

; 2254 : 			if(control->GetUserNumber(_UI95_TIMER_COUNTER_) < 1)

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 1
	jge	SHORT $LN1@UpdateEven

; 2255 : 			{
; 2256 : 				Blip->Update(vuxGameTime / (VU_TICS_PER_SECOND*60));

	mov	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _Blip$[ebp]
	call	?Update@C_Blip@@QAEXJ@Z			; C_Blip::Update

; 2257 : 				control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_DELAY_));

	push	4
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN1@UpdateEven:

; 2258 : 			}
; 2259 : 			UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN4@UpdateEven:

; 2260 : 		}
; 2261 : 	}
; 2262 : 	control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_COUNTER_)-1);

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	eax, 1
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2263 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateEventBlipsCB@@YAXJFPAVC_Base@@@Z ENDP		; UpdateEventBlipsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_session$ = 8						; size = 4
?CheckPlayersFlight@@YAXPAVFalconSessionEntity@@@Z PROC	; CheckPlayersFlight

; 2179 : {

	push	ebp
	mov	ebp, esp

; 2180 : 	if(!session)

	cmp	DWORD PTR _session$[ebp], 0
	jne	SHORT $LN1@CheckPlaye

; 2181 : 		return;

	jmp	SHORT $LN2@CheckPlaye
$LN1@CheckPlaye:

; 2182 : 
; 2183 : 	UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 2184 : 	UpdateMissionWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4
$LN2@CheckPlaye:

; 2185 : }

	pop	ebp
	ret	0
?CheckPlayersFlight@@YAXPAVFalconSessionEntity@@@Z ENDP	; CheckPlayersFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_ctrl$1 = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenBriefingWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenBriefingWindowCB

; 2157 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2158 : 	C_Window *win;
; 2159 : 
; 2160 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN4@OpenBriefi

; 2161 : 		return;

	jmp	SHORT $LN5@OpenBriefi
$LN4@OpenBriefi:

; 2162 : 
; 2163 : 	if(gSelectedFlightID == FalconNullId)

	push	OFFSET ?FalconNullId@@3VVU_ID@@A	; FalconNullId
	mov	ecx, OFFSET ?gSelectedFlightID@@3VVU_ID@@A ; gSelectedFlightID
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@OpenBriefi

; 2164 : 		return;

	jmp	SHORT $LN5@OpenBriefi
$LN3@OpenBriefi:

; 2165 : 	win=gMainHandler->FindWindow(BRIEF_WIN);

	push	15000					; 00003a98H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2166 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@OpenBriefi

; 2167 : 	{
; 2168 : 	    BuildCampBrief(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?BuildCampBrief@@YAXPAVC_Window@@@Z	; BuildCampBrief
	add	esp, 4

; 2169 : 	    // JPO - attempt to add handlers for these
; 2170 : 	    C_Button *ctrl=(C_Button*)win->FindControl(BRIEF_PRINT);

	push	15003					; 00003a9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$1[ebp], eax

; 2171 : 	    if (ctrl) 

	cmp	DWORD PTR _ctrl$1[ebp], 0
	je	SHORT $LN2@OpenBriefi

; 2172 : 		ctrl->SetCallback(CampBriefPrintCB);

	push	OFFSET ?CampBriefPrintCB@@YAXJFPAVC_Base@@@Z ; CampBriefPrintCB
	mov	eax, DWORD PTR _ctrl$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$1[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@OpenBriefi:

; 2173 : 
; 2174 : 	}
; 2175 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN5@OpenBriefi:

; 2176 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenBriefingWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenBriefingWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenATOWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenATOWindowCB

; 2146 : {

	push	ebp
	mov	ebp, esp

; 2147 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenATOWin

; 2148 : 		return;

	jmp	SHORT $LN2@OpenATOWin
$LN1@OpenATOWin:

; 2149 : 
; 2150 : 	gGps->SetAllowed(gGps->GetAllowed() | UR_ATO | UR_SQUADRON);

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetAllowed@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetAllowed
	or	eax, 4
	or	eax, 8
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetAllowed

; 2151 : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 2152 : 
; 2153 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenATOWin:

; 2154 : }

	pop	ebp
	ret	0
?OpenATOWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenATOWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenPlannerWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenPlannerWindowCB

; 2138 : {

	push	ebp
	mov	ebp, esp

; 2139 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenPlanne

; 2140 : 		return;

	jmp	SHORT $LN2@OpenPlanne
$LN1@OpenPlanne:

; 2141 : 
; 2142 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenPlanne:

; 2143 : }

	pop	ebp
	ret	0
?OpenPlannerWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenPlannerWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SmallMapZoomOutCB@@YAXJFPAVC_Base@@@Z PROC		; SmallMapZoomOutCB

; 2125 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2126 : 	F4CSECTIONHANDLE *Leave;
; 2127 : 
; 2128 : 	if ((hittype != C_TYPE_LMOUSEUP) && (hittype != C_TYPE_REPEAT))

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SmallMapZo
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN1@SmallMapZo

; 2129 : 		return;

	jmp	SHORT $LN2@SmallMapZo
$LN1@SmallMapZo:

; 2130 : 
; 2131 : 	Leave=UI_Enter(control->Parent_);

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2132 : 	gMapMgr->ZoomOut();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomOut@C_Map@@QAEXXZ			; C_Map::ZoomOut

; 2133 : 	gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 2134 : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@SmallMapZo:

; 2135 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SmallMapZoomOutCB@@YAXJFPAVC_Base@@@Z ENDP		; SmallMapZoomOutCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?SmallMapZoomInCB@@YAXJFPAVC_Base@@@Z PROC		; SmallMapZoomInCB

; 2112 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2113 : 	F4CSECTIONHANDLE *Leave;
; 2114 : 
; 2115 : 	if ((hittype != C_TYPE_LMOUSEUP) && (hittype != C_TYPE_REPEAT))

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@SmallMapZo
	movsx	ecx, WORD PTR _hittype$[ebp]
	cmp	ecx, 70					; 00000046H
	je	SHORT $LN1@SmallMapZo

; 2116 : 		return;

	jmp	SHORT $LN2@SmallMapZo
$LN1@SmallMapZo:

; 2117 : 
; 2118 : 	Leave=UI_Enter(control->Parent_);

	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 2119 : 	gMapMgr->ZoomIn();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomIn@C_Map@@QAEXXZ			; C_Map::ZoomIn

; 2120 : 	gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 2121 : 	UI_Leave(Leave);

	mov	ecx, DWORD PTR _Leave$[ebp]
	push	ecx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN2@SmallMapZo:

; 2122 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SmallMapZoomInCB@@YAXJFPAVC_Base@@@Z ENDP		; SmallMapZoomInCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
tv78 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?EndCommitCB@@YAXJFPAVC_Base@@@Z PROC			; EndCommitCB

; 2072 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2073 : 	C_Window *win;
; 2074 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@EndCommitC

; 2075 : 		return;

	jmp	$LN4@EndCommitC
$LN3@EndCommitC:

; 2076 : 
; 2077 : 	CampaignAutoSave(FalconLocalGame->GetGameType());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@EndCommitC
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN7@EndCommitC
$LN6@EndCommitC:
	mov	DWORD PTR tv78[ebp], 0
$LN7@EndCommitC:
	mov	ecx, DWORD PTR tv78[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	push	eax
	call	?CampaignAutoSave@@YAXW4FalconGameType@@@Z ; CampaignAutoSave
	add	esp, 4

; 2078 : 
; 2079 : 	gMusic->ClearQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ClearQ@C_Music@@QAEXXZ			; C_Music::ClearQ

; 2080 : 	gMusic->FadeOut_Stop();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?FadeOut_Stop@C_Music@@QAEXXZ		; C_Music::FadeOut_Stop

; 2081 : 	gMusic->ToggleStream();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ToggleStream@C_Music@@QAEXXZ		; C_Music::ToggleStream

; 2082 : 	PlayUIMusic();

	call	?PlayUIMusic@@YAXXZ			; PlayUIMusic

; 2083 : 
; 2084 : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 2085 : 	if(CampaignLastGroup)

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
	je	SHORT $LN2@EndCommitC

; 2086 : 	{
; 2087 : 		gMainHandler->DisableWindowGroup(CampaignLastGroup);

	mov	edx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 2088 : 		win=gMainHandler->FindWindow(CP_TOOLBAR);

	push	6013					; 0000177dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2089 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@EndCommitC

; 2090 : 			win->HideCluster(CampaignLastGroup);

	mov	eax, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN1@EndCommitC:

; 2091 : 		CampaignLastGroup=0;

	mov	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
$LN2@EndCommitC:

; 2092 : 	}
; 2093 : 	gMainHandler->DisableWindowGroup(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 2094 : 
; 2095 : 	gMainHandler->DisableSection(200);

	push	200					; 000000c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableSection@C_Handler@@QAEXJ@Z	; C_Handler::DisableSection

; 2096 : 
; 2097 : 	gMainHandler->SetSection(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?SetSection@C_Handler@@QAEXJ@Z		; C_Handler::SetSection

; 2098 : 	gMainHandler->EnableWindowGroup(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 2099 : 	gMainHandler->EnableWindowGroup(MainLastGroup);

	mov	ecx, DWORD PTR ?MainLastGroup@@3HA	; MainLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 2100 : 
; 2101 : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical

; 2102 : 	FalconLocalSession->SetPlayerSquadron(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerSquadron@FalconSessionEntity@@QAEXPAVSquadronClass@@@Z ; FalconSessionEntity::SetPlayerSquadron

; 2103 : 	FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 2104 : 
; 2105 : 	CleanupCampaignUI();

	call	?CleanupCampaignUI@@YAXXZ		; CleanupCampaignUI

; 2106 : 	ShutdownCampaign();

	call	?ShutdownCampaign@@YAXXZ		; ShutdownCampaign

; 2107 : 	SelectScenarioCB(CS_LOAD_SCENARIO1,C_TYPE_LMOUSEUP,NULL);

	push	0
	push	52					; 00000034H
	push	40900					; 00009fc4H
	call	?SelectScenarioCB@@YAXJFPAVC_Base@@@Z	; SelectScenarioCB
	add	esp, 12					; 0000000cH

; 2108 : 	gCommsMgr->SetCampaignFlag(game_PlayerPool);

	push	0
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SetCampaignFlag@UIComms@@QAEXD@Z	; UIComms::SetCampaignFlag
$LN4@EndCommitC:

; 2109 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndCommitCB@@YAXJFPAVC_Base@@@Z ENDP			; EndCommitCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
tv168 = -72						; size = 4
$T1 = -68						; size = 4
$T2 = -64						; size = 4
tv152 = -60						; size = 4
$T3 = -56						; size = 4
tv83 = -52						; size = 4
$T4 = -48						; size = 4
tv76 = -44						; size = 4
$T5 = -40						; size = 4
_blip$ = -36						; size = 4
$T6 = -32						; size = 4
$T7 = -28						; size = 4
_mgr$8 = -24						; size = 4
_bmp$ = -20						; size = 4
$T9 = -16						; size = 4
$T10 = -12						; size = 4
_win$ = -8						; size = 4
_i$ = -4						; size = 4
?CleanupCampaignUI@@YAXXZ PROC				; CleanupCampaignUI

; 1893 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 1894 : 	C_Window *win;
; 1895 : 	C_Blip *blip;
; 1896 : 	C_Bitmap *bmp;
; 1897 : 	int i;
; 1898 : 
; 1899 : 	InCleanup=1;

	mov	eax, 1
	mov	WORD PTR ?InCleanup@@3FA, ax		; InCleanup

; 1900 : 
; 1901 : 	ReadyToPlayMovie=FALSE;

	mov	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie

; 1902 : 	gCurrentFlightID=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, edx

; 1903 : 
; 1904 : 	if (gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	$LN17@CleanupCam

; 1905 : 	{
; 1906 : 		gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 1907 : 		gMainHandler->RemoveUserCallback(CampaignListCB);

	push	OFFSET ?CampaignListCB@@YAXXZ		; CampaignListCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback

; 1908 : 		gMainHandler->RemoveUserCallback(CampaignSoundEventCB);

	push	OFFSET ?CampaignSoundEventCB@@YAXXZ	; CampaignSoundEventCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback

; 1909 : 
; 1910 : 		if(gGps)

	cmp	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
	je	SHORT $LN15@CleanupCam

; 1911 : 		{
; 1912 : 			gGps->Cleanup();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Cleanup@GlobalPositioningSystem@@QAEXXZ ; GlobalPositioningSystem::Cleanup

; 1913 : 			delete gGps;

	mov	eax, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR $T10[ebp], ecx
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN19@CleanupCam
	push	1
	mov	ecx, DWORD PTR $T10[ebp]
	call	??_GGlobalPositioningSystem@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN20@CleanupCam
$LN19@CleanupCam:
	mov	DWORD PTR tv76[ebp], 0
$LN20@CleanupCam:

; 1914 : 			gGps=NULL;

	mov	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
$LN15@CleanupCam:

; 1915 : 		}
; 1916 : 		if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN14@CleanupCam

; 1917 : 		{
; 1918 : 			gMapMgr->Cleanup();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?Cleanup@C_Map@@QAEXXZ			; C_Map::Cleanup

; 1919 : 			delete gMapMgr;

	mov	edx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	mov	DWORD PTR $T4[ebp], edx
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR $T9[ebp], eax
	cmp	DWORD PTR $T9[ebp], 0
	je	SHORT $LN21@CleanupCam
	push	1
	mov	ecx, DWORD PTR $T9[ebp]
	call	??_GC_Map@@QAEPAXI@Z
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN22@CleanupCam
$LN21@CleanupCam:
	mov	DWORD PTR tv83[ebp], 0
$LN22@CleanupCam:

; 1920 : 			gMapMgr=NULL;

	mov	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
$LN14@CleanupCam:

; 1921 : 		}
; 1922 : 		if(gATOPackage)

	cmp	DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A, 0 ; gATOPackage
	je	SHORT $LN13@CleanupCam

; 1923 : 		{
; 1924 : 			gATOPackage->DeleteBranch(gATOPackage->GetRoot());

	mov	ecx, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN13@CleanupCam:

; 1925 : 		}
; 1926 : 		if(gATOAll)

	cmp	DWORD PTR ?gATOAll@@3PAVC_TreeList@@A, 0 ; gATOAll
	je	SHORT $LN12@CleanupCam

; 1927 : 		{
; 1928 : 			gATOAll->DeleteBranch(gATOAll->GetRoot());

	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN12@CleanupCam:

; 1929 : 		}
; 1930 : 		if(gOOBTree)

	cmp	DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A, 0 ; gOOBTree
	je	SHORT $LN11@CleanupCam

; 1931 : 		{
; 1932 : 			gOOBTree->DeleteBranch(gOOBTree->GetRoot());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN11@CleanupCam:

; 1933 : 		}
; 1934 : /*		if(gTaskList)
; 1935 : 		{
; 1936 : 			while(gTaskList)
; 1937 : 			{
; 1938 : 				last=gTaskList;
; 1939 : 				gTaskList=gTaskList->Next;
; 1940 : 				if(last->Label_)
; 1941 : 				{
; 1942 : 					last->Label_->Cleanup();
; 1943 : 					delete last->Label_;
; 1944 : 				}
; 1945 : 				delete last;
; 1946 : 			}
; 1947 : 			gTaskList=NULL;
; 1948 : 		}
; 1949 : */
; 1950 : 		win=gMainHandler->FindWindow(STRAT_WIN);

	push	6321					; 000018b1H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1951 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN10@CleanupCam

; 1952 : 		{
; 1953 : 			bmp=(C_Bitmap*)win->FindControl(PAK_REGION);

	push	6352					; 000018d0H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1954 : 			if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN10@CleanupCam

; 1955 : 				bmp->SetImage((long)NULL);

	push	0
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXJ@Z		; C_Bitmap::SetImage
$LN10@CleanupCam:

; 1956 : 		}
; 1957 : 		if(PAKMap)

	cmp	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
	je	SHORT $LN8@CleanupCam

; 1958 : 		{
; 1959 : 			C_Resmgr *mgr;
; 1960 : 			mgr=PAKMap->Owner;

	mov	ecx, DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A ; PAKMap
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _mgr$8[ebp], edx

; 1961 : 			mgr->Cleanup();

	mov	ecx, DWORD PTR _mgr$8[ebp]
	call	?Cleanup@C_Resmgr@@QAEXXZ		; C_Resmgr::Cleanup

; 1962 : 			delete mgr;

	mov	eax, DWORD PTR _mgr$8[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T7[ebp], ecx
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN23@CleanupCam
	push	1
	mov	ecx, DWORD PTR $T7[ebp]
	call	??_GC_Resmgr@@QAEPAXI@Z
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN24@CleanupCam
$LN23@CleanupCam:
	mov	DWORD PTR tv152[ebp], 0
$LN24@CleanupCam:

; 1963 : 			PAKMap=NULL;

	mov	DWORD PTR ?PAKMap@@3PAVIMAGE_RSC@@A, 0	; PAKMap
$LN8@CleanupCam:

; 1964 : 		}
; 1965 : 		for(i=0;i<5;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@CleanupCam
$LN6@CleanupCam:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@CleanupCam:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN5@CleanupCam

; 1966 : 		{
; 1967 : 			if (ObjStr[i])

	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?ObjStr@@3PAPADA[eax*4], 0
	je	SHORT $LN4@CleanupCam

; 1968 : 			{
; 1969 : 				delete ObjStr[i];

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?ObjStr@@3PAPADA[ecx*4]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@CleanupCam:

; 1970 : 			}
; 1971 : 			ObjStr[i]=NULL;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?ObjStr@@3PAPADA[ecx*4], 0

; 1972 : 		}

	jmp	SHORT $LN6@CleanupCam
$LN5@CleanupCam:

; 1973 : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN3@CleanupCam

; 1974 : 		{
; 1975 : 			delete gUIViewer;

	mov	edx, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T6[ebp], eax
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN25@CleanupCam
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN26@CleanupCam
$LN25@CleanupCam:
	mov	DWORD PTR tv168[ebp], 0
$LN26@CleanupCam:

; 1976 : 			gUIViewer = NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN3@CleanupCam:

; 1977 : 		}
; 1978 : 		win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1979 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CleanupCam

; 1980 : 		{
; 1981 : 			DeleteGroupList(CP_SUA);

	push	6012					; 0000177cH
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 1982 : 			blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _blip$[ebp], eax

; 1983 : 			if(blip)

	cmp	DWORD PTR _blip$[ebp], 0
	je	SHORT $LN2@CleanupCam

; 1984 : 				blip->RemoveAll();

	mov	ecx, DWORD PTR _blip$[ebp]
	call	?RemoveAll@C_Blip@@QAEXXZ		; C_Blip::RemoveAll
$LN2@CleanupCam:

; 1985 : 		}
; 1986 : 		gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN17@CleanupCam:

; 1987 : 	}
; 1988 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupCampaignUI@@YAXXZ ENDP				; CleanupCampaignUI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_curtime$ = -4						; size = 4
_me$ = 8						; size = 4
?CampaignClockCB@@YAHPAVC_Base@@@Z PROC			; CampaignClockCB

; 1874 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1875 : 	long curtime;
; 1876 : 
; 1877 : 	if(me == NULL) return(FALSE);

	cmp	DWORD PTR _me$[ebp], 0
	jne	SHORT $LN2@CampaignCl
	xor	eax, eax
	jmp	SHORT $LN3@CampaignCl
$LN2@CampaignCl:

; 1878 : 
; 1879 : //	curtime=TheCampaign.CurrentTime/VU_TICS_PER_SECOND;
; 1880 : 	curtime=vuxGameTime/VU_TICS_PER_SECOND;

	mov	eax, DWORD PTR ?vuxGameTime@@3KA	; vuxGameTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	DWORD PTR _curtime$[ebp], eax

; 1881 : 
; 1882 : 	if(((C_Clock*)me)->GetTime() != curtime)

	mov	ecx, DWORD PTR _me$[ebp]
	call	?GetTime@C_Clock@@QAEJXZ		; C_Clock::GetTime
	cmp	eax, DWORD PTR _curtime$[ebp]
	je	SHORT $LN1@CampaignCl

; 1883 : 	{
; 1884 : 		((C_Clock*)me)->SetTime(curtime);

	mov	edx, DWORD PTR _curtime$[ebp]
	push	edx
	mov	ecx, DWORD PTR _me$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1885 : 		me->Refresh();

	mov	eax, DWORD PTR _me$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _me$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 1886 : 		return(TRUE);

	mov	eax, 1
	jmp	SHORT $LN3@CampaignCl
$LN1@CampaignCl:

; 1887 : 	}
; 1888 : 	return(FALSE);

	xor	eax, eax
$LN3@CampaignCl:

; 1889 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignClockCB@@YAHPAVC_Base@@@Z ENDP			; CampaignClockCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CloseFullMapCB@@YAXJFPAVC_Base@@@Z PROC		; CloseFullMapCB

; 1826 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1827 : 	F4CSECTIONHANDLE *Leave;
; 1828 : 	C_Window *win;
; 1829 : 
; 1830 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN2@CloseFullM

; 1831 : 		return;

	jmp	$LN3@CloseFullM
$LN2@CloseFullM:

; 1832 : 
; 1833 : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1834 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 1835 : 	gMainHandler->DisableWindowGroup(6401);

	push	6401					; 00001901H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 1836 : 	StupidHackToCloseCSECT=0;

	mov	DWORD PTR ?StupidHackToCloseCSECT@@3HA, 0 ; StupidHackToCloseCSECT

; 1837 : 	win=gMainHandler->FindWindow(CP_PUA_MAP);

	push	6500					; 00001964H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1838 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@CloseFullM

; 1839 : 	{
; 1840 : 		gMapMgr->SetWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 1841 : 		gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap

; 1842 : 		gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1843 : 		gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN1@CloseFullM:

; 1844 : 	}
; 1845 : 	UI_Leave(Leave);

	mov	eax, DWORD PTR _Leave$[ebp]
	push	eax
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN3@CloseFullM:

; 1846 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseFullMapCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseFullMapCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_Leave$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenFullMapCB@@YAXJFPAVC_Base@@@Z PROC			; OpenFullMapCB

; 1805 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1806 : 	F4CSECTIONHANDLE *Leave;
; 1807 : 	C_Window *win;
; 1808 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@OpenFullMa

; 1809 : 		return;

	jmp	$LN4@OpenFullMa
$LN3@OpenFullMa:

; 1810 : 
; 1811 : 	Leave=UI_Enter(control->Parent_);

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	?UI_Enter@@YAPAUF4CSECTIONHANDLE@@PAVC_Window@@@Z ; UI_Enter
	add	esp, 4
	mov	DWORD PTR _Leave$[ebp], eax

; 1812 : 	win=gMainHandler->FindWindow(CB_FULLMAP_WIN);

	push	6400					; 00001900H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1813 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@OpenFullMa

; 1814 : 	{
; 1815 : 		gMapMgr->SetWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 1816 : 		gMapMgr->DrawMap();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?DrawMap@C_Map@@QAEXXZ			; C_Map::DrawMap
$LN2@OpenFullMa:

; 1817 : 	}
; 1818 : 	win=gMainHandler->FindWindow(CP_PUA_MAP);

	push	6500					; 00001964H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1819 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@OpenFullMa

; 1820 : 		gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@OpenFullMa:

; 1821 : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1822 : 	UI_Leave(Leave);

	mov	edx, DWORD PTR _Leave$[ebp]
	push	edx
	call	?UI_Leave@@YAXPAUF4CSECTIONHANDLE@@@Z	; UI_Leave
	add	esp, 4
$LN4@OpenFullMa:

; 1823 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenFullMapCB@@YAXJFPAVC_Base@@@Z ENDP			; OpenFullMapCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?GenericCloseCB@@YAXJFPAVC_Base@@@Z PROC		; GenericCloseCB

; 1768 : {

	push	ebp
	mov	ebp, esp

; 1769 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@GenericClo

; 1770 : 		return;

	jmp	SHORT $LN2@GenericClo
$LN1@GenericClo:

; 1771 : 
; 1772 : 	gMainHandler->DisableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup
$LN2@GenericClo:

; 1773 : }

	pop	ebp
	ret	0
?GenericCloseCB@@YAXJFPAVC_Base@@@Z ENDP		; GenericCloseCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_entryType$ = -260					; size = 4
tv389 = -256						; size = 4
_wp$ = -252						; size = 4
_pilotSlot$ = -248					; size = 4
_fl$2 = -244						; size = 4
_fl$ = -240						; size = 4
_ent$3 = -236						; size = 4
_win$ = -232						; size = 4
_btn$ = -228						; size = 4
_control$ = -224					; size = 184
_buffer$ = -40						; size = 21
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CampaignButtonCB@@YAXJFPAVC_Base@@@Z PROC		; CampaignButtonCB

; 1600 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 248				; 000000f8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1601 : 	Flight	fl;
; 1602 : 	int		pilotSlot,entryType;
; 1603 : 	WayPoint wp;
; 1604 : 	C_Window *win;
; 1605 : 	C_Button *btn;
; 1606 : 
; 1607 : 	// Check for correct mouse click and campaign over state
; 1608 : 	if(hittype != C_TYPE_LMOUSEUP || TheCampaign.EndgameResult)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	jne	SHORT $LN25@CampaignBu
	movzx	ecx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+93
	test	ecx, ecx
	je	SHORT $LN26@CampaignBu
$LN25@CampaignBu:

; 1609 : 		return;

	jmp	$LN27@CampaignBu
$LN26@CampaignBu:

; 1610 : 
; 1611 : 	if(TheCampaign.EndgameResult)

	movzx	edx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+93
	test	edx, edx
	je	SHORT $LN24@CampaignBu

; 1612 : 	{
; 1613 : 		AreYouSure(TXT_ERROR,TXT_GAME_OVER,NULL,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	0
	push	315					; 0000013bH
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 1614 : 		return;

	jmp	$LN27@CampaignBu
$LN24@CampaignBu:

; 1615 : 	}
; 1616 : 
; 1617 : 	fl = FalconLocalSession->GetPlayerFlight();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _fl$[ebp], eax

; 1618 : 	pilotSlot = FalconLocalSession->GetPilotSlot();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPilotSlot@FalconSessionEntity@@QBEEXZ ; FalconSessionEntity::GetPilotSlot
	movzx	eax, al
	mov	DWORD PTR _pilotSlot$[ebp], eax

; 1619 : 
; 1620 : 	if(!fl || pilotSlot == 255)

	cmp	DWORD PTR _fl$[ebp], 0
	je	SHORT $LN22@CampaignBu
	cmp	DWORD PTR _pilotSlot$[ebp], 255		; 000000ffH
	jne	SHORT $LN23@CampaignBu
$LN22@CampaignBu:

; 1621 : 	{
; 1622 : 		// PETER TODO: Clear mission window's selection TOO!
; 1623 : 		FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 1624 : 		FalconLocalSession->SetPilotSlot(255);

	push	255					; 000000ffH
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPilotSlot@FalconSessionEntity@@QAEXE@Z ; FalconSessionEntity::SetPilotSlot

; 1625 : 		return;

	jmp	$LN27@CampaignBu
$LN23@CampaignBu:

; 1626 : 	}
; 1627 : 
; 1628 : 	ReadyToPlayMovie=FALSE;

	mov	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie

; 1629 : 
; 1630 : 	TheCampaign.MissionEvaluator->PreMissionEval(fl,static_cast<uchar>(pilotSlot));

	movzx	ecx, BYTE PTR _pilotSlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fl$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	call	?PreMissionEval@MissionEvaluationClass@@QAEHPAVFlightClass@@E@Z ; MissionEvaluationClass::PreMissionEval

; 1631 : 
; 1632 : 	// KCK HACK TO ISOLATE KNEEBOARD CRASH BUG
; 1633 : //	if (!TheCampaign.MissionEvaluator->player_pilot)
; 1634 : //		*((unsigned int *) 0x00) = 0;
; 1635 : 	// END HACK
; 1636 : 
; 1637 : #ifdef DEBUG
; 1638 : 	gPlayerPilotLock = 1;
; 1639 : #endif
; 1640 : 
; 1641 : 	ShiAssert (TheCampaign.MissionEvaluator->player_pilot);
; 1642 : 
; 1643 : 	// Trigger the campaign to compress time and takeoff.
; 1644 : 	entryType = CompressCampaignUntilTakeoff(fl);

	mov	eax, DWORD PTR _fl$[ebp]
	push	eax
	call	?CompressCampaignUntilTakeoff@@YAHPAVFlightClass@@@Z ; CompressCampaignUntilTakeoff
	add	esp, 4
	mov	DWORD PTR _entryType$[ebp], eax

; 1645 : 	
; 1646 : // 2002-03-09 MN Send a "[Commiting now]" message to the chat windows
; 1647 : 	enum { PSEUDO_CONTROL				= 565419999 };
; 1648 : 
; 1649 : 	C_EditBox control;

	lea	ecx, DWORD PTR _control$[ebp]
	call	??0C_EditBox@@QAE@XZ			; C_EditBox::C_EditBox
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1650 : 	control.Setup(PSEUDO_CONTROL,39);

	push	39					; 00000027H
	push	565419999				; 21b39fdfH
	lea	ecx, DWORD PTR _control$[ebp]
	call	?Setup@C_EditBox@@QAEXJF@Z		; C_EditBox::Setup

; 1651 : 	_TCHAR buffer[21];
; 1652 : 	_stprintf(buffer,"( is commiting now )");

	push	OFFSET ??_C@_0BF@COMHJNHL@?$CI?5is?5commiting?5now?5?$CJ?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 8

; 1653 : 	control.SetText(buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _control$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 1654 : 
; 1655 : 	SendChatStringCB(0, DIK_RETURN, &control);

	lea	eax, DWORD PTR _control$[ebp]
	push	eax
	push	28					; 0000001cH
	push	0
	call	?SendChatStringCB@@YAXJFPAVC_Base@@@Z	; SendChatStringCB
	add	esp, 12					; 0000000cH

; 1656 : 	control.Cleanup();

	lea	ecx, DWORD PTR _control$[ebp]
	call	?Cleanup@C_EditBox@@UAEXXZ		; C_EditBox::Cleanup

; 1657 : 
; 1658 : 	wp=fl->GetFirstUnitWP();

	mov	ecx, DWORD PTR _fl$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 1659 : 	if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	$LN21@CampaignBu

; 1660 : 	{
; 1661 : 		if(TheCampaign.CurrentTime < wp->GetWPArrivalTime())

	mov	ecx, DWORD PTR _wp$[ebp]
	call	?GetWPArrivalTime@WayPointClass@@QAEKXZ	; WayPointClass::GetWPArrivalTime
	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A, eax
	jae	$LN21@CampaignBu

; 1662 : 		{
; 1663 : 			// RV - Biker - Disable ramp and taxi for carrier take off
; 1664 : 			Flight fl = FalconLocalSession->GetPlayerFlight();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ; FalconSessionEntity::GetPlayerFlight
	mov	DWORD PTR _fl$2[ebp], eax

; 1665 : 			
; 1666 : 			CampEntity ent = NULL;

	mov	DWORD PTR _ent$3[ebp], 0

; 1667 : 
; 1668 : 			if (fl)

	cmp	DWORD PTR _fl$2[ebp], 0
	je	SHORT $LN19@CampaignBu

; 1669 : 				ent = fl->GetUnitAirbase();

	mov	ecx, DWORD PTR _fl$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _fl$2[ebp]
	mov	eax, DWORD PTR [edx+704]
	call	eax
	mov	DWORD PTR _ent$3[ebp], eax
$LN19@CampaignBu:

; 1670 : 
; 1671 : 			if (ent && ent->IsTaskForce())

	cmp	DWORD PTR _ent$3[ebp], 0
	je	SHORT $LN18@CampaignBu
	mov	ecx, DWORD PTR _ent$3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ent$3[ebp]
	mov	eax, DWORD PTR [edx+264]
	call	eax
	test	eax, eax
	je	SHORT $LN18@CampaignBu

; 1672 : 				PlayerOptions.SetStartFlag(PlayerOptionsClass::START_RUNWAY);

	push	0
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ; PlayerOptionsClass::SetStartFlag
$LN18@CampaignBu:

; 1673 : 
; 1674 : 			// Open Countdown window if we're waiting for takeoff
; 1675 : 			win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1676 : 			if(win && entryType < 0)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN21@CampaignBu
	cmp	DWORD PTR _entryType$[ebp], 0
	jge	$LN21@CampaignBu

; 1677 : 			{
; 1678 : 				gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 1679 : 
; 1680 : 				btn=(C_Button*)win->FindControl(WAIT_TAXI);

	push	6016					; 00001780H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1681 : 				if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN16@CampaignBu

; 1682 : 				{
; 1683 : 					if (0)//(gCommsMgr) && (gCommsMgr->Online ()))

	xor	ecx, ecx
	je	SHORT $LN15@CampaignBu

; 1684 : 					{
; 1685 : 						btn->SetFlagBitOn (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1686 : 					}
; 1687 : 					else

	jmp	SHORT $LN14@CampaignBu
$LN15@CampaignBu:

; 1688 : 					{
; 1689 : 						btn->SetFlagBitOff (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1690 : 						if(PlayerOptions.GetStartFlag() == PlayerOptionsClass::START_TAXI)

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ ; PlayerOptionsClass::GetStartFlag
	cmp	eax, 1
	jne	SHORT $LN13@CampaignBu

; 1691 : 							btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1692 : 						else

	jmp	SHORT $LN14@CampaignBu
$LN13@CampaignBu:

; 1693 : 							btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN14@CampaignBu:

; 1694 : 					}
; 1695 : 					btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN16@CampaignBu:

; 1696 : 				}
; 1697 : 				btn=(C_Button*)win->FindControl(WAIT_TAKEOFF);

	push	6017					; 00001781H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1698 : 				if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN11@CampaignBu

; 1699 : 				{
; 1700 : 					if (g_bMPStartRestricted && gCommsMgr && gCommsMgr->Online())

	movzx	ecx, BYTE PTR ?g_bMPStartRestricted@@3_NA ; g_bMPStartRestricted
	test	ecx, ecx
	je	SHORT $LN10@CampaignBu
	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN10@CampaignBu
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN10@CampaignBu

; 1701 : 					{
; 1702 : 						btn->SetFlagBitOn (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1703 : 					}
; 1704 : 					else

	jmp	SHORT $LN9@CampaignBu
$LN10@CampaignBu:

; 1705 : 					{
; 1706 : 						btn->SetFlagBitOff (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1707 : 						if(PlayerOptions.GetStartFlag() == PlayerOptionsClass::START_RUNWAY)

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ ; PlayerOptionsClass::GetStartFlag
	test	eax, eax
	jne	SHORT $LN8@CampaignBu

; 1708 : 							btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1709 : 						else

	jmp	SHORT $LN9@CampaignBu
$LN8@CampaignBu:

; 1710 : 							btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN9@CampaignBu:

; 1711 : 					}
; 1712 : 					btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN11@CampaignBu:

; 1713 : 				}
; 1714 : 				btn=(C_Button*)win->FindControl(WAIT_RAMP);

	push	6019					; 00001783H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1715 : 				if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	$LN6@CampaignBu

; 1716 : 				{
; 1717 : 					if (g_bMPStartRestricted && gCommsMgr && gCommsMgr->Online())

	movzx	ecx, BYTE PTR ?g_bMPStartRestricted@@3_NA ; g_bMPStartRestricted
	test	ecx, ecx
	je	SHORT $LN5@CampaignBu
	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN5@CampaignBu
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN5@CampaignBu

; 1718 : 					{
; 1719 : 						btn->SetFlagBitOn (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1720 : 					}
; 1721 : 					else

	jmp	SHORT $LN4@CampaignBu
$LN5@CampaignBu:

; 1722 : 					{
; 1723 : 						btn->SetFlagBitOff (C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1724 : 						if(PlayerOptions.GetStartFlag() == PlayerOptionsClass::START_RAMP)

	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ ; PlayerOptionsClass::GetStartFlag
	cmp	eax, 2
	jne	SHORT $LN3@CampaignBu

; 1725 : 							btn->SetState(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax

; 1726 : 						else

	jmp	SHORT $LN4@CampaignBu
$LN3@CampaignBu:

; 1727 : 							btn->SetState(0);

	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
$LN4@CampaignBu:

; 1728 : 					}
; 1729 : 					btn->Refresh();

	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@CampaignBu:

; 1730 : 				}
; 1731 : 				gMainHandler->ShowWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 1732 : 				gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 1733 : 				gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN21@CampaignBu:

; 1734 : 			}
; 1735 : 		}
; 1736 : 	}
; 1737 : 	// Autosave the game, if campaign
; 1738 : 	CampaignAutoSave(FalconLocalGame->GetGameType());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@CampaignBu
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv389[ebp], eax
	jmp	SHORT $LN30@CampaignBu
$LN29@CampaignBu:
	mov	DWORD PTR tv389[ebp], 0
$LN30@CampaignBu:
	mov	ecx, DWORD PTR tv389[ebp]
	call	?GetGameType@FalconGameEntity@@QAE?AW4FalconGameType@@XZ ; FalconGameEntity::GetGameType
	push	eax
	call	?CampaignAutoSave@@YAXW4FalconGameType@@@Z ; CampaignAutoSave
	add	esp, 4

; 1739 : 
; 1740 : 	gMusic->ClearQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ClearQ@C_Music@@QAEXXZ			; C_Music::ClearQ

; 1741 : 	gMusic->FadeOut_Stop();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?FadeOut_Stop@C_Music@@QAEXXZ		; C_Music::FadeOut_Stop

; 1742 : 
; 1743 : 	// Force Compliance... since they already agreed before
; 1744 : 	if(gCommsMgr && gCommsMgr->Online())

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN1@CampaignBu
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN1@CampaignBu

; 1745 : 	{
; 1746 : 		PlayerOptions.ComplyWRules(CurrRules.GetRules());

	mov	ecx, OFFSET ?CurrRules@@3VRulesClass@@A	; CurrRules
	call	?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ; RulesClass::GetRules
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?ComplyWRules@PlayerOptionsClass@@QAEXPAURulesStruct@@@Z ; PlayerOptionsClass::ComplyWRules

; 1747 : 		PlayerOptions.SaveOptions();

	mov	ecx, OFFSET ?LogBook@@3VLogBookData@@A	; LogBook
	call	?Callsign@LogBookData@@QAEPADXZ		; LogBookData::Callsign
	push	eax
	mov	ecx, OFFSET ?PlayerOptions@@3VPlayerOptionsClass@@A ; PlayerOptions
	call	?SaveOptions@PlayerOptionsClass@@QAEHPAD@Z ; PlayerOptionsClass::SaveOptions
$LN1@CampaignBu:

; 1748 : 	}
; 1749 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _control$[ebp]
	call	??1C_EditBox@@UAE@XZ			; C_EditBox::~C_EditBox
$LN27@CampaignBu:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z$0:
	lea	ecx, DWORD PTR _control$[ebp]
	jmp	??1C_EditBox@@UAE@XZ			; C_EditBox::~C_EditBox
__ehhandler$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CampaignButtonCB@@YAXJFPAVC_Base@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CampaignButtonCB@@YAXJFPAVC_Base@@@Z ENDP		; CampaignButtonCB
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_wp$ = -12						; size = 4
_flt$ = -8						; size = 4
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenFlightPlanWindowCB@@YAXJFPAVC_Base@@@Z PROC	; OpenFlightPlanWindowCB

; 1569 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1570 : 	C_Window *win;
; 1571 : 	WayPoint wp;
; 1572 : 	Flight flt;
; 1573 : 
; 1574 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@OpenFlight

; 1575 : 		return;

	jmp	$LN7@OpenFlight
$LN6@OpenFlight:

; 1576 : 
; 1577 : 	flt=(Flight)vuDatabase->Find(gActiveFlightID);

	mov	ecx, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gActiveFlightID@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flt$[ebp], eax

; 1578 : 	if(!flt)

	cmp	DWORD PTR _flt$[ebp], 0
	jne	SHORT $LN5@OpenFlight

; 1579 : 		return;

	jmp	SHORT $LN7@OpenFlight
$LN5@OpenFlight:

; 1580 : 
; 1581 : 	win=gMainHandler->FindWindow(FLIGHT_PLAN_WIN);

	push	13000					; 000032c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1582 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@OpenFlight

; 1583 : 	{
; 1584 : 		if(!(gMainHandler->GetWindowFlags(FLIGHT_PLAN_WIN) & C_BIT_ENABLED))

	push	13000					; 000032c8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetWindowFlags@C_Handler@@QAEJJ@Z	; C_Handler::GetWindowFlags
	and	eax, 2048				; 00000800H
	jne	SHORT $LN3@OpenFlight

; 1585 : 		{
; 1586 : 			wp=flt->GetFirstUnitWP();

	mov	ecx, DWORD PTR _flt$[ebp]
	call	?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ; UnitClass::GetFirstUnitWP
	mov	DWORD PTR _wp$[ebp], eax

; 1587 : 			if(wp)

	cmp	DWORD PTR _wp$[ebp], 0
	je	SHORT $LN2@OpenFlight

; 1588 : 			{
; 1589 : 				UpdateWaypointWindowInfo(win,wp,1);

	push	1
	push	1
	mov	eax, DWORD PTR _wp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?UpdateWaypointWindowInfo@@YAXPAVC_Window@@PAVWayPointClass@@HH@Z ; UpdateWaypointWindowInfo
	add	esp, 16					; 00000010H

; 1590 : 				gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenFlight:

; 1591 : 			}
; 1592 : 		}
; 1593 : 		else

	jmp	SHORT $LN7@OpenFlight
$LN3@OpenFlight:

; 1594 : 			gMainHandler->WindowToFront(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront
$LN7@OpenFlight:

; 1595 : 	}
; 1596 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenFlightPlanWindowCB@@YAXJFPAVC_Base@@@Z ENDP	; OpenFlightPlanWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -36						; size = 4
_win$ = -32						; size = 4
tv92 = -28						; size = 4
$T3 = -24						; size = 4
_ID$ = -20						; size = 4
_tmr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?LoadCampaignWindows@@YAXXZ PROC			; LoadCampaignWindows

; 1425 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadCampaignWindows@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1426 : 	long ID;
; 1427 : 	C_Window *win;
; 1428 : 	C_TimerHook *tmr;
; 1429 : 
; 1430 : 	if(CPLoaded) return;

	cmp	DWORD PTR ?CPLoaded@@3HA, 0		; CPLoaded
	je	SHORT $LN6@LoadCampai
	jmp	$LN7@LoadCampai
$LN6@LoadCampai:

; 1431 : 
; 1432 : 	CampEventSoundID=0;

	mov	DWORD PTR ?CampEventSoundID@@3JA, 0	; CampEventSoundID

; 1433 : 	if( _LOAD_ART_RESOURCES_){

	cmp	DWORD PTR ?_LOAD_ART_RESOURCES_@@3JA, 0	; _LOAD_ART_RESOURCES_
	je	SHORT $LN5@LoadCampai

; 1434 : 		gMainParser->LoadImageList("cp_res.lst");

	push	OFFSET ??_C@_0L@KOEEIMPA@cp_res?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList

; 1435 : 	}
; 1436 : 	else{

	jmp	SHORT $LN4@LoadCampai
$LN5@LoadCampai:

; 1437 : 		gMainParser->LoadImageList("cp_art.lst");

	push	OFFSET ??_C@_0L@ODAMCIMA@cp_art?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadImageList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadImageList
$LN4@LoadCampai:

; 1438 : 	}
; 1439 : 	gMainParser->LoadSoundList("cp_snd.lst");

	push	OFFSET ??_C@_0L@HODKOKLH@cp_snd?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadSoundList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadSoundList

; 1440 : 	gMainParser->LoadWindowList("cp_scf.lst");   // Modified by M.N. - add art/art1024 by LoadWindowList

	push	OFFSET ??_C@_0L@FCCFCKHM@cp_scf?4lst?$AA@
	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?LoadWindowList@C_Parser@@QAEHPAD@Z	; C_Parser::LoadWindowList

; 1441 : 
; 1442 : 	ID=gMainParser->GetFirstWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetFirstWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetFirstWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax
$LN3@LoadCampai:

; 1443 : 	while(ID)

	cmp	DWORD PTR _ID$[ebp], 0
	je	SHORT $LN2@LoadCampai

; 1444 : 	{
; 1445 : 		HookupCampaignControls(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	call	?HookupCampaignControls@@YAXJ@Z		; HookupCampaignControls
	add	esp, 4

; 1446 : 		ID=gMainParser->GetNextWindowLoaded();

	mov	ecx, DWORD PTR ?gMainParser@@3PAVC_Parser@@A ; gMainParser
	call	?GetNextWindowLoaded@C_Parser@@QAEJXZ	; C_Parser::GetNextWindowLoaded
	mov	DWORD PTR _ID$[ebp], eax

; 1447 : 	}

	jmp	SHORT $LN3@LoadCampai
$LN2@LoadCampai:

; 1448 : 
; 1449 : 	LoadCommonWindows();

	call	?LoadCommonWindows@@YAXXZ		; LoadCommonWindows

; 1450 : 
; 1451 : 	CPLoaded++;

	mov	ecx, DWORD PTR ?CPLoaded@@3HA		; CPLoaded
	add	ecx, 1
	mov	DWORD PTR ?CPLoaded@@3HA, ecx		; CPLoaded

; 1452 : 	win=gMainHandler->FindWindow(CB_MAIN_SCREEN);

	push	6000					; 00001770H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1453 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN7@LoadCampai

; 1454 : 	{
; 1455 : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN9@LoadCampai
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN10@LoadCampai
$LN9@LoadCampai:
	mov	DWORD PTR tv92[ebp], 0
$LN10@LoadCampai:
	mov	edx, DWORD PTR tv92[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$[ebp], eax

; 1456 : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 1457 : 		tmr->SetUpdateCallback(GenericTimerCB);

	push	OFFSET ?GenericTimerCB@@YAXJFPAVC_Base@@@Z ; GenericTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 1458 : 		tmr->SetRefreshCallback(BlinkCommsButtonTimerCB);

	push	OFFSET ?BlinkCommsButtonTimerCB@@YAXJFPAVC_Base@@@Z ; BlinkCommsButtonTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetRefreshCallback

; 1459 : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,1*_UI95_TICKS_PER_SECOND_); // Timer activates every 2 seconds (Only when this window is open)

	push	10					; 0000000aH
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 1460 : 
; 1461 : 		win->AddControl(tmr);

	mov	ecx, DWORD PTR _tmr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN7@LoadCampai:

; 1462 : 	}
; 1463 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadCampaignWindows@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadCampaignWindows@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadCampaignWindows@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadCampaignWindows@@YAXXZ ENDP			; LoadCampaignWindows
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_tree$ = -48						; size = 4
_bmp$ = -44						; size = 4
_blip$1 = -40						; size = 4
_lbox$ = -36						; size = 4
_btn$ = -32						; size = 4
_ebox$ = -28						; size = 4
_clk$ = -24						; size = 4
_win$ = -20						; size = 4
_x$ = -16						; size = 2
_y$ = -12						; size = 2
_i$2 = -8						; size = 2
_j$3 = -4						; size = 2
_noawacsmap$ = 8					; size = 1
?TacticalEngagementSetup@@YAX_N@Z PROC			; TacticalEngagementSetup

; 1171 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 1172 : 	C_Window *win;
; 1173 : 	C_TreeList *tree;
; 1174 : 	C_Bitmap *bmp;
; 1175 : 	C_Button *btn;
; 1176 : 	C_EditBox *ebox;
; 1177 : 	C_ListBox *lbox;
; 1178 : 	C_Clock *clk;
; 1179 : 	GridIndex x,y;
; 1180 : 
; 1181 : 	InCleanup=0;

	xor	eax, eax
	mov	WORD PTR ?InCleanup@@3FA, ax		; InCleanup

; 1182 : 
; 1183 : 	gMusic->ClearQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ClearQ@C_Music@@QAEXXZ			; C_Music::ClearQ

; 1184 : 	gMusic->FadeOut_Stop();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?FadeOut_Stop@C_Music@@QAEXXZ		; C_Music::FadeOut_Stop

; 1185 : 	gMusic->ToggleStream();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ToggleStream@C_Music@@QAEXXZ		; C_Music::ToggleStream

; 1186 : 	StupidHackToCloseCSECT=0;

	mov	DWORD PTR ?StupidHackToCloseCSECT@@3HA, 0 ; StupidHackToCloseCSECT

; 1187 : 	StopLookingforMission=0;

	mov	DWORD PTR ?StopLookingforMission@@3JA, 0 ; StopLookingforMission

; 1188 : 	CurMapTool=NULL;

	mov	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool

; 1189 : 
; 1190 : 	ClearMapToolStates(TAC_FULLMAP_WIN);

	push	30806					; 00007856H
	call	?ClearMapToolStates@@YAXJ@Z		; ClearMapToolStates
	add	esp, 4

; 1191 : 	ClearMapToolStates(TAC_EDIT_WIN);

	push	30516					; 00007734H
	call	?ClearMapToolStates@@YAXJ@Z		; ClearMapToolStates
	add	esp, 4

; 1192 : 	ClearMapToolStates(TAC_PUA_MAP);

	push	30800					; 00007850H
	call	?ClearMapToolStates@@YAXJ@Z		; ClearMapToolStates
	add	esp, 4

; 1193 : 
; 1194 : // 2002-03-06 MN if noawacsmap = true, don't display it (which means we're in TE edit mode)
; 1195 : 	SetupMapMgr(noawacsmap);

	movzx	ecx, BYTE PTR _noawacsmap$[ebp]
	push	ecx
	call	?SetupMapMgr@@YAX_N@Z			; SetupMapMgr
	add	esp, 4

; 1196 : 	SetupOOBWindow();

	call	?SetupOOBWindow@@YAXXZ			; SetupOOBWindow

; 1197 : 	TallyPlayerSquadrons();

	call	?TallyPlayerSquadrons@@YAXXZ		; TallyPlayerSquadrons

; 1198 : 	// Mode 0=Play,1=Edit)
; 1199 : 	if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	je	$LN52@TacticalEn

; 1200 : 	{
; 1201 : 		SetupTacEngMenus(1);

	push	1
	call	?SetupTacEngMenus@@YAXF@Z		; SetupTacEngMenus
	add	esp, 4

; 1202 : 		win=gMainHandler->FindWindow(TAC_VC_WIN);

	push	40025					; 00009c59H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1203 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN51@TacticalEn

; 1204 : 		{
; 1205 : 			ebox=(C_EditBox*)win->FindControl(PTS_REQ_VICTORY);

	push	30746					; 0000781aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1206 : 			if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN50@TacticalEn

; 1207 : 				ebox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN50@TacticalEn:

; 1208 : 			lbox=(C_ListBox*)win->FindControl(TAC_TYPE);

	push	30517					; 00007735H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1209 : 			if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN49@TacticalEn

; 1210 : 				lbox->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN49@TacticalEn:

; 1211 : 			clk=(C_Clock*)win->FindControl(START_TIME);

	push	40105					; 00009ca9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1212 : 			if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN48@TacticalEn

; 1213 : 			{
; 1214 : 				clk->SetTime(TheCampaign.GetTEStartTime()/VU_TICS_PER_SECOND);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTEStartTime@CampaignClass@@QAEKXZ	; CampaignClass::GetTEStartTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1215 : 				clk->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN48@TacticalEn:

; 1216 : 			}
; 1217 : 			clk=(C_Clock*)win->FindControl(TIME_LIMIT);

	push	40102					; 00009ca6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1218 : 			if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN47@TacticalEn

; 1219 : 			{
; 1220 : 				clk->SetTime(TheCampaign.GetTETimeLimitTime()/VU_TICS_PER_SECOND);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTETimeLimitTime@CampaignClass@@QAEKXZ ; CampaignClass::GetTETimeLimitTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1221 : 				clk->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN47@TacticalEn:

; 1222 : 			}
; 1223 : 			if(gVCTree)

	cmp	DWORD PTR ?gVCTree@@3PAVC_TreeList@@A, 0 ; gVCTree
	je	SHORT $LN46@TacticalEn

; 1224 : 				gVCTree->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN46@TacticalEn:

; 1225 : 			win->UnHideCluster(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN51@TacticalEn:

; 1226 : 		}
; 1227 : 	}
; 1228 : 	else

	jmp	$LN36@TacticalEn
$LN52@TacticalEn:

; 1229 : 	{
; 1230 : 		SetupTacEngMenus(0);

	push	0
	call	?SetupTacEngMenus@@YAXF@Z		; SetupTacEngMenus
	add	esp, 4

; 1231 : 		win=gMainHandler->FindWindow(TAC_VC_WIN);

	push	40025					; 00009c59H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1232 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN44@TacticalEn

; 1233 : 		{
; 1234 : 			ebox=(C_EditBox*)win->FindControl(PTS_REQ_VICTORY);

	push	30746					; 0000781aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1235 : 			if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN43@TacticalEn

; 1236 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN43@TacticalEn:

; 1237 : 			lbox=(C_ListBox*)win->FindControl(TAC_TYPE);

	push	30517					; 00007735H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 1238 : 			if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN42@TacticalEn

; 1239 : 				lbox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN42@TacticalEn:

; 1240 : 			clk=(C_Clock*)win->FindControl(START_TIME);

	push	40105					; 00009ca9H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1241 : 			if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN41@TacticalEn

; 1242 : 			{
; 1243 : 				clk->SetTime(TheCampaign.GetTEStartTime()/VU_TICS_PER_SECOND);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTEStartTime@CampaignClass@@QAEKXZ	; CampaignClass::GetTEStartTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1244 : 				clk->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN41@TacticalEn:

; 1245 : 			}
; 1246 : 			clk=(C_Clock*)win->FindControl(TIME_LIMIT);

	push	40102					; 00009ca6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1247 : 			if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN40@TacticalEn

; 1248 : 			{
; 1249 : 				clk->SetTime(TheCampaign.GetTETimeLimitTime()/VU_TICS_PER_SECOND);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTETimeLimitTime@CampaignClass@@QAEKXZ ; CampaignClass::GetTETimeLimitTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1250 : 				clk->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN40@TacticalEn:

; 1251 : 			}
; 1252 : 			if(gVCTree)

	cmp	DWORD PTR ?gVCTree@@3PAVC_TreeList@@A, 0 ; gVCTree
	je	SHORT $LN39@TacticalEn

; 1253 : 				gVCTree->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN39@TacticalEn:

; 1254 : 			win->HideCluster(100);

	push	100					; 00000064H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN44@TacticalEn:

; 1255 : 		}
; 1256 : 		win=gMainHandler->FindWindow(TAC_END_WIN);

	push	40109					; 00009cadH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1257 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN36@TacticalEn

; 1258 : 		{
; 1259 : 			ebox=(C_EditBox*)win->FindControl(PTS_REQ_VICTORY);

	push	30746					; 0000781aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 1260 : 			if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	SHORT $LN37@TacticalEn

; 1261 : 				ebox->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN37@TacticalEn:

; 1262 : 			clk=(C_Clock*)win->FindControl(TIME_LIMIT);

	push	40102					; 00009ca6H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 1263 : 			if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN36@TacticalEn

; 1264 : 			{
; 1265 : 				clk->SetTime(TheCampaign.GetTETimeLimitTime()/VU_TICS_PER_SECOND);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetTETimeLimitTime@CampaignClass@@QAEKXZ ; CampaignClass::GetTETimeLimitTime
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	push	eax
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTime@C_Clock@@QAEXJ@Z		; C_Clock::SetTime

; 1266 : 				clk->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	edx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN36@TacticalEn:

; 1267 : 			}
; 1268 : 		}
; 1269 : 	}
; 1270 : 
; 1271 : 	win=gMainHandler->FindWindow(TAC_EDIT_WIN);

	push	30516					; 00007734H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1272 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN35@TacticalEn

; 1273 : 		SetupMover(win,MAP_POP,gMapMgr_TACmover);

	push	OFFSET ?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z ; gMapMgr_TACmover
	push	86000					; 00014ff0H
	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH
$LN35@TacticalEn:

; 1274 : 
; 1275 : 	win=gMainHandler->FindWindow(TAC_VC_WIN);

	push	40025					; 00009c59H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1276 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN34@TacticalEn

; 1277 : 		SetupMover(win,MAP_POP,gMapMgr_TACmover);

	push	OFFSET ?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z ; gMapMgr_TACmover
	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH
$LN34@TacticalEn:

; 1278 : 
; 1279 : 	win=gMainHandler->FindWindow(TAC_PUA_MAP);

	push	30800					; 00007850H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1280 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN33@TacticalEn

; 1281 : 	{
; 1282 : 		SetupMover(win,MAP_POP,gMapMgr_TACmover);

	push	OFFSET ?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z ; gMapMgr_TACmover
	push	86000					; 00014ff0H
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH

; 1283 : 		gMapMgr->SetWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 1284 : 		gMapMgr->SetupOverlay();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetupOverlay@C_Map@@QAEXXZ		; C_Map::SetupOverlay
$LN33@TacticalEn:

; 1285 : 	}
; 1286 : 
; 1287 : 	win=gMainHandler->FindWindow(TAC_FULLMAP_WIN);

	push	30806					; 00007856H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1288 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN32@TacticalEn

; 1289 : 		SetupMover(win,MAP_POP,gMapMgr_TACmover);

	push	OFFSET ?gMapMgr_TACmover@@YAXJFPAVC_Base@@@Z ; gMapMgr_TACmover
	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH
$LN32@TacticalEn:

; 1290 : 	
; 1291 : 	win=gMainHandler->FindWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1292 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN31@TacticalEn

; 1293 : 	{
; 1294 : 		tree=(C_TreeList*)win->FindControl(MISSION_LIST_TREE);

	push	6130					; 000017f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1295 : 		SetupGPS(tree);

	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?SetupGPS@@YAXPAVC_TreeList@@@Z		; SetupGPS
	add	esp, 4
$LN31@TacticalEn:

; 1296 : 	}
; 1297 : 
; 1298 : 	win=gMainHandler->FindWindow(TAC_EDIT_SCREEN);

	push	40016					; 00009c50H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1299 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN27@TacticalEn

; 1300 : 	{
; 1301 : 		FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 1302 : 		btn=(C_Button*)win->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1303 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN27@TacticalEn

; 1304 : 		{
; 1305 : 			if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN28@TacticalEn

; 1306 : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1307 : 			else

	jmp	SHORT $LN27@TacticalEn
$LN28@TacticalEn:

; 1308 : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN27@TacticalEn:

; 1309 : 		}
; 1310 : 	}
; 1311 : 
; 1312 : 	win=gMainHandler->FindWindow(TAC_PLAY_SCREEN);

	push	40017					; 00009c51H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1313 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN23@TacticalEn

; 1314 : 	{
; 1315 : 		FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 1316 : 		btn=(C_Button*)win->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1317 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN23@TacticalEn

; 1318 : 		{
; 1319 : 			if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN24@TacticalEn

; 1320 : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1321 : 			else

	jmp	SHORT $LN23@TacticalEn
$LN24@TacticalEn:

; 1322 : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN23@TacticalEn:

; 1323 : 		}
; 1324 : 	}
; 1325 : 
; 1326 : 	win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1327 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN21@TacticalEn

; 1328 : 	{
; 1329 : 		bmp=(C_Bitmap*)win->FindControl(TAC_OVERLAY);

	push	40082					; 00009c92H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1330 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN21@TacticalEn

; 1331 : 			bmp->SetImage(gOccupationMap);

	mov	ecx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage
$LN21@TacticalEn:

; 1332 : 	}
; 1333 : 
; 1334 : 	win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1335 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN16@TacticalEn

; 1336 : 	{
; 1337 : 		short i,j;
; 1338 : 		C_Blip *blip;
; 1339 : 
; 1340 : 		blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _blip$1[ebp], eax

; 1341 : 		if(blip)

	cmp	DWORD PTR _blip$1[ebp], 0
	je	$LN16@TacticalEn

; 1342 : 		{
; 1343 : 			for(i=0;i<8;i++)

	xor	edx, edx
	mov	WORD PTR _i$2[ebp], dx
	jmp	SHORT $LN18@TacticalEn
$LN17@TacticalEn:
	mov	ax, WORD PTR _i$2[ebp]
	add	ax, 1
	mov	WORD PTR _i$2[ebp], ax
$LN18@TacticalEn:
	movsx	ecx, WORD PTR _i$2[ebp]
	cmp	ecx, 8
	jge	$LN16@TacticalEn

; 1344 : 			{
; 1345 : 				if(TeamInfo[i] && TeamInfo[i]->flags & TEAM_ACTIVE)

	movsx	edx, WORD PTR _i$2[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4], 0
	je	SHORT $LN15@TacticalEn
	movsx	eax, WORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	movsx	edx, WORD PTR [ecx+350]
	and	edx, 1
	je	SHORT $LN15@TacticalEn

; 1346 : 				{
; 1347 : 					for(j=0;j<8;j++)

	xor	eax, eax
	mov	WORD PTR _j$3[ebp], ax
	jmp	SHORT $LN14@TacticalEn
$LN13@TacticalEn:
	mov	cx, WORD PTR _j$3[ebp]
	add	cx, 1
	mov	WORD PTR _j$3[ebp], cx
$LN14@TacticalEn:
	movsx	edx, WORD PTR _j$3[ebp]
	cmp	edx, 8
	jge	SHORT $LN12@TacticalEn

; 1348 : 						blip->SetImage(BLIP_IDS[TeamInfo[i]->GetColor()][j],static_cast<uchar>(i),static_cast<uchar>(j));

	movzx	eax, BYTE PTR _j$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$2[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	shl	eax, 5
	movsx	ecx, WORD PTR _j$3[ebp]
	mov	edx, DWORD PTR ?BLIP_IDS@@3PAY07JA[eax+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _blip$1[ebp]
	call	?SetImage@C_Blip@@QAEXJEE@Z		; C_Blip::SetImage
	jmp	SHORT $LN13@TacticalEn
$LN12@TacticalEn:

; 1349 : 				}
; 1350 : 				else

	jmp	SHORT $LN8@TacticalEn
$LN15@TacticalEn:

; 1351 : 				{
; 1352 : 					for(j=0;j<8;j++)

	xor	eax, eax
	mov	WORD PTR _j$3[ebp], ax
	jmp	SHORT $LN10@TacticalEn
$LN9@TacticalEn:
	mov	cx, WORD PTR _j$3[ebp]
	add	cx, 1
	mov	WORD PTR _j$3[ebp], cx
$LN10@TacticalEn:
	movsx	edx, WORD PTR _j$3[ebp]
	cmp	edx, 8
	jge	SHORT $LN8@TacticalEn

; 1353 : 						blip->SetImage(BLIP_IDS[0][j],static_cast<uchar>(i),static_cast<uchar>(j));

	movzx	eax, BYTE PTR _j$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$2[ebp]
	push	ecx
	mov	edx, 32					; 00000020H
	imul	edx, 0
	movsx	eax, WORD PTR _j$3[ebp]
	mov	ecx, DWORD PTR ?BLIP_IDS@@3PAY07JA[edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _blip$1[ebp]
	call	?SetImage@C_Blip@@QAEXJEE@Z		; C_Blip::SetImage
	jmp	SHORT $LN9@TacticalEn
$LN8@TacticalEn:

; 1354 : 				}
; 1355 : 			}

	jmp	$LN17@TacticalEn
$LN16@TacticalEn:

; 1356 : 		}
; 1357 : 	}
; 1358 : 
; 1359 : 	InitNewFlash();

	call	?InitNewFlash@@YAXXZ			; InitNewFlash

; 1360 : 	RefreshMapEventList(TAC_MISSION_SUA, 1);

	push	1
	push	40024					; 00009c58H
	call	?RefreshMapEventList@@YAXJJ@Z		; RefreshMapEventList
	add	esp, 8

; 1361 : 
; 1362 : 	SetSingle_Comms_Ctrls();

	call	?SetSingle_Comms_Ctrls@@YAXXZ		; SetSingle_Comms_Ctrls

; 1363 : 	gSelectedFlightID=FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4, eax

; 1364 : 	gLoadoutFlightID=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4, edx

; 1365 : 	gActiveFlightID=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4, ecx

; 1366 : 	gActiveWPNum=0;

	xor	edx, edx
	mov	WORD PTR ?gActiveWPNum@@3FA, dx		; gActiveWPNum

; 1367 : 	gCurrentFlightID=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, ecx

; 1368 : 	gPlayerFlightID=FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gPlayerFlightID@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gPlayerFlightID@@3VVU_ID@@A+4, eax

; 1369 : 	gPlayerPlane=-1;

	or	ecx, -1
	mov	WORD PTR ?gPlayerPlane@@3FA, cx		; gPlayerPlane

; 1370 : 	mcnt=0;

	mov	DWORD PTR ?mcnt@@3HA, 0			; mcnt

; 1371 : 	atocnt=0;

	mov	DWORD PTR ?atocnt@@3HA, 0		; atocnt

; 1372 : 	uintcnt=0;

	mov	DWORD PTR ?uintcnt@@3HA, 0		; uintcnt

; 1373 : 	gLastUpdateGround=0l;

	mov	DWORD PTR ?gLastUpdateGround@@3JA, 0	; gLastUpdateGround

; 1374 : 	gLastUpdateAir=0l;

	mov	DWORD PTR ?gLastUpdateAir@@3JA, 0	; gLastUpdateAir

; 1375 : 
; 1376 : 	if (TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	edx, 524288				; 00080000H
	je	SHORT $LN7@TacticalEn

; 1377 : 	{
; 1378 : 		gMoveBattalion = TRUE;

	mov	DWORD PTR ?gMoveBattalion@@3HA, 1	; gMoveBattalion

; 1379 : 		gGps->SetTeamNo(-1); // Perfect Intel

	push	-1
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetTeamNo
	jmp	SHORT $LN4@TacticalEn
$LN7@TacticalEn:

; 1380 : 	}
; 1381 : 	else if(tactical_is_training ())

	call	?tactical_is_training@@YAHXZ		; tactical_is_training
	test	eax, eax
	je	SHORT $LN5@TacticalEn

; 1382 : 	{
; 1383 : 		gMoveBattalion = FALSE;

	mov	DWORD PTR ?gMoveBattalion@@3HA, 0	; gMoveBattalion

; 1384 : 		gGps->SetTeamNo(-1); // Perfect Intel

	push	-1
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetTeamNo

; 1385 : 		gSelectedTeam=FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	mov	BYTE PTR ?gSelectedTeam@@3EA, al	; gSelectedTeam

; 1386 : 	}
; 1387 : 	else

	jmp	SHORT $LN4@TacticalEn
$LN5@TacticalEn:

; 1388 : 	{
; 1389 : 		gMoveBattalion = FALSE;

	mov	DWORD PTR ?gMoveBattalion@@3HA, 0	; gMoveBattalion

; 1390 : 		gGps->SetTeamNo(FalconLocalSession->GetTeam()); // See ONLY what is spotted

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetTeamNo

; 1391 : 		gSelectedTeam=FalconLocalSession->GetTeam();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	mov	BYTE PTR ?gSelectedTeam@@3EA, al	; gSelectedTeam
$LN4@TacticalEn:

; 1392 : 	}
; 1393 : 
; 1394 : 	if(TacLastGroup)

	cmp	DWORD PTR ?TacLastGroup@@3HA, 0		; TacLastGroup
	je	SHORT $LN3@TacticalEn

; 1395 :  		do_tactical_debrief();

	call	?do_tactical_debrief@@YAXXZ		; do_tactical_debrief
$LN3@TacticalEn:

; 1396 : 
; 1397 : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 1398 : 	gMainHandler->AddUserCallback(TacEngListCB);

	push	OFFSET ?TacEngListCB@@YAXXZ		; TacEngListCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 1399 : 	gMainHandler->AddUserCallback(CampaignSoundEventCB);

	push	OFFSET ?CampaignSoundEventCB@@YAXXZ	; CampaignSoundEventCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 1400 : 
; 1401 : 	CheckCampaignFlyButton();

	call	?CheckCampaignFlyButton@@YAXXZ		; CheckCampaignFlyButton

; 1402 : 	if (!gTimeModeServer && !g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN2@TacticalEn
	movzx	ecx, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	ecx, ecx
	jne	SHORT $LN2@TacticalEn

; 1403 : 	{
; 1404 : 		FindMissionInBriefing(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4
$LN2@TacticalEn:

; 1405 : 	}
; 1406 : 	UpdateMissionWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 1407 : 
; 1408 : //	gATOAll->SetMenu (AIRUNIT_MENU);
; 1409 : //	gATOPackage->SetMenu (AIRUNIT_MENU);
; 1410 : 
; 1411 : 	TheCampaign.GetBullseyeLocation(&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z ; CampaignClass::GetBullseyeLocation

; 1412 : 	gMapMgr->SetBullsEye(x * FEET_PER_KM,(TheCampaign.TheaterSizeY-y) * FEET_PER_KM);

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	movsx	edx, WORD PTR _y$[ebp]
	sub	ecx, edx
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movsx	eax, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetBullsEye@C_Map@@QAEXMM@Z		; C_Map::SetBullsEye

; 1413 : 	SetMapSettings();

	call	?SetMapSettings@@YAXXZ			; SetMapSettings

; 1414 : 
; 1415 : 	InitVCArgLists();

	call	?InitVCArgLists@@YAXXZ			; InitVCArgLists

; 1416 : 	add_all_vcs_to_ui ();

	call	?add_all_vcs_to_ui@@YAXXZ		; add_all_vcs_to_ui

; 1417 : 	gRefreshScoresList=1;

	mov	DWORD PTR ?gRefreshScoresList@@3JA, 1	; gRefreshScoresList

; 1418 : 	PlayCampaignMusic();

	call	?PlayCampaignMusic@@YAXXZ		; PlayCampaignMusic

; 1419 : 
; 1420 : 	if(ShowGameOverWindow)

	cmp	DWORD PTR ?ShowGameOverWindow@@3JA, 0	; ShowGameOverWindow
	je	SHORT $LN1@TacticalEn

; 1421 : 		PostMessage(gMainHandler->GetAppWnd(),FM_OPEN_GAME_OVER_WIN,game_TacticalEngagement,0);

	push	0
	push	3
	push	1070					; 0000042eH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN1@TacticalEn:

; 1422 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TacticalEngagementSetup@@YAX_N@Z ENDP			; TacticalEngagementSetup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_tree$ = -256						; size = 4
tv328 = -252						; size = 4
_bmp$ = -248						; size = 4
_ps$ = -244						; size = 4
_y$ = -240						; size = 2
_x$ = -236						; size = 2
_ctrl$1 = -232						; size = 4
_blip$ = -228						; size = 4
_txt$ = -224						; size = 4
_btn$ = -220						; size = 4
_i$2 = -216						; size = 2
_j$3 = -212						; size = 2
_win$ = -208						; size = 4
_buffer$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
?CampaignSetup@@YAXXZ PROC				; CampaignSetup

; 978  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 979  : 	C_Window *win;
; 980  : 	C_Text *txt;
; 981  : 	C_TreeList *tree;
; 982  : 	C_Bitmap *bmp;
; 983  : 	C_Button *btn;
; 984  : 	C_Blip *blip;
; 985  : 	_TCHAR buffer[200];
; 986  : 	Squadron	ps;
; 987  : 	GridIndex x,y;
; 988  : 
; 989  : 	InCleanup=0;

	xor	eax, eax
	mov	WORD PTR ?InCleanup@@3FA, ax		; InCleanup

; 990  : 
; 991  : 	MovieY=5;

	mov	ecx, 5
	mov	WORD PTR ?MovieY@@3FA, cx		; MovieY

; 992  : 	gMusic->ClearQ();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ClearQ@C_Music@@QAEXXZ			; C_Music::ClearQ

; 993  : 	gMusic->FadeOut_Stop();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?FadeOut_Stop@C_Music@@QAEXXZ		; C_Music::FadeOut_Stop

; 994  : 	gMusic->ToggleStream();

	mov	ecx, DWORD PTR ?gMusic@@3PAVC_Music@@A	; gMusic
	call	?ToggleStream@C_Music@@QAEXXZ		; C_Music::ToggleStream

; 995  : 
; 996  : // 2002-03-06 MN added parameter
; 997  : 	SetupMapMgr(false);

	push	0
	call	?SetupMapMgr@@YAX_N@Z			; SetupMapMgr
	add	esp, 4

; 998  : 	SetupOOBWindow();

	call	?SetupOOBWindow@@YAXXZ			; SetupOOBWindow

; 999  : 	InitPAKNames();

	call	?InitPAKNames@@YAXXZ			; InitPAKNames

; 1000 : 	TallyPlayerSquadrons();

	call	?TallyPlayerSquadrons@@YAXXZ		; TallyPlayerSquadrons

; 1001 : 	SetupCampaignMenus();

	call	?SetupCampaignMenus@@YAXXZ		; SetupCampaignMenus

; 1002 : 	StupidHackToCloseCSECT=0;

	mov	DWORD PTR ?StupidHackToCloseCSECT@@3HA, 0 ; StupidHackToCloseCSECT

; 1003 : 	StopLookingforMission=0;

	mov	DWORD PTR ?StopLookingforMission@@3JA, 0 ; StopLookingforMission

; 1004 : 	CurMapTool=NULL;

	mov	DWORD PTR ?CurMapTool@@3PAVC_Base@@A, 0	; CurMapTool

; 1005 : 
; 1006 : 	win=gMainHandler->FindWindow(CP_PUA_MAP);

	push	6500					; 00001964H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1007 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN34@CampaignSe

; 1008 : 	{
; 1009 : 		SetupMover(win,MAP_POP,MapMgrMoveCB);

	push	OFFSET ?MapMgrMoveCB@@YAXJFPAVC_Base@@@Z ; MapMgrMoveCB
	push	86000					; 00014ff0H
	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH

; 1010 : 		gMapMgr->SetWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWindow@C_Map@@QAEXPAVC_Window@@@Z	; C_Map::SetWindow

; 1011 : 		gMapMgr->SetupOverlay();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetupOverlay@C_Map@@QAEXXZ		; C_Map::SetupOverlay
$LN34@CampaignSe:

; 1012 : 	}
; 1013 : 
; 1014 : 	win=gMainHandler->FindWindow(CB_FULLMAP_WIN);

	push	6400					; 00001900H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1015 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN33@CampaignSe

; 1016 : 		SetupMover(win,MAP_POP,MapMgrMoveCB);

	push	OFFSET ?MapMgrMoveCB@@YAXJFPAVC_Base@@@Z ; MapMgrMoveCB
	push	86000					; 00014ff0H
	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	call	?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ; SetupMover
	add	esp, 12					; 0000000cH
$LN33@CampaignSe:

; 1017 : 
; 1018 : 	win=gMainHandler->FindWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1019 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN32@CampaignSe

; 1020 : 	{
; 1021 : 		tree=(C_TreeList*)win->FindControl(MISSION_LIST_TREE);

	push	6130					; 000017f2H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _tree$[ebp], eax

; 1022 : 		SetupGPS(tree);

	mov	edx, DWORD PTR _tree$[ebp]
	push	edx
	call	?SetupGPS@@YAXPAVC_TreeList@@@Z		; SetupGPS
	add	esp, 4
$LN32@CampaignSe:

; 1023 : 	}
; 1024 : 
; 1025 : 	win=gMainHandler->FindWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1026 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN29@CampaignSe

; 1027 : 	{
; 1028 : 		txt=(C_Text *)win->FindControl(CB_MISS_TITLE);

	push	1600013					; 00186a0dH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 1029 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN29@CampaignSe

; 1030 : 		{
; 1031 : 			ps = FalconLocalSession->GetPlayerSquadron();

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ; FalconSessionEntity::GetPlayerSquadron
	mov	DWORD PTR _ps$[ebp], eax

; 1032 : 			if(ps)

	cmp	DWORD PTR _ps$[ebp], 0
	je	SHORT $LN29@CampaignSe

; 1033 : 			{
; 1034 : 				_stprintf(buffer,"%s %s %s",OrdinalString(ps->GetUnitNameID()),gStringMgr->GetString(TXT_FS),gStringMgr->GetString(TXT_FRAG_ORDER));

	push	289					; 00000121H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	194					; 000000c2H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	mov	ecx, DWORD PTR _ps$[ebp]
	call	?GetUnitNameID@UnitClass@@QAEHXZ	; UnitClass::GetUnitNameID
	push	eax
	call	?OrdinalString@@YAPADJ@Z		; OrdinalString
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_08EPEHIMMI@?$CFs?5?$CFs?5?$CFs?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H

; 1035 : 				txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx
$LN29@CampaignSe:

; 1036 : 			}
; 1037 : 		}
; 1038 : 	}
; 1039 : 	win=gMainHandler->FindWindow(CB_MAIN_SCREEN);

	push	6000					; 00001770H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1040 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN25@CampaignSe

; 1041 : 	{
; 1042 : 		FalconLocalSession->SetPlayerFlight(NULL);

	push	0
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?SetPlayerFlight@FalconSessionEntity@@QAEXPAVFlightClass@@@Z ; FalconSessionEntity::SetPlayerFlight

; 1043 : 		btn=(C_Button*)win->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 1044 : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN25@CampaignSe

; 1045 : 		{
; 1046 : 			if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN26@CampaignSe

; 1047 : 				btn->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax

; 1048 : 			else

	jmp	SHORT $LN25@CampaignSe
$LN26@CampaignSe:

; 1049 : 				btn->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN25@CampaignSe:

; 1050 : 		}
; 1051 : 	}
; 1052 : 
; 1053 : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1054 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN23@CampaignSe

; 1055 : 	{
; 1056 : 		bmp=(C_Bitmap*)win->FindControl(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 1057 : 		if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN23@CampaignSe

; 1058 : 			bmp->SetImage(gOccupationMap);

	mov	ecx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage
$LN23@CampaignSe:

; 1059 : 	}
; 1060 : 
; 1061 : 	InitNewFlash();

	call	?InitNewFlash@@YAXXZ			; InitNewFlash

; 1062 : 	SetSingle_Comms_Ctrls();

	call	?SetSingle_Comms_Ctrls@@YAXXZ		; SetSingle_Comms_Ctrls

; 1063 : 	gSelectedFlightID=FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gSelectedFlightID@@3VVU_ID@@A+4, eax

; 1064 : 	gLoadoutFlightID=FalconNullId;

	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A, ecx
	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gLoadoutFlightID@@3VVU_ID@@A+4, edx

; 1065 : 	gActiveFlightID=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gActiveFlightID@@3VVU_ID@@A+4, ecx

; 1066 : 	gActiveWPNum=0;

	xor	edx, edx
	mov	WORD PTR ?gActiveWPNum@@3FA, dx		; gActiveWPNum

; 1067 : 	gCurrentFlightID=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, ecx

; 1068 : 	gPlayerFlightID=FalconNullId;

	mov	edx, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gPlayerFlightID@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gPlayerFlightID@@3VVU_ID@@A+4, eax

; 1069 : 	gPlayerPlane=-1;

	or	ecx, -1
	mov	WORD PTR ?gPlayerPlane@@3FA, cx		; gPlayerPlane

; 1070 : 	mcnt=0;

	mov	DWORD PTR ?mcnt@@3HA, 0			; mcnt

; 1071 : 	atocnt=0;

	mov	DWORD PTR ?atocnt@@3HA, 0		; atocnt

; 1072 : 	uintcnt=0;

	mov	DWORD PTR ?uintcnt@@3HA, 0		; uintcnt

; 1073 : 	gLastUpdateGround=0l;

	mov	DWORD PTR ?gLastUpdateGround@@3JA, 0	; gLastUpdateGround

; 1074 : 	gLastUpdateAir=0l;

	mov	DWORD PTR ?gLastUpdateAir@@3JA, 0	; gLastUpdateAir

; 1075 : 
; 1076 : 	if (gATOAll)

	cmp	DWORD PTR ?gATOAll@@3PAVC_TreeList@@A, 0 ; gATOAll
	je	SHORT $LN22@CampaignSe

; 1077 : 		gATOAll->SetMenu (0);

	push	0
	mov	edx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	mov	edx, DWORD PTR [eax+64]
	call	edx
$LN22@CampaignSe:

; 1078 : 
; 1079 : 	if (gATOPackage)

	cmp	DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A, 0 ; gATOPackage
	je	SHORT $LN21@CampaignSe

; 1080 : 		gATOPackage->SetMenu (0);

	push	0
	mov	eax, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	mov	eax, DWORD PTR [edx+64]
	call	eax
$LN21@CampaignSe:

; 1081 : 
; 1082 : 	gGps->SetTeamNo(FalconLocalSession->GetTeam()); // See ONLY what is spotted

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetTeam@FalconSessionEntity@@QAEEXZ	; FalconSessionEntity::GetTeam
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetTeamNo

; 1083 : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 1084 : 
; 1085 : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1086 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN16@CampaignSe

; 1087 : 	{
; 1088 : 		short i,j;
; 1089 : 
; 1090 : 		blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _blip$[ebp], eax

; 1091 : 		if(blip)

	cmp	DWORD PTR _blip$[ebp], 0
	je	$LN16@CampaignSe

; 1092 : 		{
; 1093 : 			for(i=0;i<8;i++)

	xor	edx, edx
	mov	WORD PTR _i$2[ebp], dx
	jmp	SHORT $LN18@CampaignSe
$LN17@CampaignSe:
	mov	ax, WORD PTR _i$2[ebp]
	add	ax, 1
	mov	WORD PTR _i$2[ebp], ax
$LN18@CampaignSe:
	movsx	ecx, WORD PTR _i$2[ebp]
	cmp	ecx, 8
	jge	$LN16@CampaignSe

; 1094 : 			{
; 1095 : 				if(TeamInfo[i] && TeamInfo[i]->flags & TEAM_ACTIVE)

	movsx	edx, WORD PTR _i$2[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4], 0
	je	$LN15@CampaignSe
	movsx	eax, WORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4]
	movsx	edx, WORD PTR [ecx+350]
	and	edx, 1
	je	SHORT $LN15@CampaignSe

; 1096 : 				{
; 1097 : 					for(j=0;j<8;j++)

	xor	eax, eax
	mov	WORD PTR _j$3[ebp], ax
	jmp	SHORT $LN14@CampaignSe
$LN13@CampaignSe:
	mov	cx, WORD PTR _j$3[ebp]
	add	cx, 1
	mov	WORD PTR _j$3[ebp], cx
$LN14@CampaignSe:
	movsx	edx, WORD PTR _j$3[ebp]
	cmp	edx, 8
	jge	SHORT $LN12@CampaignSe

; 1098 : 						blip->SetImage(BLIP_IDS[TeamInfo[i]->GetColor()][j],static_cast<uchar>(i),static_cast<uchar>(j));

	movzx	eax, BYTE PTR _j$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$2[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$2[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[edx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	shl	eax, 5
	movsx	ecx, WORD PTR _j$3[ebp]
	mov	edx, DWORD PTR ?BLIP_IDS@@3PAY07JA[eax+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?SetImage@C_Blip@@QAEXJEE@Z		; C_Blip::SetImage
	jmp	SHORT $LN13@CampaignSe
$LN12@CampaignSe:

; 1099 : 				}
; 1100 : 				else

	jmp	SHORT $LN8@CampaignSe
$LN15@CampaignSe:

; 1101 : 				{
; 1102 : 					for(j=0;j<8;j++)

	xor	eax, eax
	mov	WORD PTR _j$3[ebp], ax
	jmp	SHORT $LN10@CampaignSe
$LN9@CampaignSe:
	mov	cx, WORD PTR _j$3[ebp]
	add	cx, 1
	mov	WORD PTR _j$3[ebp], cx
$LN10@CampaignSe:
	movsx	edx, WORD PTR _j$3[ebp]
	cmp	edx, 8
	jge	SHORT $LN8@CampaignSe

; 1103 : 						blip->SetImage(BLIP_IDS[0][j],static_cast<uchar>(i),static_cast<uchar>(j));

	movzx	eax, BYTE PTR _j$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$2[ebp]
	push	ecx
	mov	edx, 32					; 00000020H
	imul	edx, 0
	movsx	eax, WORD PTR _j$3[ebp]
	mov	ecx, DWORD PTR ?BLIP_IDS@@3PAY07JA[edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?SetImage@C_Blip@@QAEXJEE@Z		; C_Blip::SetImage
	jmp	SHORT $LN9@CampaignSe
$LN8@CampaignSe:

; 1104 : 				}
; 1105 : 			}

	jmp	$LN17@CampaignSe
$LN16@CampaignSe:

; 1106 : 		}
; 1107 : 	}
; 1108 : 
; 1109 : 	RefreshEventList();

	call	?RefreshEventList@@YAXXZ		; RefreshEventList

; 1110 : 	RefreshMapEventList(CP_SUA, 0);

	push	0
	push	6012					; 0000177cH
	call	?RefreshMapEventList@@YAXJJ@Z		; RefreshMapEventList
	add	esp, 8

; 1111 : 
; 1112 : 	// Now finally startup up the Campaign loop
; 1113 : 	// 2002-01-03 M.N. 
; 1114 : 	// If we have a local game, so we are host in a multiplayer environment and start a new campaign, 
; 1115 : 	// stop the time and let the camp priorities window pop up (in CAMPUI/CampJoin.cpp)
; 1116 : 
; 1117 : 	if (FalconLocalGame->IsLocal() &&
; 1118 : 	(strcmp(gUI_CampaignFile,"save0") == 0 || strcmp(gUI_CampaignFile,"save1") == 0 || strcmp(gUI_CampaignFile,"save2") == 0) &&
; 1119 : 	 campaignStart) // fixes clock being set to "STOP" after a campaign mission

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN37@CampaignSe
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv328[ebp], eax
	jmp	SHORT $LN38@CampaignSe
$LN37@CampaignSe:
	mov	DWORD PTR tv328[ebp], 0
$LN38@CampaignSe:
	mov	ecx, DWORD PTR tv328[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@CampaignSe
	push	OFFSET ??_C@_05LINHLPLG@save0?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@CampaignSe
	push	OFFSET ??_C@_05KBMMIOPH@save1?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@CampaignSe
	push	OFFSET ??_C@_05IKOBNNDE@save2?$AA@
	push	OFFSET ?gUI_CampaignFile@@3PADA		; gUI_CampaignFile
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@CampaignSe
$LN6@CampaignSe:
	movzx	ecx, BYTE PTR ?campaignStart@@3_NA	; campaignStart
	test	ecx, ecx
	je	SHORT $LN7@CampaignSe

; 1120 :  	{
; 1121 : 		SetTimeCompression(0);

	push	0
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 1122 : 		InitTimeCompressionBox(0);

	push	0
	call	?InitTimeCompressionBox@@YAXJ@Z		; InitTimeCompressionBox
	add	esp, 4

; 1123 : 	}
; 1124 : 	else 

	jmp	SHORT $LN5@CampaignSe
$LN7@CampaignSe:

; 1125 : 	{
; 1126 : 		SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 1127 : 	//	UpdateRemoteCompression();	done by InitTimeCompressionBox
; 1128 : 		InitTimeCompressionBox(1);

	push	1
	call	?InitTimeCompressionBox@@YAXJ@Z		; InitTimeCompressionBox
	add	esp, 4
$LN5@CampaignSe:

; 1129 : 	}
; 1130 : 
; 1131 : 	if(CampaignLastGroup)

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
	je	$LN2@CampaignSe

; 1132 : 	{
; 1133 : 		win=gMainHandler->FindWindow(DEBRIEF_WIN);

	push	17000					; 00004268H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1134 : 		// KCK: Added the check for a pilot list so that we don't debrief after a
; 1135 : 		// discarded mission
; 1136 : 		if(win && TheCampaign.MissionEvaluator && TheCampaign.MissionEvaluator->flight_data)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CampaignSe
	cmp	DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324, 0
	je	SHORT $LN2@CampaignSe
	mov	edx, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+324
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN2@CampaignSe

; 1137 : 		{
; 1138 : 			BuildCampDebrief(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	call	?BuildCampDebrief@@YAXPAVC_Window@@@Z	; BuildCampDebrief
	add	esp, 4

; 1139 : 			gMainHandler->EnableWindowGroup(win->GetGroup());

	mov	ecx, DWORD PTR _win$[ebp]
	call	?GetGroup@C_Window@@QAEJXZ		; C_Window::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1140 : 			// JPO - attempt to add handlers for these
; 1141 : 			C_Button *ctrl=(C_Button*)win->FindControl(BRIEF_PRINT);

	push	15003					; 00003a9bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$1[ebp], eax

; 1142 : 			if (ctrl) 

	cmp	DWORD PTR _ctrl$1[ebp], 0
	je	SHORT $LN2@CampaignSe

; 1143 : 			    ctrl->SetCallback(CampDeBriefPrintCB);

	push	OFFSET ?CampDeBriefPrintCB@@YAXJFPAVC_Base@@@Z ; CampDeBriefPrintCB
	mov	ecx, DWORD PTR _ctrl$1[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$1[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN2@CampaignSe:

; 1144 : 		}
; 1145 : 	}
; 1146 : 
; 1147 : 	gMainHandler->AddUserCallback(CampaignListCB);

	push	OFFSET ?CampaignListCB@@YAXXZ		; CampaignListCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 1148 : 	gMainHandler->AddUserCallback(CampaignSoundEventCB);

	push	OFFSET ?CampaignSoundEventCB@@YAXXZ	; CampaignSoundEventCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 1149 : 
; 1150 : 	// Choose our next mission (default)
; 1151 : 	if (!gTimeModeServer && !g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN1@CampaignSe
	movzx	ecx, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	ecx, ecx
	jne	SHORT $LN1@CampaignSe

; 1152 : 	{
; 1153 : 		FindMissionInBriefing(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4
$LN1@CampaignSe:

; 1154 : 	}
; 1155 : 	UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 1156 : 
; 1157 : 	CheckCampaignFlyButton();

	call	?CheckCampaignFlyButton@@YAXXZ		; CheckCampaignFlyButton

; 1158 : 
; 1159 : 	TheCampaign.GetBullseyeLocation(&x,&y);

	lea	edx, DWORD PTR _y$[ebp]
	push	edx
	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetBullseyeLocation@CampaignClass@@QAEXPAF0@Z ; CampaignClass::GetBullseyeLocation

; 1160 : 	gMapMgr->SetBullsEye(x * FEET_PER_KM,(TheCampaign.TheaterSizeY-y) * FEET_PER_KM);

	movsx	ecx, WORD PTR ?TheCampaign@@3VCampaignClass@@A+88
	movsx	edx, WORD PTR _y$[ebp]
	sub	ecx, edx
	cvtsi2ss xmm0, ecx
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	movsx	eax, WORD PTR _x$[ebp]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR __real@454cffae
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetBullsEye@C_Map@@QAEXMM@Z		; C_Map::SetBullsEye

; 1161 : 	SetMapSettings();

	call	?SetMapSettings@@YAXXZ			; SetMapSettings

; 1162 : 	ReadyToPlayMovie=TRUE;

	mov	DWORD PTR ?ReadyToPlayMovie@@3HA, 1	; ReadyToPlayMovie

; 1163 : 	PlayCampaignMusic();

	call	?PlayCampaignMusic@@YAXXZ		; PlayCampaignMusic

; 1164 : 	StartMovieQ();

	call	?StartMovieQ@@YAXXZ			; StartMovieQ

; 1165 : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignSetup@@YAXXZ ENDP				; CampaignSetup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -272						; size = 4
_ebox$ = -268						; size = 4
_buffer$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CampSaveAsCB@@YAXJFPAVC_Base@@@Z PROC			; CampSaveAsCB

; 948  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 949  : 	C_Window *win;
; 950  : 	C_EditBox *ebox;
; 951  : 	_TCHAR buffer[MAX_PATH];
; 952  : 
; 953  : 	if (hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CampSaveAs

; 954  : 		return;

	jmp	$LN4@CampSaveAs
$LN3@CampSaveAs:

; 955  : 
; 956  : 	sprintf (buffer, "%s\\*.cam", FalconCampUserSaveDirectory);

	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_08HPCJGCCI@?$CFs?2?$CK?4cam?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 957  : 
; 958  : 	SetDeleteCallback(DelCamFileCB);

	push	OFFSET ?DelCamFileCB@@YAXJFPAVC_Base@@@Z ; DelCamFileCB
	call	?SetDeleteCallback@@YAXP6AXJFPAVC_Base@@@Z@Z ; SetDeleteCallback
	add	esp, 4

; 959  : 	SaveAFile(TXT_SAVE_CAMPAIGN,buffer,CampExcludeList,CampVerifySaveFileCB,CloseWindowCB,"");

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CampVerifySaveFileCB@@YAXJFPAVC_Base@@@Z ; CampVerifySaveFileCB
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	233					; 000000e9H
	call	?SaveAFile@@YAXJPADQAPADP6AXJFPAVC_Base@@@Z30@Z ; SaveAFile
	add	esp, 24					; 00000018H

; 960  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 961  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN4@CampSaveAs

; 962  : 	{
; 963  : 		ebox=(C_EditBox *)win->FindControl(FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ebox$[ebp], eax

; 964  : 		if(ebox)

	cmp	DWORD PTR _ebox$[ebp], 0
	je	$LN4@CampSaveAs

; 965  : 		{
; 966  : 			_stprintf(buffer,"%s-%s %1ld %02d %02d %02d",gStringMgr->GetString(TXT_SAVE),gStringMgr->GetString(TXT_DAY),(long)(TheCampaign.CurrentTime/(24 * 60 * 60 * VU_TICS_PER_SECOND))+1,(long)(TheCampaign.CurrentTime/(60 * 60 * VU_TICS_PER_SECOND))%24,(long)(TheCampaign.CurrentTime/(60 * VU_TICS_PER_SECOND))%60,(long)(TheCampaign.CurrentTime/(VU_TICS_PER_SECOND))%60);

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	xor	edx, edx
	mov	ecx, 3600000				; 0036ee80H
	div	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A
	xor	edx, edx
	mov	ecx, 86400000				; 05265c00H
	div	ecx
	add	eax, 1
	push	eax
	push	127					; 0000007fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	403					; 00000193H
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_0BK@GOFFMNEM@?$CFs?9?$CFs?5?$CF1ld?5?$CF02d?5?$CF02d?5?$CF02d?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 32					; 00000020H

; 967  : 			ebox->SetText(buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ebox$[ebp]
	call	?SetText@C_EditBox@@QAEXPAD@Z		; C_EditBox::SetText

; 968  : 			ebox->Refresh();

	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ebox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@CampSaveAs:

; 969  : 		}
; 970  : 	}
; 971  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampSaveAsCB@@YAXJFPAVC_Base@@@Z ENDP			; CampSaveAsCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_fp$ = -272						; size = 4
_edit_box$ = -268					; size = 4
_buffer$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampVerifySaveFileCB@@YAXJFPAVC_Base@@@Z PROC		; CampVerifySaveFileCB

; 906  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 907  : 	C_EditBox *edit_box;
; 908  : 	FILE *fp;
; 909  : 	char buffer[MAX_PATH];
; 910  : 
; 911  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN10@CampVerify

; 912  : 		return;

	jmp	$LN11@CampVerify
$LN10@CampVerify:

; 913  : 
; 914  : 	edit_box = (C_EditBox*) control->Parent_->FindControl (FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _edit_box$[ebp], eax

; 915  : 	if (edit_box)

	cmp	DWORD PTR _edit_box$[ebp], 0
	je	$LN11@CampVerify

; 916  : 	{
; 917  : 		//dpc EmptyFilenameSaveFix
; 918  : 		if (g_bEmptyFilenameFix)

	movzx	edx, BYTE PTR ?g_bEmptyFilenameFix@@3_NA ; g_bEmptyFilenameFix
	test	edx, edx
	je	SHORT $LN8@CampVerify

; 919  : 		{
; 920  : 			if (_tcslen(edit_box->GetText()) == 0)

	mov	ecx, DWORD PTR _edit_box$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@CampVerify

; 921  : 			{
; 922  : 				AreYouSure(TXT_WARNING, TXT_ENTER_FILENAME,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	467					; 000001d3H
	push	243					; 000000f3H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 923  : 				return;

	jmp	$LN11@CampVerify
$LN8@CampVerify:

; 924  : 			}
; 925  : 		}
; 926  : //end EmptyFilenameSaveFix
; 927  : 		_stprintf(buffer,"%s\\%s.cam",FalconCampUserSaveDirectory,edit_box->GetText ());

	mov	ecx, DWORD PTR _edit_box$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	push	OFFSET ??_C@_09KALBFCKF@?$CFs?2?$CFs?4cam?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H

; 928  : 		fp=fopen(buffer,"r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 929  : 		if(fp)

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN6@CampVerify

; 930  : 		{
; 931  : 			fclose(fp);

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fclose
	add	esp, 4

; 932  : 			if(CheckExclude(buffer,FalconCampUserSaveDirectory,CampExcludeList,"cam"))

	push	OFFSET ??_C@_03GOGOMMPD@cam?$AA@
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@CampVerify

; 933  : 				AreYouSure(TXT_ERROR,TXT_CANT_OVERWRITE,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	249					; 000000f9H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 934  : 			else

	jmp	SHORT $LN4@CampVerify
$LN5@CampVerify:

; 935  : 				AreYouSure(TXT_SAVE_CAMPAIGN,TXT_FILE_EXISTS,CampSaveFileCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CampSaveFileCB@@YAXJFPAVC_Base@@@Z ; CampSaveFileCB
	push	241					; 000000f1H
	push	233					; 000000e9H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H
$LN4@CampVerify:

; 936  : 		}
; 937  : 		else

	jmp	SHORT $LN11@CampVerify
$LN6@CampVerify:

; 938  : 		{
; 939  : 			if(CheckExclude(buffer,FalconCampUserSaveDirectory,CampExcludeList,"cam"))

	push	OFFSET ??_C@_03GOGOMMPD@cam?$AA@
	push	OFFSET ?CampExcludeList@@3PAPADA	; CampExcludeList
	push	OFFSET ?FalconCampUserSaveDirectory@@3PADA ; FalconCampUserSaveDirectory
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	?CheckExclude@@YAHPAD0QAPAD0@Z		; CheckExclude
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@CampVerify

; 940  : 				AreYouSure(TXT_ERROR,TXT_CANT_OVERWRITE,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	249					; 000000f9H
	push	242					; 000000f2H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 941  : 			else

	jmp	SHORT $LN11@CampVerify
$LN2@CampVerify:

; 942  : 				CampSaveFileCB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?CampSaveFileCB@@YAXJFPAVC_Base@@@Z	; CampSaveFileCB
	add	esp, 12					; 0000000cH
$LN11@CampVerify:

; 943  : 		}
; 944  : 	}
; 945  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampVerifySaveFileCB@@YAXJFPAVC_Base@@@Z ENDP		; CampVerifySaveFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_saveIP$ = -284						; size = 4
_saveIter$ = -280					; size = 4
_edit_box$ = -276					; size = 4
tv134 = -272						; size = 4
_win$ = -268						; size = 4
_buffer$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampSaveFileCB@@YAXJFPAVC_Base@@@Z PROC		; CampSaveFileCB

; 854  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 855  : 	C_Window *win;
; 856  : 	C_EditBox *edit_box;
; 857  : 	long saveIP,saveIter;
; 858  : 
; 859  : 	char buffer[MAX_PATH];
; 860  : 
; 861  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN6@CampSaveFi

; 862  : 		return;

	jmp	$LN7@CampSaveFi
$LN6@CampSaveFi:

; 863  : 
; 864  : 	win=gMainHandler->FindWindow(SAVE_WIN);

	push	500					; 000001f4H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 865  : 	if(!win)

	cmp	DWORD PTR _win$[ebp], 0
	jne	SHORT $LN5@CampSaveFi

; 866  : 		return;

	jmp	$LN7@CampSaveFi
$LN5@CampSaveFi:

; 867  : 
; 868  : 	gMainHandler->HideWindow(control->Parent_); // verify window...

	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 869  : 	gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow

; 870  : 
; 871  : 	edit_box = (C_EditBox*) win->FindControl (FILE_NAME);

	push	501					; 000001f5H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _edit_box$[ebp], eax

; 872  : 	if (edit_box)

	cmp	DWORD PTR _edit_box$[ebp], 0
	je	SHORT $LN4@CampSaveFi

; 873  : 	{
; 874  : 		_tcscpy (buffer, edit_box->GetText ());

	mov	ecx, DWORD PTR _edit_box$[ebp]
	call	?GetText@C_EditBox@@QAEPADXZ		; C_EditBox::GetText
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN4@CampSaveFi:

; 875  : 	}
; 876  : 	// Save As Campaign file
; 877  : 	if(FalconLocalGame->IsLocal())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ	; VuBin<VuSessionEntity>::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@CampSaveFi
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ; FalconSessionEntity::GetGame
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN10@CampSaveFi
$LN9@CampSaveFi:
	mov	DWORD PTR tv134[ebp], 0
$LN10@CampSaveFi:
	mov	ecx, DWORD PTR tv134[ebp]
	call	?IsLocal@VuEntity@@QBEEXZ		; VuEntity::IsLocal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@CampSaveFi

; 878  : 	{
; 879  : 		gCommsMgr->SaveStats();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SaveStats@UIComms@@QAEXXZ		; UIComms::SaveStats

; 880  : 		TheCampaign.SetCreationIter(TheCampaign.GetCreationIter()+1);

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreationIter@CampaignClass@@QAEJXZ	; CampaignClass::GetCreationIter
	add	eax, 1
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter

; 881  : 		TheCampaign.SaveCampaign(game_Campaign, buffer ,0);

	push	0
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	4
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 882  : 		if(gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN2@CampSaveFi

; 883  : 		{
; 884  : 			// Send messages to remote players with new Iter Number
; 885  : 			// So they can save their stats & update Iter in their campaign
; 886  : 			gCommsMgr->UpdateGameIter();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?UpdateGameIter@UIComms@@QAEXXZ		; UIComms::UpdateGameIter
$LN2@CampSaveFi:

; 887  : 		}
; 888  : 	}
; 889  : 	else

	jmp	$LN7@CampSaveFi
$LN3@CampSaveFi:

; 890  : 	{	// This person is making a LOCAL copy of someone elses game...
; 891  : 		// we can save His stats... but remote people will be SOL if he
; 892  : 		// tries to make this a remote game for them 
; 893  : 		saveIP=TheCampaign.GetCreatorIP();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreatorIP@CampaignClass@@QAEJXZ	; CampaignClass::GetCreatorIP
	mov	DWORD PTR _saveIP$[ebp], eax

; 894  : 		saveIter=TheCampaign.GetCreationIter();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?GetCreationIter@CampaignClass@@QAEJXZ	; CampaignClass::GetCreationIter
	mov	DWORD PTR _saveIter$[ebp], eax

; 895  : 		TheCampaign.SetCreatorIP(FalconLocalSessionId.creator_);

	mov	ecx, OFFSET ?vuLocalSession@@3VVU_ID@@A+4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreatorIP@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreatorIP

; 896  : 		TheCampaign.SetCreationIter(1);

	push	1
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter

; 897  : 
; 898  : 		gCommsMgr->SaveStats();

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?SaveStats@UIComms@@QAEXXZ		; UIComms::SaveStats

; 899  : 		TheCampaign.SaveCampaign(game_Campaign, buffer ,0);

	push	0
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	4
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SaveCampaign@CampaignClass@@QAEHW4FalconGameType@@PADH@Z ; CampaignClass::SaveCampaign

; 900  : 		TheCampaign.SetCreatorIP(saveIP);

	mov	eax, DWORD PTR _saveIP$[ebp]
	push	eax
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreatorIP@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreatorIP

; 901  : 		TheCampaign.SetCreationIter(saveIter);

	mov	ecx, DWORD PTR _saveIter$[ebp]
	push	ecx
	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?SetCreationIter@CampaignClass@@QAEXJ@Z	; CampaignClass::SetCreationIter
$LN7@CampSaveFi:

; 902  : 	}
; 903  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampSaveFileCB@@YAXJFPAVC_Base@@@Z ENDP		; CampSaveFileCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_string$ = -8196					; size = 8192
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampDeBriefPrintCB@@YAXJFPAVC_Base@@@Z PROC		; CampDeBriefPrintCB

; 845  : {

	push	ebp
	mov	ebp, esp
	mov	eax, 8196				; 00002004H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 846  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CampDeBrie

; 847  : 		return;

	jmp	SHORT $LN2@CampDeBrie
$LN1@CampDeBrie:

; 848  : 	_TCHAR string[8192];
; 849  : 	BuildCampDebrief(string);

	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	?BuildCampDebrief@@YAXPAD@Z		; BuildCampDebrief
	add	esp, 4

; 850  : 	SendStringToPrinter(string, "Debriefing");

	push	OFFSET ??_C@_0L@CHHJGCHE@Debriefing?$AA@
	lea	edx, DWORD PTR _string$[ebp]
	push	edx
	call	?SendStringToPrinter@@YAHPAD0@Z		; SendStringToPrinter
	add	esp, 8
$LN2@CampDeBrie:

; 851  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampDeBriefPrintCB@@YAXJFPAVC_Base@@@Z ENDP		; CampDeBriefPrintCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_string$ = -8196					; size = 8192
__$ArrayPad$ = -4					; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?CampBriefPrintCB@@YAXJFPAVC_Base@@@Z PROC		; CampBriefPrintCB

; 836  : {

	push	ebp
	mov	ebp, esp
	mov	eax, 8196				; 00002004H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 837  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@CampBriefP

; 838  : 		return;

	jmp	SHORT $LN2@CampBriefP
$LN1@CampBriefP:

; 839  : 	_TCHAR string[8192];
; 840  : 	BuildCampBrief(string);

	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	?BuildCampBrief@@YAXPAD@Z		; BuildCampBrief
	add	esp, 4

; 841  : 	SendStringToPrinter(string, "Briefing");

	push	OFFSET ??_C@_08HJFJOAMM@Briefing?$AA@
	lea	edx, DWORD PTR _string$[ebp]
	push	edx
	call	?SendStringToPrinter@@YAHPAD0@Z		; SendStringToPrinter
	add	esp, 8
$LN2@CampBriefP:

; 842  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?CampBriefPrintCB@@YAXJFPAVC_Base@@@Z ENDP		; CampBriefPrintCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
tv72 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_MissionTree$ = 8					; size = 4
?SetupGPS@@YAXPAVC_TreeList@@@Z PROC			; SetupGPS

; 818  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupGPS@@YAXPAVC_TreeList@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 819  : 	if(!gGps)

	cmp	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
	jne	SHORT $LN1@SetupGPS

; 820  : 	{
; 821  : 		gGps=new GlobalPositioningSystem;

	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@SetupGPS
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0GlobalPositioningSystem@@QAE@XZ	; GlobalPositioningSystem::GlobalPositioningSystem
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN5@SetupGPS
$LN4@SetupGPS:
	mov	DWORD PTR tv72[ebp], 0
$LN5@SetupGPS:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, ecx ; gGps

; 822  : 		gGps->Setup();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Setup@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Setup
$LN1@SetupGPS:

; 823  : 	}
; 824  : 	gGps->SetMap(gMapMgr);

	mov	edx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetMap@GlobalPositioningSystem@@QAEXPAVC_Map@@@Z ; GlobalPositioningSystem::SetMap

; 825  : 	gGps->SetMissionTree(MissionTree);

	mov	eax, DWORD PTR _MissionTree$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetMissionTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z ; GlobalPositioningSystem::SetMissionTree

; 826  : 	gGps->SetATOTree(gATOAll);

	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	push	ecx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetATOTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z ; GlobalPositioningSystem::SetATOTree

; 827  : 	gGps->SetOOBTree(gOOBTree);

	mov	edx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	push	edx
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetOOBTree@GlobalPositioningSystem@@QAEXPAVC_TreeList@@@Z ; GlobalPositioningSystem::SetOOBTree

; 828  : 	gGps->SetAllowed(UR_MISSION|UR_MAP);

	push	3
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetAllowed

; 829  : 	gGps->SetObjectiveMenu(OBJECTIVE_POP);

	push	18199					; 00004717H
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetObjectiveMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetObjectiveMenu

; 830  : 	gGps->SetUnitMenu(UNIT_POP);

	push	18200					; 00004718H
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetUnitMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetUnitMenu

; 831  : 	gGps->SetMissionMenu(0); // Don't know what these are yet

	push	0
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetMissionMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetMissionMenu

; 832  : 	gGps->SetSquadronMenu(UNIT_POP); // Don't know what these are yet

	push	18200					; 00004718H
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetSquadronMenu@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetSquadronMenu

; 833  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupGPS@@YAXPAVC_TreeList@@@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupGPS@@YAXPAVC_TreeList@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupGPS@@YAXPAVC_TreeList@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupGPS@@YAXPAVC_TreeList@@@Z ENDP			; SetupGPS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -40						; size = 4
_win$ = -36						; size = 4
tv72 = -32						; size = 4
$T3 = -28						; size = 4
_j$ = -24						; size = 4
_idx$ = -20						; size = 4
_i$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_noawacsmap$ = 8					; size = 1
?SetupMapMgr@@YAX_N@Z PROC				; SetupMapMgr

; 770  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupMapMgr@@YAX_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 771  : 	long i,j,idx;
; 772  : 	C_Window *win;
; 773  : 
; 774  : 	if(!gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	jne	$LN8@SetupMapMg

; 775  : 	{
; 776  : 		gMapMgr=new C_Map;

	push	1160					; 00000488H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN18@SetupMapMg
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Map@@QAE@XZ			; C_Map::C_Map
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN19@SetupMapMg
$LN18@SetupMapMg:
	mov	DWORD PTR tv72[ebp], 0
$LN19@SetupMapMg:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, ecx	; gMapMgr

; 777  : 		gMapMgr->SetMapCenter(1536/2,2048/2);

	push	1024					; 00000400H
	push	768					; 00000300H
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetMapCenter@C_Map@@QAEXJJ@Z		; C_Map::SetMapCenter

; 778  : // 2002-01-30 MN special AWACS map background, e.g. black with country outlines
; 779  : // 2002-03-06 MN don't display Awacsmap in TE edit mode
; 780  : 		if(g_bAWACSSupport && g_bAWACSBackground && !noawacsmap)

	movzx	edx, BYTE PTR ?g_bAWACSSupport@@3_NA	; g_bAWACSSupport
	test	edx, edx
	je	SHORT $LN14@SetupMapMg
	movzx	eax, BYTE PTR ?g_bAWACSBackground@@3_NA	; g_bAWACSBackground
	test	eax, eax
	je	SHORT $LN14@SetupMapMg
	movzx	ecx, BYTE PTR _noawacsmap$[ebp]
	test	ecx, ecx
	jne	SHORT $LN14@SetupMapMg

; 781  : 		{
; 782  : 			if(gImageMgr->GetImage(BIG_AWACS_MAP_ID))

	push	1600015					; 00186a0fH
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	test	eax, eax
	je	SHORT $LN13@SetupMapMg

; 783  : 				gMapMgr->SetMapImage(BIG_AWACS_MAP_ID);

	push	1600015					; 00186a0fH
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetMapImage@C_Map@@QAEXJ@Z		; C_Map::SetMapImage

; 784  : 			else 

	jmp	SHORT $LN12@SetupMapMg
$LN13@SetupMapMg:

; 785  : 				gMapMgr->SetMapImage(BIG_MAP_ID);

	push	1600010					; 00186a0aH
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetMapImage@C_Map@@QAEXJ@Z		; C_Map::SetMapImage
$LN12@SetupMapMg:

; 786  : 		}
; 787  : 		else

	jmp	SHORT $LN11@SetupMapMg
$LN14@SetupMapMg:

; 788  : 			gMapMgr->SetMapImage(BIG_MAP_ID);

	push	1600010					; 00186a0aH
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetMapImage@C_Map@@QAEXJ@Z		; C_Map::SetMapImage
$LN11@SetupMapMg:

; 789  : 		gMapMgr->SetZoomLevel(1);

	push	1
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetZoomLevel@C_Map@@QAEXF@Z		; C_Map::SetZoomLevel

; 790  : 		gMapMgr->SetTeamFlags(0,_MAP_OBJECTIVES_|_MAP_UNITS_);

	push	50331648				; 03000000H
	push	0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetTeamFlags@C_Map@@QAEXJJ@Z		; C_Map::SetTeamFlags

; 791  : 		gMapMgr->SetLogRanges(0.0f,0.0f,740.0f,70.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@428c0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44390000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetLogRanges@C_Map@@QAEXMMMM@Z		; C_Map::SetLogRanges

; 792  : 		gMapMgr->SetStrtRanges(0.0f,0.0f,740.0f,1000.0f);

	push	ecx
	movss	xmm0, DWORD PTR __real@447a0000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@44390000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetStrtRanges@C_Map@@QAEXMMMM@Z	; C_Map::SetStrtRanges

; 793  : 
; 794  : 		// Set Icon Image IDs (Really the C_Resmgr ID)
; 795  : 		for(i=0;i<NUM_TEAMS;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@SetupMapMg
$LN9@SetupMapMg:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@SetupMapMg:
	cmp	DWORD PTR _i$[ebp], 8
	jge	$LN8@SetupMapMg

; 796  : 		{
; 797  : 			if(TeamInfo[i] && (TeamInfo[i]->flags & TEAM_ACTIVE))

	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[eax*4], 0
	je	SHORT $LN7@SetupMapMg
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	movsx	eax, WORD PTR [edx+350]
	and	eax, 1
	je	SHORT $LN7@SetupMapMg

; 798  : 				idx=TeamInfo[i]->GetColor();

	mov	ecx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TeamInfo@@3PAPAVTeamClass@@A[ecx*4]
	call	?GetColor@TeamClass@@QAEHXZ		; TeamClass::GetColor
	mov	DWORD PTR _idx$[ebp], eax

; 799  : 			else

	jmp	SHORT $LN6@SetupMapMg
$LN7@SetupMapMg:

; 800  : 				idx=0;

	mov	DWORD PTR _idx$[ebp], 0
$LN6@SetupMapMg:

; 801  : 			for(j=0;j<8;j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN5@SetupMapMg
$LN4@SetupMapMg:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN5@SetupMapMg:
	cmp	DWORD PTR _j$[ebp], 8
	jge	SHORT $LN3@SetupMapMg

; 802  : 			{
; 803  : 				gMapMgr->SetAirIcons(i,j,TeamFlightColorIconIDs[idx][j][0],TeamFlightColorIconIDs[idx][j][1]);

	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _j$[ebp]
	lea	edx, DWORD PTR ?TeamFlightColorIconIDs@@3PAY171JA[eax+ecx*8]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR [edx+eax]
	push	ecx
	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 6
	mov	eax, DWORD PTR _j$[ebp]
	lea	ecx, DWORD PTR ?TeamFlightColorIconIDs@@3PAY171JA[edx+eax*8]
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR [ecx+edx]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetAirIcons@C_Map@@QAEXJJJJ@Z		; C_Map::SetAirIcons

; 804  : 			}

	jmp	SHORT $LN4@SetupMapMg
$LN3@SetupMapMg:

; 805  : 			gMapMgr->SetArmyIcons(i,TeamColorIconIDs[idx][0],TeamColorIconIDs[idx][1]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	edx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[eax+ecx*8]
	push	edx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	edx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[eax+ecx*8]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetArmyIcons@C_Map@@QAEXJJJ@Z		; C_Map::SetArmyIcons

; 806  : 			gMapMgr->SetNavyIcons(i,TeamColorIconIDs[idx][0],TeamColorIconIDs[idx][1]);

	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _idx$[ebp]
	mov	eax, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[ecx+edx*8]
	push	eax
	mov	ecx, 4
	imul	ecx, 0
	mov	edx, DWORD PTR _idx$[ebp]
	mov	eax, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[ecx+edx*8]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetNavyIcons@C_Map@@QAEXJJJ@Z		; C_Map::SetNavyIcons

; 807  : 			gMapMgr->SetObjectiveIcons(i,TeamColorIconIDs[idx][0],TeamColorIconIDs[idx][1]);

	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[edx+eax*8]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR ?TeamColorIconIDs@@3PAY01JA[edx+eax*8]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetObjectiveIcons@C_Map@@QAEXJJJ@Z	; C_Map::SetObjectiveIcons

; 808  : 		}

	jmp	$LN9@SetupMapMg
$LN8@SetupMapMg:

; 809  : 	}
; 810  : 	if(TheCampaign.Flags & CAMP_TACTICAL_EDIT)

	mov	eax, DWORD PTR ?TheCampaign@@3VCampaignClass@@A+64
	and	eax, 524288				; 00080000H
	je	SHORT $LN2@SetupMapMg

; 811  : 		win=gMainHandler->FindWindow(MB_CSECT_WIN);

	push	13620					; 00003534H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 812  : 	else

	jmp	SHORT $LN1@SetupMapMg
$LN2@SetupMapMg:

; 813  : 		win=gMainHandler->FindWindow(CSECT_WIN);

	push	13010					; 000032d2H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax
$LN1@SetupMapMg:

; 814  : 	gMapMgr->SetWPZWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?SetWPZWindow@C_Map@@QAEXPAVC_Window@@@Z ; C_Map::SetWPZWindow

; 815  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupMapMgr@@YAX_N@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupMapMgr@@YAX_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupMapMgr@@YAX_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupMapMgr@@YAX_N@Z ENDP				; SetupMapMgr
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv216 = -24						; size = 4
$T3 = -20						; size = 4
_mover$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_win$ = 8						; size = 4
_MoverMenu$ = 12					; size = 4
_callback$ = 16						; size = 4
?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z PROC ; SetupMover

; 744  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 745  : 	C_MapMover *mover;
; 746  : 
; 747  : 	mover=(C_MapMover *)win->FindControl(MAP_MOVER);

	push	1600009					; 00186a09H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _mover$[ebp], eax

; 748  : 	if(mover)

	cmp	DWORD PTR _mover$[ebp], 0
	je	$LN2@SetupMover

; 749  : 	{
; 750  : 		mover->SetXYWH(win->ClientArea_[mover->GetClient()].left,win->ClientArea_[mover->GetClient()].top,win->ClientArea_[mover->GetClient()].right-win->ClientArea_[mover->GetClient()].left,win->ClientArea_[mover->GetClient()].bottom-win->ClientArea_[mover->GetClient()].top);

	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	shl	eax, 4
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [ecx+esi+180]
	sub	ecx, DWORD PTR [edx+eax+172]
	push	ecx
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	shl	edx, 4
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [eax+esi+176]
	sub	eax, DWORD PTR [ecx+edx+168]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax

; 751  : 		mover->SetDrawCallback(MapMgrDrawCB);

	push	OFFSET ?MapMgrDrawCB@@YAXJFPAVC_Base@@@Z ; MapMgrDrawCB
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_MapMover::SetDrawCallback

; 752  : 		mover->SetFlagBitOn(C_BIT_ABSOLUTE);

	push	262144					; 00040000H
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 753  : 		mover->SetCallback(callback);

	mov	ecx, DWORD PTR _callback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 754  : 		mover->SetMenu(MoverMenu);

	mov	eax, DWORD PTR _MoverMenu$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 755  : 	}
; 756  : 	else

	jmp	$LN3@SetupMover
$LN2@SetupMover:

; 757  : 	{
; 758  : 		mover=new C_MapMover;

	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@SetupMover
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_MapMover@@QAE@XZ			; C_MapMover::C_MapMover
	mov	DWORD PTR tv216[ebp], eax
	jmp	SHORT $LN6@SetupMover
$LN5@SetupMover:
	mov	DWORD PTR tv216[ebp], 0
$LN6@SetupMover:
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _mover$[ebp], edx

; 759  : 		mover->Setup(MAP_MOVER,0);

	push	0
	push	1600009					; 00186a09H
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?Setup@C_MapMover@@QAEXJF@Z		; C_MapMover::Setup

; 760  : 		mover->SetXYWH(win->ClientArea_[mover->GetClient()].left,win->ClientArea_[mover->GetClient()].top,win->ClientArea_[mover->GetClient()].right-win->ClientArea_[mover->GetClient()].left,win->ClientArea_[mover->GetClient()].bottom-win->ClientArea_[mover->GetClient()].top);

	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	cwde
	shl	eax, 4
	mov	ecx, DWORD PTR _win$[ebp]
	mov	edx, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [ecx+esi+180]
	sub	ecx, DWORD PTR [edx+eax+172]
	push	ecx
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	esi, ax
	shl	esi, 4
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	edx, ax
	shl	edx, 4
	mov	eax, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [eax+esi+176]
	sub	eax, DWORD PTR [ecx+edx+168]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+172]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	shl	ecx, 4
	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+ecx+168]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax

; 761  : 		mover->SetDrawCallback(MapMgrDrawCB);

	push	OFFSET ?MapMgrDrawCB@@YAXJFPAVC_Base@@@Z ; MapMgrDrawCB
	mov	ecx, DWORD PTR _mover$[ebp]
	call	?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_MapMover::SetDrawCallback

; 762  : 		mover->SetFlagBitOn(C_BIT_ABSOLUTE);

	push	262144					; 00040000H
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 763  : 		mover->SetCallback(callback);

	mov	ecx, DWORD PTR _callback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 764  : 		mover->SetMenu(MoverMenu);

	mov	eax, DWORD PTR _MoverMenu$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mover$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax

; 765  : 		win->AddControl(mover);

	mov	ecx, DWORD PTR _mover$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN3@SetupMover:

; 766  : 	}
; 767  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetupMover@@YAXPAVC_Window@@JP6AXJFPAVC_Base@@@Z@Z ENDP ; SetupMover
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
?PlayAmbientSound@@YAXXZ PROC				; PlayAmbientSound

; 740  : {

	push	ebp
	mov	ebp, esp

; 741  : }

	pop	ebp
	ret	0
?PlayAmbientSound@@YAXXZ ENDP				; PlayAmbientSound
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 8
$T2 = -16						; size = 8
$T3 = -8						; size = 8
_f$ = 8							; size = 4
?AircraftLaunch@@YAXPAVFlightClass@@@Z PROC		; AircraftLaunch

; 730  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 731  : 	// TJL 10/26/03 Added Config variable to turn off this sound
; 732  : 	if(f && gMainHandler && FalconLocalSession->GetPlayerSquadronID() && g_bTakeoffSound)

	cmp	DWORD PTR _f$[ebp], 0
	je	SHORT $LN3@AircraftLa
	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN3@AircraftLa
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	ecx, eax
	call	??BVU_ID@@QBEKXZ			; VU_ID::operator unsigned long
	test	eax, eax
	je	SHORT $LN3@AircraftLa
	movzx	ecx, BYTE PTR ?g_bTakeoffSound@@3_NA	; g_bTakeoffSound
	test	ecx, ecx
	je	SHORT $LN3@AircraftLa

; 733  : 	{
; 734  : 		if(f->GetUnitSquadronID() == FalconLocalSession->GetPlayerSquadronID())

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR [edx+700]
	call	eax
	mov	ecx, eax
	call	??8VU_ID@@QBE_NABV0@@Z			; VU_ID::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@AircraftLa

; 735  : 			CampEventSoundID=SND_TAKEOFF;

	mov	DWORD PTR ?CampEventSoundID@@3JA, 500023 ; CampEventSoundID, 0007a137H
$LN3@AircraftLa:

; 736  : 	}
; 737  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AircraftLaunch@@YAXPAVFlightClass@@@Z ENDP		; AircraftLaunch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$1 = -8						; size = 4
_bmp$2 = -4						; size = 4
?UI_UpdateOccupationMap@@YAXXZ PROC			; UI_UpdateOccupationMap

; 704  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 705  : 	if(gOccupationMap && gMainHandler)

	cmp	DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A, 0 ; gOccupationMap
	je	$LN6@UI_UpdateO
	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	$LN6@UI_UpdateO

; 706  : 	{
; 707  : 		C_Window *win;
; 708  : 		C_Bitmap *bmp;
; 709  : 
; 710  : 		MakeOccupationMap(gOccupationMap);

	mov	eax, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	eax
	call	?MakeOccupationMap@@YAXPAVIMAGE_RSC@@@Z	; MakeOccupationMap
	add	esp, 4

; 711  : 
; 712  : 		win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$1[ebp], eax

; 713  : 		if(win)

	cmp	DWORD PTR _win$1[ebp], 0
	je	SHORT $LN4@UI_UpdateO

; 714  : 		{
; 715  : 			bmp=(C_Bitmap*)win->FindControl(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR _win$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$2[ebp], eax

; 716  : 			if(bmp)

	cmp	DWORD PTR _bmp$2[ebp], 0
	je	SHORT $LN4@UI_UpdateO

; 717  : 				bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$2[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN4@UI_UpdateO:

; 718  : 		}
; 719  : 		win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$1[ebp], eax

; 720  : 		if(win)

	cmp	DWORD PTR _win$1[ebp], 0
	je	SHORT $LN6@UI_UpdateO

; 721  : 		{
; 722  : 			bmp=(C_Bitmap*)win->FindControl(TAC_OVERLAY);

	push	40082					; 00009c92H
	mov	ecx, DWORD PTR _win$1[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$2[ebp], eax

; 723  : 			if(bmp)

	cmp	DWORD PTR _bmp$2[ebp], 0
	je	SHORT $LN6@UI_UpdateO

; 724  : 				bmp->Refresh();

	mov	ecx, DWORD PTR _bmp$2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _bmp$2[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@UI_UpdateO:

; 725  : 		}
; 726  : 	}
; 727  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_UpdateOccupationMap@@YAXXZ ENDP			; UI_UpdateOccupationMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_ID$ = 8						; size = 4
_timestamp$ = 12					; size = 4
_Description$ = 16					; size = 4
?UI_AddMovieToList@@YAXJJPAD@Z PROC			; UI_AddMovieToList

; 690  : {

	push	ebp
	mov	ebp, esp

; 691  : 	if(MovieCount < MOVIE_Q_SIZE)

	cmp	DWORD PTR ?MovieCount@@3JA, 15		; MovieCount, 0000000fH
	jge	SHORT $LN2@UI_AddMovi

; 692  : 	{
; 693  : 		MovieQTime[MovieCount]=timestamp;

	mov	eax, DWORD PTR ?MovieCount@@3JA		; MovieCount
	mov	ecx, DWORD PTR _timestamp$[ebp]
	mov	DWORD PTR ?MovieQTime@@3PAJA[eax*4], ecx

; 694  : 		MovieQ[MovieCount]=ID;

	mov	edx, DWORD PTR ?MovieCount@@3JA		; MovieCount
	mov	eax, DWORD PTR _ID$[ebp]
	mov	DWORD PTR ?MovieQ@@3PAJA[edx*4], eax

; 695  : 		_tcsnccpy(MovieQDesc[MovieCount],Description,79);

	push	79					; 0000004fH
	mov	ecx, DWORD PTR _Description$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?MovieCount@@3JA		; MovieCount
	imul	edx, 80					; 00000050H
	add	edx, OFFSET ?MovieQDesc@@3PAY0FA@DA	; MovieQDesc
	push	edx
	call	__tcsnccpy
	add	esp, 12					; 0000000cH

; 696  : 		MovieQDesc[MovieCount][79];
; 697  : 		MovieCount++;

	mov	eax, DWORD PTR ?MovieCount@@3JA		; MovieCount
	add	eax, 1
	mov	DWORD PTR ?MovieCount@@3JA, eax		; MovieCount
$LN2@UI_AddMovi:

; 698  : 	}
; 699  : 	if(gMainHandler && ReadyToPlayMovie)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN3@UI_AddMovi
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie
	je	SHORT $LN3@UI_AddMovi

; 700  : 		StartMovieQ();

	call	?StartMovieQ@@YAXXZ			; StartMovieQ
$LN3@UI_AddMovi:

; 701  : }

	pop	ebp
	ret	0
?UI_AddMovieToList@@YAXJJPAD@Z ENDP			; UI_AddMovieToList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_urec$1 = -12						; size = 4
_win$ = -8						; size = 4
_flight$ = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?Scramble_Intercept_CB@@YAXJFPAVC_Base@@@Z PROC		; Scramble_Intercept_CB

; 655  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 656  : 	C_Window	*win;
; 657  : 	Flight		flight = (Flight)vuDatabase->Find(gInterceptersId);

	mov	eax, DWORD PTR ?gInterceptersId@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gInterceptersId@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax

; 658  : 
; 659  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	edx, WORD PTR _hittype$[ebp]
	cmp	edx, 52					; 00000034H
	je	SHORT $LN4@Scramble_I

; 660  : 		return;

	jmp	$LN5@Scramble_I
$LN4@Scramble_I:

; 661  : 
; 662  : 	// Try to find the correct list item
; 663  : 	if (flight)

	cmp	DWORD PTR _flight$[ebp], 0
	je	$LN3@Scramble_I

; 664  : 		{
; 665  : 		UI_Refresher	*urec;
; 666  : 
; 667  : 		urec = FindMissionItem(flight);

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?FindMissionItem@@YAPAVUI_Refresher@@PAVFlightClass@@@Z ; FindMissionItem
	add	esp, 4
	mov	DWORD PTR _urec$1[ebp], eax

; 668  : 		if (urec)

	cmp	DWORD PTR _urec$1[ebp], 0
	je	SHORT $LN3@Scramble_I

; 669  : 			{
; 670  : 			// Update this item
; 671  : //			if(urec->Mission_)
; 672  : //				urec->RemoveMission();
; 673  : //			urec->AddMission(flight);
; 674  : 			//... renumber... or set final
; 675  : 			RequestACSlot(flight, 0, static_cast<uchar>(flight->GetAdjustedAircraftSlot(0)), 0, 0, 1);

	push	1
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	call	?GetAdjustedAircraftSlot@FlightClass@@QAEHH@Z ; FlightClass::GetAdjustedAircraftSlot
	push	eax
	push	0
	mov	ecx, DWORD PTR _flight$[ebp]
	push	ecx
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H

; 676  : 			gCurrentFlightID=gInterceptersId;

	mov	edx, DWORD PTR ?gInterceptersId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, edx
	mov	eax, DWORD PTR ?gInterceptersId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, eax

; 677  : 			UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4

; 678  : 			// Close the waiting screen, if we're there.
; 679  : 			win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 680  : 			if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@Scramble_I

; 681  : 				gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@Scramble_I:

; 682  : 			gOldCompressionRatio = 1;

	mov	DWORD PTR ?gOldCompressionRatio@@3KA, 1	; gOldCompressionRatio
$LN3@Scramble_I:

; 683  : 			}
; 684  : 		}
; 685  : 
; 686  : 	Cancel_Scramble_CB(ID,hittype,control);

	mov	edx, DWORD PTR _control$[ebp]
	push	edx
	movzx	eax, WORD PTR _hittype$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ID$[ebp]
	push	ecx
	call	?Cancel_Scramble_CB@@YAXJFPAVC_Base@@@Z	; Cancel_Scramble_CB
	add	esp, 12					; 0000000cH
$LN5@Scramble_I:

; 687  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Scramble_Intercept_CB@@YAXJFPAVC_Base@@@Z ENDP		; Scramble_Intercept_CB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?UIScramblePlayerFlight@@YAXXZ PROC			; UIScramblePlayerFlight

; 586  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 587  : 	C_Window *win;
; 588  : 
; 589  : 	if(!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN4@UIScramble

; 590  : 		return;

	jmp	$LN5@UIScramble
$LN4@UIScramble:

; 591  : 
; 592  : 	gSoundMgr->PlaySound(500017); // Airraid sound?

	push	500017					; 0007a131H
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?PlaySoundA@C_Sound@@QAEHJ@Z		; C_Sound::PlaySoundA

; 593  : 	CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 594  : 	if (gCompressTillTime)

	cmp	DWORD PTR ?gCompressTillTime@@3KA, 0	; gCompressTillTime
	je	SHORT $LN3@UIScramble

; 595  : 		{
; 596  : 		gOldCompressTillTime = gCompressTillTime;

	mov	eax, DWORD PTR ?gCompressTillTime@@3KA	; gCompressTillTime
	mov	DWORD PTR ?gOldCompressTillTime@@3KA, eax ; gOldCompressTillTime

; 597  : 		gOldCompressionRatio = 0xffffffff;//-1;

	mov	DWORD PTR ?gOldCompressionRatio@@3KA, -1 ; gOldCompressionRatio

; 598  : 		gCompressTillTime = 0;

	mov	DWORD PTR ?gCompressTillTime@@3KA, 0	; gCompressTillTime

; 599  : 		}
; 600  : 	else

	jmp	SHORT $LN2@UIScramble
$LN3@UIScramble:

; 601  : 		{
; 602  : 		gOldCompressTillTime = 0;

	mov	DWORD PTR ?gOldCompressTillTime@@3KA, 0	; gOldCompressTillTime

; 603  : 		gOldCompressionRatio = targetCompressionRatio;

	mov	ecx, DWORD PTR ?targetCompressionRatio@@3HA ; targetCompressionRatio
	mov	DWORD PTR ?gOldCompressionRatio@@3KA, ecx ; gOldCompressionRatio
$LN2@UIScramble:

; 604  : 		}
; 605  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 606  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 607  : 	CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 608  : 
; 609  : 	win=gMainHandler->FindWindow(SCRAMBLE_WIN);

	push	18600					; 000048a8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 610  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN5@UIScramble

; 611  : 	{
; 612  : 		gMainHandler->ShowWindow(win);

	mov	edx, DWORD PTR _win$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?ShowWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::ShowWindow

; 613  : 		gMainHandler->WindowToFront(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?WindowToFront@C_Handler@@QAEXPAVC_Window@@@Z ; C_Handler::WindowToFront

; 614  : 		gSoundMgr->PlaySound(CSM1);

	push	400134					; 00061b06H
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?PlaySoundA@C_Sound@@QAEHJ@Z		; C_Sound::PlaySoundA

; 615  : 		gAWWTimeout = 60000; // 60 second timeout period

	mov	DWORD PTR ?gAWWTimeout@@3HA, 60000	; gAWWTimeout, 0000ea60H

; 616  : 		gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 617  : 		gMainHandler->AddUserCallback(CloseAWWWindowTimer);

	push	OFFSET ?CloseAWWWindowTimer@@YAXXZ	; CloseAWWWindowTimer
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?AddUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::AddUserCallback

; 618  : 		gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN5@UIScramble:

; 619  : 	}
; 620  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UIScramblePlayerFlight@@YAXXZ ENDP			; UIScramblePlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?UI_HandleAircraftDestroyed@@YAXXZ PROC			; UI_HandleAircraftDestroyed

; 571  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 572  : 	C_Window *win;
; 573  : 
; 574  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 575  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 576  : 	win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 577  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@UI_HandleA

; 578  : 		gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@UI_HandleA:

; 579  : 	AreYouSure(TXT_AC_DESTROYED,TXT_YOUR_AC_DESTROYED,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	311					; 00000137H
	push	310					; 00000136H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 580  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_HandleAircraftDestroyed@@YAXXZ ENDP			; UI_HandleAircraftDestroyed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?UI_HandleFlightScrub@@YAXXZ PROC			; UI_HandleFlightScrub

; 559  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 560  : 	C_Window *win;
; 561  : 
; 562  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 563  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 564  : 	win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 565  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@UI_HandleF

; 566  : 		gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@UI_HandleF:

; 567  : 	AreYouSure(TXT_FLIGHT_CANCELED,TXT_THIS_FLIGHT_SCRUBBED,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	1999					; 000007cfH
	push	308					; 00000134H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 568  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_HandleFlightScrub@@YAXXZ ENDP			; UI_HandleFlightScrub
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?UI_HandleFlightCancel@@YAXXZ PROC			; UI_HandleFlightCancel

; 547  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 548  : 	C_Window *win;
; 549  : 
; 550  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 551  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 552  : 	win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 553  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@UI_HandleF

; 554  : 		gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN1@UI_HandleF:

; 555  : 	AreYouSure(TXT_FLIGHT_CANCELED,TXT_YOUR_FLIGHT_CANCELED,CloseWindowCB,CloseWindowCB);

	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	OFFSET ?CloseWindowCB@@YAXJFPAVC_Base@@@Z ; CloseWindowCB
	push	309					; 00000135H
	push	308					; 00000134H
	call	?AreYouSure@@YAXJJP6AXJFPAVC_Base@@@Z1@Z ; AreYouSure
	add	esp, 16					; 00000010H

; 556  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_HandleFlightCancel@@YAXXZ ENDP			; UI_HandleFlightCancel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
?UI_HandleAirbaseDestroyed@@YAXXZ PROC			; UI_HandleAirbaseDestroyed

; 536  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 537  : 	C_Window *win;
; 538  : 
; 539  : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 540  : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 541  : 	win=gMainHandler->FindWindow(CP_COUNTDOWN_WIN);

	push	6015					; 0000177fH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 542  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@UI_HandleA

; 543  : 		gMainHandler->HideWindow(win);

	mov	eax, DWORD PTR _win$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN2@UI_HandleA:

; 544  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UI_HandleAirbaseDestroyed@@YAXXZ ENDP			; UI_HandleAirbaseDestroyed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_interceptors$ = -4					; size = 4
?CloseAWWWindowTimer@@YAXXZ PROC			; CloseAWWWindowTimer

; 524  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 525  : 	gAWWTimeout -= UI_TIMER_INTERVAL;	

	mov	eax, DWORD PTR ?gAWWTimeout@@3HA	; gAWWTimeout
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?gAWWTimeout@@3HA, eax	; gAWWTimeout

; 526  : 	Flight	interceptors = (Flight) vuDatabase->Find(gInterceptersId);

	mov	ecx, DWORD PTR ?gInterceptersId@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gInterceptersId@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _interceptors$[ebp], eax

; 527  : 
; 528  : 	// KCK: Close the window on timeout, interceptor death, or interceptor takeoff
; 529  : 	if (gAWWTimeout < 0 || !interceptors) // || interceptors->Moving())

	cmp	DWORD PTR ?gAWWTimeout@@3HA, 0		; gAWWTimeout
	jl	SHORT $LN1@CloseAWWWi
	cmp	DWORD PTR _interceptors$[ebp], 0
	jne	SHORT $LN3@CloseAWWWi
$LN1@CloseAWWWi:

; 530  : 		{
; 531  : 		Cancel_Scramble_CB(0, C_TYPE_LMOUSEUP, NULL);

	push	0
	push	52					; 00000034H
	push	0
	call	?Cancel_Scramble_CB@@YAXJFPAVC_Base@@@Z	; Cancel_Scramble_CB
	add	esp, 12					; 0000000cH
$LN3@CloseAWWWi:

; 532  : 		}
; 533  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseAWWWindowTimer@@YAXXZ ENDP			; CloseAWWWindowTimer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_MovieID$ = 8						; size = 4
?ReplayUIMovie@@YAXJ@Z PROC				; ReplayUIMovie

; 511  : {

	push	ebp
	mov	ebp, esp

; 512  : 	if(gMainHandler && ReadyToPlayMovie && !MovieQInUse)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN2@ReplayUIMo
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie
	je	SHORT $LN2@ReplayUIMo
	cmp	DWORD PTR ?MovieQInUse@@3HA, 0		; MovieQInUse
	jne	SHORT $LN2@ReplayUIMo

; 513  : 	{
; 514  : 		MovieQInUse=1;

	mov	DWORD PTR ?MovieQInUse@@3HA, 1		; MovieQInUse

; 515  : 		TheCampaign.Suspend();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 516  : 		PlayUIMovie(MovieID);

	mov	eax, DWORD PTR _MovieID$[ebp]
	push	eax
	call	?PlayUIMovie@@YAXJ@Z			; PlayUIMovie
	add	esp, 4

; 517  : 		TheCampaign.Resume();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 518  : 		MovieQInUse=0;

	mov	DWORD PTR ?MovieQInUse@@3HA, 0		; MovieQInUse
$LN2@ReplayUIMo:

; 519  : 	}
; 520  : }

	pop	ebp
	ret	0
?ReplayUIMovie@@YAXJ@Z ENDP				; ReplayUIMovie
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_i$ = -4						; size = 4
?PlayUIMovieQ@@YAXXZ PROC				; PlayUIMovieQ

; 480  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 481  : 	int i;
; 482  : 	
; 483  : 	if(gMainHandler && ReadyToPlayMovie && !MovieQInUse)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	$LN8@PlayUIMovi
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie
	je	$LN8@PlayUIMovi
	cmp	DWORD PTR ?MovieQInUse@@3HA, 0		; MovieQInUse
	jne	$LN8@PlayUIMovi

; 484  : 	{
; 485  : 		MovieQInUse=1;

	mov	DWORD PTR ?MovieQInUse@@3HA, 1		; MovieQInUse
$LN6@PlayUIMovi:

; 486  : 		while(MovieCount > 0)

	cmp	DWORD PTR ?MovieCount@@3JA, 0		; MovieCount
	jle	$LN5@PlayUIMovi

; 487  : 		{
; 488  : 			TheCampaign.Suspend();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Suspend@CampaignClass@@QAEXXZ		; CampaignClass::Suspend

; 489  : 			PlayUIMovie(MovieQ[0]);

	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR ?MovieQ@@3PAJA[eax]
	push	ecx
	call	?PlayUIMovie@@YAXJ@Z			; PlayUIMovie
	add	esp, 4

; 490  : 			TheCampaign.Resume();

	mov	ecx, OFFSET ?TheCampaign@@3VCampaignClass@@A ; TheCampaign
	call	?Resume@CampaignClass@@QAEXXZ		; CampaignClass::Resume

; 491  : 			AddToNewsWindow(MovieQTime[0],MovieQDesc[0],MovieQ[0]);

	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?MovieQ@@3PAJA[edx]
	push	eax
	mov	ecx, 80					; 00000050H
	imul	ecx, 0
	add	ecx, OFFSET ?MovieQDesc@@3PAY0FA@DA	; MovieQDesc
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	eax, DWORD PTR ?MovieQTime@@3PAJA[edx]
	push	eax
	call	?AddToNewsWindow@@YAXJPADJ@Z		; AddToNewsWindow
	add	esp, 12					; 0000000cH

; 492  : 			for(i=1;i<MovieCount;i++)

	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@PlayUIMovi
$LN3@PlayUIMovi:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@PlayUIMovi:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR ?MovieCount@@3JA		; MovieCount
	jge	SHORT $LN2@PlayUIMovi

; 493  : 			{
; 494  : 				MovieQTime[i-1]=MovieQTime[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?MovieQTime@@3PAJA[ecx*4]
	mov	DWORD PTR ?MovieQTime@@3PAJA[eax*4-4], edx

; 495  : 				MovieQ[i-1]=MovieQ[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?MovieQ@@3PAJA[ecx*4]
	mov	DWORD PTR ?MovieQ@@3PAJA[eax*4-4], edx

; 496  : 				memcpy(MovieQDesc[i-1],MovieQDesc[i],80*sizeof(_TCHAR));

	push	80					; 00000050H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 80					; 00000050H
	add	eax, OFFSET ?MovieQDesc@@3PAY0FA@DA	; MovieQDesc
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	imul	ecx, 80					; 00000050H
	add	ecx, OFFSET ?MovieQDesc@@3PAY0FA@DA	; MovieQDesc
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 497  : 			}

	jmp	SHORT $LN3@PlayUIMovi
$LN2@PlayUIMovi:

; 498  : 			MovieQTime[i-1]=0;

	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?MovieQTime@@3PAJA[edx*4-4], 0

; 499  : 			MovieQ[i-1]=0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR ?MovieQ@@3PAJA[eax*4-4], 0

; 500  : 			memset(MovieQDesc[i-1],0,80*sizeof(_TCHAR));

	push	80					; 00000050H
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	imul	ecx, 80					; 00000050H
	add	ecx, OFFSET ?MovieQDesc@@3PAY0FA@DA	; MovieQDesc
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 501  : 			MovieCount--;

	mov	edx, DWORD PTR ?MovieCount@@3JA		; MovieCount
	sub	edx, 1
	mov	DWORD PTR ?MovieCount@@3JA, edx		; MovieCount

; 502  : 		}

	jmp	$LN6@PlayUIMovi
$LN5@PlayUIMovi:

; 503  : 		// KCK: When we're done playing the last movie, exit the campaign
; 504  : 		if (TheCampaign.EndgameResult)

	movzx	eax, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+93
	test	eax, eax
	je	SHORT $LN1@PlayUIMovi

; 505  : 			PostMessage(FalconDisplay.appWin,FM_CAMPAIGN_OVER,TheCampaign.EndgameResult,0); 

	push	0
	movzx	ecx, BYTE PTR ?TheCampaign@@3VCampaignClass@@A+93
	push	ecx
	push	1043					; 00000413H
	mov	edx, DWORD PTR ?FalconDisplay@@3VFalconDisplayConfiguration@@A+108
	push	edx
	call	DWORD PTR __imp__PostMessageA@16
$LN1@PlayUIMovi:

; 506  : 		MovieQInUse=0;

	mov	DWORD PTR ?MovieQInUse@@3HA, 0		; MovieQInUse
$LN8@PlayUIMovi:

; 507  : 	}
; 508  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?PlayUIMovieQ@@YAXXZ ENDP				; PlayUIMovieQ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -136						; size = 4
tv85 = -132						; size = 4
$T3 = -128						; size = 4
_win$ = -124						; size = 4
_btn$ = -120						; size = 4
_buffer$ = -116						; size = 100
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_timestamp$ = 8						; size = 4
_desc$ = 12						; size = 4
_MovieID$ = 16						; size = 4
?AddToNewsWindow@@YAXJPADJ@Z PROC			; AddToNewsWindow

; 436  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddToNewsWindow@@YAXJPADJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 437  : 	_TCHAR buffer[100];
; 438  : 	C_Window *win;
; 439  : 	C_Button *btn;
; 440  : 
; 441  : 	if(!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN4@AddToNewsW

; 442  : 		return;

	jmp	$LN5@AddToNewsW
$LN4@AddToNewsW:

; 443  : 
; 444  : 	win=gMainHandler->FindWindow(NEWS_FLASH_WIN);

	push	6450					; 00001932H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 445  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN3@AddToNewsW

; 446  : 	{
; 447  : 		_stprintf(buffer,"%02ld:%02ld  %s",(timestamp/(60*60*1000))%24,(timestamp/(60*1000))%60,desc);

	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	mov	eax, DWORD PTR _timestamp$[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR _timestamp$[ebp]
	cdq
	mov	ecx, 3600000				; 0036ee80H
	idiv	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	push	OFFSET ??_C@_0BA@EJFMANNM@?$CF02ld?3?$CF02ld?5?5?$CFs?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 448  : 		btn=new C_Button;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN7@AddToNewsW
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Button@@QAE@XZ			; C_Button::C_Button
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN8@AddToNewsW
$LN7@AddToNewsW:
	mov	DWORD PTR tv85[ebp], 0
$LN8@AddToNewsW:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _btn$[ebp], ecx

; 449  : 		btn->Setup(C_DONT_CARE,C_TYPE_NORMAL,5,MovieY);

	movsx	edx, WORD PTR ?MovieY@@3FA		; MovieY
	push	edx
	push	5
	push	25					; 00000019H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?Setup@C_Button@@QAEXJFJJ@Z		; C_Button::Setup

; 450  : 		btn->SetText(C_STATE_0,buffer);

	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 451  : 		btn->SetText(C_STATE_1,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetText@C_Button@@QAEXFPBD@Z		; C_Button::SetText

; 452  : 		btn->SetColor(C_STATE_0,0xeeeeee);

	push	15658734				; 00eeeeeeH
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 453  : 		btn->SetColor(C_STATE_1,0x00ff00);

	push	65280					; 0000ff00H
	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetColor@C_Button@@QAEXFK@Z		; C_Button::SetColor

; 454  : 		btn->SetFont(win->Font_);

	mov	edx, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax

; 455  : 		btn->SetFlagBitOn(C_BIT_USELINE);

	push	4194304					; 00400000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 456  : 		btn->SetClient(1);

	push	1
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 457  : 		btn->SetUserNumber(0,MovieID);

	mov	ecx, DWORD PTR _MovieID$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 458  : 		btn->SetCallback(StartAMovieCB);

	push	OFFSET ?StartAMovieCB@@YAXJFPAVC_Base@@@Z ; StartAMovieCB
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx

; 459  : 		btn->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 460  : 
; 461  : 		win->AddControl(btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 462  : 		win->ScanClientArea(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?ScanClientArea@C_Window@@QAEXJ@Z	; C_Window::ScanClientArea

; 463  : 		win->RefreshClient(1);

	push	1
	mov	ecx, DWORD PTR _win$[ebp]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 464  : 		MovieY=static_cast<short>(MovieY + btn->GetH()+2);

	movsx	esi, WORD PTR ?MovieY@@3FA		; MovieY
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetH@C_Base@@QAEJXZ			; C_Base::GetH
	lea	ecx, DWORD PTR [esi+eax+2]
	mov	WORD PTR ?MovieY@@3FA, cx		; MovieY
$LN3@AddToNewsW:

; 465  : 	}
; 466  : 
; 467  : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 468  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN5@AddToNewsW

; 469  : 	{
; 470  : 		btn=(C_Button*)win->FindControl(NEWS_FLASH);

	push	6451					; 00001933H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 471  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN5@AddToNewsW

; 472  : 		{
; 473  : 			btn->SetFlagBitOff(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 474  : 			btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN5@AddToNewsW:

; 475  : 		}
; 476  : 	}
; 477  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddToNewsWindow@@YAXJPADJ@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddToNewsWindow@@YAXJPADJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddToNewsWindow@@YAXJPADJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddToNewsWindow@@YAXJPADJ@Z ENDP			; AddToNewsWindow
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?InitNewFlash@@YAXXZ PROC				; InitNewFlash

; 418  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 419  : 	C_Window *win;
; 420  : 	C_Button *btn;
; 421  : 
; 422  : 	DeleteGroupList(NEWS_FLASH_WIN);

	push	6450					; 00001932H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 423  : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 424  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@InitNewFla

; 425  : 	{
; 426  : 		btn=(C_Button*)win->FindControl(NEWS_FLASH);

	push	6451					; 00001933H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 427  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@InitNewFla

; 428  : 		{
; 429  : 			btn->Refresh();

	mov	eax, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 430  : 			btn->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _btn$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN3@InitNewFla:

; 431  : 		}
; 432  : 	}
; 433  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitNewFlash@@YAXXZ ENDP				; InitNewFlash
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?StartAMovieCB@@YAXJFPAVC_Base@@@Z PROC			; StartAMovieCB

; 410  : {

	push	ebp
	mov	ebp, esp

; 411  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@StartAMovi

; 412  : 		return;

	jmp	SHORT $LN2@StartAMovi
$LN1@StartAMovi:

; 413  : 
; 414  : 	PostMessage(gMainHandler->GetAppWnd(),FM_REPLAY_UI_MOVIE,0,control->GetUserNumber(0));

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	0
	push	1068					; 0000042cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN2@StartAMovi:

; 415  : }

	pop	ebp
	ret	0
?StartAMovieCB@@YAXJFPAVC_Base@@@Z ENDP			; StartAMovieCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
?StartMovieQ@@YAXXZ PROC				; StartMovieQ

; 403  : {

	push	ebp
	mov	ebp, esp

; 404  : 	if(gMainHandler && ReadyToPlayMovie && !MovieQInUse)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN3@StartMovie
	cmp	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie
	je	SHORT $LN3@StartMovie
	cmp	DWORD PTR ?MovieQInUse@@3HA, 0		; MovieQInUse
	jne	SHORT $LN3@StartMovie

; 405  : 		if(MovieCount > 0)

	cmp	DWORD PTR ?MovieCount@@3JA, 0		; MovieCount
	jle	SHORT $LN3@StartMovie

; 406  : 			PostMessage(gMainHandler->GetAppWnd(),FM_PLAY_UI_MOVIE,0,0);

	push	0
	push	0
	push	1053					; 0000041dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ	; C_Handler::GetAppWnd
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
$LN3@StartMovie:

; 407  : }

	pop	ebp
	ret	0
?StartMovieQ@@YAXXZ ENDP				; StartMovieQ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
?UI_UpdateEventList@@YAXXZ PROC				; UI_UpdateEventList

; 397  : {

	push	ebp
	mov	ebp, esp

; 398  : 	if(gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	SHORT $LN2@UI_UpdateE

; 399  : 		NewEvents=TRUE;

	mov	DWORD PTR _NewEvents, 1
$LN2@UI_UpdateE:

; 400  : }

	pop	ebp
	ret	0
?UI_UpdateEventList@@YAXXZ ENDP				; UI_UpdateEventList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?ViewTimerAnimCB@@YAXJFPAVC_Base@@@Z PROC		; ViewTimerAnimCB

; 382  : {

	push	ebp
	mov	ebp, esp

; 383  : 	if(control->GetUserNumber(_UI95_TIMER_COUNTER_) < 1)

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	cmp	eax, 1
	jge	SHORT $LN3@ViewTimerA

; 384  : 	{
; 385  : 		if(control->GetFlags() & C_BIT_ABSOLUTE)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 262144				; 00040000H
	je	SHORT $LN2@ViewTimerA

; 386  : 		{
; 387  : 			control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 388  : 		}
; 389  : 		else

	jmp	SHORT $LN1@ViewTimerA
$LN2@ViewTimerA:

; 390  : 			control->Parent_->RefreshClient(control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN1@ViewTimerA:

; 391  : 		control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_DELAY_));

	push	4
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber
$LN3@ViewTimerA:

; 392  : 	}
; 393  : 	control->SetUserNumber(_UI95_TIMER_COUNTER_,control->GetUserNumber(_UI95_TIMER_COUNTER_)-1);

	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetUserNumber@C_Base@@QAEJJ@Z		; C_Base::GetUserNumber
	sub	eax, 1
	push	eax
	push	5
	mov	ecx, DWORD PTR _control$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 394  : }

	pop	ebp
	ret	0
?ViewTimerAnimCB@@YAXJFPAVC_Base@@@Z ENDP		; ViewTimerAnimCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_flight$ = -12						; size = 4
_playerPlane$ = -8					; size = 4
tv82 = -4						; size = 4
_ID$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z PROC		; PickCampaignPlaneCB

; 2188 : void PickCampaignPlaneCB(long ID,short hittype,C_Base *){

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2189 : 	int playerPlane;
; 2190 : 	Flight flight;
; 2191 : 
; 2192 : 	if(hittype != C_TYPE_LMOUSEUP){

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN13@PickCampai

; 2193 : 		return;

	jmp	$LN14@PickCampai
$LN13@PickCampai:

; 2194 : 	}
; 2195 : 
; 2196 : 	if ((flight=static_cast<Flight>(vuDatabase->Find(gCurrentFlightID))) == NULL){

	mov	ecx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flight$[ebp], eax
	cmp	DWORD PTR _flight$[ebp], 0
	jne	SHORT $LN12@PickCampai

; 2197 : 		return;

	jmp	$LN14@PickCampai
$LN12@PickCampai:

; 2198 : 	}
; 2199 : 
; 2200 : 	if ((gCommsMgr) && (gCommsMgr->Online ())) {

	cmp	DWORD PTR ?gCommsMgr@@3PAVUIComms@@A, 0	; gCommsMgr
	je	SHORT $LN11@PickCampai
	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	je	SHORT $LN11@PickCampai
	jmp	SHORT $LN10@PickCampai
$LN11@PickCampai:

; 2201 : 		// Don't care about restricting access when online
; 2202 : 	}
; 2203 : 	else if(GetFlightStatusID(flight) >= _MIS_EGRESS) {

	mov	eax, DWORD PTR _flight$[ebp]
	push	eax
	call	?GetFlightStatusID@@YAFPAVFlightClass@@@Z ; GetFlightStatusID
	add	esp, 4
	movsx	ecx, ax
	cmp	ecx, 4
	jl	SHORT $LN10@PickCampai

; 2204 : 		return;

	jmp	SHORT $LN14@PickCampai
$LN10@PickCampai:

; 2205 : 	}
; 2206 : 
; 2207 : 	switch(ID)

	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR tv82[ebp], edx
	mov	eax, DWORD PTR tv82[ebp]
	sub	eax, 6108				; 000017dcH
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 9
	ja	SHORT $LN2@PickCampai
	mov	ecx, DWORD PTR tv82[ebp]
	movzx	edx, BYTE PTR $LN16@PickCampai[ecx]
	jmp	DWORD PTR $LN17@PickCampai[edx*4]
$LN6@PickCampai:

; 2208 : 	{
; 2209 : 		case CB_1_1:
; 2210 : 		case CB_2_1:
; 2211 : 		case CB_3_1:
; 2212 : 		case CB_4_1:
; 2213 : 			playerPlane=0;

	mov	DWORD PTR _playerPlane$[ebp], 0

; 2214 : 			break;

	jmp	SHORT $LN7@PickCampai
$LN5@PickCampai:

; 2215 : 		case CB_2_2:
; 2216 : 		case CB_3_2:
; 2217 : 		case CB_4_2:
; 2218 : 			playerPlane=1;

	mov	DWORD PTR _playerPlane$[ebp], 1

; 2219 : 			break;

	jmp	SHORT $LN7@PickCampai
$LN4@PickCampai:

; 2220 : 		case CB_3_3:
; 2221 : 		case CB_4_3:
; 2222 : 			playerPlane=2;

	mov	DWORD PTR _playerPlane$[ebp], 2

; 2223 : 			break;

	jmp	SHORT $LN7@PickCampai
$LN3@PickCampai:

; 2224 : 		case CB_4_4:
; 2225 : 			playerPlane=3;

	mov	DWORD PTR _playerPlane$[ebp], 3

; 2226 : 			break;

	jmp	SHORT $LN7@PickCampai
$LN2@PickCampai:

; 2227 : 		default:
; 2228 : 			return;

	jmp	SHORT $LN14@PickCampai
$LN7@PickCampai:

; 2229 : 			break;
; 2230 : 	}
; 2231 : 
; 2232 : //	playerPlane = flight->GetAdjustedAircraftSlot(playerPlane);
; 2233 : 	if (!gTimeModeServer&&!g_bServer) {

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN14@PickCampai
	movzx	eax, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	eax, eax
	jne	SHORT $LN14@PickCampai

; 2234 : 		RequestACSlot(flight, 0, static_cast<uchar>(playerPlane), 0, 0, 1);

	push	1
	push	0
	push	0
	movzx	ecx, BYTE PTR _playerPlane$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _flight$[ebp]
	push	edx
	call	?RequestACSlot@@YAHPAVFlightClass@@EEEHH@Z ; RequestACSlot
	add	esp, 24					; 00000018H
$LN14@PickCampai:

; 2235 : 	}
; 2236 : }

	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@PickCampai:
	DD	$LN6@PickCampai
	DD	$LN5@PickCampai
	DD	$LN4@PickCampai
	DD	$LN3@PickCampai
$LN16@PickCampai:
	DB	0
	DB	0
	DB	1
	DB	0
	DB	1
	DB	2
	DB	0
	DB	1
	DB	2
	DB	3
?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ENDP		; PickCampaignPlaneCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenSierraHotelCB@@YAXJFPAVC_Base@@@Z PROC		; OpenSierraHotelCB

; 307  : {

	push	ebp
	mov	ebp, esp

; 308  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenSierra

; 309  : 		return;

	jmp	SHORT $LN2@OpenSierra
$LN1@OpenSierra:

; 310  : 
; 311  : 	UpdateSierraHotel();

	call	?UpdateSierraHotel@@YAXXZ		; UpdateSierraHotel

; 312  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenSierra:

; 313  : }

	pop	ebp
	ret	0
?OpenSierraHotelCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenSierraHotelCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T1 = -8						; size = 8
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?OpenSquadronWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenSquadronWindowCB

; 299  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 300  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenSquadr

; 301  : 		return;

	jmp	SHORT $LN2@OpenSquadr
$LN1@OpenSquadr:

; 302  : 
; 303  : 	SetupSquadronInfoWindow(FalconLocalSession->GetPlayerSquadronID());

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ; FalconSessionEntity::GetPlayerSquadronID
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?SetupSquadronInfoWindow@@YAXVVU_ID@@@Z	; SetupSquadronInfoWindow
	add	esp, 8
$LN2@OpenSquadr:

; 304  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenSquadronWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenSquadronWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_curtime$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenOOBWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenOOBWindowCB

; 286  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 287  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenOOBWin

; 288  : 		return;

	jmp	$LN2@OpenOOBWin
$LN1@OpenOOBWin:

; 289  : 
; 290  : 	SetCursor(gCursors[CRSR_WAIT]);

	mov	ecx, 4
	imul	ecx, 19					; 00000013H
	mov	edx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[ecx]
	push	edx
	call	DWORD PTR __imp__SetCursor@4

; 291  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 292  : 	gGps->SetAllowed(gGps->GetAllowed() | UR_OOB);

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?GetAllowed@GlobalPositioningSystem@@QAEJXZ ; GlobalPositioningSystem::GetAllowed
	or	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ; GlobalPositioningSystem::SetAllowed

; 293  : 	long curtime=GetCurrentTime();

	call	DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR _curtime$[ebp], eax

; 294  : 	gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 295  : 	MonoPrint("GPS: OOB Allow time = %1ld\n",GetCurrentTime() - curtime);

	call	DWORD PTR __imp__GetTickCount@0
	sub	eax, DWORD PTR _curtime$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@OMFOOALH@GPS?3?5OOB?5Allow?5time?5?$DN?5?$CF1ld?6?$AA@
	call	_MonoPrint
	add	esp, 8

; 296  : 	SetCursor(gCursors[CRSR_F16]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?gCursors@@3PAPAUHICON__@@A[eax]
	push	ecx
	call	DWORD PTR __imp__SetCursor@4
$LN2@OpenOOBWin:

; 297  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenOOBWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenOOBWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_btn$ = -4						; size = 4
?ActivateCampMissionSchedule@@YAXXZ PROC		; ActivateCampMissionSchedule

; 272  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 273  : 	C_Window *win;
; 274  : 	C_Button *btn;
; 275  : 
; 276  : 	win=gMainHandler->FindWindow(CB_MAIN_SCREEN);

	push	6000					; 00001770H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 277  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@ActivateCa

; 278  : 	{
; 279  : 		btn=(C_Button*)win->FindControl(MISSION_MAIN_CTRL);

	push	6002					; 00001772H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _btn$[ebp], eax

; 280  : 		if(btn)

	cmp	DWORD PTR _btn$[ebp], 0
	je	SHORT $LN3@ActivateCa

; 281  : 			OpenCampaignCB(btn->GetID(),C_TYPE_LMOUSEUP,btn);

	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	push	52					; 00000034H
	mov	ecx, DWORD PTR _btn$[ebp]
	call	?GetID@C_Base@@QAEJXZ			; C_Base::GetID
	push	eax
	call	?OpenCampaignCB@@YAXJFPAVC_Base@@@Z	; OpenCampaignCB
	add	esp, 12					; 0000000cH
$LN3@ActivateCa:

; 282  : 	}
; 283  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ActivateCampMissionSchedule@@YAXXZ ENDP		; ActivateCampMissionSchedule
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenForceLevelsWindowCB@@YAXJFPAVC_Base@@@Z PROC	; OpenForceLevelsWindowCB

; 263  : {

	push	ebp
	mov	ebp, esp

; 264  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenForceL

; 265  : 		return;

	jmp	SHORT $LN2@OpenForceL
$LN1@OpenForceL:

; 266  : 
; 267  : 	LoadForceLevelHistory();

	call	?LoadForceLevelHistory@@YAXXZ		; LoadForceLevelHistory

; 268  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenForceL:

; 269  : }

	pop	ebp
	ret	0
?OpenForceLevelsWindowCB@@YAXJFPAVC_Base@@@Z ENDP	; OpenForceLevelsWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenHistoryWindowCB@@YAXJFPAVC_Base@@@Z PROC		; OpenHistoryWindowCB

; 254  : {

	push	ebp
	mov	ebp, esp

; 255  : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@OpenHistor

; 256  : 		return;

	jmp	SHORT $LN2@OpenHistor
$LN1@OpenHistor:

; 257  : 
; 258  : 	LoadTroopMovementHistory();

	call	?LoadTroopMovementHistory@@YAXXZ	; LoadTroopMovementHistory

; 259  : 	gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup
$LN2@OpenHistor:

; 260  : }

	pop	ebp
	ret	0
?OpenHistoryWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenHistoryWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?StartCampaignCB@@YAXJFPAVC_Base@@@Z PROC		; StartCampaignCB

; 3387 : {

	push	ebp
	mov	ebp, esp

; 3388 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN1@StartCampa

; 3389 : 		return;

	jmp	SHORT $LN2@StartCampa
$LN1@StartCampa:

; 3390 : 
; 3391 : 	SetTimeCompression(1);

	push	1
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 3392 : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 3393 : 	CloseWindowCB(STARTCAMP_WIN, hittype, control);

	mov	ecx, DWORD PTR _control$[ebp]
	push	ecx
	movzx	edx, WORD PTR _hittype$[ebp]
	push	edx
	push	70205					; 0001123dH
	call	?CloseWindowCB@@YAXJFPAVC_Base@@@Z	; CloseWindowCB
	add	esp, 12					; 0000000cH
$LN2@StartCampa:

; 3394 : }

	pop	ebp
	ret	0
?StartCampaignCB@@YAXJFPAVC_Base@@@Z ENDP		; StartCampaignCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?CloseCampaignWindowCB@@YAXJFPAVC_Base@@@Z PROC		; CloseCampaignWindowCB

; 1752 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1753 : 	C_Window *win;
; 1754 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN3@CloseCampa

; 1755 : 		return;

	jmp	SHORT $LN4@CloseCampa
$LN3@CloseCampa:

; 1756 : 
; 1757 : 	if(CampaignLastGroup)

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
	je	SHORT $LN4@CloseCampa

; 1758 : 	{
; 1759 : 		gMainHandler->DisableWindowGroup(CampaignLastGroup);

	mov	ecx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 1760 : 		win=gMainHandler->FindWindow(CP_TOOLBAR);

	push	6013					; 0000177dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1761 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN1@CloseCampa

; 1762 : 			win->HideCluster(CampaignLastGroup);

	mov	edx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN1@CloseCampa:

; 1763 : 		CampaignLastGroup=0;

	mov	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
$LN4@CloseCampa:

; 1764 : 	}
; 1765 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CloseCampaignWindowCB@@YAXJFPAVC_Base@@@Z ENDP		; CloseCampaignWindowCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_remreq$ = -16						; size = 4
_color$ = -12						; size = 4
_win$ = -8						; size = 4
_lbox$ = -4						; size = 4
?UpdateRemoteCompression@@YAXXZ PROC			; UpdateRemoteCompression

; 2873 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2874 : 	C_Window *win;
; 2875 : 	C_ListBox *lbox;
; 2876 : 	long color,remreq;
; 2877 : 
; 2878 : 
; 2879 : 	if(!gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	jne	SHORT $LN16@UpdateRemo

; 2880 : 		return;

	jmp	$LN17@UpdateRemo
$LN16@UpdateRemo:

; 2881 : 
; 2882 : 	remreq=1;

	mov	DWORD PTR _remreq$[ebp], 1

; 2883 : 	if(remoteCompressionRequests & REMOTE_REQUEST_2)

	mov	eax, DWORD PTR ?remoteCompressionRequests@@3HA ; remoteCompressionRequests
	and	eax, 2
	je	SHORT $LN15@UpdateRemo

; 2884 : 		remreq=2;

	mov	DWORD PTR _remreq$[ebp], 2
	jmp	SHORT $LN14@UpdateRemo
$LN15@UpdateRemo:

; 2885 : 	else if(remoteCompressionRequests & REMOTE_REQUEST_4)

	mov	ecx, DWORD PTR ?remoteCompressionRequests@@3HA ; remoteCompressionRequests
	and	ecx, 4
	je	SHORT $LN13@UpdateRemo

; 2886 : 		remreq=4;

	mov	DWORD PTR _remreq$[ebp], 4
	jmp	SHORT $LN14@UpdateRemo
$LN13@UpdateRemo:

; 2887 : 	else if(remoteCompressionRequests & REMOTE_REQUEST_PAUSE)

	mov	edx, DWORD PTR ?remoteCompressionRequests@@3HA ; remoteCompressionRequests
	and	edx, 1
	je	SHORT $LN14@UpdateRemo

; 2888 : 		remreq=0;

	mov	DWORD PTR _remreq$[ebp], 0
$LN14@UpdateRemo:

; 2889 : 
; 2890 : 	if(!gCommsMgr->Online())

	mov	ecx, DWORD PTR ?gCommsMgr@@3PAVUIComms@@A ; gCommsMgr
	call	?Online@UIComms@@QAEHXZ			; UIComms::Online
	test	eax, eax
	jne	SHORT $LN10@UpdateRemo

; 2891 : 		color=0x00ff00;

	mov	DWORD PTR _color$[ebp], 65280		; 0000ff00H

; 2892 : 	else

	jmp	SHORT $LN9@UpdateRemo
$LN10@UpdateRemo:

; 2893 : 	{
; 2894 : 		if(targetCompressionRatio == FalconLocalSession->GetReqCompression())

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetReqCompression@FalconSessionEntity@@QBEFXZ ; FalconSessionEntity::GetReqCompression
	cwde
	cmp	DWORD PTR ?targetCompressionRatio@@3HA, eax ; targetCompressionRatio
	jne	SHORT $LN8@UpdateRemo

; 2895 : 		{
; 2896 : 			if(remreq == targetCompressionRatio)

	mov	ecx, DWORD PTR _remreq$[ebp]
	cmp	ecx, DWORD PTR ?targetCompressionRatio@@3HA ; targetCompressionRatio
	jne	SHORT $LN7@UpdateRemo

; 2897 : 				color=0x00ff00;

	mov	DWORD PTR _color$[ebp], 65280		; 0000ff00H

; 2898 : 			else

	jmp	SHORT $LN6@UpdateRemo
$LN7@UpdateRemo:

; 2899 : 				color=0x00ffff;

	mov	DWORD PTR _color$[ebp], 65535		; 0000ffffH
$LN6@UpdateRemo:

; 2900 : 		}
; 2901 : 		else

	jmp	SHORT $LN9@UpdateRemo
$LN8@UpdateRemo:

; 2902 : 			color=0x0000ff;

	mov	DWORD PTR _color$[ebp], 255		; 000000ffH
$LN9@UpdateRemo:

; 2903 : 	}
; 2904 : 
; 2905 : 	// Campaign
; 2906 : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2907 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@UpdateRemo

; 2908 : 	{
; 2909 : 		lbox=(C_ListBox*)win->FindControl(ACCELERATION);

	push	5002					; 0000138aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2910 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN4@UpdateRemo

; 2911 : 		{
; 2912 : 			lbox->SetLabelColor(color);

	mov	edx, DWORD PTR _color$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetLabelColor@C_ListBox@@QAEXK@Z	; C_ListBox::SetLabelColor

; 2913 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2914 : 			lbox->SetValue(FalconLocalSession->GetReqCompression());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetReqCompression@FalconSessionEntity@@QBEFXZ ; FalconSessionEntity::GetReqCompression
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN4@UpdateRemo:

; 2915 : 		}
; 2916 : 	}
; 2917 : 	// Taceng
; 2918 : 	win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2919 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN17@UpdateRemo

; 2920 : 	{
; 2921 : 		lbox=(C_ListBox*)win->FindControl(ACCELERATION);

	push	5002					; 0000138aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2922 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN17@UpdateRemo

; 2923 : 		{
; 2924 : 			lbox->SetLabelColor(color);

	mov	edx, DWORD PTR _color$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetLabelColor@C_ListBox@@QAEXK@Z	; C_ListBox::SetLabelColor

; 2925 : 			lbox->Refresh();

	mov	eax, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2926 : 			lbox->SetValue(FalconLocalSession->GetReqCompression());

	mov	ecx, OFFSET ?vuLocalSessionEntity@@3V?$VuBin@VVuSessionEntity@@@@A ; vuLocalSessionEntity
	call	?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ; VuBin<VuSessionEntity>::get
	mov	ecx, eax
	call	?GetReqCompression@FalconSessionEntity@@QBEFXZ ; FalconSessionEntity::GetReqCompression
	movsx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN17@UpdateRemo:

; 2927 : 		}
; 2928 : 	}
; 2929 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateRemoteCompression@@YAXXZ ENDP			; UpdateRemoteCompression
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -8						; size = 4
_lbox$ = -4						; size = 4
_compression$ = 8					; size = 4
?InitTimeCompressionBox@@YAXJ@Z PROC			; InitTimeCompressionBox

; 2932 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2933 : 	C_Window *win;
; 2934 : 	C_ListBox *lbox;
; 2935 : 
; 2936 : 	UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 2937 : 	// Campaign
; 2938 : 	win=gMainHandler->FindWindow(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2939 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN8@InitTimeCo

; 2940 : 	{
; 2941 : 		lbox=(C_ListBox*)win->FindControl(ACCELERATION);

	push	5002					; 0000138aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2942 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN8@InitTimeCo

; 2943 : 		{
; 2944 : 			if(compression)

	cmp	DWORD PTR _compression$[ebp], 0
	je	SHORT $LN6@InitTimeCo

; 2945 : 				lbox->SetValue(compression);

	mov	eax, DWORD PTR _compression$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 2946 : 			else

	jmp	SHORT $LN8@InitTimeCo
$LN6@InitTimeCo:

; 2947 : 				lbox->SetValue(ACCEL_0); // stopped

	push	45210					; 0000b09aH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN8@InitTimeCo:

; 2948 : 		}
; 2949 : 	}
; 2950 : 	// Taceng
; 2951 : 	win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2952 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN9@InitTimeCo

; 2953 : 	{
; 2954 : 		lbox=(C_ListBox*)win->FindControl(ACCELERATION);

	push	5002					; 0000138aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2955 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN9@InitTimeCo

; 2956 : 		{
; 2957 : 			if(compression)

	cmp	DWORD PTR _compression$[ebp], 0
	je	SHORT $LN2@InitTimeCo

; 2958 : 				lbox->SetValue(compression);

	mov	ecx, DWORD PTR _compression$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue

; 2959 : 			else

	jmp	SHORT $LN9@InitTimeCo
$LN2@InitTimeCo:

; 2960 : 				lbox->SetValue(ACCEL_0); // stopped

	push	45210					; 0000b09aH
	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?SetValue@C_ListBox@@QAEXJ@Z		; C_ListBox::SetValue
$LN9@InitTimeCo:

; 2961 : 		}
; 2962 : 	}
; 2963 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?InitTimeCompressionBox@@YAXJ@Z ENDP			; InitTimeCompressionBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?OpenCampaignCB@@YAXJFPAVC_Base@@@Z PROC		; OpenCampaignCB

; 1849 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1850 : 	C_Window *win;
; 1851 : 	if(hittype != C_TYPE_LMOUSEUP)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	je	SHORT $LN5@OpenCampai

; 1852 : 		return;

	jmp	$LN6@OpenCampai
$LN5@OpenCampai:

; 1853 : 
; 1854 : 	win=gMainHandler->FindWindow(CP_TOOLBAR);

	push	6013					; 0000177dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 1855 : 
; 1856 : 	if(CampaignLastGroup != 0 && CampaignLastGroup != control->GetGroup())

	cmp	DWORD PTR ?CampaignLastGroup@@3HA, 0	; CampaignLastGroup
	je	SHORT $LN4@OpenCampai
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?CampaignLastGroup@@3HA, eax	; CampaignLastGroup
	je	SHORT $LN4@OpenCampai

; 1857 : 	{
; 1858 : 		gMainHandler->DisableWindowGroup(CampaignLastGroup);

	mov	ecx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?DisableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::DisableWindowGroup

; 1859 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN4@OpenCampai

; 1860 : 			win->HideCluster(CampaignLastGroup);

	mov	edx, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?HideCluster@C_Window@@QAEXJ@Z		; C_Window::HideCluster
$LN4@OpenCampai:

; 1861 : 	}
; 1862 : 
; 1863 : 	if(CampaignLastGroup != control->GetGroup())

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	cmp	DWORD PTR ?CampaignLastGroup@@3HA, eax	; CampaignLastGroup
	je	SHORT $LN2@OpenCampai

; 1864 : 	{
; 1865 : 		gMainHandler->EnableWindowGroup(control->GetGroup());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnableWindowGroup@C_Handler@@QAEXJ@Z	; C_Handler::EnableWindowGroup

; 1866 : 		CampaignLastGroup=control->GetGroup();

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetGroup@C_Base@@QAEJXZ		; C_Base::GetGroup
	mov	DWORD PTR ?CampaignLastGroup@@3HA, eax	; CampaignLastGroup

; 1867 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@OpenCampai

; 1868 : 			win->UnHideCluster(CampaignLastGroup);

	mov	eax, DWORD PTR ?CampaignLastGroup@@3HA	; CampaignLastGroup
	push	eax
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideCluster@C_Window@@QAEXJ@Z	; C_Window::UnHideCluster
$LN2@OpenCampai:

; 1869 : 	}
; 1870 : 	CheckCampaignFlyButton();

	call	?CheckCampaignFlyButton@@YAXXZ		; CheckCampaignFlyButton
$LN6@OpenCampai:

; 1871 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OpenCampaignCB@@YAXJFPAVC_Base@@@Z ENDP		; OpenCampaignCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -272						; size = 4
_time$ = -268						; size = 4
_MaxValue$ = -264					; size = 4
tv87 = -260						; size = 4
_count$ = -256						; size = 4
$T3 = -252						; size = 4
_MinValue$ = -248					; size = 4
_lbox$ = -244						; size = 4
_end$ = -240						; size = 4
_start$ = -236						; size = 4
_StatIdx$ = -232					; size = 4
_stats$ = -228						; size = 28
_TimeID$ = -200						; size = 4
_fp$ = -196						; size = 4
_Reading$ = -192					; size = 2
_numteams$ = -188					; size = 2
_First$ = -184						; size = 2
_j$ = -180						; size = 2
_win$ = -176						; size = 4
_txt$ = -172						; size = 4
_i$ = -168						; size = 2
_teamstats$ = -164					; size = 128
_buffer$ = -36						; size = 20
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadForceLevelHistory@@YAXXZ PROC			; LoadForceLevelHistory

; 2707 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadForceLevelHistory@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2708 : 	C_Window *win;
; 2709 : 	C_Level *stats[_MAX_CATEGORIES_];
; 2710 : 	C_Text *txt;
; 2711 : 	short i,j;
; 2712 : 	short numteams;
; 2713 : 	CampaignTime time;
; 2714 : 	TeamStatusType teamstats[_LEVEL_MAX_TEAMS_];
; 2715 : 	C_ListBox *lbox;
; 2716 : 	FILE *fp;
; 2717 : 	short Reading,First=1;

	mov	eax, 1
	mov	WORD PTR _First$[ebp], ax

; 2718 : 	long MaxValue,MinValue;
; 2719 : 	long TimeID,StatIdx,count,start=0,end=0;

	mov	DWORD PTR _start$[ebp], 0
	mov	DWORD PTR _end$[ebp], 0

; 2720 : 	_TCHAR buffer[20];
; 2721 : 
; 2722 : 	DeleteGroupList(FORCE_WIN);

	push	6253					; 0000186dH
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 2723 : 
; 2724 : 	win=gMainHandler->FindWindow(FORCE_WIN);

	push	6253					; 0000186dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2725 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN37@LoadForceL

; 2726 : 	{
; 2727 : 		fp = OpenCampFile("tmp","frc","rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	OFFSET ??_C@_03NJFDAMGG@frc?$AA@
	push	OFFSET ??_C@_03FFNGDGKN@tmp?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 2728 : 		if(!fp)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN35@LoadForceL

; 2729 : 			return;

	jmp	$LN37@LoadForceL
$LN35@LoadForceL:

; 2730 : 	
; 2731 : 		for(i=0;i<_MAX_CATEGORIES_;i++)

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN34@LoadForceL
$LN33@LoadForceL:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN34@LoadForceL:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, 7
	jge	$LN32@LoadForceL

; 2732 : 		{
; 2733 : 			stats[i]=new C_Level;

	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN39@LoadForceL
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0C_Level@@QAE@XZ			; C_Level::C_Level
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN40@LoadForceL
$LN39@LoadForceL:
	mov	DWORD PTR tv87[ebp], 0
$LN40@LoadForceL:
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	movsx	edx, WORD PTR _i$[ebp]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _stats$[ebp+edx*4], eax

; 2734 : 			stats[i]->Setup(4441313+i,0);

	push	0
	movsx	ecx, WORD PTR _i$[ebp]
	add	ecx, 4441313				; 0043c4e1H
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?Setup@C_Level@@QAEXJF@Z		; C_Level::Setup

; 2735 : 			stats[i]->SetDrawArea(1,1,
; 2736 : 								static_cast<short>(win->ClientArea_[1].right-win->ClientArea_[1].left-2),
; 2737 : 								static_cast<short>(win->ClientArea_[1].bottom-win->ClientArea_[1].top-2));

	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	eax, DWORD PTR [edx+eax+180]
	sub	eax, DWORD PTR [esi+ecx+172]
	sub	eax, 2
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	mov	eax, DWORD PTR _win$[ebp]
	mov	esi, DWORD PTR _win$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+176]
	sub	ecx, DWORD PTR [esi+edx+168]
	sub	ecx, 2
	push	ecx
	push	1
	push	1
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?SetDrawArea@C_Level@@QAEXFFFF@Z	; C_Level::SetDrawArea

; 2738 : 			stats[i]->SetGroup(FrcLvlCatID[i]);

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?FrcLvlCatID@@3PAJA[eax*4]
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 2739 : 			stats[i]->SetClient(1);

	push	1
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2740 : 			stats[i]->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _stats$[ebp+ecx*4]
	movsx	eax, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2741 : 			stats[i]->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	movsx	ecx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+ecx*4]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2742 : 
; 2743 : 			for(j=0;j<_LEVEL_MAX_TEAMS_;j++)

	xor	edx, edx
	mov	WORD PTR _j$[ebp], dx
	jmp	SHORT $LN31@LoadForceL
$LN30@LoadForceL:
	mov	ax, WORD PTR _j$[ebp]
	add	ax, 1
	mov	WORD PTR _j$[ebp], ax
$LN31@LoadForceL:
	movsx	ecx, WORD PTR _j$[ebp]
	cmp	ecx, 8
	jge	SHORT $LN29@LoadForceL

; 2744 : 				stats[i]->SetTeamColor(static_cast<short>(j),FrcTeamColors[j]);

	movsx	edx, WORD PTR _j$[ebp]
	mov	eax, DWORD PTR ?FrcTeamColors@@3PAKA[edx*4]
	push	eax
	movzx	ecx, WORD PTR _j$[ebp]
	push	ecx
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?SetTeamColor@C_Level@@QAEXFK@Z		; C_Level::SetTeamColor
	jmp	SHORT $LN30@LoadForceL
$LN29@LoadForceL:

; 2745 : 		}

	jmp	$LN33@LoadForceL
$LN32@LoadForceL:

; 2746 : 
; 2747 : 		CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2748 : 		Reading=1;

	mov	eax, 1
	mov	WORD PTR _Reading$[ebp], ax

; 2749 : 		numteams=0;

	xor	ecx, ecx
	mov	WORD PTR _numteams$[ebp], cx

; 2750 : 		count=0;

	mov	DWORD PTR _count$[ebp], 0
$LN28@LoadForceL:

; 2751 : 		while(Reading)

	movsx	edx, WORD PTR _Reading$[ebp]
	test	edx, edx
	je	$LN27@LoadForceL

; 2752 : 		{
; 2753 : 			Reading=static_cast<short>(fread(&time,sizeof(CampaignTime),1,fp));

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _time$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	WORD PTR _Reading$[ebp], ax

; 2754 : 			if(Reading)

	movsx	edx, WORD PTR _Reading$[ebp]
	test	edx, edx
	je	$LN26@LoadForceL

; 2755 : 			{
; 2756 : 				count++;

	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax

; 2757 : 				TimeID=time / (VU_TICS_PER_SECOND * 60);

	mov	eax, DWORD PTR _time$[ebp]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	mov	DWORD PTR _TimeID$[ebp], eax

; 2758 : 				if(First)

	movsx	edx, WORD PTR _First$[ebp]
	test	edx, edx
	je	SHORT $LN25@LoadForceL

; 2759 : 					start = TimeID;

	mov	eax, DWORD PTR _TimeID$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN25@LoadForceL:

; 2760 : 				end = TimeID;

	mov	ecx, DWORD PTR _TimeID$[ebp]
	mov	DWORD PTR _end$[ebp], ecx

; 2761 : 
; 2762 : 				if(!fread(&numteams,sizeof(short),1,fp))

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1
	push	2
	lea	eax, DWORD PTR _numteams$[ebp]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN24@LoadForceL

; 2763 : 					MonoPrint("Error Reading Force Level\n");

	push	OFFSET ??_C@_0BL@BJCEFPAP@Error?5Reading?5Force?5Level?6?$AA@
	call	_MonoPrint
	add	esp, 4
$LN24@LoadForceL:

; 2764 : 				for (i=0; i<numteams; i++)

	xor	ecx, ecx
	mov	WORD PTR _i$[ebp], cx
	jmp	SHORT $LN23@LoadForceL
$LN22@LoadForceL:
	mov	dx, WORD PTR _i$[ebp]
	add	dx, 1
	mov	WORD PTR _i$[ebp], dx
$LN23@LoadForceL:
	movsx	eax, WORD PTR _i$[ebp]
	movsx	ecx, WORD PTR _numteams$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN21@LoadForceL

; 2765 : 				{
; 2766 : 					if(!fread(&teamstats[i],sizeof(TeamStatusType),1,fp))

	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	push	1
	push	16					; 00000010H
	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	lea	ecx, DWORD PTR _teamstats$[ebp+eax]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN20@LoadForceL

; 2767 : 						MonoPrint("Error Reading Force Level\n");

	push	OFFSET ??_C@_0BL@BJCEFPAP@Error?5Reading?5Force?5Level?6?$AA@
	call	_MonoPrint
	add	esp, 4
$LN20@LoadForceL:

; 2768 : 				}

	jmp	SHORT $LN22@LoadForceL
$LN21@LoadForceL:

; 2769 : 				for(i=0;i<_MAX_CATEGORIES_;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN19@LoadForceL
$LN18@LoadForceL:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN19@LoadForceL:
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 7
	jge	SHORT $LN17@LoadForceL

; 2770 : 				{
; 2771 : 					if(First)

	movsx	edx, WORD PTR _First$[ebp]
	test	edx, edx
	je	SHORT $LN16@LoadForceL

; 2772 : 						stats[i]->SetStart(TimeID);

	mov	eax, DWORD PTR _TimeID$[ebp]
	push	eax
	movsx	ecx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+ecx*4]
	call	?SetStart@C_Level@@QAEXJ@Z		; C_Level::SetStart
$LN16@LoadForceL:

; 2773 : 					stats[i]->SetEnd(TimeID);

	mov	edx, DWORD PTR _TimeID$[ebp]
	push	edx
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	call	?SetEnd@C_Level@@QAEXJ@Z		; C_Level::SetEnd

; 2774 : 				}

	jmp	SHORT $LN18@LoadForceL
$LN17@LoadForceL:

; 2775 : 				First=0;

	xor	ecx, ecx
	mov	WORD PTR _First$[ebp], cx

; 2776 : 				for(i=0;i<numteams;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN15@LoadForceL
$LN14@LoadForceL:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN15@LoadForceL:
	movsx	ecx, WORD PTR _i$[ebp]
	movsx	edx, WORD PTR _numteams$[ebp]
	cmp	ecx, edx
	jge	$LN26@LoadForceL

; 2777 : 				{
; 2778 : 					if (teamstats[i].supplyLevel < 255)

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	movzx	ecx, BYTE PTR _teamstats$[ebp+eax+14]
	cmp	ecx, 255				; 000000ffH
	jge	$LN12@LoadForceL

; 2779 : 						{
; 2780 : 						// Team is active
; 2781 : 						stats[0]->AddPoint(i,teamstats[i].airDefenseVehs);

	movsx	edx, WORD PTR _i$[ebp]
	shl	edx, 4
	movzx	eax, WORD PTR _teamstats$[ebp+edx]
	push	eax
	movzx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	edx, 4
	imul	edx, 0
	mov	ecx, DWORD PTR _stats$[ebp+edx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2782 : 						stats[1]->AddPoint(i,teamstats[i].ships);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	movzx	ecx, WORD PTR _teamstats$[ebp+eax+6]
	push	ecx
	movzx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _stats$[ebp+eax]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2783 : 						stats[2]->AddPoint(i,teamstats[i].supplyLevel);

	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 4
	movzx	dx, BYTE PTR _teamstats$[ebp+ecx+14]
	movzx	eax, dx
	push	eax
	movzx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 1
	mov	ecx, DWORD PTR _stats$[ebp+edx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2784 : 						stats[3]->AddPoint(i,teamstats[i].fuelLevel);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	movzx	cx, BYTE PTR _teamstats$[ebp+eax+15]
	movzx	edx, cx
	push	edx
	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, 4
	imul	ecx, 3
	mov	ecx, DWORD PTR _stats$[ebp+ecx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2785 : 						stats[4]->AddPoint(i,teamstats[i].airbases);

	movsx	edx, WORD PTR _i$[ebp]
	shl	edx, 4
	movzx	eax, WORD PTR _teamstats$[ebp+edx+12]
	push	eax
	movzx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 2
	mov	ecx, DWORD PTR _stats$[ebp+edx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2786 : 						stats[5]->AddPoint(i,teamstats[i].aircraft);

	movsx	eax, WORD PTR _i$[ebp]
	shl	eax, 4
	movzx	ecx, WORD PTR _teamstats$[ebp+eax+2]
	push	ecx
	movzx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 5
	mov	ecx, DWORD PTR _stats$[ebp+eax]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2787 : 						stats[6]->AddPoint(i,teamstats[i].groundVehs);

	movsx	ecx, WORD PTR _i$[ebp]
	shl	ecx, 4
	movzx	edx, WORD PTR _teamstats$[ebp+ecx+4]
	push	edx
	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, 4
	imul	ecx, 6
	mov	ecx, DWORD PTR _stats$[ebp+ecx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2788 : 						}
; 2789 : 					else

	jmp	$LN11@LoadForceL
$LN12@LoadForceL:

; 2790 : 						{
; 2791 : 						// Team is inactive.
; 2792 : 						stats[0]->AddPoint(i,-1);

	push	-1
	movzx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _stats$[ebp+eax]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2793 : 						stats[1]->AddPoint(i,-1);

	push	-1
	movzx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 0
	mov	ecx, DWORD PTR _stats$[ebp+edx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2794 : 						stats[2]->AddPoint(i,-1);

	push	-1
	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, 4
	shl	ecx, 1
	mov	ecx, DWORD PTR _stats$[ebp+ecx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2795 : 						stats[3]->AddPoint(i,-1);

	push	-1
	movzx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 3
	mov	ecx, DWORD PTR _stats$[ebp+eax]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2796 : 						stats[4]->AddPoint(i,-1);

	push	-1
	movzx	ecx, WORD PTR _i$[ebp]
	push	ecx
	mov	edx, 4
	shl	edx, 2
	mov	ecx, DWORD PTR _stats$[ebp+edx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2797 : 						stats[5]->AddPoint(i,-1);

	push	-1
	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, 4
	imul	ecx, 5
	mov	ecx, DWORD PTR _stats$[ebp+ecx]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint

; 2798 : 						stats[6]->AddPoint(i,-1);

	push	-1
	movzx	edx, WORD PTR _i$[ebp]
	push	edx
	mov	eax, 4
	imul	eax, 6
	mov	ecx, DWORD PTR _stats$[ebp+eax]
	call	?AddPoint@C_Level@@QAEXFF@Z		; C_Level::AddPoint
$LN11@LoadForceL:

; 2799 : 						}
; 2800 : 				}

	jmp	$LN14@LoadForceL
$LN26@LoadForceL:

; 2801 : 			}
; 2802 : 		}

	jmp	$LN28@LoadForceL
$LN27@LoadForceL:

; 2803 : 		fclose(fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	_fclose
	add	esp, 4

; 2804 : 		CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2805 : 
; 2806 : 		for(i=0;i<_MAX_CATEGORIES_;i++)

	xor	edx, edx
	mov	WORD PTR _i$[ebp], dx
	jmp	SHORT $LN10@LoadForceL
$LN9@LoadForceL:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN10@LoadForceL:
	movsx	ecx, WORD PTR _i$[ebp]
	cmp	ecx, 7
	jge	$LN8@LoadForceL

; 2807 : 		{
; 2808 : 			stats[i]->CalcPositions();

	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?CalcPositions@C_Level@@QAEXXZ		; C_Level::CalcPositions

; 2809 : 			MaxValue=stats[i]->GetMaxValue();

	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	call	?GetMaxValue@C_Level@@QAEJXZ		; C_Level::GetMaxValue
	mov	DWORD PTR _MaxValue$[ebp], eax

; 2810 : 			MinValue=stats[i]->GetMinValue();

	movsx	ecx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+ecx*4]
	call	?GetMinValue@C_Level@@QAEJXZ		; C_Level::GetMinValue
	mov	DWORD PTR _MinValue$[ebp], eax

; 2811 : 
; 2812 : 			_stprintf(buffer,"%1ld",MaxValue);

	mov	edx, DWORD PTR _MaxValue$[ebp]
	push	edx
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2813 : 			stats[i]->SetYLabel(2,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	2
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?SetYLabel@C_Level@@QAEXFPAD@Z		; C_Level::SetYLabel

; 2814 : 			_stprintf(buffer,"%1ld",(MaxValue-MinValue)/2);

	mov	eax, DWORD PTR _MaxValue$[ebp]
	sub	eax, DWORD PTR _MinValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2815 : 			stats[i]->SetYLabel(1,buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	push	1
	movsx	edx, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+edx*4]
	call	?SetYLabel@C_Level@@QAEXFPAD@Z		; C_Level::SetYLabel

; 2816 : 			_stprintf(buffer,"%1ld",MinValue);

	mov	eax, DWORD PTR _MinValue$[ebp]
	push	eax
	push	OFFSET ??_C@_04DIDHKLLF@?$CF1ld?$AA@
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH

; 2817 : 			stats[i]->SetYLabel(0,buffer);

	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	push	0
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	call	?SetYLabel@C_Level@@QAEXFPAD@Z		; C_Level::SetYLabel

; 2818 : 
; 2819 : 			win->AddControl(stats[i]);

	movsx	ecx, WORD PTR _i$[ebp]
	mov	edx, DWORD PTR _stats$[ebp+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2820 : 		}

	jmp	$LN9@LoadForceL
$LN8@LoadForceL:

; 2821 : 
; 2822 : 		_stprintf(buffer,"%s %1ld %02ld:00",gStringMgr->GetString(TXT_DAY),start / (60 * 24)+1,(start / 60) % 24);

	mov	eax, DWORD PTR _start$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR _start$[ebp]
	cdq
	mov	ecx, 1440				; 000005a0H
	idiv	ecx
	add	eax, 1
	push	eax
	push	127					; 0000007fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_0BB@IGDOPJFN@?$CFs?5?$CF1ld?5?$CF02ld?300?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2823 : 		txt=(C_Text*)win->FindControl(LOW_X);

	push	6258					; 00001872H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2824 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN7@LoadForceL

; 2825 : 		{
; 2826 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2827 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2828 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@LoadForceL:

; 2829 : 		}
; 2830 : 		_stprintf(buffer,"%s %1ld %02ld:00",gStringMgr->GetString(TXT_DAY),end / (60 * 24)+1,(end / 60) % 24);

	mov	eax, DWORD PTR _end$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR _end$[ebp]
	cdq
	mov	ecx, 1440				; 000005a0H
	idiv	ecx
	add	eax, 1
	push	eax
	push	127					; 0000007fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_0BB@IGDOPJFN@?$CFs?5?$CF1ld?5?$CF02ld?300?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2831 : 		txt=(C_Text*)win->FindControl(HIGH_X);

	push	6260					; 00001874H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2832 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN6@LoadForceL

; 2833 : 		{
; 2834 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2835 : 			txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2836 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN6@LoadForceL:

; 2837 : 		}
; 2838 : 
; 2839 : 		lbox=(C_ListBox *)win->FindControl(CHART);

	push	6266					; 0000187aH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 2840 : 		if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN5@LoadForceL

; 2841 : 			LastForceCatID=lbox->GetTextID();

	mov	ecx, DWORD PTR _lbox$[ebp]
	call	?GetTextID@C_ListBox@@QAEJXZ		; C_ListBox::GetTextID
	mov	DWORD PTR ?LastForceCatID@@3JA, eax	; LastForceCatID

; 2842 : 		else

	jmp	SHORT $LN4@LoadForceL
$LN5@LoadForceL:

; 2843 : 			LastForceCatID=STAT_1;

	mov	DWORD PTR ?LastForceCatID@@3JA, 6230	; LastForceCatID, 00001856H
$LN4@LoadForceL:

; 2844 : 
; 2845 : 		StatIdx=FindStatIndex(LastForceCatID);

	mov	ecx, DWORD PTR ?LastForceCatID@@3JA	; LastForceCatID
	push	ecx
	call	?FindStatIndex@@YAJJ@Z			; FindStatIndex
	add	esp, 4
	mov	DWORD PTR _StatIdx$[ebp], eax

; 2846 : 		txt=(C_Text*)win->FindControl(HIGH_Y);

	push	6257					; 00001871H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2847 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN3@LoadForceL

; 2848 : 		{
; 2849 : 			txt->Refresh();

	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 2850 : 			txt->SetText(stats[StatIdx]->GetYLabel(2));

	push	2
	mov	eax, DWORD PTR _StatIdx$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+eax*4]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+256]
	call	eax

; 2851 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN3@LoadForceL:

; 2852 : 		}
; 2853 : 		txt=(C_Text*)win->FindControl(HALF_Y);

	push	6256					; 00001870H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2854 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN2@LoadForceL

; 2855 : 		{
; 2856 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2857 : 			txt->SetText(stats[StatIdx]->GetYLabel(1));

	push	1
	mov	ecx, DWORD PTR _StatIdx$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+ecx*4]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2858 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN2@LoadForceL:

; 2859 : 		}
; 2860 : 		txt=(C_Text*)win->FindControl(LOW_Y);

	push	6254					; 0000186eH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2861 : 		if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	SHORT $LN1@LoadForceL

; 2862 : 		{
; 2863 : 			txt->Refresh();

	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2864 : 			txt->SetText(stats[StatIdx]->GetYLabel(0));

	push	0
	mov	ecx, DWORD PTR _StatIdx$[ebp]
	mov	ecx, DWORD PTR _stats$[ebp+ecx*4]
	call	?GetYLabel@C_Level@@QAEPADF@Z		; C_Level::GetYLabel
	push	eax
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2865 : 			txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN1@LoadForceL:

; 2866 : 		}
; 2867 : 		
; 2868 : 		win->UnHideGroup(LastForceCatID);

	mov	ecx, DWORD PTR ?LastForceCatID@@3JA	; LastForceCatID
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideGroup@C_Window@@QAEXJ@Z		; C_Window::UnHideGroup
$LN37@LoadForceL:

; 2869 : 	}
; 2870 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadForceLevelHistory@@YAXXZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadForceLevelHistory@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadForceLevelHistory@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadForceLevelHistory@@YAXXZ ENDP			; LoadForceLevelHistory
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -112						; size = 4
$T3 = -108						; size = 4
$T4 = -104						; size = 4
tv171 = -100						; size = 4
$T5 = -96						; size = 4
_TimeID$ = -92						; size = 4
_time$ = -88						; size = 4
_size$ = -84						; size = 4
_filedata$ = -80					; size = 4
_factor$ = -76						; size = 4
_i$ = -72						; size = 4
_win$ = -68						; size = 4
_rec$ = -64						; size = 4
_fp$ = -60						; size = 4
_Reading$ = -56						; size = 2
_txt$ = -52						; size = 4
_recnum$ = -48						; size = 4
_sldr$ = -44						; size = 4
_count$ = -40						; size = 2
_hist$ = -36						; size = 4
_buffer$ = -32						; size = 15
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadTroopMovementHistory@@YAXXZ PROC			; LoadTroopMovementHistory

; 2515 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadTroopMovementHistory@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2516 : 	C_Window *win;
; 2517 : 	C_History *hist;
; 2518 : 	C_Slider *sldr;
; 2519 : 	int i,recnum;
; 2520 : 	CampaignTime time;
; 2521 : 	UnitHistoryType *rec;
; 2522 : 	char *filedata;
; 2523 : 	FILE *fp;
; 2524 : 	short Reading;
; 2525 : 	short count;
; 2526 : 	C_Text *txt;
; 2527 : 	long TimeID;
; 2528 : 	_TCHAR buffer[15];
; 2529 : 
; 2530 : 	JStarsFirst=0;

	mov	DWORD PTR _JStarsFirst, 0

; 2531 : 	JStarsLast=0;

	mov	DWORD PTR _JStarsLast, 0

; 2532 : 	JStarsCurrent=0;

	mov	DWORD PTR _JStarsCurrent, 0

; 2533 : 	recnum=1;

	mov	DWORD PTR _recnum$[ebp], 1

; 2534 : 	DeleteGroupList(HISTORY_WIN);

	push	6202					; 0000183aH
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 2535 : 
; 2536 : 	int size = 1024, factor = 1;

	mov	DWORD PTR _size$[ebp], 1024		; 00000400H
	mov	DWORD PTR _factor$[ebp], 1

; 2537 : 	if (g_LargeTheater)

	movzx	eax, BYTE PTR ?g_LargeTheater@@3_NA	; g_LargeTheater
	test	eax, eax
	je	SHORT $LN15@LoadTroopM

; 2538 : 	{
; 2539 : 		size = 2048;

	mov	DWORD PTR _size$[ebp], 2048		; 00000800H

; 2540 : 		factor = 2;

	mov	DWORD PTR _factor$[ebp], 2
$LN15@LoadTroopM:

; 2541 : 	}
; 2542 : 
; 2543 : 	win=gMainHandler->FindWindow(HISTORY_WIN);

	push	6202					; 0000183aH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2544 : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	$LN14@LoadTroopM

; 2545 : 	{
; 2546 : 		fp = OpenCampFile("tmp","his","rb");

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	OFFSET ??_C@_03GDDNCFJF@his?$AA@
	push	OFFSET ??_C@_03FFNGDGKN@tmp?$AA@
	call	?OpenCampFile@@YAPAU_iobuf@@PAD00@Z	; OpenCampFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fp$[ebp], eax

; 2547 : 		if(!fp)

	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN13@LoadTroopM

; 2548 : 			return;

	jmp	$LN16@LoadTroopM
$LN13@LoadTroopM:

; 2549 : 	
; 2550 : 		CampEnterCriticalSection();

	call	?CampEnterCriticalSection@@YAXXZ	; CampEnterCriticalSection

; 2551 : 		Reading=1;

	mov	ecx, 1
	mov	WORD PTR _Reading$[ebp], cx
$LN12@LoadTroopM:

; 2552 : 		while(Reading)

	movsx	edx, WORD PTR _Reading$[ebp]
	test	edx, edx
	je	$LN11@LoadTroopM

; 2553 : 		{
; 2554 : 			Reading=static_cast<short>(fread(&time,sizeof(CampaignTime),1,fp));

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _time$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	WORD PTR _Reading$[ebp], ax

; 2555 : 			if(Reading)

	movsx	edx, WORD PTR _Reading$[ebp]
	test	edx, edx
	je	$LN9@LoadTroopM

; 2556 : 			{
; 2557 : 				fread(&count,sizeof(short),1,fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	1
	push	2
	lea	ecx, DWORD PTR _count$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 2558 : 				if(count)

	movsx	edx, WORD PTR _count$[ebp]
	test	edx, edx
	je	$LN9@LoadTroopM

; 2559 : 				{
; 2560 : 					if(recnum == 1)

	cmp	DWORD PTR _recnum$[ebp], 1
	jne	$LN7@LoadTroopM

; 2561 : 					{
; 2562 : 						txt=(C_Text*)win->FindControl(COUNTER);

	push	200002					; 00030d42H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _txt$[ebp], eax

; 2563 : 						if(txt)

	cmp	DWORD PTR _txt$[ebp], 0
	je	$LN7@LoadTroopM

; 2564 : 						{
; 2565 : 							TimeID=time/(VU_TICS_PER_SECOND*60);

	mov	eax, DWORD PTR _time$[ebp]
	xor	edx, edx
	mov	ecx, 60000				; 0000ea60H
	div	ecx
	mov	DWORD PTR _TimeID$[ebp], eax

; 2566 : 							_stprintf(buffer,"%s%2ld  %02d:00",gStringMgr->GetString(TXT_DAY),TimeID/1440l+1,(TimeID/60)%24);

	mov	eax, DWORD PTR _TimeID$[ebp]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	push	edx
	mov	eax, DWORD PTR _TimeID$[ebp]
	cdq
	mov	ecx, 1440				; 000005a0H
	idiv	ecx
	add	eax, 1
	push	eax
	push	127					; 0000007fH
	mov	ecx, DWORD PTR ?gStringMgr@@3PAVC_String@@A ; gStringMgr
	call	?GetString@C_String@@QAEPADJ@Z		; C_String::GetString
	push	eax
	push	OFFSET ??_C@_0BA@BPFGNMGI@?$CFs?$CF2ld?5?5?$CF02d?300?$AA@
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H

; 2567 : 							txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2568 : 							txt->SetText(buffer);

	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax+256]
	call	edx

; 2569 : 							txt->Refresh();

	mov	eax, DWORD PTR _txt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _txt$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN7@LoadTroopM:

; 2570 : 						}
; 2571 : 					}
; 2572 : 					hist=new C_History;

	push	92					; 0000005cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN18@LoadTroopM
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_History@@QAE@XZ			; C_History::C_History
	mov	DWORD PTR tv171[ebp], eax
	jmp	SHORT $LN19@LoadTroopM
$LN18@LoadTroopM:
	mov	DWORD PTR tv171[ebp], 0
$LN19@LoadTroopM:
	mov	ecx, DWORD PTR tv171[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR _hist$[ebp], edx

; 2573 : 					hist->Setup(recnum,0,count);

	movzx	eax, WORD PTR _count$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _recnum$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?Setup@C_History@@QAEXJFF@Z		; C_History::Setup

; 2574 : 					hist->SetFlagBitOn(C_BIT_INVISIBLE);

	push	8192					; 00002000H
	mov	edx, DWORD PTR _hist$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _hist$[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 2575 : 					hist->SetGroup(recnum);

	mov	eax, DWORD PTR _recnum$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetGroup@C_Base@@QAEXJ@Z		; C_Base::SetGroup

; 2576 : 					hist->SetClient(1);

	push	1
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 2577 : 					hist->SetUserNumber(0,(long)time/(VU_TICS_PER_SECOND*60));

	mov	eax, DWORD PTR _time$[ebp]
	cdq
	mov	ecx, 60000				; 0000ea60H
	idiv	ecx
	push	eax
	push	0
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2578 : 					hist->SetUserNumber(_UI95_DELGROUP_SLOT_,_UI95_DELGROUP_ID_);

	push	5551212					; 0054b46cH
	push	7
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 2579 : 					hist->SetImage(0,REDDOT5);

	push	50204					; 0000c41cH
	push	0
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2580 : 					hist->SetImage(1,BLUEDOT5);

	push	50212					; 0000c424H
	push	1
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2581 : 					hist->SetImage(2,BLUEDOT5);

	push	50212					; 0000c424H
	push	2
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2582 : 					hist->SetImage(3,BLUEDOT5);

	push	50212					; 0000c424H
	push	3
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2583 : 					hist->SetImage(4,REDDOT5);

	push	50204					; 0000c41cH
	push	4
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2584 : 					hist->SetImage(5,REDDOT5);

	push	50204					; 0000c41cH
	push	5
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2585 : 					hist->SetImage(6,REDDOT5);

	push	50204					; 0000c41cH
	push	6
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2586 : 					hist->SetImage(7,REDDOT5);

	push	50204					; 0000c41cH
	push	7
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetImage@C_History@@QAEXJJ@Z		; C_History::SetImage

; 2587 : 
; 2588 : 					filedata=new char[count * sizeof(UnitHistoryType)];

	movsx	edx, WORD PTR _count$[ebp]
	imul	edx, 5
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _filedata$[ebp], eax

; 2589 : 					fread(filedata,count * sizeof(UnitHistoryType),1,fp);

	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	push	1
	movsx	edx, WORD PTR _count$[ebp]
	imul	edx, 5
	push	edx
	mov	eax, DWORD PTR _filedata$[ebp]
	push	eax
	call	_fread
	add	esp, 16					; 00000010H

; 2590 : 					rec=(UnitHistoryType*)filedata;

	mov	ecx, DWORD PTR _filedata$[ebp]
	mov	DWORD PTR _rec$[ebp], ecx

; 2591 : 					for(i=0;i<count;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@LoadTroopM
$LN5@LoadTroopM:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@LoadTroopM:
	movsx	eax, WORD PTR _count$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@LoadTroopM

; 2592 : 					{
; 2593 : 						// 2003-03-15 MN Support for 2048x2048 theaters
; 2594 : 						//hist->AddIconSet(static_cast<short>(i),rec->team,(short)((float)rec->x * 0.36198),(short)((float)(1024-rec->y) * 0.36198));
; 2595 : 						hist->AddIconSet(static_cast<short>(i),rec->team,(short)((float)(rec->x * 0.36198)/factor),(short)((float)((size-rec->y) * 0.36198))/factor);

	mov	ecx, DWORD PTR _rec$[ebp]
	movsx	edx, WORD PTR [ecx+3]
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, edx
	cvtsi2sd xmm0, eax
	mulsd	xmm0, QWORD PTR __real@3fd72aae297396d1
	cvtsd2ss xmm0, xmm0
	cvttss2si ecx, xmm0
	movsx	eax, cx
	cdq
	idiv	DWORD PTR _factor$[ebp]
	push	eax
	mov	edx, DWORD PTR _rec$[ebp]
	movsx	eax, WORD PTR [edx+1]
	cvtsi2sd xmm0, eax
	mulsd	xmm0, QWORD PTR __real@3fd72aae297396d1
	cvtsd2ss xmm0, xmm0
	cvtsi2ss xmm1, DWORD PTR _factor$[ebp]
	divss	xmm0, xmm1
	cvttss2si ecx, xmm0
	movzx	edx, cx
	push	edx
	mov	eax, DWORD PTR _rec$[ebp]
	movzx	cx, BYTE PTR [eax]
	movzx	edx, cx
	push	edx
	movzx	eax, WORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?AddIconSet@C_History@@QAEXFFFF@Z	; C_History::AddIconSet

; 2596 : 						rec++;

	mov	ecx, DWORD PTR _rec$[ebp]
	add	ecx, 5
	mov	DWORD PTR _rec$[ebp], ecx

; 2597 : 					}

	jmp	$LN5@LoadTroopM
$LN4@LoadTroopM:

; 2598 : 					hist->SetReady(1);

	push	1
	mov	ecx, DWORD PTR _hist$[ebp]
	call	?SetReady@C_Base@@QAEXF@Z		; C_Base::SetReady

; 2599 : 					delete filedata;

	mov	edx, DWORD PTR _filedata$[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2600 : 					win->AddControl(hist);

	mov	ecx, DWORD PTR _hist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 2601 : 					recnum++;

	mov	edx, DWORD PTR _recnum$[ebp]
	add	edx, 1
	mov	DWORD PTR _recnum$[ebp], edx
$LN9@LoadTroopM:

; 2602 : 				}
; 2603 : 			}
; 2604 : 		}

	jmp	$LN12@LoadTroopM
$LN11@LoadTroopM:

; 2605 : 		fclose(fp);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 2606 : 		CampLeaveCriticalSection();

	call	?CampLeaveCriticalSection@@YAXXZ	; CampLeaveCriticalSection

; 2607 : 
; 2608 : 		JStarsDirection=0;

	mov	DWORD PTR _JStarsDirection, 0

; 2609 : 		JStarsFirst=1;

	mov	DWORD PTR _JStarsFirst, 1

; 2610 : 		JStarsLast=recnum;

	mov	ecx, DWORD PTR _recnum$[ebp]
	mov	DWORD PTR _JStarsLast, ecx

; 2611 : 		JStarsCurrent=1;

	mov	DWORD PTR _JStarsCurrent, 1

; 2612 : 		JStarsPrevious=1;

	mov	DWORD PTR _JStarsPrevious, 1

; 2613 : 		sldr=(C_Slider*)win->FindControl(PLAYBALL);

	push	6203					; 0000183bH
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 2614 : 		if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN1@LoadTroopM

; 2615 : 		{
; 2616 : 			sldr->Refresh();

	mov	edx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax+160]
	call	edx

; 2617 : 			sldr->SetSliderPos(0);

	push	0
	mov	ecx, DWORD PTR _sldr$[ebp]
	call	?SetSliderPos@C_Slider@@QAEXJ@Z		; C_Slider::SetSliderPos

; 2618 : 			sldr->Refresh();

	mov	eax, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax

; 2619 : 			if(recnum > 2)

	cmp	DWORD PTR _recnum$[ebp], 2
	jle	SHORT $LN2@LoadTroopM

; 2620 : 				sldr->SetFlagBitOn(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 2621 : 			else

	jmp	SHORT $LN1@LoadTroopM
$LN2@LoadTroopM:

; 2622 : 				sldr->SetFlagBitOff(C_BIT_ENABLED);

	push	2048					; 00000800H
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN1@LoadTroopM:

; 2623 : 		}
; 2624 : 		win->UnHideGroup(JStarsCurrent);

	mov	ecx, DWORD PTR _JStarsCurrent
	push	ecx
	mov	ecx, DWORD PTR _win$[ebp]
	call	?UnHideGroup@C_Window@@QAEXJ@Z		; C_Window::UnHideGroup
$LN14@LoadTroopM:
$LN16@LoadTroopM:

; 2625 : 	}
; 2626 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadTroopMovementHistory@@YAXXZ$0:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?LoadTroopMovementHistory@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadTroopMovementHistory@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadTroopMovementHistory@@YAXXZ ENDP			; LoadTroopMovementHistory
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_win$ = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
___formal$ = 16						; size = 4
?Cancel_Scramble_CB@@YAXJFPAVC_Base@@@Z PROC		; Cancel_Scramble_CB

; 625  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 626  : 	C_Window *win;
; 627  : 
; 628  : 	if(hittype != C_TYPE_LMOUSEUP || gOldCompressionRatio < 0)

	movsx	eax, WORD PTR _hittype$[ebp]
	cmp	eax, 52					; 00000034H
	jne	SHORT $LN4@Cancel_Scr
	cmp	DWORD PTR ?gOldCompressionRatio@@3KA, 0	; gOldCompressionRatio
	jae	SHORT $LN5@Cancel_Scr
$LN4@Cancel_Scr:

; 629  : 		return;

	jmp	$LN6@Cancel_Scr
$LN5@Cancel_Scr:

; 630  : 
; 631  : 	win=gMainHandler->FindWindow(SCRAMBLE_WIN);

	push	18600					; 000048a8H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 632  : 	if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN3@Cancel_Scr

; 633  : 		gMainHandler->HideWindow(win);

	mov	ecx, DWORD PTR _win$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?HideWindow@C_Handler@@QAEHPAVC_Window@@@Z ; C_Handler::HideWindow
$LN3@Cancel_Scr:

; 634  : 
; 635  : 	gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 636  : 	gMainHandler->RemoveUserCallback(CloseAWWWindowTimer);

	push	OFFSET ?CloseAWWWindowTimer@@YAXXZ	; CloseAWWWindowTimer
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback

; 637  : 	gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical

; 638  : 
; 639  : 	if (gOldCompressTillTime)

	cmp	DWORD PTR ?gOldCompressTillTime@@3KA, 0	; gOldCompressTillTime
	je	SHORT $LN2@Cancel_Scr

; 640  : 		{
; 641  : 		gCompressTillTime = gOldCompressTillTime;

	mov	edx, DWORD PTR ?gOldCompressTillTime@@3KA ; gOldCompressTillTime
	mov	DWORD PTR ?gCompressTillTime@@3KA, edx	; gCompressTillTime

; 642  : 		gOldCompressTillTime = 0;

	mov	DWORD PTR ?gOldCompressTillTime@@3KA, 0	; gOldCompressTillTime

; 643  : 		}
; 644  : 	else

	jmp	SHORT $LN6@Cancel_Scr
$LN2@Cancel_Scr:

; 645  : 		{
; 646  : 		SetTimeCompression(gOldCompressionRatio);

	mov	eax, DWORD PTR ?gOldCompressionRatio@@3KA ; gOldCompressionRatio
	push	eax
	call	?SetTimeCompression@@YAXH@Z		; SetTimeCompression
	add	esp, 4

; 647  : 		UpdateRemoteCompression();

	call	?UpdateRemoteCompression@@YAXXZ		; UpdateRemoteCompression

; 648  : 		gOldCompressionRatio = 0xffffffff;//-1;

	mov	DWORD PTR ?gOldCompressionRatio@@3KA, -1 ; gOldCompressionRatio
$LN6@Cancel_Scr:

; 649  : 		}
; 650  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Cancel_Scramble_CB@@YAXJFPAVC_Base@@@Z ENDP		; Cancel_Scramble_CB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
tv143 = -48						; size = 4
$T1 = -44						; size = 4
tv85 = -40						; size = 4
$T2 = -36						; size = 4
tv78 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
_blip$ = -20						; size = 4
_win$ = -16						; size = 4
$T5 = -12						; size = 4
$T6 = -8						; size = 4
$T7 = -4						; size = 4
?CleanupTacticalEngagementUI@@YAXXZ PROC		; CleanupTacticalEngagementUI

; 1991 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 1992 : 	C_Window *win;
; 1993 : 	C_Blip *blip;
; 1994 : 
; 1995 : 	InCleanup=1;

	mov	eax, 1
	mov	WORD PTR ?InCleanup@@3FA, ax		; InCleanup

; 1996 : 
; 1997 : 	if(te_restore_map)

	cmp	DWORD PTR ?te_restore_map@@3PAEA, 0	; te_restore_map
	je	SHORT $LN11@CleanupTac

; 1998 : 	{
; 1999 : 		delete te_restore_map;

	mov	ecx, DWORD PTR ?te_restore_map@@3PAEA	; te_restore_map
	mov	DWORD PTR $T4[ebp], ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 2000 : 		te_restore_map=NULL;

	mov	DWORD PTR ?te_restore_map@@3PAEA, 0	; te_restore_map
$LN11@CleanupTac:

; 2001 : 	}
; 2002 : 	ReadyToPlayMovie=FALSE;

	mov	DWORD PTR ?ReadyToPlayMovie@@3HA, 0	; ReadyToPlayMovie

; 2003 : 	gCurrentFlightID=FalconNullId;

	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4, ecx

; 2004 : 
; 2005 : 	if (gMainHandler)

	cmp	DWORD PTR ?gMainHandler@@3PAVC_Handler@@A, 0 ; gMainHandler
	je	$LN12@CleanupTac

; 2006 : 	{
; 2007 : 		gMainHandler->EnterCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?EnterCritical@C_Handler@@QAEXXZ	; C_Handler::EnterCritical

; 2008 : 		gMainHandler->RemoveUserCallback(TacEngListCB);

	push	OFFSET ?TacEngListCB@@YAXXZ		; TacEngListCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback

; 2009 : 		gMainHandler->RemoveUserCallback(CampaignSoundEventCB);

	push	OFFSET ?CampaignSoundEventCB@@YAXXZ	; CampaignSoundEventCB
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?RemoveUserCallback@C_Handler@@QAEHP6AXXZ@Z ; C_Handler::RemoveUserCallback

; 2010 : 
; 2011 : 		if(gGps)

	cmp	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
	je	SHORT $LN9@CleanupTac

; 2012 : 		{
; 2013 : 			gGps->Cleanup();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Cleanup@GlobalPositioningSystem@@QAEXXZ ; GlobalPositioningSystem::Cleanup

; 2014 : 			delete gGps;

	mov	edx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	mov	DWORD PTR $T3[ebp], edx
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR $T7[ebp], eax
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN14@CleanupTac
	push	1
	mov	ecx, DWORD PTR $T7[ebp]
	call	??_GGlobalPositioningSystem@@QAEPAXI@Z
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN15@CleanupTac
$LN14@CleanupTac:
	mov	DWORD PTR tv78[ebp], 0
$LN15@CleanupTac:

; 2015 : 			gGps=NULL;

	mov	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
$LN9@CleanupTac:

; 2016 : 		}
; 2017 : 		if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN8@CleanupTac

; 2018 : 		{
; 2019 : 			gMapMgr->Cleanup();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?Cleanup@C_Map@@QAEXXZ			; C_Map::Cleanup

; 2020 : 			delete gMapMgr;

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR $T6[ebp], edx
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN16@CleanupTac
	push	1
	mov	ecx, DWORD PTR $T6[ebp]
	call	??_GC_Map@@QAEPAXI@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN17@CleanupTac
$LN16@CleanupTac:
	mov	DWORD PTR tv85[ebp], 0
$LN17@CleanupTac:

; 2021 : 			gMapMgr=NULL;

	mov	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
$LN8@CleanupTac:

; 2022 : 		}
; 2023 : 		if(gATOPackage)

	cmp	DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A, 0 ; gATOPackage
	je	SHORT $LN7@CleanupTac

; 2024 : 		{
; 2025 : 			gATOPackage->DeleteBranch(gATOPackage->GetRoot());

	mov	ecx, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gATOPackage@@3PAVC_TreeList@@A ; gATOPackage
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN7@CleanupTac:

; 2026 : 		}
; 2027 : 		if(gATOAll)

	cmp	DWORD PTR ?gATOAll@@3PAVC_TreeList@@A, 0 ; gATOAll
	je	SHORT $LN6@CleanupTac

; 2028 : 		{
; 2029 : 			gATOAll->DeleteBranch(gATOAll->GetRoot());

	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gATOAll@@3PAVC_TreeList@@A ; gATOAll
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN6@CleanupTac:

; 2030 : 		}
; 2031 : 		if(gOOBTree)

	cmp	DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A, 0 ; gOOBTree
	je	SHORT $LN5@CleanupTac

; 2032 : 		{
; 2033 : 			gOOBTree->DeleteBranch(gOOBTree->GetRoot());

	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gOOBTree@@3PAVC_TreeList@@A ; gOOBTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN5@CleanupTac:

; 2034 : 		}
; 2035 : 		CleanupVCArgLists();

	call	?CleanupVCArgLists@@YAXXZ		; CleanupVCArgLists

; 2036 : 		if(gVCTree)

	cmp	DWORD PTR ?gVCTree@@3PAVC_TreeList@@A, 0 ; gVCTree
	je	SHORT $LN4@CleanupTac

; 2037 : 			gVCTree->DeleteBranch(gVCTree->GetRoot());

	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ	; C_TreeList::GetRoot
	push	eax
	mov	ecx, DWORD PTR ?gVCTree@@3PAVC_TreeList@@A ; gVCTree
	call	?DeleteBranch@C_TreeList@@QAEXPAVTREELIST@@@Z ; C_TreeList::DeleteBranch
$LN4@CleanupTac:

; 2038 : /*		if(gTaskList)
; 2039 : 		{
; 2040 : 			while(gTaskList)
; 2041 : 			{
; 2042 : 				last=gTaskList;
; 2043 : 				gTaskList=gTaskList->Next;
; 2044 : 				if(last->Label_)
; 2045 : 				{
; 2046 : 					last->Label_->Cleanup();
; 2047 : 					delete last->Label_;
; 2048 : 				}
; 2049 : 				delete last;
; 2050 : 			}
; 2051 : 			gTaskList=NULL;
; 2052 : 		}
; 2053 : */
; 2054 : 		if(gUIViewer)

	cmp	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
	je	SHORT $LN3@CleanupTac

; 2055 : 		{
; 2056 : 			delete gUIViewer;

	mov	eax, DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A ; gUIViewer
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN18@CleanupTac
	push	1
	mov	ecx, DWORD PTR $T5[ebp]
	call	??_GC_3dViewer@@QAEPAXI@Z
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN19@CleanupTac
$LN18@CleanupTac:
	mov	DWORD PTR tv143[ebp], 0
$LN19@CleanupTac:

; 2057 : 			gUIViewer = NULL;

	mov	DWORD PTR ?gUIViewer@@3PAVC_3dViewer@@A, 0 ; gUIViewer
$LN3@CleanupTac:

; 2058 : 		}
; 2059 : 		win=gMainHandler->FindWindow(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _win$[ebp], eax

; 2060 : 		if(win)

	cmp	DWORD PTR _win$[ebp], 0
	je	SHORT $LN2@CleanupTac

; 2061 : 		{
; 2062 : 			DeleteGroupList(TAC_MISSION_SUA);

	push	40024					; 00009c58H
	call	?DeleteGroupList@@YAXJ@Z		; DeleteGroupList
	add	esp, 4

; 2063 : 			blip=(C_Blip*)win->FindControl(9000000);

	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _win$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _blip$[ebp], eax

; 2064 : 			if(blip)

	cmp	DWORD PTR _blip$[ebp], 0
	je	SHORT $LN2@CleanupTac

; 2065 : 				blip->RemoveAll();

	mov	ecx, DWORD PTR _blip$[ebp]
	call	?RemoveAll@C_Blip@@QAEXXZ		; C_Blip::RemoveAll
$LN2@CleanupTac:

; 2066 : 		}
; 2067 : 		gMainHandler->LeaveCritical();

	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?LeaveCritical@C_Handler@@QAEXXZ	; C_Handler::LeaveCritical
$LN12@CleanupTac:

; 2068 : 	}
; 2069 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CleanupTacticalEngagementUI@@YAXXZ ENDP		; CleanupTacticalEngagementUI
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_flt$1 = -4						; size = 4
?TacEngListCB@@YAXXZ PROC				; TacEngListCB

; 1518 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1519 : 	if(NewEvents)

	cmp	DWORD PTR _NewEvents, 0
	je	SHORT $LN10@TacEngList

; 1520 : 	{
; 1521 : 		NewEvents=FALSE;

	mov	DWORD PTR _NewEvents, 0

; 1522 : 		RefreshMapEventList(TAC_MISSION_SUA, 1);

	push	1
	push	40024					; 00009c58H
	call	?RefreshMapEventList@@YAXJJ@Z		; RefreshMapEventList
	add	esp, 8
$LN10@TacEngList:

; 1523 : 	}
; 1524 : 	if(mcnt < 1)

	cmp	DWORD PTR ?mcnt@@3HA, 1			; mcnt
	jge	$LN9@TacEngList

; 1525 : 	{
; 1526 : 		if(gGps)

	cmp	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
	je	$LN8@TacEngList

; 1527 : 		{
; 1528 : 			Flight flt;
; 1529 : 			gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 1530 : 			UpdateVCs();

	call	?UpdateVCs@@YAXXZ			; UpdateVCs

; 1531 : 			flt=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	eax, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	eax
	mov	ecx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	ecx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flt$1[ebp], eax

; 1532 : 			if(flt)

	cmp	DWORD PTR _flt$1[ebp], 0
	je	SHORT $LN7@TacEngList

; 1533 : 			{
; 1534 : 				if(flt->GetTotalVehicles() < 1 || flt->IsDead())

	mov	ecx, DWORD PTR _flt$1[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	cmp	eax, 1
	jl	SHORT $LN5@TacEngList
	mov	edx, DWORD PTR _flt$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _flt$1[ebp]
	mov	edx, DWORD PTR [eax+552]
	call	edx
	test	eax, eax
	je	SHORT $LN6@TacEngList
$LN5@TacEngList:

; 1535 : 				{
; 1536 : 					if (!gTimeModeServer&&!g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN4@TacEngList
	movzx	eax, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	eax, eax
	jne	SHORT $LN4@TacEngList

; 1537 : 					{
; 1538 : 						FindMissionInBriefing(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4
$LN4@TacEngList:

; 1539 : 					}
; 1540 : 					UpdateMissionWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4
$LN6@TacEngList:

; 1541 : 				}
; 1542 : 			}
; 1543 : 			else

	jmp	SHORT $LN8@TacEngList
$LN7@TacEngList:

; 1544 : 			{
; 1545 : 				if (!gTimeModeServer&&!g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN8@TacEngList
	movzx	ecx, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	ecx, ecx
	jne	SHORT $LN8@TacEngList

; 1546 : 				{
; 1547 : 					FindMissionInBriefing(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4

; 1548 : 					UpdateMissionWindow(TAC_AIRCRAFT);

	push	30305					; 00007661H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4
$LN8@TacEngList:

; 1549 : 				}
; 1550 : 			}
; 1551 : 		}
; 1552 : 		if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN1@TacEngList

; 1553 : 			gMapMgr->RemoveOldWaypoints();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RemoveOldWaypoints@C_Map@@QAEXXZ	; C_Map::RemoveOldWaypoints
$LN1@TacEngList:

; 1554 : 		mcnt=5;

	mov	DWORD PTR ?mcnt@@3HA, 5			; mcnt
$LN9@TacEngList:

; 1555 : 	}
; 1556 : 	mcnt--;

	mov	edx, DWORD PTR ?mcnt@@3HA		; mcnt
	sub	edx, 1
	mov	DWORD PTR ?mcnt@@3HA, edx		; mcnt

; 1557 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?TacEngListCB@@YAXXZ ENDP				; TacEngListCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_flt$1 = -4						; size = 4
?CampaignListCB@@YAXXZ PROC				; CampaignListCB

; 1469 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1470 : 	if(uintcnt < 1)

	cmp	DWORD PTR ?uintcnt@@3HA, 1		; uintcnt
	jge	SHORT $LN11@CampaignLi

; 1471 : 	{
; 1472 : 		UpdateIntel(CB_INTEL_WIN);

	push	81004					; 00013c6cH
	call	?UpdateIntel@@YAXJ@Z			; UpdateIntel
	add	esp, 4

; 1473 : 		uintcnt=20;

	mov	DWORD PTR ?uintcnt@@3HA, 20		; uintcnt, 00000014H
$LN11@CampaignLi:

; 1474 : 	}
; 1475 : 	uintcnt--;

	mov	eax, DWORD PTR ?uintcnt@@3HA		; uintcnt
	sub	eax, 1
	mov	DWORD PTR ?uintcnt@@3HA, eax		; uintcnt

; 1476 : 	if(NewEvents)

	cmp	DWORD PTR _NewEvents, 0
	je	SHORT $LN10@CampaignLi

; 1477 : 	{
; 1478 : 		NewEvents=FALSE;

	mov	DWORD PTR _NewEvents, 0

; 1479 : 		RefreshEventList();

	call	?RefreshEventList@@YAXXZ		; RefreshEventList

; 1480 : 		RefreshMapEventList(CP_SUA, 0);

	push	0
	push	6012					; 0000177cH
	call	?RefreshMapEventList@@YAXJJ@Z		; RefreshMapEventList
	add	esp, 8
$LN10@CampaignLi:

; 1481 : 	}
; 1482 : 	if(mcnt < 1)

	cmp	DWORD PTR ?mcnt@@3HA, 1			; mcnt
	jge	$LN9@CampaignLi

; 1483 : 	{
; 1484 : 		if(gGps)

	cmp	DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A, 0 ; gGps
	je	$LN8@CampaignLi

; 1485 : 		{
; 1486 : 			Flight flt;
; 1487 : 			gGps->Update();

	mov	ecx, DWORD PTR ?gGps@@3PAVGlobalPositioningSystem@@A ; gGps
	call	?Update@GlobalPositioningSystem@@QAEXXZ	; GlobalPositioningSystem::Update

; 1488 : 			flt=(Flight)vuDatabase->Find(gCurrentFlightID);

	mov	ecx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A+4
	push	ecx
	mov	edx, DWORD PTR ?gCurrentFlightID@@3VVU_ID@@A
	push	edx
	mov	ecx, DWORD PTR ?vuDatabase@@3PAVVuDatabase@@A ; vuDatabase
	call	?Find@VuDatabase@@QBEPAVVuEntity@@VVU_ID@@@Z ; VuDatabase::Find
	mov	DWORD PTR _flt$1[ebp], eax

; 1489 : 			if(flt)

	cmp	DWORD PTR _flt$1[ebp], 0
	je	SHORT $LN7@CampaignLi

; 1490 : 			{
; 1491 : 				if(flt->GetTotalVehicles() < 1 || flt->IsDead())

	mov	ecx, DWORD PTR _flt$1[ebp]
	call	?GetTotalVehicles@UnitClass@@QAEHXZ	; UnitClass::GetTotalVehicles
	cmp	eax, 1
	jl	SHORT $LN5@CampaignLi
	mov	eax, DWORD PTR _flt$1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _flt$1[ebp]
	mov	eax, DWORD PTR [edx+552]
	call	eax
	test	eax, eax
	je	SHORT $LN6@CampaignLi
$LN5@CampaignLi:

; 1492 : 				{
; 1493 : 					if (!gTimeModeServer&&!g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN4@CampaignLi
	movzx	ecx, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	ecx, ecx
	jne	SHORT $LN4@CampaignLi

; 1494 : 					{
; 1495 : 						FindMissionInBriefing(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4
$LN4@CampaignLi:

; 1496 : 					}
; 1497 : 					UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4
$LN6@CampaignLi:

; 1498 : 				}
; 1499 : 			}
; 1500 : 			else

	jmp	SHORT $LN8@CampaignLi
$LN7@CampaignLi:

; 1501 : 			{
; 1502 : 				if (!gTimeModeServer&&!g_bServer)

	cmp	DWORD PTR ?gTimeModeServer@@3HA, 0	; gTimeModeServer
	jne	SHORT $LN8@CampaignLi
	movzx	edx, BYTE PTR ?g_bServer@@3_NA		; g_bServer
	test	edx, edx
	jne	SHORT $LN8@CampaignLi

; 1503 : 				{
; 1504 : 					FindMissionInBriefing(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?FindMissionInBriefing@@YAXJ@Z		; FindMissionInBriefing
	add	esp, 4

; 1505 : 					UpdateMissionWindow(CB_MISSION_SCREEN);

	push	6100					; 000017d4H
	call	?UpdateMissionWindow@@YAXJ@Z		; UpdateMissionWindow
	add	esp, 4
$LN8@CampaignLi:

; 1506 : 				}
; 1507 : 			}
; 1508 : 		}
; 1509 : 		if(gMapMgr)

	cmp	DWORD PTR ?gMapMgr@@3PAVC_Map@@A, 0	; gMapMgr
	je	SHORT $LN1@CampaignLi

; 1510 : 			gMapMgr->RemoveOldWaypoints();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?RemoveOldWaypoints@C_Map@@QAEXXZ	; C_Map::RemoveOldWaypoints
$LN1@CampaignLi:

; 1511 : 
; 1512 : 		mcnt=5;

	mov	DWORD PTR ?mcnt@@3HA, 5			; mcnt
$LN9@CampaignLi:

; 1513 : 	}
; 1514 : 	mcnt--;

	mov	eax, DWORD PTR ?mcnt@@3HA		; mcnt
	sub	eax, 1
	mov	DWORD PTR ?mcnt@@3HA, eax		; mcnt

; 1515 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CampaignListCB@@YAXXZ ENDP				; CampaignListCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
?CampaignSoundEventCB@@YAXXZ PROC			; CampaignSoundEventCB

; 1560 : {

	push	ebp
	mov	ebp, esp

; 1561 : 	if(CampEventSoundID > 0)

	cmp	DWORD PTR ?CampEventSoundID@@3JA, 0	; CampEventSoundID
	jle	SHORT $LN2@CampaignSo

; 1562 : 	{
; 1563 : 		gSoundMgr->PlaySound(CampEventSoundID);

	mov	eax, DWORD PTR ?CampEventSoundID@@3JA	; CampEventSoundID
	push	eax
	mov	ecx, DWORD PTR ?gSoundMgr@@3PAVC_Sound@@A ; gSoundMgr
	call	?PlaySoundA@C_Sound@@QAEHJ@Z		; C_Sound::PlaySoundA

; 1564 : 		CampEventSoundID=0;

	mov	DWORD PTR ?CampEventSoundID@@3JA, 0	; CampEventSoundID
$LN2@CampaignSo:

; 1565 : 	}
; 1566 : }

	pop	ebp
	ret	0
?CampaignSoundEventCB@@YAXXZ ENDP			; CampaignSoundEventCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
_c$1 = -8						; size = 4
tv66 = -4						; size = 4
___formal$ = 8						; size = 4
_hittype$ = 12						; size = 2
_control$ = 16						; size = 4
?MapMgrMoveCB@@YAXJFPAVC_Base@@@Z PROC			; MapMgrMoveCB

; 1783 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1784 : 	if (!control){

	cmp	DWORD PTR _control$[ebp], 0
	jne	SHORT $LN7@MapMgrMove

; 1785 : 		return;

	jmp	SHORT $LN8@MapMgrMove
$LN7@MapMgrMove:

; 1786 : 	}
; 1787 : 	switch (hittype){

	movsx	eax, WORD PTR _hittype$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 59			; 0000003bH
	je	SHORT $LN3@MapMgrMove
	cmp	DWORD PTR tv66[ebp], 61			; 0000003dH
	je	SHORT $LN4@MapMgrMove
	jmp	SHORT $LN8@MapMgrMove
$LN4@MapMgrMove:

; 1788 : 		case C_TYPE_MOUSEMOVE:
; 1789 : 			gMapMgr->MoveCenter(-((C_MapMover *)control)->GetHRange(),-((C_MapMover *)control)->GetVRange());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetVRange@C_MapMover@@QAEJXZ		; C_MapMover::GetVRange
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetHRange@C_MapMover@@QAEJXZ		; C_MapMover::GetHRange
	neg	eax
	push	eax
	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?MoveCenter@C_Map@@QAEXJJ@Z		; C_Map::MoveCenter

; 1790 : 			control->Parent_->RefreshClient (0);

	push	0
	mov	ecx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient

; 1791 : 		break;

	jmp	SHORT $LN8@MapMgrMove
$LN3@MapMgrMove:

; 1792 : 		case C_TYPE_MOUSEWHEEL:
; 1793 : 			C_Control *c = static_cast<C_Control*>(control);

	mov	edx, DWORD PTR _control$[ebp]
	mov	DWORD PTR _c$1[ebp], edx

; 1794 : 			if (c->GetIncrement() > 0){

	mov	ecx, DWORD PTR _c$1[ebp]
	call	?GetIncrement@C_Control@@QAEHXZ		; C_Control::GetIncrement
	test	eax, eax
	jle	SHORT $LN2@MapMgrMove

; 1795 : 				gMapMgr->ZoomOut();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomOut@C_Map@@QAEXXZ			; C_Map::ZoomOut

; 1796 : 			}
; 1797 : 			else {

	jmp	SHORT $LN8@MapMgrMove
$LN2@MapMgrMove:

; 1798 : 				gMapMgr->ZoomIn();

	mov	ecx, DWORD PTR ?gMapMgr@@3PAVC_Map@@A	; gMapMgr
	call	?ZoomIn@C_Map@@QAEXXZ			; C_Map::ZoomIn
$LN8@MapMgrMove:

; 1799 : 			}
; 1800 : 		break;
; 1801 : 	}
; 1802 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?MapMgrMoveCB@@YAXJFPAVC_Base@@@Z ENDP			; MapMgrMoveCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
___formal$ = 16						; size = 4
?MapMgrDrawCB@@YAXJFPAVC_Base@@@Z PROC			; MapMgrDrawCB

; 1776 : {

	push	ebp
	mov	ebp, esp

; 1777 : 	//gMapMgr->SetFlags(I_NEED_TO_DRAW_MAP);
; 1778 : 	//gMapMgr->DrawMap();
; 1779 : }

	pop	ebp
	ret	0
?MapMgrDrawCB@@YAXJFPAVC_Base@@@Z ENDP			; MapMgrDrawCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
$T2 = -88						; size = 4
$T3 = -84						; size = 4
$T4 = -80						; size = 4
tv1179 = -76						; size = 4
$T5 = -72						; size = 4
tv1153 = -68						; size = 4
$T6 = -64						; size = 4
tv1118 = -60						; size = 4
$T7 = -56						; size = 4
_i$ = -52						; size = 4
_bmp$ = -48						; size = 4
_blip$ = -44						; size = 4
_j$ = -40						; size = 4
_clk$ = -36						; size = 4
_sldr$ = -32						; size = 4
_tmr$ = -28						; size = 4
_lbox$ = -24						; size = 4
_winme$ = -20						; size = 4
_ctrl$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ID$ = 8						; size = 4
?HookupCampaignControls@@YAXJ@Z PROC			; HookupCampaignControls

; 2991 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HookupCampaignControls@@YAXJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2992 : 	C_Window *winme;
; 2993 : 	C_Button *ctrl;
; 2994 : 	C_ListBox *lbox;
; 2995 : 	C_TimerHook *tmr;
; 2996 : 	C_Bitmap *bmp;
; 2997 : 	C_Blip *blip;
; 2998 : 	C_Slider *sldr;
; 2999 : 	C_Clock *clk;
; 3000 : 	int i,j;
; 3001 : 
; 3002 : 	winme=gMainHandler->FindWindow(ID);

	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 3003 : 
; 3004 : 	if(winme == NULL)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN90@HookupCamp

; 3005 : 		return;

	jmp	$LN91@HookupCamp
$LN90@HookupCamp:

; 3006 : 
; 3007 : 	// Time/Date CB
; 3008 : 	clk=(C_Clock *)winme->FindControl(TIME_ID);

	push	5001					; 00001389H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _clk$[ebp], eax

; 3009 : 	if(clk)

	cmp	DWORD PTR _clk$[ebp], 0
	je	SHORT $LN89@HookupCamp

; 3010 : 	{
; 3011 : 		clk->SetTimerCallback(CampaignClockCB);

	push	OFFSET ?CampaignClockCB@@YAHPAVC_Base@@@Z ; CampaignClockCB
	mov	ecx, DWORD PTR _clk$[ebp]
	call	?SetTimerCallback@C_Clock@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Clock::SetTimerCallback

; 3012 : 		clk->SetFlagBitOn(C_BIT_TIMER);

	push	65536					; 00010000H
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 3013 : 		clk->Refresh();

	mov	ecx, DWORD PTR _clk$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _clk$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
$LN89@HookupCamp:

; 3014 : 	}
; 3015 : 
; 3016 : 	// Hook up IDs here
; 3017 : 	// Set Commit Button
; 3018 : 	ctrl=(C_Button *)winme->FindControl(MISSION_MAIN_CTRL);

	push	6002					; 00001772H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3019 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN88@HookupCamp

; 3020 : 		ctrl->SetCallback(OpenCampaignCB);

	push	OFFSET ?OpenCampaignCB@@YAXJFPAVC_Base@@@Z ; OpenCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN88@HookupCamp:

; 3021 : 
; 3022 : 	// Set Commit Button
; 3023 : 	ctrl=(C_Button *)winme->FindControl(SQUAD_MAIN_CTRL);

	push	6004					; 00001774H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3024 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN87@HookupCamp

; 3025 : 		ctrl->SetCallback(OpenCampaignCB);

	push	OFFSET ?OpenCampaignCB@@YAXJFPAVC_Base@@@Z ; OpenCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN87@HookupCamp:

; 3026 : 
; 3027 : 	// Set Commit Button
; 3028 : 	ctrl=(C_Button *)winme->FindControl(INTEL_MAIN_CTRL);

	push	6003					; 00001773H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3029 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN86@HookupCamp

; 3030 : 		ctrl->SetCallback(OpenCampaignCB);

	push	OFFSET ?OpenCampaignCB@@YAXJFPAVC_Base@@@Z ; OpenCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN86@HookupCamp:

; 3031 : 
; 3032 : 	ctrl=(C_Button *)winme->FindControl(SP_MAIN_CTRL);

	push	70003					; 00011173H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3033 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN85@HookupCamp

; 3034 : 		ctrl->SetCallback(OpenSetupCB);

	push	OFFSET ?OpenSetupCB@@YAXJFPAVC_Base@@@Z	; OpenSetupCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN85@HookupCamp:

; 3035 : 
; 3036 : 	ctrl=(C_Button *)winme->FindControl(ACMI_CTRL);

	push	10047					; 0000273fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3037 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN84@HookupCamp

; 3038 : 		ctrl->SetCallback(ACMIButtonCB);

	push	OFFSET ?ACMIButtonCB@@YAXJFPAVC_Base@@@Z ; ACMIButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN84@HookupCamp:

; 3039 : 
; 3040 : 	ctrl=(C_Button *)winme->FindControl(TACREF_CTRL);

	push	10052					; 00002744H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3041 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN83@HookupCamp

; 3042 : 		ctrl->SetCallback(OpenTacticalReferenceCB);

	push	OFFSET ?OpenTacticalReferenceCB@@YAXJFPAVC_Base@@@Z ; OpenTacticalReferenceCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN83@HookupCamp:

; 3043 : 
; 3044 : 	ctrl=(C_Button *)winme->FindControl(NEWS_FLASH);

	push	6451					; 00001933H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3045 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN82@HookupCamp

; 3046 : 		ctrl->SetCallback(OpenNewsWindowCB);

	push	OFFSET ?OpenNewsWindowCB@@YAXJFPAVC_Base@@@Z ; OpenNewsWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN82@HookupCamp:

; 3047 : 
; 3048 : 	// Save AS button
; 3049 : 	ctrl=(C_Button *)winme->FindControl(CAMP_SAVE_CTRL);

	push	6508					; 0000196cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3050 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN81@HookupCamp

; 3051 : 		ctrl->SetCallback(CampSaveAsCB);

	push	OFFSET ?CampSaveAsCB@@YAXJFPAVC_Base@@@Z ; CampSaveAsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN81@HookupCamp:

; 3052 : 
; 3053 : 	// Set Commit Button
; 3054 : 	ctrl=(C_Button *)winme->FindControl(CAMP_CLOSE_CTRL);

	push	6005					; 00001775H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3055 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN80@HookupCamp

; 3056 : 		ctrl->SetCallback(EndCommitCB);

	push	OFFSET ?EndCommitCB@@YAXJFPAVC_Base@@@Z	; EndCommitCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN80@HookupCamp:

; 3057 : 
; 3058 : 	ctrl=(C_Button *)winme->FindControl(CLOSE_WINDOW);

	push	80001					; 00013881H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3059 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN79@HookupCamp

; 3060 : 		ctrl->SetCallback(GenericCloseCB);

	push	OFFSET ?GenericCloseCB@@YAXJFPAVC_Base@@@Z ; GenericCloseCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN79@HookupCamp:

; 3061 : 
; 3062 : 	ctrl=(C_Button *)winme->FindControl(BI_M_MX_CTRL);

	push	6501					; 00001965H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3063 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN78@HookupCamp

; 3064 : 		ctrl->SetCallback(OpenFullMapCB);

	push	OFFSET ?OpenFullMapCB@@YAXJFPAVC_Base@@@Z ; OpenFullMapCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN78@HookupCamp:

; 3065 : 
; 3066 : 	ctrl=(C_Button *)winme->FindControl(CB_FULLMAP_CLOSE_CTRL);

	push	6402					; 00001902H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3067 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN77@HookupCamp

; 3068 : 		ctrl->SetCallback(CloseFullMapCB);

	push	OFFSET ?CloseFullMapCB@@YAXJFPAVC_Base@@@Z ; CloseFullMapCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN77@HookupCamp:

; 3069 : 
; 3070 : 	// Hook up Close Button
; 3071 : 	ctrl=(C_Button *)winme->FindControl(CAMP_CLOSE);

	push	81002					; 00013c6aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3072 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN76@HookupCamp

; 3073 : 		ctrl->SetCallback(CloseCampaignWindowCB);

	push	OFFSET ?CloseCampaignWindowCB@@YAXJFPAVC_Base@@@Z ; CloseCampaignWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN76@HookupCamp:

; 3074 : 
; 3075 : 	ctrl=(C_Button *)winme->FindControl(BI_LIN_CTRL);

	push	6506					; 0000196aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3076 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN75@HookupCamp

; 3077 : 		ctrl->SetCallback(OpenCrossSectionCB);

	push	OFFSET ?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z ; OpenCrossSectionCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN75@HookupCamp:

; 3078 : 
; 3079 : 	ctrl=(C_Button *)winme->FindControl(BI_LOG_CTRL);

	push	6507					; 0000196bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3080 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN74@HookupCamp

; 3081 : 		ctrl->SetCallback(OpenCrossSectionCB);

	push	OFFSET ?OpenCrossSectionCB@@YAXJFPAVC_Base@@@Z ; OpenCrossSectionCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN74@HookupCamp:

; 3082 : 
; 3083 : 	ctrl=(C_Button *)winme->FindControl(BI_FIT_CTRL);

	push	6505					; 00001969H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3084 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN73@HookupCamp

; 3085 : 		ctrl->SetCallback(FitFlightPlanCB);

	push	OFFSET ?FitFlightPlanCB@@YAXJFPAVC_Base@@@Z ; FitFlightPlanCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN73@HookupCamp:

; 3086 : 
; 3087 : 	// Hook up Small MAP Buttons
; 3088 : 	ctrl=(C_Button *)winme->FindControl(BI_ZIN_CTRL);

	push	6504					; 00001968H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3089 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN72@HookupCamp

; 3090 : 		ctrl->SetCallback(SmallMapZoomInCB);

	push	OFFSET ?SmallMapZoomInCB@@YAXJFPAVC_Base@@@Z ; SmallMapZoomInCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN72@HookupCamp:

; 3091 : 
; 3092 : 	ctrl=(C_Button *)winme->FindControl(BI_ZOUT_CTRL);

	push	6503					; 00001967H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3093 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN71@HookupCamp

; 3094 : 		ctrl->SetCallback(SmallMapZoomOutCB);

	push	OFFSET ?SmallMapZoomOutCB@@YAXJFPAVC_Base@@@Z ; SmallMapZoomOutCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN71@HookupCamp:

; 3095 : 
; 3096 : 	ctrl=(C_Button *)winme->FindControl(SINGLE_FLY_CTRL);

	push	2000000					; 001e8480H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3097 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN70@HookupCamp

; 3098 : 		ctrl->SetCallback(CampaignButtonCB);

	push	OFFSET ?CampaignButtonCB@@YAXJFPAVC_Base@@@Z ; CampaignButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN70@HookupCamp:

; 3099 : 
; 3100 : 	ctrl=(C_Button *)winme->FindControl(COMMS_FLY_CTRL);

	push	2000001					; 001e8481H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3101 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN69@HookupCamp

; 3102 : 		ctrl->SetCallback(CampaignButtonCB);

	push	OFFSET ?CampaignButtonCB@@YAXJFPAVC_Base@@@Z ; CampaignButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN69@HookupCamp:

; 3103 : 
; 3104 : 	ctrl=(C_Button *)winme->FindControl(BRIEF_BUTTON);

	push	6121					; 000017e9H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3105 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN68@HookupCamp

; 3106 : 		ctrl->SetCallback(OpenBriefingWindowCB);

	push	OFFSET ?OpenBriefingWindowCB@@YAXJFPAVC_Base@@@Z ; OpenBriefingWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN68@HookupCamp:

; 3107 : 
; 3108 : 	ctrl=(C_Button *)winme->FindControl(ATO_BUTTON);

	push	6122					; 000017eaH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3109 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN67@HookupCamp

; 3110 : 		ctrl->SetCallback(OpenATOWindowCB);

	push	OFFSET ?OpenATOWindowCB@@YAXJFPAVC_Base@@@Z ; OpenATOWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN67@HookupCamp:

; 3111 : 
; 3112 : 	ctrl=(C_Button *)winme->FindControl(FLIGHT_PLAN_BUTTON);

	push	6123					; 000017ebH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3113 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN66@HookupCamp

; 3114 : 		ctrl->SetCallback(OpenFlightPlanWindowCB);

	push	OFFSET ?OpenFlightPlanWindowCB@@YAXJFPAVC_Base@@@Z ; OpenFlightPlanWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN66@HookupCamp:

; 3115 : 
; 3116 : 	ctrl=(C_Button *)winme->FindControl(MUNITIONS_BUTTON);

	push	6124					; 000017ecH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3117 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN65@HookupCamp

; 3118 : 		ctrl->SetCallback(OpenMunitionsWindowCB);

	push	OFFSET ?OpenMunitionsWindowCB@@YAXJFPAVC_Base@@@Z ; OpenMunitionsWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN65@HookupCamp:

; 3119 : 
; 3120 : 	ctrl=(C_Button *)winme->FindControl(FORCE_LEVELS_BUTTON);

	push	86119					; 00015067H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3121 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN64@HookupCamp

; 3122 : 		ctrl->SetCallback(OpenForceLevelsWindowCB);

	push	OFFSET ?OpenForceLevelsWindowCB@@YAXJFPAVC_Base@@@Z ; OpenForceLevelsWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN64@HookupCamp:

; 3123 : 
; 3124 : 	ctrl=(C_Button *)winme->FindControl(CAMP_HISTORY_BUTTON);

	push	86122					; 0001506aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3125 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN63@HookupCamp

; 3126 : 		ctrl->SetCallback(OpenHistoryWindowCB);

	push	OFFSET ?OpenHistoryWindowCB@@YAXJFPAVC_Base@@@Z ; OpenHistoryWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN63@HookupCamp:

; 3127 : 
; 3128 : 	ctrl=(C_Button *)winme->FindControl(CAMP_OOB_BUTTON);

	push	86121					; 00015069H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3129 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN62@HookupCamp

; 3130 : 		ctrl->SetCallback(OpenOOBWindowCB);

	push	OFFSET ?OpenOOBWindowCB@@YAXJFPAVC_Base@@@Z ; OpenOOBWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN62@HookupCamp:

; 3131 : 
; 3132 : 	ctrl=(C_Button *)winme->FindControl(SQUADRON_BUTTON);

	push	86120					; 00015068H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3133 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN61@HookupCamp

; 3134 : 		ctrl->SetCallback(OpenSquadronWindowCB);

	push	OFFSET ?OpenSquadronWindowCB@@YAXJFPAVC_Base@@@Z ; OpenSquadronWindowCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN61@HookupCamp:

; 3135 : 
; 3136 : 	ctrl=(C_Button *)winme->FindControl(SIERRA_HOTEL);

	push	6202					; 0000183aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3137 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN60@HookupCamp

; 3138 : 		ctrl->SetCallback(OpenSierraHotelCB);

	push	OFFSET ?OpenSierraHotelCB@@YAXJFPAVC_Base@@@Z ; OpenSierraHotelCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN60@HookupCamp:

; 3139 : 
; 3140 : 	ctrl=(C_Button *)winme->FindControl(CAMP_ACMI_CTRL);

	push	86123					; 0001506bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3141 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN59@HookupCamp

; 3142 : 		ctrl->SetCallback(ACMIButtonCB);

	push	OFFSET ?ACMIButtonCB@@YAXJFPAVC_Base@@@Z ; ACMIButtonCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN59@HookupCamp:

; 3143 : 
; 3144 : 	ctrl=(C_Button*)winme->FindControl(STOP);

	push	200003					; 00030d43H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3145 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN58@HookupCamp

; 3146 : 		ctrl->SetCallback(HistoryStop);

	push	OFFSET ?HistoryStop@@YAXJFPAVC_Base@@@Z	; HistoryStop
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN58@HookupCamp:

; 3147 : 
; 3148 : 	ctrl=(C_Button*)winme->FindControl(REVERSE);

	push	200142					; 00030dceH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3149 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN57@HookupCamp

; 3150 : 		ctrl->SetCallback(HistoryPlayReverse);

	push	OFFSET ?HistoryPlayReverse@@YAXJFPAVC_Base@@@Z ; HistoryPlayReverse
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN57@HookupCamp:

; 3151 : 
; 3152 : 	ctrl=(C_Button*)winme->FindControl(FAST_REVERSE);

	push	6208					; 00001840H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3153 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN56@HookupCamp

; 3154 : 		ctrl->SetCallback(HistoryFastReverse);

	push	OFFSET ?HistoryFastReverse@@YAXJFPAVC_Base@@@Z ; HistoryFastReverse
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN56@HookupCamp:

; 3155 : 
; 3156 : 	ctrl=(C_Button*)winme->FindControl(STEP_REVERSE);

	push	6209					; 00001841H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3157 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN55@HookupCamp

; 3158 : 		ctrl->SetCallback(HistoryStepReverse);

	push	OFFSET ?HistoryStepReverse@@YAXJFPAVC_Base@@@Z ; HistoryStepReverse
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN55@HookupCamp:

; 3159 : 
; 3160 : 	ctrl=(C_Button*)winme->FindControl(PLAY);

	push	200004					; 00030d44H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3161 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN54@HookupCamp

; 3162 : 		ctrl->SetCallback(HistoryPlayForward);

	push	OFFSET ?HistoryPlayForward@@YAXJFPAVC_Base@@@Z ; HistoryPlayForward
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN54@HookupCamp:

; 3163 : 
; 3164 : 	ctrl=(C_Button*)winme->FindControl(FAST_FORWARD);

	push	6211					; 00001843H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3165 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN53@HookupCamp

; 3166 : 		ctrl->SetCallback(HistoryFastForward);

	push	OFFSET ?HistoryFastForward@@YAXJFPAVC_Base@@@Z ; HistoryFastForward
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN53@HookupCamp:

; 3167 : 
; 3168 : 	ctrl=(C_Button*)winme->FindControl(STEP_FORWARD);

	push	6212					; 00001844H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3169 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN52@HookupCamp

; 3170 : 		ctrl->SetCallback(HistoryStepForward);

	push	OFFSET ?HistoryStepForward@@YAXJFPAVC_Base@@@Z ; HistoryStepForward
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN52@HookupCamp:

; 3171 : 
; 3172 : 	sldr=(C_Slider*)winme->FindControl(PLAYBALL);

	push	6203					; 0000183bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3173 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN51@HookupCamp

; 3174 : 		sldr->SetCallback(HistoryDragBallCB);

	push	OFFSET ?HistoryDragBallCB@@YAXJFPAVC_Base@@@Z ; HistoryDragBallCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN51@HookupCamp:

; 3175 : 
; 3176 : 	ctrl=(C_Button *)winme->FindControl(SORT_PRIORITY);

	push	6131					; 000017f3H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3177 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN50@HookupCamp

; 3178 : 		ctrl->SetCallback(SelectMissionSortCB);

	push	OFFSET ?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z ; SelectMissionSortCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN50@HookupCamp:

; 3179 : 
; 3180 : 	ctrl=(C_Button *)winme->FindControl(SORT_TAKEOFF);

	push	6132					; 000017f4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3181 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN49@HookupCamp

; 3182 : 		ctrl->SetCallback(SelectMissionSortCB);

	push	OFFSET ?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z ; SelectMissionSortCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN49@HookupCamp:

; 3183 : 
; 3184 : 	ctrl=(C_Button *)winme->FindControl(SORT_PACKAGE);

	push	6134					; 000017f6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3185 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN48@HookupCamp

; 3186 : 		ctrl->SetCallback(SelectMissionSortCB);

	push	OFFSET ?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z ; SelectMissionSortCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN48@HookupCamp:

; 3187 : 
; 3188 : 	ctrl=(C_Button *)winme->FindControl(SORT_ROLE);

	push	6133					; 000017f5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3189 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN47@HookupCamp

; 3190 : 		ctrl->SetCallback(SelectMissionSortCB);

	push	OFFSET ?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z ; SelectMissionSortCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN47@HookupCamp:

; 3191 : 
; 3192 : 	ctrl=(C_Button *)winme->FindControl(SORT_STATUS);

	push	6135					; 000017f7H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3193 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN46@HookupCamp

; 3194 : 		ctrl->SetCallback(SelectMissionSortCB);

	push	OFFSET ?SelectMissionSortCB@@YAXJFPAVC_Base@@@Z ; SelectMissionSortCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN46@HookupCamp:

; 3195 : 
; 3196 : 	ctrl=(C_Button *)winme->FindControl(CB_1_1);

	push	6108					; 000017dcH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3197 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN45@HookupCamp

; 3198 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN45@HookupCamp:

; 3199 : 
; 3200 : 	ctrl=(C_Button *)winme->FindControl(CB_2_1);

	push	6109					; 000017ddH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3201 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN44@HookupCamp

; 3202 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN44@HookupCamp:

; 3203 : 
; 3204 : 	ctrl=(C_Button *)winme->FindControl(CB_2_2);

	push	6110					; 000017deH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3205 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN43@HookupCamp

; 3206 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN43@HookupCamp:

; 3207 : 
; 3208 : 	ctrl=(C_Button *)winme->FindControl(CB_3_1);

	push	6111					; 000017dfH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3209 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN42@HookupCamp

; 3210 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN42@HookupCamp:

; 3211 : 
; 3212 : 	ctrl=(C_Button *)winme->FindControl(CB_3_2);

	push	6112					; 000017e0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3213 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN41@HookupCamp

; 3214 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN41@HookupCamp:

; 3215 : 
; 3216 : 	ctrl=(C_Button *)winme->FindControl(CB_3_3);

	push	6113					; 000017e1H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3217 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN40@HookupCamp

; 3218 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN40@HookupCamp:

; 3219 : 
; 3220 : 	ctrl=(C_Button *)winme->FindControl(CB_4_1);

	push	6114					; 000017e2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3221 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN39@HookupCamp

; 3222 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN39@HookupCamp:

; 3223 : 
; 3224 : 	ctrl=(C_Button *)winme->FindControl(CB_4_2);

	push	6115					; 000017e3H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3225 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN38@HookupCamp

; 3226 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN38@HookupCamp:

; 3227 : 
; 3228 : 	ctrl=(C_Button *)winme->FindControl(CB_4_3);

	push	6116					; 000017e4H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3229 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN37@HookupCamp

; 3230 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN37@HookupCamp:

; 3231 : 
; 3232 : 	ctrl=(C_Button *)winme->FindControl(CB_4_4);

	push	6117					; 000017e5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3233 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN36@HookupCamp

; 3234 : 		ctrl->SetCallback(PickCampaignPlaneCB);

	push	OFFSET ?PickCampaignPlaneCB@@YAXJFPAVC_Base@@@Z ; PickCampaignPlaneCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN36@HookupCamp:

; 3235 : 
; 3236 : 	ctrl=(C_Button *)winme->FindControl(LB_MAIN_CTRL);

	push	50003					; 0000c353H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3237 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN35@HookupCamp

; 3238 : 		ctrl->SetCallback(OpenLogBookCB);

	push	OFFSET ?OpenLogBookCB@@YAXJFPAVC_Base@@@Z ; OpenLogBookCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN35@HookupCamp:

; 3239 : 
; 3240 : 	lbox=(C_ListBox *)winme->FindControl(BAR_1);

	push	6226					; 00001852H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3241 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN34@HookupCamp

; 3242 : 		lbox->SetCallback(UpdateIntelBarCB);

	push	OFFSET ?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z ; UpdateIntelBarCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN34@HookupCamp:

; 3243 : 
; 3244 : 	lbox=(C_ListBox *)winme->FindControl(BAR_2);

	push	6227					; 00001853H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3245 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN33@HookupCamp

; 3246 : 		lbox->SetCallback(UpdateIntelBarCB);

	push	OFFSET ?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z ; UpdateIntelBarCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN33@HookupCamp:

; 3247 : 
; 3248 : 	lbox=(C_ListBox *)winme->FindControl(BAR_3);

	push	6228					; 00001854H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3249 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN32@HookupCamp

; 3250 : 		lbox->SetCallback(UpdateIntelBarCB);

	push	OFFSET ?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z ; UpdateIntelBarCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN32@HookupCamp:

; 3251 : 
; 3252 : 	lbox=(C_ListBox *)winme->FindControl(BAR_4);

	push	6229					; 00001855H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3253 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN31@HookupCamp

; 3254 : 		lbox->SetCallback(UpdateIntelBarCB);

	push	OFFSET ?UpdateIntelBarCB@@YAXJFPAVC_Base@@@Z ; UpdateIntelBarCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN31@HookupCamp:

; 3255 : 
; 3256 : 	lbox=(C_ListBox *)winme->FindControl(ACCELERATION);

	push	5002					; 0000138aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3257 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN30@HookupCamp

; 3258 : 		lbox->SetCallback(TimeCompressionCB);

	push	OFFSET ?TimeCompressionCB@@YAXJFPAVC_Base@@@Z ; TimeCompressionCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN30@HookupCamp:

; 3259 : 
; 3260 : 	lbox=(C_ListBox *)winme->FindControl(CHART);

	push	6266					; 0000187aH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3261 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN29@HookupCamp

; 3262 : 		lbox->SetCallback(SelectForceCategoryCB);

	push	OFFSET ?SelectForceCategoryCB@@YAXJFPAVC_Base@@@Z ; SelectForceCategoryCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN29@HookupCamp:

; 3263 : 
; 3264 : 	ctrl=(C_Button *)winme->FindControl(CO_MAIN_CTRL);

	push	60003					; 0000ea63H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3265 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN28@HookupCamp

; 3266 : 		ctrl->SetCallback(OpenCampaignCommsCB);

	push	OFFSET ?OpenCampaignCommsCB@@YAXJFPAVC_Base@@@Z ; OpenCampaignCommsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN28@HookupCamp:

; 3267 : 
; 3268 : 	bmp=(C_Bitmap*)winme->FindControl(CP_SUA);

	push	6012					; 0000177cH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 3269 : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	$LN27@HookupCamp

; 3270 : 	{
; 3271 : 		bmp->SetImage(gOccupationMap);

	mov	ecx, DWORD PTR ?gOccupationMap@@3PAVIMAGE_RSC@@A ; gOccupationMap
	push	ecx
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetImage@C_Bitmap@@QAEXPAVIMAGE_RSC@@@Z ; C_Bitmap::SetImage

; 3272 : 
; 3273 : 		blip=new C_Blip;

	push	324					; 00000144H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T7[ebp], 0
	je	SHORT $LN93@HookupCamp
	mov	ecx, DWORD PTR $T7[ebp]
	call	??0C_Blip@@QAE@XZ			; C_Blip::C_Blip
	mov	DWORD PTR tv1118[ebp], eax
	jmp	SHORT $LN94@HookupCamp
$LN93@HookupCamp:
	mov	DWORD PTR tv1118[ebp], 0
$LN94@HookupCamp:
	mov	edx, DWORD PTR tv1118[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR _blip$[ebp], eax

; 3274 : 		blip->Setup(9000000,0);

	push	0
	push	9000000					; 00895440H
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?Setup@C_Blip@@QAEXJF@Z			; C_Blip::Setup

; 3275 : 		blip->SetClient(1);

	push	1
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 3276 : 		for(i=0;i<8;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN26@HookupCamp
$LN25@HookupCamp:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN26@HookupCamp:
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN24@HookupCamp

; 3277 : 		{
; 3278 : 			for(j=0;j<8;j++)

	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN23@HookupCamp
$LN22@HookupCamp:
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN23@HookupCamp:
	cmp	DWORD PTR _j$[ebp], 8
	jge	SHORT $LN21@HookupCamp

; 3279 : 				blip->SetImage(BLIP_IDS[0][j],static_cast<uchar>(i),static_cast<uchar>(j));

	movzx	eax, BYTE PTR _j$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$[ebp]
	push	ecx
	mov	edx, 32					; 00000020H
	imul	edx, 0
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR ?BLIP_IDS@@3PAY07JA[edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _blip$[ebp]
	call	?SetImage@C_Blip@@QAEXJEE@Z		; C_Blip::SetImage
	jmp	SHORT $LN22@HookupCamp
$LN21@HookupCamp:

; 3280 : 		}

	jmp	SHORT $LN25@HookupCamp
$LN24@HookupCamp:

; 3281 : 		blip->InitDrawer();

	mov	ecx, DWORD PTR _blip$[ebp]
	call	?InitDrawer@C_Blip@@QAEXXZ		; C_Blip::InitDrawer

; 3282 : 		winme->AddControl(blip);

	mov	edx, DWORD PTR _blip$[ebp]
	push	edx
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl

; 3283 : 
; 3284 : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T6[ebp], 0
	je	SHORT $LN95@HookupCamp
	mov	ecx, DWORD PTR $T6[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv1153[ebp], eax
	jmp	SHORT $LN96@HookupCamp
$LN95@HookupCamp:
	mov	DWORD PTR tv1153[ebp], 0
$LN96@HookupCamp:
	mov	eax, DWORD PTR tv1153[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _tmr$[ebp], ecx

; 3285 : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 3286 : 		tmr->SetUpdateCallback(UpdateEventBlipsCB);

	push	OFFSET ?UpdateEventBlipsCB@@YAXJFPAVC_Base@@@Z ; UpdateEventBlipsCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 3287 : 		tmr->SetUserNumber(_UI95_TIMER_DELAY_,5*_UI95_TICKS_PER_SECOND_);

	push	50					; 00000032H
	push	4
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUserNumber@C_Base@@QAEXJJ@Z		; C_Base::SetUserNumber

; 3288 : 		winme->AddControl(tmr);

	mov	edx, DWORD PTR _tmr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN27@HookupCamp:

; 3289 : 	}
; 3290 : 	if(ID == HISTORY_WIN)

	cmp	DWORD PTR _ID$[ebp], 6202		; 0000183aH
	jne	SHORT $LN20@HookupCamp

; 3291 : 	{
; 3292 : 		tmr=new C_TimerHook;

	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN97@HookupCamp
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0C_TimerHook@@QAE@XZ			; C_TimerHook::C_TimerHook
	mov	DWORD PTR tv1179[ebp], eax
	jmp	SHORT $LN98@HookupCamp
$LN97@HookupCamp:
	mov	DWORD PTR tv1179[ebp], 0
$LN98@HookupCamp:
	mov	eax, DWORD PTR tv1179[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _tmr$[ebp], ecx

; 3293 : 		tmr->Setup(C_DONT_CARE,C_TYPE_TIMER);

	push	67					; 00000043H
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?Setup@C_TimerHook@@QAEXJF@Z		; C_TimerHook::Setup

; 3294 : 		tmr->SetClient(1);

	push	1
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetClient@C_Base@@QAEXF@Z		; C_Base::SetClient

; 3295 : 		tmr->SetUpdateCallback(HistoryTimerCB);

	push	OFFSET ?HistoryTimerCB@@YAXJFPAVC_Base@@@Z ; HistoryTimerCB
	mov	ecx, DWORD PTR _tmr$[ebp]
	call	?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ; C_TimerHook::SetUpdateCallback

; 3296 : 		winme->AddControl(tmr);

	mov	edx, DWORD PTR _tmr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?AddControl@C_Window@@QAEXPAVC_Base@@@Z	; C_Window::AddControl
$LN20@HookupCamp:

; 3297 : 	}
; 3298 : 
; 3299 : // Controls for setting priorities window (strategy.scf)
; 3300 : 	ctrl=(C_Button*)winme->FindControl(OK);

	push	16027					; 00003e9bH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3301 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN19@HookupCamp

; 3302 : 		ctrl->SetCallback(UsePriotityCB);

	push	OFFSET ?UsePriotityCB@@YAXJFPAVC_Base@@@Z ; UsePriotityCB
	mov	eax, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN19@HookupCamp:

; 3303 : 
; 3304 : 	ctrl=(C_Button*)winme->FindControl(CANCEL);

	push	502					; 000001f6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3305 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN18@HookupCamp

; 3306 : 		ctrl->SetCallback(CancelPriorityCB);

	push	OFFSET ?CancelPriorityCB@@YAXJFPAVC_Base@@@Z ; CancelPriorityCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN18@HookupCamp:

; 3307 : 
; 3308 : // OLD Control... removed by Joe
; 3309 : //	ctrl=(C_Button*)winme->FindControl(RESET);
; 3310 : //	if(ctrl)
; 3311 : //		ctrl->SetCallback(ResetPriorityCB);
; 3312 : 
; 3313 : 	ctrl=(C_Button*)winme->FindControl(TARGET_PRIORITIES);

	push	6322					; 000018b2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3314 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN17@HookupCamp

; 3315 : 		ctrl->SetCallback(PriorityTabsCB);

	push	OFFSET ?PriorityTabsCB@@YAXJFPAVC_Base@@@Z ; PriorityTabsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN17@HookupCamp:

; 3316 : 
; 3317 : 	ctrl=(C_Button*)winme->FindControl(MISSION_PRIORITIES);

	push	6339					; 000018c3H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3318 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN16@HookupCamp

; 3319 : 		ctrl->SetCallback(PriorityTabsCB);

	push	OFFSET ?PriorityTabsCB@@YAXJFPAVC_Base@@@Z ; PriorityTabsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN16@HookupCamp:

; 3320 : 
; 3321 : 	ctrl=(C_Button*)winme->FindControl(PAK_PRIORITIES);

	push	6348					; 000018ccH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3322 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN15@HookupCamp

; 3323 : 		ctrl->SetCallback(PriorityTabsCB);

	push	OFFSET ?PriorityTabsCB@@YAXJFPAVC_Base@@@Z ; PriorityTabsCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN15@HookupCamp:

; 3324 : 
; 3325 : 	ctrl=(C_Button*)winme->FindControl(THEATER_256);

	push	6351					; 000018cfH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3326 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN14@HookupCamp

; 3327 : 		ctrl->SetCallback(MapSelectPAKCB);

	push	OFFSET ?MapSelectPAKCB@@YAXJFPAVC_Base@@@Z ; MapSelectPAKCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN14@HookupCamp:

; 3328 : 
; 3329 : 	ctrl=(C_Button*)winme->FindControl(HQ_FLAG);

	push	6354					; 000018d2H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3330 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN13@HookupCamp

; 3331 : 		ctrl->SetCallback(SetCampaignPrioritiesCB);

	push	OFFSET ?SetCampaignPrioritiesCB@@YAXJFPAVC_Base@@@Z ; SetCampaignPrioritiesCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN13@HookupCamp:

; 3332 : 
; 3333 : 	lbox=(C_ListBox*)winme->FindControl(PAK_TITLE);

	push	6350					; 000018ceH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _lbox$[ebp], eax

; 3334 : 	if(lbox)

	cmp	DWORD PTR _lbox$[ebp], 0
	je	SHORT $LN12@HookupCamp

; 3335 : 		lbox->SetCallback(SelectPAKCB);

	push	OFFSET ?SelectPAKCB@@YAXJFPAVC_Base@@@Z	; SelectPAKCB
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _lbox$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN12@HookupCamp:

; 3336 : 
; 3337 : 	sldr=(C_Slider*)winme->FindControl(PAK_SLIDER);

	push	6349					; 000018cdH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _sldr$[ebp], eax

; 3338 : 	if(sldr)

	cmp	DWORD PTR _sldr$[ebp], 0
	je	SHORT $LN11@HookupCamp

; 3339 : 		sldr->SetCallback(SetPAKPriorityCB);

	push	OFFSET ?SetPAKPriorityCB@@YAXJFPAVC_Base@@@Z ; SetPAKPriorityCB
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _sldr$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN11@HookupCamp:

; 3340 : 
; 3341 : 	bmp=(C_Bitmap*)winme->FindControl(PAK_REGION);

	push	6352					; 000018d0H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _bmp$[ebp], eax

; 3342 : 	if(bmp)

	cmp	DWORD PTR _bmp$[ebp], 0
	je	SHORT $LN10@HookupCamp

; 3343 : 	{
; 3344 : 		bmp->SetTimerCallback(PAKMapTimerCB);

	push	OFFSET ?PAKMapTimerCB@@YAHPAVC_Base@@@Z	; PAKMapTimerCB
	mov	ecx, DWORD PTR _bmp$[ebp]
	call	?SetTimerCallback@C_Bitmap@@QAEXP6AHPAVC_Base@@@Z@Z ; C_Bitmap::SetTimerCallback
$LN10@HookupCamp:

; 3345 : 	}
; 3346 : 
; 3347 : 	ctrl=(C_Button*)winme->FindControl(SET_PRIORITIES);

	push	18342					; 000047a6H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3348 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN9@HookupCamp

; 3349 : 		ctrl->SetCallback(OpenPriorityCB);

	push	OFFSET ?OpenPriorityCB@@YAXJFPAVC_Base@@@Z ; OpenPriorityCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN9@HookupCamp:

; 3350 : 
; 3351 : // Help GUIDE thing
; 3352 : 	ctrl=(C_Button*)winme->FindControl(UI_HELP_GUIDE);

	push	2501					; 000009c5H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3353 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN8@HookupCamp

; 3354 : 		ctrl->SetCallback(UI_Help_Guide_CB);

	push	OFFSET ?UI_Help_Guide_CB@@YAXJFPAVC_Base@@@Z ; UI_Help_Guide_CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN8@HookupCamp:

; 3355 : 
; 3356 : // HACK... remove these before shipping
; 3357 : 	ctrl=(C_Button*)winme->FindControl(CAMP_HACK_BTN_1);

	push	86141					; 0001507dH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3358 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN7@HookupCamp

; 3359 : 		ctrl->SetCallback(CampHackButton1CB);

	push	OFFSET ?CampHackButton1CB@@YAXJFPAVC_Base@@@Z ; CampHackButton1CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN7@HookupCamp:

; 3360 : 
; 3361 : 	ctrl=(C_Button*)winme->FindControl(CAMP_HACK_BTN_2);

	push	86142					; 0001507eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3362 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN6@HookupCamp

; 3363 : 		ctrl->SetCallback(CampHackButton2CB);

	push	OFFSET ?CampHackButton2CB@@YAXJFPAVC_Base@@@Z ; CampHackButton2CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN6@HookupCamp:

; 3364 : 
; 3365 : 	ctrl=(C_Button*)winme->FindControl(CAMP_HACK_BTN_3);

	push	86143					; 0001507fH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3366 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN5@HookupCamp

; 3367 : 		ctrl->SetCallback(CampHackButton3CB);

	push	OFFSET ?CampHackButton3CB@@YAXJFPAVC_Base@@@Z ; CampHackButton3CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN5@HookupCamp:

; 3368 : 
; 3369 : 	ctrl=(C_Button*)winme->FindControl(CAMP_HACK_BTN_4);

	push	86144					; 00015080H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3370 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN4@HookupCamp

; 3371 : 		ctrl->SetCallback(CampHackButton4CB);

	push	OFFSET ?CampHackButton4CB@@YAXJFPAVC_Base@@@Z ; CampHackButton4CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN4@HookupCamp:

; 3372 : 
; 3373 : 	ctrl=(C_Button*)winme->FindControl(CAMP_HACK_BTN_5);

	push	86145					; 00015081H
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3374 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN3@HookupCamp

; 3375 : 		ctrl->SetCallback(CampHackButton5CB);

	push	OFFSET ?CampHackButton5CB@@YAXJFPAVC_Base@@@Z ; CampHackButton5CB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN3@HookupCamp:

; 3376 : 
; 3377 : 	winme=gMainHandler->FindWindow(STARTCAMP_WIN);

	push	70205					; 0001123dH
	mov	ecx, DWORD PTR ?gMainHandler@@3PAVC_Handler@@A ; gMainHandler
	call	?FindWindowA@C_Handler@@QAEPAVC_Window@@J@Z ; C_Handler::FindWindowA
	mov	DWORD PTR _winme$[ebp], eax

; 3378 : 	if (!winme)

	cmp	DWORD PTR _winme$[ebp], 0
	jne	SHORT $LN2@HookupCamp

; 3379 : 		return;

	jmp	SHORT $LN91@HookupCamp
$LN2@HookupCamp:

; 3380 : 	ctrl=(C_Button*)winme->FindControl(START_CAMP);

	push	70206					; 0001123eH
	mov	ecx, DWORD PTR _winme$[ebp]
	call	?FindControl@C_Window@@QAEPAVC_Base@@J@Z ; C_Window::FindControl
	mov	DWORD PTR _ctrl$[ebp], eax

; 3381 : 	if(ctrl)

	cmp	DWORD PTR _ctrl$[ebp], 0
	je	SHORT $LN91@HookupCamp

; 3382 : 		ctrl->SetCallback(StartCampaignCB);

	push	OFFSET ?StartCampaignCB@@YAXJFPAVC_Base@@@Z ; StartCampaignCB
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ctrl$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
$LN91@HookupCamp:

; 3383 : 
; 3384 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$1:
	mov	eax, DWORD PTR $T6[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?HookupCampaignControls@@YAXJ@Z$2:
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?HookupCampaignControls@@YAXJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HookupCampaignControls@@YAXJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HookupCampaignControls@@YAXJ@Z ENDP			; HookupCampaignControls
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 2
_control$ = 16						; size = 4
?ViewTimerCB@@YAXJFPAVC_Base@@@Z PROC			; ViewTimerCB

; 372  : {

	push	ebp
	mov	ebp, esp

; 373  : 	if(control->GetFlags() & C_BIT_ABSOLUTE)

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetFlags@C_Base@@QAEJXZ		; C_Base::GetFlags
	and	eax, 262144				; 00040000H
	je	SHORT $LN2@ViewTimerC

; 374  : 	{
; 375  : 		control->Parent_->RefreshWindow();

	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	call	?RefreshWindow@C_Window@@QAEXXZ		; C_Window::RefreshWindow

; 376  : 	}
; 377  : 	else

	jmp	SHORT $LN3@ViewTimerC
$LN2@ViewTimerC:

; 378  : 		control->Parent_->RefreshClient(control->GetClient());

	mov	ecx, DWORD PTR _control$[ebp]
	call	?GetClient@C_Base@@QAEFXZ		; C_Base::GetClient
	movsx	ecx, ax
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR [edx+48]
	call	?RefreshClient@C_Window@@QAEXJ@Z	; C_Window::RefreshClient
$LN3@ViewTimerC:

; 379  : }

	pop	ebp
	ret	0
?ViewTimerCB@@YAXJFPAVC_Base@@@Z ENDP			; ViewTimerCB
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\src\campaign\campaign.cpp
;	COMDAT ??__EReconFlightID@@YAXXZ
text$yc	SEGMENT
??__EReconFlightID@@YAXXZ PROC				; `dynamic initializer for 'ReconFlightID'', COMDAT

; 97   : VU_ID ReconFlightID=FalconNullId;

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?FalconNullId@@3VVU_ID@@A
	mov	DWORD PTR ?ReconFlightID@@3VVU_ID@@A, eax
	mov	ecx, DWORD PTR ?FalconNullId@@3VVU_ID@@A+4
	mov	DWORD PTR ?ReconFlightID@@3VVU_ID@@A+4, ecx
	pop	ebp
	ret	0
??__EReconFlightID@@YAXXZ ENDP				; `dynamic initializer for 'ReconFlightID''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ PROC ; PlayerOptionsClass::GetStartFlag, COMDAT
; _this$ = ecx

; 201  : 		{ 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 202  : 			switch(SimStartFlags) // MLR 12/11/2003 - Sanity check

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	jl	SHORT $LN2@GetStartFl
	cmp	DWORD PTR tv65[ebp], 2
	jle	SHORT $LN1@GetStartFl
	jmp	SHORT $LN2@GetStartFl
$LN1@GetStartFl:

; 203  : 			{
; 204  : 			case START_RUNWAY:
; 205  : 			case START_TAXI:
; 206  : 			case START_RAMP:
; 207  : 				return(SimStartFlags); 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+196]
	jmp	SHORT $LN4@GetStartFl
$LN2@GetStartFl:

; 208  : 			}
; 209  : 			return(START_RUNWAY);

	xor	eax, eax
$LN4@GetStartFl:

; 210  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetStartFlag@PlayerOptionsClass@@QAE?AW4StartFlag@1@XZ ENDP ; PlayerOptionsClass::GetStartFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\playerop.h
;	COMDAT ?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 4
?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z PROC ; PlayerOptionsClass::SetStartFlag, COMDAT
; _this$ = ecx

; 199  : 	void SetStartFlag(StartFlag flag)								{ SimStartFlags=flag; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _flag$[ebp]
	mov	DWORD PTR [eax+196], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStartFlag@PlayerOptionsClass@@QAEXW4StartFlag@1@@Z ENDP ; PlayerOptionsClass::SetStartFlag
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGlobalPositioningSystem@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGlobalPositioningSystem@@QAEPAXI@Z PROC		; GlobalPositioningSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GlobalPositioningSystem@@QAE@XZ	; GlobalPositioningSystem::~GlobalPositioningSystem
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGlobalPositioningSystem@@QAEPAXI@Z ENDP		; GlobalPositioningSystem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetTeamNo, COMDAT
; _this$ = ecx

; 76   : 		void SetTeamNo(long ID)					{ TeamNo_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTeamNo@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetTeamNo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?GetAllowed@GlobalPositioningSystem@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAllowed@GlobalPositioningSystem@@QAEJXZ PROC	; GlobalPositioningSystem::GetAllowed, COMDAT
; _this$ = ecx

; 74   : 		long GetAllowed()						{ return(Allowed_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAllowed@GlobalPositioningSystem@@QAEJXZ ENDP	; GlobalPositioningSystem::GetAllowed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_sections$ = 8						; size = 4
?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetAllowed, COMDAT
; _this$ = ecx

; 73   : 		void SetAllowed(long sections)			{ Allowed_=sections; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _sections$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAllowed@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetAllowed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetMissionMenu@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetMissionMenu@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetMissionMenu, COMDAT
; _this$ = ecx

; 69   : 		void SetMissionMenu(long ID)			{ MissionMenu_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMissionMenu@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetMissionMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetSquadronMenu@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetSquadronMenu@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetSquadronMenu, COMDAT
; _this$ = ecx

; 68   : 		void SetSquadronMenu(long ID)			{ SquadronMenu_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSquadronMenu@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetSquadronMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetUnitMenu@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetUnitMenu@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetUnitMenu, COMDAT
; _this$ = ecx

; 66   : 		void SetUnitMenu(long ID)				{ UnitMenu_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUnitMenu@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetUnitMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetObjectiveMenu@GlobalPositioningSystem@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetObjectiveMenu@GlobalPositioningSystem@@QAEXJ@Z PROC	; GlobalPositioningSystem::SetObjectiveMenu, COMDAT
; _this$ = ecx

; 65   : 		void SetObjectiveMenu(long ID)			{ ObjectiveMenu_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+36], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetObjectiveMenu@GlobalPositioningSystem@@QAEXJ@Z ENDP	; GlobalPositioningSystem::SetObjectiveMenu
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\gps.h
;	COMDAT ?SetMap@GlobalPositioningSystem@@QAEXPAVC_Map@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_map$ = 8						; size = 4
?SetMap@GlobalPositioningSystem@@QAEXPAVC_Map@@@Z PROC	; GlobalPositioningSystem::SetMap, COMDAT
; _this$ = ecx

; 60   : 		void SetMap(C_Map *map)					{ Map_=map; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMap@GlobalPositioningSystem@@QAEXPAVC_Map@@@Z ENDP	; GlobalPositioningSystem::SetMap
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_3dViewer@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_3dViewer@@QAEPAXI@Z PROC				; C_3dViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_3dViewer@@QAE@XZ			; C_3dViewer::~C_3dViewer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_3dViewer@@QAEPAXI@Z ENDP				; C_3dViewer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\c3dview.h
;	COMDAT ??1C_3dViewer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1C_3dViewer@@QAE@XZ PROC				; C_3dViewer::~C_3dViewer, COMDAT
; _this$ = ecx

; 65   : 		~C_3dViewer() { Cleanup(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Cleanup@C_3dViewer@@QAEHXZ		; C_3dViewer::Cleanup
	mov	esp, ebp
	pop	ebp
	ret	0
??1C_3dViewer@@QAE@XZ ENDP				; C_3dViewer::~C_3dViewer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?SetCampaignFlag@UIComms@@QAEXD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_gameType$ = 8						; size = 1
?SetCampaignFlag@UIComms@@QAEXD@Z PROC			; UIComms::SetCampaignFlag, COMDAT
; _this$ = ecx

; 133  : 		void SetCampaignFlag(char gameType) { InCampaign_=gameType; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _gameType$[ebp]
	mov	BYTE PTR [eax+73], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCampaignFlag@UIComms@@QAEXD@Z ENDP			; UIComms::SetCampaignFlag
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\uicomms.h
;	COMDAT ?Online@UIComms@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Online@UIComms@@QAEHXZ PROC				; UIComms::Online, COMDAT
; _this$ = ecx

; 118  : 		BOOL Online()					{ return(Online_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+64]
	mov	esp, ebp
	pop	ebp
	ret	0
?Online@UIComms@@QAEHXZ ENDP				; UIComms::Online
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Map@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Map@@QAEPAXI@Z PROC				; C_Map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Map@@QAE@XZ			; C_Map::~C_Map
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Map@@QAEPAXI@Z ENDP				; C_Map::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetTeamFlags@C_Map@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TeamID$ = 8						; size = 4
_flags$ = 12						; size = 4
?SetTeamFlags@C_Map@@QAEXJJ@Z PROC			; C_Map::SetTeamFlags, COMDAT
; _this$ = ecx

; 173  : 		void SetTeamFlags(long TeamID,long flags) { if(TeamID >= 0 && TeamID < _MAX_TEAMS_) TeamFlags_[TeamID]=flags; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _TeamID$[ebp], 0
	jl	SHORT $LN2@SetTeamFla
	cmp	DWORD PTR _TeamID$[ebp], 8
	jge	SHORT $LN2@SetTeamFla
	mov	eax, DWORD PTR _TeamID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _flags$[ebp]
	mov	DWORD PTR [ecx+eax*4+828], edx
$LN2@SetTeamFla:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTeamFlags@C_Map@@QAEXJJ@Z ENDP			; C_Map::SetTeamFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetCurWPZ@C_Map@@QAEPAVC_Waypoint@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurWPZ@C_Map@@QAEPAVC_Waypoint@@XZ PROC		; C_Map::GetCurWPZ, COMDAT
; _this$ = ecx

; 170  : 		C_Waypoint *GetCurWPZ() { return(CurWPZ_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1096]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurWPZ@C_Map@@QAEPAVC_Waypoint@@XZ ENDP		; C_Map::GetCurWPZ
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?GetZWindow@C_Map@@QAEPAVC_Window@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetZWindow@C_Map@@QAEPAVC_Window@@XZ PROC		; C_Map::GetZWindow, COMDAT
; _this$ = ecx

; 168  : 		C_Window *GetZWindow() { return(WPZWindow_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1128]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetZWindow@C_Map@@QAEPAVC_Window@@XZ ENDP		; C_Map::GetZWindow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetObjectiveIcons@C_Map@@QAEXJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TeamNo$ = 8						; size = 4
_OffID$ = 12						; size = 4
_OnID$ = 16						; size = 4
?SetObjectiveIcons@C_Map@@QAEXJJJ@Z PROC		; C_Map::SetObjectiveIcons, COMDAT
; _this$ = ecx

; 159  : 		void SetObjectiveIcons(long TeamNo,long OffID,long OnID) { ObjIconIDs_[TeamNo&7][0]=OffID; ObjIconIDs_[TeamNo&7][1]=OnID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _TeamNo$[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+640]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _OffID$[ebp]
	mov	DWORD PTR [edx+eax], ecx
	mov	edx, DWORD PTR _TeamNo$[ebp]
	and	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+640]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _OnID$[ebp]
	mov	DWORD PTR [ecx+edx], eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetObjectiveIcons@C_Map@@QAEXJJJ@Z ENDP		; C_Map::SetObjectiveIcons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetNavyIcons@C_Map@@QAEXJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TeamNo$ = 8						; size = 4
_OffID$ = 12						; size = 4
_OnID$ = 16						; size = 4
?SetNavyIcons@C_Map@@QAEXJJJ@Z PROC			; C_Map::SetNavyIcons, COMDAT
; _this$ = ecx

; 158  : 		void SetNavyIcons(long TeamNo,long OffID,long OnID) { NavyIconIDs_[TeamNo&7][0]=OffID; NavyIconIDs_[TeamNo&7][1]=OnID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _TeamNo$[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+576]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _OffID$[ebp]
	mov	DWORD PTR [edx+eax], ecx
	mov	edx, DWORD PTR _TeamNo$[ebp]
	and	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+576]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _OnID$[ebp]
	mov	DWORD PTR [ecx+edx], eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetNavyIcons@C_Map@@QAEXJJJ@Z ENDP			; C_Map::SetNavyIcons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetArmyIcons@C_Map@@QAEXJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TeamNo$ = 8						; size = 4
_OffID$ = 12						; size = 4
_OnID$ = 16						; size = 4
?SetArmyIcons@C_Map@@QAEXJJJ@Z PROC			; C_Map::SetArmyIcons, COMDAT
; _this$ = ecx

; 157  : 		void SetArmyIcons(long TeamNo,long OffID,long OnID) { ArmyIconIDs_[TeamNo&7][0]=OffID; ArmyIconIDs_[TeamNo&7][1]=OnID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _TeamNo$[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+512]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _OffID$[ebp]
	mov	DWORD PTR [edx+eax], ecx
	mov	edx, DWORD PTR _TeamNo$[ebp]
	and	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+512]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _OnID$[ebp]
	mov	DWORD PTR [ecx+edx], eax
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetArmyIcons@C_Map@@QAEXJJJ@Z ENDP			; C_Map::SetArmyIcons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetAirIcons@C_Map@@QAEXJJJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TeamNo$ = 8						; size = 4
_Dir$ = 12						; size = 4
_OffID$ = 16						; size = 4
_OnID$ = 20						; size = 4
?SetAirIcons@C_Map@@QAEXJJJJ@Z PROC			; C_Map::SetAirIcons, COMDAT
; _this$ = ecx

; 156  : 		void SetAirIcons(long TeamNo,long Dir,long OffID,long OnID) { AirIconIDs_[TeamNo&7][Dir&7][0]=OffID; AirIconIDs_[TeamNo&7][Dir&7][1]=OnID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _TeamNo$[ebp]
	and	eax, 7
	shl	eax, 6
	add	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Dir$[ebp]
	and	ecx, 7
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _OffID$[ebp]
	mov	DWORD PTR [edx+eax], ecx
	mov	edx, DWORD PTR _TeamNo$[ebp]
	and	edx, 7
	shl	edx, 6
	add	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _Dir$[ebp]
	and	eax, 7
	lea	ecx, DWORD PTR [edx+eax*8]
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _OnID$[ebp]
	mov	DWORD PTR [ecx+edx], eax
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetAirIcons@C_Map@@QAEXJJJJ@Z ENDP			; C_Map::SetAirIcons
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetStrtRanges@C_Map@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minx$ = 8						; size = 4
_miny$ = 12						; size = 4
_maxx$ = 16						; size = 4
_maxy$ = 20						; size = 4
?SetStrtRanges@C_Map@@QAEXMMMM@Z PROC			; C_Map::SetStrtRanges, COMDAT
; _this$ = ecx

; 155  : 		void SetStrtRanges(float minx,float miny,float maxx,float maxy) { StrtMinX_=minx; StrtMinY_=miny; StrtMaxX_=maxx; StrtMaxY_=maxy; } // Min/Max ranges for WaypointZs

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _minx$[ebp]
	movss	DWORD PTR [eax+768], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _miny$[ebp]
	movss	DWORD PTR [ecx+772], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _maxx$[ebp]
	movss	DWORD PTR [edx+776], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _maxy$[ebp]
	movss	DWORD PTR [eax+780], xmm0
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetStrtRanges@C_Map@@QAEXMMMM@Z ENDP			; C_Map::SetStrtRanges
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmap.h
;	COMDAT ?SetLogRanges@C_Map@@QAEXMMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minx$ = 8						; size = 4
_miny$ = 12						; size = 4
_maxx$ = 16						; size = 4
_maxy$ = 20						; size = 4
?SetLogRanges@C_Map@@QAEXMMMM@Z PROC			; C_Map::SetLogRanges, COMDAT
; _this$ = ecx

; 154  : 		void SetLogRanges(float minx,float miny,float maxx,float maxy) { LogMinX_=minx; LogMinY_=miny; LogMaxX_=maxx; LogMaxY_=maxy; } // Min/Max ranges for WaypointZs

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _minx$[ebp]
	movss	DWORD PTR [eax+752], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _miny$[ebp]
	movss	DWORD PTR [ecx+756], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _maxx$[ebp]
	movss	DWORD PTR [edx+760], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _maxy$[ebp]
	movss	DWORD PTR [eax+764], xmm0
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetLogRanges@C_Map@@QAEXMMMM@Z ENDP			; C_Map::SetLogRanges
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\team.h
;	COMDAT ?GetColor@TeamClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetColor@TeamClass@@QAEHXZ PROC			; TeamClass::GetColor, COMDAT
; _this$ = ecx

; 329  : 	int GetColor (void)							{ return (int) teamColor; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+889]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetColor@TeamClass@@QAEHXZ ENDP			; TeamClass::GetColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ PROC	; UnitClass::GetFirstUnitWP, COMDAT
; _this$ = ecx

; 431  : 	WayPoint GetFirstUnitWP()				{ return wp_list; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+244]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstUnitWP@UnitClass@@QAEPAVWayPointClass@@XZ ENDP	; UnitClass::GetFirstUnitWP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\unit.h
;	COMDAT ?GetUnitNameID@UnitClass@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetUnitNameID@UnitClass@@QAEHXZ PROC			; UnitClass::GetUnitNameID, COMDAT
; _this$ = ecx

; 381  : 	int GetUnitNameID (void)						{ return name_id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [eax+226]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetUnitNameID@UnitClass@@QAEHXZ ENDP			; UnitClass::GetUnitNameID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCreationIter@CampaignClass@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCreationIter@CampaignClass@@QAEJXZ PROC		; CampaignClass::GetCreationIter, COMDAT
; _this$ = ecx

; 215  : 	long GetCreationIter()			{ return(CreationRand); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+352]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCreationIter@CampaignClass@@QAEJXZ ENDP		; CampaignClass::GetCreationIter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetCreatorIP@CampaignClass@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCreatorIP@CampaignClass@@QAEJXZ PROC		; CampaignClass::GetCreatorIP, COMDAT
; _this$ = ecx

; 213  : 	long GetCreatorIP()				{ return(CreatorIP); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+344]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCreatorIP@CampaignClass@@QAEJXZ ENDP		; CampaignClass::GetCreatorIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreationIter@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rand$ = 8						; size = 4
?SetCreationIter@CampaignClass@@QAEXJ@Z PROC		; CampaignClass::SetCreationIter, COMDAT
; _this$ = ecx

; 212  : 	void SetCreationIter(long rand) { CreationRand=rand; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rand$[ebp]
	mov	DWORD PTR [eax+352], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCreationIter@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreationIter
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?SetCreatorIP@CampaignClass@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ip$ = 8						; size = 4
?SetCreatorIP@CampaignClass@@QAEXJ@Z PROC		; CampaignClass::SetCreatorIP, COMDAT
; _this$ = ecx

; 210  : 	void SetCreatorIP(long ip)		{ CreatorIP=ip; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ip$[ebp]
	mov	DWORD PTR [eax+344], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCreatorIP@CampaignClass@@QAEXJ@Z ENDP		; CampaignClass::SetCreatorIP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetTETimeLimitTime@CampaignClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTETimeLimitTime@CampaignClass@@QAEKXZ PROC		; CampaignClass::GetTETimeLimitTime, COMDAT
; _this$ = ecx

; 162  : 	CampaignTime GetTETimeLimitTime (void)					{ return TE_TimeLimit; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTETimeLimitTime@CampaignClass@@QAEKXZ ENDP		; CampaignClass::GetTETimeLimitTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\cmpclass.h
;	COMDAT ?GetTEStartTime@CampaignClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTEStartTime@CampaignClass@@QAEKXZ PROC		; CampaignClass::GetTEStartTime, COMDAT
; _this$ = ecx

; 161  : 	CampaignTime GetTEStartTime (void)						{ return TE_StartTime; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTEStartTime@CampaignClass@@QAEKXZ ENDP		; CampaignClass::GetTEStartTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampLeaveCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampLeaveCriticalSection@@YAXXZ PROC			; CampLeaveCriticalSection, COMDAT

; 51   : inline void CampLeaveCriticalSection(){ F4LeaveCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4LeaveCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampLeaveCriticalSection@@YAXXZ ENDP			; CampLeaveCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campaign.h
;	COMDAT ?CampEnterCriticalSection@@YAXXZ
_TEXT	SEGMENT
?CampEnterCriticalSection@@YAXXZ PROC			; CampEnterCriticalSection, COMDAT

; 50   : inline void CampEnterCriticalSection(){ F4EnterCriticalSection(campCritical); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ?campCritical@@3PAUF4CSECTIONHANDLE@@A ; campCritical
	push	eax
	call	_F4EnterCriticalSection
	add	esp, 4
	pop	ebp
	ret	0
?CampEnterCriticalSection@@YAXXZ ENDP			; CampEnterCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ PROC ; FalconSessionEntity::GetGame, COMDAT
; _this$ = ecx

; 154  : 	FalconGameEntity* GetGame (void)              { return (FalconGameEntity*)VuSessionEntity::Game(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Game@VuSessionEntity@@QAEPAVVuGameEntity@@XZ ; VuSessionEntity::Game
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGame@FalconSessionEntity@@QAEPAVFalconGameEntity@@XZ ENDP ; FalconSessionEntity::GetGame
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetReqCompression@FalconSessionEntity@@QBEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReqCompression@FalconSessionEntity@@QBEFXZ PROC	; FalconSessionEntity::GetReqCompression, COMDAT
; _this$ = ecx

; 148  : 	short GetReqCompression (void) const          { return reqCompression; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+514]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetReqCompression@FalconSessionEntity@@QBEFXZ ENDP	; FalconSessionEntity::GetReqCompression
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPilotSlot@FalconSessionEntity@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPilotSlot@FalconSessionEntity@@QBEEXZ PROC		; FalconSessionEntity::GetPilotSlot, COMDAT
; _this$ = ecx

; 146  : 	uchar GetPilotSlot (void) const               { return pilotSlot; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+512]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPilotSlot@FalconSessionEntity@@QBEEXZ ENDP		; FalconSessionEntity::GetPilotSlot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ PROC ; FalconSessionEntity::GetPlayerSquadron, COMDAT
; _this$ = ecx

; 140  : 	SquadronClass* GetPlayerSquadron(void)	const { return playerSquadronPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ; VuBin<SquadronClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerSquadron@FalconSessionEntity@@QBEPAVSquadronClass@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadron
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ PROC ; FalconSessionEntity::GetPlayerFlight, COMDAT
; _this$ = ecx

; 139  : 	FlightClass* GetPlayerFlight(void) const      { return playerFlightPtr.get(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ; VuBin<FlightClass>::get
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerFlight@FalconSessionEntity@@QBEPAVFlightClass@@XZ ENDP ; FalconSessionEntity::GetPlayerFlight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\falcsess.h
;	COMDAT ?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ PROC ; FalconSessionEntity::GetPlayerSquadronID, COMDAT
; _this$ = ecx

; 133  : 	VU_ID GetPlayerSquadronID(void) const         { return playerSquadron; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+452]
	mov	edx, DWORD PTR [eax+456]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPlayerSquadronID@FalconSessionEntity@@QBE?AVVU_ID@@XZ ENDP ; FalconSessionEntity::GetPlayerSquadronID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ PROC	; VuBin<FlightClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VFlightClass@@@@QBEPAVFlightClass@@XZ ENDP	; VuBin<FlightClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ PROC ; VuBin<SquadronClass>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VSquadronClass@@@@QBEPAVSquadronClass@@XZ ENDP ; VuBin<SquadronClass>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\logbook.h
;	COMDAT ?Callsign@LogBookData@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Callsign@LogBookData@@QAEPADXZ PROC			; LogBookData::Callsign, COMDAT
; _this$ = ecx

; 171  : 	_TCHAR *Callsign(void)							{return Pilot.Callsign;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21					; 00000015H
	mov	esp, ebp
	pop	ebp
	ret	0
?Callsign@LogBookData@@QAEPADXZ ENDP			; LogBookData::Callsign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\rules.h
;	COMDAT ?GetRules@RulesClass@@QAEPAURulesStruct@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ PROC	; RulesClass::GetRules, COMDAT
; _this$ = ecx

; 49   : 		RulesStruct* GetRules(void)								{return (this);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRules@RulesClass@@QAEPAURulesStruct@@XZ ENDP	; RulesClass::GetRules
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\campaign\include\campwp.h
;	COMDAT ?GetWPArrivalTime@WayPointClass@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWPArrivalTime@WayPointClass@@QAEKXZ PROC		; WayPointClass::GetWPArrivalTime, COMDAT
; _this$ = ecx

; 202  : 	CampaignTime GetWPArrivalTime()					{ return Arrive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWPArrivalTime@WayPointClass@@QAEKXZ ENDP		; WayPointClass::GetWPArrivalTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui\include\cmusic.h
;	COMDAT ?ToggleStream@C_Music@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ToggleStream@C_Music@@QAEXXZ PROC			; C_Music::ToggleStream, COMDAT
; _this$ = ecx

; 85   : 		void ToggleStream() { StreamUsed_=(short)(1-StreamUsed_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, 1
	sub	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToggleStream@C_Music@@QAEXXZ ENDP			; C_Music::ToggleStream
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmapmvr.h
;	COMDAT ?GetVRange@C_MapMover@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetVRange@C_MapMover@@QAEJXZ PROC			; C_MapMover::GetVRange, COMDAT
; _this$ = ecx

; 44   : 		long GetVRange() { return(SY_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+108]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVRange@C_MapMover@@QAEJXZ ENDP			; C_MapMover::GetVRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmapmvr.h
;	COMDAT ?GetHRange@C_MapMover@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHRange@C_MapMover@@QAEJXZ PROC			; C_MapMover::GetHRange, COMDAT
; _this$ = ecx

; 43   : 		long GetHRange() { return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHRange@C_MapMover@@QAEJXZ ENDP			; C_MapMover::GetHRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\cmapmvr.h
;	COMDAT ?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_MapMover::SetDrawCallback, COMDAT
; _this$ = ecx

; 37   : 		void SetDrawCallback(void (*routine)(long,short,C_Base *)) { DrawCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+116], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetDrawCallback@C_MapMover@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_MapMover::SetDrawCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?GetYLabel@C_Level@@QAEPADF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_idx$ = 8						; size = 2
?GetYLabel@C_Level@@QAEPADF@Z PROC			; C_Level::GetYLabel, COMDAT
; _this$ = ecx

; 74   : 		_TCHAR *GetYLabel(short idx) { if(idx < 4) return(Y_Labels_[idx]); return(NULL); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _idx$[ebp]
	cmp	eax, 4
	jge	SHORT $LN1@GetYLabel
	movsx	ecx, WORD PTR _idx$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+88]
	jmp	SHORT $LN2@GetYLabel
$LN1@GetYLabel:
	xor	eax, eax
$LN2@GetYLabel:
	mov	esp, ebp
	pop	ebp
	ret	4
?GetYLabel@C_Level@@QAEPADF@Z ENDP			; C_Level::GetYLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?SetYLabel@C_Level@@QAEXFPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_idx$ = 8						; size = 2
_lbl$ = 12						; size = 4
?SetYLabel@C_Level@@QAEXFPAD@Z PROC			; C_Level::SetYLabel, COMDAT
; _this$ = ecx

; 72   : 		void SetYLabel(short idx,_TCHAR *lbl) { if(idx < 4) _tcscpy(Y_Labels_[idx],lbl); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _idx$[ebp]
	cmp	eax, 4
	jge	SHORT $LN2@SetYLabel
	mov	ecx, DWORD PTR _lbl$[ebp]
	push	ecx
	movsx	edx, WORD PTR _idx$[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+88]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN2@SetYLabel:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetYLabel@C_Level@@QAEXFPAD@Z ENDP			; C_Level::SetYLabel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?GetMaxValue@C_Level@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMaxValue@C_Level@@QAEJXZ PROC			; C_Level::GetMaxValue, COMDAT
; _this$ = ecx

; 70   : 		long GetMaxValue() { return(MaxValue_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMaxValue@C_Level@@QAEJXZ ENDP			; C_Level::GetMaxValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?GetMinValue@C_Level@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMinValue@C_Level@@QAEJXZ PROC			; C_Level::GetMinValue, COMDAT
; _this$ = ecx

; 69   : 		long GetMinValue() { return(MinValue_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMinValue@C_Level@@QAEJXZ ENDP			; C_Level::GetMinValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?SetTeamColor@C_Level@@QAEXFK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_team$ = 8						; size = 2
_color$ = 12						; size = 4
?SetTeamColor@C_Level@@QAEXFK@Z PROC			; C_Level::SetTeamColor, COMDAT
; _this$ = ecx

; 61   : 		void SetTeamColor(short team,COLORREF color) { if(team < _LEVEL_MAX_TEAMS_) Color_[team]=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _team$[ebp]
	cmp	eax, 8
	jge	SHORT $LN2@SetTeamCol
	movsx	ecx, WORD PTR _team$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _color$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], eax
$LN2@SetTeamCol:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTeamColor@C_Level@@QAEXFK@Z ENDP			; C_Level::SetTeamColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?SetDrawArea@C_Level@@QAEXFFFF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 2
_y$ = 12						; size = 2
_w$ = 16						; size = 2
_h$ = 20						; size = 2
?SetDrawArea@C_Level@@QAEXFFFF@Z PROC			; C_Level::SetDrawArea, COMDAT
; _this$ = ecx

; 59   : 		void SetDrawArea(short x,short y,short w,short h) { DrawArea_.left=x; DrawArea_.top=y; DrawArea_.right=x+w; DrawArea_.bottom=y+h; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movsx	eax, WORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], eax
	movsx	edx, WORD PTR _y$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], edx
	movsx	ecx, WORD PTR _x$[ebp]
	movsx	edx, WORD PTR _w$[ebp]
	add	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], ecx
	movsx	ecx, WORD PTR _y$[ebp]
	movsx	edx, WORD PTR _h$[ebp]
	add	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetDrawArea@C_Level@@QAEXFFFF@Z ENDP			; C_Level::SetDrawArea
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?SetEnd@C_Level@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?SetEnd@C_Level@@QAEXJ@Z PROC				; C_Level::SetEnd, COMDAT
; _this$ = ecx

; 53   : 		void SetEnd(long val) { End_=val; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax+84], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetEnd@C_Level@@QAEXJ@Z ENDP				; C_Level::SetEnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\clevel.h
;	COMDAT ?SetStart@C_Level@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?SetStart@C_Level@@QAEXJ@Z PROC				; C_Level::SetStart, COMDAT
; _this$ = ecx

; 52   : 		void SetStart(long val) { Start_=val; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _val$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStart@C_Level@@QAEXJ@Z ENDP				; C_Level::SetStart
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95_ext\chistory.h
;	COMDAT ?SetImage@C_History@@QAEXJJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_idx$ = 8						; size = 4
_ID$ = 12						; size = 4
?SetImage@C_History@@QAEXJJ@Z PROC			; C_History::SetImage, COMDAT
; _this$ = ecx

; 32   : 		void SetImage(long idx,long ID) { if(idx < _HIST_MAX_TEAMS_) ImageID_[idx]=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _idx$[ebp], 8
	jge	SHORT $LN2@SetImage
	mov	eax, DWORD PTR _idx$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [ecx+eax*4+60], edx
$LN2@SetImage:
	mov	esp, ebp
	pop	ebp
	ret	8
?SetImage@C_History@@QAEXJJ@Z ENDP			; C_History::SetImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ PROC		; C_Handler::GetAppWnd, COMDAT
; _this$ = ecx

; 244  : 		HWND GetAppWnd() { return(AppWindow_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAppWnd@C_Handler@@QAEPAUHWND__@@XZ ENDP		; C_Handler::GetAppWnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\chandler.h
;	COMDAT ?SetSection@C_Handler@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?SetSection@C_Handler@@QAEXJ@Z PROC			; C_Handler::SetSection, COMDAT
; _this$ = ecx

; 180  : 		void SetSection(long ID) { CurrentSection_=ID; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ID$[ebp]
	mov	DWORD PTR [eax+124], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSection@C_Handler@@QAEXJ@Z ENDP			; C_Handler::SetSection
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cwindow.h
;	COMDAT ?GetGroup@C_Window@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Window@@QAEJXZ PROC				; C_Window::GetGroup, COMDAT
; _this$ = ecx

; 317  : 		long GetGroup(void) { return(Group_);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Window@@QAEJXZ ENDP				; C_Window::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetNextWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetNextWindowLoaded, COMDAT
; _this$ = ecx

; 99   : 		long GetNextWindowLoaded() { WinIndex_++; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+960]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+960], cx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+962]
	cmp	ecx, eax
	jge	SHORT $LN2@GetNextWin
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+960]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+edx*4+104]
	jmp	SHORT $LN3@GetNextWin
	jmp	SHORT $LN3@GetNextWin
$LN2@GetNextWin:
	xor	eax, eax
$LN3@GetNextWin:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetNextWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cparser.h
;	COMDAT ?GetFirstWindowLoaded@C_Parser@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFirstWindowLoaded@C_Parser@@QAEJXZ PROC		; C_Parser::GetFirstWindowLoaded, COMDAT
; _this$ = ecx

; 98   : 		long GetFirstWindowLoaded() { WinIndex_=0; if(WinIndex_ < WinLoaded_) return(WindowList_[WinIndex_]); else return(0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+960], ax
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+960]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+962]
	cmp	eax, edx
	jge	SHORT $LN2@GetFirstWi
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+960]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+104]
	jmp	SHORT $LN3@GetFirstWi
	jmp	SHORT $LN3@GetFirstWi
$LN2@GetFirstWi:
	xor	eax, eax
$LN3@GetFirstWi:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFirstWindowLoaded@C_Parser@@QAEJXZ ENDP		; C_Parser::GetFirstWindowLoaded
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cclock.h
;	COMDAT ?SetTimerCallback@C_Clock@@QAEXP6AHPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Callback$ = 8						; size = 4
?SetTimerCallback@C_Clock@@QAEXP6AHPAVC_Base@@@Z@Z PROC	; C_Clock::SetTimerCallback, COMDAT
; _this$ = ecx

; 94   : 		void SetTimerCallback(BOOL (*Callback)(C_Base *me)) { TimerCallback_=Callback; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Callback$[ebp]
	mov	DWORD PTR [eax+148], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTimerCallback@C_Clock@@QAEXP6AHPAVC_Base@@@Z@Z ENDP	; C_Clock::SetTimerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetRefreshCallback, COMDAT
; _this$ = ecx

; 33   : 		void SetRefreshCallback(void (*routine)(long ID,short hittype,C_Base *control)) { RefreshCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetRefreshCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetRefreshCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cthook.h
;	COMDAT ?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_routine$ = 8						; size = 4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z PROC ; C_TimerHook::SetUpdateCallback, COMDAT
; _this$ = ecx

; 32   : 		void SetUpdateCallback(void (*routine)(long ID,short hittype,C_Base *control)) { UpdateCallback_=routine; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _routine$[ebp]
	mov	DWORD PTR [eax+52], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetUpdateCallback@C_TimerHook@@QAEXP6AXJFPAVC_Base@@@Z@Z ENDP ; C_TimerHook::SetUpdateCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderPos@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderPos@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderPos, COMDAT
; _this$ = ecx

; 56   : 		long GetSliderPos() { if(GetType() == C_TYPE_VERTICAL) return(SY_); return(SX_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@C_Base@@QAEFXZ			; C_Base::GetType
	cwde
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN1@GetSliderP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+116]
	jmp	SHORT $LN2@GetSliderP
$LN1@GetSliderP:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
$LN2@GetSliderP:
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderPos@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMin@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMin@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMin, COMDAT
; _this$ = ecx

; 55   : 		long GetSliderMin() { return(MinPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMin@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cslider.h
;	COMDAT ?GetSliderMax@C_Slider@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSliderMax@C_Slider@@QAEJXZ PROC			; C_Slider::GetSliderMax, COMDAT
; _this$ = ecx

; 54   : 		long GetSliderMax() { return(MaxPos_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+124]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSliderMax@C_Slider@@QAEJXZ ENDP			; C_Slider::GetSliderMax
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ctree.h
;	COMDAT ?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ PROC		; C_TreeList::GetRoot, COMDAT
; _this$ = ecx

; 118  : 		TREELIST *GetRoot() { return(Root_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+136]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRoot@C_TreeList@@QAEPAVTREELIST@@XZ ENDP		; C_TreeList::GetRoot
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?GetTextID@C_ListBox@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTextID@C_ListBox@@QAEJXZ PROC			; C_ListBox::GetTextID, COMDAT
; _this$ = ecx

; 109  : 		long GetTextID() { return(LabelVal_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextID@C_ListBox@@QAEJXZ ENDP			; C_ListBox::GetTextID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\clistbox.h
;	COMDAT ?SetLabelColor@C_ListBox@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?SetLabelColor@C_ListBox@@QAEXK@Z PROC			; C_ListBox::SetLabelColor, COMDAT
; _this$ = ecx

; 88   : 		void SetLabelColor(COLORREF color) { LabelColor_=color; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+160], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLabelColor@C_ListBox@@QAEXK@Z ENDP			; C_ListBox::SetLabelColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cblip.h
;	COMDAT ?SetImage@C_Blip@@QAEXJEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ImageID$ = 8						; size = 4
_side$ = 12						; size = 1
_blipno$ = 16						; size = 1
?SetImage@C_Blip@@QAEXJEE@Z PROC			; C_Blip::SetImage, COMDAT
; _this$ = ecx

; 52   : 		void SetImage(long ImageID,uchar side,uchar blipno) { SetImage(gImageMgr->GetImage(ImageID),side,blipno); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _blipno$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _side$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ImageID$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?gImageMgr@@3PAVC_Image@@A ; gImageMgr
	call	?GetImage@C_Image@@QAEPAVIMAGE_RSC@@J@Z	; C_Image::GetImage
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z ; C_Blip::SetImage
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetImage@C_Blip@@QAEXJEE@Z ENDP			; C_Blip::SetImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cblip.h
;	COMDAT ?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_img$ = 8						; size = 4
_side$ = 12						; size = 1
_blipno$ = 16						; size = 1
?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z PROC		; C_Blip::SetImage, COMDAT
; _this$ = ecx

; 51   : 		void SetImage(IMAGE_RSC *img,uchar side,uchar blipno) { BlipImg_[side&7][blipno&7]=img; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _side$[ebp]
	and	eax, 7
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+64]
	movzx	eax, BYTE PTR _blipno$[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _img$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetImage@C_Blip@@QAEXPAVIMAGE_RSC@@EE@Z ENDP		; C_Blip::SetImage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbitmap.h
;	COMDAT ?SetTimerCallback@C_Bitmap@@QAEXP6AHPAVC_Base@@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cb$ = 8						; size = 4
?SetTimerCallback@C_Bitmap@@QAEXP6AHPAVC_Base@@@Z@Z PROC ; C_Bitmap::SetTimerCallback, COMDAT
; _this$ = ecx

; 39   : 		void SetTimerCallback(BOOL (*cb)(C_Base *me)) { TimerCallback_=cb; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTimerCallback@C_Bitmap@@QAEXP6AHPAVC_Base@@@Z@Z ENDP ; C_Bitmap::SetTimerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\ccontrol.h
;	COMDAT ?GetIncrement@C_Control@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIncrement@C_Control@@QAEHXZ PROC			; C_Control::GetIncrement, COMDAT
; _this$ = ecx

; 74   : 		int  GetIncrement()             { return(Increment_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+88]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIncrement@C_Control@@QAEHXZ ENDP			; C_Control::GetIncrement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetH@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetH@C_Base@@QAEJXZ PROC				; C_Base::GetH, COMDAT
; _this$ = ecx

; 144  : 		long GetH()					{ return(h_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetH@C_Base@@QAEJXZ ENDP				; C_Base::GetH
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetClient@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClient@C_Base@@QAEFXZ PROC				; C_Base::GetClient, COMDAT
; _this$ = ecx

; 140  : 		short GetClient()			{ return(Client_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+40]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClient@C_Base@@QAEFXZ ENDP				; C_Base::GetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetFlags@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@C_Base@@QAEJXZ PROC				; C_Base::GetFlags, COMDAT
; _this$ = ecx

; 139  : 		long  GetFlags()			{ return(Flags_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@C_Base@@QAEJXZ ENDP				; C_Base::GetFlags
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetGroup@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGroup@C_Base@@QAEJXZ PROC				; C_Base::GetGroup, COMDAT
; _this$ = ecx

; 137  : 		long  GetGroup()			{ return(Section_[_GROUP_]); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGroup@C_Base@@QAEJXZ ENDP				; C_Base::GetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetType@C_Base@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@C_Base@@QAEFXZ PROC				; C_Base::GetType, COMDAT
; _this$ = ecx

; 135  : 		short GetType()				{ return(Type_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+22]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@C_Base@@QAEFXZ ENDP				; C_Base::GetType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?GetID@C_Base@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetID@C_Base@@QAEJXZ PROC				; C_Base::GetID, COMDAT
; _this$ = ecx

; 134  : 		long  GetID()				{ return(ID_); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetID@C_Base@@QAEJXZ ENDP				; C_Base::GetID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetReady@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 2
?SetReady@C_Base@@QAEXF@Z PROC				; C_Base::SetReady, COMDAT
; _this$ = ecx

; 116  : 		void SetReady(short r)									{ Ready_=r; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _r$[ebp]
	mov	WORD PTR [eax+42], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetReady@C_Base@@QAEXF@Z ENDP				; C_Base::SetReady
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetClient@C_Base@@QAEXF@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_client$ = 8						; size = 2
?SetClient@C_Base@@QAEXF@Z PROC				; C_Base::SetClient, COMDAT
; _this$ = ecx

; 98   : 		void SetClient(short client)							{ Client_=client; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _client$[ebp]
	mov	WORD PTR [eax+40], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClient@C_Base@@QAEXF@Z ENDP				; C_Base::SetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\cbase.h
;	COMDAT ?SetGroup@C_Base@@QAEXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
?SetGroup@C_Base@@QAEXJ@Z PROC				; C_Base::SetGroup, COMDAT
; _this$ = ecx

; 96   : 		void SetGroup(long id)									{ Section_[_GROUP_]=id; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 4
	imul	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGroup@C_Base@@QAEXJ@Z ENDP				; C_Base::SetGroup
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\ui95\csoundrc.h
;	COMDAT ?PlaySoundA@C_Sound@@QAEHJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ID$ = 8						; size = 4
?PlaySoundA@C_Sound@@QAEHJ@Z PROC			; C_Sound::PlaySoundA, COMDAT
; _this$ = ecx

; 79   : 		BOOL PlaySound(long ID) { return(PlaySound(GetSound(ID))); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _ID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSound@C_Sound@@QAEPAVSOUND_RES@@J@Z	; C_Sound::GetSound
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PlaySoundA@C_Sound@@QAEHPAVSOUND_RES@@@Z ; C_Sound::PlaySoundA
	mov	esp, ebp
	pop	ebp
	ret	4
?PlaySoundA@C_Sound@@QAEHJ@Z ENDP			; C_Sound::PlaySoundA
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GC_Resmgr@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GC_Resmgr@@QAEPAXI@Z PROC				; C_Resmgr::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1C_Resmgr@@QAE@XZ			; C_Resmgr::~C_Resmgr
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GC_Resmgr@@QAEPAXI@Z ENDP				; C_Resmgr::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\tchar.h
;	COMDAT __tcsnccpy
_TEXT	SEGMENT
__Dst$ = 8						; size = 4
__Source$ = 12						; size = 4
__Count$ = 16						; size = 4
__tcsnccpy PROC						; COMDAT

; 1809 : {

	push	ebp
	mov	ebp, esp

; 1810 : #pragma warning(push)
; 1811 : #pragma warning(disable:4996)
; 1812 :     return (char *)_mbsncpy((unsigned char *)_Dst,(const unsigned char *)_Source, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Source$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dst$[ebp]
	push	edx
	call	__mbsncpy
	add	esp, 12					; 0000000cH

; 1813 : #pragma warning(pop)
; 1814 : }

	pop	ebp
	ret	0
__tcsnccpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx

; 641  : 		{	// make error_condition for error code (generic if possible)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 642  : 		if (_Syserror_map(_Errval))

	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@default_er

; 643  : 			return (error_condition(_Errval, generic_category()));

	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er

; 644  : 		else

	jmp	SHORT $LN3@default_er
$LN2@default_er:

; 645  : 			return (error_condition(_Errval, system_category()));

	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:

; 646  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx

; 634  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 635  : 		const char *_Name = _Winerror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Winerror_map@std@@YAPBDH@Z		; std::_Winerror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 636  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 637  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx

; 629  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 630  : 		return ("system");

	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@

; 631  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx

; 624  : 	_System_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@

; 625  : 		{	// default constructor
; 626  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx

; 611  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 612  : 		if (_Errcode == (int)io_errc::stream)

	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message

; 613  : 			return ("iostream stream error");

	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message

; 614  : 		else

	jmp	SHORT $LN3@message
$LN2@message:

; 615  : 			return (_Generic_error_category::message(_Errcode));

	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:

; 616  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx

; 606  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 		return ("iostream");

	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@

; 608  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx

; 601  : 	_Iostream_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@

; 602  : 		{	// default constructor
; 603  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T1 = -12						; size = 4
tv69 = -8						; size = 4
__Name$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx

; 590  : 		{	// convert to name of error

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 591  : 		const char *_Name = _Syserror_map(_Errcode);

	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	?_Syserror_map@std@@YAPBDH@Z		; std::_Syserror_map
	add	esp, 4
	mov	DWORD PTR __Name$[ebp], eax

; 592  : 		return (string(_Name != 0 ? _Name : "unknown error"));

	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 593  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx

; 585  : 		{	// get name of category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		return ("generic");

	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx

; 580  : 	_Generic_error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@

; 581  : 		{	// default constructor
; 582  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx

; 376  : 		{	// test if *this == _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 377  : 		return (category() == _Right.category()
; 378  : 			&& value() == _Right.value());

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]

; 379  : 		}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx

; 354  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 355  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 356  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx

; 349  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 350  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 351  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx

; 316  : 		{	// construct from error code and category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax

; 317  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx

; 256  : 		{	// get category

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 257  : 		return (*_Mycat);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 258  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx

; 251  : 		{	// get error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 		return (_Myval);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 253  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv65 = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx

; 184  : 		{	// compare categories for equality

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 185  : 		return (this == &_Right);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]

; 186  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 415  : 	{	// test if conditions same for this category

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 416  : 	return (*this == _Code.category() && _Code.value() == _Errval);

	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]

; 417  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx

; 408  : 	{	// test if error code same condition

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 409  : 	return (default_error_condition(_Errval) == _Cond);

	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==

; 410  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx

; 401  : 	{	// make error_condition for error code

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 402  : 	return (error_condition(_Errval, *this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx

; 167  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 168  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx

; 162  : 	error_category()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@

; 163  : 		{	// default constructor
; 164  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT

; 679  : 	{	// get system_category

	push	ebp
	mov	ebp, esp

; 680  : 	return (_Error_objects<int>::_System_object);

	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object

; 681  : 	}

	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\system_error
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 669  : 	{	// get generic_category

	push	ebp
	mov	ebp, esp

; 670  : 	return (_Error_objects<int>::_Generic_object);

	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object

; 671  : 	}

	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 74   : 			{	// construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ PROC ; VuBin<VuSessionEntity>::get, COMDAT
; _this$ = ecx

; 55   : 	E *get() const{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return e;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$VuBin@VVuSessionEntity@@@@QBEPAVVuSessionEntity@@XZ ENDP ; VuBin<VuSessionEntity>::get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\vu2\include\vu_templates.h
;	COMDAT ??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ PROC		; VuBin<VuSessionEntity>::operator bool, COMDAT
; _this$ = ecx

; 40   : 	operator bool() const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 		return e != NULL;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv66[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv66[ebp]

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??B?$VuBin@VVuSessionEntity@@@@QBE_NXZ ENDP		; VuBin<VuSessionEntity>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2275 : 		{	// report an out_of_range error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2276 : 		_Xout_of_range("invalid string position");

	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	?_Xout_of_range@std@@YAXPBD@Z		; std::_Xout_of_range
$LN2@Xran:

; 2277 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2270 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2271 : 		_Xlength_error("string too long");

	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 2272 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Ptr$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -2						; size = 1
$T3 = -1						; size = 1
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2253 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2254 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2255 : 			;
; 2256 : 		else if (this->_BUF_SIZE <= this->_Myres)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2257 : 			{	// copy any leftovers to small buffer and deallocate
; 2258 : 			pointer _Ptr = this->_Bx._Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$1[ebp], eax

; 2259 : 			this->_Getal().destroy(&this->_Bx._Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>

; 2260 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2261 : 				_Traits::copy(this->_Bx._Buf,
; 2262 : 					_STD addressof(*_Ptr), _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$1[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:

; 2263 : 			this->_Getal().deallocate(_Ptr, this->_Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$1[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:

; 2264 : 			}
; 2265 : 		this->_Myres = this->_BUF_SIZE - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH

; 2266 : 		_Eos(_Newsize);

	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2267 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2237 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2238 : 		if (_Ptr == 0 || _Ptr < this->_Myptr()
; 2239 : 			|| this->_Myptr() + this->_Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2240 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2241 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2242 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2243 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2223 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2224 : 		if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2225 : 			_Xlen();	// result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:

; 2226 : 		if (this->_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2227 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2228 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2229 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2230 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2231 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2232 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2233 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:

; 2234 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2217 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2218 : 		_Traits::assign(this->_Myptr()[this->_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2219 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -48						; size = 4
tv204 = -44						; size = 4
tv203 = -40						; size = 4
tv202 = -36						; size = 4
__Ptr$ = -32						; size = 4
__Newres$ = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -19						; size = 1
$T3 = -18						; size = 1
$T4 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2184 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:

; 2186 : 		else if (this->_Myres / 2 <= _Newres / 3)

	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy

; 2189 : 			_Newres = this->_Myres
; 2190 : 				+ this->_Myres / 2;	// grow exponentially if possible

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax

; 2191 : 		else

	jmp	SHORT $LN8@Copy
$LN5@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:

; 2193 : 
; 2194 : 		_Elem *_Ptr;
; 2195 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 2197 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx

; 2199 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2203 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2204 : 			_CATCH_END

	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:

; 2205 : 		_CATCH_END

	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:

; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2208 : 			_Traits::copy(_Ptr, this->_Myptr(),
; 2209 : 				_Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:

; 2210 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2211 : 		this->_Getal().construct(&this->_Bx._Ptr, _Ptr);

	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>

; 2212 : 		this->_Myres = _Newres;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax

; 2213 : 		_Eos(_Oldlen);

	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:

; 2214 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
tv75 = -12						; size = 4
__Num$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1737 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1738 : 		size_type _Num = this->_Getal().max_size();

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1739 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]

; 1740 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1732 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1733 : 		return (this->_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1734 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1317 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1318 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase

; 1319 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:

; 1320 : 		if (this->_Mysize - _Off <= _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase

; 1321 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:

; 1322 : 		else if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase

; 1323 : 			{	// move elements down
; 1324 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax

; 1325 : 			size_type _Newsize = this->_Mysize - _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax

; 1326 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH

; 1327 : 			_Eos(_Newsize);

	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:

; 1328 : 			}
; 1329 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:

; 1330 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1309 : 		{	// erase elements [_Off, ...)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1310 : 		if (this->_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase

; 1311 : 			_Xran();	// _Off off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:

; 1312 : 		_Eos(_Off);

	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 1313 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:

; 1314 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1142 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1143 : 		_DEBUG_POINTER(_Ptr);
; 1144 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1145 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1123 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1124 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1125 : 		if (_Count != 0)
; 1126 : 			_DEBUG_POINTER(_Ptr);
; 1127 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1128 : 
; 1129 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1130 : 			return (assign(*this,
; 1131 : 				_Ptr - this->_Myptr(), _Count));	// substring

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1132 : 
; 1133 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1134 : 			{	// make room and assign new stuff
; 1135 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1136 : 			_Eos(_Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1137 : 			}
; 1138 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign:

; 1139 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1104 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1105 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign

; 1106 : 			_Xran();	// _Roff off end

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:

; 1107 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1108 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign

; 1109 : 			_Num = _Count;	// trim _Num to size

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:

; 1110 : 
; 1111 : 		if (this == &_Right)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign

; 1112 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:

; 1113 : 		else if (_Grow(_Num))

	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1114 : 			{	// make room and assign new stuff
; 1115 : 			_Traits::copy(this->_Myptr(),
; 1116 : 				_Right._Myptr() + _Roff, _Num);

	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH

; 1117 : 			_Eos(_Num);

	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:

; 1118 : 			}
; 1119 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:

; 1120 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 791  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >

; 792  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 793  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 794  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 688  : 		{	// get reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 689  : 		return (_Alty());

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 690  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 635  : 	_String_alloc(const _Alloc& = _Alloc())

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 636  : 		{	// construct allocator from _Al
; 637  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 521  : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 522  : 		return (this->_BUF_SIZE <= this->_Myres
; 523  : 			? _STD addressof(*this->_Bx._Ptr)
; 524  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 525  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 514  : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 515  : 		return (this->_BUF_SIZE <= this->_Myres
; 516  : 			? _STD addressof(*this->_Bx._Ptr)
; 517  : 			: this->_Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]

; 518  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 496  : 	_String_val()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 497  : 		{	// initialize values
; 498  : 		_Mysize = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 499  : 		_Myres = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 500  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 913  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 914  : 		return (_Mytraits::max_size(*this));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4

; 915  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx

; 886  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 887  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate

; 888  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx

; 875  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		return (_Mybase::allocate(_Count));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate

; 877  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx

; 830  : 		{	// construct default allocator (do nothing)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>

; 831  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT

; 761  : 		{	// get maximum size

	push	ebp
	mov	ebp, esp

; 762  : 		return (_Al.max_size());

	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size

; 763  : 		}

	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 627  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 628  : 		return ((size_t)(-1) / sizeof (_Ty));

	or	eax, -1

; 629  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 590  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 592  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 585  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 586  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 587  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 565  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 566  : 		{	// construct default allocator (do nothing)
; 567  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\xutility
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT

; 3644 : const allocator_arg_t allocator_arg = allocator_arg_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\utility
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$yc	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT

; 65   : 	piecewise_construct_t();

	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$yc	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 563  : 		{	// assign an element

	push	ebp
	mov	ebp, esp

; 564  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 565  : 		}

	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 551  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 552  : 		return (_Count == 0 ? _First1
; 553  : 			: (_Elem *)_CSTD memmove(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]

; 554  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 528  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

	push	ebp
	mov	ebp, esp
	push	ecx

; 529  : 		return (_Count == 0 ? _First1
; 530  : 			: (_Elem *)_CSTD memcpy(_First1, _First2, _Count));

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]

; 531  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 521  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	push	ecx

; 522  : 		return (*_First == 0 ? 0
; 523  : 			: _CSTD strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]

; 524  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 65   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 11.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	{	// construct array with placement at _Where

	push	ebp
	mov	ebp, esp

; 60   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[ebp]

; 61   : 	}

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_ID@@QBEKXZ PROC					; VU_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 162  : 	operator VU_KEY() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 163  : 		return (VU_KEY)(((unsigned short)creator_ << 16) | ((unsigned short)num_)); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BVU_SESSION_ID@@QBEKXZ		; VU_SESSION_ID::operator unsigned long
	movzx	eax, ax
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx]
	or	eax, edx

; 164  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_ID@@QBEKXZ ENDP					; VU_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_ID@@QBE_NABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv74 = -2						; size = 1
tv73 = -1						; size = 1
_rhs$ = 8						; size = 4
??8VU_ID@@QBE_NABV0@@Z PROC				; VU_ID::operator==, COMDAT
; _this$ = ecx

; 104  : 	bool operator == (const VU_ID &rhs) const { 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 105  : 		return (
; 106  : 			num_ == rhs.num_ ? 
; 107  : 			(creator_ == rhs.creator_ ? true : false) : 
; 108  : 			false
; 109  : 		); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@operator
	mov	eax, DWORD PTR _rhs$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??8VU_SESSION_ID@@QBEHABV0@@Z		; VU_SESSION_ID::operator==
	test	eax, eax
	je	SHORT $LN3@operator
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	BYTE PTR tv73[ebp], 0
$LN4@operator:
	mov	cl, BYTE PTR tv73[ebp]
	mov	BYTE PTR tv74[ebp], cl
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	BYTE PTR tv74[ebp], 0
$LN6@operator:
	mov	al, BYTE PTR tv74[ebp]

; 110  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_ID@@QBE_NABV0@@Z ENDP				; VU_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??BVU_SESSION_ID@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BVU_SESSION_ID@@QBEKXZ PROC				; VU_SESSION_ID::operator unsigned long, COMDAT
; _this$ = ecx

; 79   : 	operator unsigned long() const { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 80   : 		return (unsigned long) value_; 

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 81   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??BVU_SESSION_ID@@QBEKXZ ENDP				; VU_SESSION_ID::operator unsigned long
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\zhitao li\documents\visual studio 2012\projects\freefalcon\falclib\include\vutypes.h
;	COMDAT ??8VU_SESSION_ID@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_rhs$ = 8						; size = 4
??8VU_SESSION_ID@@QBEHABV0@@Z PROC			; VU_SESSION_ID::operator==, COMDAT
; _this$ = ecx

; 55   : 	int operator == (const VU_SESSION_ID &rhs) const{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		return (value_ == rhs.value_ ? TRUE : FALSE); 

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 57   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??8VU_SESSION_ID@@QBEHABV0@@Z ENDP			; VU_SESSION_ID::operator==
_TEXT	ENDS
END
